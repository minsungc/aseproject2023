[{"author":"proux01","number":46,"state":"closed","open_date":"2023-03-14T16:55:10Z","update_date":"2023-03-15T08:04:40Z","discussion":[{"author":"fblanqui","date":"2023-03-15T07:00:28Z","comment":"@proux01 I see that you still make commits. Tell me when your PR is ready to be merged."},{"author":"proux01","date":"2023-03-15T07:22:18Z","comment":"@fblanqui it is (I just force-pushed yesterday in the hope to rerun the CI for what was apparently a transient failure, sorry about that)"},{"author":"proux01","date":"2023-03-15T08:04:37Z","comment":"Thanks!"}],"tags":[],"pull_requests":[]},{"author":"andres-erbsen","number":45,"state":"closed","open_date":"2023-02-22T20:53:21Z","update_date":"2023-02-22T21:54:07Z","discussion":[],"tags":[],"pull_requests":[]},{"author":"andres-erbsen","number":44,"state":"closed","open_date":"2023-02-14T19:28:40Z","update_date":"2023-02-15T10:23:50Z","discussion":[],"tags":[],"pull_requests":[]},{"author":"mrhaandi","number":43,"state":"closed","open_date":"2022-07-12T08:33:58Z","update_date":"2022-07-12T10:34:54Z","discussion":[{"author":"fblanqui","date":"2022-07-12T10:34:54Z","comment":"Thanks!"}],"tags":[],"pull_requests":[]},{"author":"ppedrot","number":42,"state":"closed","open_date":"2022-05-10T09:51:01Z","update_date":"2022-06-02T08:48:51Z","discussion":[{"author":"Alizter","date":"2022-05-10T10:39:26Z","comment":"*backwards compatible up to 8.14.\r\n\r\n@fblanqui Unfortunately, apart from completely ignoring the warning (and thus silently switching from #[global] to #[export]) there is no way to keep comparability with <= 8.13."},{"author":"fblanqui","date":"2022-05-19T04:32:12Z","comment":"Hello. I would appreciate very much if you could update the file coq-color.opam as well."},{"author":"ppedrot","date":"2022-05-19T07:12:43Z","comment":"@fblanqui done."},{"author":"ppedrot","date":"2022-05-28T08:23:51Z","comment":"@fblanqui ping"},{"author":"fblanqui","date":"2022-05-28T11:21:06Z","comment":"The CI fails with coq-dev. Do you know why?"},{"author":"fblanqui","date":"2022-05-28T13:43:55Z","comment":"I checked: it compiles with coq/master. What is wrong in https://github.com/fblanqui/color/blob/master/.github/workflows/docker-action.yml?"},{"author":"ppedrot","date":"2022-05-30T12:48:36Z","comment":"No idea. I'd suggest asking on Zulip."},{"author":"Alizter","date":"2022-05-30T12:50:09Z","comment":"cc @erikmd"},{"author":"erikmd","date":"2022-05-30T14:53:33Z","comment":"Hi, thanks for the ping.\r\n\r\nThe non-availability of coqorg/coq:dev is a known issue (cf. e.g. [this stream](https://coq.zulipchat.com/#narrow/stream/237663-coq-community-devs-.26-users/topic/coq.3Adev.20Docker.20tag.20currently.20unavailable/near/282503558) on Zulip)\r\n\r\nFixing this is definitely on my backlog, but I won't be able to look after this before Wednesday evening.\r\n\r\nIn the meantime, you can just replace this line:\r\n\r\nhttps://github.com/fblanqui/color/blob/70f8d37fdaf8c4c973419e0475ccb32020530a30/.github/workflows/docker-action.yml#L21\r\n\r\nwith:\r\n\r\n```yaml\r\n- 'coqorg/coq:dev-ocaml-4.13-flambda'\r\n```"}],"tags":[],"pull_requests":[]},{"author":"Alizter","number":41,"state":"closed","open_date":"2022-05-09T22:43:05Z","update_date":"2022-05-10T09:34:07Z","discussion":[{"author":"fblanqui","date":"2022-05-10T06:58:44Z","comment":"Hello @Alizter . This change does not seem backward compatible with Coq <= 8.13. Is this right?"},{"author":"Alizter","date":"2022-05-10T07:41:10Z","comment":"Hi @fblanqui this is correct."},{"author":"fblanqui","date":"2022-05-10T08:58:43Z","comment":"What's your plan? Are you going to try to find a backward compatible solution?"},{"author":"Alizter","date":"2022-05-10T09:33:06Z","comment":"@fblanqui Unfortunately this one was prepared incorrectly causing some local instances to become global. Another PR will be submitted with a proper patch.\r\n\r\nI have no plans to find a backwards compatible solution, but others have discussed this want on Zulip: https://coq.zulipchat.com/#narrow/stream/237656-Coq-devs-.26-plugin-devs/topic/.5Bdisc.5D.20Make.20hint.20locality.20warning.20an.20error."}],"tags":[],"pull_requests":[]},{"author":"ppedrot","number":40,"state":"closed","open_date":"2022-01-06T17:39:35Z","update_date":"2022-01-06T18:05:54Z","discussion":[{"author":"ppedrot","date":"2022-01-06T17:47:33Z","comment":"This new variant should be backwards compatible."},{"author":"fblanqui","date":"2022-01-06T17:59:50Z","comment":"Thanks @ppedrot !"}],"tags":[],"pull_requests":[]},{"author":"mattam82","number":39,"state":"closed","open_date":"2021-12-14T08:49:56Z","update_date":"2021-12-14T16:24:41Z","discussion":[],"tags":[],"pull_requests":[]},{"author":"clarus","number":38,"state":"closed","open_date":"2021-11-14T14:33:36Z","update_date":"2021-11-16T18:33:57Z","discussion":[{"author":"fblanqui","date":"2021-11-16T18:23:39Z","comment":"Thank you for the issue. It should be fixed in https://github.com/coq/opam-coq-archive/commit/587e1b037181488c2988bb441730dfef998d1939."},{"author":"clarus","date":"2021-11-16T18:33:57Z","comment":"OK thanks!"}],"tags":[],"pull_requests":[]},{"author":"fblanqui","number":37,"state":"closed","open_date":"2021-11-10T13:28:09Z","update_date":"2021-11-10T16:35:10Z","discussion":[{"author":"JasonGross","date":"2021-11-10T16:32:03Z","comment":"Thanks!"},{"author":"fblanqui","date":"2021-11-10T16:35:10Z","comment":"You are welcome."}],"tags":[],"pull_requests":[]},{"author":"SkySkimmer","number":36,"state":"closed","open_date":"2021-11-09T13:30:14Z","update_date":"2021-11-10T12:37:48Z","discussion":[],"tags":[],"pull_requests":[]},{"author":"SkySkimmer","number":35,"state":"closed","open_date":"2021-10-01T17:49:56Z","update_date":"2021-10-01T18:19:53Z","discussion":[{"author":"fblanqui","date":"2021-10-01T18:19:53Z","comment":"Thanks!"}],"tags":[],"pull_requests":[]},{"author":"JasonGross","number":34,"state":"closed","open_date":"2021-08-05T20:03:25Z","update_date":"2021-11-10T13:53:27Z","discussion":[],"tags":[],"pull_requests":[]},{"author":"SkySkimmer","number":33,"state":"closed","open_date":"2021-03-02T11:43:56Z","update_date":"2021-03-02T14:37:47Z","discussion":[{"author":"fblanqui","date":"2021-03-02T14:37:47Z","comment":"Thanks @SkySkimmer !"}],"tags":[],"pull_requests":[]},{"author":"maximedenes","number":32,"state":"closed","open_date":"2020-09-30T22:45:25Z","update_date":"2020-10-02T06:52:06Z","discussion":[{"author":"fblanqui","date":"2020-10-02T06:52:06Z","comment":"Thanks @maximedenes "}],"tags":[],"pull_requests":[]},{"author":"vzaliva","number":31,"state":"closed","open_date":"2020-09-22T20:19:39Z","update_date":"2020-09-24T15:26:07Z","discussion":[{"author":"fblanqui","date":"2020-09-24T15:26:07Z","comment":"Fixed. CoLoR 1.8.0 is now available on opam and compiles with Coq 8.12."}],"tags":[],"pull_requests":[]},{"author":"VincentSe","number":30,"state":"closed","open_date":"2020-08-21T16:58:55Z","update_date":"2020-08-24T17:01:41Z","discussion":[{"author":"fblanqui","date":"2020-08-24T16:37:02Z","comment":"Thanks @VincentSe !"}],"tags":[],"pull_requests":[]},{"author":"jashug","number":29,"state":"closed","open_date":"2020-07-29T17:38:19Z","update_date":"2020-07-30T15:19:05Z","discussion":[{"author":"fblanqui","date":"2020-07-30T08:41:03Z","comment":"Thank you @jashug for your PR!"}],"tags":[],"pull_requests":[]},{"author":"jmadiot","number":28,"state":"closed","open_date":"2020-07-20T18:44:10Z","update_date":"2020-07-22T08:56:31Z","discussion":[{"author":"fblanqui","date":"2020-07-22T08:56:31Z","comment":"Thank you @jmadiot for your PR!"}],"tags":[],"pull_requests":[]},{"author":"olaure01","number":27,"state":"closed","open_date":"2020-05-07T10:19:05Z","update_date":"2020-05-07T12:01:02Z","discussion":[],"tags":[],"pull_requests":[]},{"author":"herbelin","number":26,"state":"closed","open_date":"2020-05-05T07:56:29Z","update_date":"2020-05-05T08:52:11Z","discussion":[{"author":"fblanqui","date":"2020-05-05T08:52:10Z","comment":"Thanks @herbelin !"}],"tags":[],"pull_requests":[]},{"author":"llelf","number":25,"state":"closed","open_date":"2020-05-01T15:35:06Z","update_date":"2020-05-01T17:29:42Z","discussion":[{"author":"fblanqui","date":"2020-05-01T17:29:42Z","comment":"Thank you @llelf !"}],"tags":[],"pull_requests":[]},{"author":"olaure01","number":24,"state":"closed","open_date":"2020-04-29T17:30:33Z","update_date":"2020-04-30T05:04:05Z","discussion":[{"author":"fblanqui","date":"2020-04-30T05:04:05Z","comment":"Thanks @olaure01 !"}],"tags":[],"pull_requests":[]},{"author":"Blaisorblade","number":23,"state":"closed","open_date":"2020-03-15T13:24:29Z","update_date":"2020-03-24T03:46:28Z","discussion":[{"author":"Blaisorblade","date":"2020-03-24T03:46:28Z","comment":"Most of this is made obsolete by d5e10eee218116c466dfa878ee3d997abe7ca247, hence closing."}],"tags":[],"pull_requests":[]},{"author":"vzaliva","number":22,"state":"closed","open_date":"2020-03-13T22:25:49Z","update_date":"2020-03-23T16:48:27Z","discussion":[{"author":"Blaisorblade","date":"2020-03-15T13:39:20Z","comment":"(Caveat: As an outsider, seeing this from the Coq forum) Can't you use `Vbuild_head` instead? (https://github.com/fblanqui/color/compare/f7a4c8a444c54e220c3055a4f4c68a1f214f0a4b..44b6693d71f8ac72b2610f46d97b3c766ffddea5?diff=unified#diff-3802eaffee5b7512dcba958bc4eea1e4R1780). And can you similarly fix your other uses? The statements of those lemmas has not changed.\r\n\r\nIME and IMHO, definitions written using tactics (such as `Vbuild`) such *not* be unfolded directly, but only through unfolding lemmas — direct unfolding is fragile (as you notice) and should be considered as breaking an *abstraction barrier*. Somehow, even this commit is enough to make your code ill-typed: https://github.com/fblanqui/color/pull/23/commits/7573658b9454640274fd3895f994d4163ac422dd (but I'll fix that).\r\nIdeally, `Vbuild` should be made opaque, either via `Opaque` or via stronger means if possible.\r\n\r\nThe author of such a definition should provide such lemmas, and the clients should restrict themselves to using those lemmas. Whether the provided lemmas are sufficient to your needs, not sure, but I don't see anything missing.\r\n\r\nProgram's successor, coq-Equations, even provides automatic support for making definitions opaque and providing unfolding lemmas."},{"author":"fblanqui","date":"2020-03-16T14:33:17Z","comment":"Hi @vzaliva . is the solution proposed by @Blaisorblade satisfying for you?"},{"author":"vzaliva","date":"2020-03-16T16:46:51Z","comment":"By the solution do you mean his pull request or his suggestion to never unfold `Vbuild`?\r\n\r\nAs to PR, I will try his patch (need to compile custom build of coq-color with it). It might help.\r\n\r\nAs to not unfolding, I am not so sure. `Vbuild_spec` provides a clean inductive definition that could be used in induction proofs, etc. I will need to see if I can rework all my proofs to use helper lemmas to avoid unfolding it. I little feel uneasy about working with such a basic definition that should not be unfolded.\r\n"},{"author":"Blaisorblade","date":"2020-03-16T17:26:54Z","comment":"@vzaliva You can ignore my PR, it’s meant for a different problem.\r\n\r\n> Vbuild_spec provides a clean inductive definition that could be used in induction proofs, etc.\r\n\r\nFor an even cleaner inductive definition, maybe you want an unfolding lemma closer to (untested, but inspired from the statements of `Vbuild_head` and `Vbuild_tail`):\r\n```coq\r\nLemma Vbuild_unfold n gen : @Vbuild n gen =\r\n    match n with\r\n      | 0 => Vnil\r\n      | S p => Vcons (gen 0 (lt_O_Sn n)) (@Vbuild p (fun i ip => gen (S i) (lt_n_S ip)))\r\n     end.\r\n```\r\nand then rewrite with `Vbuild_unfold` instead of unfolding. It seems provable from the given lemmas, tho I’d consider exposing it in the library."},{"author":"Blaisorblade","date":"2020-03-16T17:33:45Z","comment":"(And in general, alternative unfolding lemmas could make sense).\r\n\r\n> I little feel uneasy about working with such a basic definition that should not be unfolded.\r\n\r\nSince I’m nobody, I should have mentioned it’s the style in various libraries, starting from math-comp, exactly to avoid the issue you face (implementation details leaking to clients). Otherwise, to enable unfolding `Vbuild_spec` without exposing users to generated code, somebody would have to write the full proof term by hand and keep it stable, which doesn’t sound like a great idea..."},{"author":"vzaliva","date":"2020-03-16T17:49:07Z","comment":"@Blaisorblade thanks for your comments suggestions! They are really appreciated!\r\n\r\nI think the issue boils down to more philosophical question of to what extend library definitions should be opaque. For example, should users ever try to unfold `List.fold_left` from the standard library or only use the library provided lemmas?\r\n\r\n"},{"author":"Blaisorblade","date":"2020-03-16T19:53:49Z","comment":"`fold_left` is transparent *and* hand-written. This one is written using `Program`, so should be opaque. More complicated cases might exist.\r\nMarking `Vbuild_spec` as Opaque would clarify things, if possible, but that's a matter of style and not my call."},{"author":"vzaliva","date":"2020-03-17T20:39:23Z","comment":"To avoid unfolding and dealing with obligations I found this lemma helpful:\r\n\r\n```\r\nLemma Vbuild_Sn (B : Type) (n : nat) (gen : forall i : nat, i < S n -> B):\r\n  @Vbuild B (S n) gen = (gen 0 (Nat.lt_0_succ n))\r\n                          ::\r\n                          Vbuild (fun (i : nat) (ip : i < n) => gen (S i) (lt_n_S ip)).\r\nProof.\r\n  rewrite <- Vbuild_head.\r\n  rewrite <- Vbuild_tail.\r\n  apply VSn_eq.\r\nQed.\r\n```\r\n\r\nMaybe it should be part of the library.\r\n"},{"author":"fblanqui","date":"2020-03-19T09:55:44Z","comment":"Hi @vzaliva . Please have a look at the last version (d5e10eee218116c466dfa878ee3d997abe7ca247) and tell me if it solves your problem."},{"author":"vzaliva","date":"2020-03-19T17:20:11Z","comment":"At this point I've solved my problem by switching to use `Vbuild_Sn` lemma everywhere I used unfolding before. The new definition of Vbuild looks much cleaner, but now it uses convoy pattern which could complicate proofs a little. I do not have a strong preference either way."},{"author":"vzaliva","date":"2020-03-23T16:48:27Z","comment":"I have a workaround (`Vbuild_Sn`) which does the same as unfolding `Vbuild_spec` without having to deal with the obligation. I also see @fblanqui proposed change to `Vbuild` definition which will make this problem obsolete. Hence I am closing this issue with thanks @fblanqui and @Blaisorblade for the help!"}],"tags":[],"pull_requests":[]},{"author":"vbgl","number":21,"state":"closed","open_date":"2020-02-26T13:55:49Z","update_date":"2020-03-19T13:34:20Z","discussion":[{"author":"vbgl","date":"2020-03-11T08:38:24Z","comment":"This is also an overlay for https://github.com/coq/coq/pull/11760"},{"author":"Zimmi48","date":"2020-03-18T16:07:20Z","comment":"@fblanqui In principle, this patch should be backward compatible. Would you mind merging it soon?"},{"author":"fblanqui","date":"2020-03-19T08:12:01Z","comment":"Hi @Zimmi48 . I do not see any result from Travis. Do you know how to get Travis run on your PR?"},{"author":"fblanqui","date":"2020-03-19T08:13:18Z","comment":"Sorry, I found it, but Github doesn't show the result. Do you know what to do on Github to make it show the results of Travis?"},{"author":"Zimmi48","date":"2020-03-19T13:34:20Z","comment":"@fblanqui It seems like a bug of Travis that the status was not reported to GitHub. Many previous PRs did get their CI status reported. Note though that Travis is planning to move away all open source projects from travis-ci.org to travis-ci.com (and the two websites do not report their statuses in the same way). You can request to migrate your repository to travis-ci.com (https://docs.travis-ci.com/user/migrate/open-source-on-travis-ci-com/#existing-open-source-repositories-on-travis-ciorg) and it is likely that it will fix this issue."}],"tags":[],"pull_requests":[]},{"author":"vbgl","number":20,"state":"closed","open_date":"2019-11-05T12:39:45Z","update_date":"2019-11-05T13:18:43Z","discussion":[],"tags":[],"pull_requests":[]},{"author":"vbgl","number":19,"state":"closed","open_date":"2019-09-30T08:02:44Z","update_date":"2019-10-02T12:06:21Z","discussion":[{"author":"fblanqui","date":"2019-10-02T12:05:52Z","comment":"Thanks @vbgl !"}],"tags":[],"pull_requests":[]},{"author":"maximedenes","number":18,"state":"closed","open_date":"2019-07-15T14:27:59Z","update_date":"2019-07-15T14:55:48Z","discussion":[{"author":"fblanqui","date":"2019-07-15T14:55:47Z","comment":"Thanks @maximedenes !"}],"tags":[],"pull_requests":[]},{"author":"vbgl","number":17,"state":"closed","open_date":"2019-03-22T08:53:14Z","update_date":"2019-03-22T09:19:46Z","discussion":[{"author":"fblanqui","date":"2019-03-22T09:19:38Z","comment":"Thanks Vincent!"}],"tags":[],"pull_requests":[]},{"author":"vzaliva","number":16,"state":"closed","open_date":"2019-02-09T21:31:39Z","update_date":"2019-02-11T17:05:14Z","discussion":[{"author":"fblanqui","date":"2019-02-10T15:48:58Z","comment":"Hi Vadim. I was waiting for https://github.com/coq/bignums/issues/17 to \nbe solved. I'm going to do this tomorrow.\n\nLe 09/02/2019 à 22:31, Vadim Zaliva a écrit :\n>\n> Current OPAM release is coq-color-1.5.0 which does not work with \n> Coq-8.9. It is not just OPAM package version check. The source code in \n> release tarball does not compile with Coq-8.9.\n>\n> However, the current state of this git repository compiles under \n> Coq-8.9 without any changes.\n>\n> It would be great to make a new release based on the current git \n> master and push it into OPAM. My project depends on coq-color and I \n> could not upgrade to Coq-8.9 because of this problem. I will be glad \n> to help with the release if needed.\n>\n> —\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub \n> <https://github.com/fblanqui/color/issues/16>, or mute the thread \n> <https://github.com/notifications/unsubscribe-auth/AKWYmRyER4SEG7PMNqedkrvLRidpDFeoks5vLz47gaJpZM4aywCn>.\n>\n"},{"author":"fblanqui","date":"2019-02-11T14:27:44Z","comment":"It's done!"},{"author":"vzaliva","date":"2019-02-11T17:05:14Z","comment":"thanks!"}],"tags":[],"pull_requests":[]},{"author":"vbgl","number":15,"state":"closed","open_date":"2018-11-05T13:18:11Z","update_date":"2018-11-05T15:54:16Z","discussion":[],"tags":[],"pull_requests":[]},{"author":"jashug","number":14,"state":"closed","open_date":"2018-10-26T04:23:51Z","update_date":"2018-10-26T16:22:35Z","discussion":[{"author":"fblanqui","date":"2018-10-26T16:22:35Z","comment":"Thanks!"}],"tags":[],"pull_requests":[]},{"author":"vbgl","number":13,"state":"closed","open_date":"2018-10-19T09:19:30Z","update_date":"2019-03-22T09:22:01Z","discussion":[{"author":"fblanqui","date":"2018-10-19T12:50:39Z","comment":"Hello Vincent. Thank you for your PR but I get some problem with Coq 8.8.1 and master also:\r\n\r\nCOQC Util/Relation/RelUtil.v\r\nFile \"./Util/Relation/RelUtil.v\", line 37, characters 8-13:\r\nError:\r\nSyntax error: 'Equivalent' 'Keys' expected after 'Declare' (in [vernac:command]).\r\nmake[2]: *** [Util/Relation/RelUtil.vo] Error 1\r\nmake[2]: *** Waiting for unfinished jobs....\r\nmake[1]: *** [all] Error 2\r\nmake[1]: Leaving directory `/home/travis/build/fblanqui/color'\r\nmake: *** [default] Error 2\r\n"},{"author":"vbgl","date":"2018-10-19T13:47:26Z","comment":"Indeed. Feel free to drop the commit about scope declarations. This will restore compatibility with version 8.8.2."},{"author":"vbgl","date":"2018-10-22T09:39:19Z","comment":"i’ve just removed the offending commit and tested with current master and the most recent released version (8.8.2)."},{"author":"fblanqui","date":"2018-10-22T14:48:51Z","comment":"For Require Import's inside section, I propose to put them at the beginning of the file. Do not split in two pieces: one Require and then one Import.\r\n\r\nWhy do you remove decidability lemmas on BigZ, etc.? They could be useful, couldn't they?\r\n\r\nAs for the From Coq/CoLoR's, please keep them to avoid potential name conflicts later.\r\n"},{"author":"fblanqui","date":"2018-10-22T15:29:55Z","comment":"I included some of your modifications in f647085a370c5618d6de0e403385094316461782.\r\n"},{"author":"fblanqui","date":"2018-10-22T17:06:51Z","comment":"For Require Import's inside section, I propose to put them at the \nbeginning of the file. Do not split in two pieces: one Require and then \none Import.\n\nWhy do you remove decidability lemmas on BigZ, etc.? They could be \nuseful, couldn't they?\n\nAs for the From Coq/CoLoR's, please keep them to avoid potential name \nconflicts later.\n\n\nLe 22/10/2018 à 12:32, Vincent Laporte a écrit :\n>\n> i’ve just removed the offending commit and tested with current master \n> and the most recent released version (8.8.2).\n>\n> —\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub \n> <https://github.com/fblanqui/color/pull/13#issuecomment-431787181>, or \n> mute the thread \n> <https://github.com/notifications/unsubscribe-auth/AKWYmQGt8LihwxsKiTt01fnManFnIToXks5unZ7BgaJpZM4Xv-28>.\n>\n"},{"author":"vbgl","date":"2018-10-23T06:37:16Z","comment":"Here are some arguments for removing de decidability lemmas on big numbers:\r\n -  this is dead code (never used within the CoLoR library);\r\n -  this is unrelated to rewriting theory and termination;\r\n -  if you think these lemmas are of general interest (beyond their non-usage within this library), they should be proposed for inclusion in the `bignums` library;\r\n -  the proofs make explicit reference to the `Int31` modules, that I would like to remove from Coq."},{"author":"fblanqui","date":"2018-10-23T06:57:28Z","comment":"\nLe 23/10/2018 à 08:37, Vincent Laporte a écrit :\n>\n> Here are some arguments for removing de decidability lemmas on big \n> numbers:\n>\n>   * this is dead code (never used within the CoLoR library);\n>\nThis is not directly used indeed but is useful if one wants to extract \nCoLoR to OCaml. See http://color.inria.fr/rainbow.html.\n\n\n>   * this is unrelated to rewriting theory and termination;\n>   * if you think these lemmas are of general interest (beyond their\n>     non-usage within this library), they should be proposed for\n>     inclusion in the |bignums| library;\n>\nI would be happy if they were included in bignums indeed, like other \nlemmas on lists and vectors for instance. But I currently don't have the \ntime to look after that.\n\n\n>   * the proofs make explicit reference to the |Int31| modules, that I\n>     would like to remove from Coq.\n>\nOk, but I guess that this would be replaced by something similar or \nmoved to bignums, wouldn't it?\n\n"},{"author":"vbgl","date":"2018-10-23T08:09:20Z","comment":"> This is not directly used indeed but is useful if one wants to extract \n> CoLoR to OCaml. See http://color.inria.fr/rainbow.html.\n\nThanks for the pointer. Unfortunately, I could not find any use of these\nlemmas in the code on rainbow. Could you please elaborate on how they\nare used? Thanks.\n\n> Ok, but I guess that this would be replaced by something similar or \n> moved to bignums, wouldn't it?\n> \n\nIndeed, the motivation for removing these libraries is the integration\nof “primitive integers”: 63-bit machine integers directly available in\nthe logic. Nonetheless, it would be simpler if third-party libraries did\nnot directly depend on these libraries.\n"},{"author":"fblanqui","date":"2018-10-23T09:32:38Z","comment":"\nLe 23/10/2018 à 10:09, Vincent Laporte a écrit :\n> > This is not directly used indeed but is useful if one wants to extract\n> > CoLoR to OCaml. See http://color.inria.fr/rainbow.html.\n>\n> Thanks for the pointer. Unfortunately, I could not find any use of these\n> lemmas in the code on rainbow. Could you please elaborate on how they\n> are used? Thanks.\n\nNot much. I cannot remember the details right now. It's a little bit \nold... and not maintained anymore.\n\n\n>\n> > Ok, but I guess that this would be replaced by something similar or\n> > moved to bignums, wouldn't it?\n> >\n>\n> Indeed, the motivation for removing these libraries is the integration\n> of “primitive integers”: 63-bit machine integers directly available in\n> the logic. Nonetheless, it would be simpler if third-party libraries did\n> not directly depend on these libraries.\n>\n>\nWell, it's no problem: the day this is removed from Coq or bignums, I \nwill remove it from CoLoR as well.\n\n\n"},{"author":"vbgl","date":"2018-10-23T10:10:25Z","comment":"Thanks."},{"author":"fblanqui","date":"2019-03-22T09:20:40Z","comment":"@vbgl : shouldn't this PR be closed?"},{"author":"vbgl","date":"2019-03-22T09:22:01Z","comment":"Indeed. Thanks."}],"tags":[],"pull_requests":[]},{"author":"vzaliva","number":12,"state":"closed","open_date":"2018-09-28T19:59:33Z","update_date":"2018-11-07T10:18:12Z","discussion":[{"author":"fblanqui","date":"2018-09-29T08:40:22Z","comment":"It seems to be a problem in coq_makefile because CoLoR is using the Makefile generated by coq_makefile. I added the issue https://github.com/coq/coq/issues/8593 in Coq.\r\n"},{"author":"vzaliva","date":"2018-11-06T17:06:26Z","comment":"The workaround is to disable sandboxing either by `opam init --disable-sandboxing` for new opam or `opam init --reinit --disable-sandboxing` for existing"},{"author":"Zdancewic","date":"2018-11-06T17:54:05Z","comment":"The workaround for installing coq-flocq turned out to be temporarily removing the sandbox wrapping lines from ~/.opam/config.  I'll make a note of this in the installation instructions."},{"author":"fblanqui","date":"2018-11-07T10:18:12Z","comment":"Problem solved in https://github.com/coq/opam-coq-archive/commit/5531d05d4f1d32815c1b2b6397b23403c3751bdc by adding an opam install command. So, no need for disabling sandboxing."}],"tags":[],"pull_requests":[]},{"author":"vbgl","number":11,"state":"closed","open_date":"2018-09-12T09:11:55Z","update_date":"2018-09-12T12:02:16Z","discussion":[{"author":"fblanqui","date":"2018-09-12T10:40:00Z","comment":"Thanks!"}],"tags":[],"pull_requests":[]},{"author":"Zimmi48","number":10,"state":"closed","open_date":"2018-09-03T14:13:55Z","update_date":"2018-09-04T10:06:14Z","discussion":[{"author":"Zimmi48","date":"2018-09-04T08:40:51Z","comment":"For the record, making these warnings fatal breaks compilation with 8.7 and 8.6 because there were more such deprecated aliases in these versions, so I propose to simply remove the build flag, and only fix the fatal warnings in 8.8."},{"author":"fblanqui","date":"2018-09-04T09:57:19Z","comment":"Thanks Théo for your PR!\r\n"}],"tags":[],"pull_requests":[]},{"author":"Zimmi48","number":9,"state":"closed","open_date":"2018-09-02T10:21:49Z","update_date":"2018-09-04T09:58:03Z","discussion":[{"author":"fblanqui","date":"2018-09-03T09:46:59Z","comment":"My Coq Makefile is built using coq_makefile and a generated _CoqProject. \nWhat option should I give to coq_makefile or add into _CoqProject for \ndoing that?\n\n\nLe 02/09/2018 à 12:21, Théo Zimmermann a écrit :\n>\n> Please make your development compile with |-w \n> \"+compatibility-notation\"| to prepare for the Coq 8.9 release. We \n> would appreciate if this could be done ASAP. If you have trouble doing \n> so, please raise your concern at coq/coq#8383 \n> <https://github.com/coq/coq/issues/8383>.\n>\n> —\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub \n> <https://github.com/fblanqui/color/issues/9>, or mute the thread \n> <https://github.com/notifications/unsubscribe-auth/AKWYmWOE_sHuYUrKX1bz-Nw8Fx19rAf5ks5uW7E9gaJpZM4WWjaN>.\n>\n\n"},{"author":"fblanqui","date":"2018-09-03T09:53:52Z","comment":"@Zimmi48 : I added https://github.com/coq/coq/issues/8392."},{"author":"Zimmi48","date":"2018-09-03T11:12:43Z","comment":"Thanks for raising this problem @fblanqui!"},{"author":"fblanqui","date":"2018-09-03T11:20:56Z","comment":"Well, it's just that the variable is not added into Makefile.coq but in Makefile.coq.conf (it is not documented). I'm on the way to fix your request soon."},{"author":"Zimmi48","date":"2018-09-03T11:31:20Z","comment":"@fblanqui Did you manage to make warnings fatal then? How did you do?"},{"author":"fblanqui","date":"2018-09-03T11:40:27Z","comment":"For the moment, I'm just trying to do what you asked as follows:\r\n\r\ndiff --git a/Makefile b/Makefile\r\nindex ca0b4e1..0b8faa1 100644\r\n--- a/Makefile\r\n+++ b/Makefile\r\n@@ -21,7 +21,7 @@ time: Makefile.coq\r\n \r\n config Makefile.coq:\r\n        echo -R . $(LIBNAME) $(VFILES) > _CoqProject\r\n-       coq_makefile -f _CoqProject > Makefile.coq\r\n+       coq_makefile COQEXTRAFLAGS = '-w \\\"+compatibility-notation\\\"' -f _CoqProject -o Makefile.coq\r\n \r\nI still have some warnings. For instance, I have many of these warnings:\r\n\r\nCOQC Term/Lambda/LTerm.v\r\nFile \"./Term/Lambda/LTerm.v\", line 494, characters 2-69:\r\nWarning: Notation _ [=] _ was already used. [notation-overridden,parsing]\r\n\r\nWarning: Notation _ =v _ was already used. [notation-overridden,parsing]\r\nFile \"./MatrixInt/AArcticBasedInt.v\", line 58, characters 2-14:\r\nWarning: Trying to mask the absolute name \"ABI\"!\r\n[masking-absolute-name,deprecated]\r\n\r\nDo you want all warnings to be fatal?\r\n\r\nThanks for giving me some hints on how to eliminate these warnings.\r\n"},{"author":"Zimmi48","date":"2018-09-03T12:14:50Z","comment":">Do you want all warnings to be fatal?\r\n\r\nNot for now, thanks. Of course, it would be better if we could eliminate all warnings, but compatibility-notation is the only one that is needed at the moment.\r\n\r\n>Thanks for giving me some hints on how to eliminate these warnings.\r\n\r\nDo not hesitate to open new issues when these warnings do not give sufficiently detailed explanations of what the problem is and how to solve it."},{"author":"Zimmi48","date":"2018-09-03T12:21:18Z","comment":"Note that commit b043ef8e8d2811cd53e28827fff2634cd5fe4eaa didn't change anything, I still see:\r\n```\r\nFile \"./Term/WithArity/ATrsNorm.v\", line 76, characters 26-37:\r\nWarning: nat_compare is Nat.compare [compatibility-notation,deprecated]\r\nCOQC Term/Lambda/LTerm.v\r\n```"}],"tags":[],"pull_requests":[]},{"author":"Zimmi48","number":8,"state":"closed","open_date":"2018-08-01T18:13:38Z","update_date":"2018-08-20T09:16:58Z","discussion":[{"author":"fblanqui","date":"2018-08-20T09:16:58Z","comment":"Fixed by df96149639766907b33e1b308cbdb6a410ff2de2. Thank you!"}],"tags":[],"pull_requests":[]},{"author":"ppedrot","number":7,"state":"closed","open_date":"2018-05-24T15:48:55Z","update_date":"2018-05-24T19:45:14Z","discussion":[{"author":"fblanqui","date":"2018-05-24T19:45:14Z","comment":"Thank you very much @ppedrot !"}],"tags":[],"pull_requests":[]},{"author":"ejgallego","number":6,"state":"closed","open_date":"2018-05-14T16:24:31Z","update_date":"2018-05-24T19:45:05Z","discussion":[],"tags":[],"pull_requests":[]},{"author":"Zimmi48","number":5,"state":"closed","open_date":"2018-05-11T21:55:06Z","update_date":"2018-05-14T08:27:02Z","discussion":[{"author":"fblanqui","date":"2018-05-14T08:19:18Z","comment":"Thank you Théo! Instead, I moved nested lemmas outside with commit 2d02c60.\r\n"},{"author":"Zimmi48","date":"2018-05-14T08:27:02Z","comment":"Thanks!"}],"tags":[],"pull_requests":[]},{"author":"vzaliva","number":4,"state":"closed","open_date":"2018-05-03T23:38:40Z","update_date":"2018-05-04T13:30:31Z","discussion":[{"author":"fblanqui","date":"2018-05-04T11:48:04Z","comment":"Thanks Vadim. I found the problem. The downloaded file is not the write one, because of a bug in ./create_dist (I forgot to change the code when I moved CoLoR to Github). I'm going to fix this."},{"author":"fblanqui","date":"2018-05-04T13:30:31Z","comment":"It is fixed now."}],"tags":[],"pull_requests":[]},{"author":"vzaliva","number":3,"state":"closed","open_date":"2018-05-02T18:13:36Z","update_date":"2018-05-02T19:59:22Z","discussion":[{"author":"fblanqui","date":"2018-05-02T19:59:22Z","comment":"Should be fixed by https://github.com/coq/opam-coq-archive/commit/f11043a00b19be07fa3ab1ad9c877134977f9d59."}],"tags":[],"pull_requests":[]},{"author":"mattam82","number":2,"state":"closed","open_date":"2018-02-27T13:59:45Z","update_date":"2018-02-27T15:33:56Z","discussion":[{"author":"fblanqui","date":"2018-02-27T14:50:09Z","comment":"Thanks @mattam82 !"}],"tags":[],"pull_requests":[]},{"author":"ejgallego","number":1,"state":"closed","open_date":"2017-12-08T01:33:14Z","update_date":"2018-02-27T16:19:52Z","discussion":[{"author":"ejgallego","date":"2017-12-08T01:36:29Z","comment":"Example https://travis-ci.org/ejgallego/color/builds/"},{"author":"ejgallego","date":"2017-12-23T19:01:06Z","comment":"@fblanqui ping"},{"author":"fblanqui","date":"2018-02-27T15:13:15Z","comment":"Thanks @ejgallego !\r\n"}],"tags":[],"pull_requests":[]}]