[{"author":"palmskog","number":35,"state":"closed","open_date":"2022-11-26T14:52:48Z","update_date":"2022-11-27T09:18:56Z","discussion":[],"tags":[],"pull_requests":[]},{"author":"palmskog","number":34,"state":"closed","open_date":"2022-11-26T14:36:22Z","update_date":"2022-11-27T09:18:47Z","discussion":[],"tags":[],"pull_requests":[]},{"author":"aleloi","number":33,"state":"closed","open_date":"2022-08-05T14:43:29Z","update_date":"2022-11-25T13:22:10Z","discussion":[],"tags":[],"pull_requests":[]},{"author":"shinnar","number":32,"state":"closed","open_date":"2022-06-22T12:26:00Z","update_date":"2022-07-06T11:45:51Z","discussion":[],"tags":[],"pull_requests":[]},{"author":"palmskog","number":31,"state":"closed","open_date":"2021-12-26T11:34:31Z","update_date":"2021-12-26T11:48:21Z","discussion":[],"tags":[],"pull_requests":[]},{"author":"palmskog","number":30,"state":"closed","open_date":"2021-12-25T21:42:53Z","update_date":"2021-12-26T09:27:36Z","discussion":[],"tags":[],"pull_requests":[]},{"author":"palmskog","number":29,"state":"closed","open_date":"2021-11-04T17:37:22Z","update_date":"2021-11-15T10:37:04Z","discussion":[],"tags":[],"pull_requests":[]},{"author":"palmskog","number":28,"state":"closed","open_date":"2021-11-03T10:34:27Z","update_date":"2021-11-15T10:28:36Z","discussion":[{"author":"palmskog","date":"2021-11-15T09:39:23Z","comment":"@jmadiot can I merge this and #29? Content should be uncontroversial."},{"author":"jmadiot","date":"2021-11-15T10:27:25Z","comment":"@palmskog sorry, I missed those. Yes, you can go ahead and merge this type of PR without waiting for me."}],"tags":[],"pull_requests":[]},{"author":"palmskog","number":27,"state":"closed","open_date":"2021-08-10T22:47:51Z","update_date":"2021-08-20T14:40:47Z","discussion":[],"tags":[],"pull_requests":[]},{"author":"palmskog","number":26,"state":"closed","open_date":"2021-01-14T16:33:39Z","update_date":"2021-01-14T16:46:38Z","discussion":[],"tags":[],"pull_requests":[]},{"author":"CohenCyril","number":25,"state":"closed","open_date":"2021-01-14T11:37:50Z","update_date":"2021-01-14T15:26:18Z","discussion":[],"tags":[],"pull_requests":[]},{"author":"CohenCyril","number":24,"state":"closed","open_date":"2021-01-14T09:33:05Z","update_date":"2021-01-14T10:50:28Z","discussion":[{"author":"CohenCyril","date":"2021-01-14T09:38:28Z","comment":"Oops, I thought the index.html was automatically generated from the .v files, but I see some external links. Let's do an external link for Abel as well."},{"author":"jmadiot","date":"2021-01-14T10:08:42Z","comment":"Indeed, the .v files are only here for formalisations that are not hosted elsewhere."}],"tags":[],"pull_requests":[]},{"author":"palmskog","number":23,"state":"closed","open_date":"2021-01-02T14:52:32Z","update_date":"2021-01-04T10:45:12Z","discussion":[],"tags":[],"pull_requests":[]},{"author":"FabianWolff","number":22,"state":"closed","open_date":"2020-12-22T14:49:34Z","update_date":"2021-01-14T11:37:00Z","discussion":[{"author":"jmadiot","date":"2020-12-23T17:50:52Z","comment":"Nice!\r\n\r\nI'm struggling to convince myself that `drm_construct` coincides with the standard definition. Maybe a statement with something like `filter is_derangement (permutations n)` instead of `drm_construct n` would be clearer, what do you think?\r\n\r\n`is_derangement` may be `forallbi (fun i j => negb (i =? j))` with `forallbi` an indexed version of `forallb`\r\n\r\nIf so, do you think it would be easy to use your `drmcorrect.v` and `drmcomplete.v` files to prove that new statement?"},{"author":"FabianWolff","date":"2020-12-23T20:14:15Z","comment":"You're right, `drm_construct` does not coincide clearly with the standard definition; rather, it's optimized for easy counting (it models the recursive formula `!n = (n - 1)(!(n - 1) + !(n - 2))`). A more conventional definition of derangements as bijective, fixpoint-free mappings on the first `n` natural numbers is given by `drm` (it's admittedly somewhat redundant, because it made the proofs easier for me):\r\n\r\n```Coq\r\nDefinition drm (m: nmap nat) (n: nat) :=\r\n  card m = n /\\\r\n  (forall k k' v, MapsTo k v m -> MapsTo k' v m -> k = k') /\\\r\n  (forall k v, MapsTo k v m -> k <> v /\\ k < n /\\ v < n) /\\\r\n  (forall k, k < n -> (exists v, MapsTo k v m) /\\\r\n                      (exists k', MapsTo k' k m)).\r\n```\r\n\r\nTheorems `drm_construct_{correct,complete}` prove that `drm_construct n` produces exactly those maps `m` where `drm m n`.\r\n\r\nIn hindsight, I agree that it probably would have been easier to work with permutations from the start (rather than maps), but as I said, the project was largely a learning experience for me."},{"author":"jmadiot","date":"2021-01-14T11:37:00Z","comment":"Yes, I now convinced myself that `drm` is what we want.\r\n\r\nI was not suggesting to redo all the formalisation from the start using permutations: I was only hoping there was a simple way to use your existing formalisation to prove an additional theorem about permutations. That would make it easier to reuse and to understand. No worries if you don't see such a simple way."}],"tags":[],"pull_requests":[]},{"author":"palmskog","number":21,"state":"closed","open_date":"2020-11-23T01:18:33Z","update_date":"2020-11-24T13:31:15Z","discussion":[],"tags":[],"pull_requests":[]},{"author":"palmskog","number":20,"state":"closed","open_date":"2020-10-22T18:34:24Z","update_date":"2020-10-23T09:48:49Z","discussion":[],"tags":[],"pull_requests":[]},{"author":"palmskog","number":19,"state":"closed","open_date":"2020-10-21T19:55:55Z","update_date":"2020-10-21T20:46:24Z","discussion":[],"tags":[],"pull_requests":[]},{"author":"palmskog","number":18,"state":"closed","open_date":"2020-10-20T06:50:35Z","update_date":"2020-10-20T17:18:16Z","discussion":[{"author":"jmadiot","date":"2020-10-20T12:37:06Z","comment":"I worry it would make the statements harder to understand: the previous links were pointing to coqdoc documentations where each identifier/notation has a link to its definition (to other files and to the stdlib), which I find very useful when trying to understand the statement. However the previous links were to an older version of coqtail, which, even though it does not really change much, is not ideal. I wonder if there is a standard and simple solution where we could get an automatically up-to-date documentation in coqtail-math? I'm sure it is possible in theory but I don't want it to be a mess (the way we had the documentation set up in coqtail was using coqdoc and then running a script on the generated files)."},{"author":"palmskog","date":"2020-10-20T15:04:06Z","comment":"The reason I link to the GitHub files is because they actually contain the proof scripts in executable form (i.e., are reproducible for proof checking), while copy-pasting coqdoc HTML invariably results in a mess. Moreover, unless one sets up coqdoc generation on each commit (which is possible but has many technical hurdles), the HTML is likely to be stale with respect to a modern version of Coq."},{"author":"palmskog","date":"2020-10-20T15:48:08Z","comment":"@jmadiot we are working on automation for coqdoc generation, you can see the discussion [here](https://github.com/coq/bot/issues/85). However, this is still some time away, so my suggestion is to merge this in the meantime (to have canonical references) and circle back to this topic later."},{"author":"jmadiot","date":"2020-10-20T17:16:09Z","comment":"I don't think people would consider copy-pasting HTML (even copy-pasting raw text rarely works due to required Requires) the documentation is for navigation, and finding the repository from the documentation is easy. Nevertheless I'll merge this and then maybe try to get a recent coqdoc version to provide an additional link."}],"tags":[],"pull_requests":[]},{"author":"palmskog","number":17,"state":"closed","open_date":"2020-10-13T10:47:01Z","update_date":"2020-10-13T11:21:17Z","discussion":[],"tags":[],"pull_requests":[]},{"author":"palmskog","number":16,"state":"closed","open_date":"2020-10-10T23:11:45Z","update_date":"2020-10-12T10:02:55Z","discussion":[],"tags":[],"pull_requests":[]},{"author":"palmskog","number":15,"state":"closed","open_date":"2020-09-14T12:14:52Z","update_date":"2020-10-21T20:45:03Z","discussion":[{"author":"jmadiot","date":"2020-09-14T14:19:14Z","comment":"Sure, that's probably best."}],"tags":[],"pull_requests":[]},{"author":"palmskog","number":14,"state":"closed","open_date":"2020-09-12T09:55:59Z","update_date":"2020-09-14T08:23:25Z","discussion":[],"tags":[],"pull_requests":[]},{"author":"fredericchardard","number":13,"state":"closed","open_date":"2020-09-07T14:29:22Z","update_date":"2020-09-08T10:24:18Z","discussion":[],"tags":[],"pull_requests":[]},{"author":"fredericchardard","number":12,"state":"closed","open_date":"2020-09-03T23:26:36Z","update_date":"2020-09-07T13:59:13Z","discussion":[{"author":"palmskog","date":"2020-09-04T02:58:47Z","comment":"To make CI pass, please edit `_CoqProject` to reflect the changed filename (`cardan_ferrari.v` instead of `cardan3.v`)."},{"author":"fredericchardard","date":"2020-09-04T09:24:00Z","comment":"I have changed _CoqProject and README.md files accordingly."},{"author":"palmskog","date":"2020-09-05T09:57:28Z","comment":"This looks good to me, I can merge unless @jmadiot has comments?"},{"author":"jmadiot","date":"2020-09-07T13:59:13Z","comment":"Nice! @fredericchardard do you want me to change the date from \"2017\" to \"2017-2020\" in the .v's header license as well? (Or you can make a PR)"}],"tags":[],"pull_requests":[]},{"author":"palmskog","number":11,"state":"closed","open_date":"2020-09-01T14:34:47Z","update_date":"2020-09-14T09:00:32Z","discussion":[{"author":"ybertot","date":"2020-09-11T08:51:24Z","comment":"The code is available now in https://github.com/ybertot/HighSchoolGeometry/tree/adding-ptolemy, pending review and integration in https://github.com/coq-community/HighSchoolGeometry"},{"author":"jmadiot","date":"2020-09-14T09:00:31Z","comment":"Thank you @ybertot and Tuan-Minh Pham for replying so quickly :)"}],"tags":[],"pull_requests":[]},{"author":"palmskog","number":10,"state":"closed","open_date":"2020-09-01T14:15:09Z","update_date":"2020-09-01T19:57:32Z","discussion":[],"tags":[],"pull_requests":[]},{"author":"palmskog","number":9,"state":"closed","open_date":"2020-09-01T13:05:23Z","update_date":"2020-09-01T14:45:14Z","discussion":[{"author":"jmadiot","date":"2020-09-01T14:45:14Z","comment":"there were two small admits (my bad), I just pushed a fix"}],"tags":[],"pull_requests":[]},{"author":"palmskog","number":8,"state":"open","open_date":"2020-08-31T22:38:44Z","update_date":"2022-12-09T18:59:09Z","discussion":[{"author":"jmadiot","date":"2020-09-01T09:35:50Z","comment":"Note that the content is messier than Lean's list, since there is some formatted html (text with several links per entry), and the statement itself, which may require other escape sequences and addition of some escape sequences when translating to HTML. I'm not sure a JSON or YAML file would be less huge or easier to edit, since there is now one more level of indirection? I initially used a database, and then switched to one html file with much satisfaction.\r\n\r\nI'm not against it, I just wanted to mention the complications."},{"author":"jmadiot","date":"2022-12-09T18:34:12Z","comment":"f3f9cd17a03894031dd908f9131afdc4b797c5cb should solve this issue with a few yaml files, although the main one is still big. I guess removing index.html from the repo would be best since it is generated, but I've kept it as it is more practical for me for now."},{"author":"palmskog","date":"2022-12-09T18:58:27Z","comment":"There's also the possibility of generating `index.html` (and possibly other files) via GitHub Actions continuous integration and committing it to a specific branch, say `gh-pages`, for each commit to the `master` branch. To give an example, we generate JavaScript from Coq/OCaml and deploy it to the `gh-pages` branch in the Sudoku project ([generated file](https://github.com/coq-community/sudoku/blob/gh-pages/Sudoku.js), [GitHub Actions configuration](https://github.com/coq-community/sudoku/blob/master/.github/workflows/build-js.yml))."}],"tags":[],"pull_requests":[]},{"author":"palmskog","number":7,"state":"closed","open_date":"2020-08-31T21:52:55Z","update_date":"2020-09-01T09:46:05Z","discussion":[],"tags":[],"pull_requests":[]},{"author":"palmskog","number":6,"state":"closed","open_date":"2020-08-31T20:01:24Z","update_date":"2020-08-31T21:50:46Z","discussion":[],"tags":[],"pull_requests":[]},{"author":"jmadiot","number":5,"state":"closed","open_date":"2020-08-31T19:52:38Z","update_date":"2021-01-14T11:57:25Z","discussion":[{"author":"Zimmi48","date":"2020-11-25T18:33:11Z","comment":"coq-100-theorems does sound better than coq100 to me!"},{"author":"jmadiot","date":"2021-01-14T11:57:24Z","comment":"Well, coq-100-theorems it now is."}],"tags":[],"pull_requests":[]},{"author":"palmskog","number":4,"state":"closed","open_date":"2020-08-27T13:35:26Z","update_date":"2020-08-31T19:35:22Z","discussion":[],"tags":[],"pull_requests":[]},{"author":"roglo","number":3,"state":"closed","open_date":"2017-04-16T09:20:23Z","update_date":"2017-04-18T09:40:10Z","discussion":[],"tags":[],"pull_requests":[]},{"author":"Zimmi48","number":2,"state":"closed","open_date":"2017-01-25T15:34:29Z","update_date":"2017-02-20T10:42:49Z","discussion":[{"author":"jmadiot","date":"2017-01-25T15:49:03Z","comment":"Thanks! Any reason for K rather than R?"},{"author":"Zimmi48","date":"2017-01-25T16:06:14Z","comment":"Actually the complete statement is:\r\n```\r\npuiseux_series_algeb_closed\r\n     : ∀ (α : Type) (R : ring α) (K : field R),\r\n       algeb_closed_field K\r\n       → ∀ pol : polynomial (puiseux_series α),\r\n         degree (ps_zerop K) pol ≥ 1\r\n         → ∃ s : puiseux_series α, (ps_pol_apply pol s = 0)%ps\r\n```\r\nThe statement of the theorem appeared in a section, thus `K` was not explicitly defined.\r\nDaniel de Rauglaudre explained to me that `R` became `K` following notation changes.\r\nI am going to update the PR."},{"author":"jmadiot","date":"2017-01-25T16:15:49Z","comment":"Nice! Thank you."}],"tags":[],"pull_requests":[]},{"author":"jnarboux","number":1,"state":"closed","open_date":"2015-10-13T08:22:33Z","update_date":"2015-12-10T21:42:40Z","discussion":[{"author":"jmadiot","date":"2015-10-13T14:47:04Z","comment":"Thank you Julien!\n\nSome questions:\n1. could you check the statement of Desargues’s Theorem? I don't find it in [here](https://github.com/GeoCoq/GeoCoq/blob/master/Ch13_6_Desargues_Hessenberg.v) and it might just be copy-pasted from the previous statement.\n2. Did Frédérique Guilhot prove #4 and #65 before GeoCoq? (I try to keep a chronological order.)\n3. If you push other commits, while you're at it, could you remove line 1283 and 1284? (useless `</pre></p>`)\n"},{"author":"jnarboux","date":"2015-10-28T10:37:58Z","comment":"I updated the links to the latest release of GeoCoq and added the statements for Desargues.\n"}],"tags":[],"pull_requests":[]}]