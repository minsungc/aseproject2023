[{"author":"Casteran","number":147,"state":"open","open_date":"2023-03-23T19:36:01Z","update_date":"2023-04-11T09:40:53Z","discussion":[],"tags":[],"pull_requests":[]},{"author":"Casteran","number":146,"state":"closed","open_date":"2023-03-23T17:50:14Z","update_date":"2023-03-23T20:00:49Z","discussion":[],"tags":[],"pull_requests":[]},{"author":"Casteran","number":145,"state":"closed","open_date":"2023-03-23T13:53:32Z","update_date":"2023-03-23T17:49:59Z","discussion":[],"tags":[],"pull_requests":[]},{"author":"Casteran","number":144,"state":"closed","open_date":"2023-03-16T07:08:39Z","update_date":"2023-03-16T08:43:26Z","discussion":[],"tags":[],"pull_requests":[]},{"author":"Casteran","number":143,"state":"closed","open_date":"2023-02-25T16:22:03Z","update_date":"2023-03-23T20:01:46Z","discussion":[],"tags":[],"pull_requests":[]},{"author":"Casteran","number":142,"state":"closed","open_date":"2023-02-13T16:32:52Z","update_date":"2023-03-16T07:09:03Z","discussion":[],"tags":[],"pull_requests":[]},{"author":"Zimmi48","number":141,"state":"open","open_date":"2023-01-04T09:18:38Z","update_date":"2023-01-04T09:34:52Z","discussion":[],"tags":[],"pull_requests":[]},{"author":"palmskog","number":140,"state":"closed","open_date":"2022-12-21T18:33:52Z","update_date":"2022-12-21T19:29:48Z","discussion":[],"tags":[],"pull_requests":[]},{"author":"Casteran","number":139,"state":"closed","open_date":"2022-11-18T17:03:58Z","update_date":"2022-12-05T19:49:26Z","discussion":[],"tags":[],"pull_requests":[]},{"author":"palmskog","number":138,"state":"closed","open_date":"2022-10-23T07:19:41Z","update_date":"2022-10-28T09:15:49Z","discussion":[{"author":"Zimmi48","date":"2022-10-23T10:37:35Z","comment":"Yes, I will take care of this."},{"author":"palmskog","date":"2022-10-25T13:25:10Z","comment":"@Zimmi48 I know you're busy, but just another ping here since hopefully this is not too much work. WIth Nix CI done and PR merged, I can take care of repo archiving and so on."},{"author":"Zimmi48","date":"2022-10-25T13:50:32Z","comment":"Yes, sorry for the delay. I was indeed planning this for today."},{"author":"Casteran","date":"2022-10-25T17:54:46Z","comment":"Thanks @palmskog and @Zimmi48 !!!\r\n"}],"tags":[],"pull_requests":[]},{"author":"palmskog","number":137,"state":"closed","open_date":"2022-10-06T19:44:50Z","update_date":"2022-10-07T07:59:14Z","discussion":[],"tags":[],"pull_requests":[]},{"author":"Casteran","number":136,"state":"closed","open_date":"2022-10-04T17:56:56Z","update_date":"2022-10-08T16:08:59Z","discussion":[{"author":"Casteran","date":"2022-10-07T17:25:52Z","comment":"OK for merging."}],"tags":[],"pull_requests":[]},{"author":"Zimmi48","number":135,"state":"closed","open_date":"2022-10-01T17:20:03Z","update_date":"2022-10-01T18:15:20Z","discussion":[{"author":"Zimmi48","date":"2022-10-01T17:33:38Z","comment":"This does fix the build of Goedel, but it looks like the nixpkgs update broke the build-doc job. I will try to do without it to be able to move forward with it and investigate the build-doc issue separately."}],"tags":[],"pull_requests":[]},{"author":"Casteran","number":134,"state":"closed","open_date":"2022-08-10T15:15:15Z","update_date":"2022-08-31T06:01:27Z","discussion":[{"author":"Casteran","date":"2022-08-30T09:36:47Z","comment":"fixed a few 8.16 deprecation warnings. We will resume this task in master."}],"tags":[],"pull_requests":[]},{"author":"Zimmi48","number":133,"state":"closed","open_date":"2022-07-25T18:39:24Z","update_date":"2022-07-26T09:45:06Z","discussion":[],"tags":[],"pull_requests":[]},{"author":"Casteran","number":132,"state":"closed","open_date":"2022-07-23T08:20:35Z","update_date":"2022-07-24T16:10:07Z","discussion":[{"author":"Casteran","date":"2022-07-24T16:07:09Z","comment":"Partial fix of 8.16 deprecation warnings"}],"tags":[],"pull_requests":[]},{"author":"Casteran","number":131,"state":"closed","open_date":"2022-07-20T15:26:49Z","update_date":"2022-10-28T09:16:06Z","discussion":[],"tags":[],"pull_requests":[]},{"author":"Casteran","number":130,"state":"closed","open_date":"2022-05-17T15:40:14Z","update_date":"2022-05-20T14:20:26Z","discussion":[{"author":"Casteran","date":"2022-05-19T17:42:29Z","comment":"I fixed warnings about deprecated Div2 and Max"},{"author":"palmskog","date":"2022-05-19T20:46:15Z","comment":"@Casteran this looks good to go, do you want me to merge and make a release (version 0.9?)"},{"author":"Casteran","date":"2022-05-20T05:04:01Z","comment":"> \r\n\r\n\r\n\r\n> \r\n\r\n\r\n\r\n> @Casteran this looks good to go, do you want me to merge and make a release (version 0.9?)\r\n\r\nOK, thank you very much !"}],"tags":[],"pull_requests":[]},{"author":"palmskog","number":129,"state":"open","open_date":"2022-04-07T10:23:21Z","update_date":"2022-04-07T12:25:42Z","discussion":[{"author":"Zimmi48","date":"2022-04-07T12:19:58Z","comment":"Thanks for the summary. I hadn't followed these changes closely. I'll try to reflect them in nixpkgs and Nix CI later."},{"author":"palmskog","date":"2022-04-07T12:25:42Z","comment":"Thanks! Note that the Gaia Schütte package only depends on Dune, Coq, and mathcomp-ssreflect (i.e., mathcomp-algebra is no longer a dependency)."}],"tags":[],"pull_requests":[]},{"author":"palmskog","number":128,"state":"closed","open_date":"2022-03-28T13:07:34Z","update_date":"2022-03-28T13:50:57Z","discussion":[],"tags":[],"pull_requests":[]},{"author":"palmskog","number":127,"state":"closed","open_date":"2022-03-25T16:26:26Z","update_date":"2022-03-26T17:49:00Z","discussion":[{"author":"palmskog","date":"2022-03-25T16:29:24Z","comment":"CI is apparently not triggering due to ongoing GitHub issues, I will force-push at some later point."},{"author":"Casteran","date":"2022-03-26T07:51:21Z","comment":"@palmskog  Looks like there are issues with `rewrite ... in ...` in Coq 8.13.\r\nShould I remove all occurrences of this pattern in `theories/gaia/`  (if it's bad SSR style) ?  \r\nAt least (equivalence rewritings ( https://github.com/coq/coq/issues/12011 )) ?"},{"author":"palmskog","date":"2022-03-26T10:12:02Z","comment":"@Casteran indeed, `rewrite ... in ...` is not an idiom recommended in the SSReflect world (it indicates inadequate context management via `move`). However, rather than fixing this in the PR, maybe we can merge the PR? And you can fix it at some later point, or you can ask me to drop support for 8.13 in CI."},{"author":"Casteran","date":"2022-03-26T10:42:36Z","comment":"> @Casteran indeed, `rewrite ... in ...` is not an idiom recommended in the SSReflect world (it indicates inadequate context management via `move`). However, rather than fixing this in the PR, maybe we can merge the PR? And you can fix it at some later point, or you can ask me to drop support for 8.13 in CI.\r\n\r\nWell, I think it'd be better to respect SSReflect's idioms as much as possible.\r\nSo, you propose to merge into master, then I replace in priority the `rewrite ... in` which deal with setoids, then the others. For a few days, I will have 8.13 failures.\r\nRight?\r\n"},{"author":"palmskog","date":"2022-03-26T10:48:58Z","comment":"@Casteran usually it's a good idea to have a green CI. I'm thinking we could just disable the Docker CI for 8.13 if you don't mind, then re-enable it once you fix the `rewriting .. in` (ping me in the pull request)."},{"author":"Casteran","date":"2022-03-26T17:49:00Z","comment":"@palmskog I just removed fifty occurrences of `rewrite ... in ...` in the Gaia-Bridge files. The result isn't pretty, but next weeks I will work on these files:\r\n   - improve the use of `move` and derivates \r\n   - make some decidable predicates boolean functions (e.g. `path`)\r\nWhen it looks better, we may make and advertise a `1.0` release ..."}],"tags":[],"pull_requests":[]},{"author":"Casteran","number":126,"state":"closed","open_date":"2022-03-23T10:42:02Z","update_date":"2022-03-25T13:20:06Z","discussion":[],"tags":[],"pull_requests":[]},{"author":"Casteran","number":125,"state":"closed","open_date":"2022-03-05T13:56:28Z","update_date":"2022-03-08T14:28:20Z","discussion":[{"author":"Casteran","date":"2022-03-07T12:48:13Z","comment":"Still in progress ..."},{"author":"Casteran","date":"2022-03-08T13:58:01Z","comment":"Rename `hydra-battles` constants using `gaia`'s conventions (in progress)"}],"tags":[],"pull_requests":[]},{"author":"Casteran","number":124,"state":"closed","open_date":"2022-03-02T09:48:15Z","update_date":"2022-03-02T10:09:05Z","discussion":[],"tags":[],"pull_requests":[]},{"author":"Zimmi48","number":123,"state":"closed","open_date":"2022-02-21T15:31:16Z","update_date":"2022-02-21T16:17:36Z","discussion":[],"tags":[],"pull_requests":[]},{"author":"Zimmi48","number":122,"state":"closed","open_date":"2022-02-21T14:19:28Z","update_date":"2022-02-21T15:03:50Z","discussion":[{"author":"Zimmi48","date":"2022-02-21T14:35:13Z","comment":"I should have tested exactly the file that I would be submitting to nixpkgs because now I discovered that I made a mistake and we will still need an overlay here until this is fixed in nixpkgs."}],"tags":[],"pull_requests":[]},{"author":"Casteran","number":121,"state":"closed","open_date":"2022-02-16T13:44:39Z","update_date":"2022-02-16T14:24:24Z","discussion":[],"tags":[],"pull_requests":[]},{"author":"Casteran","number":120,"state":"closed","open_date":"2022-02-11T13:54:33Z","update_date":"2022-11-24T15:06:46Z","discussion":[],"tags":[],"pull_requests":[]},{"author":"Casteran","number":119,"state":"closed","open_date":"2022-02-02T16:29:33Z","update_date":"2022-02-17T11:29:57Z","discussion":[{"author":"Zimmi48","date":"2022-02-03T14:11:00Z","comment":"Done. Note that I've introduced a Nix overlay for hydra-battles, but we can remove it as soon as we update the derivation file in nixpkgs to add the LibHyps dependency."},{"author":"palmskog","date":"2022-02-03T16:53:10Z","comment":"From my side, it looks like all failures are now spurious, and this could be changed to a regular PR and then merged @Casteran "},{"author":"Casteran","date":"2022-02-03T17:52:14Z","comment":"Thanks, @palmskog and @Zimmi48.\r\nI plan to keep temporarily withLibHyps as a separate branch, the time to experiment and define appropriate auto-renaming tactics. Meanwhile, I'm working also on the gaia-hydras part (in ssreflect style)\r\n"}],"tags":[],"pull_requests":[]},{"author":"Casteran","number":118,"state":"closed","open_date":"2022-01-30T17:44:22Z","update_date":"2022-01-30T18:05:27Z","discussion":[],"tags":[],"pull_requests":[]},{"author":"Casteran","number":117,"state":"closed","open_date":"2022-01-28T10:43:19Z","update_date":"2022-02-10T21:30:05Z","discussion":[],"tags":[],"pull_requests":[]},{"author":"Casteran","number":116,"state":"closed","open_date":"2022-01-24T19:55:25Z","update_date":"2022-01-25T15:18:04Z","discussion":[{"author":"Casteran","date":"2022-01-24T21:07:00Z","comment":"Still a lot of warnings to fix (deprecated arith libraries).  \r\nTo do later ..."},{"author":"Casteran","date":"2022-01-25T11:43:23Z","comment":"> \r\n\r\nThanks!  Note that `Terms_Term_rec_full`'s Arguments are specified twice in `fol.v`, once inside a section, and once globally, with different variables. It took me a lot of `About`s to understand some error messages !"}],"tags":[],"pull_requests":[]},{"author":"Casteran","number":115,"state":"closed","open_date":"2022-01-21T13:31:23Z","update_date":"2022-02-10T21:30:08Z","discussion":[],"tags":[],"pull_requests":[]},{"author":"Casteran","number":114,"state":"closed","open_date":"2022-01-14T07:45:03Z","update_date":"2022-01-15T10:49:20Z","discussion":[],"tags":[],"pull_requests":[]},{"author":"Casteran","number":113,"state":"open","open_date":"2022-01-12T07:16:09Z","update_date":"2022-01-16T15:12:55Z","discussion":[{"author":"Zimmi48","date":"2022-01-13T07:22:32Z","comment":"Cc @cpitclaudel "},{"author":"cpitclaudel","date":"2022-01-13T13:54:37Z","comment":"Probably a font issue?  The log will say something like this:\r\n\r\n```\r\nMissing character: There is no λ (U+03BB) in font [lmmono10-regular]:!\r\n{/var/lib/texmf/fonts/map/pdftex/updmap/pdftex.map}\r\nMissing character: There is no α (U+03B1) in font [lmmono10-regular]:!\r\n] (./test.aux))\r\n```\r\n\r\nCan you check?"},{"author":"Casteran","date":"2022-01-13T14:26:27Z","comment":"Yes !\r\nMissing character: There is no ω (U+03C9) in font [lmmono10-regular]:!\r\n\r\nI've got also some similar messages in the addition-chains chapter:\r\n(./movies/snippets/Addition_Chains/parametricDef.tex) [249\r\nMissing character: There is no ₁ (U+2081) in font [lmmono9-regular]:!\r\nMissing character: There is no ₂ (U+2082) in font [lmmono9-regular]:!\r\nMissing character: There is no ₁ (U+2081) in font [lmmono9-regular]:!\r\nMissing character: There is no ₂ (U+2082) in font [lmmono9-regular]:!\r\n\r\nI desperately looked for a tutorial on \"how to simply select a font with enough utf8 characters (with lualatex) \" \r\n\r\n"},{"author":"Casteran","date":"2022-01-13T18:01:30Z","comment":"@cpitclaudel  \r\nIndeed, the issue happens only inside the snippets. If I type an utf8 omega in the\r\nmain tex, it is correctly displayed. \r\n\r\n"},{"author":"cpitclaudel","date":"2022-01-13T20:40:41Z","comment":"If you're OK with changing the font, it could be as simple as `\\setmonofont{Fira Code}[Scale=MatchLowercase]` after the line that loads `fontspec` (you can install that font from https://github.com/tonsky/FiraCode).  "},{"author":"cpitclaudel","date":"2022-01-13T20:41:15Z","comment":"IIRC `\\setmonofont{Liberation Mono}` would work as well."},{"author":"Casteran","date":"2022-01-13T21:11:31Z","comment":"@cpitclaudel  Thanks a lot ! \r\nI installed FiraCode on my machine, at least \"Check ω.\" works!\r\n@Zimmi48 @palmskog  Do we have to install this font somewhere for the CI/CD?\r\n\r\nIndeed, if we include snippets with Coq+utf8 in the documentation, we would also have to update the INSTALL directives in the README."},{"author":"Casteran","date":"2022-01-15T08:30:36Z","comment":"`\\setmonofont{DejaVu Sans Mono}[Scale=MatchLowercase]`  looks good too.\r\nAnd it doesn't cause errors on CI ! \r\n"},{"author":"Zimmi48","date":"2022-01-16T11:55:14Z","comment":"Sorry for not responding earlier. I have done a precise listing of the LaTeX packages that are needed to compile the book in:\r\n\r\nhttps://github.com/coq-community/hydra-battles/blob/8b50732058d291b03cada050d1e41a6a6061712a/.nix/coq-overlays/hydra-battles-single/default.nix#L15-L42\r\n\r\nThe advantage is that this represents less to download in CI, but the drawback of course is that this list needs to be kept up-to-date if we add dependencies on new LaTeX packages..."},{"author":"Casteran","date":"2022-01-16T14:48:11Z","comment":"Thanks @Zimmi48 !\r\nDo we have to include this list in the installation directives for the users (as well as the specific fonts needed for compiling the utf8 snippets) ?"},{"author":"Zimmi48","date":"2022-01-16T15:12:55Z","comment":"> Do we have to include this list in the installation directives for the users (as well as the specific fonts needed for compiling the utf8 snippets) ?\r\n\r\nSure, that could make sense, although lots of users will just have a \"full TeXLive\" distribution, which is always sufficient."}],"tags":[],"pull_requests":[]},{"author":"Casteran","number":112,"state":"closed","open_date":"2022-01-10T13:59:04Z","update_date":"2022-01-18T08:14:03Z","discussion":[],"tags":[],"pull_requests":[]},{"author":"Casteran","number":111,"state":"closed","open_date":"2022-01-03T07:14:04Z","update_date":"2022-01-06T08:25:12Z","discussion":[{"author":"Casteran","date":"2022-01-03T07:38:38Z","comment":"Improve compatibility between Alectryon snippets for the book, the JFLA paper and slides"}],"tags":[],"pull_requests":[]},{"author":"Casteran","number":110,"state":"open","open_date":"2021-12-16T10:35:58Z","update_date":"2021-12-17T15:16:06Z","discussion":[{"author":"Casteran","date":"2021-12-16T14:53:46Z","comment":"Attempt to progressively incorporate some Stdpp style (type classes). \r\n@palmskog If you agree, we may merge it into master"},{"author":"palmskog","date":"2021-12-17T15:16:06Z","comment":"Just to flag up that I haven't missed this PR, I plan to review and probably augment it a bit, but it may take 1-2 more days due to other work, sorry."}],"tags":[],"pull_requests":[]},{"author":"palmskog","number":109,"state":"closed","open_date":"2021-12-01T09:27:48Z","update_date":"2021-12-01T15:00:19Z","discussion":[],"tags":[],"pull_requests":[]},{"author":"Casteran","number":108,"state":"closed","open_date":"2021-11-16T13:19:37Z","update_date":"2021-11-16T15:25:43Z","discussion":[{"author":"palmskog","date":"2021-11-16T14:25:36Z","comment":"@Casteran when you switch to the \"Files changed\" tab, there is an option to gather all suggestions into a single commit (which might make CI happier)."},{"author":"Casteran","date":"2021-11-16T14:40:34Z","comment":"@palmskog Oups !\r\n\r\nI didn't know that a new CI was fired for each correction. Thus I approved the changes one by one  by clicking.  "}],"tags":[],"pull_requests":[]},{"author":"palmskog","number":107,"state":"closed","open_date":"2021-11-15T13:28:38Z","update_date":"2021-11-15T14:35:11Z","discussion":[{"author":"palmskog","date":"2021-11-15T13:48:37Z","comment":"OK, I saw a final detail to fix now, so I'll take care of merging this later."}],"tags":[],"pull_requests":[]},{"author":"palmskog","number":106,"state":"closed","open_date":"2021-11-04T19:06:23Z","update_date":"2021-11-05T10:07:32Z","discussion":[],"tags":[],"pull_requests":[]},{"author":"Zimmi48","number":105,"state":"closed","open_date":"2021-10-31T09:00:20Z","update_date":"2021-10-31T10:19:35Z","discussion":[],"tags":[],"pull_requests":[]},{"author":"palmskog","number":104,"state":"closed","open_date":"2021-10-28T08:40:07Z","update_date":"2021-10-30T08:37:26Z","discussion":[{"author":"palmskog","date":"2021-10-30T08:27:29Z","comment":"@Casteran can I merge this?"},{"author":"Casteran","date":"2021-10-30T08:35:28Z","comment":"> @Casteran can I merge this?\r\n\r\n@palmskog Sure !"}],"tags":[],"pull_requests":[]},{"author":"palmskog","number":103,"state":"closed","open_date":"2021-10-27T17:28:21Z","update_date":"2021-10-27T18:32:56Z","discussion":[],"tags":[],"pull_requests":[]},{"author":"LailaSafoury","number":102,"state":"closed","open_date":"2021-10-26T07:09:44Z","update_date":"2021-10-26T07:12:16Z","discussion":[],"tags":[],"pull_requests":[]},{"author":"Zimmi48","number":101,"state":"closed","open_date":"2021-10-25T14:47:46Z","update_date":"2021-10-25T15:17:23Z","discussion":[],"tags":[],"pull_requests":[]},{"author":"Casteran","number":100,"state":"closed","open_date":"2021-10-24T15:37:19Z","update_date":"2021-10-25T15:18:33Z","discussion":[{"author":"Casteran","date":"2021-10-25T06:32:48Z","comment":"Indeed, it looks like the first compiled file is  `OrdinalNotations/ON_omega.v` which requires \r\n`ON_Generic`. This module requires `Prelude/OrdNotations.v`, which is not compiled yet (on Nix/CI). \r\nThe compilation succeeds on my computer.\r\n\r\n"},{"author":"Zimmi48","date":"2021-10-25T11:16:48Z","comment":"This is a very strange error. For the record, here is what I have at the moment:\r\n\r\n- In the log we can see that the failed builds are missing the `COQDEP VFILES` step. Then, the Coq files are built in the wrong order (with respect to the dependencies between files) which conducts to the observed error.\r\n- I was able to reproduce the problem with the latest commit on master (5a600414a8df3eaf1f2674b453ab6aa525692ce9) by running `make` within `nix-shell`. I couldn't reproduce the error with earlier commits and if I remove `theories/gaia/T1bridge_use.v` from the `_CoqProject` file, the error goes away. At this point, I would think this is a `coq_makefile` bug.\r\n- But (!) the error has also happened on an earlier commit (566b69659e9cb93f6f2219a28669fa34672c91e6) before the addition of this file to `_CoqProject` and I am unable to reproduce the error on this commit.\r\n- Furthermore, every time that `hydra-battles-single` has failed with this error, `gaia-hydras` (which is built with Dune) has failed as well with error `Error: Unable to locate library T1.` Therefore, I don't expect that restarting the failed pipelines would make them succeed, but I will try anyway.\r\n- I will also try building with Coq 8.13 to see if that makes a difference."},{"author":"Zimmi48","date":"2021-10-25T11:23:17Z","comment":"Actually, I know why the pipeline fails on commit 566b69659e9cb93f6f2219a28669fa34672c91e6. I see that the first attempt succeeded and it was a second attempt, triggered by @Casteran after commit 5a600414a8df3eaf1f2674b453ab6aa525692ce9 was pushed, that failed. This is a bug in the selection of the commit to be built: it always tries the latest commit on the branch instead of the exact commit on which it is called!\r\n\r\nI'll open an issue and try to fix this bug. But for the time being we can focus on the actual bug, which is that adding `theories/gaia/T1bridge_use.v` to `_CoqProject` has broken `coq_makefile` (which doesn't call `coqdep` anymore)."},{"author":"Zimmi48","date":"2021-10-25T11:24:20Z","comment":"Or that rather what looks like a `coqdep` bug, since we also have a problem when building `gaia-hydras` with Dune."},{"author":"Zimmi48","date":"2021-10-25T11:26:31Z","comment":"The bug also happens with Coq 8.13.\r\n\r\n@Casteran are you sure you don't get this bug on your computer if you run `make clean` first?"},{"author":"Casteran","date":"2021-10-25T11:29:50Z","comment":"I try again.\nBtw the version of coq I use is   .opam/_coq-platform_.2021.02.1/bin/coqtop\n\n\n\n> Le 25 oct. 2021 à 13:26, Théo Zimmermann ***@***.***> a écrit :\n> \n> \n> The bug also happens with Coq 8.13.\n> \n> @Casteran <https://github.com/Casteran> are you sure you don't get this bug on your computer if you run make clean first?\n> \n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub <https://github.com/coq-community/hydra-battles/issues/100#issuecomment-950823777>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AJW6FCXOWGPR2SE2P5RPHCDUIU5HFANCNFSM5GTSOSRQ>.\n> Triage notifications on the go with GitHub Mobile for iOS <https://apps.apple.com/app/apple-store/id1477376905?ct=notification-email&mt=8&pt=524675> or Android <https://play.google.com/store/apps/details?id=com.github.android&referrer=utm_campaign%3Dnotification-email%26utm_medium%3Demail%26utm_source%3Dgithub>. \n> \n\n"},{"author":"Casteran","date":"2021-10-25T11:42:23Z","comment":"The sequence `make clean; make` works on my computer.\nOh, I see …\nWhen I list theories/gaia I obtain :\n-rw-r--r--  1 casteranpierre  staff    141 24 oct 16:14 T1Bridge_use.v\n-rw-r--r--  1 casteranpierre  staff    907 25 oct 13:32 T1bridge_use.glob\n-rw-r--r--  1 casteranpierre  staff  26927 25 oct 13:32 T1bridge_use.vo\n-rw-r--r--  1 casteranpierre  staff      0 25 oct 13:32 T1bridge_use.vok\n-rw-r--r--  1 casteranpierre  staff      0 25 oct 13:32 T1bridge_use.vos\n\nFor MacOS, T1Bridge and T1bridge are the same names, and Coq is happy with that. \n  I’ll remove all the vos, etc.  manually, then try again.\n\n> Le 25 oct. 2021 à 13:29, Castéran Pierre ***@***.***> a écrit :\n> \n> I try again.\n> Btw the version of coq I use is   .opam/_coq-platform_.2021.02.1/bin/coqtop\n> \n> \n> \n>> Le 25 oct. 2021 à 13:26, Théo Zimmermann ***@***.*** ***@***.***>> a écrit :\n>> \n>> \n>> The bug also happens with Coq 8.13.\n>> \n>> @Casteran <https://github.com/Casteran> are you sure you don't get this bug on your computer if you run make clean first?\n>> \n>> —\n>> You are receiving this because you were mentioned.\n>> Reply to this email directly, view it on GitHub <https://github.com/coq-community/hydra-battles/issues/100#issuecomment-950823777>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AJW6FCXOWGPR2SE2P5RPHCDUIU5HFANCNFSM5GTSOSRQ>.\n>> Triage notifications on the go with GitHub Mobile for iOS <https://apps.apple.com/app/apple-store/id1477376905?ct=notification-email&mt=8&pt=524675> or Android <https://play.google.com/store/apps/details?id=com.github.android&referrer=utm_campaign%3Dnotification-email%26utm_medium%3Demail%26utm_source%3Dgithub>. \n>> \n> \n\n"},{"author":"Casteran","date":"2021-10-25T11:45:26Z","comment":"Sorry ‘bout  that !\nAfter a home test, I will push again in a few minutes.\n\n\n> Le 25 oct. 2021 à 13:42, Castéran Pierre ***@***.***> a écrit :\n> \n> The sequence `make clean; make` works on my computer.\n> Oh, I see …\n> When I list theories/gaia I obtain :\n> -rw-r--r--  1 casteranpierre  staff    141 24 oct 16:14 T1Bridge_use.v\n> -rw-r--r--  1 casteranpierre  staff    907 25 oct 13:32 T1bridge_use.glob\n> -rw-r--r--  1 casteranpierre  staff  26927 25 oct 13:32 T1bridge_use.vo\n> -rw-r--r--  1 casteranpierre  staff      0 25 oct 13:32 T1bridge_use.vok\n> -rw-r--r--  1 casteranpierre  staff      0 25 oct 13:32 T1bridge_use.vos\n> \n> For MacOS, T1Bridge and T1bridge are the same names, and Coq is happy with that. \n>   I’ll remove all the vos, etc.  manually, then try again.\n> \n>> Le 25 oct. 2021 à 13:29, Castéran Pierre ***@***.*** ***@***.***>> a écrit :\n>> \n>> I try again.\n>> Btw the version of coq I use is   .opam/_coq-platform_.2021.02.1/bin/coqtop\n>> \n>> \n>> \n>>> Le 25 oct. 2021 à 13:26, Théo Zimmermann ***@***.*** ***@***.***>> a écrit :\n>>> \n>>> \n>>> The bug also happens with Coq 8.13.\n>>> \n>>> @Casteran <https://github.com/Casteran> are you sure you don't get this bug on your computer if you run make clean first?\n>>> \n>>> —\n>>> You are receiving this because you were mentioned.\n>>> Reply to this email directly, view it on GitHub <https://github.com/coq-community/hydra-battles/issues/100#issuecomment-950823777>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AJW6FCXOWGPR2SE2P5RPHCDUIU5HFANCNFSM5GTSOSRQ>.\n>>> Triage notifications on the go with GitHub Mobile for iOS <https://apps.apple.com/app/apple-store/id1477376905?ct=notification-email&mt=8&pt=524675> or Android <https://play.google.com/store/apps/details?id=com.github.android&referrer=utm_campaign%3Dnotification-email%26utm_medium%3Demail%26utm_source%3Dgithub>. \n>>> \n>> \n> \n\n"},{"author":"Casteran","date":"2021-10-25T12:04:24Z","comment":"The error moved  to gaia-hydras. I test a small changes in the `Require`commands in `T1Bridge_use`"},{"author":"Zimmi48","date":"2021-10-25T12:14:32Z","comment":"The error was already there, and I would have been surprised if a change to `_CoqProject` had fixed it since Dune didn't use it."},{"author":"Zimmi48","date":"2021-10-25T12:17:09Z","comment":"Indeed, I think that your last commit is a correct fix for Dune."},{"author":"Casteran","date":"2021-10-25T12:35:33Z","comment":"It's all green now ! Sorry for the Mac issue !\r\n"},{"author":"Zimmi48","date":"2021-10-25T14:33:13Z","comment":"No worries. You helped me discover another issue related to Nix CI in passing. But something that I still find weird is that the casing issue produced this behavior (very difficult to debug)."},{"author":"Zimmi48","date":"2021-10-25T15:18:33Z","comment":"I've reported the `coq_makefile` issue on the Coq bug tracker and I've fixed the Nix CI issue in coq-community/coq-nix-toolbox#68 and #101, so I think we can close this."}],"tags":[],"pull_requests":[]},{"author":"Zimmi48","number":99,"state":"closed","open_date":"2021-10-23T11:45:35Z","update_date":"2021-10-23T12:42:54Z","discussion":[],"tags":[],"pull_requests":[]},{"author":"Zimmi48","number":98,"state":"closed","open_date":"2021-10-18T10:12:07Z","update_date":"2021-10-21T07:42:22Z","discussion":[{"author":"Zimmi48","date":"2021-10-18T10:19:33Z","comment":"Unfortunately, as I feared, this change would mean testing gaia-hydras 0.5 instead of the development version, so this is not what we want.\r\n\r\n@CohenCyril any advice on how to fix that? Does it require changing the way gaia-hydras is packaged in https://github.com/NixOS/nixpkgs/pull/142071?"},{"author":"Zimmi48","date":"2021-10-21T07:14:57Z","comment":"Fixed by adding:\r\n\r\nhttps://github.com/coq-community/hydra-battles/blob/87d8137deb8804c9b71ddaad82d1c6dc9020d39f/.nix/config.nix#L45"}],"tags":[],"pull_requests":[]},{"author":"Zimmi48","number":97,"state":"closed","open_date":"2021-10-15T10:17:16Z","update_date":"2021-10-15T21:12:39Z","discussion":[{"author":"Zimmi48","date":"2021-10-15T12:39:04Z","comment":"This seems to work well. However, the update to Coq 8.14 creates new warnings that are reported in the Alectryon snippets (missing locality for `Instance`)."},{"author":"Zimmi48","date":"2021-10-15T12:57:17Z","comment":"This warning is already disabled in `_CoqProject`. Maybe we need a way to also report the warning disabling when calling SerAPI through Alectryon."},{"author":"cpitclaudel","date":"2021-10-15T14:25:44Z","comment":"For warnings that can be unconditionally disabled, we could use `Global Set Warnings \"-…\".` in a core file.  I'm don't think that SerAPI has a way to customize warnings from the command line otherwise, but maybe there's a [protocol command that we could use for that if the `Set Warnings` route is not desirable."},{"author":"Zimmi48","date":"2021-10-15T14:30:03Z","comment":"`Global Set Warnings` is frowned upon because of the transitive reach (beyond project boundaries). That's why command line arguments are usually preferred for that kind of stuff. That being said, in this precise case, I can also fix the warning by adding `#[ global ]` annotations everywhere they are missing."},{"author":"cpitclaudel","date":"2021-10-15T15:32:48Z","comment":"Makes sense, thanks!"}],"tags":[],"pull_requests":[]},{"author":"Casteran","number":96,"state":"closed","open_date":"2021-10-12T05:32:05Z","update_date":"2021-10-12T17:16:51Z","discussion":[{"author":"Casteran","date":"2021-10-12T05:44:40Z","comment":"Failed attempt to add `Set Apply With Renaming` in the three problematic files."},{"author":"Zimmi48","date":"2021-10-12T07:05:49Z","comment":"The failure is now in three other files: `theories/ordinals/Ackermann/folProp.v`, `theories/ordinals/Hydra/Hydra_Examples.v` and `theories/ordinals/Hydra/Hydra_Termination.v`. This does seem to indicate that setting the option in the files where you've done that was a correct fix but that there are just more files that are affected by this change."},{"author":"Casteran","date":"2021-10-12T07:29:59Z","comment":"Ok!\nI will try this afternoon \n\nEnvoyé de mon iPhone\n\n> Le 12 oct. 2021 à 09:05, Théo Zimmermann ***@***.***> a écrit :\n> \n> The failure is now in three other files: theories/ordinals/Ackermann/folProp.v, theories/ordinals/Hydra/Hydra_Examples.v and theories/ordinals/Hydra/Hydra_Termination.v. This does seem to indicate that setting the option in the files where you've done that was a correct fix but that there are just more files that are affected by this change.\n> \n> —\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub, or unsubscribe.\n> Triage notifications on the go with GitHub Mobile for iOS or Android. \n"},{"author":"Casteran","date":"2021-10-12T09:58:52Z","comment":"Ok, it looks to be a convergent process. I will iterate it after lunch 😄 "},{"author":"Zimmi48","date":"2021-10-12T09:59:23Z","comment":"And now it detected this problem in three additional files: `theories/ordinals/Ackermann/code.v`, `theories/ordinals/Ackermann/model.v` and `theories/ordinals/Ackermann/subProp.v` :disappointed: "},{"author":"Casteran","date":"2021-10-12T10:37:37Z","comment":"It looks like it signals the three first errors, then stops. Since nat is well-founded (proved in Coq) I hope to solve it !\n\nEnvoyé de mon iPhone\n\n> Le 12 oct. 2021 à 11:59, Théo Zimmermann ***@***.***> a écrit :\n> \n> And now it detected this problem in three additional files: theories/ordinals/Ackermann/code.v, theories/ordinals/Ackermann/model.v and theories/ordinals/Ackermann/subProp.v 😞\n> \n> —\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub, or unsubscribe.\n> Triage notifications on the go with GitHub Mobile for iOS or Android. \n"},{"author":"Casteran","date":"2021-10-12T11:09:45Z","comment":"The error changed ! Looks like to be related with coq-equations.\r\n\r\n"},{"author":"Zimmi48","date":"2021-10-12T12:38:54Z","comment":"Yes, that's because a PR with overlays has just been merged in the Coq repository. The Docker-Coq image was probably not built yet when CI run. But this is done now, so restarting the job should solve this issue. I'll do that."},{"author":"Zimmi48","date":"2021-10-12T14:04:49Z","comment":"Now failing in `theories/ordinals/Ackermann/codeSubFormula.v` and `theories/ordinals/Ackermann/subAll.v`."},{"author":"Zimmi48","date":"2021-10-12T14:18:57Z","comment":"And now: `theories/ordinals/Ackermann/folLogic3.v`"},{"author":"Casteran","date":"2021-10-12T14:45:38Z","comment":"I just pushed a commit with the flag on every file of Ackermann \n\nEnvoyé de mon iPhone\n\n> Le 12 oct. 2021 à 16:19, Théo Zimmermann ***@***.***> a écrit :\n> \n> And now: theories/ordinals/Ackermann/folLogic3.v\n> \n> —\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub, or unsubscribe.\n> Triage notifications on the go with GitHub Mobile for iOS or Android. \n"},{"author":"Zimmi48","date":"2021-10-12T14:46:23Z","comment":"Looks like it worked :tada: "},{"author":"Zimmi48","date":"2021-10-12T14:48:30Z","comment":"The deletion of `theories/ordinals/Ackermann/primRecbuggy.v` is intended?"},{"author":"Casteran","date":"2021-10-12T14:54:18Z","comment":"Yes, it was outside _CoqProject.\n\nEnvoyé de mon iPhone\n\n> Le 12 oct. 2021 à 16:48, Théo Zimmermann ***@***.***> a écrit :\n> \n> The deletion of theories/ordinals/Ackermann/primRecbuggy.v is intended?\n> \n> —\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub, or unsubscribe.\n> Triage notifications on the go with GitHub Mobile for iOS or Android. \n"},{"author":"Casteran","date":"2021-10-12T16:57:19Z","comment":"@Zimmi48 I let you deal with PR #95 ?"},{"author":"Zimmi48","date":"2021-10-12T17:16:49Z","comment":"Sure!"}],"tags":[],"pull_requests":[]},{"author":"Zimmi48","number":95,"state":"closed","open_date":"2021-10-11T14:16:30Z","update_date":"2021-10-13T08:30:06Z","discussion":[{"author":"Zimmi48","date":"2021-10-11T14:29:48Z","comment":"It is my impression that the CI failure in this PR is completely unrelated to this change (and therefore that the PR can be merged). It would rather indicate that hydra-battles (the library) is currently incompatible with Coq + math-comp master. I've restarted the CI on master to confirm."},{"author":"Zimmi48","date":"2021-10-11T14:33:47Z","comment":"Indeed, the problem is the same in master."},{"author":"Casteran","date":"2021-10-11T15:06:37Z","comment":"@Zimmi48 I noticed a bound variable error in Hydra/Hydra_Lemmas.v (L 403), in MoreAck/AckNotPR.v (L 229) and Ackermann/fol.v (L 185). The error message (on CI) is quite weird : \r\n```\r\nError: - Error: No such bound variable P0 (possible names are: P, P, f, f and f).\r\n ```"},{"author":"Zimmi48","date":"2021-10-11T15:13:49Z","comment":"@Casteran That's actually a perfectly expected error which follows: https://github.com/coq/coq/pull/13837 (see current top changelog entry at https://coq.github.io/doc/master/refman/changes.html#tactics). I didn't manage to fix it yet though (and won't have time to look more into this tonight)."},{"author":"Casteran","date":"2021-10-11T16:05:10Z","comment":"> @Casteran That's actually a perfectly expected error which follows: [coq/coq#13837](https://github.com/coq/coq/pull/13837) (see current top changelog entry at https://coq.github.io/doc/master/refman/changes.html#tactics). I didn't manage to fix it yet though (and won't have time to look more into this tonight).\r\n\r\nLet's see if I understand correctly 😄 \r\nCould the solution be to add a `Set Apply With Renaming` command at the global level ?\r\nIn the case of Hydras_rect2, there are already the names `P`and `P0`(generated by the `Scheme`command). \r\n"},{"author":"Zimmi48","date":"2021-10-11T17:10:47Z","comment":">Could the solution be to add a `Set Apply With Renaming` command at the global level ?\r\n\r\nRight. I didn't think of this but if my interpretation of the failure is correct, then this should work. The best way to do so would be with a `-set` command in the `_CoqProject` / `dune` files. I'll try this solution later."},{"author":"Zimmi48","date":"2021-10-11T19:05:16Z","comment":"Actually, I cannot figure out how to use the `-set` option in `_CoqProject` because I don't know how to quote the spaces in the name of the flag."},{"author":"Casteran","date":"2021-10-11T20:39:03Z","comment":"> Actually, I cannot figure out how to use the `-set` option in `_CoqProject` because I don't know how to quote the spaces in the name of the flag.\r\n\r\nPerhaps add it as a command at the beginning of each file which causes problems ?\r\n\r\nI read the hints, but I couldn't see how to use them in the particular case where the induction principles already contains P and P0 as variables (Hydra_rect2). May be replace the `induction h using Hydra_rect2 with (P0:= f)` with an `eapply (@Hydra_rect2 _ f)` ?\r\n"},{"author":"Casteran","date":"2021-10-12T05:42:21Z","comment":"\r\n> Perhaps add it as a command at the beginning of each file which causes problems ?\r\n\r\nI tried something (PR #96) but it still fails.\r\n\r\n\r\n\r\n"}],"tags":[],"pull_requests":[]},{"author":"Casteran","number":94,"state":"closed","open_date":"2021-10-05T11:56:00Z","update_date":"2021-10-05T12:27:35Z","discussion":[{"author":"Casteran","date":"2021-10-05T12:02:45Z","comment":"I don't understand why this PR is supposed to be merged  into master:  I've just amended jfla2022 !"},{"author":"Zimmi48","date":"2021-10-05T12:27:30Z","comment":"The mistake was just to open a PR. If you push a commit directly to the JFLA branch, there is no branches to compare and thus no PR to open."}],"tags":[],"pull_requests":[]},{"author":"Casteran","number":93,"state":"closed","open_date":"2021-10-04T19:11:43Z","update_date":"2022-01-06T10:31:55Z","discussion":[],"tags":[],"pull_requests":[]},{"author":"Zimmi48","number":92,"state":"closed","open_date":"2021-10-04T16:01:59Z","update_date":"2021-10-11T09:47:59Z","discussion":[],"tags":[],"pull_requests":[]},{"author":"cpitclaudel","number":91,"state":"closed","open_date":"2021-10-04T03:55:50Z","update_date":"2021-10-04T16:21:41Z","discussion":[{"author":"Casteran","date":"2021-10-04T07:18:52Z","comment":"Hi !\r\n@cpitclaudel  I tried the new makefile, but I get errors \"File `snippets/Hprime/HprimeDef.tex' not found\".\r\nDo I have to copy manually useful snippets from doc/movies to doc/JFLA2022 (as before) or is there a Make entry do do that ?"},{"author":"Casteran","date":"2021-10-04T07:58:43Z","comment":"Doing \"make\" in JFLA2022 directory seems to remove the contents of ./snippets/XXX/  and results in \"not found\" errors.\r\nI could get a pdf version of paper.tex  by  a) copying several snippets from doc/movies/snippets/XXX to doc/JFLA2022/snippets/XXX  b) compiling manually (through a sequence of pdflatex and bibtex).  Any call to \"make\" resulted in the issue above.  Sure I didn't understand the new Makefile ? \r\nAnyway, we are on 9 pages (bibliography included). \r\n@cpitclaudel : Including a snippet with a computation is a good idea."},{"author":"Casteran","date":"2021-10-04T08:32:36Z","comment":"Here is the sequence of commands I sent to look quickly at the current version (not a Makefile yet  !)\r\n\r\n```\r\ncp ../movies/snippets/E0/Ex42.tex ../JFLA2022/snippets/E0\r\ncp ../movies/snippets/Hprime/HprimeDef*.tex ../JFLA2022/snippets/Hprime\r\ncp ../movies/snippets/Schutte/*.tex ../JFLA2022/snippets/Schutte\r\ncp ../movies/snippets/Pow/evalPow17LetIn.tex ../JFLA2022/snippets/Pow/\r\n\r\n\r\npdflatex paper; bibtex paper; pdflatex paper; pdflatex paper\r\n```\r\n\r\n"},{"author":"Casteran","date":"2021-10-04T10:38:10Z","comment":"@cpitclaudel  The section about Alectryon looks very nice to me. Perhaps we would find a sentence or two explaining why a pure coqdoc-like pdf generation wouldn't work: the structure of the book (driven by the mathematical themes) is independent from the library's.\r\nYour remark about ligatures : which font do you suggest ?\r\n"},{"author":"Casteran","date":"2021-10-04T10:45:13Z","comment":"There remains a small inconstency on the way we cite tools and libraries: ocurrences of \"Coq\" and \"\\emph{Coq}\" , etc.\r\nWhich is the best one ?\r\n"},{"author":"Zimmi48","date":"2021-10-04T15:52:02Z","comment":"> There remains a small inconstency on the way we cite tools and libraries: ocurrences of \"Coq\" and \"\\emph{Coq}\" , etc. Which is the best one ?\r\n\r\nSimilarly to what @palmskog suggested for the Hydras & co project itself, if we want a consistent style, we should probably define a macro and use it."},{"author":"cpitclaudel","date":"2021-10-04T15:55:02Z","comment":"> @cpitclaudel I tried the new makefile, but I get errors \"File `snippets/Hprime/HprimeDef.tex' not found\".\r\n\r\nSorry about that!  Let me have a look."},{"author":"Casteran","date":"2021-10-04T16:19:17Z","comment":"@cpitclaudel  I changed the EX42e snippet (in ordinals/Schutte/Schutte.v): I added a no-hyps, which makes the result nicer.\r\n"},{"author":"Casteran","date":"2021-10-04T16:21:41Z","comment":"> > There remains a small inconstency on the way we cite tools and libraries: ocurrences of \"Coq\" and \"\\emph{Coq}\" , etc. Which is the best one ?\r\n> \r\n> Similarly to what @palmskog suggested for the Hydras & co project itself, if we want a consistent style, we should probably define a macro and use it.\r\n\r\nOK, I'll do that !\r\n"}],"tags":[],"pull_requests":[]},{"author":"palmskog","number":90,"state":"closed","open_date":"2021-10-03T15:55:37Z","update_date":"2021-10-03T16:15:07Z","discussion":[],"tags":[],"pull_requests":[]},{"author":"palmskog","number":89,"state":"closed","open_date":"2021-09-25T15:10:48Z","update_date":"2021-09-25T19:45:29Z","discussion":[{"author":"Zimmi48","date":"2021-09-25T19:43:56Z","comment":"OK, I will take care of that."}],"tags":[],"pull_requests":[]},{"author":"Zimmi48","number":88,"state":"closed","open_date":"2021-09-24T15:14:32Z","update_date":"2021-09-27T13:19:10Z","discussion":[],"tags":[],"pull_requests":[]},{"author":"Zimmi48","number":87,"state":"closed","open_date":"2021-09-24T12:33:58Z","update_date":"2021-09-27T14:32:00Z","discussion":[{"author":"Casteran","date":"2021-09-27T14:22:29Z","comment":"@Zimmi48 The conflict was due to the move of a paragraph in Section 2.\r\nI followed github's instructiions. I think/hope jfla2022 is OK\r\n"},{"author":"Zimmi48","date":"2021-09-27T14:31:16Z","comment":"I'm going to close this PR, and I'll push directly to the main branch like we said."}],"tags":[],"pull_requests":[]},{"author":"Zimmi48","number":86,"state":"closed","open_date":"2021-09-24T12:15:20Z","update_date":"2021-09-27T13:19:36Z","discussion":[],"tags":[],"pull_requests":[]},{"author":"Zimmi48","number":85,"state":"closed","open_date":"2021-09-24T06:53:36Z","update_date":"2021-09-24T08:44:57Z","discussion":[{"author":"Zimmi48","date":"2021-09-24T08:40:05Z","comment":"The third commit introduces the vision behind the Hydra Battles project. Refinements are welcome!"}],"tags":[],"pull_requests":[]},{"author":"cpitclaudel","number":84,"state":"closed","open_date":"2021-09-24T05:00:18Z","update_date":"2021-09-24T06:40:23Z","discussion":[{"author":"Zimmi48","date":"2021-09-24T06:40:18Z","comment":"Great, thanks a lot!"}],"tags":[],"pull_requests":[]},{"author":"cpitclaudel","number":83,"state":"closed","open_date":"2021-09-23T23:39:15Z","update_date":"2021-09-24T06:08:55Z","discussion":[],"tags":[],"pull_requests":[]},{"author":"Casteran","number":82,"state":"closed","open_date":"2021-09-20T11:25:02Z","update_date":"2022-01-12T09:13:36Z","discussion":[{"author":"palmskog","date":"2021-09-20T12:50:26Z","comment":"@Casteran @Zimmi48 this project looks good to me, and I would be happy to be a co-author. Unfortunately I can't read technical French to understand in detail the previous submission, but I think I could help out with writing the new submission with some high-level direction. I also hope I can participate in the meeting remotely or synchronize with Théo afterwards."},{"author":"Casteran","date":"2021-09-20T12:57:48Z","comment":"Thanks!\nWe will submit this paper in English (only the talk must be in French). The draft is already written in (still poor !)  English on doc/JFLA2022/paper.tex\n\n\n\n> Le 20 sept. 2021 à 14:50, Karl Palmskog ***@***.***> a écrit :\n> \n> \n> @Casteran <https://github.com/Casteran> @Zimmi48 <https://github.com/Zimmi48> this project looks good to me, and I would be happy to be a co-author. Unfortunately I can't read technical French to understand in detail the previous submission, but I think I could help out with writing the submission with some high-level direction. I also hope I can participate in the meeting remotely or synchronize with Théo afterwards.\n> \n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub <https://github.com/coq-community/hydra-battles/issues/82#issuecomment-922897646>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AJW6FCS6NHB462OGOC6JSYLUC4UZ5ANCNFSM5ELXOA4Q>.\n> Triage notifications on the go with GitHub Mobile for iOS <https://apps.apple.com/app/apple-store/id1477376905?ct=notification-email&mt=8&pt=524675> or Android <https://play.google.com/store/apps/details?id=com.github.android&referrer=utm_campaign%3Dnotification-email%26utm_medium%3Demail%26utm_source%3Dgithub>. \n> \n\n"},{"author":"Casteran","date":"2021-09-20T16:27:38Z","comment":"@palmskog  Sorry, I misunderstood the reference to the previous submission.\r\n\r\nIndeed, the previous submission (in French) contained some material now contained in the book\r\n-  formal descrition of the rules of the Hydra battles (representation in Coq).\r\n- Proof of termination of all hydra battles\r\n- Some Ketonen-Solovay stuff, and a proof that no measure mapping hydras to a segment [0,mu), where mu<epsilon0 can prove the termination of all hydra battles.\r\n- the 2018 article ended with a remark : in the last proof, we used the possibility that the hydra could chose freely its number of new copies at every step of the game, while most presentations of the game restrict this number : i copies at step i.\r\n Thus one may wonder if this theorem is still provable when we consider this restriction.\r\nFor this purpose, new Ketonen-Solovay stuff has been added to the development. Still considering this restriction (which I call \"standard\" battles in the book), I also study the number of steps of a battle, and prove that this number cannot be returned  by any primitive recursive function (given a  hydra h, and depending on the initial number of copies).\r\n"},{"author":"palmskog","date":"2021-09-20T16:39:27Z","comment":"@Casteran thanks a lot for the summary! It was clear to me that current version was to be written in English (I've read English papers in JFLA proceedings before).\r\n\r\nLet me add one piece of related work that we should probably discuss in the new paper: the [undecidable problems library](https://github.com/uds-psl/coq-library-undecidability) from Saarland. This library also has a formalization of Peano arithmetic, first-order logic, and primitive recursive functions."},{"author":"palmskog","date":"2021-09-21T14:53:06Z","comment":"@Casteran can I do a language pass in the `jfla2022` branch? And do you want all changes as pull requests, or should I just push minor fixes?"},{"author":"Casteran","date":"2021-09-21T15:19:32Z","comment":"Sure, please do !  The day after tomorrow I have a meeting with Théo in Bordeaux. \nMay be the best is pushing the mandatory changes (typos, etc.) and sending PRs for the rest.\n\n\n\n\n> Le 21 sept. 2021 à 16:53, Karl Palmskog ***@***.***> a écrit :\n> \n> \n> @Casteran <https://github.com/Casteran> can I do a language pass in the jfla2022 branch? And do you want all changes as pull requests, or should I just push minor fix?\n> \n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub <https://github.com/coq-community/hydra-battles/issues/82#issuecomment-924067088>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AJW6FCQSROO6EVTA7QJAVI3UDCL53ANCNFSM5ELXOA4Q>.\n> Triage notifications on the go with GitHub Mobile for iOS <https://apps.apple.com/app/apple-store/id1477376905?ct=notification-email&mt=8&pt=524675> or Android <https://play.google.com/store/apps/details?id=com.github.android&referrer=utm_campaign%3Dnotification-email%26utm_medium%3Demail%26utm_source%3Dgithub>. \n> \n\n"},{"author":"cpitclaudel","date":"2021-09-21T15:26:27Z","comment":"Hi folks!  This sounds great, happy to be in.  Please let me know what the best time for a meeting would be."},{"author":"Casteran","date":"2021-09-21T15:35:10Z","comment":"Hi Clément !\n\nThéo and I have a meeting on Friday.  Could you compile the pdf ? \nIf you notice something to add or correct, please send us mails or PR.\n\nBest regards\nPierre\n\n> Le 21 sept. 2021 à 17:26, Clément Pit-Claudel ***@***.***> a écrit :\n> \n> \n> Hi folks! This sounds great, happy to be in. Please let me know what the best time for a meeting would be.\n> \n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub <https://github.com/coq-community/hydra-battles/issues/82#issuecomment-924098920>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AJW6FCXHAHX5DNULTAZGKULUDCP27ANCNFSM5ELXOA4Q>.\n> Triage notifications on the go with GitHub Mobile for iOS <https://apps.apple.com/app/apple-store/id1477376905?ct=notification-email&mt=8&pt=524675> or Android <https://play.google.com/store/apps/details?id=com.github.android&referrer=utm_campaign%3Dnotification-email%26utm_medium%3Demail%26utm_source%3Dgithub>. \n> \n\n"},{"author":"Casteran","date":"2021-09-21T15:36:37Z","comment":"\n\n> Le 21 sept. 2021 à 17:19, Castéran Pierre ***@***.***> a écrit :\n> \n> Sure, please do !  The day after tomorrow I have a meeting with Théo in Bordeaux. \n> May be the best is pushing the mandatory changes (typos, etc.) and sending PRs for the rest.\n> \n> \n\nSorry : the meeting is on Friday, not Thursday!\n\n> \n> \n>> Le 21 sept. 2021 à 16:53, Karl Palmskog ***@***.*** ***@***.***>> a écrit :\n>> \n>> \n>> @Casteran <https://github.com/Casteran> can I do a language pass in the jfla2022 branch? And do you want all changes as pull requests, or should I just push minor fix?\n>> \n>> —\n>> You are receiving this because you were mentioned.\n>> Reply to this email directly, view it on GitHub <https://github.com/coq-community/hydra-battles/issues/82#issuecomment-924067088>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AJW6FCQSROO6EVTA7QJAVI3UDCL53ANCNFSM5ELXOA4Q>.\n>> Triage notifications on the go with GitHub Mobile for iOS <https://apps.apple.com/app/apple-store/id1477376905?ct=notification-email&mt=8&pt=524675> or Android <https://play.google.com/store/apps/details?id=com.github.android&referrer=utm_campaign%3Dnotification-email%26utm_medium%3Demail%26utm_source%3Dgithub>. \n>> \n> \n\n"},{"author":"Zimmi48","date":"2021-09-21T16:53:10Z","comment":"And tomorrow is Wednesday, not even Thursday. :laughing: \r\n\r\nIf you wish, we could do a video call with you all during my time in Bordeaux (I guess any time that works for you)."},{"author":"cpitclaudel","date":"2021-09-21T17:34:22Z","comment":"> Théo and I have a meeting on Friday.  Could you compile the pdf ?\r\n\r\nSure thing, I will do that!\r\n\r\n> If you wish, we could do a video call with you all during my time in Bordeaux\r\n\r\nThat would be lovely.\r\n"},{"author":"palmskog","date":"2021-09-21T17:45:26Z","comment":"@Zimmi48 a video call sounds nice. I think you can still see my general availability in the survey WG poll. I can stretch to 6pm or 7pm if that's the only slot that fits Clément."},{"author":"Casteran","date":"2021-09-21T18:07:15Z","comment":"For me, any time until Friday 6h30 pm.\nPierre\n\n\n> Le 21 sept. 2021 à 18:53, Théo Zimmermann ***@***.***> a écrit :\n> \n> \n> And tomorrow is Wednesday, not even Thursday. If you wish, we could do a video call with you all during my time in Bordeaux (I guess any time that works for you).\n> \n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub <https://github.com/coq-community/hydra-battles/issues/82#issuecomment-924172408>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AJW6FCR55ZFVDRJF232Q3ZDUDC2ABANCNFSM5ELXOA4Q>.\n> Triage notifications on the go with GitHub Mobile for iOS <https://apps.apple.com/app/apple-store/id1477376905?ct=notification-email&mt=8&pt=524675> or Android <https://play.google.com/store/apps/details?id=com.github.android&referrer=utm_campaign%3Dnotification-email%26utm_medium%3Demail%26utm_source%3Dgithub>. \n> \n\n"},{"author":"Zimmi48","date":"2021-09-21T18:15:15Z","comment":"Let's say 4pm Paris time then. It should fit everyone's schedule if I'm not mistaken."},{"author":"Casteran","date":"2021-09-22T08:28:52Z","comment":"I tried to explain better the relationship with the 2018 (in constant space!). The draft (not a PR yet) is on a branch small-changes."},{"author":"cpitclaudel","date":"2021-09-24T00:30:33Z","comment":"I read through the text and opened a PR.  Btw, I don't have a link for the call tomorrow.  @Zimmi48 can you send it on Zulip?"}],"tags":[],"pull_requests":[]},{"author":"Zimmi48","number":81,"state":"closed","open_date":"2021-09-20T08:27:38Z","update_date":"2021-09-20T08:35:24Z","discussion":[{"author":"Zimmi48","date":"2021-09-20T08:35:16Z","comment":"Doesn't seem to actually work in GitHub Actions."}],"tags":[],"pull_requests":[]},{"author":"palmskog","number":80,"state":"closed","open_date":"2021-09-20T08:17:19Z","update_date":"2021-09-21T12:15:14Z","discussion":[{"author":"palmskog","date":"2021-09-21T10:49:33Z","comment":"@Casteran OK to merge this?"}],"tags":[],"pull_requests":[]},{"author":"palmskog","number":79,"state":"closed","open_date":"2021-09-14T18:18:47Z","update_date":"2021-09-20T07:25:55Z","discussion":[{"author":"Casteran","date":"2021-09-14T19:03:16Z","comment":"> Here is an initial draft adding the Compare operational typeclass discussed in #74.\r\n\r\nThanks !\r\n> \r\n> There are some low-level improvements to make, but also some questions to think about:\r\n> \r\n>     * Should there be any infix notation at all for the Compare typeclass? I add here `x <?> y`, but I don't use it in the code, since it's such as big change.\r\n\r\nMay be we can just give the infix for a kind of compatibility with the notations in Standard Library. Personally, I will use\r\nthe  synstx \"compare x y\" in the code.\r\n\r\n> \r\n>     * I get rid of some more boolean functions for convenience. I think it looks reasonable, but there are some tradeoffs in that the Decision typeclass shows up in a lot of places.\r\n> \r\n> \r\n> @Casteran could you give a high-level assessment whether this PR is worth polishing up and merging? Or maybe it should stay an experiment?\r\n\r\nI have had a look at your code, and found very reasonable to get rid of the boolean function whenever possible. \r\nWe do not have sequences like `unfold lt, lt_b`any more :-)\r\n\r\nThe cost will be perhaps to add a documentation on Decision in the book (but it will be interesting anyway !).\r\n\r\n\r\n"},{"author":"palmskog","date":"2021-09-19T21:30:39Z","comment":"I improved the organization of lemmas and did some fixes based on the discussion above. In particular, I removed the infix notation for `compare` for now and updated some material on the `Comparable` typeclass for the new (in my opinion improved) definition. I think this should now be ready to merge.\r\n\r\nSince the `Decision` typeclass was not the subject of this PR, I would prefer to another PR with material in the book about `Decision`."}],"tags":[],"pull_requests":[]},{"author":"Casteran","number":78,"state":"closed","open_date":"2021-09-07T14:18:53Z","update_date":"2022-01-06T10:31:51Z","discussion":[],"tags":[],"pull_requests":[]},{"author":"Zimmi48","number":77,"state":"closed","open_date":"2021-09-07T14:18:05Z","update_date":"2021-09-20T07:35:12Z","discussion":[],"tags":[],"pull_requests":[]},{"author":"palmskog","number":76,"state":"closed","open_date":"2021-09-04T18:54:49Z","update_date":"2021-09-05T09:05:41Z","discussion":[],"tags":[],"pull_requests":[]},{"author":"Zimmi48","number":75,"state":"closed","open_date":"2021-08-31T20:16:17Z","update_date":"2021-09-01T08:26:24Z","discussion":[{"author":"Casteran","date":"2021-08-31T20:50:35Z","comment":"The last error is mine, \"omega_Small «  instead of « Omega_Small ». I didn’t notice it, because on MacOS this is more or less the same file name.\nI pushed the correction on master.\n\n\n\n> Le 31 août 2021 à 22:16, Théo Zimmermann ***@***.***> a écrit :\n> \n> Let's see if this fixes the strange CI failure.\n> \n> You can view, comment on, or merge this pull request online at:\n> \n>   https://github.com/coq-community/hydra-battles/pull/75 <https://github.com/coq-community/hydra-battles/pull/75>\n> Commit Summary\n> \n> Update Coq Nix Toolbox.\n> File Changes\n> \n> M .nix/coq-nix-toolbox.nix <https://github.com/coq-community/hydra-battles/pull/75/files#diff-4b522d4143029e1643dfae85c8c72ea2553612476f87dd84b91d851788eccd85> (2)\n> M default.nix <https://github.com/coq-community/hydra-battles/pull/75/files#diff-245563af9e34754739b12b294f3324c1d42c116ace7ce8735e21dfbc82d8e064> (2)\n> Patch Links:\n> \n> https://github.com/coq-community/hydra-battles/pull/75.patch <https://github.com/coq-community/hydra-battles/pull/75.patch>\n> https://github.com/coq-community/hydra-battles/pull/75.diff <https://github.com/coq-community/hydra-battles/pull/75.diff>\n> —\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub <https://github.com/coq-community/hydra-battles/pull/75>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AJW6FCSKZDTSQ5DMCNRN3WLT7U2BZANCNFSM5DE4WZEQ>.\n> Triage notifications on the go with GitHub Mobile for iOS <https://apps.apple.com/app/apple-store/id1477376905?ct=notification-email&mt=8&pt=524675> or Android <https://play.google.com/store/apps/details?id=com.github.android&referrer=utm_campaign%3Dnotification-email%26utm_medium%3Demail%26utm_source%3Dgithub>. \n> \n\n"},{"author":"Casteran","date":"2021-08-31T21:05:55Z","comment":"Apart from this error (in doc/part-hydras.tex) the CI failure looks to be fixed. \n\n\n> Le 31 août 2021 à 22:50, Castéran Pierre ***@***.***> a écrit :\n> \n> The last error is mine, \"omega_Small «  instead of « Omega_Small ». I didn’t notice it, because on MacOS this is more or less the same file name.\n> I pushed the correction on master.\n> \n> \n> \n>> Le 31 août 2021 à 22:16, Théo Zimmermann ***@***.*** ***@***.***>> a écrit :\n>> \n>> Let's see if this fixes the strange CI failure.\n>> \n>> You can view, comment on, or merge this pull request online at:\n>> \n>>   https://github.com/coq-community/hydra-battles/pull/75 <https://github.com/coq-community/hydra-battles/pull/75>\n>> Commit Summary\n>> \n>> Update Coq Nix Toolbox.\n>> File Changes\n>> \n>> M .nix/coq-nix-toolbox.nix <https://github.com/coq-community/hydra-battles/pull/75/files#diff-4b522d4143029e1643dfae85c8c72ea2553612476f87dd84b91d851788eccd85> (2)\n>> M default.nix <https://github.com/coq-community/hydra-battles/pull/75/files#diff-245563af9e34754739b12b294f3324c1d42c116ace7ce8735e21dfbc82d8e064> (2)\n>> Patch Links:\n>> \n>> https://github.com/coq-community/hydra-battles/pull/75.patch <https://github.com/coq-community/hydra-battles/pull/75.patch>\n>> https://github.com/coq-community/hydra-battles/pull/75.diff <https://github.com/coq-community/hydra-battles/pull/75.diff>\n>> —\n>> You are receiving this because you are subscribed to this thread.\n>> Reply to this email directly, view it on GitHub <https://github.com/coq-community/hydra-battles/pull/75>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AJW6FCSKZDTSQ5DMCNRN3WLT7U2BZANCNFSM5DE4WZEQ>.\n>> Triage notifications on the go with GitHub Mobile for iOS <https://apps.apple.com/app/apple-store/id1477376905?ct=notification-email&mt=8&pt=524675> or Android <https://play.google.com/store/apps/details?id=com.github.android&referrer=utm_campaign%3Dnotification-email%26utm_medium%3Demail%26utm_source%3Dgithub>. \n>> \n> \n\n"},{"author":"Casteran","date":"2021-09-01T07:18:04Z","comment":"It’s working ! Thanks !\n\n\n> Le 31 août 2021 à 22:16, Théo Zimmermann ***@***.***> a écrit :\n> \n> Let's see if this fixes the strange CI failure.\n> \n> You can view, comment on, or merge this pull request online at:\n> \n>   https://github.com/coq-community/hydra-battles/pull/75 <https://github.com/coq-community/hydra-battles/pull/75>\n> Commit Summary\n> \n> Update Coq Nix Toolbox.\n> File Changes\n> \n> M .nix/coq-nix-toolbox.nix <https://github.com/coq-community/hydra-battles/pull/75/files#diff-4b522d4143029e1643dfae85c8c72ea2553612476f87dd84b91d851788eccd85> (2)\n> M default.nix <https://github.com/coq-community/hydra-battles/pull/75/files#diff-245563af9e34754739b12b294f3324c1d42c116ace7ce8735e21dfbc82d8e064> (2)\n> Patch Links:\n> \n> https://github.com/coq-community/hydra-battles/pull/75.patch <https://github.com/coq-community/hydra-battles/pull/75.patch>\n> https://github.com/coq-community/hydra-battles/pull/75.diff <https://github.com/coq-community/hydra-battles/pull/75.diff>\n> —\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub <https://github.com/coq-community/hydra-battles/pull/75>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AJW6FCSKZDTSQ5DMCNRN3WLT7U2BZANCNFSM5DE4WZEQ>.\n> Triage notifications on the go with GitHub Mobile for iOS <https://apps.apple.com/app/apple-store/id1477376905?ct=notification-email&mt=8&pt=524675> or Android <https://play.google.com/store/apps/details?id=com.github.android&referrer=utm_campaign%3Dnotification-email%26utm_medium%3Demail%26utm_source%3Dgithub>. \n> \n\n"},{"author":"Zimmi48","date":"2021-09-01T08:25:23Z","comment":"The issue was that the preview branch for the Coq Nix Toolbox had been force-pushed to: https://github.com/coq-community/coq-nix-toolbox/issues/61\r\nNow that we are using the official `master` branch of the Coq Nix Toolbox instead, the problem shouldn't happen again."}],"tags":[],"pull_requests":[]},{"author":"palmskog","number":74,"state":"open","open_date":"2021-08-31T11:49:14Z","update_date":"2021-09-05T09:10:10Z","discussion":[{"author":"Casteran","date":"2021-08-31T13:13:46Z","comment":"@palmskog  I'd a look at your experimental branch. That's much better ! Thanks !"},{"author":"palmskog","date":"2021-08-31T13:21:14Z","comment":"@Casteran in this case, I will probably package the branch as a sequence of smaller pull requests in the next few weeks.\r\n\r\nSpecifically, besides the above on total pre-orders, I also thought it could be a good idea to introduce an operational typeclass for comparisons:\r\n```coq\r\nClass Compare A := compare : A -> A -> comparison.\r\n\r\nClass Comparable {A} (lt: relation A) (cmp : Compare A) : Prop := {\r\n  sto :> StrictOrder lt;\r\n  compare_correct: forall a b, CompareSpec (a = b) (lt a b) (lt b a) (compare a b);\r\n}.\r\n```\r\nThis enables using a consistent infix notation across all the comparisons between different types, e.g., `x <? y` or `x <?> y` instead of `compare x y`."},{"author":"Casteran","date":"2021-08-31T13:39:00Z","comment":"Since the pdf is now made with Alectryon, we won't have to update too much the latex files, except for a link to Bas Spitter and van der Weegen's article (already cited, section 10.3.1, p. 202, but it's a long time I didn't re-read it).\r\n\r\nSince I defined the `ON`class much later than `E0`, I suspect I have proved some specific lemmas about ordinals in Cantor normal form which could have been proved for any ordinal notation. Well, to be considered later!"},{"author":"palmskog","date":"2021-08-31T15:06:42Z","comment":"It should be noted that there are actually serious developments based on the semibundled approach. The most well-known might be Lean's mathlib, and the mathlib authors describe their approach in a quite recent [paper](https://leanprover-community.github.io/papers/mathlib-paper.pdf) (page 4). However, even they typically use the decision typeclass as a parameter type and not as a member type (p. 5)."},{"author":"Casteran","date":"2021-08-31T15:27:50Z","comment":"Anyway, It may be interesting to document both definitions and chose one (for instance the unbundled one), using the module system to mask the other.\n\n\n> Le 31 août 2021 à 17:06, Karl Palmskog ***@***.***> a écrit :\n> \n> \n> It should be noted that there are actually serious developments based on the semibundled approach, the most well-known might be Lean's mathlib, and the authors describe their approach in a quite recent paper <https://leanprover-community.github.io/papers/mathlib-paper.pdf> (page 4). However, even they typically use the decision typeclass as a parameter type and not as a member type (p. 5).\n> \n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub <https://github.com/coq-community/hydra-battles/issues/74#issuecomment-909324347>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AJW6FCS4UMFLG2RRMNMFDMLT7TVY3ANCNFSM5DD52CTQ>.\n> Triage notifications on the go with GitHub Mobile for iOS <https://apps.apple.com/app/apple-store/id1477376905?ct=notification-email&mt=8&pt=524675> or Android <https://play.google.com/store/apps/details?id=com.github.android&referrer=utm_campaign%3Dnotification-email%26utm_medium%3Demail%26utm_source%3Dgithub>. \n> \n\n"},{"author":"palmskog","date":"2021-09-04T19:20:49Z","comment":"To me, there are right now only two ways of using booleans in a disciplined way in Coq: SSReflect and the Decision typeclass. Anything else will seemingly devolve into a cascade of ad-hoc lemmas connecting boolean functions with Props. Bob Harper's comments about [boolean blindness](https://existentialtype.wordpress.com/2011/03/15/boolean-blindness/) are unfortunately pertinent in many Coq projects that do not use MathComp or stdpp. Probably this can be viewed as a \"cost\" of moving from a non-computational logic like HOL (where bool and Prop are conflated) to a dependently typed one."},{"author":"Casteran","date":"2021-09-05T09:10:10Z","comment":"When we add more stuff in hydra-gaia, it will be interesting to comment and compare both styles, and choose a style for writing bridge lemmas and their proofs."}],"tags":[],"pull_requests":[]},{"author":"cpitclaudel","number":73,"state":"closed","open_date":"2021-08-30T01:26:57Z","update_date":"2021-08-30T09:39:38Z","discussion":[{"author":"cpitclaudel","date":"2021-08-30T01:44:23Z","comment":"![image](https://user-images.githubusercontent.com/8181630/131274114-9249709b-d287-4c46-9eb4-c7a098f118a2.png)\r\n"},{"author":"Casteran","date":"2021-08-30T06:48:50Z","comment":"Thanks! The demo is very nice!  "},{"author":"Zimmi48","date":"2021-08-30T09:27:40Z","comment":"I've done the update. I've checked that the generated PDF does correspond to the screenshot."},{"author":"Casteran","date":"2021-08-30T09:35:11Z","comment":"> I've done the update. I've checked that the generated PDF does correspond to the screenshot.\r\n\r\nThanks! I've tested inputsnippets on a local branch, which I will merge this afternoon. It helps a lot to write more readable `.v`and `pdf`!"}],"tags":[],"pull_requests":[]},{"author":"cpitclaudel","number":72,"state":"closed","open_date":"2021-08-29T18:02:00Z","update_date":"2021-09-20T08:07:48Z","discussion":[],"tags":[],"pull_requests":[]},{"author":"cpitclaudel","number":71,"state":"closed","open_date":"2021-08-28T04:59:04Z","update_date":"2021-09-24T05:00:42Z","discussion":[{"author":"Zimmi48","date":"2021-08-28T17:37:52Z","comment":"I pushed the same commit as on top of #67 to test the latest `master` version of Alectryon."},{"author":"Casteran","date":"2021-08-28T18:54:00Z","comment":"Looks nice !\r\nJust a naive question : Do I have to update my (pip installed) version of alectryon on my machine ? "},{"author":"Zimmi48","date":"2021-08-28T19:39:56Z","comment":"Yes, to merge this PR and #67, there are two options:\r\n1. wait for Clément to make a new release and require it instead of the current 1.3\r\n2. run `pip install` from the GitHub repository of Alectryon (and document that this is required)."},{"author":"Zimmi48","date":"2021-09-08T16:57:10Z","comment":"Something I've just noticed is that ever since this PR, the \"Build Alectryon snippets\" step in the build-doc job does nothing and all the snippet building is actually done in the \"Compile LaTeX document\" step. I don't really understand why that would be the case given that the `Makefile` in `doc/movies` is still there."},{"author":"cpitclaudel","date":"2021-09-24T05:00:38Z","comment":"> I don't really understand why that would be the case given that the Makefile in doc/movies is still there.\r\n\r\nThanks for catching that, fixed in https://github.com/coq-community/hydra-battles/pull/84"}],"tags":[],"pull_requests":[]},{"author":"Casteran","number":70,"state":"open","open_date":"2021-08-26T18:38:44Z","update_date":"2021-09-14T19:41:45Z","discussion":[{"author":"palmskog","date":"2021-08-26T20:44:10Z","comment":"@Casteran some high-level comments on what I think would be beneficial for a release:\r\n\r\n- Consider switching from italicized text inside \"Project\" and \"Exercise\" blocks to plain text. Tilted fixed-width syntax looks bad and is hard to read, even using Alectryon. Project 2.2 on page 23 is one example.\r\n- Consider putting the release pdf on GitHub as an asset. One example is the [Coq 8.13.2 release](https://github.com/coq/coq/releases/tag/V8.13.2), which includes the reference manual as pdf, and another is the [Mathematical Components book 1.0.0 release](https://github.com/math-comp/mcb/releases/tag/zenodo-1.0.0).\r\n- Consider putting the source code and pdf on Zenodo to enable citing both the text and code. One example is the [Coq 8.13.0 release](https://zenodo.org/record/4501022), and another is the [MCB 1.0.0 release](https://zenodo.org/record/4282710)."},{"author":"cpitclaudel","date":"2021-08-27T08:27:21Z","comment":"Awesome work :)\r\n\r\nThe spacing issue is due to the way the chopping into snippets is done; it produces this:\r\n\r\n```latex\r\n\\begin{alectryon}\r\n  \\begin{txt}\r\n    \\nl\r\n  \\end{txt}\r\n  \\sep\r\n  \\begin{sentence}\r\n    \\begin{input}\r\n      \\PY{k+kn}{Inductive}~\\PY{n+nf}{S0}~\\PY{o}{:}~~\\PY{n}{relation}~\\PY{n}{Hydrae}~\\PY{o}{:=}\\nl\r\n        …\r\n    \\end{input}\r\n  \\end{sentence}\r\n  \\sep\r\n  \\begin{txt}\r\n    \\nl\r\n  \\end{txt}\r\n\\end{alectryon}\r\n```\r\n\r\nThe `\\begin{txt} \\nl \\end{txt}` at the beginning and end of each snippet are blank lines, hence the trouble.  This is because the original snippet has newlines in it too.\r\n\r\n```coq\r\n(* begin snippet S0Def *)\r\n\r\nInductive S0 :  relation Hydrae :=\r\n| S0_first : forall s, S0  (hcons head s) s\r\n| S0_rest : forall  h s s',\r\n    S0  s s' ->  S0  (hcons h s) (hcons h s').\r\n\r\n(* end snippet S0Def *)\r\n```\r\n\r\nThis can be fixed in `extract_snippets/Extractor.py`, I'm sure.  I can look into it if needed.  But I think it would be simpler to fix it with a transform (before generating the LaTeX code).\r\n\r\nThis actually leads me to another point that I wanted to discuss.  Right now the converter does coq → reStructuredText → LaTeX → LaTeX snippets.  But the only reStructuredText feature that is used is setting display flags using ``.. coq:: …``, I think. (Is that right?)\r\n\r\nIf that's the case, there would be a simpler and faster design, which would also pollute the source code less.  Instead of \r\n\r\n```coq\r\n  (* begin snippet endOfProof *)\r\n\r\n  (*| .. coq:: no-out |*)\r\n\r\n  …\r\n```\r\n\r\nwe would write\r\n\r\n```coq\r\n  (* begin snippet endOfProof:: no-out *)\r\n\r\n  …\r\n```\r\n\r\nThere would be no need for reStructuredText.  Additionally, the segmentation would be a lot simpler: we would do coq → list of coq fragments → LaTeX snippets.  That is, we would cut up the document into snippets, and *then* feed it to Coq, instead of the other way around.\r\n\r\nAnd this would address the issues that Pierre noted with the amount of LaTeX that gets generated, and hence the need to add `no-out` in many places outside of snippets to reduce the size of the generated document.  Instead we would simply not convert to latex things that are not part of snippets.\r\n\r\nThere's just one thing that's convenient with reStructuredText's directives that wouldn't be as easy: changing flags mid-way through a snippet.  That is, there's no immediate equivalent of this:\r\n\r\n```coq\r\n  (* begin snippet endOfProof *)\r\n\r\n  (*| .. coq:: no-out |*)\r\n\r\n  …\r\n\r\n  (*| .. coq:: messages |*)\r\n\r\n  …\r\n```\r\n\r\nPierre, is this a pattern that you use a lot?  If so we can think of tweaks/fixes.  It shouldn't be too hard to add.\r\n"},{"author":"Casteran","date":"2021-08-27T10:40:45Z","comment":"Perhaps we should also provide a tar file of the html files, with instructions for making the links `../theories/html` correct ?\n\n\n\n\n> Le 26 août 2021 à 22:44, Karl Palmskog ***@***.***> a écrit :\n> \n> \n> @Casteran <https://github.com/Casteran> some high-level comments on what I think would be beneficial for a release:\n> \n> Consider switching from italicized text inside \"Project\" and \"Exercise\" blocks to plain text. Tilted fixed-width syntax looks bad and is hard to read, even using Alectryon. Project 2.2 on page 23 is one example.\n> Consider putting the release pdf on GitHub as an asset. One example is the Coq 8.13.2 release <https://github.com/coq/coq/releases/tag/V8.13.2>, which includes the reference manual as pdf, and another is the Mathematical Components book 1.0.0 release <https://github.com/math-comp/mcb/releases/tag/zenodo-1.0.0>.\n> Consider putting the source code and pdf on Zenodo to enable citing both the text and code. One example is the Coq 8.13.0 release <https://zenodo.org/record/4501022>, and another is the MCB 1.0.0 release <https://zenodo.org/record/4282710>.\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub <https://github.com/coq-community/hydra-battles/issues/70#issuecomment-906730067>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AJW6FCRJMMJ34N6PK2BVDBTT62RSJANCNFSM5C36J2AA>.\n> Triage notifications on the go with GitHub Mobile for iOS <https://apps.apple.com/app/apple-store/id1477376905?ct=notification-email&mt=8&pt=524675> or Android <https://play.google.com/store/apps/details?id=com.github.android&referrer=utm_campaign%3Dnotification-email%26utm_medium%3Demail%26utm_source%3Dgithub>. \n> \n\n"},{"author":"palmskog","date":"2021-08-27T10:49:02Z","comment":"> Perhaps we should also provide a tar file of the html files, with instructions for making the links `../theories/html` correct ?\r\n\r\nIndeed, we can provide a separate archive with HTML files. But in this case, I suggest manually preprocessing the HTML files to fix any linking issues before attaching this archive. Even better would in my opinion be that the main source archive contains the manually preprocessed HTML files (correct links) along with Coq source files."},{"author":"Casteran","date":"2021-08-27T10:54:52Z","comment":"Thanks for your comments ! I will follow your advice about vertical spacing. I will come back to you when I have some corrected examples.\n\n>  This actually leads me to another point that I wanted to discuss. Right now the converter does coq → reStructuredText → LaTeX → LaTeX snippets. But the only reStructuredText feature that is used is setting display flags using .. coq:: …, I think. (Is that right?)\n\nYes, for the time being ...\n> If that's the case, there would be a simpler and faster design, which would also pollute the source code less. Instead of\n> \n>   (* begin snippet endOfProof *)\n> \n>   (*| .. coq:: no-out |*)\n> \n>   …\n> we would write\n> \n>   (* begin snippet endOfProof:: no-out *)\n> \nOk, I will try.\n>   …\n> There would be no need for reStructuredText. Additionally, the segmentation would be a lot simpler: we would do coq → list of coq fragments → LaTeX snippets. That is, we would cut up the document into snippets, and then feed it to Coq, instead of the other way around.\n> \n> And this would address the issues that Pierre noted with the amount of LaTeX that gets generated, and hence the need to add no-out in many places outside of snippets to reduce the size of the generated document. Instead we would simply not convert to latex things that are not part of snippets.\n> \n> There's just one thing that's convenient with reStructuredText's directives that wouldn't be as easy: changing flags mid-way through a snippet. That is, there's no immediate equivalent of this:\n> \n>   (* begin snippet endOfProof *)\n> \n>   (*| .. coq:: no-out |*)\n> \n>   …\n> \n>   (*| .. coq:: messages |*)\n> \n>   …\n> Pierre, is this a pattern that you use a lot? If so we can think of tweaks/fixes. It shouldn't be too hard to add.\n> \nIndeed, in long proofs, I may start with the `no-out` for important proof steps, like `transfinite induction`, assert`, etc., then display a bunch of sub-goals, then use `none` to mask boring or shameful details …\nPerhaps a good solution would be to cut a snippet into homogeneous slices, at the cost of adding a lot of comments to the `.v` file.  I didn’t try `alectryon.el` yet. Could it be used to mask all the Alectryon directives ?\n\nAnyway, thank you for this tool !!!\nPierre\n\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub <https://github.com/coq-community/hydra-battles/issues/70#issuecomment-907025321>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AJW6FCWOVZKBB7ZCEHYLYGTT65D7HANCNFSM5C36J2AA>.\n> Triage notifications on the go with GitHub Mobile for iOS <https://apps.apple.com/app/apple-store/id1477376905?ct=notification-email&mt=8&pt=524675> or Android <https://play.google.com/store/apps/details?id=com.github.android&referrer=utm_campaign%3Dnotification-email%26utm_medium%3Demail%26utm_source%3Dgithub>. \n> \n\n"},{"author":"Casteran","date":"2021-08-27T14:21:54Z","comment":"Removing the blank lines around the beginning and end of snippets helps a lot!\n\n> Le 27 août 2021 à 10:27, Clément Pit-Claudel ***@***.***> a écrit :\n> \n> \n> Awesome work :)\n> \n> The spacing issue is due to the way the chopping into snippets is done; it produces this:\n> \n> \\begin{alectryon}\n>   \\begin{txt}\n>     \\nl\n>   \\end{txt}\n>   \\sep\n>   \\begin{sentence}\n>     \\begin{input}\n>       \\PY{k+kn}{Inductive}~\\PY{n+nf}{S0}~\\PY{o}{:}~~\\PY{n}{relation}~\\PY{n}{Hydrae}~\\PY{o}{:=}\\nl\n>         …\n>     \\end{input}\n>   \\end{sentence}\n>   \\sep\n>   \\begin{txt}\n>     \\nl\n>   \\end{txt}\n> \\end{alectryon}\n> The \\begin{txt} \\nl \\end{txt} at the beginning and end of each snippet are blank lines, hence the trouble. This is because the original snippet has newlines in it too.\n> \n> (* begin snippet S0Def *)\n> \n> Inductive S0 :  relation Hydrae :=\n> | S0_first : forall s, S0  (hcons head s) s\n> | S0_rest : forall  h s s',\n>     S0  s s' ->  S0  (hcons h s) (hcons h s').\n> \n> (* end snippet S0Def *)\n> This can be fixed in extract_snippets/Extractor.py, I'm sure. I can look into it if needed. But I think it would be simpler to fix it with a transform (before generating the LaTeX code).\n> \n> This actually leads me to another point that I wanted to discuss. Right now the converter does coq → reStructuredText → LaTeX → LaTeX snippets. But the only reStructuredText feature that is used is setting display flags using .. coq:: …, I think. (Is that right?)\n> \n> If that's the case, there would be a simpler and faster design, which would also pollute the source code less. Instead of\n> \n>   (* begin snippet endOfProof *)\n> \n>   (*| .. coq:: no-out |*)\n> \n>   …\n> we would write\n> \n>   (* begin snippet endOfProof:: no-out *)\n> \n>   …\n> There would be no need for reStructuredText. Additionally, the segmentation would be a lot simpler: we would do coq → list of coq fragments → LaTeX snippets. That is, we would cut up the document into snippets, and then feed it to Coq, instead of the other way around.\n> \n> And this would address the issues that Pierre noted with the amount of LaTeX that gets generated, and hence the need to add no-out in many places outside of snippets to reduce the size of the generated document. Instead we would simply not convert to latex things that are not part of snippets.\n> \n> There's just one thing that's convenient with reStructuredText's directives that wouldn't be as easy: changing flags mid-way through a snippet. That is, there's no immediate equivalent of this:\n> \n>   (* begin snippet endOfProof *)\n> \n>   (*| .. coq:: no-out |*)\n> \n>   …\n> \n>   (*| .. coq:: messages |*)\n> \n>   …\n> Pierre, is this a pattern that you use a lot? If so we can think of tweaks/fixes. It shouldn't be too hard to add.\n> \n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub <https://github.com/coq-community/hydra-battles/issues/70#issuecomment-907025321>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AJW6FCWOVZKBB7ZCEHYLYGTT65D7HANCNFSM5C36J2AA>.\n> Triage notifications on the go with GitHub Mobile for iOS <https://apps.apple.com/app/apple-store/id1477376905?ct=notification-email&mt=8&pt=524675> or Android <https://play.google.com/store/apps/details?id=com.github.android&referrer=utm_campaign%3Dnotification-email%26utm_medium%3Demail%26utm_source%3Dgithub>. \n> \n\n"},{"author":"Zimmi48","date":"2021-08-27T16:25:12Z","comment":">… we would write (* begin snippet endOfProof:: no-out *)\nOk, I will try.\n\nNote that this is just an idea but this is not supported yet."},{"author":"cpitclaudel","date":"2021-08-27T23:16:45Z","comment":"I looked a bit further, and it does sound like we would need some syntax for changing the default rendering past for part of a snippet, since there are many uses of that feature.\r\n\r\nI will think about it."},{"author":"cpitclaudel","date":"2021-08-28T05:04:37Z","comment":"OK, implementation is in #71. \r\n\r\n> I will think about it.\r\n\r\nI went the easiest way possible: I implemented `(* begin snippet endOfProof:: no-out *)` headers, and I further subdivide snippets around comments of the form `(*| .. coq:: … |*)`, keeping track of the relevant output customizations for each sub-snippet; they are all reassembled in the end.."},{"author":"Casteran","date":"2021-08-29T16:18:51Z","comment":"I noted a small issue: I wanted to implement the pattern \"rest of proof skipped\", for instance through the snippet \r\nmGeb (in file theories/ordinals/Hydra/Omega_Small.v) I couldn't unstick the final `Qed`from the comment `(* ... *)` in the pdf (p. 45). I tried a workaround: to add a snippet just for the final `Qed`.   More generally, A possible way to show only parts of a proof script would  be to use a sequence of snippets instead of a single one with sub-snippets in `none`mode ?\r\n\r\nThe issue is visible on the last commited version."},{"author":"cpitclaudel","date":"2021-08-29T17:34:03Z","comment":"Thanks, that's a mistake I made in the coalesce_text function in Alectryon (I wrote it a while ago but didn't use it until this project).  And indeed after the fix:\r\n\r\n```diff\r\ndiff --git a/snippets.broken-concat/Omega2_Small/mGeb.tex b/snippets/Omega2_Small/mGeb.tex\r\nindex 0e829ab..00e1e78 100644\r\n--- a/snippets.broken-concat/Omega2_Small/mGeb.tex\r\n+++ b/snippets/Omega2_Small/mGeb.tex\r\n@@ -2,12 +2,13 @@\r\n   % Generator: Alectryon\r\n   \\sep\r\n   \\begin{txt}\r\n-    ~~~~\\PY{c}{(*~...~*)}\r\n+    ~~~~\\PY{c}{(*~...~*)}\\nl\r\n+    ~~~~~~\\nl\r\n   \\end{txt}\r\n   \\sep\r\n   \\begin{sentence}\r\n     \\begin{input}\r\n-      \\PY{k+kn}{Qed}\\PY{o}{.}\r\n+      ~~\\PY{k+kn}{Qed}\\PY{o}{.}\r\n     \\end{input}\r\n   \\end{sentence}\r\n \\end{alectryon}\r\n```"},{"author":"cpitclaudel","date":"2021-08-29T17:41:01Z","comment":"> More generally, A possible way to show only parts of a proof script would be to use a sequence of snippets instead of a single one with sub-snippets in nonemode ?\r\n\r\nYes, but there will be problems with spacing, since you'll have two snippets and hence two `alectryon` environments.\r\n\r\nI do think it would be cleaner to have multiple snippets with no `.. coq:: none` comments in the middle of them, tough (it would further simplify the driver, too).  If you want to go that route, then we would change the LaTeX slightly: you would have a command `\\includesnippets{snippet1,snippet2,snippet3}` instead of a plain `\\include`, and that command would include all three snippets in a single `\\alectryon` block.\r\n\r\nLet me know if you want to do that."},{"author":"Casteran","date":"2021-08-29T18:00:43Z","comment":"I like the idea of including multiple snippets ! Besides the issue of spacing, I believe it will make the latex source more readable.\n\n> Le 29 août 2021 à 19:41, Clément Pit-Claudel ***@***.***> a écrit :\n> \n> \n> More generally, A possible way to show only parts of a proof script would be to use a sequence of snippets instead of a single one with sub-snippets in nonemode ?\n> \n> Yes, but there will be problems with spacing, since you'll have two snippets and hence two alectryon environments.\n> \n> I do think it would be cleaner to have multiple snippets with no .. coq:: none comments in the middle of them, tough (it would further simplify the driver, too). If you want to go that route, then we would change the LaTeX slightly: you would have a command \\includesnippets{snippet1,snippet2,snippet3} instead of a plain \\include, and that command would include all three snippets in a single \\alectryon block.\n> \n> Let me know if you want to go that route.\n> \n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub <https://github.com/coq-community/hydra-battles/issues/70#issuecomment-907835842>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AJW6FCSWMTJKL6TGCHTKATDT7JWLPANCNFSM5C36J2AA>.\n> Triage notifications on the go with GitHub Mobile for iOS <https://apps.apple.com/app/apple-store/id1477376905?ct=notification-email&mt=8&pt=524675> or Android <https://play.google.com/store/apps/details?id=com.github.android&referrer=utm_campaign%3Dnotification-email%26utm_medium%3Demail%26utm_source%3Dgithub>. \n> \n\n"},{"author":"cpitclaudel","date":"2021-08-29T18:02:18Z","comment":"> sometimes, the implication arrow -> is broken into two pieces (in long formulas) .\r\n\r\nFixed in #72"},{"author":"cpitclaudel","date":"2021-08-30T01:44:35Z","comment":"> I like the idea of including multiple snippets !\r\n\r\nOK, prototype in #73"},{"author":"Casteran","date":"2021-08-30T15:26:53Z","comment":"@Zimmi48 The last version I pushed fails almost immediately on NIX CI on the \"Checking presence of CI target coq\" step.\r\nIs this just a problem of the machine which runs CI ? Or a mistake of mine ?"},{"author":"Zimmi48","date":"2021-08-30T15:38:37Z","comment":"The error is surprising, especially because it doesn't give any useful output to debug it. It's likely though that this will be a transient error so let's wait to see if it persists."},{"author":"Casteran","date":"2021-09-06T16:27:09Z","comment":"> > Perhaps we should also provide a tar file of the html files, with instructions for making the links `../theories/html` correct ?\r\n> \r\n> Indeed, we can provide a separate archive with HTML files. But in this case, I suggest manually preprocessing the HTML files to fix any linking issues before attaching this archive. Even better would in my opinion be that the main source archive contains the manually preprocessed HTML files (correct links) along with Coq source files.\r\n\r\nSo, What you suggest is to generate (by `coqdoc -g -html Foo.v`) a file `Foo.html`which will be in the same directory as `Foo.v`?"},{"author":"palmskog","date":"2021-09-06T16:34:46Z","comment":"> So, What you suggest is to generate (by `coqdoc -g -html Foo.v`) a file `Foo.html`which will be in the same directory as `Foo.v`?\r\n\r\nRecall that a GitHub tag/release generates a tarball with the contents of the repo (possibly excepting some files). This means the user has to run `make html` manually to get the HTML files in `theories/html`. I was suggesting to prepare a release archive/tarball manually (in addition to the generated one) to have these HTML files already included in the usual directory (`theories/html`)."},{"author":"Casteran","date":"2021-09-14T16:34:50Z","comment":"Coqdoc generation fails on NIX CI with a message I don't understand. (works on my machine)\r\n\r\nFile \"./theories/ordinals/OrdinalNotations/ON_Omega_plus_omega.v\", line 6, characters 0-78:\r\nError:\r\n/home/runner/work/hydra-battles/hydra-battles/theories/ordinals/OrdinalNotations/ON_Finite.vo: premature end of file. Try to rebuild it.\r\n\r\n\"coqc\"  -q -w -notation-overridden -w -ambiguous-paths -w -deprecated-instance-without-locality -w -deprecated-hint-rewrite-without-locality  -R theories/ordinals hydras -R theories/additions additions -R theories/gaia gaia_hydras -R exercises hydra_exercises theories/ordinals/OrdinalNotations/ON_plus.v\r\nmake[1]: *** [Makefile.coq:724: theories/ordinals/OrdinalNotations/ON_Omega_plus_omega.glob] Error 1\r\nmake[1]: *** Waiting for unfinished jobs....\r\nmake[1]: Leaving directory '/home/runner/work/hydra-battles/hydra-battles'\r\nmake: *** [Makefile:5: html] Error 2\r\nError: Process completed with exit code 2.\r\n"},{"author":"Casteran","date":"2021-09-14T19:12:40Z","comment":"It works now!  All the chapters of the book use Alectryon. \r\nThere are still a few verbatim (source and answers) when the computations are too long or result in errors during the snippet extraction.\r\nI have now to look for typos, overfull boxes, ... ¡ Mañana !"},{"author":"cpitclaudel","date":"2021-09-14T19:41:44Z","comment":"!! :tada: :partying_face: "}],"tags":[],"pull_requests":[]},{"author":"Zimmi48","number":69,"state":"closed","open_date":"2021-08-26T14:13:09Z","update_date":"2021-08-26T14:18:42Z","discussion":[],"tags":[],"pull_requests":[]},{"author":"Zimmi48","number":68,"state":"closed","open_date":"2021-08-26T12:31:39Z","update_date":"2021-08-26T12:47:46Z","discussion":[],"tags":[],"pull_requests":[]},{"author":"cpitclaudel","number":67,"state":"closed","open_date":"2021-08-25T17:06:17Z","update_date":"2021-08-29T22:19:06Z","discussion":[{"author":"Zimmi48","date":"2021-08-26T12:36:02Z","comment":"Thanks, no need for a release just yet. We can use the latest Alectryon in CI. I will push a commit doing that but removing the SerAPI patch to properly handle `COQPATH` to make sure that this fails, then I will update with a commit updating Alectryon but with the SerAPI patch before merging."},{"author":"Zimmi48","date":"2021-08-26T13:12:18Z","comment":"Looks like Nix CI didn't get triggered this time. Closing / reopening to trigger it."},{"author":"Zimmi48","date":"2021-08-26T14:27:10Z","comment":"Good, this failed as expected."},{"author":"Zimmi48","date":"2021-08-26T18:56:38Z","comment":"Now, there's this error:\r\n```\r\n! LaTeX Error: File `movies/snippets/assets/tango_subtle.sty' not found.\r\n```"},{"author":"Casteran","date":"2021-08-26T19:17:32Z","comment":"I had a similar issue this afternoon (on my machine)\nThe compilation was OK, but the latex extraction signaled an error:\n\nConvert '../../theories/ordinals/Gamma0/Gamma0.v' to latex.\n<string>:(3647:37)-(3647:51): (WARNING/2) Coq raised an exception:\n     > The reference Gamma0.compare was not found in the current environment.\n\nIndeed, the file was Gamma0.v, and the offending command in a sub-module.\nWhen I removed the prefix `Gamma0.`from `Gamma0.compare`, `make` and `make pdf` were both OK.\n\n\n\n> Le 26 août 2021 à 17:13, Théo Zimmermann ***@***.***> a écrit :\n> \n> \n> @Zimmi48 commented on this pull request.\n> \n> In theories/ordinals/Prelude/Iterates.v <https://github.com/coq-community/hydra-battles/pull/67#discussion_r696728636>:\n> \n> > @@ -54,7 +54,7 @@ Qed.\n>  (** TODO : move to more generic libraries *)\n>  \n>  Lemma iterate_compat3 f x n :\n> -  Iterates.iterate f n x = nat_rec (fun _ : nat => nat) x (fun _ y : nat => f y) n.\n> +  iterate f n x = nat_rec (fun _ : nat => nat) x (fun _ y : nat => f y) n.\n> I had to do this patch to make the build pass. Not a big issue, but it is a bit surprising that Coq would raise an error when executed through SerAPI here.\n> \n> —\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub <https://github.com/coq-community/hydra-battles/pull/67#pullrequestreview-739609151>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AJW6FCVKICJWN5KR7YTOCDDT6ZKZPANCNFSM5CZSF74Q>.\n> Triage notifications on the go with GitHub Mobile for iOS <https://apps.apple.com/app/apple-store/id1477376905?ct=notification-email&mt=8&pt=524675> or Android <https://play.google.com/store/apps/details?id=com.github.android&utm_campaign=notification-email>.\n> \n\n"},{"author":"cpitclaudel","date":"2021-08-27T07:26:05Z","comment":"> Now, there's this error:\r\n\r\nHopefully the commit that I just pushed will fix that."}],"tags":[],"pull_requests":[]},{"author":"Casteran","number":66,"state":"closed","open_date":"2021-08-24T16:50:23Z","update_date":"2021-08-26T13:18:58Z","discussion":[],"tags":[],"pull_requests":[]},{"author":"Casteran","number":65,"state":"closed","open_date":"2021-08-23T11:57:25Z","update_date":"2021-10-11T12:04:10Z","discussion":[{"author":"Zimmi48","date":"2021-08-23T16:30:59Z","comment":"Sure, it should help at least a little by avoiding from requesting intermediate goals that are not printed, writing to and reading from disk, and speed up the snippet extraction script. That being said, it's not an important enough speed up to show in the CI numbers. I think that most of the time spent by Alectryon is the time that Coq takes to check proof scripts themselves (whether they are printed or not doesn't change this)."},{"author":"cpitclaudel","date":"2021-08-25T17:10:22Z","comment":"This looks good.   I this we could also achieve this without annotations, by adding a transform that removes all irrelevant code before it gets fed to LaTeX (this is similar to what's being done here, but without annotations.)"},{"author":"Zimmi48","date":"2021-08-31T17:31:59Z","comment":"I think this has been superseded by #71 and could be closed, right?"},{"author":"cpitclaudel","date":"2021-08-31T17:35:15Z","comment":"Yep (at least on the `movies/` side)"},{"author":"Casteran","date":"2021-08-31T18:14:19Z","comment":"Ok, So I close the issue …\n\n\n> Le 31 août 2021 à 19:35, Clément Pit-Claudel ***@***.***> a écrit :\n> \n> \n> Yep\n> \n> —\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub <https://github.com/coq-community/hydra-battles/pull/65#issuecomment-909444205>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AJW6FCSTHQULODT3F6CEA43T7UHF5ANCNFSM5CUNLPFA>.\n> Triage notifications on the go with GitHub Mobile for iOS <https://apps.apple.com/app/apple-store/id1477376905?ct=notification-email&mt=8&pt=524675> or Android <https://play.google.com/store/apps/details?id=com.github.android&referrer=utm_campaign%3Dnotification-email%26utm_medium%3Demail%26utm_source%3Dgithub>. \n> \n\n"}],"tags":[],"pull_requests":[]},{"author":"Casteran","number":64,"state":"closed","open_date":"2021-08-23T08:10:55Z","update_date":"2021-08-31T18:14:29Z","discussion":[{"author":"Casteran","date":"2021-08-23T09:36:32Z","comment":"A possible workaround is to insert systematically comments `(*| .. coq:: none |*)` `(*||*)` around every snippet-free region.\r\nI tried it on `theories/ordinals/Epsilon0/Paths.v`, and it reduced the size of doc/movies/Paths.v from more than 100k lines to just 353 !\r\nI will proceed to a few more experiments.\r\nNotice that this method forbids a user to use Alectryon to look into the so hidden parts of a library"},{"author":"Zimmi48","date":"2021-08-23T11:42:28Z","comment":"Yes, modules need to be reexecuted by Alectryon to extract snippets from them. I don't think that adding `.. coq:: none` can prevent that. The only solution I can see would be to cut these modules into smaller pieces."},{"author":"Casteran","date":"2021-08-23T16:25:49Z","comment":"OK, I think I’ll finish first the adaptation to Alectryon of the hydras part of the document (75% done already).\nThen, we can think about how to improve some details.\n\nThis adaptation takes some time, because I noticed several inconsistencies to fix between the .v files and the Coqsrc and Coqanswer hand-made blocks.\nThanks to Alectryon,  the snippets inclusions are now consistent by construction 😀\n\n> Le 23 août 2021 à 13:42, Théo Zimmermann ***@***.***> a écrit :\n> \n> \n> Yes, modules need to be reexecuted by Alectryon to extract snippets from them. I don't think that adding .. coq:: none can prevent that. The only solution I can see would be to cut these modules into smaller pieces.\n> \n> —\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub <https://github.com/coq-community/hydra-battles/issues/64#issuecomment-903689548>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AJW6FCUTFSCS7MY2ENKN4YTT6IX25ANCNFSM5CUBBFJQ>.\n> Triage notifications on the go with GitHub Mobile for iOS <https://apps.apple.com/app/apple-store/id1477376905?ct=notification-email&mt=8&pt=524675> or Android <https://play.google.com/store/apps/details?id=com.github.android&utm_campaign=notification-email>.\n> \n\n"},{"author":"cpitclaudel","date":"2021-08-28T05:02:28Z","comment":"> OK, I think I’ll finish first the adaptation to Alectryon of the hydras part of the document (75% done already). Then, we can think about how to improve some details. This adaptation takes some time, because I noticed several inconsistencies to fix between the .v files and the Coqsrc and Coqanswer hand-made blocks. Thanks to Alectryon, the snippets inclusions are now consistent by construction :grinning:\r\n\r\nAh, this makes me very happy :)\r\n\r\n> I noticed that the movies/*.tex files contain all the Coq code and answers of the corresponding .v file (even the lines which are not contained in any snippet). \r\n\r\nThe revamped driver that I made in #71 doesn't generate these latex files any more; only the snippets.\r\n\r\n> Perhaps a \"lazy\" snippet generation is hard to design.\r\n\r\nThat's pretty much what #71 does :)\r\n\r\n> A possible workaround is to insert systematically comments `(*| .. coq:: none |*)` `(*||*)` around every snippet-free region.\r\n\r\n… and indeed this should not be needed any more with #71.\r\n"}],"tags":[],"pull_requests":[]},{"author":"Zimmi48","number":63,"state":"closed","open_date":"2021-08-21T20:59:18Z","update_date":"2021-08-22T16:05:32Z","discussion":[],"tags":[],"pull_requests":[]},{"author":"Zimmi48","number":62,"state":"closed","open_date":"2021-08-20T16:26:16Z","update_date":"2021-08-26T12:32:02Z","discussion":[{"author":"Zimmi48","date":"2021-08-20T17:38:49Z","comment":"References show up as `[?]`. Any idea what that could be?"},{"author":"Zimmi48","date":"2021-08-20T20:48:38Z","comment":"Less than 16 minutes for the total duration of the Nix CI including the documentation job (which takes 9 minutes). That's 10 minutes less than the doc pipeline."},{"author":"Zimmi48","date":"2021-08-22T16:49:37Z","comment":"> Less than 16 minutes for the total duration of the Nix CI including the documentation job (which takes 9 minutes). That's 10 minutes less than the doc pipeline.\r\n\r\nActually, we are even faster at the second run because all the dependencies (in particular SerAPI and its own dependencies) are already built and in cache already. Now, the total duration of the pipeline is 14m40s.\r\n\r\nThere is still an issue though, which makes the pipeline slower than it should, which is that `make html` isn't compatible with `cachedMake` (probably because of timestamps being wrong) and therefore vo files are rebuilt in the `build-doc` job. We can fix this issue by moving the coqdoc build to the previous step (building `hydra-battles-single`)."},{"author":"Casteran","date":"2021-08-22T17:23:22Z","comment":"Hi Théo,\n\n  It looks to be the place of the « bibtex  hydras » line in doc/Makefile.\n  I made some tests on my machine\n  a) remove doc/hydras.bbl\n  b) make pdf\n   It results in unresolved citations\n  Then I changed the place of « bibles hydras » between the first and the second « lualatex hydras » \n  Removed again hydras.bbl, then it seems to work.\n\n  I didn’t notice this issue, probably because of the old hydras.bbl from older compilations.\n\nCould you check if changing the makefile works ?\n\nPierre\n\nhydras.pdf: ${DEP_FILES}\n\t@+${MAKE} -C movies all\n\tlualatex hydras.tex\n\tbibtex hydras\n\tlualatex hydras.tex\n\tmakeindex coq\n\tmakeindex maths\n\tmakeindex hydras\n\tmakeindex primrec\n\tmakeindex additions\n\tlualatex hydras.tex\n\tlualatex hydras.tex\n\n \n> Le 22 août 2021 à 18:34, Théo Zimmermann ***@***.***> a écrit :\n> \n> \n> @Zimmi48 commented on this pull request.\n> \n> In .github/workflows/nix-action-default.yml <https://github.com/coq-community/hydra-battles/pull/62#discussion_r693526410>:\n> \n> > +        nix-shell --run \"make pdf\"\n> +        # I need to run make pdf twice to get reference resolved :(\n> +        touch doc/hydras.tex\n> +        nix-shell --run \"make pdf\"\n> I run make pdf twice to work around the unresolved reference issue. There is probably a better fix (which probably involves fixing a makefile). Suggestions welcome!\n> \n> —\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub <https://github.com/coq-community/hydra-battles/pull/62#pullrequestreview-735592610>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AJW6FCSNDNGPM4IQIJOVMOTT6ERITANCNFSM5CQUI3RQ>.\n> Triage notifications on the go with GitHub Mobile for iOS <https://apps.apple.com/app/apple-store/id1477376905?ct=notification-email&mt=8&pt=524675> or Android <https://play.google.com/store/apps/details?id=com.github.android&utm_campaign=notification-email>.\n> \n\n"},{"author":"Zimmi48","date":"2021-08-22T20:32:14Z","comment":"> There is still an issue though, which makes the pipeline slower than it should, which is that `make html` isn't compatible with `cachedMake` (probably because of timestamps being wrong) and therefore vo files are rebuilt in the `build-doc` job. We can fix this issue by moving the coqdoc build to the previous step (building `hydra-battles-single`).\r\n\r\nI've done that and now `hydra-battles-single` takes much longer to build, to the point that the overall pipeline duration is bigger by a few minutes. I don't understand what is going on. If I don't manage to solve this issue, I'll revert to the version without this change."},{"author":"Zimmi48","date":"2021-08-23T17:12:10Z","comment":"> There is still an issue though, which makes the pipeline slower than it should, which is that `make html` isn't compatible with `cachedMake` (probably because of timestamps being wrong) and therefore vo files are rebuilt in the `build-doc` job. We can fix this issue by moving the coqdoc build to the previous step (building `hydra-battles-single`).\r\n\r\nActually, the issue was more limited than what I thought (not all files are rebuilt). I've reported it as https://github.com/coq-community/coq-nix-toolbox/issues/60.\r\n\r\nI still don't understand the issue with `make install-doc` triggering a partial rebuild and making the `hydra-battles-single` job much longer. In the interest of making progress, even if imperfect, I will revert to a version which doesn't build the doc in the `hydra-battles-single` job."},{"author":"Zimmi48","date":"2021-08-24T16:21:40Z","comment":"This is probably not perfect yet, but seems good enough to merge as is, especially given that I don't have more time to devote to this for now."},{"author":"Casteran","date":"2021-08-25T10:56:51Z","comment":"Looks to me as a true improvement! Thanks a lot!\n\nJust a (not urgent, I can write an ad-hoc fix) details.\nOn \n\n> Le 24 août 2021 à 18:21, Théo Zimmermann ***@***.***> a écrit :\n> \n> \n> This is probably not perfect yet, but seems good enough to merge as is, especially given that I don't have more time to devote to this for now.\n> \n> —\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub <https://github.com/coq-community/hydra-battles/pull/62#issuecomment-904787732>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AJW6FCXPXARCUNSZM2GULPDT6PBJ7ANCNFSM5CQUI3RQ>.\n> Triage notifications on the go with GitHub Mobile for iOS <https://apps.apple.com/app/apple-store/id1477376905?ct=notification-email&mt=8&pt=524675> or Android <https://play.google.com/store/apps/details?id=com.github.android&utm_campaign=notification-email>.\n> \n\n"},{"author":"Casteran","date":"2021-08-25T11:03:05Z","comment":"Oups ! Here is the full message.\n\n\n\n\n> Le 25 août 2021 à 12:56, Castéran Pierre ***@***.***> a écrit :\n> \n> Looks to me as a true improvement! Thanks a lot!\n> \n> Just a (not urgent, I can write an ad-hoc fix) details.\n\nOn https://coq-community.org/hydra-battles/doc/hydras.pdf <https://coq-community.org/hydra-battles/doc/hydras.pdf> the date on the first page is « January 1, 1980 » since yesterday.\n\n\n\n> \n>> Le 24 août 2021 à 18:21, Théo Zimmermann ***@***.*** ***@***.***>> a écrit :\n>> \n>> \n>> This is probably not perfect yet, but seems good enough to merge as is, especially given that I don't have more time to devote to this for now.\n>> \n>> —\n>> You are receiving this because you commented.\n>> Reply to this email directly, view it on GitHub <https://github.com/coq-community/hydra-battles/pull/62#issuecomment-904787732>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AJW6FCXPXARCUNSZM2GULPDT6PBJ7ANCNFSM5CQUI3RQ>.\n>> Triage notifications on the go with GitHub Mobile for iOS <https://apps.apple.com/app/apple-store/id1477376905?ct=notification-email&mt=8&pt=524675> or Android <https://play.google.com/store/apps/details?id=com.github.android&utm_campaign=notification-email>.\n>> \n> \n\n"},{"author":"Zimmi48","date":"2021-08-26T12:10:19Z","comment":"Oh, right! This is a known issue of building with Nix. Current date is set to this fixed date for reproducibility purposes. I can try something to work around this."},{"author":"Zimmi48","date":"2021-08-26T12:32:02Z","comment":"Fix attempt at #68."}],"tags":[],"pull_requests":[]},{"author":"Zimmi48","number":61,"state":"closed","open_date":"2021-08-20T16:05:13Z","update_date":"2021-08-20T16:26:34Z","discussion":[{"author":"Zimmi48","date":"2021-08-20T16:25:49Z","comment":"I accidentally opened this PR from my fork, which is why it doesn't work. Will reopen from a local branch. This also means that we need https://github.com/coq-community/coq-nix-toolbox/pull/55 before merging this change."}],"tags":[],"pull_requests":[]},{"author":"Zimmi48","number":60,"state":"closed","open_date":"2021-08-19T10:09:33Z","update_date":"2021-08-29T21:17:15Z","discussion":[{"author":"cpitclaudel","date":"2021-08-19T12:16:10Z","comment":"Ah, yes, I think this will be fixed by this recent commit: https://github.com/cpitclaudel/alectryon/commit/dffde22c19b60af7ac9e16fcff6eab8851780d76 :\r\n\r\n> The exit code produced by Alectryon indicates whether the conversion succeeded: 0 for success, 1 for a generic error, and 10 + the level of the most severe Docutils error if using a Docutils-based pipeline (hence 10 is debug, 11 is info, 12 is warning, 13 is error, and 14 is severe error). Docutils errors at levels below exit_status_level (default: 3) do not affect the exit code, so level 10, 11, and 12 are not used by default.\r\n\r\nIOW, the latest Alectryon should exit with error code 13 in that case; can you check that it does?"},{"author":"Zimmi48","date":"2021-08-19T12:41:14Z","comment":"Thanks for your answer!\r\n\r\nMaybe I did something wrong while applying the patch, but it seems that it doesn't change the exit status of Alectryon. Maybe this commit alone was not sufficient?"},{"author":"cpitclaudel","date":"2021-08-19T12:54:17Z","comment":"You need the one right before as well, `a310ec5c * core, docutils: Revamp error reporting in the SerAPI module`"},{"author":"Zimmi48","date":"2021-08-20T15:36:34Z","comment":"Thanks! I tested the latest version of `master` now (`d5c5229bbd30ece1b734071a6d9c26c3d9b1e9f2`). It does change the behavior when calling Alectryon directly. However, it doesn't change the behavior of our `extract_snippets.py` script :disappointed: . Any hint on how we can fix that?\r\n\r\nin passing, I encountered an issue specific to `/tmp` that I hadn't encountered before:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/nix/store/r9aa19mnzj45mfn08q6lfxcy70hjwfld-python3.9-alectryon-1.3.1/bin/.alectryon-wrapped\", line 9, in <module>\r\n    sys.exit(main())\r\n  File \"/nix/store/r9aa19mnzj45mfn08q6lfxcy70hjwfld-python3.9-alectryon-1.3.1/lib/python3.9/site-packages/alectryon/cli.py\", line 751, in main\r\n    sys.exit(max(process_pipelines(args), default=0))\r\n  File \"/nix/store/r9aa19mnzj45mfn08q6lfxcy70hjwfld-python3.9-alectryon-1.3.1/lib/python3.9/site-packages/alectryon/cli.py\", line 745, in process_pipelines\r\n    state = call_pipeline_step(step, state, ctx)\r\n  File \"/nix/store/r9aa19mnzj45mfn08q6lfxcy70hjwfld-python3.9-alectryon-1.3.1/lib/python3.9/site-packages/alectryon/cli.py\", line 698, in call_pipeline_step\r\n    return step(state, **{p: ctx[p] for p in params})\r\n  File \"/nix/store/r9aa19mnzj45mfn08q6lfxcy70hjwfld-python3.9-alectryon-1.3.1/lib/python3.9/site-packages/alectryon/cli.py\", line 258, in copy_assets\r\n    copy_fn(src, dst)\r\n  File \"/nix/store/81lwy2hfqj4c1943b1x8a0qsivjhdhw9-python3-3.9.6/lib/python3.9/shutil.py\", line 264, in copyfile\r\n    with open(src, 'rb') as fsrc, open(dst, 'wb') as fdst:\r\nPermissionError: [Errno 13] Permission denied: '/tmp/alectryon.js\r\n```"},{"author":"cpitclaudel","date":"2021-08-20T15:47:34Z","comment":"> Any hint on how we can fix that?\r\n\r\nYes, of course.  Let me have a quick look."}],"tags":[],"pull_requests":[]},{"author":"Zimmi48","number":59,"state":"open","open_date":"2021-08-18T16:36:09Z","update_date":"2021-09-20T07:45:19Z","discussion":[{"author":"palmskog","date":"2021-08-18T16:45:49Z","comment":"I also believe the best solution is to switch to Nix for documentation deployment. I think there is hope that there will eventually be Docker images that contain both SerAPI and Alectryon and recent OCaml (e.g., https://github.com/coq-community/docker-coq-action/issues/57), but that may take even longer than the Nix update.\r\n\r\nAnother thing that could help the documentation job go quicker is to make sure it uses Dune to selectively build the needed Coq parts (for example, I don't think Pierre has plans to include the Gaia bridge code in the book for a while)."},{"author":"Zimmi48","date":"2021-08-18T16:56:10Z","comment":"> Another thing that could help the documentation job go quicker is to make sure it uses Dune to selectively build the needed Coq parts (for example, I don't think Pierre has plans to include the Gaia bridge code in the book for a while).\r\n\r\nThis, or even adapt `doc/movies/Makefile` so that the dependencies of the listed `COQ_FILES` are built with the `coq_makefile` setup."},{"author":"Casteran","date":"2021-08-18T17:09:47Z","comment":"Indeed, I think I will spend at least a few weeks (months ?)  to\n-  adapt to Alectryon the files part-hydras.tex and chapter-primrec.tex\n- develop .v files in theories/gaia (and learn a little ssreflect :-) )\n\nIn a first time, I can also write a little doc on the Gaia bridge, with the old Coqsrc and Coqanswer blocks, while there remains building issues. It’s not hard to convert them to snippets.\n\nI think also that it will be also  necessary to adapt doc/movies/Makefile for documenting theories/additions/ with Alectryon.\n\n\n\n> Le 18 août 2021 à 18:56, Théo Zimmermann ***@***.***> a écrit :\n> \n> \n> Another thing that could help the documentation job go quicker is to make sure it uses Dune to selectively build the needed Coq parts (for example, I don't think Pierre has plans to include the Gaia bridge code in the book for a while).\n> \n> This, or even adapt doc/movies/Makefile so that the dependencies of the listed COQ_FILES are built with the coq_makefile setup.\n> \n> —\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub <https://github.com/coq-community/hydra-battles/issues/59#issuecomment-901273991>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AJW6FCVSCBPMWB2NRXFGTLDT5PQ3JANCNFSM5CMNL7IQ>.\n> Triage notifications on the go with GitHub Mobile for iOS <https://apps.apple.com/app/apple-store/id1477376905?ct=notification-email&mt=8&pt=524675> or Android <https://play.google.com/store/apps/details?id=com.github.android&utm_campaign=notification-email>.\n> \n\n"},{"author":"Zimmi48","date":"2021-09-20T07:45:19Z","comment":"FTR, the total doc build duration may currently be negatively impacted by what I noticed in https://github.com/coq-community/hydra-battles/pull/71#issuecomment-915407650, i.e. the \"Build Alectryon snippets\" step in the build-doc job does not do anything anymore and the snippet building happen in the \"Compile LaTeX document\" step. The reason why this may negatively impact build duration is because only the former uses `-j $(nproc)`."}],"tags":[],"pull_requests":[]},{"author":"Zimmi48","number":58,"state":"closed","open_date":"2021-08-18T16:05:08Z","update_date":"2021-08-18T16:57:39Z","discussion":[{"author":"Zimmi48","date":"2021-08-18T16:23:19Z","comment":"The full Nix CI workflow, including the reverse dependency `goedel` has completed in less than 6 minutes."}],"tags":[],"pull_requests":[]},{"author":"cpitclaudel","number":57,"state":"closed","open_date":"2021-08-15T20:04:58Z","update_date":"2021-08-17T05:58:08Z","discussion":[{"author":"Casteran","date":"2021-08-16T07:29:05Z","comment":"> I've had a quick look at the output, and it seems reasonable to me; I hope I didn't break things. Please check and let me know.\r\n> I also took the liberty to fix a typo in the README and to use the new LuaLaTeX backend in Alectryon.\r\n> \r\n> The update was supposed to be transparent, but I missed two trivial breaking changes; hence the patch :/ On the plus side, hypotheses and goals should display significantly better now.\r\n\r\n@cpitclaudel Thank you very much !!!\r\nIn order to check goal displays, I just commit a change (remove a .no-out in theories/ordinals/Epsilon0/T1.v, snippet LTOnea, which is displayed p80 of the pdf.  There is still a problem on my machine, but it may be a problem of local installation.\r\n\r\n"},{"author":"Casteran","date":"2021-08-16T07:59:16Z","comment":"@cpitclaudel  The same issue happens on CI.  \r\nI will temporarily restore the (* .no-out *) (4th line of Lemma LT_one), for having a clean hydras.pdf on the coq-community site.\r\nFor testing the vertical alignment of subgoals, it is possible to remove it, then `touch doc/hydras.tex`\r\n"},{"author":"cpitclaudel","date":"2021-08-17T03:01:43Z","comment":"Thanks for testing.  I see the problem now; I had built from inside Emacs and it used xelatex instead of lualatex by default.  I will investigate."},{"author":"cpitclaudel","date":"2021-08-17T03:50:59Z","comment":"OK, fixed in v1.3.1, thanks a lot.\r\n\r\n![image](https://user-images.githubusercontent.com/8181630/129660094-b150f8eb-5f56-4639-8b4c-687fabbf7fac.png)\r\n\r\nBy the way, if you prefer one hypothesis per line, you can use this:\r\n\r\n```\r\n\\makeatletter\r\n\\renewcommand{\\alectryon@hyps@sep}{\\alectryon@nl}\r\n\\makeatother\r\n```\r\n\r\n\r\n![image](https://user-images.githubusercontent.com/8181630/129660236-d36adc13-2f70-4ae4-94e9-ebd8f95c89ee.png)\r\n"},{"author":"Casteran","date":"2021-08-17T05:58:08Z","comment":"Great !!! Thanks a lot !!!\n\n\n> Le 17 août 2021 à 05:51, Clément Pit-Claudel ***@***.***> a écrit :\n> \n> \n> OK, fixed in v1.3.1, thanks a lot.\n> \n>  <https://user-images.githubusercontent.com/8181630/129660094-b150f8eb-5f56-4639-8b4c-687fabbf7fac.png>\n> By the way, if you prefer one hypothesis per line, you can use this:\n> \n> \\makeatletter\n> ***@***.***@***@***.***}\n> \\makeatother\n>  <https://user-images.githubusercontent.com/8181630/129660236-d36adc13-2f70-4ae4-94e9-ebd8f95c89ee.png>\n> —\n> You are receiving this because you modified the open/close state.\n> Reply to this email directly, view it on GitHub <https://github.com/coq-community/hydra-battles/pull/57#issuecomment-899972404>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AJW6FCWW63QM2P4OZPANQVTT5HMC5ANCNFSM5CGP5P7A>.\n> Triage notifications on the go with GitHub Mobile for iOS <https://apps.apple.com/app/apple-store/id1477376905?ct=notification-email&mt=8&pt=524675> or Android <https://play.google.com/store/apps/details?id=com.github.android&utm_campaign=notification-email>.\n> \n\n"}],"tags":[],"pull_requests":[]},{"author":"palmskog","number":56,"state":"closed","open_date":"2021-08-14T15:09:55Z","update_date":"2021-08-16T15:40:23Z","discussion":[{"author":"Casteran","date":"2021-08-14T16:05:28Z","comment":"@palmskog  I fixed the conflicts in my (local )branch Bridge. So, the procedure is now to commit, then push Bridge ?\r\n"},{"author":"palmskog","date":"2021-08-14T16:12:53Z","comment":"@Casteran yes, if you fixed the conflicts on top of my (unrelated) changes, all you need to do is to commit locally and push to the upstream (GitHub) `Bridge` branch."},{"author":"Casteran","date":"2021-08-14T16:54:02Z","comment":"OK,\r\n  I plan to complete the file T1Bridge.v : relationship between hydra-battle's and gaia's T1.\r\n  When it's OK, we may discuss about the style (proof scripts, theorem naming, documentation) before writing other modules.\r\n  \r\n  For the time being, I'm writing in a strange cocktail of vanilla Coq and SSreflect, but I hope I'll improve the consistency of my scripts soon ...\r\n"},{"author":"palmskog","date":"2021-08-14T17:07:13Z","comment":"@Casteran feel free to roll back my SSReflect proof changes if you want. Also, recall that you can get `lia` and `nia` to work with MathComp operators if you install the package `coq-mathcomp-zify`, and do after the usual MathComp requires:\r\n```coq\r\nFrom mathcomp Require Import zify.\r\n```\r\nSee an [example](https://github.com/math-comp/mczify/blob/master/examples/divmod.v)."},{"author":"Casteran","date":"2021-08-14T17:18:15Z","comment":"Well, I think SSreflect is fine. Since I’m a beginner, my first scripts in Bridge will have several old-fashioned features.\nIn Bordeaux, our Coq working-group want also to learn Ssreflect (since there are librairies they want to use).\n\nI find it very interesting to build a bridge between a plain Coq library and a Mathcomp development.\n\nJust one point: I’ll  use the ‘ Set Bullet Behavior \"Strict Subproofs ». ‘ option (compatible with SSreflects) which really helps me do structure my proofs.\n\n\n\n> Le 14 août 2021 à 19:07, Karl Palmskog ***@***.***> a écrit :\n> \n> \n> @Casteran <https://github.com/Casteran> feel free to roll back my SSReflect proof changes if you want. Also, recall that you can get lia and nia to work with MathComp operators if you install the package coq-mathcomp-zify, and do after the usual MathComp requires:\n> \n> From mathcomp Require Import zify.\n> See an example <https://github.com/math-comp/mczify/blob/master/examples/divmod.v>.\n> \n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub <https://github.com/coq-community/hydra-battles/pull/56#issuecomment-898931266>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AJW6FCQKUZVX2E7523RXIUDT42PEZANCNFSM5CFFUSTA>.\n> Triage notifications on the go with GitHub Mobile for iOS <https://apps.apple.com/app/apple-store/id1477376905?ct=notification-email&mt=8&pt=524675> or Android <https://play.google.com/store/apps/details?id=com.github.android&utm_campaign=notification-email>.\n> \n\n"},{"author":"Casteran","date":"2021-08-16T15:40:23Z","comment":"@palmskog @Zimmi48 \r\nI've achieved the importation of Gaia's theorem asserting associativity of multiplication on T1 into theories/gaia.\r\nThe script is an awfull draft, so I will clean it up before commiting it.\r\n"}],"tags":[],"pull_requests":[]},{"author":"palmskog","number":55,"state":"closed","open_date":"2021-08-13T10:12:01Z","update_date":"2021-08-18T16:57:06Z","discussion":[{"author":"Zimmi48","date":"2021-08-13T12:14:52Z","comment":"If you test this package only with released versions and with Nix , then caching will ensure that CI doesn't take that long."},{"author":"palmskog","date":"2021-08-13T13:47:31Z","comment":"Sounds reasonable, but correct me if I mistunderstood @Zimmi48: for caching to work in our current Nix CI setup, both gaia and hydra-battles have to be in Nix-unstable packages, right? \r\n\r\nEven so, there are some additional hurdles, namely, if we want to make the files depending on Gaia compiled by default by `coq_makefile` (i.e., running `make`). If we do this, casual users who want to play around with exercises and are not familiar with Dune will get stuck unless they have gaia installed. One alternative is to create a special target for building everything including the gaia bridge (e.g., `make bridge`), which we invoke only in Nix CI. But without ugly shell hackery, this means we have to duplicate `_CoqProject` content."},{"author":"Zimmi48","date":"2021-08-13T17:38:37Z","comment":"> in our current Nix CI setup, both gaia and hydra-battles have to be in Nix-unstable packages, right?\r\n\r\nRight and if a new package is introduced that depends on both `gaia` and `hydra-battles`, there should be a Nix package for this one as well. In this case, it seems better to fall back to a standard standalone installation of the Coq Nix Toolbox.\r\n\r\n> Even so, there are some additional hurdles, namely, if we want to make the files depending on Gaia compiled by default by `coq_makefile` (i.e., running `make`). If we do this, casual users who want to play around with exercises and are not familiar with Dune will get stuck unless they have gaia installed. One alternative is to create a special target for building everything including the gaia bridge (e.g., `make bridge`), which we invoke only in Nix CI. But without ugly shell hackery, this means we have to duplicate `_CoqProject` content.\r\n\r\nIt's fine (and actually seems more reasonable) if the Nix package also uses the Dune setup. That being said, including the files depending on Gaia in `_CoqProject` still seems important for casual development. But I don't think we need to go through any hackery. For instance, if I only have Equations installed, which is the only dependency of the current ordinals part, I can run `make -j4 theories/ordinals/Epsilon0/Epsilon0.vo` and it works fine (only generates three coqdep warnings because it cannot find paramcoq, mathcomp-ssreflect and mathcomp-algebra on the loadpath). Therefore, for the casual user, we could define some `make` aliases for the various parts of the project."},{"author":"palmskog","date":"2021-08-14T12:12:35Z","comment":"Fine by me to create Nix packages and use the full Nix toolbox (but the lightweight Nix CI setup is at the limit I can help out with).\r\n\r\nI propose that we use the following directory organization and name mapping for consistency and uniqueness:\r\n```\r\ntheories\r\n├── additions\r\n├── gaia\r\n└── ordinals\r\n```\r\n```\r\n-R theories/gaia gaia_hydras\r\n```\r\nIf it's OK with @Casteran, I can do a pass over the `Bridge` branch and set up the above organization and opam package (`coq-gaia-hydras`). I also have some SSReflect proof improvements..."},{"author":"Casteran","date":"2021-08-14T12:23:16Z","comment":"It’s fine with me, thanks !\nPierre\n\n\n> Le 14 août 2021 à 14:12, Karl Palmskog ***@***.***> a écrit :\n> \n> \n> Fine by me to create Nix packages and use the full Nix toolbox (but the lightweight Nix CI setup is at the limit I can help out with).\n> \n> I propose that we use the following directory organization and name mapping for consistency and uniqueness:\n> \n> theories\n> ├── additions\n> ├── gaia\n> └── ordinals\n> -R theories/gaia gaia_hydras\n> If it's OK with @Casteran <https://github.com/Casteran>, I can do a pass over the Bridge branch and set up the above organization and opam package (coq-gaia-hydras). I also have some SSReflect proof improvements...\n> \n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub <https://github.com/coq-community/hydra-battles/issues/55#issuecomment-898886577>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AJW6FCRLAHENNXTXXT7UI5DT4ZMT5ANCNFSM5CDJIC3Q>.\n> Triage notifications on the go with GitHub Mobile for iOS <https://apps.apple.com/app/apple-store/id1477376905?ct=notification-email&mt=8&pt=524675> or Android <https://play.google.com/store/apps/details?id=com.github.android&utm_campaign=notification-email>.\n> \n\n"},{"author":"palmskog","date":"2021-08-15T09:41:51Z","comment":"OK, all packages are defined in the `master` branch here and are in `extra-dev` in the Coq opam archive. For testing of the gaia bridge in CI, I will now have to hand the baton to @Zimmi48 to do Nix wizardry."},{"author":"Casteran","date":"2021-08-15T10:08:26Z","comment":"Thanks !!!\n\n  By the way, I added the following requirement to gaia/T1Bridge.v  (draft ; not committed yet)\n  From mathcomp Require Import zify.\n \n\n  Is there anything we should add in the dune or in any magic file ?\n\n\n\n> Le 15 août 2021 à 11:42, Karl Palmskog ***@***.***> a écrit :\n> \n> \n> OK, all packages are defined in the master branch here and are in extra-dev in the Coq opam archive. For testing of the gaia bridge in CI, I will now have to hand the baton to @Zimmi48 <https://github.com/Zimmi48> to do Nix wizardry.\n> \n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub <https://github.com/coq-community/hydra-battles/issues/55#issuecomment-899023833>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AJW6FCQKUSZRUXS25IOENLDT46DWTANCNFSM5CDJIC3Q>.\n> Triage notifications on the go with GitHub Mobile for iOS <https://apps.apple.com/app/apple-store/id1477376905?ct=notification-email&mt=8&pt=524675> or Android <https://play.google.com/store/apps/details?id=com.github.android&utm_campaign=notification-email>.\n> \n\n"},{"author":"palmskog","date":"2021-08-15T10:41:56Z","comment":"@Casteran you will have to add the following line in `coq-gaia-hydras.opam`, just below the line saying `\"coq-gaia\" {...}`:\r\n```\r\n  \"coq-mathcomp-zify\"\r\n```"},{"author":"Zimmi48","date":"2021-08-18T16:15:52Z","comment":"`gaia`, `hydra-battles` and `addition-chains` are now in nixpkgs. I have opened #58 to set up the Nix Toolbox and CI based on it."},{"author":"Zimmi48","date":"2021-08-18T16:27:41Z","comment":"@palmskog You were worried about CI length: it turns out that the CI job that was already the lengthiest (building the documentation) is impacted by the addition of Gaia as a dependency, since it also needs to install all of hydra-battles dependencies. I'll open a separate issue about this."}],"tags":[],"pull_requests":[]},{"author":"palmskog","number":54,"state":"closed","open_date":"2021-08-09T18:54:38Z","update_date":"2021-08-09T20:02:38Z","discussion":[],"tags":[],"pull_requests":[]},{"author":"palmskog","number":53,"state":"closed","open_date":"2021-08-08T21:08:41Z","update_date":"2021-08-13T09:32:21Z","discussion":[{"author":"Casteran","date":"2021-08-09T06:46:48Z","comment":"@palmskog \r\n\r\nRegarding José Grimms' work:\r\nWhat about the following text (in the Related work section) ?\r\n\r\n\" The GaÏa project ~\\url{https://github.com/coq-community/gaia} maintains this library on the Coq-community platform. Integration of both libraries would be an extremely interesting project. \"\r\n\r\n\r\nI am very enthusiastic about the idea of making both libraries compatible, even though it may be a huge work.\r\nDepending on the modelization of ordinals one is considering, the proofs of a same statement, e.g. the associativity of addition, may be completely different, and it's interesting to make all these proofs available (at least on the documentation). José Grimm's modelization could also play the same role as Schütte's : a mathematical reference for our data structures.\r\n"},{"author":"palmskog","date":"2021-08-09T09:23:28Z","comment":"@Casteran that sounds good to me, but one might also hint at what the project would entail, for example:\r\n```latex\r\nThe Gaia project (\\url{https://github.com/coq-community/gaia}) maintains\r\nGrimm's theory of ordinals as part of coq-community on GitHub. Integration\r\nof the present ordinal theory with Gaia, i.e., relating the different notions of ordinals\r\nand transferring relevant results, would be an interesting project.\r\n ```"},{"author":"Casteran","date":"2021-08-09T09:38:40Z","comment":"Thanks ! \nI commit today.\n\n\n\n> Le 9 août 2021 à 11:23, Karl Palmskog ***@***.***> a écrit :\n> \n> \n> @Casteran <https://github.com/Casteran> that sounds good to me, but one might also hint at what the project would entail, for example:\n> \n> The Gaia project (\\url{https://github.com/coq-community/gaia}) maintains\n> Grimm's theory of ordinals as part of coq-community on GitHub. Integration\n> of the present ordinal theory with Gaia, i.e., relating the different notions of ordinals\n> and transferring relevant results, would be an interesting project.\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub <https://github.com/coq-community/hydra-battles/pull/53#issuecomment-895073806>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AJW6FCRGXFHYMUPUHKHS5S3T36NBXANCNFSM5BY3OG6A>.\n> Triage notifications on the go with GitHub Mobile for iOS <https://apps.apple.com/app/apple-store/id1477376905?ct=notification-email&mt=8&pt=524675> or Android <https://play.google.com/store/apps/details?id=com.github.android&utm_campaign=notification-email>.\n> \n\n"},{"author":"Casteran","date":"2021-08-10T18:42:10Z","comment":"> @palmskog\r\n> \r\n> Regarding José Grimms' work:\r\n> What about the following text (in the Related work section) ?\r\n> \r\n> \" The GaÏa project ~\\url{[https://github.com/coq-community/gaia}](https://github.com/coq-community/gaia%7D) maintains this library on the Coq-community platform. Integration of both libraries would be an extremely interesting project. \"\r\n> \r\n> I am very enthusiastic about the idea of making both libraries compatible, even though it may be a huge work.\r\n> Depending on the modelization of ordinals one is considering, the proofs of a same statement, e.g. the associativity of addition, may be completely different, and it's interesting to make all these proofs available (at least on the documentation). José Grimm's modelization could also play the same role as Schütte's : a mathematical reference for our data structures.\r\n\r\n@palmskog @Zimmi48 @thery \r\n\r\n  I'm just starting to create a new experimental branch \"Bridge\" for proving relationships between Hydra-battle's and Gaia's ordinals. I hope to commit a partial draft soon.\r\n  By the way, opam's coq-gaia seems to be still for coq-8.12. So, I'm using the version downloaded from coq-community.\r\n"},{"author":"palmskog","date":"2021-08-10T18:51:00Z","comment":"If @thery doesn't mind, I will do a release of Gaia for MathComp 1.12.0 and Coq 8.13.0 and beyond."},{"author":"palmskog","date":"2021-08-10T19:00:22Z","comment":"@Casteran @Zimmi48 also, since Gaia is a big dependency (> 5 min to check, from what I remember), I think we should organize any bridge as a separate package (`coq-gaia-hydras`?) and directory under `theories`. I think it wouldn't be nice for people who just want play around with hydras to have to wait for Gaia to install first. But let's continue that discussion when there is stuff to merge to `master` here."},{"author":"Casteran","date":"2021-08-13T09:32:21Z","comment":"> @Casteran @Zimmi48 also, since Gaia is a big dependency (> 5 min to check, from what I remember), I think we should organize any bridge as a separate package (`coq-gaia-hydras`?) and directory under `theories`. I think it wouldn't be nice for people who just want play around with hydras to have to wait for Gaia to install first. But let's continue that discussion when there is stuff to merge to `master` here.\r\n\r\nThanks for the opam release for Gaia!\r\nI've just intialized an experimental branch `Bridge` within a `theories/Bridges`directory.  My first objective is to tranfer for instance the associativity of multiplication (proven in Gaia) to hydra-battles. "}],"tags":[],"pull_requests":[]},{"author":"palmskog","number":52,"state":"closed","open_date":"2021-08-07T10:59:51Z","update_date":"2021-08-07T13:24:24Z","discussion":[],"tags":[],"pull_requests":[]},{"author":"palmskog","number":51,"state":"closed","open_date":"2021-08-06T21:08:12Z","update_date":"2021-08-07T08:31:41Z","discussion":[],"tags":[],"pull_requests":[]},{"author":"Casteran","number":50,"state":"closed","open_date":"2021-08-02T12:19:32Z","update_date":"2021-08-02T13:37:55Z","discussion":[{"author":"Casteran","date":"2021-08-02T13:37:55Z","comment":"Now OK !"}],"tags":[],"pull_requests":[]},{"author":"Casteran","number":49,"state":"closed","open_date":"2021-07-23T09:50:21Z","update_date":"2021-08-17T05:53:49Z","discussion":[],"tags":[],"pull_requests":[]},{"author":"Casteran","number":48,"state":"closed","open_date":"2021-07-20T14:24:36Z","update_date":"2021-07-29T09:59:47Z","discussion":[{"author":"Casteran","date":"2021-07-29T08:37:51Z","comment":"I add a little (improvable) text on the use of alectryon in the doc (pages 8 and 11 of the pdf)\r\n@Zimmi48 Do you think we may merge into master ?\r\n\r\nDo you think we should mention alectryon in the \"installation\" paragraph of the README ?\r\n"},{"author":"Zimmi48","date":"2021-07-29T09:34:15Z","comment":"> I add a little (improvable) text on the use of alectryon in the doc (pages 8 and 11 of the pdf)\r\n\r\nLooks good!\r\n\r\n> Do you think we may merge into master ?\r\n\r\nYes :)\r\n\r\n> Do you think we should mention alectryon in the \"installation\" paragraph of the README ?\r\n\r\nIt already mentions Alectryon:\r\n\r\n>Building the PDF documentation also requires Alectryon 1.2 and SerAPI. See doc/movies/Readme.md for details.\r\n\r\nLet me know if you think this isn't sufficient."},{"author":"Casteran","date":"2021-07-29T09:43:51Z","comment":"Ok !\nI let you merge ?\nThé, I will send a message to Clement with a link to the pdf generated by CI.\n\nEnvoyé de mon iPhone\n\n> Le 29 juil. 2021 à 11:34, Théo Zimmermann ***@***.***> a écrit :\n> \n> I add a little (improvable) text on the use of alectryon in the doc (pages 8 and 11 of the pdf)\n> \n> Looks good!\n> \n> Do you think we may merge into master ?\n> \n> Yes :)\n> \n> Do you think we should mention alectryon in the \"installation\" paragraph of the README ?\n> \n> It already mentions Alectryon:\n> \n> Building the PDF documentation also requires Alectryon 1.2 and SerAPI. See doc/movies/Readme.md for details.\n> \n> Let me know if you think this isn't sufficient.\n> \n> —\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub, or unsubscribe.\n"}],"tags":[],"pull_requests":[]},{"author":"start974","number":33,"state":"closed","open_date":"2021-06-15T19:37:19Z","update_date":"2021-06-28T17:18:40Z","discussion":[{"author":"Casteran","date":"2021-06-15T20:19:40Z","comment":"Ok for me !\r\n@Zimmi48 : I let you merge ?"}],"tags":[],"pull_requests":[]},{"author":"Zimmi48","number":32,"state":"closed","open_date":"2021-06-15T14:06:27Z","update_date":"2021-06-15T15:01:48Z","discussion":[],"tags":[],"pull_requests":[]},{"author":"Casteran","number":29,"state":"closed","open_date":"2021-03-04T20:02:43Z","update_date":"2021-03-05T18:25:30Z","discussion":[{"author":"Zimmi48","date":"2021-03-05T18:25:30Z","comment":"Looks OK to me."}],"tags":[],"pull_requests":[]},{"author":"Casteran","number":28,"state":"closed","open_date":"2021-02-10T15:46:02Z","update_date":"2021-02-11T09:55:25Z","discussion":[],"tags":[],"pull_requests":[]},{"author":"Casteran","number":26,"state":"closed","open_date":"2021-02-06T16:37:12Z","update_date":"2021-02-06T22:00:05Z","discussion":[],"tags":[],"pull_requests":[]},{"author":"Casteran","number":25,"state":"closed","open_date":"2021-01-18T17:28:29Z","update_date":"2021-06-21T10:15:16Z","discussion":[{"author":"palmskog","date":"2021-01-18T17:55:06Z","comment":"@Casteran I see what you are trying to do, but I think unfortunately we can't use the templates generation script like this. The problem is that hydra-battles has too much customization compared to the average Coq project, which we optimize the templates for. I'm going to synchronize with @Zimmi48 exactly how we should set up template-based generation. Maybe it should be a custom script hosted in the project."},{"author":"palmskog","date":"2021-01-19T15:29:22Z","comment":"@Casteran unless you have objections, I will do a quick refactoring later tonight of the changes in this branch, while preserving the content. I think the project should keep using a custom README (rather than the generated one currently in the PR) for the time being."},{"author":"Casteran","date":"2021-01-19T16:09:00Z","comment":"No abjections at all.\nApart from the 8.11 issue, I made small changes in the meta.yml file :\n  Add a phrase about the Ackermann sub-directory\n  Add primitive-recursive-functions and Peano-arithmetics as keywords\n  Add Russel in the actors field\n\n Is it possible to report these changes in master (before deleting remove-8-11) ?\nThanks !\n\n\n\n> Le 19 janv. 2021 à 16:29, Karl Palmskog <notifications@github.com> a écrit :\n> \n> \n> @Casteran <https://github.com/Casteran> unless you have objections, I will do a quick refactoring later tonight of the changes in this branch, while preserving the content. I think the project should keep using a custom README (rather than the generated one currently in the PR) for the time being.\n> \n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub <https://github.com/coq-community/hydra-battles/pull/25#issuecomment-762917805>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AJW6FCTGXZPTAU6MYCRIIKTS2WQOLANCNFSM4WHTUR7A>.\n> \n\n"},{"author":"palmskog","date":"2021-01-19T17:16:24Z","comment":"Yes, I will make sure these changes will survive the merge to the master branch."}],"tags":[],"pull_requests":[]},{"author":"palmskog","number":22,"state":"closed","open_date":"2021-01-12T15:44:04Z","update_date":"2021-01-12T22:33:23Z","discussion":[{"author":"palmskog","date":"2021-01-12T16:08:33Z","comment":"@Casteran is it OK with you to test with Coq master? You can still merge pull requests and push and so on even if something fails on Coq master."},{"author":"Casteran","date":"2021-01-12T16:23:24Z","comment":"Ok, but I’m still very naive as long as compilation, test, GitHub are concerned. My installation of Coq is opam’s.\nWhat do I have to do? Installing also master on my machine ? \n\n\n> Le 12 janv. 2021 à 17:08, Karl Palmskog <notifications@github.com> a écrit :\n> \n> \n> @Casteran <https://github.com/Casteran> is it OK with you to test with Coq master? You can still merge pull requests and push and so on even if something fails on Coq master.\n> \n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub <https://github.com/coq-community/hydra-battles/pull/22#issuecomment-758761401>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AJW6FCUZTDXM5Q734WLOO6TSZRXZDANCNFSM4V7MVT7Q>.\n> \n\n"},{"author":"palmskog","date":"2021-01-12T16:30:21Z","comment":"@Casteran if you want to use Coq master you create a new opam switch and add the `core-dev` and `extra-dev` opam repositories as shown here: https://github.com/coq/opam-coq-archive \r\n... and then do `opam pin add coq dev -k version` in the switch.\r\n\r\nHowever, just because we enable CI for Coq master here doesn't mean you have to install and use it yourself. For regular Coq projects, there are typically not that many breakages on Coq master these days. If it turns out you break something on Coq master, @Zimmi48 or I can simply disable the continuous integration for Coq master here for a while until it can be dealt with (e.g., at next Coq release)."},{"author":"Casteran","date":"2021-01-12T17:09:32Z","comment":"I installed Coq8.13.dev (via opam), compiled hydra-battles, then the local version of Goedel (with the -R directive)\nWorks fine. Is this what I had to do ?\n\n\n \n\n> Le 12 janv. 2021 à 17:23, Castéran Pierre <pierre.casteran@gmail.com> a écrit :\n> \n> Ok, but I’m still very naive as long as compilation, test, GitHub are concerned. My installation of Coq is opam’s.\n> What do I have to do? Installing also master on my machine ? \n> \n> \n>> Le 12 janv. 2021 à 17:08, Karl Palmskog <notifications@github.com <mailto:notifications@github.com>> a écrit :\n>> \n>> \n>> @Casteran <https://github.com/Casteran> is it OK with you to test with Coq master? You can still merge pull requests and push and so on even if something fails on Coq master.\n>> \n>> —\n>> You are receiving this because you were mentioned.\n>> Reply to this email directly, view it on GitHub <https://github.com/coq-community/hydra-battles/pull/22#issuecomment-758761401>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AJW6FCUZTDXM5Q734WLOO6TSZRXZDANCNFSM4V7MVT7Q>.\n>> \n> \n\n"},{"author":"Zimmi48","date":"2021-01-12T18:10:55Z","comment":"You don't actually have to do anything. The point of continuous integration tests is precisely so that an automated service can test your code with various configurations without any additional effort from your part."}],"tags":[],"pull_requests":[]},{"author":"palmskog","number":21,"state":"closed","open_date":"2021-01-11T19:52:09Z","update_date":"2021-01-11T20:05:08Z","discussion":[{"author":"Casteran","date":"2021-01-11T19:56:54Z","comment":"Yes, they are mainly restructuration of the vertical proof scripts. Thanks !\n\n> Le 11 janv. 2021 à 20:52, Karl Palmskog <notifications@github.com> a écrit :\n> \n> There were some small metadata issues after the subtree merge that I fix here.\n> \n> @Casteran <https://github.com/Casteran> unfortunately, your changes in https://github.com/coq-community/goedel/tree/add-bullets <https://github.com/coq-community/goedel/tree/add-bullets> did not make it into the subtree pull request. Should I add these changes here so we can remove Ackermann from the goedel repo?\n> \n> You can view, comment on, or merge this pull request online at:\n> \n>   https://github.com/coq-community/hydra-battles/pull/21 <https://github.com/coq-community/hydra-battles/pull/21>\n> Commit Summary\n> \n> small fixes noted after Ackermann subtree merge\n> File Changes\n> \n> M _CoqProject <https://github.com/coq-community/hydra-battles/pull/21/files#diff-7bc0f432942f548a20da329bb4e45e21faeeb897fe1d7e0bc26d20210a6e38f1> (2)\n> D theories/ordinals/Ackermann/.github/workflows/docker-ci.yml <https://github.com/coq-community/hydra-battles/pull/21/files#diff-2599aaa2f20f38a1870ddeeb8954385493c528e47b5e531f57717403cb1f525e> (64)\n> Patch Links:\n> \n> https://github.com/coq-community/hydra-battles/pull/21.patch <https://github.com/coq-community/hydra-battles/pull/21.patch>\n> https://github.com/coq-community/hydra-battles/pull/21.diff <https://github.com/coq-community/hydra-battles/pull/21.diff>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub <https://github.com/coq-community/hydra-battles/pull/21>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AJW6FCUZPH7O7PDGYK5TBN3SZNJHTANCNFSM4V6B7HHA>.\n> \n\n"}],"tags":[],"pull_requests":[]},{"author":"palmskog","number":20,"state":"closed","open_date":"2021-01-11T19:07:14Z","update_date":"2021-01-11T19:46:18Z","discussion":[{"author":"Zimmi48","date":"2021-01-11T19:14:33Z","comment":"I thought that the plan was that the hydra-battles repository would now contain three opam packages (coq-ackermann, coq-hydra-battles and coq-addition-chains) instead of two. But if I understand correctly, what is implemented in the with-ackermann branch and in this PR is instead to merge the coq-ackermann and coq-hydra-battles packages together. This other strategy is also fine with me, but since this is not the same, I just want to make sure that it's a conscious design choice."},{"author":"palmskog","date":"2021-01-11T19:18:14Z","comment":"@Zimmi48 yes, I had initially hoped to make three separate packages, but this is not possible due to how Pierre wants the files to cross-depend on each other. So I think this is the best solution for what he wants to do."},{"author":"Zimmi48","date":"2021-01-11T19:21:46Z","comment":"OK, it makes total sense if the two parts are intertwined!"},{"author":"Casteran","date":"2021-01-11T19:44:26Z","comment":"@palmskog  Sounds good !  Do I just have to merge ?\r\n"}],"tags":[],"pull_requests":[]},{"author":"palmskog","number":18,"state":"closed","open_date":"2021-01-05T12:51:22Z","update_date":"2021-01-05T17:36:07Z","discussion":[{"author":"Casteran","date":"2021-01-05T15:18:25Z","comment":"There seems to be a lot of warnings  of the form «  Unused variable x catches more than one case » , for instance in definitions like\n\nFixpoint mult (alpha beta : T1) :T1 :=\n  match alpha,beta with\n |  zero, y  => zero\n |  x, zero => zero\n |  ocons zero n _, ocons zero n' _ => \n                 ocons zero (Peano.pred((S n) * (S n'))) zero\n |  ocons a n b, ocons zero n' b' =>  \n                 ocons a (Peano.pred((S n) * (S n'))) b\n |  ocons a n b, ocons a' n' b' =>\n     ocons (a + a') n' ((ocons a n b) * b')\n end\nwhere  \"alpha * beta\" := (mult alpha beta) : t1_scope.\n\nIs giving a name to an unused variable (in the right hand side of a match clause) bad style ?\nIf so, I can replace a lot os such occurrences by the anonymous variable _.\nBut, as readability is concerned, the second clause of the match looks like the equation x * zero = zero.\n\n\n\n\n> Le 5 janv. 2021 à 13:51, Karl Palmskog <notifications@github.com> a écrit :\n> \n> I used Pierre-Marie Pédrot's script to add explicit locality to hints (otherwise, there is a warning in 8.13). I also fix or ignore some other warnings that are standard. This lessens the noise generated in CI considerably.\n> \n> You can view, comment on, or merge this pull request online at:\n> \n>   https://github.com/coq-community/hydra-battles/pull/18 <https://github.com/coq-community/hydra-battles/pull/18>\n> Commit Summary\n> \n> add explicit hint locality using PMP script to avoid warnings in 8.13\n> fix double induction deprecation\n> ignore MathComp-related warnings in _CoqProject and dune\n> File Changes\n> \n> M _CoqProject <https://github.com/coq-community/hydra-battles/pull/18/files#diff-7bc0f432942f548a20da329bb4e45e21faeeb897fe1d7e0bc26d20210a6e38f1> (3)\n> M theories/additions/Dichotomy.v <https://github.com/coq-community/hydra-battles/pull/18/files#diff-b47ac7d99a5dc506f1467066dd71fdfe19db6d2f295912bb043e5b884df3db67> (2)\n> M theories/additions/Euclidean_Chains.v <https://github.com/coq-community/hydra-battles/pull/18/files#diff-33c0f5d237ab37b1a325af7f3ba6d384707be80760e4e7c3b3f327be3cda4a5f> (8)\n> M theories/additions/Monoid_instances.v <https://github.com/coq-community/hydra-battles/pull/18/files#diff-80a19156be5ce150462e7cad6757d78c07c07f81aba618538f5cfcf0fa1c7aa9> (8)\n> M theories/additions/More_on_positive.v <https://github.com/coq-community/hydra-battles/pull/18/files#diff-68e107b85f9e20ed6b72e6627fa1d2a4f276c2755e926c5f327886c6a966cc53> (8)\n> M theories/additions/dune <https://github.com/coq-community/hydra-battles/pull/18/files#diff-a65f793256e07fbc65724fbad7aaf1f2d23c26758b41e740110f98ce6e4c4407> (3)\n> M theories/ordinals/Epsilon0/Canon.v <https://github.com/coq-community/hydra-battles/pull/18/files#diff-a3c461509071085720be95b0eff989e81ad80e2286b8d0d08f41570fbb7dcbe3> (2)\n> M theories/ordinals/Epsilon0/E0.v <https://github.com/coq-community/hydra-battles/pull/18/files#diff-c5af3c921dd03001f94a65d541d4deec780a7f1ab00d3824c742b00f407eea26> (14)\n> M theories/ordinals/Epsilon0/Epsilon0rpo.v <https://github.com/coq-community/hydra-battles/pull/18/files#diff-523f1a085d9d1f2b2337fc4b759cb08255b5463557d6a5f0f0d3c65702ec3f1f> (18)\n> M theories/ordinals/Epsilon0/F_alpha.v <https://github.com/coq-community/hydra-battles/pull/18/files#diff-d029435a2aa0c96fc1d0a7b48b287beb3580aad1c9856fb1b9cd456a3bff591e> (4)\n> M theories/ordinals/Epsilon0/H_alpha.v <https://github.com/coq-community/hydra-battles/pull/18/files#diff-7a5de3758ace9509337f8e90adb5edef2b7a513d45042f380f726c99b6ce915d> (4)\n> M theories/ordinals/Epsilon0/L_alpha.v <https://github.com/coq-community/hydra-battles/pull/18/files#diff-00ece1474a8443838722f48a0c5deb8497cee745697c2e947e75a38d26e4a4db> (2)\n> M theories/ordinals/Epsilon0/Large_Sets_Examples.v <https://github.com/coq-community/hydra-battles/pull/18/files#diff-c7026aff7fa26a0240c8e17840dd995dea5f244c93977dd07b8875fa2ed0c227> (2)\n> M theories/ordinals/Epsilon0/T1.v <https://github.com/coq-community/hydra-battles/pull/18/files#diff-cb1a336f3b87bd98e1d8723883ed887d63b1a6a8d4b740a55bb7fea744242a12> (30)\n> M theories/ordinals/Gamma0/Gamma0.v <https://github.com/coq-community/hydra-battles/pull/18/files#diff-98864be563c31d95297a9f311976d5337008bbe2ba6fabaa0ad39e61f9668845> (32)\n> M theories/ordinals/Gamma0/T2.v <https://github.com/coq-community/hydra-battles/pull/18/files#diff-2b991ee7ed06357b17ce15204fae24bf4e08b5bd3a89a7e9533939c07ce82284> (8)\n> M theories/ordinals/Hydra/Epsilon0_Needed_Free.v <https://github.com/coq-community/hydra-battles/pull/18/files#diff-81df98a10d0f01edbbba99dd48bd01112e69d09806c7f95577707118b414de9b> (2)\n> M theories/ordinals/Hydra/Epsilon0_Needed_Generic.v <https://github.com/coq-community/hydra-battles/pull/18/files#diff-08e9ceae459dfdc3fd911877774e8594c2439a711e2da472ead8f3d46c885d0e> (2)\n> M theories/ordinals/Hydra/Hydra_Termination.v <https://github.com/coq-community/hydra-battles/pull/18/files#diff-4e6c87b8a125f79b1d6b2162df367e808dded503f4edacfc11e1c0fed539cc70> (2)\n> M theories/ordinals/Hydra/Omega2_Small.v <https://github.com/coq-community/hydra-battles/pull/18/files#diff-e2856306d4d8c6c9896c772c233a808a038a952d7337863b780227dff0c28b0b> (10)\n> M theories/ordinals/Hydra/Omega_Small.v <https://github.com/coq-community/hydra-battles/pull/18/files#diff-a87f4ba93a5a043a96f9d916ef680a40fc26d5657c7794359e28a16ee22523cd> (2)\n> M theories/ordinals/OrdinalNotations/ON_Generic.v <https://github.com/coq-community/hydra-battles/pull/18/files#diff-b6fdbdc73a9fb963e353dd8f13beacfeba9b0cd5c1de810d365fc2b99e3c17cc> (2)\n> M theories/ordinals/OrdinalNotations/ON_Omega2.v <https://github.com/coq-community/hydra-battles/pull/18/files#diff-87a5b1dd4c8061d2daa8ee765a522e6dcf566e7ea3e63323e8008581e724b0ba> (4)\n> M theories/ordinals/OrdinalNotations/ON_mult.v <https://github.com/coq-community/hydra-battles/pull/18/files#diff-f27db2e205878a8a4a6c3bee4c7b6c06acb2ae4a90917774010b1da187cbb7eb> (4)\n> M theories/ordinals/OrdinalNotations/ON_plus.v <https://github.com/coq-community/hydra-battles/pull/18/files#diff-2812a6353f847c1cd11ed782dd67195d93b5fdf2c8ea44b4fc0d6b5c8de61034> (4)\n> M theories/ordinals/Prelude/MoreLists.v <https://github.com/coq-community/hydra-battles/pull/18/files#diff-0659422298e21526e03c893fd0475c72a53034bd1064a00bd99b1a1d46b30986> (2)\n> M theories/ordinals/Prelude/Sort_spec.v <https://github.com/coq-community/hydra-battles/pull/18/files#diff-6cfcfcbcb03df382d7326c3ff99d5966189a657de4308527ae6364501bf1368f> (2)\n> M theories/ordinals/Schutte/AP.v <https://github.com/coq-community/hydra-battles/pull/18/files#diff-eebbd06164415dc9298ee3f2e18b30f81a0c2ba24a63c4a6cff0a817f5adedad> (4)\n> M theories/ordinals/Schutte/CNF.v <https://github.com/coq-community/hydra-battles/pull/18/files#diff-59d5cf7fdf342381341c40b8fa7a462bd4635d5657a3da976d603b2a555744c2> (4)\n> M theories/ordinals/Schutte/Ordering_Functions.v <https://github.com/coq-community/hydra-battles/pull/18/files#diff-02b4875c36dfa3aa6be37f6dcdbdc075e6fb0b068ff96960da910c7990c99b29> (18)\n> M theories/ordinals/Schutte/Schutte_basics.v <https://github.com/coq-community/hydra-battles/pull/18/files#diff-67d263a508dca5da9bc29ad35f77e3c027c8350535f0356346b9e5befb5263d5> (28)\n> M theories/ordinals/Schutte/Well_Orders.v <https://github.com/coq-community/hydra-battles/pull/18/files#diff-748bd8981ca713c72e71886adc819d0732c81574d4ff3173f4c0d4d3455f2ca4> (2)\n> M theories/ordinals/primrec/primRec.v <https://github.com/coq-community/hydra-battles/pull/18/files#diff-82767788342d2644cb888af55ebd24b85be211ac765428c3e795b5af2f370eca> (2)\n> M theories/ordinals/rpo/list_permut.v <https://github.com/coq-community/hydra-battles/pull/18/files#diff-f1ca29f4b0d94949add0649072a9a86628815dd99ca47ee51c44c98c1c582c5d> (4)\n> Patch Links:\n> \n> https://github.com/coq-community/hydra-battles/pull/18.patch <https://github.com/coq-community/hydra-battles/pull/18.patch>\n> https://github.com/coq-community/hydra-battles/pull/18.diff <https://github.com/coq-community/hydra-battles/pull/18.diff>\n> —\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub <https://github.com/coq-community/hydra-battles/pull/18>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AJW6FCSUQZTW6JGKNFORH7TSYMDNTANCNFSM4VVCD3MA>.\n> \n\n"},{"author":"palmskog","date":"2021-01-05T15:46:47Z","comment":"@Casteran indeed this seems like a very nitpicky warning, and it was only introduced in 8.13. Perhaps we should simply suppress/ignore it? This is quite simple to do by editing `_CoqProject`/`dune`. Personally, I also prefer using `x` or similar rather than `_` in these situations.\r\n\r\nPerhaps @Zimmi48 knows why this warning was introduced."},{"author":"Zimmi48","date":"2021-01-05T16:04:20Z","comment":"See https://github.com/coq/coq/issues/12762 for the rationale. Feel free to ignore this warning if you do not find it useful. Maybe the warning message should explain why it is considered a bad practice though."},{"author":"palmskog","date":"2021-01-05T16:13:39Z","comment":"@Casteran what do you think of the rationale in coq/coq#12762? I'm fine with either suppressing the warning or changing the code to use underscores."},{"author":"Casteran","date":"2021-01-05T16:38:58Z","comment":"I understand the rationale.  Tomorrow, I can replace in master the catch-all variables with underscores. \n\n\n\n\n\n\n\n\n> Le 5 janv. 2021 à 17:13, Karl Palmskog <notifications@github.com> a écrit :\n> \n> \n> @Casteran <https://github.com/Casteran> what do you think of the rationale in coq/coq#12762 <https://github.com/coq/coq/issues/12762>? I'm fine with either suppressing the warning or changing the code to use underscores.\n> \n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub <https://github.com/coq-community/hydra-battles/pull/18#issuecomment-754735635>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AJW6FCTW3F2WUFZIGLBBYJLSYM3ELANCNFSM4VVCD3MA>.\n> \n\n"},{"author":"palmskog","date":"2021-01-05T16:57:48Z","comment":"OK, since the variable name change is orthogonal to this PR, I will then take the liberty to merge. The only remaining warnings were those related to the Coq issue."},{"author":"Casteran","date":"2021-01-05T17:36:07Z","comment":"In fact, there were only three occurrences of the  «  unused variable » issue (but signaled many times).\nI fixed that (hope so)  and pushed into master.\n\n\n\n> Le 5 janv. 2021 à 17:58, Karl Palmskog <notifications@github.com> a écrit :\n> \n> \n> Merged #18 <https://github.com/coq-community/hydra-battles/pull/18> into master.\n> \n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub <https://github.com/coq-community/hydra-battles/pull/18#event-4170870401>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AJW6FCVLC6SJMXG6VXZYIFTSYNAKXANCNFSM4VVCD3MA>.\n> \n\n"}],"tags":[],"pull_requests":[]},{"author":"palmskog","number":16,"state":"closed","open_date":"2021-01-02T16:46:44Z","update_date":"2021-01-04T16:10:16Z","discussion":[{"author":"palmskog","date":"2021-01-02T16:52:56Z","comment":"Looks like the CI time for addition chains is about 50% lower with this PR (3.5 min vs. 7 min)."}],"tags":[],"pull_requests":[]},{"author":"ybertot","number":13,"state":"closed","open_date":"2020-11-26T10:05:22Z","update_date":"2020-11-26T11:02:31Z","discussion":[{"author":"ybertot","date":"2020-11-26T10:29:19Z","comment":"@palmskog or @Zimmi48, Pierre is uncomfortable with merging so can you please check and act accordingly?\r\nWhat I did was:\r\ngit rm fib.v make_fib_tests.txt stub.ml\r\ncopies the files back in place\r\ngit add fib.v make_fib_tests.txt stub.ml\r\ngit commit\r\n\r\nThis way the author appears normally in the git history.\r\nI have more improvements to propose on the fib.v file, in future version, I will remove the comments \"author: Yves Bertot\" that do not belong in the file itself."},{"author":"Casteran","date":"2020-11-26T10:50:52Z","comment":"Done."},{"author":"palmskog","date":"2020-11-26T11:02:31Z","comment":"@ybertot @Casteran for the record, everything looked fine to me, and `git blame` returns the expected results."}],"tags":[],"pull_requests":[]},{"author":"Zimmi48","number":12,"state":"closed","open_date":"2020-11-25T14:42:26Z","update_date":"2020-11-25T16:32:49Z","discussion":[{"author":"Zimmi48","date":"2020-11-25T14:43:49Z","comment":"PS: @Casteran unless you click on \"Watch\", you will not receive notifications for issues / pull requests where you are not mentioned / requested a review."},{"author":"Casteran","date":"2020-11-25T15:07:26Z","comment":"Ok ! Thank you !"},{"author":"Casteran","date":"2020-11-25T15:08:12Z","comment":"Nice! Thank you!"}],"tags":[{"tag":"documentation","description":"Improvements or additions to documentation"}],"pull_requests":[]},{"author":"palmskog","number":11,"state":"closed","open_date":"2020-11-25T09:18:12Z","update_date":"2020-11-25T14:20:31Z","discussion":[{"author":"Zimmi48","date":"2020-11-25T14:20:31Z","comment":"Very nice idea!"}],"tags":[],"pull_requests":[]},{"author":"Casteran","number":10,"state":"closed","open_date":"2020-11-24T13:57:53Z","update_date":"2020-11-24T19:32:30Z","discussion":[{"author":"palmskog","date":"2020-11-24T14:03:56Z","comment":"@Casteran to keep the namespacing simpler, how about:\r\n- `theories/ordinals` is simply `hydras`\r\n- `theories/additions` is simply `additions`\r\n\r\nHowever, this would mean rolling back all the changes to the `From` statements, i.e., you should have `From hydras Require Import ...` instead of `From hydras.ordinals Require Import ...`."},{"author":"Casteran","date":"2020-11-24T14:20:35Z","comment":"Yes, I can do that (in the .v files). With grep, it will be fast. I have to go outside for one hour, when I come back, I change the Requires, then the href in there latex file.\nI send you  an email when I have finished.\n\n\n> Le 24 nov. 2020 à 15:04, Karl Palmskog <notifications@github.com> a écrit :\n> \n> \n> @Casteran <https://github.com/Casteran> to keep the namespacing simpler, how about:\n> \n> theories/ordinals is simply hydras\n> theories/additions is simply additions\n> However, this would mean rolling back all the changes to the From statements, i.e., you should have From hydras Require Import ... instead of From hydras.ordinals Require Import ....\n> \n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub <https://github.com/coq-community/hydra-battles/pull/10#issuecomment-732993297>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AJW6FCW2ZLUGLCW23R45NXDSRO4ODANCNFSM4UA5OWHQ>.\n> \n\n"},{"author":"Casteran","date":"2020-11-24T16:26:58Z","comment":"I made the changes in branch restructuration.\nFiles modified :  _CoqProject  theories/ordinals/*/*.v doc/part-hydras.tex \n\nI didn’t modify dune nor opam related files.\n\nWould you check before merge ?\nMany thanks.\n\n> Le 24 nov. 2020 à 15:04, Karl Palmskog <notifications@github.com> a écrit :\n> \n> \n> @Casteran <https://github.com/Casteran> to keep the namespacing simpler, how about:\n> \n> theories/ordinals is simply hydras\n> theories/additions is simply additions\n> However, this would mean rolling back all the changes to the From statements, i.e., you should have From hydras Require Import ... instead of From hydras.ordinals Require Import ....\n> \n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub <https://github.com/coq-community/hydra-battles/pull/10#issuecomment-732993297>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AJW6FCW2ZLUGLCW23R45NXDSRO4ODANCNFSM4UA5OWHQ>.\n> \n\n"},{"author":"Casteran","date":"2020-11-24T16:42:19Z","comment":"Oups, it works on my computer, but I just receive an error message from CI:\nAll jobs have failed (on branch restructuration) \nThe error messages are \nCannot find a physical path bound to logical path matching suffix\n\n\n\n\n> Le 24 nov. 2020 à 17:26, Castéran Pierre <pierre.casteran@gmail.com> a écrit :\n> \n> I made the changes in branch restructuration.\n> Files modified :  _CoqProject  theories/ordinals/*/*.v doc/part-hydras.tex \n> \n> I didn’t modify dune nor opam related files.\n> \n> Would you check before merge ?\n> Many thanks.\n> \n>> Le 24 nov. 2020 à 15:04, Karl Palmskog <notifications@github.com <mailto:notifications@github.com>> a écrit :\n>> \n>> \n>> @Casteran <https://github.com/Casteran> to keep the namespacing simpler, how about:\n>> \n>> theories/ordinals is simply hydras\n>> theories/additions is simply additions\n>> However, this would mean rolling back all the changes to the From statements, i.e., you should have From hydras Require Import ... instead of From hydras.ordinals Require Import ....\n>> \n>> —\n>> You are receiving this because you were mentioned.\n>> Reply to this email directly, view it on GitHub <https://github.com/coq-community/hydra-battles/pull/10#issuecomment-732993297>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AJW6FCW2ZLUGLCW23R45NXDSRO4ODANCNFSM4UA5OWHQ>.\n>> \n> \n\n"},{"author":"palmskog","date":"2020-11-24T18:52:59Z","comment":"@Casteran I fixed the last issue with the build, so I think this is ready for merging now.\r\n\r\nHowever, note that `make install` will no longer be sensical - the right way to install (in contrast to working in the local directory) is instead via Dune, which the opam files will use."}],"tags":[],"pull_requests":[]},{"author":"Casteran","number":8,"state":"closed","open_date":"2020-11-10T15:00:38Z","update_date":"2020-11-10T16:42:37Z","discussion":[],"tags":[],"pull_requests":[]},{"author":"Casteran","number":7,"state":"closed","open_date":"2020-11-03T17:28:13Z","update_date":"2020-11-04T15:38:43Z","discussion":[],"tags":[],"pull_requests":[]},{"author":"palmskog","number":6,"state":"closed","open_date":"2020-11-02T13:51:24Z","update_date":"2020-11-03T08:01:27Z","discussion":[{"author":"Zimmi48","date":"2020-11-02T14:17:08Z","comment":"Sounds good to me. But note that there was an issue during the opam file generation and the Equation dependency does not appear there."}],"tags":[],"pull_requests":[]},{"author":"Casteran","number":5,"state":"closed","open_date":"2020-10-25T10:17:12Z","update_date":"2020-10-25T10:18:32Z","discussion":[],"tags":[],"pull_requests":[]},{"author":"Zimmi48","number":4,"state":"closed","open_date":"2020-10-23T14:14:35Z","update_date":"2020-10-31T11:37:31Z","discussion":[],"tags":[],"pull_requests":[]},{"author":"palmskog","number":3,"state":"closed","open_date":"2020-10-20T20:51:34Z","update_date":"2020-10-21T19:21:01Z","discussion":[],"tags":[],"pull_requests":[]},{"author":"Zimmi48","number":2,"state":"closed","open_date":"2020-10-20T17:14:12Z","update_date":"2020-11-25T14:23:30Z","discussion":[{"author":"palmskog","date":"2020-10-20T20:41:49Z","comment":"One issue to keep in mind is that each PDF is around 1MB. Git does have delta-compression, but with hundreds of commits, repo size could become a factor."},{"author":"anton-trunov","date":"2020-10-20T21:10:10Z","comment":"@palmskog Does this workflow actually commit build artifacts? I would expect it to upload them to an external storage."},{"author":"palmskog","date":"2020-10-20T21:30:08Z","comment":"> Does this workflow actually commit build artifacts? I would expect it to upload them to an external storage.\r\n\r\nI based my comment on the following:\r\n> the PDF will be deployed to GitHub Pages"},{"author":"anton-trunov","date":"2020-10-20T21:36:01Z","comment":"I see, thanks. I'm wondering if we could just link latest artifact from Github Pages."},{"author":"Zimmi48","date":"2020-10-21T08:26:53Z","comment":"> One issue to keep in mind is that each PDF is around 1MB. Git does have delta-compression, but with hundreds of commits, repo size could become a factor.\n\nThis is avoided by the fact that the gh-pages branch is erased / force-pushed at every deploy. It never contains more than one commit.\n\nFor the record, my initial plan was indeed to push an artifact and not a GitHub Pages branch, but GitHub Actions won't allow viewing the PDF in the browser in that case (it encapsulates it in a zip archive). GitLab CI is superior here, but using it would introduce additional complexity (not worth it IMHO)."}],"tags":[],"pull_requests":[]},{"author":"Casteran","number":1,"state":"closed","open_date":"2020-10-20T13:29:08Z","update_date":"2020-10-20T19:48:41Z","discussion":[{"author":"palmskog","date":"2020-10-20T16:48:08Z","comment":"@Zimmi48 @Casteran this is unfortunately still quite far from best practices w.r.t. makefiles and build scripting. If you want, I can make a PR with some changes (after this is merged). In particular, I would advise against generating a file list via a shell script. Even though it is somewhat tedious to list all `.v` files in `_CoqProject`, this is currently the most stable option until we get final Dune support."},{"author":"Casteran","date":"2020-10-20T17:06:39Z","comment":"Thank you, Karl.\nPlease bring all changes necessary to fit to the safest practices.\n\n  \n\n> Le 20 oct. 2020 à 18:48, Karl Palmskog <notifications@github.com> a écrit :\n> \n> \n> @Zimmi48 <https://github.com/Zimmi48> @Casteran <https://github.com/Casteran> this is unfortunately still quite far from best practices w.r.t. makefiles and build scripting. If you want, I can make a PR with some changes. In particular, I would advise against generating a file list via a shell script. Even though it is somewhat tedious to list all .v files in _CoqProject, this is currently the most stable option until we get final Dune support.\n> \n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub <https://github.com/coq-community/hydra-battles/pull/1#issuecomment-712997699>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AJW6FCWTI3453KCZLMX7X3TSLW5NTANCNFSM4SYLJT5A>.\n> \n\n"},{"author":"palmskog","date":"2020-10-20T19:48:28Z","comment":"I'm merging this PR so as not to leave it hanging when modifying build scripts."}],"tags":[],"pull_requests":[]}]