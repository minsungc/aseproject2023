[{"author":"affeldt-aist","number":891,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":111,"deletions":16},{"file":"theories/exp.v","status":"M","additions":111,"deletions":16},{"file":"theories/lebesgue_measure.v","status":"M","additions":111,"deletions":16},{"file":"theories/measure.v","status":"M","additions":111,"deletions":16}],"state":"open","open_date":"2023-04-06T11:39:00Z","update_date":"2023-04-07T05:51:37Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"a56e3f9946540d63bdb9d123430357d7edd11e8b","message":"powere_pos\n\n- fixes issue #883\n\nCo-authored-by: Alessandro Bruni <alessandro.bruni@gmail.com>\nCo-authored-by: Takafumi Saikawa <tscompor@gmail.com>","date":"2023-04-07T05:50:13Z"}]},{"author":"affeldt-aist","number":890,"diff_summary":[{"file":".github/pull_request_template.md","status":"D","additions":5,"deletions":384},{"file":"etc/changes.awk","status":"D","additions":5,"deletions":384},{"file":"etc/changes.sh","status":"D","additions":5,"deletions":384}],"state":"open","open_date":"2023-04-06T01:37:29Z","update_date":"2023-04-06T01:37:30Z","discussion":[],"review_discussion":[],"tags":[{"tag":"TODO: HB port","description":"This PR should be ported to the HB branch as well. Remove this label when an issue or PR is created."}],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"c9aa8d411c598f5b5507763e5b004d51026fa296","message":"redirect to tools","date":"2023-04-06T01:35:45Z"}]},{"author":"affeldt-aist","number":889,"diff_summary":[{"file":".github/pull_request_template.md","status":"M","additions":1,"deletions":1}],"state":"merged","open_date":"2023-04-05T04:33:12Z","update_date":"2023-04-05T05:37:22Z","discussion":[],"review_discussion":[],"tags":[{"tag":"TODO: HB port","description":"This PR should be ported to the HB branch as well. Remove this label when an issue or PR is created."}],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"23eb3fb1e052ffc1f89561f5aff003bd877e2f02","message":"typo","date":"2023-04-05T04:31:10Z"}]},{"author":"zstone1","number":888,"diff_summary":[{"file":"theories/topology.v","status":"M","additions":4,"deletions":3}],"state":"merged","open_date":"2023-03-29T04:07:17Z","update_date":"2023-03-29T15:19:15Z","discussion":[{"author":"proux01","date":"2023-03-29T15:19:04Z","comment":"CI green (we only support 8.16 and 8.17 on HB branch), let's merge.\r\nThanks a lot!"}],"review_discussion":[{"author":"CohenCyril","file":"theories/topology.v","date":"2023-03-29T09:28:10Z","comment":"I think this line is spurious, isn't it?\r\n```suggestion\r\n```"}],"tags":[],"commits":[{"author":"zstone1","committer":"proux01","hash":"7ce6f23d17bc6ecfea8e7bb3190d932d209f3463","message":"porting quotient fixes","date":"2023-03-29T12:03:54Z"}]},{"author":"proux01","number":887,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":68,"deletions":0},{"file":"classical/mathcomp_extra.v","status":"M","additions":68,"deletions":0},{"file":"theories/constructive_ereal.v","status":"M","additions":68,"deletions":0}],"state":"merged","open_date":"2023-03-28T16:28:14Z","update_date":"2023-04-07T04:44:10Z","discussion":[{"author":"affeldt-aist","date":"2023-03-28T16:31:24Z","comment":"Note that `sqrte` is also defined in [PR #790](https://github.com/math-comp/analysis/pull/790/) @hoheinzollern "},{"author":"proux01","date":"2023-04-06T11:42:26Z","comment":"Sorry, I should have undrafted that long ago."}],"review_discussion":[{"author":"affeldt-aist","file":"theories/constructive_ereal.v","date":"2023-03-29T07:26:05Z","comment":"```suggestion\r\n- move: age0; rewrite le_eqVlt eqe => /predU1P[<-|x0].\r\n    by rewrite mul0e sqrte0 sqrtr0 mul0e.\r\n  by rewrite mulry gtr0_sg ?mul1e// mulry gtr0_sg ?mul1e// sqrtr_gt0.\r\n```"},{"author":"affeldt-aist","file":"theories/constructive_ereal.v","date":"2023-03-29T07:26:47Z","comment":"```suggestion\r\n  + by move=> y0; rewrite EFinN mulN1e/= ltr0_sqrtr// sgr0 mul0e.\r\n```"},{"author":"affeldt-aist","file":"theories/constructive_ereal.v","date":"2023-03-29T07:27:14Z","comment":"```suggestion\r\ncase: x => [x||] xge0; rewrite expe2 ?mulyy//.\r\nby rewrite -sqrteM// -EFinM/= sqrtr_sqr ger0_norm.\r\n```"}],"tags":[],"commits":[{"author":"proux01","committer":"proux01","hash":"c2863514f3dd39b116e6931824ea54d98911851d","message":"Add sqrte\n\nCo-authored-by: Reynald Affeldt <reynald.affeldt@aist.go.jp>","date":"2023-03-29T08:11:49Z"}]},{"author":"zstone1","number":886,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":110,"deletions":0},{"file":"theories/topology.v","status":"M","additions":110,"deletions":0}],"state":"open","open_date":"2023-03-28T03:42:27Z","update_date":"2023-03-28T03:44:35Z","discussion":[],"review_discussion":[],"tags":[{"tag":"enhancement :sparkles:","description":"This issue/PR is about adding new features enhancing the library"},{"tag":"TODO: HB port","description":"This PR should be ported to the HB branch as well. Remove this label when an issue or PR is created."}],"commits":[{"author":"zstone1","committer":"zstone1","hash":"7f9fd89fe33f2544eedba3b2a3b885e0c216cd5b","message":"zero dimensional and totally disconnected","date":"2023-03-28T03:36:26Z"},{"author":"zstone1","committer":"zstone1","hash":"43cd714aef92c26582c54a5a3e1eb46e6cce514b","message":"adding docs","date":"2023-03-28T03:44:32Z"}]},{"author":"zstone1","number":885,"diff_summary":[{"file":"theories/normedtype.v","status":"M","additions":201,"deletions":49},{"file":"theories/topology.v","status":"M","additions":201,"deletions":49}],"state":"open","open_date":"2023-03-27T04:28:27Z","update_date":"2023-03-27T04:39:54Z","discussion":[],"review_discussion":[],"tags":[{"tag":"enhancement :sparkles:","description":"This issue/PR is about adding new features enhancing the library"},{"tag":"experiment :test_tube:","description":"This issue/PR is very experimental"}],"commits":[{"author":"zstone1","committer":"zstone1","hash":"548746486de0bba4b25a072e215efffcf5262e65","message":"order topology almost working","date":"2023-03-27T04:22:28Z"},{"author":"zstone1","committer":"zstone1","hash":"6c855f224f7b2da7dc6bc06f190203209b85fef9","message":"figured out order topology aliases","date":"2023-03-27T04:22:28Z"},{"author":"zstone1","committer":"zstone1","hash":"999c0cf4a98738f77a2724099934c1f1d3f61293","message":"discrete topology","date":"2023-03-27T04:22:28Z"},{"author":"zstone1","committer":"zstone1","hash":"ab30409a06b0352c355827d34517b2c248777a2e","message":"bool is also order topology","date":"2023-03-27T04:22:28Z"}]},{"author":"affeldt-aist","number":884,"diff_summary":[{"file":".github/pull_request_template.md","status":"M","additions":21,"deletions":3}],"state":"merged","open_date":"2023-03-27T01:24:27Z","update_date":"2023-03-31T09:38:37Z","discussion":[],"review_discussion":[{"author":"zstone1","file":".github/pull_request_template.md","date":"2023-03-27T14:42:25Z","comment":"While we're making changes here, we should at least mention `etc/changes.sh`. I've found it quite reliable. \r\n\r\nWe might also want to keep track of divergence between `hierarchy-builder` and `master`. Perhaps the changelog is a nice place to record these? Things like \"Discrete topology is a Prop is master, and a Structure in HB\". "},{"author":"CohenCyril","file":".github/pull_request_template.md","date":"2023-03-27T15:46:58Z","comment":"Let's add a tag for PRs to be ported to HB, and mention it here."},{"author":"CohenCyril","file":".github/pull_request_template.md","date":"2023-03-27T15:56:58Z","comment":"\r\n> We might also want to keep track of divergence between `hierarchy-builder` and `master`. Perhaps the changelog is a nice place to record these? Things like \"Discrete topology is a Prop is master, and a Structure in HB\".\r\n\r\nI created a label to track those\r\nhttps://github.com/math-comp/analysis/issues?q=label%3A%22TODO%3A+HB+port\r\n\r\n\r\n"},{"author":"CohenCyril","file":".github/pull_request_template.md","date":"2023-03-27T15:57:34Z","comment":"https://github.com/math-comp/analysis/issues?q=label%3A%22TODO%3A+HB+port\r\n"},{"author":"CohenCyril","file":".github/pull_request_template.md","date":"2023-03-27T15:59:38Z","comment":"```suggestion\r\n- [ ] I added the label `TODO: HB port` to make sure someone ports this PR to the `hierarchy-builder` branch **or** I already opened an issue or PR (please cross reference).\r\n```"},{"author":"CohenCyril","file":".github/pull_request_template.md","date":"2023-03-27T16:00:14Z","comment":"> While we're making changes here, we should at least mention `etc/changes.sh`. I've found it quite reliable.\r\n\r\nYes that would be nice"}],"tags":[{"tag":"packaging/releasing","description":"Issue/PR about packaging or realising."}],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"7eb28e1bfa6085b6e4aaa01817808c3620f3f984","message":"add comment about HB compatibility to pr_template.md","date":"2023-03-28T14:46:59Z"}]},{"author":"affeldt-aist","number":881,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":55,"deletions":91},{"file":"theories/lebesgue_integral.v","status":"M","additions":55,"deletions":91},{"file":"theories/measure.v","status":"M","additions":55,"deletions":91}],"state":"merged","open_date":"2023-03-16T05:52:37Z","update_date":"2023-03-16T09:38:46Z","discussion":[{"author":"affeldt-aist","date":"2023-03-16T05:55:54Z","comment":"This looks uncontroversial, almost a bug fix, so as long as there is no objection wrt naming, I will merge soon."},{"author":"CohenCyril","date":"2023-03-16T08:39:38Z","comment":"I disagree... If you are going to refactor, let's make ae a filter and use filter lemmas rather than duplicating the theory of filters."},{"author":"affeldt-aist","date":"2023-03-16T09:36:00Z","comment":"That would be better indeed. What about we merge this and issue about the generalization and I open a new PR for it ASAP?"}],"review_discussion":[],"tags":[{"tag":"enhancement :sparkles:","description":"This issue/PR is about adding new features enhancing the library"}],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"ffda150fe080dc64962691a072e5c8241336a425","message":"factor ae proofs","date":"2023-03-16T05:51:25Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"ebf4a3cfa57d016158dfadac7c58411b331a019c","message":"complete changelog","date":"2023-03-16T05:53:39Z"}]},{"author":"affeldt-aist","number":877,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":58,"deletions":0},{"file":"theories/lebesgue_integral.v","status":"M","additions":58,"deletions":0}],"state":"merged","open_date":"2023-03-15T03:54:57Z","update_date":"2023-03-18T23:56:33Z","discussion":[{"author":"affeldt-aist","date":"2023-03-15T16:10:49Z","comment":"Thanks for taking a look. Indeed, the proof mimics a paper proof presented like equational reasoning, see page 16 of http://www.cs.ox.ac.uk/people/samuel.staton/papers/esop2017.pdf."},{"author":"affeldt-aist","date":"2023-03-15T16:25:51Z","comment":"> Inspired by agda's equational reasoning stuff, I made a little notation to for formalize it in a different library.\r\n> See https://github.com/zstone1/coq-complex/blob/master/src/helpers.v around line 170.\r\n> It has the benefit of being able to `_` away unchanged terms. I'd love to have something like this in mathcomp.\r\n> Also it's generalized to any transitive reflexive relation, including `<` and `<=`.\r\n\r\nExample of use:\r\nhttps://github.com/zstone1/coq-complex/blob/9ee101eb5b34c30d2e136dd2c080613096c593a1/src/complex_core.v#L485-L495\r\n\r\nIndeed, I believe that there are situations where an approach which highlights what's changing improves maintainability despite the extra verbosity. "},{"author":"affeldt-aist","date":"2023-03-18T02:06:21Z","comment":"> I'd love to have something like this in mathcomp.\r\n\r\nDo you want to record this as a wish issue before merging?\r\n"}],"review_discussion":[],"tags":[{"tag":"enhancement :sparkles:","description":"This issue/PR is about adding new features enhancing the library"}],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"6ebc8f830fdad0d54cca71aa7f3607321df9b257","message":"fubini for s-finite measures","date":"2023-03-15T03:50:50Z"}]},{"author":"affeldt-aist","number":876,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":173,"deletions":35},{"file":"theories/exp.v","status":"M","additions":173,"deletions":35},{"file":"theories/lebesgue_measure.v","status":"M","additions":173,"deletions":35}],"state":"merged","open_date":"2023-03-14T14:36:30Z","update_date":"2023-03-31T11:09:43Z","discussion":[{"author":"affeldt-aist","date":"2023-03-22T08:06:23Z","comment":"@thery Allow me to ping you in case this slipped under your radar"},{"author":"proux01","date":"2023-03-30T13:02:16Z","comment":"I'll merge tomorrow if there is no more comment"},{"author":"hoheinzollern","date":"2023-03-31T04:51:35Z","comment":"LGTM "},{"author":"affeldt-aist","date":"2023-03-31T10:35:33Z","comment":"Many thanks for the reviews!"}],"review_discussion":[{"author":"t6s","file":"theories/exp.v","date":"2023-03-15T13:58:37Z","comment":"Within the current limitation that we cannot properly handle the complex analysis, this definition seems to be the best possible approximation to the power function on R x R.  It works for 0 < r < ∞, 0 <= θ < π if seen in the polar coordinate system."},{"author":"hoheinzollern","file":"theories/exp.v","date":"2023-03-25T09:25:09Z","comment":"This lemma can be proved with `a != 0` instead of `0 < a`"},{"author":"proux01","file":"theories/exp.v","date":"2023-03-29T08:19:17Z","comment":"@hoheinzollern well, ``0 `^ 0`` is defined as `0`, are you suggesting to change the definition to something like?\r\n```\r\nDefinition power_pos a x := if a == 0 then if x == 0 then 1 else 0 else expR (x * ln a).\r\n````\r\n(I have no opinion on the subject)"},{"author":"proux01","file":"theories/exp.v","date":"2023-03-29T08:20:45Z","comment":"Maybe a similar lemma for `intmul` would be nice?"},{"author":"affeldt-aist","file":"theories/exp.v","date":"2023-03-30T15:21:29Z","comment":"We changed the definition so that ```0 `^ 0``` is `1`. We do not think that is was strictly necessary but it seemed to be the least surprising. As a consequence, a few lemmas have slightly different conditions."},{"author":"affeldt-aist","file":"theories/exp.v","date":"2023-03-30T15:22:03Z","comment":"We have added this lemma. Thank you for the suggestion."},{"author":"proux01","file":"CHANGELOG_UNRELEASED.md","date":"2023-03-31T09:11:57Z","comment":"```suggestion\r\n  + `exp_fun_gt0` has now a condition and is renamed to `power_pos_ge0`\r\n```"},{"author":"proux01","file":"CHANGELOG_UNRELEASED.md","date":"2023-03-31T09:22:52Z","comment":"```suggestion\r\n  + rename `ler_exp_fun` to `ler_power_pos`\r\n```"},{"author":"proux01","file":"CHANGELOG_UNRELEASED.md","date":"2023-03-31T09:26:34Z","comment":"```suggestion\r\n  + weaken condition of `exp_fun_mulrn` and rename to `power_pos_mulrn`\r\n```"},{"author":"proux01","file":"CHANGELOG_UNRELEASED.md","date":"2023-03-31T09:28:01Z","comment":"```suggestion\r\n    `power_pos_intmul`, `power_pos_inv1`\r\n```"},{"author":"affeldt-aist","file":"CHANGELOG_UNRELEASED.md","date":"2023-03-31T10:31:40Z","comment":"I keep it as it is since `power_pos_ge0` has also been added as a new lemma."}],"tags":[{"tag":"\"bug\" :bug:","description":"This issue (resp. PR) describes (resp. fixes) a \"bug\""},{"tag":"TODO: HB port","description":"This PR should be ported to the HB branch as well. Remove this label when an issue or PR is created."}],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"9190920890b76dcbd1ab91a064d50873a09b07d8","message":"gen exp_fun\n\n- rename to power_pow\n- fix doc\n- add scope to notation\n\nCo-authored-by: Alessandro Bruni <alessandro.bruni@gmail.com>\nCo-authored-by: Takafumi Saikawa <tscompor@gmail.com>","date":"2023-03-30T15:22:55Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"30354cd3a4638cd9395e44260c1731af6f3d7187","message":"add lemma power12_sqrt","date":"2023-03-30T15:22:55Z"},{"author":"hoheinzollern","committer":"affeldt-aist","hash":"37ed4cf9c0c7112ae7adceedd451add26e767d2b","message":"additional lemmas","date":"2023-03-30T15:22:55Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"2a772adb3f36391677af31a87c1ffdf425c3e662","message":"change power_pos so that 0^0=1\n\n- so that power_pos and exprn coincide","date":"2023-03-30T15:22:55Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"c6af01d20e5404f1f769ee69c42f775356019df3","message":"measurable_fun exp ln","date":"2023-03-30T15:22:55Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"fdf0c2dc3931efc857903783588c64495ddda8ed","message":"fix chaneglog","date":"2023-03-30T15:22:55Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"bea6c1e025fc9611efa443b5fb3a04626c4ae525","message":"add power_pos_intmul proposed by Pierre","date":"2023-03-30T15:22:55Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"27c51ca4b08f38453568c31ac2f7909f89705d86","message":"fix changelog","date":"2023-03-31T10:34:50Z"}]},{"author":"affeldt-aist","number":875,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":90,"deletions":57},{"file":"classical/set_interval.v","status":"M","additions":90,"deletions":57}],"state":"open","open_date":"2023-03-14T05:15:58Z","update_date":"2023-04-07T05:22:38Z","discussion":[{"author":"affeldt-aist","date":"2023-03-15T16:01:01Z","comment":"Since this renaming was part of a discussion with @CohenCyril @ybertot @t6s I guess we can merge in the interest of time (it is used in PR #873 ). "},{"author":"affeldt-aist","date":"2023-03-29T07:32:34Z","comment":"It was brought to my attention that `line_path` might be a bit long after all.\r\nI am not sure but anyway since PR #873 is underway we will have the occasion pretty soon to discuss the naming again if necessary."}],"review_discussion":[],"tags":[{"tag":"renaming/refactoring","description":"This is about a renaming or refactoring in the library"},{"tag":"TODO: HB port","description":"This PR should be ported to the HB branch as well. Remove this label when an issue or PR is created."}],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"1a3e23e5b8f3e808de3b3dbc673d14ad6d11981c","message":"conv -> line_path","date":"2023-03-14T05:13:39Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"08ca017fd6da59564c8a98482cfbbca589a2c8d5","message":"fix changelog","date":"2023-03-14T06:18:41Z"}]},{"author":"affeldt-aist","number":874,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":107,"deletions":86},{"file":"classical/functions.v","status":"M","additions":107,"deletions":86},{"file":"theories/realfun.v","status":"M","additions":107,"deletions":86},{"file":"theories/topology.v","status":"M","additions":107,"deletions":86}],"state":"merged","open_date":"2023-03-14T03:04:29Z","update_date":"2023-03-27T15:53:03Z","discussion":[{"author":"affeldt-aist","date":"2023-03-15T03:56:42Z","comment":"To rename the fields `axX`, I just reuse the name of the lemmas that are proved directly by these axioms, so the naming should be uncontroversial."}],"review_discussion":[],"tags":[{"tag":"documentation :memo:","description":"This issue/PR is about documentation of the library / repository"},{"tag":"renaming/refactoring","description":"This is about a renaming or refactoring in the library"},{"tag":"TODO: HB port","description":"This PR should be ported to the HB branch as well. Remove this label when an issue or PR is created."}],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"8da770d1defa55a47d5584b9f94e36f5483aedab","message":"fixes naming of topology.v\n\n- fixes #866\n- fixes #867\n- fixes #868","date":"2023-03-14T01:53:45Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"71a9e5ab614093035f6789241a32fbb6c6aef033","message":"fixes #865","date":"2023-03-14T02:36:56Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"f036e8fb5c9b82681356866ac10150ae138b5428","message":"fixes #864","date":"2023-03-14T02:38:36Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"1e7533dcca403b9b952a9776dfdfc3766dbf1525","message":"fix changelog","date":"2023-03-14T03:07:23Z"}]},{"author":"affeldt-aist","number":873,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"A","additions":341,"deletions":0},{"file":"_CoqProject","status":"A","additions":341,"deletions":0},{"file":"classical/set_interval.v","status":"A","additions":341,"deletions":0},{"file":"theories/convex.v","status":"A","additions":341,"deletions":0}],"state":"open","open_date":"2023-03-13T17:16:07Z","update_date":"2023-04-07T04:51:00Z","discussion":[{"author":"affeldt-aist","date":"2023-03-13T17:23:00Z","comment":"[NB: review comment by @zstone1 copied verbatim from PR https://github.com/math-comp/analysis/pull/794 ]\r\n\r\nNice results. I've made comments about a couple generalizations, one regarding annoying endpoint issues, the other regarding generalizing to vector space ranges. I care more about the endpoints one mostly because it's much harder to fix later. Happy to work with you on that if that'd be helpful."},{"author":"hoheinzollern","date":"2023-03-17T16:35:30Z","comment":"On top of being helpful for the exponential function, definitions about convexity are also necessary for the formalization of Hoelder's inequality and the special case of Cauchy Schwarz's inequality from PR #790."}],"review_discussion":[{"author":"affeldt-aist","file":"theories/convex.v","date":"2023-03-13T17:20:17Z","comment":"[NB: review comment by @zstone1 copied verbatim from PR #794]\r\n\r\nThis definition misbehaves at the endpoints. In particular, it requires `f` to be be \"differentiable from the left at `a`\". That makes this definition rely on values of `f` outside `[a,b]`. One big consequence is characteristic functions like ``if x \\in `[a,b] then 1 else 0`` fails this definition, as its not derivable at `a` or `b`. For what it's worth, I had an analogous issue with `realfun.v`, see #752 for how I addressed it there. You'll need something slightly different here, though.\r\n\r\nI've seen textbooks take these approaches:\r\n1. Demanding \"continuity up the endpoints\" is one approach\r\n```\r\nforall x, x \\in `]a, b[ -> derivable f x 1.\r\n/\\\r\ncvg (at_right a f^`()) /\\ cvg (at_right b f^`())\r\n```\r\nor some variation of this. However, this implies some continuity of the derivative, which is maybe not ideal.\r\n2. We could change the derivative to use a different topology. One way to do that is add an analog to the ``{within `[a,b], continuous f}`` notation of  ``{within `[a,b], derivable f}``. This would take limits only on the subspace topology. \r\n3. Similarly, but specialized to working in `R`, it should be fine to define it like\r\n```\r\nforall x, x \\in `]a, b[ -> derivable f x 1\r\n/\\\r\n\"differentiable from the right at b\" /\\ \"differentiable from the left at a\"\r\n```\r\nFor some sensible notion of \"left\" and \"right\" derivative. "},{"author":"affeldt-aist","file":"theories/convex.v","date":"2023-03-13T17:21:46Z","comment":"[NB: review comment by @zstone1 copied verbatim from PR #794 ]\r\n\r\nWhere do we need the assumption that the range of `f` is `R`? If it's painless, generalizing to a vector space would be quite helpful for me. I'll need some stuff about convexity in both `R` and `R^n` for my work on space-filling curves, so I'm happy to have these results either way."},{"author":"affeldt-aist","file":"theories/convex.v","date":"2023-03-29T06:42:13Z","comment":">     1. Demanding \"continuity up the endpoints\" is one approach\r\n> \r\n> \r\n> ```\r\n> forall x, x \\in `]a, b[ -> derivable f x 1.\r\n> /\\\r\n> cvg (at_right a f^`()) /\\ cvg (at_right b f^`())\r\n> ```\r\n> \r\n> or some variation of this. However, this implies some continuity of the derivative, which is maybe not ideal. \r\n\r\nThe last two commits implement this solution.\r\n(Hopefully, we think that you wrote ``` cvg (at_right a f^`()) ``` but actually meant `cvg (at_right a f)`.)\r\nIs it in the right direction? @zstone1 \r\n"},{"author":"affeldt-aist","file":"theories/convex.v","date":"2023-04-03T14:07:36Z","comment":"> Where do we need the assumption that the range of f is R?\r\n\r\nWe at least need to be able to compare to `0` but I maybe need to spend more time."}],"tags":[{"tag":"enhancement :sparkles:","description":"This issue/PR is about adding new features enhancing the library"},{"tag":"TODO: HB port","description":"This PR should be ported to the HB branch as well. Remove this label when an issue or PR is created."}],"commits":[{"author":"yoshihiro503","committer":"affeldt-aist","hash":"7b68373072305970d54b70cb7015506c2939c4b8","message":"Introduce conves\n\nCo-authored-by: Reynald Affeldt <reynald.affeldt@aist.go.jp>","date":"2023-03-15T15:39:00Z"},{"author":"yoshihiro503","committer":"affeldt-aist","hash":"2e1b9ec3084c7a82d04338b413f12246162131cd","message":"proof of second_drivative_convexf_pt","date":"2023-03-15T15:39:00Z"},{"author":"yoshihiro503","committer":"affeldt-aist","hash":"c93d9f992d8f3c49e484e2a6d42c0009ca710d2f","message":"proof of second_derivative_convex_pt","date":"2023-03-15T15:39:00Z"},{"author":"yoshihiro503","committer":"affeldt-aist","hash":"f8042f5961b15b5a899e6ebb45e309af338000ab","message":"proof of some lemmas","date":"2023-03-15T15:39:00Z"},{"author":"yoshihiro503","committer":"affeldt-aist","hash":"5702ce7704d489e3b1126b2ce75e56b988fb0c16","message":"prove Admitted lemmas","date":"2023-03-15T15:39:00Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"5f247dcd64cee67d87e4c170d9fa74f365f64e95","message":"introduce convex space with `{i01 R}`","date":"2023-03-15T15:39:00Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"a540fbb7c87d0c40327c2aa4b6b946d9a41fc6e5","message":"upd wrt last itv.v","date":"2023-03-15T15:47:07Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"5c7ea87cd9b85da24fdc1835628b991ad55c854c","message":"add to _CoqProject","date":"2023-03-15T15:57:39Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"1d327c5e59ca1b627efec80771ee1d79221b1723","message":"start solution 1 by zachary","date":"2023-03-20T14:08:04Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"8f2c32e4c49c150453fce59f4a4b89e8bfafe049","message":"complete solution 1 by zachary\n\nCo-authored-by: Alessandro Bruni <alessandro.bruni@gmail.com>\nCo-authored-by: Takafumi Saikawa <tscompor@gmail.com>","date":"2023-03-29T06:34:44Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"309bc0ecf19d6d958ac9ce3ba901f2bf96b5e1f2","message":"minor cleaning","date":"2023-04-03T13:22:09Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"e7300dcfb2d1d49ee7baf3bbc98948648244031b","message":"minor generalization","date":"2023-04-03T14:06:12Z"}]},{"author":"proux01","number":872,"diff_summary":[{"file":"classical/mathcomp_extra.v","status":"M","additions":21,"deletions":8}],"state":"merged","open_date":"2023-03-10T09:32:42Z","update_date":"2023-03-10T10:03:20Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"proux01","committer":"proux01","hash":"59d7138a93f1d12ceea92ef340a7892a0646a395","message":"Update backporting comment","date":"2023-03-10T09:25:53Z"}]},{"author":"zstone1","number":871,"diff_summary":[{"file":"theories/topology.v","status":"M","additions":653,"deletions":0}],"state":"open","open_date":"2023-03-08T23:34:27Z","update_date":"2023-03-27T16:01:48Z","discussion":[],"review_discussion":[],"tags":[{"tag":"TODO: HB port","description":"This PR should be ported to the HB branch as well. Remove this label when an issue or PR is created."}],"commits":[{"author":"zstone1","committer":"zstone1","hash":"a80306b130ce6a2d6484c7515eff954d628e0723","message":"covering uniformities","date":"2023-03-01T21:20:24Z"},{"author":"zstone1","committer":"zstone1","hash":"4a09fce8555d01c4ed0854e76e388f6ad1a089e0","message":"doing urysohn things","date":"2023-03-01T22:31:07Z"},{"author":"zstone1","committer":"zstone1","hash":"c14e61f08a460eb5a4cf2639ecc9628e11afd9f6","message":"uniformity subbase","date":"2023-03-05T04:45:02Z"},{"author":"zstone1","committer":"zstone1","hash":"3d9f7c281f58b6f06a84d7eb8d78791766d2b4f9","message":"figuring out cover","date":"2023-03-06T01:02:45Z"},{"author":"zstone1","committer":"zstone1","hash":"d9d5d2e322fc617caa4664c2fd4b208cd8d94340","message":"urysohn chains","date":"2023-03-06T05:19:16Z"},{"author":"zstone1","committer":"zstone1","hash":"789e227e0cfa60e501ec83662d2c474e3fd5800f","message":"star refinement first half","date":"2023-03-07T23:59:15Z"},{"author":"zstone1","committer":"zstone1","hash":"8d8b56bab552d06c81ea8d5fd1115b26dfd128d5","message":"star refinement two halves","date":"2023-03-08T03:23:35Z"},{"author":"zstone1","committer":"zstone1","hash":"553f2ddea6b65a7cb624a56859a2a349293e833f","message":"building uniform cover mixin","date":"2023-03-08T05:30:48Z"},{"author":"zstone1","committer":"zstone1","hash":"fa16f2b37be11dc7dd718342d356f4ac31cb3884","message":"A collapses","date":"2023-03-08T22:07:01Z"},{"author":"zstone1","committer":"zstone1","hash":"68c6a48be795e4843ad79795c5faef87418603a5","message":"cleaning up proofs","date":"2023-03-08T22:55:49Z"},{"author":"zstone1","committer":"zstone1","hash":"f283599f6316af5e18204d5139d2b50ed5cacf1b","message":"coarse topology","date":"2023-03-09T01:47:53Z"},{"author":"zstone1","committer":"zstone1","hash":"4e3ebff55966bc681eb9e0733f317dcb049cdf99","message":"strong normal","date":"2023-03-09T02:15:18Z"}]},{"author":"proux01","number":870,"diff_summary":[{"file":".github/workflows/nix-action-8.14.yml","status":"M","additions":35,"deletions":35},{"file":".github/workflows/nix-action-8.15.yml","status":"M","additions":35,"deletions":35},{"file":".github/workflows/nix-action-8.16.yml","status":"M","additions":35,"deletions":35},{"file":".github/workflows/nix-action-master.yml","status":"M","additions":35,"deletions":35},{"file":".nix/coq-nix-toolbox.nix","status":"M","additions":35,"deletions":35}],"state":"merged","open_date":"2023-03-06T10:06:41Z","update_date":"2023-03-06T10:21:57Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"proux01","committer":"proux01","hash":"0f64ffa31b9ce1a446d0c252a6593522af9eea6f","message":"[CI] Update Nix toolbox","date":"2023-03-06T10:17:27Z"}]},{"author":"proux01","number":869,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"A","additions":942,"deletions":0},{"file":"_CoqProject","status":"A","additions":942,"deletions":0},{"file":"theories/itv.v","status":"A","additions":942,"deletions":0}],"state":"merged","open_date":"2023-03-04T19:53:14Z","update_date":"2023-03-15T15:25:10Z","discussion":[{"author":"proux01","date":"2023-03-14T16:14:37Z","comment":"> Class `infer`, lemma `inferP`, class `unify`, `unify'`, instance `unify'P` already appear in `signed.v` which is Require Imported, so maybe they can be removed (maybe they were duplicated to make the file self-contained?).\r\n\r\nYes, since the hint and instances are `#[global]`, the `Require Import` is enough and they can be removed.\r\n\r\n> The identifiers `top_typ_subproof` and `top_typ` appear in both `signed.v` and `itv.v`, maybe they can be distinguished? (Similar comment for lemmas `bottom`, `gt0`, `le0F`, `lt0`, `ge0F`, `ge0`, `lt0F`, `le0`, `gt0F`.)\r\n\r\nIf we may import both (which seems likely), they indeed should be distinguished, maybe just prefix them with `itv_`?"},{"author":"affeldt-aist","date":"2023-03-15T13:28:24Z","comment":"We could maybe issue about these two comments when merging:\r\n> The multiplication only works for realDomainType (and not for numDomainType), for relatively bad reasons.\r\n> The proof of the multiplication could probably be improved using wlog.\r\nAnd maybe also issue about the future removal of the trailing tests."}],"review_discussion":[],"tags":[{"tag":"enhancement :sparkles:","description":"This issue/PR is about adding new features enhancing the library"}],"commits":[{"author":"proux01","committer":"proux01","hash":"c8cbbd6215699ce490560e4e64fe942cce1458a1","message":"Add itv.v\n\nTaking inspiration on signed.v, replacing sign by intervals.","date":"2023-03-06T10:27:54Z"},{"author":"proux01","committer":"proux01","hash":"536bf766303c70cb8136ac01aea94f1639365e5d","message":"Add interval multiplication","date":"2023-03-06T10:27:54Z"},{"author":"proux01","committer":"proux01","hash":"181e3077ea3ad0fa44332ff0136c8ea7c13692ac","message":"Add hints to automatically solve _ <= 1 goals","date":"2023-03-06T10:27:54Z"},{"author":"affeldt-aist","committer":"proux01","hash":"fe36f5a42c3e56e081536b5b6f1e887054d68ce0","message":"Test to see if usable as a replacement for prob","date":"2023-03-06T10:27:54Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"1be7521e800574b0b2ea0b51cf912e3b8e2f8e0f","message":"use notation from mathcomp_extra.v","date":"2023-03-13T17:05:25Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"df67db51e2394236a0a3a8876b881c62f7d4c7df","message":"changelog and rm redundant code","date":"2023-03-14T15:54:22Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"c02894e6d69257b945c5b51ea0a2abe37b0595e9","message":"prefix duplicated identifiers","date":"2023-03-15T02:17:23Z"}]},{"author":"t6s","number":863,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":11,"deletions":4},{"file":"classical/mathcomp_extra.v","status":"M","additions":11,"deletions":4}],"state":"merged","open_date":"2023-03-01T17:03:48Z","update_date":"2023-03-15T15:21:16Z","discussion":[{"author":"t6s","date":"2023-03-02T09:57:50Z","comment":"squashed and rebased"},{"author":"thery","date":"2023-03-02T10:07:54Z","comment":"are these theorems not already backported in mathcomp?"},{"author":"t6s","date":"2023-03-02T10:16:46Z","comment":"> are these theorems not already backported in mathcomp?\r\n\r\nIndeed.. https://github.com/math-comp/math-comp/blob/568633c91a3d3ba4b5f012b677b90707ac24b056/mathcomp/ssreflect/order.v#L4448"},{"author":"thery","date":"2023-03-02T10:31:24Z","comment":"so there should be a PR there too\r\n"},{"author":"t6s","date":"2023-03-02T11:44:59Z","comment":"> so there should be a PR there too\r\n\r\nYes: https://github.com/math-comp/math-comp/pull/974"}],"review_discussion":[],"tags":[{"tag":"\"bug\" :bug:","description":"This issue (resp. PR) describes (resp. fixes) a \"bug\""}],"commits":[{"author":"t6s","committer":"affeldt-aist","hash":"53908759eec35c6c27d84b2c51ef2e568dfaf44c","message":"fix and strengthen eq_bigmax and eq_bigmin","date":"2023-03-15T14:59:00Z"}]},{"author":"affeldt-aist","number":859,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":14,"deletions":0},{"file":"theories/constructive_ereal.v","status":"M","additions":14,"deletions":0}],"state":"merged","open_date":"2023-02-27T13:07:03Z","update_date":"2023-02-28T08:23:32Z","discussion":[],"review_discussion":[{"author":"proux01","file":"theories/constructive_ereal.v","date":"2023-02-27T13:27:45Z","comment":"I would expect `leNye` and `leey` (and then this) to be trivially generalizable to `ERealOrder_numDomainType`\r\nOtherwise lookgs great"},{"author":"proux01","file":"theories/constructive_ereal.v","date":"2023-02-28T08:23:19Z","comment":"Nevermind, I was wrong, so let's merge."}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"6324d3397b41c0fa8c9e88708561a05ce208f88b","message":"\\bar R canonicals for tblattice\n\nCo-authored-by: Quentin Vermande <quentin.vermande@ens.fr>","date":"2023-02-27T13:04:31Z"}]},{"author":"affeldt-aist","number":858,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":65,"deletions":52},{"file":"theories/lebesgue_integral.v","status":"M","additions":65,"deletions":52},{"file":"theories/lebesgue_measure.v","status":"M","additions":65,"deletions":52}],"state":"merged","open_date":"2023-02-25T10:40:57Z","update_date":"2023-03-10T08:22:24Z","discussion":[],"review_discussion":[{"author":"proux01","file":"CHANGELOG_UNRELEASED.md","date":"2023-03-10T07:37:05Z","comment":"```suggestion\r\n  + `eset1_ninfty` -> `eset1Ny`\r\n```"}],"tags":[{"tag":"enhancement :sparkles:","description":"This issue/PR is about adding new features enhancing the library"}],"commits":[{"author":"affeldt-aist","committer":"proux01","hash":"251817b88461ad97655c7ccfc08bf4aaf71b98cd","message":"generalize emeasurable_itv_* lemmas\n\n- a few pinfty/ninfty -> y/Ny renamings","date":"2023-03-10T07:41:11Z"}]},{"author":"zstone1","number":857,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":121,"deletions":3},{"file":"theories/topology.v","status":"M","additions":121,"deletions":3}],"state":"open","open_date":"2023-02-24T16:59:10Z","update_date":"2023-03-27T16:01:42Z","discussion":[],"review_discussion":[],"tags":[{"tag":"TODO: HB port","description":"This PR should be ported to the HB branch as well. Remove this label when an issue or PR is created."}],"commits":[{"author":"zstone1","committer":"zstone1","hash":"215ab5a62e83141623347722565d1dbd92a3fd42","message":"uniform spaces are derived from gauges","date":"2023-03-22T19:59:17Z"},{"author":"zstone1","committer":"zstone1","hash":"f1a8852dfbf1f522978deb5e84aca6dbec7e9ae7","message":"gauges for uniform spaces","date":"2023-03-22T19:59:17Z"},{"author":"zstone1","committer":"zstone1","hash":"00e56b4d637d4b31f184a7896763c920417bac0f","message":"updating changelog","date":"2023-03-22T19:59:17Z"},{"author":"zstone1","committer":"zstone1","hash":"4c721ffb5f3a99e70d39d9a8d954d11f79a474df","message":"rebasing","date":"2023-03-22T20:00:29Z"}]},{"author":"affeldt-aist","number":855,"diff_summary":[{"file":"CHANGELOG.md","status":"M","additions":170,"deletions":193},{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":170,"deletions":193},{"file":"INSTALL.md","status":"M","additions":170,"deletions":193}],"state":"merged","open_date":"2023-02-24T08:03:24Z","update_date":"2023-02-24T08:36:48Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"6a4989aa0dd8010ead591b3fbb50d2ab0bd2209b","message":"changelog fo version 0.6.1","date":"2023-02-24T08:02:40Z"}]},{"author":"affeldt-aist","number":854,"diff_summary":[{"file":"theories/ereal.v","status":"M","additions":2,"deletions":1}],"state":"merged","open_date":"2023-02-23T12:50:43Z","update_date":"2023-02-23T13:24:57Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"4aa371a9fa0b9dba990444ef0b793f96d7b6ae82","message":"fixes #853","date":"2023-02-23T12:50:02Z"}]},{"author":"affeldt-aist","number":852,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":57,"deletions":56},{"file":"theories/lebesgue_integral.v","status":"M","additions":57,"deletions":56},{"file":"theories/measure.v","status":"M","additions":57,"deletions":56},{"file":"theories/sequences.v","status":"M","additions":57,"deletions":56}],"state":"merged","open_date":"2023-02-22T14:53:06Z","update_date":"2023-02-23T13:46:15Z","discussion":[],"review_discussion":[{"author":"proux01","file":"theories/sequences.v","date":"2023-02-23T13:45:49Z","comment":"In mathcomp, this is sometimes indented as:\r\n```suggestion\r\nLemma eq_eseriesr (R : realFieldType) (f g : (\\bar R)^nat) (P : pred nat) :\r\n    (forall i, P i -> f i = g i) ->\r\n  \\sum_(i <oo | P i) f i = \\sum_(i <oo | P i) g i.\r\n```"}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"af6d6aeefd1636525465c5e060722db8b7ea3bdc","message":"fixes #851","date":"2023-02-22T14:51:57Z"}]},{"author":"zstone1","number":850,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":39,"deletions":3},{"file":"theories/topology.v","status":"M","additions":39,"deletions":3}],"state":"merged","open_date":"2023-02-17T05:34:19Z","update_date":"2023-02-22T19:15:00Z","discussion":[{"author":"zstone1","date":"2023-02-22T19:14:52Z","comment":"> \r\n\r\nSounds good, that hypo doesn't need a name. "}],"review_discussion":[{"author":"affeldt-aist","file":"theories/topology.v","date":"2023-02-20T14:41:59Z","comment":"```suggestion\r\n  by move=> A B [_ AC] FB /subset_trans/(_ AC).\r\n```"},{"author":"affeldt-aist","file":"theories/topology.v","date":"2023-02-20T14:42:53Z","comment":"```suggestion\r\nProof. by rewrite eqEsubset; exact: compact_near_coveringP. Qed.\r\n```"},{"author":"affeldt-aist","file":"theories/topology.v","date":"2023-02-20T14:52:01Z","comment":"```suggestion\r\nby move=> t [Vt Wt]; apply: contrapT => Ut; exact: (VUW t).\r\n```"},{"author":"affeldt-aist","file":"theories/topology.v","date":"2023-02-20T15:27:21Z","comment":"This is where `compact_near_coveringE` is used. Wouldn't\r\n```coq\r\nLemma blah A : compact A <-> near_covering A.\r\n```\r\nbe more useful here? We can `/blah` at line 3045, line 3048 is not need anymore, and we do not need to name the fact `compact (V \\ U)`. But maybe there is some combinator to from `compact_near_coveringP` to `blah` that I miss..."},{"author":"zstone1","file":"theories/topology.v","date":"2023-02-20T21:03:33Z","comment":"I think it's cleaner to just change `compact_near_coveringP` to be `compact A <-> near_covering A`. It seems a bit more idiomatic. I've made the updatee with that change. "}],"tags":[],"commits":[{"author":"zstone1","committer":"zstone1","hash":"7640aa30b4d9db58371f76005d9c344011ad12c2","message":"cluster1 proof","date":"2023-02-17T05:10:17Z"},{"author":"zstone1","committer":"zstone1","hash":"2f4c8cd9de5a4e8c531443064c215a710b251612","message":"updating changelog","date":"2023-02-17T05:11:22Z"},{"author":"zstone1","committer":"web-flow","hash":"af6787a06e3bc4ec220a73ebd5d4ae723c2c81bf","message":"Update theories/topology.v\n\nCo-authored-by: affeldt-aist <33154536+affeldt-aist@users.noreply.github.com>","date":"2023-02-20T20:57:18Z"},{"author":"zstone1","committer":"web-flow","hash":"b2a9ee342d576aba96ae3e16fb1cbb05b5311ab5","message":"Update theories/topology.v\n\nCo-authored-by: affeldt-aist <33154536+affeldt-aist@users.noreply.github.com>","date":"2023-02-20T20:57:48Z"},{"author":"zstone1","committer":"zstone1","hash":"16c070cebc827cf146b8b5e458a49f48628f8c65","message":"change to signature of compact_near_coveringP","date":"2023-02-20T21:02:06Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"7e8d3dae112e1e0fe39d8e00ae9a8b8ad5a7a8ae","message":"no need to name intermediate hypo","date":"2023-02-22T14:56:36Z"}]},{"author":"affeldt-aist","number":849,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"A","additions":2327,"deletions":105},{"file":"_CoqProject","status":"A","additions":2327,"deletions":105},{"file":"theories/charge.v","status":"A","additions":2327,"deletions":105},{"file":"theories/lebesgue_measure.v","status":"A","additions":2327,"deletions":105},{"file":"theories/measure.v","status":"A","additions":2327,"deletions":105},{"file":"theories/radon_nikodym.v","status":"A","additions":2327,"deletions":105}],"state":"closed","open_date":"2023-02-17T04:59:30Z","update_date":"2023-02-17T05:08:12Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"da54b6759f92919d09eabc90ee1bb35097eeda1b","message":"add a type for finite measures","date":"2023-02-09T06:16:36Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"f4b65719817d708f038b0ca06fdb1d13e7054569","message":"s-finite measures from branch kernels\n\n- inserted so as to form of hierarchy","date":"2023-02-09T06:16:36Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"ba8a4beac8fd3b540d9c2602ed8f51f4a2f46c4a","message":"add subprobabilities","date":"2023-02-12T14:34:47Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"50cf655fc57c0e6e4a57178792dbf3630c56d64a","message":"dirac instance of probability","date":"2023-02-12T14:53:37Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"23d53962d094feed5721e1ed7edf21f971014a13","message":"changelog fix","date":"2023-02-13T00:29:31Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"7fd5de951d5ed4dca02754347d2f9d1353b9fcb6","message":"generalize the interface of finite measures","date":"2023-02-15T03:42:36Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"c5dfac11dae4065764bf895264837feee42c0174","message":"tentative proof of Hahn decomposition theorem\n\n- introduces signed measures\n\nCo-authored-by: IshiguroYoshihiro","date":"2023-02-15T06:34:37Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"ed1552905aa7decee3b5bc464918b1eeabaa3f86","message":"upd wrt master, minor simplications","date":"2023-02-15T06:34:40Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"fe48f3c35a42891d28a7cca03d22cf27567e7715","message":"rename signed measure to charge","date":"2023-02-15T06:34:40Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"e8368a1abf2e2c35b79454f8a420da6b471841c6","message":"czero, cscale","date":"2023-02-15T06:34:40Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"3f94ae7d326acf402a21ec89c629452650119b6e","message":"rebase wrt finite_measure","date":"2023-02-15T06:34:40Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"ce4191c0da521490f9de62291631342c632ae482","message":"fix","date":"2023-02-15T10:33:13Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"37d401f5735559db70818a5d59d9d9f058f948fd","message":"tentative proof of Radon-Nikodym\n\nCo-authored-by: IshiguroYoshihiro","date":"2023-02-17T04:58:01Z"}]},{"author":"affeldt-aist","number":848,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":11,"deletions":10},{"file":"theories/lebesgue_integral.v","status":"M","additions":11,"deletions":10},{"file":"theories/measure.v","status":"M","additions":11,"deletions":10}],"state":"merged","open_date":"2023-02-17T04:34:02Z","update_date":"2023-02-18T10:32:38Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"d3ff4cc454ab360f0861833cc351d7b3e35ce40b","message":"minor generalizations\n\n- fixes #846\n- fixes #845","date":"2023-02-17T04:32:05Z"}]},{"author":"affeldt-aist","number":847,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"A","additions":3622,"deletions":236},{"file":"_CoqProject","status":"A","additions":3622,"deletions":236},{"file":"theories/charge.v","status":"A","additions":3622,"deletions":236},{"file":"theories/lebesgue_integral.v","status":"A","additions":3622,"deletions":236},{"file":"theories/lebesgue_measure.v","status":"A","additions":3622,"deletions":236},{"file":"theories/measure.v","status":"A","additions":3622,"deletions":236},{"file":"theories/radon_nikodym.v","status":"A","additions":3622,"deletions":236},{"file":"theories/smeasure.v","status":"A","additions":3622,"deletions":236}],"state":"closed","open_date":"2023-02-17T02:26:17Z","update_date":"2023-02-17T04:35:11Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"da54b6759f92919d09eabc90ee1bb35097eeda1b","message":"add a type for finite measures","date":"2023-02-09T06:16:36Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"f4b65719817d708f038b0ca06fdb1d13e7054569","message":"s-finite measures from branch kernels\n\n- inserted so as to form of hierarchy","date":"2023-02-09T06:16:36Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"ba8a4beac8fd3b540d9c2602ed8f51f4a2f46c4a","message":"add subprobabilities","date":"2023-02-12T14:34:47Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"50cf655fc57c0e6e4a57178792dbf3630c56d64a","message":"dirac instance of probability","date":"2023-02-12T14:53:37Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"23d53962d094feed5721e1ed7edf21f971014a13","message":"changelog fix","date":"2023-02-13T00:29:31Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"7fd5de951d5ed4dca02754347d2f9d1353b9fcb6","message":"generalize the interface of finite measures","date":"2023-02-15T03:42:36Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"c5dfac11dae4065764bf895264837feee42c0174","message":"tentative proof of Hahn decomposition theorem\n\n- introduces signed measures\n\nCo-authored-by: IshiguroYoshihiro","date":"2023-02-15T06:34:37Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"ed1552905aa7decee3b5bc464918b1eeabaa3f86","message":"upd wrt master, minor simplications","date":"2023-02-15T06:34:40Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"fe48f3c35a42891d28a7cca03d22cf27567e7715","message":"rename signed measure to charge","date":"2023-02-15T06:34:40Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"e8368a1abf2e2c35b79454f8a420da6b471841c6","message":"czero, cscale","date":"2023-02-15T06:34:40Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"3f94ae7d326acf402a21ec89c629452650119b6e","message":"rebase wrt finite_measure","date":"2023-02-15T06:34:40Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"ce4191c0da521490f9de62291631342c632ae482","message":"fix","date":"2023-02-15T10:33:13Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"6c5d6d2239e6590a7bbe3fffad8459621f6d5061","message":"tentative proof of Radon-Nikodym\n\nCo-authored-by: IshiguroYoshihiro","date":"2023-02-15T10:33:51Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"3c703f1310d5d611b4278cebb936cef5a95b9b65","message":"wip","date":"2023-02-15T10:33:51Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"2bfde9913ba1ac3bb0c22db16da7c1606efcd345","message":"minor cleaning","date":"2023-02-17T02:23:40Z"}]},{"author":"affeldt-aist","number":844,"diff_summary":[{"file":".github/workflows/docker-action.yml","status":"M","additions":5,"deletions":2},{"file":"coq-mathcomp-analysis.opam","status":"M","additions":5,"deletions":2},{"file":"coq-mathcomp-classical.opam","status":"M","additions":5,"deletions":2}],"state":"merged","open_date":"2023-02-11T10:24:06Z","update_date":"2023-02-13T09:58:11Z","discussion":[{"author":"proux01","date":"2023-02-11T11:09:48Z","comment":"@affeldt-aist this should update the CI (`.nix/config.nix` and `.github/workflows/docker-action.yml`, but I'm afraid that won't work until we get HB for 8.17).\r\n\r\nMaybe we could do this in two steps:\r\n* first support MC 1.16 on Coq <= 8.16\r\n* then support Coq 8.17"},{"author":"affeldt-aist","date":"2023-02-11T13:06:05Z","comment":"You are right. Let us make another release for Coq 8.17."},{"author":"affeldt-aist","date":"2023-02-11T13:08:54Z","comment":"We should maybe keep somewhere the information on how to bump the version:\r\n1. update opam files for `classical` and `analysis`\r\n2. update `.nix/config.nix`\r\n3. update `.github/workflows/docker-action.yml`"},{"author":"proux01","date":"2023-02-11T13:10:52Z","comment":"Maybe (I often forget point 1. ;-) )"},{"author":"affeldt-aist","date":"2023-02-12T09:36:11Z","comment":"I added a small wiki page https://github.com/math-comp/analysis/wiki/How-to-bump"},{"author":"proux01","date":"2023-02-13T09:57:43Z","comment":"CI green, let's merge"}],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"93cbc25e47dc416073548ef183343c19a5f28561","message":"bump coq and mc versions\n\n- fixes #842","date":"2023-02-11T10:20:59Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"8c71fea2cc41d7da2b1a1d28744da483f6920ccb","message":"coq < 8.17 and workflows","date":"2023-02-11T13:05:16Z"}]},{"author":"affeldt-aist","number":843,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":24,"deletions":21},{"file":"classical/functions.v","status":"M","additions":24,"deletions":21},{"file":"theories/esum.v","status":"M","additions":24,"deletions":21},{"file":"theories/lebesgue_integral.v","status":"M","additions":24,"deletions":21},{"file":"theories/topology.v","status":"M","additions":24,"deletions":21}],"state":"merged","open_date":"2023-02-11T10:02:08Z","update_date":"2023-02-24T07:14:50Z","discussion":[{"author":"affeldt-aist","date":"2023-02-23T06:46:12Z","comment":"I'll maybe merge this one by the end of the day to release 0.6.1."}],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"113afa639064eb770e522ac0c9f62af60121cea2","message":"fixes\n\n- fixes #828\n- fixes #835","date":"2023-02-24T05:07:52Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"f53318512d6af8c5d2388f22724a974647faf28c","message":"fixes #838","date":"2023-02-24T05:07:54Z"}]},{"author":"zstone1","number":841,"diff_summary":[{"file":"theories/topology.v","status":"M","additions":3,"deletions":2}],"state":"merged","open_date":"2023-02-07T23:21:01Z","update_date":"2023-03-27T16:03:00Z","discussion":[],"review_discussion":[],"tags":[{"tag":"\"bug\" :bug:","description":"This issue (resp. PR) describes (resp. fixes) a \"bug\""},{"tag":"TODO: HB port","description":"This PR should be ported to the HB branch as well. Remove this label when an issue or PR is created."}],"commits":[{"author":"zstone1","committer":"zstone1","hash":"21529900f6bfebfc922ef41422aba7f6c9ace76d","message":"fixing quotient mixins","date":"2023-02-07T23:17:21Z"}]},{"author":"zstone1","number":840,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":73,"deletions":0},{"file":"theories/topology.v","status":"M","additions":73,"deletions":0}],"state":"merged","open_date":"2023-02-07T22:51:29Z","update_date":"2023-02-13T04:29:26Z","discussion":[{"author":"affeldt-aist","date":"2023-02-11T10:29:48Z","comment":"The only CI error is elpi compilation with coq-dev so maybe it is not relevant and this PR can be merged."}],"review_discussion":[],"tags":[],"commits":[{"author":"zstone1","committer":"zstone1","hash":"be3a9caec1ffdff1f6179a4fff2569e7747dfaee","message":"simplifying clopen proofs","date":"2023-02-07T19:24:52Z"},{"author":"zstone1","committer":"zstone1","hash":"f1c58631d535900a5b8b1be6906593fcdc3b5a08","message":"clopen separations","date":"2023-02-07T19:24:52Z"},{"author":"zstone1","committer":"zstone1","hash":"375e8eb50543ed7e96551f26c4e978fb03a9cfe6","message":"adding docs","date":"2023-02-07T19:27:02Z"},{"author":"zstone1","committer":"zstone1","hash":"b9c0ea7a598228d9f8f82fb4872e8ef1ae25be65","message":"linting.","date":"2023-02-07T20:54:42Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"8061e0221eded7ef926d1b9be5eb6ca0f3314b54","message":"nitpicks, trailing spaces, lint","date":"2023-02-11T09:28:19Z"}]},{"author":"affeldt-aist","number":837,"diff_summary":[{"file":"README.md","status":"M","additions":4,"deletions":1}],"state":"merged","open_date":"2023-02-07T00:00:00Z","update_date":"2023-02-07T00:01:11Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"bd0df19f17b4ca4fa10c5b43de868890c59b63ca","message":"add other work using mca","date":"2023-02-06T23:58:57Z"}]},{"author":"affeldt-aist","number":836,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":398,"deletions":118},{"file":"theories/lebesgue_integral.v","status":"M","additions":398,"deletions":118},{"file":"theories/lebesgue_measure.v","status":"M","additions":398,"deletions":118},{"file":"theories/measure.v","status":"M","additions":398,"deletions":118}],"state":"merged","open_date":"2023-02-06T01:21:28Z","update_date":"2023-02-24T07:44:52Z","discussion":[{"author":"affeldt-aist","date":"2023-02-06T11:43:58Z","comment":"> it is also required to rebase PR #749\r\n\r\nit looks like rebasing will require a bit more thinking\r\n\r\n"},{"author":"hoheinzollern","date":"2023-02-09T10:33:37Z","comment":"This PR is interesting for PR #790, since we need finite measures to prove $L_2 \\subset L_1$, which only holds in the case the measure is finite, like with probabilities. See for example [here](https://ocw.mit.edu/courses/18-125-measure-and-integration-fall-2003/6f21af6c40de1eccd70349bd3a3b0095_18125_lec17.pdf)."},{"author":"affeldt-aist","date":"2023-02-21T00:20:47Z","comment":"Is it ok to keep both definitions `finite_measure` and `fin_num_fun` or should I try to get rid of the former for the latter?"},{"author":"affeldt-aist","date":"2023-02-22T08:01:30Z","comment":"> Is it ok to keep both definitions `finite_measure` and `fin_num_fun` or should I try to get rid of the former for the latter?\r\n\r\nIt seems clearer to get rid of `finite_measure` and keep `fin_num_fun` only, see the las commit https://github.com/math-comp/analysis/pull/836/commits/af15a0c7c0e1f1db037afee1496a318b1fc398b7\r\n\r\nNB: pr #749 , pr #777 , pr #849 rebase fine so that maybe an ok change"},{"author":"affeldt-aist","date":"2023-02-23T06:42:32Z","comment":"I have applied a few more comments that I received offline except one requesting a set parameter to `fin_num_fun`. Is it ok if I issue about it and take care of it later?"},{"author":"zstone1","date":"2023-02-23T16:57:23Z","comment":"If you're asking me, I think that's fine. It doesn't sound like a big burden to do later, and I'd rather get you unblocked now. "},{"author":"CohenCyril","date":"2023-02-23T17:16:45Z","comment":"> If you're asking me, I think that's fine. It doesn't sound like a big burden to do later, and I'd rather get you unblocked now.\r\n\r\nI agree"}],"review_discussion":[{"author":"zstone1","file":"theories/measure.v","date":"2023-02-17T16:07:09Z","comment":"I'm surprised to see the `SFiniteMeasure` mixin instead of just `isMeasure` mixin. I see you use the `Measure_isSigmaFinite` to build it instead. Is there a particular reason to take this approach? "},{"author":"zstone1","file":"theories/measure.v","date":"2023-02-17T16:09:54Z","comment":"Same question as above: Why not use the `isMeasure` mixin? "},{"author":"zstone1","file":"theories/measure.v","date":"2023-02-17T16:16:29Z","comment":"Taking this `A : set T` is slightly uncomfortable for all of the substructuring reasons we've discussed before. \r\n\r\nWhile building better support for substructures is something we're working on elsewhere. For now it looks like we only use `(A := setT)` anyway. Is it better to just eliminate `A` as an argument? "},{"author":"affeldt-aist","file":"theories/measure.v","date":"2023-02-20T05:07:46Z","comment":"We took this approach primarily because this is the one that succeeded for PR #749 where the hierarchy is similar (including the apparent circularity between the definitions of s-finite and finite). Still, since sigma-finite measures are s-finite measures I would have thought that inheriting directly from them is in fact the least surprising approach. Using `isMeasure` instead of `SFiniteMeasure` would mean that one would have to do something more to guarantee that sigma-finite measures are recognized as s-finite measures. As you noticed, the \"true\" definition of sigma-finite measure is rather to be looked for in the factory `Measure_isSigmaFinite`. Something similar happens for, say, algebra of sets: the mixin `AlgebraOfSets_from_RingOfSets` that defines them is one possible definition (it adds the minimum to extend a ring of sets) but the direct definition that is more likely to appear in a textbook corresponds to the factory `isAlgebraOfSets`."},{"author":"affeldt-aist","file":"theories/measure.v","date":"2023-02-20T05:48:10Z","comment":"This is indeed a generality that we do not use, see f4b65719817d708f038b0ca06fdb1d13e7054569 . It looks fine to me to eliminate it. @CohenCyril ?"},{"author":"affeldt-aist","file":"theories/measure.v","date":"2023-02-20T05:52:33Z","comment":"My answer would be the same as above. Maybe I can also refer to Sect. 4 of https://hal.inria.fr/hal-03917948/document that explains the hierarchy in the case of kernels (which is a generalization)."}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"342efc38fa4a219e73096660b73b32fd8749b982","message":"add a type for finite measures","date":"2023-02-24T07:21:53Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"fd2e21d17cf7977a5d2679e364dddd4ca2b216ab","message":"s-finite measures from branch kernels\n\n- inserted so as to form of hierarchy","date":"2023-02-24T07:21:53Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"24fc04d8c3f698b0fee20b9e43438a9e0e92179c","message":"add subprobabilities","date":"2023-02-24T07:21:53Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"988556f7bc179cf9b48c1e29c27e50f2a9846ae0","message":"dirac instance of probability","date":"2023-02-24T07:21:53Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"4249f8a70dffa0c55a03fd9d9f6715dee091aac5","message":"changelog fix","date":"2023-02-24T07:21:53Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"e6c3bab69bdc3185c89e57a23b98ddebc57dccff","message":"generalize the interface of finite measures","date":"2023-02-24T07:21:53Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"3c49bed54278e431136313edb362bc30c05ddc70","message":"specialize sigma_finite","date":"2023-02-24T07:21:53Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"8051dc39fa970f3712f3fa2bf7ed74d9453bae2d","message":"fix changelog","date":"2023-02-24T07:21:53Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"2e37ebc742fbfa72178c24ecfddee8e73dd697cd","message":"rm finite_measure","date":"2023-02-24T07:21:53Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"58345375ca8a7aeffdf8f23d9d0fab1fb4ad5111","message":"fix changelog","date":"2023-02-24T07:21:53Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"76ccc05a36065d6da588771c999932b07702a358","message":"restore the parameter of sigma_finite","date":"2023-02-24T07:21:53Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"8f43a831f956e44404f9e3ea6259622511a5441b","message":"renaming\n\n- split sfinite_measure in 2\n- rename sfinite_measure_def","date":"2023-02-24T07:21:53Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"a9b7c16820278fa5f023af89707aff0e5a92848c","message":"minor fix","date":"2023-02-24T07:21:53Z"}]},{"author":"zstone1","number":834,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"A","additions":821,"deletions":0},{"file":"theories/cantor.v","status":"A","additions":821,"deletions":0},{"file":"theories/topology.v","status":"A","additions":821,"deletions":0}],"state":"open","open_date":"2023-02-03T04:15:08Z","update_date":"2023-03-27T16:03:10Z","discussion":[],"review_discussion":[],"tags":[{"tag":"TODO: HB port","description":"This PR should be ported to the HB branch as well. Remove this label when an issue or PR is created."}],"commits":[{"author":"zstone1","committer":"zstone1","hash":"2725d693eeda555efce35c0b47ca41ba2e0ec3fc","message":"proving sups preserve countable ent\n\nproof going through\n\nunused proofs\n\nlinting\n\nmetric implies countable uniformity\n\nfixing changelog\n\nlinting\n\nproving sups preserve countable ent\n\nproof going through\n\nunused proofs\n\nlinting\n\nmetric implies countable uniformity\n\nlinting\n\nmetric for products\n\nlinting\n\nfixing docs\n\nmoving cantor stuff to topology\n\ndiscrete metric\n\nbuilding clopen set\n\ntrying for xneqy\n\ntrying to build inside out\n\ncluster set1\n\nproving compact countable basis\n\nlots of helpful lemmas\n\nsimplify proof with near_covering\n\nproof cleanup\n\nadding perfect stuff\n\nbuildling tree for homeomorphism\n\ncantor_like space homeomorphism done\n\nstarting cleanup\n\ndeleting old stuff\n\nworking through finitely branching trees\n\nproving sups preserve countable ent\n\nproof going through\n\nunused proofs\n\nlinting\n\nmetric implies countable uniformity\n\nfixing changelog\n\nlinting\n\nproving sups preserve countable ent\n\nproof going through\n\nunused proofs\n\nlinting\n\nmetric implies countable uniformity\n\nlinting\n\nmetric for products\n\nlinting\n\nfixing docs\n\nlots of helpful lemmas\n\nsimplify proof with near_covering\n\nproof cleanup\n\nadding perfect stuff\n\nbuildling tree for homeomorphism\n\ncantor_like space homeomorphism done\n\nstarting cleanup\n\nworking through finitely branching trees\n\nmiddle thirds\n\nrefining tree\n\nindexed refinement of trees\n\ntrying to define tree levels\n\nbranch sets\n\ncauchy branches\n\nneed finite upper bounds\n\nfixing target\n\ntarget now works correctly\n\nsurjectivity done\n\nworking on prefixes\n\njust tree prefix remaining\n\nalexandroff hausdorff is done (but terrible)\n\nwhitespace","date":"2023-03-22T19:36:45Z"},{"author":"zstone1","committer":"zstone1","hash":"bb06ba1b692020e427f3de743af1ff88cae483c0","message":"resolving merge stuff","date":"2023-03-22T19:36:45Z"},{"author":"zstone1","committer":"zstone1","hash":"d3fb7d5b419b752fd0e713114ea00a17d2315e49","message":"minor cleanups","date":"2023-03-22T19:36:45Z"},{"author":"zstone1","committer":"zstone1","hash":"8228ccf7b9152a46dd1f39e72482536414f11fc2","message":"unneeded lemma","date":"2023-03-22T19:36:45Z"},{"author":"zstone1","committer":"zstone1","hash":"d65a6a518fb012ef36dfe9f24a06ff3732dd79c9","message":"fixing merge","date":"2023-03-22T19:36:45Z"},{"author":"zstone1","committer":"zstone1","hash":"561b250a53a3b5feb56b43803a993095c09c2056","message":"trying generic tree stuff","date":"2023-03-22T19:36:45Z"},{"author":"zstone1","committer":"zstone1","hash":"cf16edfdc4bb429c9760d076986abaeb8d3c18ad","message":"generalizing tree maps","date":"2023-03-22T19:36:45Z"},{"author":"zstone1","committer":"zstone1","hash":"6b94004a3fbc51f4aec7b978878e95fe42571fb7","message":"much better factoring","date":"2023-03-22T19:36:45Z"},{"author":"zstone1","committer":"zstone1","hash":"b5c765a3c4539d7911bb0b2bdefe6e94f7122af0","message":"making things local","date":"2023-03-22T19:36:45Z"},{"author":"zstone1","committer":"zstone1","hash":"67e62b0564b73445ef36dc477ba9a704763ed508","message":"changelog","date":"2023-03-22T19:36:45Z"},{"author":"zstone1","committer":"zstone1","hash":"62027c74c720490fa1bd77a3d2c0078a8abdd596","message":"rebase changelog","date":"2023-03-22T19:37:39Z"},{"author":"zstone1","committer":"zstone1","hash":"7514a81277b6f0bd58f0eff851b5f8a454358421","message":"fixing build","date":"2023-03-22T19:57:41Z"}]},{"author":"affeldt-aist","number":833,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":80,"deletions":22},{"file":"theories/altreals/distr.v","status":"M","additions":80,"deletions":22},{"file":"theories/altreals/realsum.v","status":"M","additions":80,"deletions":22}],"state":"open","open_date":"2023-02-02T08:26:51Z","update_date":"2023-03-27T16:03:56Z","discussion":[],"review_discussion":[],"tags":[{"tag":"documentation :memo:","description":"This issue/PR is about documentation of the library / repository"},{"tag":"TODO: HB port","description":"This PR should be ported to the HB branch as well. Remove this label when an issue or PR is created."}],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"cf6f47a9536d04d9c76e2114ef3af45639cfd177","message":"clarify status of lemmas in altreals","date":"2023-02-02T08:24:08Z"}]},{"author":"affeldt-aist","number":832,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":34,"deletions":27},{"file":"classical/classical_sets.v","status":"M","additions":34,"deletions":27},{"file":"theories/measure.v","status":"M","additions":34,"deletions":27},{"file":"theories/reals.v","status":"M","additions":34,"deletions":27},{"file":"theories/topology.v","status":"M","additions":34,"deletions":27}],"state":"merged","open_date":"2023-01-31T14:00:54Z","update_date":"2023-02-07T02:41:04Z","discussion":[{"author":"affeldt-aist","date":"2023-01-31T14:15:38Z","comment":"Quote from issue #658:\r\n> The name suggests that it is pinpointing a (finite) subcover of some cover, but there is no such original cover in the definition.\r\n\r\nIndeed.\r\nAt first I thought of renaming to `finite_subset_cover` so that it sounds more like we take the subset of some set but this might look like it points to the definition of `cover` in `classical_sets.v` that we do not use here.\r\nHence this minima change.\r\n\r\n\r\n"},{"author":"affeldt-aist","date":"2023-01-31T14:38:24Z","comment":"Or maybe we can try to use `cover`: https://github.com/math-comp/analysis/pull/832/commits/62440d95726d44b43016b334fdb84ce7520b7e88\r\n\r\nAnd then the `finite_subset_cover` makes more sense."},{"author":"affeldt-aist","date":"2023-02-01T14:36:36Z","comment":"@zstone1 do you think that this is a reasonable change?"},{"author":"affeldt-aist","date":"2023-02-05T23:59:02Z","comment":"@t6s do you think this PR fixes your issue?"}],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"6eda3194865c26fb1e3f4a4311e0e93576ae0120","message":"rename and doc finSubCover\n\n- use cover in finSubCover\n- use [set: ] instead of @setT\n- use shortcut notation for set comprehension","date":"2023-02-05T23:57:41Z"}]},{"author":"affeldt-aist","number":831,"diff_summary":[{"file":"theories/constructive_ereal.v","status":"M","additions":1,"deletions":1}],"state":"merged","open_date":"2023-01-27T14:00:17Z","update_date":"2023-01-27T14:00:31Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"20df28b9a46ffa2b9b69f1b00ff4e244d89c99a8","message":"minor fix","date":"2023-01-27T13:59:32Z"}]},{"author":"affeldt-aist","number":830,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":19,"deletions":1},{"file":"classical/cardinality.v","status":"M","additions":19,"deletions":1},{"file":"classical/functions.v","status":"M","additions":19,"deletions":1}],"state":"merged","open_date":"2023-01-26T18:23:37Z","update_date":"2023-01-27T15:22:43Z","discussion":[{"author":"CohenCyril","date":"2023-01-27T12:48:30Z","comment":"I do not see  `countable_bijP` in the diff... is that an oversight?\r\n"},{"author":"affeldt-aist","date":"2023-01-27T13:53:38Z","comment":"> I do not see `countable_bijP` in the diff... is that an oversight?\r\n\r\nYes, sorry about that. It is fixed now."}],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"58676fb6c86cb829e69180a9f1c726396142fe1b","message":"lemma countable_bijP\n\nCo-authored-by: Cyril Cohen <cohen@crans.org>","date":"2023-01-27T13:53:55Z"}]},{"author":"affeldt-aist","number":829,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":10,"deletions":0},{"file":"theories/constructive_ereal.v","status":"M","additions":10,"deletions":0}],"state":"merged","open_date":"2023-01-26T10:02:39Z","update_date":"2023-01-27T01:01:03Z","discussion":[],"review_discussion":[{"author":"zstone1","file":"theories/constructive_ereal.v","date":"2023-01-26T16:18:27Z","comment":"Maybe fin_num_expe?"},{"author":"affeldt-aist","file":"theories/constructive_ereal.v","date":"2023-01-26T18:35:08Z","comment":"I think that `fin_numX` is appropriate because the suffix `X` is used in most lemmas involving `^+`.\r\nOf course, here we are indeed talking about `expe` and not the operator coming from MathComp\r\nbut since this is a lemma about `fun_num` the user can infer this difference from the context."},{"author":"zstone1","file":"theories/constructive_ereal.v","date":"2023-01-26T19:07:05Z","comment":"Ah, makes sense. I'm happy with it's current state then."}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"c0cd36bad26a587a6076f7c794d62f2bac36bfd3","message":"expeS, fin_numX","date":"2023-01-26T10:01:19Z"}]},{"author":"affeldt-aist","number":827,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":0,"deletions":14}],"state":"merged","open_date":"2023-01-24T09:30:05Z","update_date":"2023-01-25T13:34:17Z","discussion":[{"author":"zstone1","date":"2023-01-24T13:26:57Z","comment":"My bad. Thanks for catching this. "}],"review_discussion":[{"author":"CohenCyril","file":"CHANGELOG_UNRELEASED.md","date":"2023-01-24T10:02:17Z","comment":"Where did this go?"},{"author":"affeldt-aist","file":"CHANGELOG_UNRELEASED.md","date":"2023-01-24T10:07:06Z","comment":"Wasn't this renamed `projK` in `mathcomp_extra.v`?"}],"tags":[{"tag":"documentation :memo:","description":"This issue/PR is about documentation of the library / repository"}],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"ac175bfc745cdfa00b696e72214e8f8a1ef3653d","message":"fix changelog","date":"2023-01-24T09:28:31Z"}]},{"author":"affeldt-aist","number":826,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":85,"deletions":81},{"file":"theories/lebesgue_measure.v","status":"M","additions":85,"deletions":81},{"file":"theories/measure.v","status":"M","additions":85,"deletions":81}],"state":"merged","open_date":"2023-01-21T16:30:03Z","update_date":"2023-01-21T19:30:25Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"51b2cf6d4b695e3146f91d602ca2620a467871a7","message":"fixes #825\n\n- fixes #819","date":"2023-01-21T16:53:25Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"f91e5acdceb6c0af3fa404096f70a99a7b02e312","message":"sigma finite content","date":"2023-01-21T17:12:40Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"d1975a7ea6e8a1ae0e0544759d0c18076123c76c","message":"fix","date":"2023-01-21T17:14:01Z"}]},{"author":"CohenCyril","number":824,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":189,"deletions":201},{"file":"classical/classical_sets.v","status":"M","additions":189,"deletions":201},{"file":"theories/lebesgue_integral.v","status":"M","additions":189,"deletions":201},{"file":"theories/measure.v","status":"M","additions":189,"deletions":201}],"state":"merged","open_date":"2023-01-20T20:05:09Z","update_date":"2023-01-21T16:52:51Z","discussion":[{"author":"affeldt-aist","date":"2023-01-21T14:46:20Z","comment":"ok to merge?"}],"review_discussion":[],"tags":[],"commits":[{"author":"CohenCyril","committer":"CohenCyril","hash":"0a46980770e5b42dba6efe9937365e305470465c","message":"Adding a structure for sigma finite measures","date":"2023-01-20T20:51:23Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"2c6697e20c1f2c82e39d50083e17714d1b4e60a5","message":"nitpick","date":"2023-01-21T13:42:55Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"d81fbad7ef18e42348afe1707981530516d0f923","message":"upd changelog","date":"2023-01-21T14:45:53Z"}]},{"author":"affeldt-aist","number":823,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":140,"deletions":132},{"file":"classical/classical_sets.v","status":"M","additions":140,"deletions":132},{"file":"theories/lebesgue_integral.v","status":"M","additions":140,"deletions":132},{"file":"theories/measure.v","status":"M","additions":140,"deletions":132},{"file":"theories/numfun.v","status":"M","additions":140,"deletions":132}],"state":"merged","open_date":"2023-01-16T21:43:28Z","update_date":"2023-01-20T15:12:47Z","discussion":[],"review_discussion":[{"author":"CohenCyril","file":"classical/classical_sets.v","date":"2023-01-17T19:12:38Z","comment":"Do you like:\r\n```suggestion\r\n  trivIset D F <-> trivIset setT (F\\_D)\r\n```"},{"author":"affeldt-aist","file":"classical/classical_sets.v","date":"2023-01-17T21:42:57Z","comment":"Indeed. But `patch` is in `functions.v` which depends on `classical_sets.v`."}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"182ac9c2fceef0dca11ba2183cbb09728f374051","message":"gen measure_bigcup","date":"2023-01-16T21:41:41Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"0246b9a343cf846fbda68d71e16ab131dbd4dc4a","message":"minor improvement","date":"2023-01-20T14:25:17Z"}]},{"author":"affeldt-aist","number":822,"diff_summary":[{"file":"theories/probability.v","status":"M","additions":332,"deletions":73}],"state":"merged","open_date":"2023-01-12T14:53:59Z","update_date":"2023-01-12T14:54:34Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"05be0c3c1430c95f5138dde8c60668b6eb961f66","message":"better definition of discrete random variable\n\n- markov, chebyshev","date":"2023-01-12T14:46:04Z"}]},{"author":"affeldt-aist","number":821,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":270,"deletions":114},{"file":"classical/classical_sets.v","status":"M","additions":270,"deletions":114},{"file":"classical/mathcomp_extra.v","status":"M","additions":270,"deletions":114},{"file":"theories/constructive_ereal.v","status":"M","additions":270,"deletions":114},{"file":"theories/exp.v","status":"M","additions":270,"deletions":114},{"file":"theories/lebesgue_integral.v","status":"M","additions":270,"deletions":114},{"file":"theories/lebesgue_measure.v","status":"M","additions":270,"deletions":114},{"file":"theories/measure.v","status":"M","additions":270,"deletions":114},{"file":"theories/normedtype.v","status":"M","additions":270,"deletions":114}],"state":"merged","open_date":"2023-01-09T04:11:16Z","update_date":"2023-01-11T04:28:33Z","discussion":[{"author":"affeldt-aist","date":"2023-01-11T03:08:28Z","comment":"@proux01 Thanks for your review!"}],"review_discussion":[{"author":"proux01","file":"classical/mathcomp_extra.v","date":"2023-01-10T15:27:35Z","comment":"Definitions should be documented in the header."},{"author":"proux01","file":"theories/lebesgue_integral.v","date":"2023-01-10T15:33:47Z","comment":"I don't get the `integral1` name, maybe `integral0_eq`?"},{"author":"proux01","file":"CHANGELOG_UNRELEASED.md","date":"2023-01-10T15:38:53Z","comment":"Maybe add something like \"renamed measurable_fun_comp -> measurable_funT_comp\"? given the extent of changes it seems to introduce?"},{"author":"proux01","file":"CHANGELOG_UNRELEASED.md","date":"2023-01-10T15:40:20Z","comment":"I don't see this one"},{"author":"proux01","file":"CHANGELOG_UNRELEASED.md","date":"2023-01-10T15:44:18Z","comment":"```suggestion\r\n  + lemma `measurable_funT_comp`\r\n```"},{"author":"proux01","file":"CHANGELOG_UNRELEASED.md","date":"2023-01-10T15:50:06Z","comment":"I don't see this one either"},{"author":"affeldt-aist","file":"theories/lebesgue_integral.v","date":"2023-01-11T02:45:19Z","comment":"It was on the model of `big1` but `integral0_eq` is maybe better."},{"author":"affeldt-aist","file":"CHANGELOG_UNRELEASED.md","date":"2023-01-11T02:50:18Z","comment":"It is in `esum.v` but not concerned by this PR."}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"ad147c8e1552e7e03f6ba6a7d785080a99caf9df","message":"generic lemmas from kernels PR\n\n- fixes #820","date":"2023-01-11T03:01:55Z"}]},{"author":"affeldt-aist","number":818,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"A","additions":1869,"deletions":0},{"file":"_CoqProject","status":"A","additions":1869,"deletions":0},{"file":"classical/classical_sets.v","status":"A","additions":1869,"deletions":0},{"file":"theories/charge.v","status":"A","additions":1869,"deletions":0},{"file":"theories/radon_nikodym.v","status":"A","additions":1869,"deletions":0},{"file":"theories/sequences.v","status":"A","additions":1869,"deletions":0}],"state":"open","open_date":"2023-01-03T14:10:05Z","update_date":"2023-03-27T16:04:08Z","discussion":[],"review_discussion":[],"tags":[{"tag":"enhancement :sparkles:","description":"This issue/PR is about adding new features enhancing the library"},{"tag":"TODO: HB port","description":"This PR should be ported to the HB branch as well. Remove this label when an issue or PR is created."}],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"b806e0e2a188b17f39e41659e0b3742f89d57636","message":"tentative proof of Hahn decomposition theorem\n\n- introduces signed measures\n\nCo-authored-by: IshiguroYoshihiro","date":"2023-03-19T00:10:56Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"7acc90a6751b1a24574c041c02bc38e09b2bfa46","message":"upd wrt master, minor simplications","date":"2023-03-19T00:10:56Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"45b9f472eb22f368ea5df0a9871ff2cdb5e2a7a2","message":"rename signed measure to charge","date":"2023-03-19T00:10:56Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"5eca41df4e0c905ad13f35bdbdfbfd201f4d721b","message":"czero, cscale","date":"2023-03-19T00:10:56Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"90904ea760fb6cbb80c809b8feddcc2fc0623d03","message":"rebase wrt finite_measure","date":"2023-03-19T00:10:56Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"cbba235b0e2fd5759e9a338cdf2969d83dc4a992","message":"fix, clean, doc, changelog","date":"2023-03-19T00:12:21Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"87263bce5c8caf98c5d69796f1601b01138cdb92","message":"tentative proof of Radon-Nikodym\n\nCo-authored-by: IshiguroYoshihiro","date":"2023-03-19T00:23:24Z"}]},{"author":"Tragicus","number":817,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":20,"deletions":47},{"file":"theories/constructive_ereal.v","status":"M","additions":20,"deletions":47}],"state":"merged","open_date":"2023-01-01T17:06:40Z","update_date":"2023-01-04T08:26:27Z","discussion":[],"review_discussion":[{"author":"proux01","file":"theories/constructive_ereal.v","date":"2023-01-01T19:42:29Z","comment":"We always put a spae after `=>` (and before, except when preceded by a tactic keyword)\r\n```suggestion\r\nmove=> x y z.\r\n```"},{"author":"proux01","file":"theories/constructive_ereal.v","date":"2023-01-01T19:44:44Z","comment":"I'd rather use `ltgtP` to distinguish the three cases\r\n```suggestion\r\nwlog: x y z / 0 < x => [h | x0].\r\n  have [x0 | | ->] := ltgtP x 0; [ | exact: h | by rewrite !mul0e].\r\n  by apply: oppe_inj; rewrite -!mulNe h ?oppe_gt0.\r\n```\r\n(this requires adding `oppe_inj`, for instance above just after `oppeK`:\r\n```Coq\r\nLemma oppe_inj : @injective (\\bar R) _ -%E.\r\nProof. exact: inv_inj oppeK. Qed.\r\n```\r\n)"},{"author":"proux01","file":"theories/constructive_ereal.v","date":"2023-01-01T19:45:23Z","comment":"similarly\r\n```suggestion\r\nwlog: x y z x0 / 0 < y => [h | y0].\r\n  have [y0 | | ->] := ltgtP y 0; [ | exact: h | by rewrite !(mul0e, mule0)].\r\n  by apply: oppe_inj; rewrite -muleN -2!mulNe -muleN h ?oppe_gt0.\r\n```"},{"author":"proux01","file":"theories/constructive_ereal.v","date":"2023-01-01T19:45:48Z","comment":"```suggestion\r\nwlog: x y z x0 y0 / 0 < z => [h | z0].\r\n  have [z0 | | ->] := ltgtP z 0; [ | exact: h | by rewrite !mule0].\r\n  by apply: oppe_inj; rewrite -!muleN h ?oppe_gt0.\r\n```"},{"author":"proux01","file":"theories/constructive_ereal.v","date":"2023-01-01T19:49:42Z","comment":"I'd rather limit the indentation:\r\n```suggestion\r\ncase: x x0 => [x x0 | | //]; last by rewrite !gt0_mulye ?mule_gt0.\r\ncase: y y0 => [y y0 | | //]; last by rewrite gt0_mulye // muleC !gt0_mulye.\r\ncase: z z0 => [z z0 | | //]; last by rewrite !gt0_muley ?mule_gt0.\r\nby rewrite /mule/= mulrA.\r\n```\r\nrequires to add (after `gt0_mulye`)\r\n```Coq\r\nLemma gt0_muley x : (0 < x -> x * +oo = +oo)%E.                                                                                                       \r\nProof. by move=> ?; rewrite muleC gt0_mulye. Qed    \r\n```\r\nand while at it\r\n```Coq\r\nLemma lt0_muley x : (x < 0 -> x * +oo = -oo)%E.\r\nProof. by move=> ?; rewrite muleC lt0_mulye. Qed.\r\n```\r\n```Coq\r\nLemma gt0_muleNy x : (0 < x -> x * -oo = -oo)%E.\r\nProof. by move=> ?; rewrite muleC gt0_mulNye. Qed.\r\n```\r\n```Coq\r\nLemma lt0_muleNy x : (x < 0 -> x * -oo = +oo)%E.\r\nProof. by move=> ?; rewrite muleC lt0_mulNye. Qed.\r\n```\r\n(each after the corresponding lemma)"},{"author":"CohenCyril","file":"theories/constructive_ereal.v","date":"2023-01-01T22:40:24Z","comment":"Very nice indeed.\r\nNitpicking too...\r\n```suggestion\r\nmove=> x y z.\r\nwlog x0 : x y z / 0 < x => [hwlog|].\r\n  have [x0| |->] := ltgtP x 0; [ |exact: hwlog|by rewrite !mul0e].\r\n  by apply: oppe_inj; rewrite -!mulNe hwlog ?oppe_gt0.\r\nwlog y0 : x y z x0 / 0 < y => [hwlog|].\r\n  have [y0| |->] := ltgtP y 0; [ |exact: hwlog|by rewrite !(mul0e, mule0)].\r\n  by apply: oppe_inj; rewrite -muleN -2!mulNe -muleN hwlog ?oppe_gt0.\r\nwlog z0 : x y z x0 y0 / 0 < z => [hwlog|].\r\n  have [z0| |->] := ltgtP z 0; [ |exact: hwlog|by rewrite !mule0].\r\n  by apply: oppe_inj; rewrite -!muleN hwlog ?oppe_gt0.\r\ncase: x x0 => [x x0| |//]; last by rewrite !gt0_mulye ?mule_gt0.\r\ncase: y y0 => [y y0| |//]; last by rewrite gt0_mulye // muleC !gt0_mulye.\r\ncase: z z0 => [z z0| |//]; last by rewrite !gt0_muley ?mule_gt0.\r\nby rewrite /mule/= mulrA.\r\n```"}],"tags":[],"commits":[{"author":"proux01","committer":"proux01","hash":"72be37401f2731ade1e898ef464a46228778e43f","message":"Add lemma oppe_inj","date":"2023-01-02T10:51:41Z"},{"committer":"proux01","hash":"d805e377eb34c462db06e27193a4fecb3ac3b772","message":"Shorten proof of muleA\n\nCo-authored-by: Tragicus <96025499+Tragicus@users.noreply.github.com>","date":"2023-01-03T16:34:07Z"}]},{"author":"affeldt-aist","number":816,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":59,"deletions":0},{"file":"classical/classical_sets.v","status":"M","additions":59,"deletions":0},{"file":"theories/measure.v","status":"M","additions":59,"deletions":0}],"state":"merged","open_date":"2022-12-28T15:48:42Z","update_date":"2022-12-29T13:28:19Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"c730de06b4a764d9105a5a682aab84f588d3d4c9","message":"add defs to measure.v","date":"2022-12-28T15:40:22Z"}]},{"author":"affeldt-aist","number":815,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":113,"deletions":44},{"file":"theories/constructive_ereal.v","status":"M","additions":113,"deletions":44},{"file":"theories/ereal.v","status":"M","additions":113,"deletions":44},{"file":"theories/esum.v","status":"M","additions":113,"deletions":44},{"file":"theories/lebesgue_integral.v","status":"M","additions":113,"deletions":44},{"file":"theories/lebesgue_measure.v","status":"M","additions":113,"deletions":44},{"file":"theories/measure.v","status":"M","additions":113,"deletions":44},{"file":"theories/numfun.v","status":"M","additions":113,"deletions":44},{"file":"theories/sequences.v","status":"M","additions":113,"deletions":44}],"state":"merged","open_date":"2022-12-28T15:20:48Z","update_date":"2023-02-05T23:51:17Z","discussion":[{"author":"affeldt-aist","date":"2023-01-18T19:09:54Z","comment":"Is it ok if we have `adde_def_oppeD` and `oppeD` with `fin_num` as hypothesis? Same for `oppeB`.\r\nIf it is ok, we can add the versions for `doppeD` and `doppeB` and we are done.\r\nThere is certainly something more systematic and significant to be done about `adde_def`\r\nbut that can maybe be the purpose of another PR."},{"author":"affeldt-aist","date":"2023-02-02T10:14:32Z","comment":"> Is it ok if we have `adde_def_oppeD` and `oppeD` with `fin_num` as hypothesis? Same for `oppeB`. If it is ok, we can add the versions for `doppeD` and `doppeB` and we are done. There is certainly something more systematic and significant to be done about `adde_def` but that can maybe be the purpose of another PR.\r\n\r\n\"Something more systematic\" might go through the introduction of a more generic notation allowing to write\r\n`?( x + y)`. @CohenCyril \r\n\r\nI gave it a try with the following reserved notation:\r\n```coq\r\nReserved Notation \"'?(' x '+' y ')'\" (at level 0, x, y at level 1,\r\n  format \"'?(' x  +  y ')'\").\r\n```\r\nOne needs then at add parenteses here and there (e.g., `?( (- x) + y)`)\r\nand it conflicts with SSReflect tactics such as `rewrite ?(f x)`.\r\n\r\nThere is certainly a better way to declare this notation.\r\n\r\nShall we issue about that and care later?\r\n"},{"author":"CohenCyril","date":"2023-02-03T09:26:24Z","comment":"The question of the notation `?(x + y)` is orthogonal, this PR should proceed independently.\r\n(It's ok to introduce and preserve an alias `x +? y := ?(x+ y)` later on.\r\n\r\nHowever, for this PR, I advocate that the primary lemmas should be the ones with hypothesis `x +? y` rather than finitude, and hence have `oppeD x  y : x +? y -> - (x + y) = - x - y`.\r\n\r\nFor the summations, it's the same, the first and primary lemma should be `sumeN` and use `{in P &, forall i j, x i +? x j}` instead as usual for summation on general indices."}],"review_discussion":[{"author":"proux01","file":"theories/constructive_ereal.v","date":"2022-12-28T16:15:56Z","comment":"Maybe?\r\n```suggestion\r\nLemma sum_fineE (I : Type) s (P : pred I) (f : I -> \\bar R) :\r\n    (forall i, P i -> f i \\is a fin_num) ->\r\n  (\\sum_(i <- s | P i) fine (f i))%:E = \\sum_(i <- s | P i) f i.\r\n```\r\n(we usually put the most complicated side on left of `=`)"},{"author":"proux01","file":"theories/constructive_ereal.v","date":"2022-12-28T16:17:38Z","comment":"indentation?\r\n```suggestion\r\nLemma sumeN I s (P : pred I) (f : I -> \\bar R) :\r\n    (forall i, P i -> f i \\is a fin_num) ->\r\n  \\sum_(i <- s | P i) - f i = - \\sum_(i <- s | P i) f i.\r\n```"},{"author":"CohenCyril","file":"theories/constructive_ereal.v","date":"2022-12-28T18:39:31Z","comment":"I think the precondition can be weakened to `{in s &, forall i j, f i +? f j}`"},{"author":"affeldt-aist","file":"theories/constructive_ereal.v","date":"2022-12-29T11:07:51Z","comment":"You don't mind if `I` is required to be an `eqType`?"},{"author":"affeldt-aist","file":"theories/constructive_ereal.v","date":"2022-12-29T14:02:53Z","comment":"OK with eq_syming the conclusion but what about `EFin_sum_fine` for the name?"},{"author":"proux01","file":"theories/constructive_ereal.v","date":"2022-12-29T14:08:02Z","comment":"That's indeed more precise (although longer)"},{"author":"affeldt-aist","file":"theories/constructive_ereal.v","date":"2023-01-13T00:12:34Z","comment":"This is the proof `adde_def_sumeN` in the last commit. Or maybe we can have both proofs? `sumeN` and `adde_def_sumeN`?"},{"author":"proux01","file":"theories/constructive_ereal.v","date":"2023-01-13T13:04:50Z","comment":"IMHO, the two things (`adde_def` vs `fin_num` and `Type` vs `eqType`) are orthogonal, I would expect to have both `Type` and `eqType` versions with `adde_def`, maybe:\r\n```Coq\r\nLemma sumeN I s (P : pred I) (f : I -> \\bar R) :\r\n    (forall i j, P i -> P j -> f i +? f j) ->\r\n  \\sum_(i <- s | P i) - f i = - \\sum_(i <- s | P i) f i.\r\n```\r\nand\r\n```Coq\r\nLemma sumeN_seq (I : eqType) s (P : pred I) (f : I -> \\bar R) :\r\n    {in s &, forall i j, f i +? f j} ->\r\n  \\sum_(i <- s | P i) - f i = - \\sum_(i <- s | P i) f i.\r\n```\r\n"},{"author":"CohenCyril","file":"theories/constructive_ereal.v","date":"2023-01-15T15:52:11Z","comment":"I think only the first one is actually needed."},{"author":"CohenCyril","file":"theories/constructive_ereal.v","date":"2023-02-05T13:46:00Z","comment":"```suggestion\r\nLemma adde_defDr x y z : x +? y -> x +? z -> x +? (y + z).\r\n```"},{"author":"CohenCyril","file":"theories/constructive_ereal.v","date":"2023-02-05T14:14:05Z","comment":"```suggestion\r\n  x *? \\sum_(i <- s | P i) F i -> {in P, forall i, x *? F i} -> {in P &, forall i j, F i +? F j} ->\r\n```\r\nFor another PR? (And I'm not sure it's true nor most general)"},{"author":"affeldt-aist","file":"theories/constructive_ereal.v","date":"2023-02-05T14:27:03Z","comment":"Does it not exclude the case x = 0 and F i = +oo ?"},{"author":"CohenCyril","file":"theories/constructive_ereal.v","date":"2023-02-05T14:31:33Z","comment":"It does so it was a bad idea."}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"c858b6f420774bedc2df24789d876b9579ef1355","message":"sumeN","date":"2023-02-02T09:18:14Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"ce5679d39c82f4d01b912e96cbe9d1b088ecd6a9","message":"renaming","date":"2023-02-05T13:01:40Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"89d71d8256402118d31b61b6a5ed73ff91d67eb9","message":"sum over general indices","date":"2023-02-05T13:41:49Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"218aeb84136b247075d24abef56058c37d8613d8","message":"renaming, generalization","date":"2023-02-05T14:10:39Z"}]},{"author":"affeldt-aist","number":814,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":190,"deletions":215},{"file":"classical/classical_sets.v","status":"M","additions":190,"deletions":215},{"file":"theories/lebesgue_integral.v","status":"M","additions":190,"deletions":215},{"file":"theories/numfun.v","status":"M","additions":190,"deletions":215}],"state":"merged","open_date":"2022-12-22T14:06:45Z","update_date":"2023-01-16T20:49:48Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"b0524fc03289e1b7f0b85b1c83b4dab22b269738","message":"minor fixes\n\n- fix doc in lebesgue_integral.v\n- rm duplicated fimfun_inP hint\n- 80 chars limit\n- move some basic theories out of `lebesgue_integral` to\n  more appropriate locations\n- shorten approx proofs","date":"2023-01-16T19:32:52Z"}]},{"author":"affeldt-aist","number":813,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":38,"deletions":25},{"file":"classical/fsbigop.v","status":"M","additions":38,"deletions":25},{"file":"theories/esum.v","status":"M","additions":38,"deletions":25},{"file":"theories/lebesgue_integral.v","status":"M","additions":38,"deletions":25},{"file":"theories/measure.v","status":"M","additions":38,"deletions":25}],"state":"merged","open_date":"2022-12-21T14:48:37Z","update_date":"2022-12-28T01:55:59Z","discussion":[],"review_discussion":[{"author":"CohenCyril","file":"theories/esum.v","date":"2022-12-21T15:35:00Z","comment":"I'm not sure about this renaming..."},{"author":"affeldt-aist","file":"theories/esum.v","date":"2022-12-21T18:40:14Z","comment":"It's based on the fact that the removed lemma was `fsbig_esum` and it was the `esym` version of this lemma.\r\nWhat about removing `enum_fset` and keep `fsbig_esum` instead?"},{"author":"CohenCyril","file":"theories/esum.v","date":"2022-12-23T11:34:23Z","comment":"I prefer to keep this one (`fsbig_esum` was a weird name in the first place...) and keep the name as it is now (`esum_fset`)"}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"dc31e38e7b0f884e4dba55ede9fd177b724e0dd5","message":"minor generalization in esum.v\n\n- generalize esum_esum\n- remove fsbig_esum (redundant)\n- fix implicit arguments of eq_fsbigr","date":"2022-12-27T07:02:23Z"}]},{"author":"yoshihiro503","number":812,"diff_summary":[{"file":"theories/fdists.v","status":"A","additions":38,"deletions":0}],"state":"closed","open_date":"2022-12-16T05:32:26Z","update_date":"2023-01-06T04:09:05Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"yoshihiro503","committer":"yoshihiro503","hash":"c4a00fda81be2adaba724ae92e83f798be8b779a","message":"Introduced fdists for mathcomp numDomainType\nCo-authored-by: Reynald Affeldt <reynald.affeldt@aist.go.jp>","date":"2022-12-16T05:30:40Z"}]},{"author":"affeldt-aist","number":811,"diff_summary":[{"file":"CHANGELOG.md","status":"M","additions":454,"deletions":497},{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":454,"deletions":497},{"file":"INSTALL.md","status":"M","additions":454,"deletions":497}],"state":"merged","open_date":"2022-12-14T07:22:33Z","update_date":"2022-12-14T13:25:14Z","discussion":[],"review_discussion":[{"author":"proux01","file":"CHANGELOG.md","date":"2022-12-14T08:25:15Z","comment":"Maybe this (as well as the new files) should come first in the list?"},{"author":"proux01","file":"CHANGELOG.md","date":"2022-12-14T08:34:03Z","comment":"Same, maybe put the renamed file first?"},{"author":"proux01","file":"INSTALL.md","date":"2022-12-14T08:36:21Z","comment":"The opam files still have 1.2.0 as lower bound, does that still work? (is it tested in CI?)"},{"author":"affeldt-aist","file":"INSTALL.md","date":"2022-12-14T09:04:35Z","comment":"At the top of `INSTALL.md`, the requirement for hierarchy-builder was already set to 1.3.0, so I just propagated it.\r\nAs for the true dependency, I am not sure, but recently we had to adjust the opam files for older releases of mathcomp-analysis because they were *only* compatible with hb-1.2.0 (see https://github.com/coq/opam-coq-archive/pull/2368/files). Yet, recent opam files do not go as far as to require 1.3.0."},{"author":"proux01","file":"INSTALL.md","date":"2022-12-14T09:14:00Z","comment":"Great, then the coq-mathcomp-classical.opam file (here) should be updated."},{"author":"affeldt-aist","file":"INSTALL.md","date":"2022-12-14T12:43:51Z","comment":"Since the CI fails because of dependencies when restricting to HB 1.3.0, I went back to HB 1.2.0 (in the opam file and `INSTALL.md`)."}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"d9086d8a10dce601ecaea3612036f0ddc0ecc846","message":"changelog for 0.6.0","date":"2022-12-14T12:32:58Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"fa190a3d4c1797d90cdec71e088ebf0ac7481f77","message":"roll back to hb 1.2.0 for the CI","date":"2022-12-14T12:36:55Z"}]},{"author":"hoheinzollern","number":810,"diff_summary":[{"file":"_CoqProject","status":"A","additions":421,"deletions":0},{"file":"theories/probability.v","status":"A","additions":421,"deletions":0}],"state":"closed","open_date":"2022-12-09T14:59:43Z","update_date":"2023-01-12T13:53:46Z","discussion":[{"author":"affeldt-aist","date":"2023-01-12T13:53:46Z","comment":"I have merged in PR #516 using cherry-pick so I close."}],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"0f3bf91bd7729147b01bbf92ff56e55cccaafbfc","message":"first take at probability theory\n\nCo-authored-by: Takafumi Saikawa <tscompor@gmail.com>\nCo-authored-by: Alessandro Bruni <alessandro.bruni@gmail.com>","date":"2022-12-01T06:35:45Z"},{"author":"hoheinzollern","committer":"hoheinzollern","hash":"037761e1b574389a924c5db1be790f4e61a660cb","message":"Lemma probability_fin","date":"2022-12-09T11:54:02Z"}]},{"author":"affeldt-aist","number":809,"diff_summary":[{"file":"theories/lebesgue_integral.v","status":"M","additions":1,"deletions":1}],"state":"merged","open_date":"2022-12-08T13:08:07Z","update_date":"2022-12-09T15:35:47Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"105b52b239ecd68b9cc9b7664b410ed43f6fb0ef","message":"fixes #808","date":"2022-12-08T13:07:32Z"}]},{"author":"affeldt-aist","number":806,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":7,"deletions":5},{"file":"theories/lebesgue_integral.v","status":"M","additions":7,"deletions":5}],"state":"merged","open_date":"2022-12-08T09:32:27Z","update_date":"2023-01-13T12:57:14Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"7cf2e065f84201c628d5ad0bbaec4e7daa9bafe0","message":"generalize measurable_sfunP","date":"2023-01-11T05:42:15Z"}]},{"author":"zstone1","number":805,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":70,"deletions":0},{"file":"theories/topology.v","status":"M","additions":70,"deletions":0}],"state":"merged","open_date":"2022-11-25T18:11:27Z","update_date":"2023-01-24T04:51:23Z","discussion":[{"author":"zstone1","date":"2023-01-05T04:32:36Z","comment":"Need to make things more friendly for working with subsets. "},{"author":"CohenCyril","date":"2023-01-22T17:27:09Z","comment":"@zstone1 I think this can be merged as such and completed later on."}],"review_discussion":[{"author":"CohenCyril","file":"theories/topology.v","date":"2023-01-22T17:25:47Z","comment":"Nitpicking\r\n```suggestion\r\npose distincts (i : nat) := projT1 (sigW (npts i)).\r\npose derange (i : nat) (z : K i) :=\r\n  if z == (distincts i).1 then (distincts i).2 else (distincts i).1.\r\npose g :N i := if (i < N)%nat then f i else derange _ (f i).\r\n```"}],"tags":[],"commits":[{"author":"zstone1","committer":"zstone1","hash":"18158d620492d3bd0fd106fb20df122ed9eb52aa","message":"perfect sets","date":"2023-01-24T01:37:21Z"},{"author":"zstone1","committer":"zstone1","hash":"a0ca1729b9eccc23684f2c54d8008cff6b2a39dd","message":"linting","date":"2023-01-24T01:37:21Z"},{"author":"zstone1","committer":"zstone1","hash":"1eed88ae20f5ae63327557db182a7e2b5305ac89","message":"cleaner assumptions for perfect_diagonal","date":"2023-01-24T01:37:21Z"},{"author":"zstone1","committer":"zstone1","hash":"7ed99cf653d410cfe5d6e78812f63752e1340cb8","message":"adding docs","date":"2023-01-24T01:37:21Z"},{"author":"zstone1","committer":"zstone1","hash":"bb344b175355e8339bba499040850944ce353420","message":"Update theories/topology.v\r\n\r\nfix pose conventions\n\nCo-authored-by: Cyril Cohen <CohenCyril@users.noreply.github.com>","date":"2023-01-24T01:37:21Z"},{"author":"zstone1","committer":"zstone1","hash":"467a2708857a569c71a4d01da17ccfac2e59a192","message":"fixing build","date":"2023-01-24T04:10:23Z"}]},{"author":"SkySkimmer","number":804,"diff_summary":[{"file":"theories/constructive_ereal.v","status":"M","additions":27,"deletions":2},{"file":"theories/lebesgue_integral.v","status":"M","additions":27,"deletions":2},{"file":"theories/lebesgue_measure.v","status":"M","additions":27,"deletions":2},{"file":"theories/measure.v","status":"M","additions":27,"deletions":2},{"file":"theories/normedtype.v","status":"M","additions":27,"deletions":2},{"file":"theories/numfun.v","status":"M","additions":27,"deletions":2}],"state":"closed","open_date":"2022-11-24T16:38:28Z","update_date":"2023-01-18T14:26:38Z","discussion":[{"author":"SkySkimmer","date":"2022-11-24T16:39:13Z","comment":"(if you think making this warning error by default this is the right time to say so, the right place is the coq side PR)"},{"author":"CohenCyril","date":"2022-11-25T12:58:23Z","comment":"I'm not so happy about them..."},{"author":"affeldt-aist","date":"2022-11-25T13:18:50Z","comment":"Do you mean that you are unhappy with the fact that they are ineffective?"},{"author":"CohenCyril","date":"2022-11-25T13:24:04Z","comment":"No I'm unhappy about the verbosity"}],"review_discussion":[{"author":"SkySkimmer","file":"theories/constructive_ereal.v","date":"2022-12-08T16:49:41Z","comment":"An alternative to unsetting warnings would be to avoid the notation, ie here we would do\r\n```suggestion\r\n#[global] Hint Extern 0 (is_true (lee 0 `| _ |)%E) => solve [apply: abse_ge0] : core.\r\n```\r\n(not sure if we need %E for the `` `| _ | ``)\r\nalso with https://github.com/coq/coq/pull/16902 we could do\r\n```suggestion\r\n#[global, warnings=\"-cast-in-pattern\"] Hint Extern 0 (is_true (0 <= `| _ |)%E) => solve [apply: abse_ge0] : core.\r\n```\r\n(no Unset Warnings) which is less verbose"}],"tags":[],"commits":[{"author":"SkySkimmer","committer":"SkySkimmer","hash":"0a60fcd4883c8c6520b2107428216bdf2d90acce","message":"Adapt to coq/coq#16798 (cast in pattern is an error by default)\n\nA pattern `x : y` is equivalent to just `x`.\n\nSome of the casts were bogus and so were removed.\n\nOther casts come from notations (from constructive_ereals around line\n260), for these the warning was ignored as it seems ignoring them was not a\nproblem.","date":"2022-11-24T16:37:25Z"}]},{"author":"CohenCyril","number":803,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":34,"deletions":0},{"file":"classical/mathcomp_extra.v","status":"M","additions":34,"deletions":0}],"state":"merged","open_date":"2022-11-22T18:17:57Z","update_date":"2022-11-23T17:54:05Z","discussion":[],"review_discussion":[{"author":"zstone1","file":"classical/mathcomp_extra.v","date":"2022-11-22T18:24:29Z","comment":"I expected this have it's arguments flipped. That is, `i (f : forall i, T i) := f i`. So `proj i` is the projection onto the `i`th coordinate. "},{"author":"CohenCyril","file":"classical/mathcomp_extra.v","date":"2022-11-22T18:30:26Z","comment":"Right!"},{"author":"CohenCyril","file":"classical/mathcomp_extra.v","date":"2022-11-22T18:37:25Z","comment":"```suggestion\r\n(*               proj i f == f i, where f : forall i, T i                     *)\r\n```"},{"author":"CohenCyril","file":"classical/mathcomp_extra.v","date":"2022-11-22T18:38:04Z","comment":"```suggestion\r\nDefinition proj {I} {T : I -> Type} i (f : forall i, T i) := f i.\r\n```"},{"author":"CohenCyril","file":"classical/mathcomp_extra.v","date":"2022-11-22T18:39:45Z","comment":"```suggestion\r\nVariant dfwith_spec i (x : T i) : forall j, T j -> Type :=\r\n```"}],"tags":[],"commits":[{"author":"CohenCyril","committer":"CohenCyril","hash":"3b711b9a2948458b48bc23b1f71f476569d82610","message":"dfunwith","date":"2022-11-22T18:10:01Z"},{"author":"CohenCyril","committer":"web-flow","hash":"6291615c5c9b25431c73311eef19012c75001993","message":"Apply suggestions from code review","date":"2022-11-22T18:39:53Z"}]},{"author":"hoheinzollern","number":802,"diff_summary":[{"file":"theories/lebesgue_integral.v","status":"M","additions":51,"deletions":0}],"state":"closed","open_date":"2022-11-19T10:22:01Z","update_date":"2022-11-22T08:25:24Z","discussion":[{"author":"affeldt-aist","date":"2022-11-22T01:58:02Z","comment":"This looks like a duplicate of PR #781 (I might be responsible for the confusion)."},{"author":"hoheinzollern","date":"2022-11-22T08:25:24Z","comment":"Yes indeed."}],"review_discussion":[],"tags":[],"commits":[{"author":"hoheinzollern","committer":"hoheinzollern","hash":"76bf7e898e43c400490323c40883b94a4df330b8","message":"Lemma le_integral_abse_fun","date":"2022-11-19T10:09:23Z"}]},{"author":"hoheinzollern","number":801,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":39,"deletions":2},{"file":"theories/lebesgue_measure.v","status":"M","additions":39,"deletions":2},{"file":"theories/measure.v","status":"M","additions":39,"deletions":2}],"state":"merged","open_date":"2022-11-17T13:34:41Z","update_date":"2022-11-24T05:58:45Z","discussion":[{"author":"affeldt-aist","date":"2022-11-21T07:03:52Z","comment":"`emeasurable_fun_bool` can be generalized from `\\bar R` to any measurable type."}],"review_discussion":[],"tags":[],"commits":[{"author":"hoheinzollern","committer":"affeldt-aist","hash":"ef044fa4a31dc49b8e81cca3820b7a435328502c","message":"measurable_fun_bool","date":"2022-11-24T04:27:01Z"},{"author":"hoheinzollern","committer":"affeldt-aist","hash":"02473f37da6e74127a059a1133cd590700c9609e","message":"wip","date":"2022-11-24T04:27:01Z"},{"author":"hoheinzollern","committer":"affeldt-aist","hash":"83e4948a9f907b1118ebc16aaf472e1b06882b4e","message":"fix","date":"2022-11-24T04:27:01Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"099d9f1c4f78bab443f2d57da7b4fb9a43440f36","message":"changlog and mv to measure.v","date":"2022-11-24T04:27:02Z"}]},{"author":"affeldt-aist","number":800,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":3,"deletions":1},{"file":"theories/measure.v","status":"M","additions":3,"deletions":1}],"state":"merged","open_date":"2022-11-16T04:35:40Z","update_date":"2022-11-17T03:14:35Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"eb180f722979c06cb339c7dfc83938c842a70ce4","message":"minor generalization\n\nCo-authored-by: shinya-katsumata","date":"2022-11-16T04:32:52Z"}]},{"author":"zstone1","number":799,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":60,"deletions":33},{"file":"classical/mathcomp_extra.v","status":"M","additions":60,"deletions":33},{"file":"theories/topology.v","status":"M","additions":60,"deletions":33}],"state":"merged","open_date":"2022-11-13T22:39:58Z","update_date":"2022-11-24T16:45:11Z","discussion":[{"author":"zstone1","date":"2022-11-23T22:13:33Z","comment":"Updated to use the more general `proj` and `dfwith`. The only lingering detail is the annoyance of explicitly declaring the type in `continuous (proj i : PK -> K i)`. This should resolve itself once the HB stuff is done, though. And there's already comment to this effect in the code. I am happy with the rest of it. "}],"review_discussion":[{"author":"affeldt-aist","file":"classical/mathcomp_extra.v","date":"2022-11-24T07:46:35Z","comment":"```suggestion\r\nLemma dfwith_projK i (x : T i) : cancel (@dfwith i) (proj i).\r\n```"},{"author":"affeldt-aist","file":"theories/topology.v","date":"2022-11-24T07:47:06Z","comment":"```suggestion\r\nmove=> h; apply: cvg_trans (h _) => {h}.\r\n```"},{"author":"affeldt-aist","file":"theories/topology.v","date":"2022-11-24T07:47:35Z","comment":"```suggestion\r\nrewrite eqEsubset; split => y //; exists (@dfwith _ _ (fun=> point) i y) => //.\r\n```"},{"author":"affeldt-aist","file":"theories/topology.v","date":"2022-11-24T07:47:56Z","comment":"```suggestion\r\nLemma dfwith_continuous g (i : I) : continuous (@dfwith I _ g i : K i -> PK).\r\n```"},{"author":"affeldt-aist","file":"theories/topology.v","date":"2022-11-24T07:48:22Z","comment":"```suggestion\r\nmove/(@preimage_subset _ _ (@dfwith I _ g i))/filterS; apply.\r\n```"},{"author":"affeldt-aist","file":"theories/topology.v","date":"2022-11-24T07:48:57Z","comment":"```suggestion\r\nhave [wx|] := eqVneq w i.\r\n```"},{"author":"affeldt-aist","file":"theories/topology.v","date":"2022-11-24T07:49:28Z","comment":"```suggestion\r\nmove=> wnx; apply: filterS filterT => y _ /=; move: Vpz.\r\n```"},{"author":"affeldt-aist","file":"classical/mathcomp_extra.v","date":"2022-11-24T07:50:51Z","comment":"Maybe `dfwith_projK` could be simply `projK`?"}],"tags":[],"commits":[{"author":"zstone1","committer":"zstone1","hash":"f20c861f87496e6fcf919711a066f6f6571648e5","message":"cleaning up projections","date":"2022-11-24T16:09:53Z"},{"author":"zstone1","committer":"zstone1","hash":"c98c3e3c814aab48a4bf5f1f2f52a37075c43e9a","message":"updating changelog","date":"2022-11-24T16:09:53Z"},{"author":"zstone1","committer":"zstone1","hash":"13ef7c114b64ee409cfe1526428f8aafe5d6298d","message":"using dfwith and proj","date":"2022-11-24T16:09:53Z"},{"author":"CohenCyril","committer":"zstone1","hash":"64da6fdc5997f7a52619342e566ed7091918adfc","message":"changing the implicits of dfwith simplifies stuff","date":"2022-11-24T16:09:53Z"}]},{"author":"affeldt-aist","number":798,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":287,"deletions":223},{"file":"classical/cardinality.v","status":"M","additions":287,"deletions":223},{"file":"classical/classical_sets.v","status":"M","additions":287,"deletions":223},{"file":"classical/fsbigop.v","status":"M","additions":287,"deletions":223},{"file":"theories/derive.v","status":"M","additions":287,"deletions":223},{"file":"theories/lebesgue_integral.v","status":"M","additions":287,"deletions":223},{"file":"theories/lebesgue_measure.v","status":"M","additions":287,"deletions":223},{"file":"theories/measure.v","status":"M","additions":287,"deletions":223},{"file":"theories/normedtype.v","status":"M","additions":287,"deletions":223},{"file":"theories/sequences.v","status":"M","additions":287,"deletions":223},{"file":"theories/topology.v","status":"M","additions":287,"deletions":223}],"state":"merged","open_date":"2022-11-13T08:35:00Z","update_date":"2022-11-23T17:55:15Z","discussion":[{"author":"affeldt-aist","date":"2022-11-17T10:18:39Z","comment":"Requested changes have been performed (hopefully)."}],"review_discussion":[{"author":"CohenCyril","file":"theories/normedtype.v","date":"2022-11-14T23:36:17Z","comment":"Yes you are right"},{"author":"CohenCyril","file":"theories/normedtype.v","date":"2022-11-14T23:37:20Z","comment":"No, that was correct, I want to encourage the use of `cvgrPdist_lt` instead."},{"author":"CohenCyril","file":"theories/normedtype.v","date":"2022-11-14T23:37:30Z","comment":"Yes, you are right"},{"author":"CohenCyril","file":"theories/normedtype.v","date":"2022-11-14T23:37:49Z","comment":"No, I really meant `cvgr_dist_lt2` why did you think otherwise?"},{"author":"CohenCyril","file":"theories/normedtype.v","date":"2022-11-14T23:41:21Z","comment":"No, that was correct, I want to encourage the use of `cvgr_dist_lt2P` instead.\r\nHowever the latter and all the `2` family should actually be renamed `cvgr2Pdist_lt` and so on..."},{"author":"CohenCyril","file":"theories/sequences.v","date":"2022-11-14T23:41:33Z","comment":"Yes good catch!"},{"author":"affeldt-aist","file":"theories/normedtype.v","date":"2022-11-15T00:01:11Z","comment":"I was actually wondering since this very proof is actually using `cvgr_dist_lt2P` even though it is not essential.\r\n"},{"author":"CohenCyril","file":"CHANGELOG_UNRELEASED.md","date":"2022-11-17T14:17:39Z","comment":"```suggestion\r\n  + `cvg_dist2P` (use `cvgr2dist_ltP` or a variant instead),\r\n  + `cvg_dist2` (use `cvgr2dist_lt` or a variant instead),\r\n```"}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"2ca5cf299c93e97429d62ad8fa2f52931f7f7adf","message":"adjust deprecated notes\n\nCo-authored-by: Cyril Cohen <cohen@crans.org>","date":"2022-11-23T04:12:01Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"e2d885e63b5fc7feef10b79a52a7f3dd54e74481","message":"fix deprecated lemmas","date":"2022-11-23T04:12:01Z"}]},{"author":"zstone1","number":797,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":149,"deletions":1},{"file":"theories/topology.v","status":"M","additions":149,"deletions":1}],"state":"closed","open_date":"2022-11-12T04:42:33Z","update_date":"2023-02-07T22:52:54Z","discussion":[{"author":"affeldt-aist","date":"2022-11-22T08:23:21Z","comment":"Would it be better to have a definition of `second_countable` made of \"smaller\" definitions such as:\r\n```coq\r\nDefinition local_base (T : topologicalType) (x : T) (B : set (set T)) :=\r\n  B `<=` nbhs x /\\ (forall V, nbhs x V -> exists2 A, B A & A `<=` V).\r\n\r\nDefinition topological_base (T : topologicalType) (B : set (set T)) :=\r\n  B `<=` open /\\ forall x, exists2 C, C `<=` B & local_base x C.\r\n\r\nDefinition second_countable' (T : topologicalType) := exists2 B : set (set T),\r\n  countable B & topological_base B.\r\n\r\nLemma second_countableP (T : topologicalType) :\r\n  second_countable T <-> second_countable' T.\r\nProof.\r\nsplit=> [[B [cB Bopen h]]|].\r\n  exists B => //; split => // x.\r\n  have {}h := h x.\r\n  have @h' : forall V : {V : set T & nbhs x V}, {A : set T | [/\\ B A, nbhs x A & A `<=` projT1 V]}.\r\n    move=> [V Vx]; apply: cid.\r\n    by move: (h V Vx) => [W [BW xW WV]]; exists W.\r\n  exists [set V | exists W (xW : nbhs x W), sval (h' (existT _ _ xW)) = V].\r\n    by move=> _ /= [W [xW /=]] <-; case: cid => // ? [].\r\n  split.\r\n    by move=> _ /= [W [xW] <-]; case: cid => ? [].\r\n  move=> V xV; exists (projT1 (h' (existT _ _ xV))).\r\n    by exists V, xV.\r\n  by move=> y/=; rewrite /sval/=; case: cid => W [BW xW WV Wy]; exact: WV.\r\nmove=> [B cB [Bopen h]]; exists B; split => // x V xV.\r\nhave [C CB [Cx h']] := h x.\r\nhave [A CA AV] := h' _ xV.\r\nby exists A; split => //; [exact: CB|exact: Cx].\r\nQed.\r\n```\r\n"},{"author":"zstone1","date":"2023-01-05T04:33:10Z","comment":"Need to make things more friendly for working with subsets."},{"author":"zstone1","date":"2023-02-07T22:52:50Z","comment":"I will treat all the 2nd countability stuff mentioned here in a separate diff.\r\n\r\nIn the meanwhile, stuff on clopen and connectedness is simpler, and now presented without the 2nd countability stuff in #840 "}],"review_discussion":[{"author":"affeldt-aist","file":"theories/topology.v","date":"2022-11-22T08:16:18Z","comment":"```suggestion\r\n      B `<=` open &\r\n```"},{"author":"affeldt-aist","file":"theories/topology.v","date":"2022-11-22T08:16:56Z","comment":"```suggestion\r\n      forall (x:T) V, nbhs x V -> exists A, [/\\ B A, nbhs x A & A `<=` V]].\r\n```"}],"tags":[],"commits":[{"author":"zstone1","committer":"zstone1","hash":"2f4f02010bb4a17145b033b3dca764230cd10086","message":"fixing names","date":"2022-12-14T00:53:49Z"},{"author":"zstone1","committer":"zstone1","hash":"3b9dd2bef50426b68f95521c606aa7166cc8bc65","message":"docs","date":"2022-12-14T00:53:49Z"},{"author":"zstone1","committer":"zstone1","hash":"922d88ee0d4156f96a61a36a6313d11d6a78cdc9","message":"few helper lemmas","date":"2022-12-14T00:53:49Z"},{"author":"affeldt-aist","committer":"zstone1","hash":"6c497a5dc1d32159785886a6f54acce69aea8ee7","message":"linting (wip)","date":"2022-12-14T00:53:49Z"}]},{"author":"yoshihiro503","number":794,"diff_summary":[{"file":"theories/convex.v","status":"A","additions":254,"deletions":0}],"state":"open","open_date":"2022-11-04T06:51:40Z","update_date":"2023-03-15T15:02:37Z","discussion":[{"author":"affeldt-aist","date":"2023-03-13T17:24:50Z","comment":"I opened PR #873 and moved the comments by @zstone1 there because it looked like maintainers do not have write access (not 100% sure though). I hope you don't mind moving the conversation there. "}],"review_discussion":[{"author":"zstone1","file":"theories/convex.v","date":"2022-12-02T22:33:02Z","comment":"This definition misbehaves at the endpoints. In particular, it requires `f` to be be \"differentiable from the left at `a`\". That makes this definition rely on values of `f` outside `[a,b]`. One big consequence is characteristic functions like ``if x \\in `[a,b] then 1 else 0`` fails this definition, as its not derivable at `a` or `b`. For what it's worth, I had an analogous issue with `realfun.v`, see #752 for how I addressed it there. You'll need something slightly different here, though.\r\n\r\nI've seen textbooks take these approaches:\r\n1. Demanding \"continuity up the endpoints\" is one approach\r\n```\r\nforall x, x \\in `]a, b[ -> derivable f x 1.\r\n/\\\r\ncvg (at_right a f^`()) /\\ cvg (at_right b f^`())\r\n```\r\nor some variation of this. However, this implies some continuity of the derivative, which is maybe not ideal.\r\n2. We could change the derivative to use a different topology. One way to do that is add an analog to the ``{within `[a,b], continuous f}`` notation of  ``{within `[a,b], derivable f}``. This would take limits only on the subspace topology. \r\n3. Similarly, but specialized to working in `R`, it should be fine to define it like\r\n```\r\nforall x, x \\in `]a, b[ -> derivable f x 1\r\n/\\\r\n\"differentiable from the right at b\" /\\ \"differentiable from the left at a\"\r\n```\r\nFor some sensible notion of \"left\" and \"right\" derivative. "},{"author":"zstone1","file":"theories/convex.v","date":"2022-12-02T22:46:44Z","comment":"Where do we need the assumption that the range of `f` is `R`? If it's painless, generalizing to a vector space would be quite helpful for me. I'll need some stuff about convexity in both `R` and `R^n` for my work on space-filling curves, so I'm happy to have these results either way."}],"tags":[{"tag":"wontfix/merge","description":"We wont fix this issue/merge this PR, we will close it soon"}],"commits":[{"author":"yoshihiro503","committer":"yoshihiro503","hash":"d68ac34fd5793a5e02d0d2b04e908d28e52f5fd8","message":"Introduce conves\n\nCo-authored-by: Reynald Affeldt <reynald.affeldt@aist.go.jp>","date":"2022-12-09T02:17:54Z"},{"author":"yoshihiro503","committer":"yoshihiro503","hash":"f24badd18375c7d0fd65bcb353575cdb2782e91c","message":"proof of second_drivative_convexf_pt","date":"2022-12-09T02:17:54Z"},{"author":"yoshihiro503","committer":"yoshihiro503","hash":"930fbb0e3794ea9add3857342da965e963a72843","message":"proof of second_derivative_convex_pt","date":"2022-12-09T02:17:54Z"},{"author":"yoshihiro503","committer":"yoshihiro503","hash":"1413bedd403decd853ca2645b2fe04ba7bfc17ed","message":"proof of some lemmas","date":"2022-12-09T02:17:54Z"},{"author":"yoshihiro503","committer":"yoshihiro503","hash":"2dad2013891845a12b63940e571c22abf8160856","message":"prove Admitted lemmas","date":"2022-12-09T02:17:54Z"}]},{"author":"affeldt-aist","number":793,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":77,"deletions":74},{"file":"theories/constructive_ereal.v","status":"M","additions":77,"deletions":74},{"file":"theories/lebesgue_integral.v","status":"M","additions":77,"deletions":74},{"file":"theories/lebesgue_measure.v","status":"M","additions":77,"deletions":74}],"state":"merged","open_date":"2022-11-03T08:48:52Z","update_date":"2022-12-12T11:43:49Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"88aeb98845cbba9671ebaaa3727ac31e04457dcb","message":"fix ErealGenInftyX.G","date":"2022-11-26T02:00:15Z"}]},{"author":"affeldt-aist","number":792,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":33,"deletions":3},{"file":"classical/fsbigop.v","status":"M","additions":33,"deletions":3},{"file":"theories/normedtype.v","status":"M","additions":33,"deletions":3},{"file":"theories/topology.v","status":"M","additions":33,"deletions":3}],"state":"merged","open_date":"2022-11-02T12:43:26Z","update_date":"2022-11-03T13:10:22Z","discussion":[{"author":"CohenCyril","date":"2022-11-02T15:42:57Z","comment":"> My only note is on the addition of another variety of bigop in `topology.v`. Most of the theorems in this file use `{fset I}` + `\\bigcup` (like `filter_bigI`) instead of `{seq I}` + `\\big[setU/set0]`. I can see a benefit to separating the \"definitely finite bigops\" (like `filter_bigI`) from \"maybe infinite bigops\" (like bigcup_open). Among the \"definitely finite bigops\", is there a reason to have both the `{fset I}` and `{seq I}` representations?\r\n\r\nIf the `seq` one is true there is no reason to have the `fset` one (since the `seq` one is more general). But I'm not sure how it relates to this PR... which adds a lemma about a third category of bigop lemmas, the \"valid-only-if-finite bigop, otherwise defaults to neutral\"."},{"author":"zstone1","date":"2022-11-02T17:38:42Z","comment":"Ah, you're right. This is more general. I think there might be some benefit to replace some of the existing fset style lemmas with finite support versions. It might actually simplify things a bit. I'll add an issue for trying it. This looks good then. "}],"review_discussion":[{"author":"CohenCyril","file":"classical/fsbigop.v","date":"2022-11-02T15:12:15Z","comment":"No need to prefix with `finite_set`, lemmas about `fsbig` are supposed to be valid only for finite sets anyways!"},{"author":"CohenCyril","file":"classical/fsbigop.v","date":"2022-11-02T15:13:24Z","comment":"However it matters that it's a big op on `setU` so it it chould be in the name, e.g. `fsbig_setU_set1`."}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"78bca1e2f2a35d68061c04385f54934b8a63e636","message":"T1 <-> finite sets closed","date":"2022-11-03T08:55:25Z"}]},{"author":"Tragicus","number":791,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":6,"deletions":0},{"file":"classical/classical_sets.v","status":"M","additions":6,"deletions":0}],"state":"merged","open_date":"2022-11-01T17:44:15Z","update_date":"2022-11-22T14:37:15Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"hash":"832546515c5fa80c7baa2d2eacb78501029f4c6d","message":"image2_subset","date":"2022-11-01T17:40:00Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"8f4f42a82e24e40744b407bc4a59d6dfb1de8de1","message":"image_subset2 using image_subset","date":"2022-11-13T08:42:27Z"}]},{"author":"hoheinzollern","number":790,"diff_summary":[{"file":".github/pull_request_template.md","status":"A","additions":1764,"deletions":144},{"file":"CHANGELOG_UNRELEASED.md","status":"A","additions":1764,"deletions":144},{"file":"_CoqProject","status":"A","additions":1764,"deletions":144},{"file":"classical/functions.v","status":"A","additions":1764,"deletions":144},{"file":"theories/constructive_ereal.v","status":"A","additions":1764,"deletions":144},{"file":"theories/ereal.v","status":"A","additions":1764,"deletions":144},{"file":"theories/exp.v","status":"A","additions":1764,"deletions":144},{"file":"theories/lebesgue_integral.v","status":"A","additions":1764,"deletions":144},{"file":"theories/lebesgue_measure.v","status":"A","additions":1764,"deletions":144},{"file":"theories/probability.v","status":"A","additions":1764,"deletions":144},{"file":"theories/realfun.v","status":"A","additions":1764,"deletions":144},{"file":"theories/topology.v","status":"A","additions":1764,"deletions":144}],"state":"open","open_date":"2022-10-30T14:22:34Z","update_date":"2023-04-01T05:33:42Z","discussion":[{"author":"affeldt-aist","date":"2023-02-06T11:49:34Z","comment":"Note that PR #516 has changed a bit and that it may be worth rebasing."},{"author":"hoheinzollern","date":"2023-02-08T20:57:35Z","comment":"Rebased, let's discuss the use of Lspaces"}],"review_discussion":[],"tags":[],"commits":[{"author":"zstone1","committer":"zstone1","hash":"21529900f6bfebfc922ef41422aba7f6c9ace76d","message":"fixing quotient mixins","date":"2023-02-07T23:17:21Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"8da770d1defa55a47d5584b9f94e36f5483aedab","message":"fixes naming of topology.v\n\n- fixes #866\n- fixes #867\n- fixes #868","date":"2023-03-14T01:53:45Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"71a9e5ab614093035f6789241a32fbb6c6aef033","message":"fixes #865","date":"2023-03-14T02:36:56Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"f036e8fb5c9b82681356866ac10150ae138b5428","message":"fixes #864","date":"2023-03-14T02:38:36Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"1e7533dcca403b9b952a9776dfdfc3766dbf1525","message":"fix changelog","date":"2023-03-14T03:07:23Z"},{"author":"affeldt-aist","committer":"web-flow","hash":"3d42a9b854c450bbf1155f2be15e19623837b9fb","message":"fubini for s-finite measures (#877)","date":"2023-03-18T23:56:32Z"},{"author":"CohenCyril","committer":"web-flow","hash":"cc7b3e47790767d9e2c1fd1753ea5576cf37d675","message":"Merge pull request #874 from affeldt-aist/issues_20230314\n\nIssues 20230314","date":"2023-03-27T15:53:03Z"},{"author":"CohenCyril","committer":"web-flow","hash":"098102312aef38dcc76dbad3a72368a497da53aa","message":"Merge pull request #841 from zstone1/fix_quotient\n\nFix #839","date":"2023-03-27T16:02:59Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"7eb28e1bfa6085b6e4aaa01817808c3620f3f984","message":"add comment about HB compatibility to pr_template.md","date":"2023-03-28T14:46:59Z"},{"author":"CohenCyril","committer":"web-flow","hash":"725803345a647fd42bd439a5c6d495562240bc10","message":"Merge pull request #884 from affeldt-aist/pr_template_20230327\n\nadd comment about HB compatibility to pr_template.md","date":"2023-03-31T09:38:37Z"},{"author":"affeldt-aist","committer":"web-flow","hash":"ee12aba894e8949a32daa9d2ee72b3a440c0609f","message":"gen exp_fun (#876)\n\n* gen exp_fun\r\n\r\n- rename to power_pow\r\n- fix doc\r\n- add scope to notation\r\n\r\nCo-authored-by: Alessandro Bruni <alessandro.bruni@gmail.com>\r\nCo-authored-by: Takafumi Saikawa <tscompor@gmail.com>\r\n\r\n* add lemma power12_sqrt\r\n\r\n* additional lemmas\r\n\r\n* change power_pos so that 0^0=1\r\n\r\n- so that power_pos and exprn coincide\r\n\r\n* measurable_fun exp ln\r\n\r\n* fix chaneglog\r\n\r\n* add power_pos_intmul proposed by Pierre\r\n\r\n* fix changelog\r\n\r\n---------\r\n\r\nCo-authored-by: Alessandro Bruni <alessandro.bruni@gmail.com>\r\nCo-authored-by: Takafumi Saikawa <tscompor@gmail.com>\r\nCo-authored-by: Alessandro Bruni <brun@itu.dk>","date":"2023-03-31T11:09:42Z"},{"author":"affeldt-aist","committer":"hoheinzollern","hash":"fa5b66985dafe9d1129b44ec461786e69a5d93d1","message":"first take at probability theory\n\nCo-authored-by: Takafumi Saikawa <tscompor@gmail.com>\nCo-authored-by: Alessandro Bruni <alessandro.bruni@gmail.com>","date":"2023-03-31T20:06:20Z"},{"author":"hoheinzollern","committer":"hoheinzollern","hash":"67993aa185f1b1e0ae94c70689dc6f569bb41914","message":"Lemma probability_fin","date":"2023-03-31T20:06:20Z"},{"author":"affeldt-aist","committer":"hoheinzollern","hash":"c28f5967d395cd2e0b49d59326846f893c59e1be","message":"better definition of discrete random variable\n\n- markov, chebyshev","date":"2023-03-31T20:06:20Z"},{"author":"affeldt-aist","committer":"hoheinzollern","hash":"df77fef578d182f085d79b2ca053a3c66950224c","message":"fixes, cleaning","date":"2023-03-31T20:06:20Z"},{"author":"affeldt-aist","committer":"hoheinzollern","hash":"2c5fe716fbf501324f581e2128bad08c7de76f7c","message":"get rid of specialized notations","date":"2023-03-31T20:06:20Z"},{"author":"affeldt-aist","committer":"hoheinzollern","hash":"0117c0ee4482124dcde49fcb49aee4360fb5750e","message":"get rid of specialized notations (cont'd)","date":"2023-03-31T20:06:20Z"},{"author":"affeldt-aist","committer":"hoheinzollern","hash":"a3ce442a8c33e8e92a9066ca53362d4c70de595e","message":"generalize probability_integrable_cst","date":"2023-03-31T20:06:20Z"},{"author":"affeldt-aist","committer":"hoheinzollern","hash":"87d6ebbf2f03109342b77928b5ceb279c079619f","message":"rm 'E notation, mabs and mexp","date":"2023-03-31T20:06:20Z"},{"author":"affeldt-aist","committer":"hoheinzollern","hash":"f97d791cd569ca682d9976dfa4e592b93e930c72","message":"wip","date":"2023-03-31T20:06:20Z"},{"author":"affeldt-aist","committer":"hoheinzollern","hash":"a519436d9f7e1569909b6a5f5cc21ce863a2371e","message":"changelog","date":"2023-03-31T20:06:20Z"},{"author":"affeldt-aist","committer":"hoheinzollern","hash":"5fb1f84ef74eb9b5983f3f0e01aca052e615e3eb","message":"fix changelog","date":"2023-03-31T20:06:20Z"},{"author":"affeldt-aist","committer":"hoheinzollern","hash":"bbd593a087abc5430a599bbcad0f45e7e76523a3","message":"gen expectation_le","date":"2023-03-31T20:06:20Z"},{"author":"affeldt-aist","committer":"hoheinzollern","hash":"de6ae5f9bfe45550e181220d8b667a26d87a06b5","message":"Lp-space (test)","date":"2023-03-31T20:06:20Z"},{"author":"affeldt-aist","committer":"hoheinzollern","hash":"8bfe4844332b59b597a51fdfa1c87e77dc77417f","message":"wip","date":"2023-03-31T20:06:20Z"},{"author":"affeldt-aist","committer":"hoheinzollern","hash":"b752ed97ce099f79f9c3d3f79097585b62d499c0","message":"fixes, cleaning","date":"2023-03-31T20:06:20Z"},{"author":"affeldt-aist","committer":"hoheinzollern","hash":"6139270e94cc90d9bf09cb1fc1312a75916d51d6","message":"complete discrete_expectation\n\nCo-authored-by: Takafumi Saikawa <tscompor@gmail.com>","date":"2023-03-31T20:06:20Z"},{"author":"affeldt-aist","committer":"hoheinzollern","hash":"809fe3441a885681e0db19b864adc653b9add28e","message":"put in better shape to RFC","date":"2023-03-31T20:06:20Z"},{"author":"hoheinzollern","committer":"hoheinzollern","hash":"935189e34f0487043454ddffbc1f33f0458b94a7","message":"start working on Cauchy-Schwarz\nwork on Hoelder's inequality\n\nexpeS, fin_numX (#829)\n\\bar R canonicals for tblattice\n\nCo-authored-by: Quentin Vermande <quentin.vermande@ens.fr>\n\nCo-authored-by: Alessandro Bruni <alessandro.bruni@gmail.com>\nCo-authored-by: Takafumi Saikawa <tscompor@gmail.com>\nCo-authored-by: Reynald Affeldt <affeldt@gmail.com>\n\nadd lemma power12_sqrt\n\nfix and strengthen eq_bigmax and eq_bigmin (#863)\n\nItv (#869)\n\n* Add itv.v\n\nTaking inspiration on signed.v, replacing sign by intervals.\n\n* Add interval multiplication\n\n* Add hints to automatically solve _ <= 1 goals\n\n* Test to see if usable as a replacement for prob\n\n* use notation from mathcomp_extra.v\n\n* changelog and rm redundant code\n\n* prefix duplicated identifiers\n\n---------\n\nCo-authored-by: Reynald Affeldt <reynald.affeldt@aist.go.jp>\n\ncomplete changelog\n\nfubini for s-finite measures (#877)\n\nfixes, cleaning\n\npowere_pos lemmas\n\nfixed `powere_pos` definition\nmore lemmas for `powere_pos`\nprogress in fixing hoelder\n\nwip\n\npowere_pos lemmas\n\ncleanup\n\nup\n\nwip\n\nwip","date":"2023-03-31T20:13:11Z"},{"author":"hoheinzollern","committer":"hoheinzollern","hash":"d0fe87d84741d77e46320cc1447d6068308ebf13","message":"reworked powere_pos","date":"2023-04-01T05:33:26Z"}]},{"author":"hoheinzollern","number":789,"diff_summary":[{"file":"theories/probability.v","status":"M","additions":23,"deletions":0}],"state":"merged","open_date":"2022-10-30T14:15:30Z","update_date":"2022-11-02T02:45:32Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"hoheinzollern","committer":"hoheinzollern","hash":"673a4688f30235e0f7afec132ad7ca6af0c24a25","message":"mul_RV\nprobability_ge0","date":"2022-10-30T12:38:59Z"}]},{"author":"affeldt-aist","number":788,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":61,"deletions":9},{"file":"theories/measure.v","status":"M","additions":61,"deletions":9}],"state":"merged","open_date":"2022-10-28T07:14:47Z","update_date":"2022-11-13T03:43:36Z","discussion":[],"review_discussion":[{"author":"zstone1","file":"theories/measure.v","date":"2022-11-04T14:25:55Z","comment":"```suggestion\r\n    (f : T1 -> bool) (mf : measurable_fun D f) :\r\n```"},{"author":"zstone1","file":"theories/measure.v","date":"2022-11-04T14:27:22Z","comment":"```suggestion\r\nhave mDf : measurable (D `&` [set b | f b]) by exact: mf.\r\n```"},{"author":"zstone1","file":"theories/measure.v","date":"2022-11-04T14:27:38Z","comment":"```suggestion\r\nhave mDNf : measurable (D `&` f @^-1` [set false]) by exact: mf.\r\n```"},{"author":"affeldt-aist","file":"theories/measure.v","date":"2022-11-10T06:14:04Z","comment":"Indeed. I push it in a next commit with a shorter proof."}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"98c0024892d15d221d3cf30c0d9226ae613d2260","message":"measurable_fun_if\n\nCo-authored-by: Zachary Stone <zstonex@gmail.com>","date":"2022-11-10T06:15:38Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"3a6c88ab3f567909ff704333712462a6f3f6fd03","message":"upd changelog","date":"2022-11-10T06:20:15Z"}]},{"author":"affeldt-aist","number":787,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":23,"deletions":11},{"file":"classical/classical_sets.v","status":"M","additions":23,"deletions":11},{"file":"theories/measure.v","status":"M","additions":23,"deletions":11}],"state":"merged","open_date":"2022-10-25T06:36:48Z","update_date":"2022-10-28T00:55:50Z","discussion":[{"author":"zstone1","date":"2022-10-27T14:39:23Z","comment":"Looks good to me, although there a lot of bigop notations. Someone who understands their differences better may have something more substantive to say. "}],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"6ad9e3ec9a229c2546da5a9d21e875e95e347e33","message":"\\bigcup_(i < n) notation","date":"2022-10-25T06:34:21Z"}]},{"author":"zstone1","number":786,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":59,"deletions":1},{"file":"theories/topology.v","status":"M","additions":59,"deletions":1}],"state":"merged","open_date":"2022-10-22T15:17:47Z","update_date":"2023-02-06T15:43:33Z","discussion":[],"review_discussion":[{"author":"CohenCyril","file":"theories/topology.v","date":"2023-01-18T19:35:07Z","comment":"This breaks forgetful inheritance.\r\nPlease provide an alias of Q or encapsulate in a module."},{"author":"zstone1","file":"theories/topology.v","date":"2023-01-18T21:05:55Z","comment":"Aliases are fine. But I'm more concerned that I don't entirely understand your comment. Does the \"Competing Inheritance Paths\" paper have the relevant details?\r\n"}],"tags":[],"commits":[{"author":"zstone1","committer":"zstone1","hash":"5ce1398da4ca56b17803f53c2c636767725406cc","message":"quotient topology","date":"2023-02-06T14:46:18Z"},{"author":"zstone1","committer":"zstone1","hash":"e188f900ae863f5205a5510829535e8a6603ed95","message":"docs","date":"2023-02-06T14:46:18Z"},{"author":"zstone1","committer":"zstone1","hash":"74244098ae1d0d6e2198d7d714682c4805026698","message":"trying to fix build","date":"2023-02-06T14:46:18Z"},{"author":"zstone1","committer":"zstone1","hash":"1938f3b62a7cf441bfcffdd7f4fe4797a2b95d8a","message":"cleaning up proof","date":"2023-02-06T14:46:18Z"},{"author":"zstone1","committer":"zstone1","hash":"23c9f4e24c7e5ba5540a231f77dde9df3cd77616","message":"more general quotients","date":"2023-02-06T14:46:18Z"},{"author":"zstone1","committer":"zstone1","hash":"784cdd15c079ae33d23645b14fac324e9d31cfad","message":"docs","date":"2023-02-06T14:47:47Z"},{"author":"zstone1","committer":"zstone1","hash":"ffa1e38cfe02cb94be6d2403359127a3c088714b","message":"trying to fix build","date":"2023-02-06T14:48:29Z"},{"author":"affeldt-aist","committer":"zstone1","hash":"ad913ffe3e9e930109c411bb2c24043de3155f26","message":"nitpicks","date":"2023-02-06T14:49:04Z"},{"author":"affeldt-aist","committer":"zstone1","hash":"c028d082b613b5e783dc8cb84bb470d66c9fd18c","message":"quotType alias","date":"2023-02-06T14:49:04Z"},{"author":"affeldt-aist","committer":"zstone1","hash":"ff5c7432f861b7eabe263ad9b0119144f5ce14f5","message":"fix changelog","date":"2023-02-06T14:49:04Z"},{"author":"zstone1","committer":"zstone1","hash":"99a461bc6f2aa01786e13f599c395299b858c590","message":"fixing changelog again","date":"2023-02-06T14:52:01Z"}]},{"author":"pi8027","number":785,"diff_summary":[{"file":"README.md","status":"A","additions":132,"deletions":3},{"file":"hierarchy.dot","status":"A","additions":132,"deletions":3},{"file":"hierarchy.png","status":"A","additions":132,"deletions":3}],"state":"merged","open_date":"2022-10-21T18:50:11Z","update_date":"2022-11-13T03:46:02Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"pi8027","committer":"pi8027","hash":"3cafc17e4c52c2dc5d70c3521c02f0d902d1d8d8","message":"A better and up-to-date inheritance diagram","date":"2022-10-21T18:46:24Z"}]},{"author":"affeldt-aist","number":784,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":31,"deletions":14},{"file":"_CoqProject","status":"M","additions":31,"deletions":14},{"file":"classical/set_interval.v","status":"M","additions":31,"deletions":14},{"file":"theories/Make","status":"M","additions":31,"deletions":14},{"file":"theories/lebesgue_measure.v","status":"M","additions":31,"deletions":14},{"file":"theories/set_interval.v","status":"M","additions":31,"deletions":14},{"file":"theories/realfun.v","status":"M","additions":31,"deletions":14}],"state":"merged","open_date":"2022-10-21T06:14:45Z","update_date":"2022-10-26T08:41:37Z","discussion":[{"author":"affeldt-aist","date":"2022-10-21T10:38:55Z","comment":"> You also need to adapt the `Make` files\r\n\r\nWill do asap."},{"author":"proux01","date":"2022-10-21T13:08:36Z","comment":"Done, I also added the missing entries in CHANGELOG_UNREALEASED.md, thanks for the fix."},{"author":"affeldt-aist","date":"2022-10-26T05:21:42Z","comment":"There seem to be two kinds of errors in the CI:\r\n- \"No rule to make target 'real_interval.v', needed by '.Makefile.coq.d'\" (the renamed file)\r\n- \"Error: Unable to local library boolp\" when processing `classical_sets.v`\r\n"},{"author":"proux01","date":"2022-10-26T08:12:39Z","comment":"> There seem to be two kinds of errors in the CI:\r\n\r\n@affeldt-aist sorry, I messed up the Makefile, CI green now."}],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"proux01","hash":"27c5df5707889450ec61cb381ed98a3db51d37e2","message":"rename theories/set_interval to avoid dup","date":"2022-10-26T07:32:00Z"},{"author":"proux01","committer":"proux01","hash":"ae125a740ddca5ba8ee5240f0b2b77f1060f3545","message":"Fix CHANGELOG_UNRELEASED","date":"2022-10-26T07:32:00Z"},{"author":"proux01","committer":"proux01","hash":"5d70a688d495fce1eac5fdf070ace1a742bea21a","message":"Fix theories/Make","date":"2022-10-26T07:32:00Z"},{"author":"proux01","committer":"proux01","hash":"48536acec894fce6176af65c1ec59278b5da8734","message":"Fix Require Export","date":"2022-10-26T07:32:00Z"}]},{"author":"proux01","number":783,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"D","additions":627,"deletions":697},{"file":"_CoqProject","status":"D","additions":627,"deletions":697},{"file":"classical/mathcomp_extra.v","status":"D","additions":627,"deletions":697},{"file":"theories/Make","status":"D","additions":627,"deletions":697},{"file":"theories/altreals/distr.v","status":"D","additions":627,"deletions":697},{"file":"theories/altreals/realseq.v","status":"D","additions":627,"deletions":697},{"file":"theories/altreals/realsum.v","status":"D","additions":627,"deletions":697},{"file":"theories/constructive_ereal.v","status":"D","additions":627,"deletions":697},{"file":"theories/derive.v","status":"D","additions":627,"deletions":697},{"file":"theories/ereal.v","status":"D","additions":627,"deletions":697},{"file":"theories/esum.v","status":"D","additions":627,"deletions":697},{"file":"theories/exp.v","status":"D","additions":627,"deletions":697},{"file":"theories/landau.v","status":"D","additions":627,"deletions":697},{"file":"theories/lebesgue_integral.v","status":"D","additions":627,"deletions":697},{"file":"theories/lebesgue_measure.v","status":"D","additions":627,"deletions":697},{"file":"theories/mathcomp_extra.v","status":"D","additions":627,"deletions":697},{"file":"theories/measure.v","status":"D","additions":627,"deletions":697},{"file":"theories/normedtype.v","status":"D","additions":627,"deletions":697},{"file":"theories/numfun.v","status":"D","additions":627,"deletions":697},{"file":"theories/realfun.v","status":"D","additions":627,"deletions":697},{"file":"theories/reals.v","status":"D","additions":627,"deletions":697},{"file":"theories/sequences.v","status":"D","additions":627,"deletions":697},{"file":"theories/set_interval.v","status":"D","additions":627,"deletions":697},{"file":"theories/signed.v","status":"D","additions":627,"deletions":697},{"file":"theories/topology.v","status":"D","additions":627,"deletions":697},{"file":"theories/trigo.v","status":"D","additions":627,"deletions":697}],"state":"merged","open_date":"2022-10-20T11:52:17Z","update_date":"2022-10-20T12:27:17Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"proux01","committer":"proux01","hash":"d3a545dc55d756cd6e508132551287a62a887bb7","message":"Merge mathcomp_extra.v file from theories into classical","date":"2022-10-20T11:51:41Z"}]},{"author":"affeldt-aist","number":782,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":11,"deletions":7},{"file":"theories/lebesgue_integral.v","status":"M","additions":11,"deletions":7},{"file":"theories/mathcomp_extra.v","status":"M","additions":11,"deletions":7},{"file":"theories/sequences.v","status":"M","additions":11,"deletions":7},{"file":"theories/topology.v","status":"M","additions":11,"deletions":7}],"state":"merged","open_date":"2022-10-20T10:17:29Z","update_date":"2022-10-20T10:40:38Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"d59a9157c738aca0764c119964a9fd90ea73f176","message":"fixes #778\n\nfixes #776","date":"2022-10-20T10:16:03Z"}]},{"author":"affeldt-aist","number":781,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":230,"deletions":188},{"file":"theories/altreals/realseq.v","status":"M","additions":230,"deletions":188},{"file":"theories/altreals/realsum.v","status":"M","additions":230,"deletions":188},{"file":"theories/constructive_ereal.v","status":"M","additions":230,"deletions":188},{"file":"theories/ereal.v","status":"M","additions":230,"deletions":188},{"file":"theories/esum.v","status":"M","additions":230,"deletions":188},{"file":"theories/lebesgue_integral.v","status":"M","additions":230,"deletions":188},{"file":"theories/lebesgue_measure.v","status":"M","additions":230,"deletions":188},{"file":"theories/measure.v","status":"M","additions":230,"deletions":188},{"file":"theories/normedtype.v","status":"M","additions":230,"deletions":188},{"file":"theories/numfun.v","status":"M","additions":230,"deletions":188},{"file":"theories/real_interval.v","status":"M","additions":230,"deletions":188}],"state":"merged","open_date":"2022-10-20T09:58:16Z","update_date":"2022-11-25T13:34:57Z","discussion":[{"author":"affeldt-aist","date":"2022-11-24T10:25:07Z","comment":"I changed `ltey` to `ltry` to indicate the argument is not infinity, the fact that it is about extended reals is clear thanks to the `y`, `ltey` is now a bit more general lemma whose argument \"is\" an extended real, that seems better named and I found the latter lemma is occasionally useful. "}],"review_discussion":[{"author":"CohenCyril","file":"theories/constructive_ereal.v","date":"2022-11-24T20:16:46Z","comment":"```suggestion\r\nLemma ltey x : (x < +oo) = (x != +oo).\r\n```"},{"author":"CohenCyril","file":"theories/constructive_ereal.v","date":"2022-11-24T20:18:25Z","comment":"```suggestion\r\nLemma ltNye x : (-oo < x) = (x != -oo).\r\n```"},{"author":"CohenCyril","file":"theories/lebesgue_integral.v","date":"2022-11-24T20:20:05Z","comment":"Variable binding allows us to write the instead, and I suggest the following renaming:\r\n```suggestion\r\nLemma integral_cstr r : \\int[mu]_(x in D) r%:E = r%:E * mu D.\r\n```"},{"author":"CohenCyril","file":"theories/lebesgue_integral.v","date":"2022-11-24T20:23:28Z","comment":"Am I right this subsumes `integral_cstr`, `integral_csty` and `integral_cstNy`?\r\nIf so please remove them or mark and make them unaccessible from Search and outside this file."}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"d2464a0d3229dd6d9861469beea05d065c68e36c","message":"integral of constant function\n\nCo-authored-by: Takafumi Saikawa <tscompor@gmail.com>\nCo-authored-by: Alessandro Bruni <alessandro.bruni@gmail.com>","date":"2022-11-25T01:36:50Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"2276d59d7da47bd97edc8b60e3a0bd097c443bc6","message":"generalize le_integral_abse\n\nCo-authored-by: Takafumi Saikawa <tscompor@gmail.com>\nCo-authored-by: Alessandro Bruni <alessandro.bruni@gmail.com>","date":"2022-11-25T01:36:52Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"fb30bcbf9fd48c13af6a0618eda43d3da3e433a0","message":"comment from mca meeting, lt0e, ltry, etc.","date":"2022-11-25T01:36:53Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"1af25308fb5338ba4eb3d99ef3de497a1e8c1074","message":"comments for reviews and other minor fixes","date":"2022-11-25T01:48:32Z"}]},{"author":"CohenCyril","number":780,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"A","additions":3650,"deletions":1838},{"file":"classical/classical_sets.v","status":"A","additions":3650,"deletions":1838},{"file":"classical/functions.v","status":"A","additions":3650,"deletions":1838},{"file":"classical/mathcomp_extra.v","status":"A","additions":3650,"deletions":1838},{"file":"etc/changes.awk","status":"A","additions":3650,"deletions":1838},{"file":"etc/changes.sh","status":"A","additions":3650,"deletions":1838},{"file":"theories/Rstruct.v","status":"A","additions":3650,"deletions":1838},{"file":"theories/constructive_ereal.v","status":"A","additions":3650,"deletions":1838},{"file":"theories/derive.v","status":"A","additions":3650,"deletions":1838},{"file":"theories/ereal.v","status":"A","additions":3650,"deletions":1838},{"file":"theories/esum.v","status":"A","additions":3650,"deletions":1838},{"file":"theories/exp.v","status":"A","additions":3650,"deletions":1838},{"file":"theories/landau.v","status":"A","additions":3650,"deletions":1838},{"file":"theories/lebesgue_integral.v","status":"A","additions":3650,"deletions":1838},{"file":"theories/lebesgue_measure.v","status":"A","additions":3650,"deletions":1838},{"file":"theories/measure.v","status":"A","additions":3650,"deletions":1838},{"file":"theories/normedtype.v","status":"A","additions":3650,"deletions":1838},{"file":"theories/real_interval.v","status":"A","additions":3650,"deletions":1838},{"file":"theories/realfun.v","status":"A","additions":3650,"deletions":1838},{"file":"theories/sequences.v","status":"A","additions":3650,"deletions":1838},{"file":"theories/topology.v","status":"A","additions":3650,"deletions":1838},{"file":"theories/trigo.v","status":"A","additions":3650,"deletions":1838}],"state":"merged","open_date":"2022-10-18T16:36:47Z","update_date":"2022-11-09T08:49:00Z","discussion":[{"author":"zstone1","date":"2022-10-18T18:16:23Z","comment":"As usual, I can offer the topologist perspective. I'm pretty sure all these 'tfae' happen because the spaces are total orders in the order topology. Exactly how to define the order topology to make it usable here... I don't know. One thing I've thought about is to define a predicate \r\n```\r\norder_basis (T : ordered) = intervals + rays\r\norder_topology (T : ordered & topological) := forall x, nbhs x = filter_from id [ set A |  x \\in A, A \\in order_basis T]\r\n```\r\nObviously there are a lot of reasons why the above won't compile directly. This appears be begging to become HB structure. \r\n\r\nThen, we'd need to prove that `R`, `\\bar R`, `nat`, are all in the order topology, and that the reverse order has the same topology. Then prove the 'tfae' just once. Do you think it's worth it?"},{"author":"CohenCyril","date":"2022-10-18T18:54:17Z","comment":"@zstone1 Thanks for your insight. I'm not sure it's worth it before HB, but afterwards... I'll like to have this (and so much more...)"},{"author":"CohenCyril","date":"2022-10-28T08:43:57Z","comment":"@affeldt-aist modulo the update of the change log and the deprecated declarations, I think I'm done."},{"author":"CohenCyril","date":"2022-11-02T20:28:20Z","comment":"By starting to turn \"removed\" into \"deprecated\" I uncovered a problem: `cvg_le` and `cvgr_le` are almost nameclashes (there is no reason there is no `r` in the first one, and the statements are too different). I believe the `cvgr` lemmas should be renamed `nbhsr`"},{"author":"CohenCyril","date":"2022-11-07T17:31:04Z","comment":"@affeldt-aist I'm done..."},{"author":"CohenCyril","date":"2022-11-08T10:01:31Z","comment":"@proux01 @zstone1 would you be able to re-review this PR quickly? It already has been reviewed and approved by @affeldt-aist and I changed it slightly (mostly fixing kludges in naming, adding deprecation warnings here and there and making a changelog generator)"},{"author":"proux01","date":"2022-11-08T11:50:01Z","comment":"@CohenCyril I had a very quick look and this looks good to me (but I'm no expert in most of the changes)."},{"author":"proux01","date":"2022-11-08T11:50:26Z","comment":"@CohenCyril would you do the rebase of hierarchy-builder branch once merged?"},{"author":"CohenCyril","date":"2022-11-08T12:05:11Z","comment":"> @CohenCyril would you do the rebase of hierarchy-builder branch once merged?\r\n\r\nOk, no problem"},{"author":"CohenCyril","date":"2022-11-09T08:56:28Z","comment":"Thanks @affeldt-aist @zstone1 and @proux01 for your reviews"}],"review_discussion":[{"author":"affeldt-aist","file":"theories/normedtype.v","date":"2022-10-19T14:19:06Z","comment":"What about `fcvgy_geeEFin`? (The first `e` is a bit redundant with `y`, the inequality is about the extended reals, `%:E` should be clear when we see `EFin`, `P` is maybe implicit.) (It is an attempt to have an identifier a bit more \"readable\".) "},{"author":"affeldt-aist","file":"theories/normedtype.v","date":"2022-10-19T14:21:36Z","comment":"Have you consider `ecvg` instead of `cvge`? That maybe would have seemed more natural to me because `e` as a prefix look a bit like an argument."},{"author":"CohenCyril","file":"theories/normedtype.v","date":"2022-10-20T11:19:46Z","comment":"Because it is an argument... (we take a `\\bar R` filter instead of an `R` filter)"},{"author":"affeldt-aist","file":"theories/normedtype.v","date":"2022-10-20T11:58:01Z","comment":"Rather the type of an argument. This looks much like the positional naming convention we have throughout `ereal.v` files and I guess it is what bothered me. Still `cvg` only has one argument so why not."},{"author":"affeldt-aist","file":"theories/normedtype.v","date":"2022-10-20T11:59:42Z","comment":"The fact that we do not want to write `is_ecvg` is also maybe another point."},{"author":"CohenCyril","file":"theories/normedtype.v","date":"2022-10-20T12:17:55Z","comment":"`e` and `y` are not redundant since there is the exact same lemma with `r` instead of `e`. `EFin` is not relevant either..."},{"author":"affeldt-aist","file":"theories/set_interval.v","date":"2022-10-20T12:26:47Z","comment":"`itv_cpinfty_pinfty` -> `itv_cyy` and so on?"},{"author":"CohenCyril","file":"theories/set_interval.v","date":"2022-10-20T12:27:54Z","comment":"Yes indeed, I didn't touch these yet."},{"author":"affeldt-aist","file":"theories/set_interval.v","date":"2022-10-21T06:22:57Z","comment":"note that PR #784 proposes to rename the file,\r\nlemma renaming can maybe happen there"},{"author":"affeldt-aist","file":"theories/normedtype.v","date":"2022-10-31T09:45:29Z","comment":"It looks like the `f` prefix has been dropped for these lemmas in the last version and I find it a bit better."},{"author":"affeldt-aist","file":"theories/set_interval.v","date":"2022-10-31T09:58:13Z","comment":"since PR #784 has been merged and this PR rebased, I performed the renaming"},{"author":"proux01","file":"theories/constructive_ereal.v","date":"2022-11-08T10:36:44Z","comment":"There should probably be dual lemmas for those (with dual addition `dual_adde`)."},{"author":"proux01","file":"classical/mathcomp_extra.v","date":"2022-11-08T11:48:36Z","comment":"Maybe add a comment to remember to remove that (and the `Require Import BinPos` at the beginning of the file) once mathcomp 1.15.0 becomes the minimum required version."},{"author":"CohenCyril","file":"classical/mathcomp_extra.v","date":"2022-11-08T12:05:54Z","comment":"The comment is 25 lines above"},{"author":"CohenCyril","file":"theories/constructive_ereal.v","date":"2022-11-08T12:06:19Z","comment":"Good catch!"},{"author":"proux01","file":"classical/mathcomp_extra.v","date":"2022-11-08T12:28:12Z","comment":"Indeed, my bad"}],"tags":[],"commits":[{"author":"CohenCyril","committer":"CohenCyril","hash":"2b36613570fc511c54cdabd814fdae752c6cacaa","message":"missing lemmas + stenghening results (WIP)","date":"2022-11-03T15:39:30Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"1f409825120ec4b9eb64b29b8a59d35d9f513d86","message":"Tentative etc/changes.sh + generated output","date":"2022-11-03T15:39:30Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"26228e1fab40b684aff752c4de18275bc48da93a","message":"refine potentially changed changelog\n\n- `sub_dominatedl`, `sub_dominatedr` generalized from `numFieldType` to `numDomainType`\n- `nbhs_image_ERFin` -> `nbhs_image_EFin`\n- fix doc\n- missing space\n- shortened proof","date":"2022-11-07T16:56:04Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"1adf992e9ca8098d1d049abd56323eb748044376","message":"fix bug with mathcomp 1.14","date":"2022-11-07T16:56:50Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"b7f6a1fc2ab54a1068ced910365b7949b049dbe3","message":"Changelog generator\n\n- uses a database to store changes and query\n- uses a awk script to populate the database\n- takes into account Coq deprecation attributes\n- added deprecation warnings\n- provides a functionality to check all changes are in given changelog\n- better treatment of renamings and generalizations\n- various fixes","date":"2022-11-08T14:34:00Z"}]},{"author":"affeldt-aist","number":779,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":290,"deletions":34},{"file":"classical/mathcomp_extra.v","status":"M","additions":290,"deletions":34},{"file":"theories/constructive_ereal.v","status":"M","additions":290,"deletions":34}],"state":"merged","open_date":"2022-10-18T02:39:36Z","update_date":"2022-11-17T14:14:27Z","discussion":[{"author":"proux01","date":"2022-10-21T14:03:56Z","comment":"> Ok that's great, could you also backport this to mathcomp?\r\n\r\nSure\r\nI still have some doubts about the order of arguments in `le_bigmax_ord` and the genericity with respect to the condition P, let me see if I can improve that before merging here."},{"author":"proux01","date":"2022-10-21T16:04:49Z","comment":"@CohenCyril I uniformized the order of arguments and put the widening of range and condition in orthogonal lemmas.\r\n\r\nCI green, I think this can be merged (I'll then open a backporting PR on mathcomp)."},{"author":"proux01","date":"2022-11-07T14:53:05Z","comment":"@CohenCyril ping?"},{"author":"CohenCyril","date":"2022-11-07T15:15:10Z","comment":"> @CohenCyril ping?\r\n\r\nGot sidetracked, posting soon"},{"author":"CohenCyril","date":"2022-11-09T17:18:54Z","comment":"@proux01 new naming suggestions + refactoring."},{"author":"proux01","date":"2022-11-10T15:29:17Z","comment":"@CohenCyril not fond of the option business, sure it is convenient here but I think the best solution would be to add semigroups in the monoid hierarchy as done in the HB port of mathcomp. Adding semigroups will make all `_AC` lemmas disappear. Meanwhile, the use of `oAC` and `big_ACE` tend to reverse the dependency between the corresponding monoid and semigroup lemmas.\r\n\r\nOtherwise, looks good to me, I particularly like the generalization to increasing operators."},{"author":"CohenCyril","date":"2022-11-12T17:14:30Z","comment":"> @CohenCyril not fond of the option business, sure it is convenient here but I think the best solution would be to add semigroups in the monoid hierarchy as done in the HB port of mathcomp. Adding semigroups will make all `_AC` lemmas disappear. Meanwhile, the use of `oAC` and `big_ACE` tend to reverse the dependency between the corresponding monoid and semigroup lemmas.\r\n\r\nI agree with you that the \"option buisness\" is not useful in a context where mathcomp law hierarchy is generalize to  semigroups. However you already extended mathcomp with the `_AC` lemmas so I did not feel the need to reprove them here and and I went for the shortcut of `oAC` to import the few required ones here in `mathcomp_extra`, and these specific proofs will disapear as soon as `mathcomp 1.16` is required for mathcomp analysis.\r\n\r\nMeanwhile, the `oAC` buisness is not strictly necessary but it's a fun example of left adjoint to the forgetful functor from monoids to semigroups, how it can be used to derive theory from a more powerful one and could be very useful in a context where a monoid is really needed... Hence I advise to port it to mathcomp but not to port the proofs that I did to generalize results from monoid to semigroups, but to keep the ones you already did in mathcomp master..."},{"author":"proux01","date":"2022-11-12T17:29:57Z","comment":"Ok, let's go for that solution. If you are happy with the current state, I let you approve the PR and I'll merge it by the end of the week. I'll then be able to do the backporting to mathcomp.\r\n"}],"review_discussion":[{"author":"proux01","file":"theories/constructive_ereal.v","date":"2022-10-18T07:59:42Z","comment":"Let's make it commutative while we are at it.\r\nThe same could also be made for mine."},{"author":"proux01","file":"theories/constructive_ereal.v","date":"2022-10-18T08:20:48Z","comment":"Can't we get something more generic like\r\n```suggestion\r\nLemma lee_bigmax_seq (I : eqType) s s' P P' (F : I -> \\bar R) :\r\n  {subset [seq i <- s | P i] <= [seq i <- s' | P' i]} ->\r\n  \\big[maxe/-oo]_(i <- s | P i) F i <= \\big[maxe/-oo]_(i <- s' | P' i) F i.\r\n```\r\nfrom which this would be derived? (it should also probably have a P (which would be predT in trivial cases))\r\n\r\nWe could also have lee_bigmax_nat while at it\r\n\r\nAnd similar lemmas for mine"},{"author":"affeldt-aist","file":"theories/constructive_ereal.v","date":"2022-10-19T07:56:44Z","comment":"I addressed the easy part of your comment but not the generalization to `seq`."},{"author":"CohenCyril","file":"theories/constructive_ereal.v","date":"2022-10-20T12:35:34Z","comment":"Isn't it a generic lemma for ordered types with a bottom element?"},{"author":"proux01","file":"theories/constructive_ereal.v","date":"2022-10-20T12:38:56Z","comment":"I think we don't even need the bottom element. I'm having a look."},{"author":"proux01","file":"theories/constructive_ereal.v","date":"2022-10-21T13:34:15Z","comment":"Sorry for the delay, this can indeed be generalized to ordered types. Done and put more general lemma in mathcomp_extra.v. Once this is merged, I should do a backporting PR on mathcomp."},{"author":"CohenCyril","file":"classical/mathcomp_extra.v","date":"2022-10-21T16:17:31Z","comment":"It would make sense to have versions of the other lemmas including the weakening of the predicate...\r\nOf course it's juste a combination via transitivity (although one should do it with the smallest sequence / range / ordinal / set)"},{"author":"CohenCyril","file":"classical/mathcomp_extra.v","date":"2022-10-21T16:19:12Z","comment":"What about `le_bigmax_in` \r\n```coq\r\n\\big[max/x0]_(i in A | P i) F i <= \\big[max/x0]_(i in A | P i) F i.\r\n```\r\n(which is a weakening of `le_bigmax_condW`)"},{"author":"CohenCyril","file":"classical/mathcomp_extra.v","date":"2022-10-21T16:20:06Z","comment":"Is the `W` necessary? (to avoid a conflict for example?), if not we could just remove it\r\n```suggestion\r\nLemma le_bigmax_cond x0 (I : eqType) s (P P' : pred I) (F : I -> T) :\r\n```"},{"author":"proux01","file":"classical/mathcomp_extra.v","date":"2022-10-23T17:31:52Z","comment":"I guess\r\n```\r\n\\big[max/x0]_(i in A | P i) F i <= \\big[max/x0]_(i in A | P' i) F i.\r\n```\r\nDone"},{"author":"proux01","file":"classical/mathcomp_extra.v","date":"2022-10-23T17:33:01Z","comment":"Unfortunately, there is already a\r\n```\r\nLemma le_bigmax_cond j P F : P j -> F j <= \\big[max/x]_(i | P i) F i.\r\n```\r\n(not yet backported to mathcomp though, it would then be pretty easy to change)"},{"author":"CohenCyril","file":"classical/mathcomp_extra.v","date":"2022-10-24T08:40:01Z","comment":"> Unfortunately, there is already a\r\n> \r\n> ```\r\n> Lemma le_bigmax_cond j P F : P j -> F j <= \\big[max/x]_(i | P i) F i.\r\n> ```\r\n> \r\n> (not yet backported to mathcomp though, it would then be pretty easy to change)\r\n\r\ngiven that `leq_bigmax_cond` is already in mathcomp, it's not a good idea to change it."}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"proux01","hash":"847ad67620161ad80d14c1414a08a78aaeca7262","message":"bigmax for ereals\n\nCo-authored-by: IshiguroYoshihiro\nCo-authored-by: Takafumi Saikawa <tscompor@gmail.com>","date":"2022-11-17T10:01:20Z"},{"author":"affeldt-aist","committer":"proux01","hash":"db433bf85de75cc3c511c38e23b4953ba2bc79f6","message":"gen lee_bigmax_ord, similar lemmas for mine","date":"2022-11-17T10:01:20Z"},{"author":"proux01","committer":"proux01","hash":"5bc4f4d39da83251080dc2d130f85abdec979202","message":"Generalize some bigmax/bigmin lemmas","date":"2022-11-17T10:01:20Z"},{"author":"proux01","committer":"proux01","hash":"d4690a873ee8792e47b15220c1691e76c7e90b22","message":"Generalize lee_bigmax_ord","date":"2022-11-17T10:01:20Z"},{"author":"proux01","committer":"proux01","hash":"2de9928069801832b46badd86def37470a8cef6a","message":"Add lemmas le_bigmax_condW le_bigmin_condW","date":"2022-11-17T10:01:20Z"},{"author":"proux01","committer":"proux01","hash":"2f0e55c05de9eccaf770078f8f915086a6bc4073","message":"Uniformize order of arguments","date":"2022-11-17T10:01:20Z"},{"author":"proux01","committer":"proux01","hash":"9ecf7334d24af248605698d0e15c6be66c031cab","message":"Add lemmas combining rane and condition widening","date":"2022-11-17T10:01:20Z"},{"author":"proux01","committer":"proux01","hash":"35c916943fb77831555cd8a6b49ec3c40cad0a3f","message":"Add le_bimax_inW","date":"2022-11-17T10:01:20Z"},{"author":"CohenCyril","committer":"proux01","hash":"7ccdaa3f60d2d3633fbf644e91b559b6cabaa9e4","message":"Refactor theory of bigmax and bigmin\n\n- convert an AC op T -> T -> T to a com_law on option T.\n- general theory of increasing operator, applied to bigmin & bigmax","date":"2022-11-17T10:01:20Z"}]},{"author":"affeldt-aist","number":777,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"A","additions":720,"deletions":0},{"file":"_CoqProject","status":"A","additions":720,"deletions":0},{"file":"classical/classical_sets.v","status":"A","additions":720,"deletions":0},{"file":"theories/charge.v","status":"A","additions":720,"deletions":0},{"file":"theories/sequences.v","status":"A","additions":720,"deletions":0}],"state":"open","open_date":"2022-10-18T02:21:46Z","update_date":"2023-04-07T05:23:36Z","discussion":[{"author":"affeldt-aist","date":"2023-03-19T00:20:18Z","comment":"@IshiguroYoshihiro could you also take a look?"},{"author":"affeldt-aist","date":"2023-04-07T05:23:10Z","comment":"> @IshiguroYoshihiro could you also take a look?\r\n\r\nping"}],"review_discussion":[],"tags":[{"tag":"enhancement :sparkles:","description":"This issue/PR is about adding new features enhancing the library"},{"tag":"TODO: HB port","description":"This PR should be ported to the HB branch as well. Remove this label when an issue or PR is created."}],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"b806e0e2a188b17f39e41659e0b3742f89d57636","message":"tentative proof of Hahn decomposition theorem\n\n- introduces signed measures\n\nCo-authored-by: IshiguroYoshihiro","date":"2023-03-19T00:10:56Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"7acc90a6751b1a24574c041c02bc38e09b2bfa46","message":"upd wrt master, minor simplications","date":"2023-03-19T00:10:56Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"45b9f472eb22f368ea5df0a9871ff2cdb5e2a7a2","message":"rename signed measure to charge","date":"2023-03-19T00:10:56Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"5eca41df4e0c905ad13f35bdbdfbfd201f4d721b","message":"czero, cscale","date":"2023-03-19T00:10:56Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"90904ea760fb6cbb80c809b8feddcc2fc0623d03","message":"rebase wrt finite_measure","date":"2023-03-19T00:10:56Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"cbba235b0e2fd5759e9a338cdf2969d83dc4a992","message":"fix, clean, doc, changelog","date":"2023-03-19T00:12:21Z"}]},{"author":"affeldt-aist","number":774,"diff_summary":[{"file":"theories/qbs.v","status":"A","additions":128,"deletions":0}],"state":"open","open_date":"2022-10-14T10:36:13Z","update_date":"2023-03-27T16:05:40Z","discussion":[{"author":"CohenCyril","date":"2023-03-27T16:05:39Z","comment":"I believe this should retarget the hiearchy-builder branch"}],"review_discussion":[],"tags":[{"tag":"experiment :test_tube:","description":"This issue/PR is very experimental"},{"tag":"HB only","description":""}],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"42f20a43bf9d8a59656da4209688b12897e12ac6","message":"qbs?","date":"2022-10-14T10:34:03Z"}]},{"author":"zstone1","number":773,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":17,"deletions":0},{"file":"theories/normedtype.v","status":"M","additions":17,"deletions":0}],"state":"merged","open_date":"2022-10-14T05:02:09Z","update_date":"2022-10-17T15:41:53Z","discussion":[{"author":"CohenCyril","date":"2022-10-17T14:38:00Z","comment":"I will do one more fix"},{"author":"zstone1","date":"2022-10-17T14:39:38Z","comment":"Just rebased and moved it under `subset_closed_ball`. I'll wait on your fix to merge. "}],"review_discussion":[{"author":"CohenCyril","file":"CHANGELOG_UNRELEASED.md","date":"2022-10-17T14:43:09Z","comment":"```suggestion\r\n  + lemmas `closed_ballR_compact` and `locally_compactR` \r\n```"}],"tags":[],"commits":[{"author":"zstone1","committer":"zstone1","hash":"173940828981c33e9696359da3c6546feaa92069","message":"R is locally compact","date":"2022-10-17T14:36:48Z"},{"author":"zstone1","committer":"zstone1","hash":"a6e219f94dc6c24c57b914577f288ad97a42371c","message":"changelog","date":"2022-10-17T14:36:48Z"},{"author":"CohenCyril","committer":"zstone1","hash":"04f85afcb6c36953068a2e5786422301bd934296","message":"Simpler proof","date":"2022-10-17T14:36:48Z"},{"author":"affeldt-aist","committer":"zstone1","hash":"67dcfcbfb48ec37bae9944a9c6286453a07c680a","message":"simpler proof?","date":"2022-10-17T14:36:48Z"},{"author":"zstone1","committer":"zstone1","hash":"1f9354dc2d1750522d7484bb2bf5c0e8cb11a21b","message":"moving proof","date":"2022-10-17T14:36:48Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"a316f493b379b434a9f1d368c2216b969f9d75e0","message":"extract compactness of closed_ball from the proof of locally_compactR","date":"2022-10-17T14:39:27Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"ae743cda68cc0e158607bda5adf1bdaf8ce58728","message":"extract compactness of closed_ball from the proof of locally_compactR","date":"2022-10-17T14:41:13Z"},{"author":"zstone1","committer":"web-flow","hash":"037fff531369052406453644284baa0b23ba5e18","message":"Update CHANGELOG_UNRELEASED.md\n\nCo-authored-by: Cyril Cohen <CohenCyril@users.noreply.github.com>","date":"2022-10-17T14:44:48Z"}]},{"author":"affeldt-aist","number":772,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":78,"deletions":10},{"file":"theories/sequences.v","status":"M","additions":78,"deletions":10}],"state":"merged","open_date":"2022-10-13T01:14:50Z","update_date":"2022-10-18T17:06:31Z","discussion":[{"author":"CohenCyril","date":"2022-10-16T10:12:31Z","comment":"Also the condition `u i > 0` could be restricted to \"near `\\oo`\""},{"author":"CohenCyril","date":"2022-10-18T16:32:59Z","comment":"It seems that I hijacked this PR."},{"author":"CohenCyril","date":"2022-10-18T16:34:05Z","comment":"@affeldt-aist I will move my changes to another PR. I'll truncate this one at e61b452d0b7f2b099911c823dfac40c2585adb65 and merge"},{"author":"CohenCyril","date":"2022-10-18T16:37:18Z","comment":"Opened https://github.com/math-comp/analysis/pull/780"},{"author":"CohenCyril","date":"2022-10-18T16:47:26Z","comment":"Rebased"},{"author":"CohenCyril","date":"2022-10-18T16:48:08Z","comment":"Rebase, merge when CI passes"}],"review_discussion":[{"author":"CohenCyril","file":"theories/sequences.v","date":"2022-10-17T10:49:15Z","comment":"This is actually neither a generalization nor a weakening. The following are all equivalent:\r\n1. `u --> +oo`\r\n2. `forall A, \\forall n \\near \\oo, A%:E <= u_ n`\r\n3. `\\forall A \\near +oo, \\forall n \\near \\oo, A%:E <= u_ n`\r\n\r\nWhen faced with 1.:\r\n- as a goal it's actually better to turn it into 3., then you can use `near=> A` and assume `A` to be as large as you need.\r\n- but as an hypothesis, it's better to get 2., so you can apply it to anything without any constraint on `A`"},{"author":"CohenCyril","file":"theories/sequences.v","date":"2022-10-17T10:50:28Z","comment":"Maybe we should actually write it\r\n```suggestion\r\n  [<-> u_ --> +oo,\r\n       forall A, \\forall n \\near \\oo, A%:E <= u_ n &\r\n       \\forall A \\near +oo, \\forall n \\near \\oo, A%:E <= u_ n ]\r\n```\r\n?"},{"author":"CohenCyril","file":"theories/sequences.v","date":"2022-10-17T10:52:54Z","comment":"Rewrite with `[<-> ..., ... ]` and merge with `cvgPpinfty_lt_near` ?"},{"author":"CohenCyril","file":"theories/sequences.v","date":"2022-10-17T10:53:08Z","comment":"And the same for everything here?"}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"CohenCyril","hash":"277e5bba4b07394979554b29965ee9ff5512b6b8","message":"inv_cvg","date":"2022-10-18T16:41:13Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"cc88de50b4933e87eaff598eb52d1231ce48194d","message":"missing lemmas + stenghening results","date":"2022-10-18T16:41:13Z"}]},{"author":"affeldt-aist","number":771,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":5,"deletions":0},{"file":"classical/classical_sets.v","status":"M","additions":5,"deletions":0}],"state":"merged","open_date":"2022-10-13T00:50:27Z","update_date":"2022-10-14T11:27:31Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"f59277c6fdb272d11676876a142d27328089b322","message":"finite version of bigcup_sup","date":"2022-10-13T00:49:13Z"}]},{"author":"affeldt-aist","number":770,"diff_summary":[{"file":"theories/cexp.v","status":"A","additions":80,"deletions":0}],"state":"open","open_date":"2022-10-12T11:34:32Z","update_date":"2023-03-15T14:43:21Z","discussion":[],"review_discussion":[],"tags":[{"tag":"question :question:","description":"There is an unanswered question here"}],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"d8e43f5a9a4b086e01cb6d82a047a11fecede52b","message":"tentative proof of exp\n\nCo-authored-by: Takafumi Saikawa <tscompor@gmail.com>\nCO-authored-by: zstone1 <zstonex@gmail.com>","date":"2022-10-12T11:31:55Z"}]},{"author":"hoheinzollern","number":769,"diff_summary":[{"file":"theories/probability.v","status":"M","additions":121,"deletions":0}],"state":"open","open_date":"2022-10-11T13:24:20Z","update_date":"2023-03-23T12:08:52Z","discussion":[{"author":"zstone1","date":"2022-10-11T17:57:43Z","comment":"I'm very happy to see more specialized convergences. I will propose an alternate approach: to build a topology on `{RV P >-> R}` that induces this convergence. This is the approach I took for relating uniform, pointwise, and compact convergence on function spaces in `topology.v`, and I think it turned out pretty well.\r\n\r\nThe benefit of the approach is access to the wealth of general topology lemmas and notations. For example, you need a topology to even state that \"expected value is continuous from `{RV P >-> R}` to `R`\". The main downside of the approach is it takes extra effort, and sometimes the topologies are arcane (in this case it appears to be a simple metric, not too bad). I see three options\r\nA. Define the convergence as above, and prove it's backed by a topology\r\nB. Define the topology, and prove the above property as a lemma\r\nC. Not build underlying topology at all (you never actually need it to prove law of large numbers, CLT, etc). \r\n\r\nTo be concrete, wikipedia claims the metric `d(x,y) := E(min(x => |X(x) - Y(x)|, 1)` induces \"convergence in probability\". Also according to wikipedia, the \"vague topology\" should induce \"convergence in distribution\"."},{"author":"zstone1","date":"2022-10-12T00:07:38Z","comment":"As an aside, today I was quite surprised to learn that \"almost everywhere convergence\" is [not topological](http://ordman.net/MathResearch/1966A.pdf). So while it looks like we could define a \"filteredType\" for it, we certainly cannot define a `topologicalType` for it."},{"author":"t6s","date":"2022-11-17T05:39:27Z","comment":"> As an aside, today I was quite surprised to learn that \"almost everywhere convergence\" is [not topological](http://ordman.net/MathResearch/1966A.pdf). So while it looks like we could define a \"filteredType\" for it, we certainly cannot define a `topologicalType` for it.\r\n\r\nThe notion of convergence spaces might be useful?\r\nhttps://ncatlab.org/nlab/show/convergence+space"},{"author":"affeldt-aist","date":"2023-01-12T14:49:31Z","comment":"@hoheinzollern I have updated PR #516 so that we should be able to rebase and only keep the `Section cvg_random_variable`."}],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"0f3bf91bd7729147b01bbf92ff56e55cccaafbfc","message":"first take at probability theory\n\nCo-authored-by: Takafumi Saikawa <tscompor@gmail.com>\nCo-authored-by: Alessandro Bruni <alessandro.bruni@gmail.com>","date":"2022-12-01T06:35:45Z"},{"author":"hoheinzollern","committer":"hoheinzollern","hash":"ff49fbc221b8932395dba5e7681f675cffb42508","message":"Convergence definition","date":"2022-12-01T07:31:44Z"},{"author":"hoheinzollern","committer":"hoheinzollern","hash":"24eb81021f48d0ebe06715b094427ff6cfebce5f","message":"Added Markov's and Chebyshev's inequalities\n\nLemma expectation_le\n\nCo-authored-by: Takafumi Saikawa <tscompor@gmail.com>\nCo-authored-by: Reynald Affeldt <reynald.affeldt@aist.go.jp>","date":"2022-12-01T07:31:59Z"},{"author":"hoheinzollern","committer":"hoheinzollern","hash":"eb72e1e9cc9385f6f754c2a82ca9b9bd96073167","message":"wip","date":"2022-12-08T12:51:47Z"},{"author":"hoheinzollern","committer":"hoheinzollern","hash":"0133f817de45595489134d3be938d28f548797e1","message":"wip","date":"2022-12-08T13:07:08Z"},{"author":"hoheinzollern","committer":"hoheinzollern","hash":"5969c05b3315f1047efb66a19282441b0a63f799","message":"wip","date":"2022-12-09T10:04:33Z"},{"author":"hoheinzollern","committer":"hoheinzollern","hash":"16b44bed5f94410a474ebd40c147fce8173ff8ee","message":"wip","date":"2022-12-09T11:55:13Z"},{"author":"hoheinzollern","committer":"t6s","hash":"45e27a3d1192ff0b754b27dc08315af94765ce5a","message":"- Convergence\n- Markov's and Chebyshev's inequalities\n- wip","date":"2023-03-22T09:29:23Z"},{"author":"t6s","committer":"t6s","hash":"a0094c940a5b078d5706ecc2a14da24b4e09397f","message":"draft on convergences for random variables","date":"2023-03-22T10:37:05Z"},{"author":"t6s","committer":"t6s","hash":"b49a2a8f7f0c615b407efb6bb1885466ca94fa92","message":"define and use (esup : set R -> \\bar R)","date":"2023-03-22T13:42:25Z"},{"author":"hoheinzollern","committer":"web-flow","hash":"5dfac4e524ee50c312c91502a5bf5a59e6f66c11","message":"Merge branch 'probabilistic_convergence' into prob_cvg","date":"2023-03-22T13:51:22Z"},{"author":"hoheinzollern","committer":"web-flow","hash":"bb0fb40035cd348103fd8761854fed3549919cb6","message":"Merge pull request #2 from t6s/prob_cvg\n\nconvergence in probability","date":"2023-03-23T12:08:49Z"}]},{"author":"zstone1","number":768,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":224,"deletions":73},{"file":"classical/boolp.v","status":"M","additions":224,"deletions":73},{"file":"classical/classical_sets.v","status":"M","additions":224,"deletions":73},{"file":"theories/normedtype.v","status":"M","additions":224,"deletions":73},{"file":"theories/sequences.v","status":"M","additions":224,"deletions":73},{"file":"theories/topology.v","status":"M","additions":224,"deletions":73}],"state":"merged","open_date":"2022-10-10T21:46:22Z","update_date":"2023-02-06T21:13:16Z","discussion":[{"author":"affeldt-aist","date":"2022-10-26T01:37:14Z","comment":"Shouldn't `weakT` be a definition instead of a let?\r\nWhen queried outside of the section, the statement of `weak_sep_cvg`\r\nreveals the type of `x` as the unfolded version of `weakT`, which might be difficult to read.\r\n"},{"author":"affeldt-aist","date":"2022-10-26T01:43:45Z","comment":"During the course of a few proofs, there are goals that look obvious but that aren't because the relevant information\r\nis in the type and is not displayed (e.g.,  `F --> x -> F --> x` in `weak_sep_cvg`).\r\nThe issue is not localized to the proof. When queried outside of the section, the statements of, e.g.,\r\n`weak_sep_nbhsE`, `weak_sep_openE`, `join_product_weak` display trivial-looking equalities.\r\nDon't we have any trick to have a better display?\r\nGiven how rich `topology.v` has become, we should maybe consider something to achieve disambiguation.\r\nMaybe on the model of `display`'s has used in `order.v` or for measure theory.\r\n"},{"author":"zstone1","date":"2022-10-26T02:14:43Z","comment":"> goals that look obvious but that aren't\r\n\r\nYes, it's getting pretty bad. While proving things I find I am frequently switching \"show notations\", \"show implicit arguments\" and \"show implicit conversions\" off an on in vscode. It's pretty disruptive to the process.\r\n\r\n>Maybe on the model of display's has used in order.v or for measure theory.\r\n\r\nCyril mentioned something along these lines in https://github.com/math-comp/analysis/issues/758. It sounds great. It seems like `topology.v` is due an overhaul sometime soon. I have some thoughts on the matter, but it makes sense for #698 to land first, rather than add in new ideas while also porting the old stuff. "},{"author":"affeldt-aist","date":"2022-10-26T08:33:38Z","comment":"> > goals that look obvious but that aren't\r\n> \r\n> Yes, it's getting pretty bad. While proving things I find I am frequently switching \"show notations\", \"show implicit arguments\" and \"show implicit conversions\" off an on in vscode. It's pretty disruptive to the process.\r\n\r\nI tried to add displays to the type of topologies so that `open` is displayed as `d.-open` for a topology of type `topologicalType d`.\r\nYou can observe the difference by looking at the lemma `continuousP` for example in\r\nhttps://github.com/zstone1/analysis/pull/2 .\r\nI wanted to go as far as `weak_sep_openE` to see if we can make a difference but that won't be for today.\r\nI am not sure whether it is necessary to propagate the display information up in the hierarchy until complete spaces, @CohenCyril ? (In which case, I might be stuck because of that.)\r\n\r\n> > Maybe on the model of display's has used in order.v or for measure theory.\r\n> \r\n> Cyril mentioned something along these lines in #758. It sounds great. It seems like `topology.v` is due an overhaul sometime soon. I have some thoughts on the matter, but it makes sense for #698 to land first, rather than add in new ideas while also porting the old stuff.\r\n\r\nI was under the impression that the design of displays is mostly orthogonal to the strategy for packed classes (manual or HB) because the display information is essentially passed around without much fiddling. Moreover, I am not sure that displays will solve all the problems (is it the solution for a better display for filters? I don't know). So maybe it might be worth improving the situation at least for `open` and `nbhs` as soon as possible.\r\n\r\nIn any case, I draft-PRed my attempt so that it does not get lost.\r\n\r\n\r\n"},{"author":"zstone1","date":"2023-01-02T17:19:00Z","comment":"Also for this one, is it ready to go with the new notation?"}],"review_discussion":[],"tags":[],"commits":[{"author":"zstone1","committer":"zstone1","hash":"8f5020c5ad085dfeebe1a3006cb583e4217e7a3a","message":"swapping machines","date":"2023-02-06T16:13:53Z"},{"author":"zstone1","committer":"zstone1","hash":"b077c1f4bb127680416d67a609556b63141e485c","message":"proof of open map","date":"2023-02-06T16:13:53Z"},{"author":"zstone1","committer":"zstone1","hash":"fcdaeffa9a7d36d5a4c04b05c0dca0edc56565e1","message":"hausdorff accessible","date":"2023-02-06T16:13:53Z"},{"author":"zstone1","committer":"zstone1","hash":"44ffa1663f653d1ea935deb412b2bfda1b8d4244","message":"weak products equivalent","date":"2023-02-06T16:13:53Z"},{"author":"zstone1","committer":"zstone1","hash":"687de136bd8b2d70dbae5a3b18508840c722062d","message":"changelog","date":"2023-02-06T16:13:53Z"},{"author":"zstone1","committer":"zstone1","hash":"534fe0818cc26710ec81522a307c6f592f86fa8f","message":"strengthen join_product_weak","date":"2023-02-06T16:13:53Z"},{"author":"zstone1","committer":"zstone1","hash":"8607827305a9d4313f8722e40c9e3bb40481201d","message":"cleaning up proofs","date":"2023-02-06T16:13:53Z"},{"author":"affeldt-aist","committer":"zstone1","hash":"a6ff41ae66bc6b1f0f01f458b6c1068bdc561e21","message":"typos","date":"2023-02-06T16:13:53Z"},{"author":"zstone1","committer":"zstone1","hash":"de839b1a05d87660fe3c96fde15ac897da7cebb6","message":"adding local notations for proof legibility","date":"2023-02-06T16:13:53Z"},{"author":"zstone1","committer":"zstone1","hash":"94e8ce1eb207f4eee32f43406a46297d6f0b21fd","message":"merging product stuff","date":"2023-02-06T16:13:53Z"},{"author":"zstone1","committer":"zstone1","hash":"8d830991168ecd92144f1221693f38c94e9e6376","message":"fixing changelog","date":"2023-02-06T16:13:54Z"},{"author":"affeldt-aist","committer":"zstone1","hash":"d5bc8566457a18357a4d5dea5ace4a7ee2a60ad4","message":"specialized conjunctions to use less brackets and splits","date":"2023-02-06T16:13:54Z"},{"author":"zstone1","committer":"zstone1","hash":"e81e9adcc84a35565e268ee824b0c85aa702c80d","message":"fixing grammar","date":"2023-02-06T16:13:54Z"},{"author":"zstone1","committer":"zstone1","hash":"f38da333f4afbe0489a1d1431eed748b18512600","message":"fix changelog","date":"2023-02-06T16:16:46Z"},{"author":"zstone1","committer":"zstone1","hash":"bc54f7aeaa040c434aeb14f53cd382869d37461b","message":"fixing build","date":"2023-02-06T20:41:51Z"},{"author":"zstone1","committer":"zstone1","hash":"6e5516b2f4fc8f3c4363e81e8ab7d9292859a185","message":"more build fixes","date":"2023-02-06T20:57:35Z"}]},{"author":"affeldt-aist","number":767,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":164,"deletions":168},{"file":"theories/lebesgue_integral.v","status":"M","additions":164,"deletions":168},{"file":"theories/lebesgue_measure.v","status":"M","additions":164,"deletions":168},{"file":"theories/measure.v","status":"M","additions":164,"deletions":168}],"state":"merged","open_date":"2022-10-07T13:05:15Z","update_date":"2022-11-25T01:13:43Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"e4275ec9fb955322822e1f7a56d06b7cddf85471","message":"fixes #745","date":"2022-11-25T00:20:26Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"447e2b22480ccdf5fa8e55dcf5bb8f5d83078085","message":"Context rather than Variables","date":"2022-11-25T00:20:26Z"}]},{"author":"affeldt-aist","number":766,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":4,"deletions":1},{"file":"theories/topology.v","status":"M","additions":4,"deletions":1}],"state":"merged","open_date":"2022-10-07T12:46:13Z","update_date":"2022-10-07T13:47:51Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"a2d07b499b4e64482936c845d681b105012f9087","message":"fixes #746","date":"2022-10-07T12:45:36Z"}]},{"author":"affeldt-aist","number":765,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":30,"deletions":6},{"file":"theories/lebesgue_measure.v","status":"M","additions":30,"deletions":6}],"state":"merged","open_date":"2022-10-07T12:37:30Z","update_date":"2022-10-16T07:19:25Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"0929e3092a264acadf97df3474cce25353eb0d6f","message":"salgebra gen. by ]-oo,x[","date":"2022-10-16T06:43:13Z"}]},{"author":"hoheinzollern","number":764,"diff_summary":[{"file":"theories/lebesgue_stieltjes_measure.v","status":"M","additions":4,"deletions":4}],"state":"closed","open_date":"2022-10-07T10:03:05Z","update_date":"2022-10-10T11:48:16Z","discussion":[{"author":"CohenCyril","date":"2022-10-10T11:48:16Z","comment":"The current phrasing is already good. (cf https://github.com/math-comp/analysis/pull/677#discussion_r989981330)"}],"review_discussion":[{"author":"proux01","file":"theories/lebesgue_stieltjes_measure.v","date":"2022-10-07T10:50:01Z","comment":"```suggestion\r\n  exists d : {posnum R}, f (a + d%:num) <= f a + e%:num.\r\n```"}],"tags":[],"commits":[{"author":"hoheinzollern","committer":"hoheinzollern","hash":"08bf2afc292e847c73360fd90f974a0c3948db1a","message":"wip","date":"2022-10-07T09:59:08Z"}]},{"author":"zstone1","number":763,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":132,"deletions":13},{"file":"theories/lebesgue_measure.v","status":"M","additions":132,"deletions":13},{"file":"theories/real_interval.v","status":"M","additions":132,"deletions":13},{"file":"theories/topology.v","status":"M","additions":132,"deletions":13}],"state":"merged","open_date":"2022-10-07T02:06:52Z","update_date":"2023-02-07T17:12:00Z","discussion":[{"author":"zstone1","date":"2023-01-02T17:18:25Z","comment":"Is there anything else required to merge this, or is this ready for an approval?"}],"review_discussion":[],"tags":[],"commits":[{"author":"zstone1","committer":"zstone1","hash":"5225b3cf08cfd0f210eef67168ea1acf913f9e6f","message":"proving sups preserve countable ent","date":"2023-02-07T16:15:30Z"},{"author":"zstone1","committer":"zstone1","hash":"da3025aa8875546f4c014a740dd6b31f95b9acdd","message":"proof going through","date":"2023-02-07T16:15:30Z"},{"author":"zstone1","committer":"zstone1","hash":"444642320e09590540ddb88b8a378b18b645e4a5","message":"unused proofs","date":"2023-02-07T16:15:30Z"},{"author":"zstone1","committer":"zstone1","hash":"90aff1f5f61ed41f2f2f720390e7b07479ec2736","message":"linting","date":"2023-02-07T16:15:31Z"},{"author":"zstone1","committer":"zstone1","hash":"9835fd83f88b1d0aab35ac5d2cc3ce4d95b93352","message":"metric implies countable uniformity","date":"2023-02-07T16:15:31Z"},{"author":"zstone1","committer":"zstone1","hash":"84109c7f52cbadee94d5ff3936e0b17d7e1bee48","message":"fixing changelog","date":"2023-02-07T16:15:31Z"},{"author":"zstone1","committer":"zstone1","hash":"39ab4e5b846a81e539c133a5c58cafce5666c2fb","message":"linting","date":"2023-02-07T16:15:31Z"},{"author":"zstone1","committer":"zstone1","hash":"b2238a5abf72fe7df3eab1300b5d5b53fe4487eb","message":"metric for products","date":"2023-02-07T16:15:31Z"},{"author":"zstone1","committer":"zstone1","hash":"d7e316c379fd7446fc257ccaf73bd0f3dcaa1297","message":"linting","date":"2023-02-07T16:15:31Z"},{"author":"zstone1","committer":"zstone1","hash":"d9112db40db8f95880ea36e52c8412d22d5f4d77","message":"fixing docs","date":"2023-02-07T16:15:31Z"},{"author":"affeldt-aist","committer":"zstone1","hash":"f86a8d523fd8ac0733dd388e928dc1ad7955b5bf","message":"use %:pos","date":"2023-02-07T16:15:31Z"},{"author":"zstone1","committer":"zstone1","hash":"95b9ac8051a4744f3d2bf5e2476a623e81ddca5f","message":"fixing changelog","date":"2023-02-07T16:15:31Z"},{"author":"zstone1","committer":"zstone1","hash":"68c8faa9689c2bc9dba29607da0916addc2c7329","message":"fix changelog","date":"2023-02-07T16:15:31Z"},{"author":"affeldt-aist","committer":"zstone1","hash":"6ec0f0958010b578982c11aff1efa10a91923ddb","message":"nitpicking","date":"2023-02-07T16:15:31Z"}]},{"author":"affeldt-aist","number":762,"diff_summary":[{"file":"README.md","status":"M","additions":3,"deletions":0},{"file":"meta.yml","status":"M","additions":3,"deletions":0}],"state":"merged","open_date":"2022-10-06T23:39:23Z","update_date":"2022-10-07T10:46:13Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"a5f006db858278bd7a0f82ba97645192ab8a44d6","message":"add link to arxiv","date":"2022-10-06T23:38:08Z"}]},{"author":"affeldt-aist","number":761,"diff_summary":[{"file":"CONTRIBUTING.md","status":"M","additions":1,"deletions":1}],"state":"merged","open_date":"2022-10-06T23:30:51Z","update_date":"2022-10-07T10:44:18Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"fe149821ab2b7793d61741ff93664bd79634a9c3","message":"typo","date":"2022-10-06T23:30:11Z"}]},{"author":"affeldt-aist","number":760,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":184,"deletions":78},{"file":"classical/classical_sets.v","status":"M","additions":184,"deletions":78},{"file":"theories/constructive_ereal.v","status":"M","additions":184,"deletions":78},{"file":"theories/lebesgue_integral.v","status":"M","additions":184,"deletions":78},{"file":"theories/lebesgue_measure.v","status":"M","additions":184,"deletions":78},{"file":"theories/measure.v","status":"M","additions":184,"deletions":78},{"file":"theories/sequences.v","status":"M","additions":184,"deletions":78}],"state":"merged","open_date":"2022-10-04T14:33:17Z","update_date":"2022-10-17T07:20:40Z","discussion":[],"review_discussion":[{"author":"CohenCyril","file":"theories/classical_sets.v","date":"2022-10-04T21:06:17Z","comment":"`sub1set`"},{"author":"zstone1","file":"theories/constructive_ereal.v","date":"2022-10-05T15:45:36Z","comment":"These might be nice to include as global hints. Although I'm fine either way. "},{"author":"zstone1","file":"theories/sequences.v","date":"2022-10-05T15:49:02Z","comment":"```suggestion\r\nby move/lee_sum_npos_natr/ereal_nonincreasing_cvg => cu; apply: cvgP; exact: cu.\r\n```"},{"author":"CohenCyril","file":"theories/sequences.v","date":"2022-10-15T11:27:56Z","comment":"Stronger with\r\n```suggestion\r\n  (P : pred nat) k : (forall n, P n -> u_ n != -oo) -> P k ->\r\n```\r\nisn't it?"},{"author":"CohenCyril","file":"theories/constructive_ereal.v","date":"2022-10-15T11:29:34Z","comment":"```suggestion\r\nLemma fine_lt0 x : (fine x < 0)%R = (-oo < x < 0).\r\n```\r\n?"},{"author":"affeldt-aist","file":"theories/constructive_ereal.v","date":"2022-10-16T08:49:09Z","comment":"Seems to require realDomainType. I thus added a lemma."}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"41d59d27e4765345e1766db10ebfae4e57ef69bb","message":"lemmas non-positive sequences\n\n- naming convention fix\n- nnseries_is_cvg\n- generalization of nneseries_pinfty","date":"2022-10-16T09:11:29Z"}]},{"author":"affeldt-aist","number":757,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":13,"deletions":0},{"file":"theories/constructive_ereal.v","status":"M","additions":13,"deletions":0}],"state":"merged","open_date":"2022-10-02T23:48:44Z","update_date":"2022-10-04T14:02:56Z","discussion":[],"review_discussion":[{"author":"zstone1","file":"theories/constructive_ereal.v","date":"2022-10-04T03:34:43Z","comment":"The `i \\in s` can be safely removed with no change to the proof. In fact, it should be possible to assume `(forall i, (i \\in s) && P i -> F i \\is a fin_num)` instead, although that will require some change. "},{"author":"zstone1","file":"theories/constructive_ereal.v","date":"2022-10-04T03:45:44Z","comment":"Oh wow, I have no idea how to get an `i \\in s` in scope since `eq_bigr` doesn't do it naturally. I'm happy to just leave it as\r\n```suggestion\r\n  (forall i, P i -> F i \\is a fin_num) ->\r\n```"},{"author":"CohenCyril","file":"theories/constructive_ereal.v","date":"2022-10-04T12:52:52Z","comment":"```suggestion\r\nLemma sum_fine (I : Type) s (P : pred I) (F : I -> \\bar R) :\r\n  (forall i, P i -> F i \\is a fin_num) ->\r\n  (\\sum_(i <- s | P i) fine (F i) = fine (\\sum_(i <- s | P i) F i))%R.\r\n```\r\nand use `big_seq` or `big_seq_cond` to bridge the gap."},{"author":"affeldt-aist","file":"theories/constructive_ereal.v","date":"2022-10-04T13:38:27Z","comment":"I didn't see how to use big_seq{,cond} with Type but that's provable anyway."},{"author":"CohenCyril","file":"theories/constructive_ereal.v","date":"2022-10-04T13:52:17Z","comment":"What I meant was that if someone needs to rely on `forall i, i \\in s -> P i -> F i \\is a fin_num` rather than `forall i, P i -> F i \\is a fin_num` as a precondition, they can combine the new `sum_fine` together with `big_seq{,cond}`"},{"author":"affeldt-aist","file":"theories/constructive_ereal.v","date":"2022-10-04T13:53:42Z","comment":"Ah, ok, this I got."}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"549191ede7e7877a7e963cab806417904ead9c1b","message":"sum_fine","date":"2022-10-04T13:37:15Z"}]},{"author":"CohenCyril","number":756,"diff_summary":[{"file":"theories/classical_sets.v","status":"M","additions":16,"deletions":17}],"state":"merged","open_date":"2022-10-02T21:51:58Z","update_date":"2022-10-04T08:25:53Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"CohenCyril","committer":"CohenCyril","hash":"3d1e02837e74876c4d66aedfc7c07f061ea3e9f4","message":"Removing some unnecessary %N annotations","date":"2022-10-02T21:51:29Z"}]},{"author":"zstone1","number":755,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":84,"deletions":1},{"file":"theories/cardinality.v","status":"M","additions":84,"deletions":1},{"file":"theories/classical_sets.v","status":"M","additions":84,"deletions":1},{"file":"theories/topology.v","status":"M","additions":84,"deletions":1}],"state":"merged","open_date":"2022-10-01T23:48:16Z","update_date":"2022-10-02T23:24:23Z","discussion":[{"author":"zstone1","date":"2022-10-02T22:24:45Z","comment":"Neat, thanks. These are much cleaner. Just updated the changelog, and squash-merging now. "}],"review_discussion":[],"tags":[],"commits":[{"author":"zstone1","committer":"zstone1","hash":"0e9aabec3955edb59f3b38806d9115c1570b0faa","message":"proofs for finite subsets countability","date":"2022-10-02T22:12:16Z"},{"author":"zstone1","committer":"zstone1","hash":"ba75c3479c1ec99c96f6ddef1961c07fd9a448ae","message":"finI_from countable","date":"2022-10-02T22:12:16Z"},{"author":"zstone1","committer":"zstone1","hash":"bdc95feb382a97c6e668b73400bad40fcd60a35f","message":"linting","date":"2022-10-02T22:12:16Z"},{"author":"CohenCyril","committer":"zstone1","hash":"09a0f001603678e1b202e50b1ad2ff2f262682f5","message":"Simplifications + weakening hypotheses","date":"2022-10-02T22:12:16Z"},{"author":"zstone1","committer":"zstone1","hash":"9065939b85b7797996f7ac8a0390f8203a9b2f69","message":"fixing changelog","date":"2022-10-02T22:17:03Z"}]},{"author":"zstone1","number":754,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":395,"deletions":47},{"file":"theories/classical_sets.v","status":"M","additions":395,"deletions":47},{"file":"theories/mathcomp_extra.v","status":"M","additions":395,"deletions":47},{"file":"theories/reals.v","status":"M","additions":395,"deletions":47},{"file":"theories/topology.v","status":"M","additions":395,"deletions":47}],"state":"merged","open_date":"2022-09-30T15:46:28Z","update_date":"2022-10-07T00:35:55Z","discussion":[{"author":"affeldt-aist","date":"2022-10-06T09:24:56Z","comment":"I removed an entry in the changelog that was not corresponding to a lemma in the code (set_composeA).\r\n"},{"author":"affeldt-aist","date":"2022-10-06T09:25:59Z","comment":"Should the notation for relation be `\\o` with a different scope? (Rather than, say, `\\@` or `\\O` in the scope of classical sets?)"},{"author":"affeldt-aist","date":"2022-10-06T11:52:59Z","comment":"> Should the notation for relation be `\\o` with a different scope? (Rather than, say, `\\@` or `\\O` in the scope of classical sets?)\r\n\r\nThe right notation would rather by `\\;` for relations.\r\n\r\n(ref to issue #759 )"},{"author":"zstone1","date":"2022-10-06T13:27:31Z","comment":"A good question about the notation. I think I'm happiest with `\\;` because the `@` sign is used pretty heavily already. "},{"author":"CohenCyril","date":"2022-10-06T14:05:48Z","comment":"Btw `\\;` is also particularly appropriate because it's the dedicated notation for function composition in diagramatic order in ssr (scope fun_scope)."},{"author":"zstone1","date":"2022-10-06T15:53:48Z","comment":"Thanks for the update. This is looking much better than before. Anything else we should do before merge? "}],"review_discussion":[{"author":"CohenCyril","file":"theories/mathcomp_extra.v","date":"2022-10-02T22:06:41Z","comment":"```suggestion\r\nLemma lez_abs2 (a b : int) : 0 <= a -> a <= b -> (`|a| <= `|b|)%N.\r\n```"},{"author":"CohenCyril","file":"theories/reals.v","date":"2022-10-02T22:07:01Z","comment":"This is `lef_pinv` (up to a symmetry)."},{"author":"CohenCyril","file":"theories/topology.v","date":"2022-10-02T22:28:33Z","comment":"This seems to suggest that `_ \\o _` for sets (actually graphs of functions) should be named and backported to `classical_sets.v`... and the `set_compose` long prefix should be renamed to something else...\r\nAnyway these lemmas are unreadable outside of this file due to the notation `_ \\o _` being local.\r\nSo unless something more consistent is done, these should also be made local."},{"author":"CohenCyril","file":"theories/topology.v","date":"2022-10-02T22:30:29Z","comment":"```suggestion\r\n  E \\o [set (x, x) | x in [set: X]] = E.\r\n```"},{"author":"CohenCyril","file":"theories/topology.v","date":"2022-10-02T22:30:52Z","comment":"```suggestion\r\nLemma entourage_invI (E : set (M * M)) :\r\n```"},{"author":"CohenCyril","file":"theories/topology.v","date":"2022-10-02T22:30:59Z","comment":"```suggestion\r\nLemma split_ent_subset (E : set (M * M)) : entourage E -> split_ent E `<=` E.\r\n```"},{"author":"CohenCyril","file":"theories/topology.v","date":"2022-10-02T22:31:31Z","comment":"```suggestion\r\nContext {R : realType} {T : uniformType} (f_ : nat -> set (T * T)).\r\n```"},{"author":"CohenCyril","file":"theories/topology.v","date":"2022-10-02T22:31:46Z","comment":"```suggestion\r\nHypothesis countableBase : forall A, entourage A -> exists N, f_ N `<=` A.\r\n```"},{"author":"CohenCyril","file":"theories/topology.v","date":"2022-10-02T22:33:06Z","comment":"```suggestion\r\nLocal Fixpoint g_ (n : nat) : set (T * T) :=\r\n  if n is S n then let W := split_ent (split_ent (g_ n)) `&` f_ n in W `&` (W^-1)\r\n  else [set: T*T].\r\n```"},{"author":"zstone1","file":"theories/topology.v","date":"2022-10-03T02:14:20Z","comment":"Hm, I see your point. For now I think we should just make them local. This diff has enough already. \r\n\r\nThere's definitely some benefit to making this concept of \"relation composition\" first class. Especially since we now have a separate, general purpose \"classical set theory\" package. I'll add an issue for it. "},{"author":"CohenCyril","file":"theories/topology.v","date":"2022-10-03T09:13:06Z","comment":"`all_algebra` already contains `interval`, `ssralg`, `ssrnum`, `rat` and `matrix`. Please remove the individual packages. Maybe we can also import `all_ssreflect` rather than individual packages."},{"author":"zstone1","file":"theories/topology.v","date":"2022-10-03T15:14:00Z","comment":"Apparently `fintype` and `finmap` need to stay. All others are subsumed by `all_algebra` or `all_ssreflect`"}],"tags":[],"commits":[{"author":"zstone1","committer":"zstone1","hash":"cac41eda241d038c0255d07d17ea7e134c14a525","message":"building metric","date":"2022-10-07T00:05:12Z"},{"author":"zstone1","committer":"zstone1","hash":"38284592401c95d617487f0195ebabb3abe9952f","message":"need to use 2 exp","date":"2022-10-07T00:05:12Z"},{"author":"zstone1","committer":"zstone1","hash":"3e0b61eedc1db08f34fe1a18c8bc93d177c67c28","message":"working through admitteds","date":"2022-10-07T00:05:12Z"},{"author":"zstone1","committer":"zstone1","hash":"682d3b6b057a6b77204b49d1f0bea59b37e696a6","message":"working proofs for countable uniform implies metric","date":"2022-10-07T00:05:12Z"},{"author":"zstone1","committer":"zstone1","hash":"4129eb5315e4992e25286a9b0512641ceed23cfa","message":"some cleanup","date":"2022-10-07T00:05:12Z"},{"author":"zstone1","committer":"zstone1","hash":"c64289fff7119b9050b3f5928fe66c78ae816c47","message":"changelog","date":"2022-10-07T00:05:12Z"},{"author":"zstone1","committer":"zstone1","hash":"54b0dfc1708cac7692d1d76c293c81dbd1e5bcd6","message":"updating comment to better explain the proof","date":"2022-10-07T00:05:12Z"},{"author":"zstone1","committer":"zstone1","hash":"a95e15a908d31700bf5d00d1a52b79d3820430d2","message":"review updates","date":"2022-10-07T00:05:12Z"},{"author":"zstone1","committer":"zstone1","hash":"4878ca7a5a01baaa61076faf93ba625898c200dc","message":"fixing imports","date":"2022-10-07T00:05:12Z"},{"author":"zstone1","committer":"zstone1","hash":"03deb922a99717da0392c6fde623cf41be7b57cc","message":"fixing changelog","date":"2022-10-07T00:05:12Z"},{"author":"affeldt-aist","committer":"zstone1","hash":"ae693aae7ebf2e272c78011f025253c103e772e6","message":"mv rel def to classical_sets.v\n\n- rm trailing spaces\n- minor linting","date":"2022-10-07T00:05:12Z"},{"author":"affeldt-aist","committer":"zstone1","hash":"a3b5a11f7cb4c87492353b5de226ae38188b2b9e","message":"fix notation","date":"2022-10-07T00:05:12Z"}]},{"author":"zstone1","number":753,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":50,"deletions":0},{"file":"theories/topology.v","status":"M","additions":50,"deletions":0}],"state":"merged","open_date":"2022-09-26T19:49:17Z","update_date":"2022-10-02T22:05:01Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"zstone1","committer":"zstone1","hash":"6a4b4b4476fe688095294be2d540847f2c8148b3","message":"weak topology for metrics","date":"2022-09-26T19:11:13Z"}]},{"author":"zstone1","number":752,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":195,"deletions":110},{"file":"theories/normedtype.v","status":"M","additions":195,"deletions":110},{"file":"theories/realfun.v","status":"M","additions":195,"deletions":110},{"file":"theories/topology.v","status":"M","additions":195,"deletions":110}],"state":"merged","open_date":"2022-09-23T20:27:31Z","update_date":"2022-10-06T23:56:53Z","discussion":[],"review_discussion":[{"author":"CohenCyril","file":"CHANGELOG_UNRELEASED.md","date":"2022-09-26T08:25:02Z","comment":"Why remove it? It might still be needed now and then, isn't it?"},{"author":"zstone1","file":"CHANGELOG_UNRELEASED.md","date":"2022-09-26T14:42:09Z","comment":"A fair question. I am hoping for a world where `{in X, continuous f}` is phased out entirely in favor of `{within X, continuous f}`. I suspect `{in X, continuous f}` rarely means what the author intended. I think this will be naturally cleaner with a HB structure `Continuous` + `Fun` which handles the subspace topology for us. \r\n\r\nWe've got a ways to go there, so I'm fine to keep this lemma in the meanwhile. "},{"author":"CohenCyril","file":"CHANGELOG_UNRELEASED.md","date":"2022-09-26T16:01:04Z","comment":"I see, but `{in X, continuous}` may still appear as an intermediate step in some proofs, it would probably be wrong, but I think we should let users do inelegant proofs if they wish so... ^^'"},{"author":"zstone1","file":"CHANGELOG_UNRELEASED.md","date":"2022-09-26T16:08:27Z","comment":"Yeah, this principal makes sense. I've restored the lemma, with a word of warning about it's usage. "},{"author":"CohenCyril","file":"theories/realfun.v","date":"2022-09-26T16:30:19Z","comment":"(Ooops, my mistake, I misread, this is really good)"},{"author":"CohenCyril","file":"theories/realfun.v","date":"2022-09-26T17:11:29Z","comment":"```suggestion\r\n- move=> ->; rewrite (_ : (`[b, b])%classic = [set b]). \r\n```"},{"author":"CohenCyril","file":"theories/realfun.v","date":"2022-10-02T21:55:52Z","comment":"Just a stylistic comment illustrated on this particular example.\r\n- `move:` (ax)`  should be replaced with `have := ax`,\r\n- `subst` is not allowed in proper ssreflect scripts, it should be replaced with `rewrite eqn in H1 ... Hn *`."},{"author":"affeldt-aist","file":"theories/realfun.v","date":"2022-10-03T00:42:29Z","comment":"I observe that when performing the rewrite the continuous notation is such that the goal is displayed as `continuous f`. Hasn't something changed in an undesirable way about this notation? "},{"author":"zstone1","file":"theories/realfun.v","date":"2022-10-03T01:20:33Z","comment":"Sadly I don't think `{within A, continuous f}` ever printed correctly. There are a handful of other notations in `topology.v`, like pointwise convergence. that have the same problem. Coq is not picking \"specialized\" notation. Surprisingly we don't have an open issue for fixing this. I'll add one. "},{"author":"zstone1","file":"theories/realfun.v","date":"2022-10-03T01:40:12Z","comment":"Makes sense. Should be all fixed now (thanks Reynald)."},{"author":"CohenCyril","file":"theories/realfun.v","date":"2022-10-04T14:07:20Z","comment":"Could we achieve this with a specialised notation which detects `subspace_...` canonicals?"},{"author":"CohenCyril","file":"theories/topology.v","date":"2022-10-04T14:08:20Z","comment":"Could we have a `within` here too?"},{"author":"zstone1","file":"theories/realfun.v","date":"2022-10-05T15:33:14Z","comment":"Commit b4230 seems like a nice step in the right direction. For the purpose of completing this PR, I'm satisfied with the current improvement. If you agree, we should continue to discuss in #758. I'm quite interested in how you'd build notations that depend on the presence of canonicals."},{"author":"affeldt-aist","file":"theories/realfun.v","date":"2022-10-06T06:24:19Z","comment":"Should we try to address the other notation problems mentioned by issue #758 as part of this PR?\r\n"},{"author":"zstone1","file":"theories/realfun.v","date":"2022-10-06T14:44:26Z","comment":"I've updated with corresponding change for the other notations."},{"author":"affeldt-aist","file":"theories/realfun.v","date":"2022-10-06T23:22:33Z","comment":"It means that issue #758 is (mostly) fixed?"},{"author":"zstone1","file":"theories/realfun.v","date":"2022-10-06T23:36:12Z","comment":"Yeah, seems like it. The approach won't work for all notations, but it does work fine for swapping topologies. Once this is merged I'll close that ticket. "}],"tags":[],"commits":[{"author":"zstone1","committer":"zstone1","hash":"6206b7f98a55d3cfd551110fef1b4c7469a5e7ff","message":"doing subspace topology stuff","date":"2022-09-26T14:43:47Z"},{"author":"zstone1","committer":"zstone1","hash":"f3989ac7bc86c9c10dec6d2be64e393e3d2890f1","message":"fixing near continuous","date":"2022-09-26T14:43:47Z"},{"author":"zstone1","committer":"zstone1","hash":"003b06a01386b17fd74c47d65dcefdd3258fa775","message":"cleaned up realfun","date":"2022-09-26T14:43:47Z"},{"author":"zstone1","committer":"zstone1","hash":"aa935d1a19fbc4daa92bb869677bc57e866a91f2","message":"things build correctly","date":"2022-09-26T14:43:47Z"},{"author":"zstone1","committer":"zstone1","hash":"ea67031a73834bb427316fe9e326ee00fb8ed2af","message":"changelog and linting","date":"2022-09-26T14:43:47Z"},{"author":"zstone1","committer":"zstone1","hash":"e53cfd67bc965ad2504a676bee88945138a3dd68","message":"fixing changelog","date":"2022-09-26T14:43:47Z"},{"author":"zstone1","committer":"zstone1","hash":"3f4f4570d5620fe36b0a7185b38146a36e2633cf","message":"adding back in subspace_itv lemma","date":"2022-09-26T14:49:02Z"},{"author":"zstone1","committer":"zstone1","hash":"209e7c4a60137466063dd9b1f48b55c08045dedb","message":"removing a search","date":"2022-09-26T16:09:54Z"},{"author":"zstone1","committer":"web-flow","hash":"2de2767ad38d9acf30d0bf13d82809690e96d957","message":"Update theories/realfun.v\n\nCo-authored-by: Cyril Cohen <CohenCyril@users.noreply.github.com>","date":"2022-09-26T17:51:59Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"4db3feebce81e61a2f075a1532ad723173d8d7bc","message":"use set_itv1","date":"2022-10-03T00:39:18Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"06b8c5e2736d1e105204f4be14b11096e1c835ae","message":"rm subst","date":"2022-10-03T01:00:01Z"},{"author":"zstone1","committer":"zstone1","hash":"9a432780257c5684c02a94b6ce52e6069505c1f7","message":"fixing move to have","date":"2022-10-03T01:38:04Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"b4230f9a0d02c068f3c457c0eed74ac6dd988c9b","message":"towards a fix for issue 758?","date":"2022-10-05T06:20:35Z"},{"author":"zstone1","committer":"zstone1","hash":"1a64d22760c6ac8be5cbbc573efae75ee114225a","message":"lemma statements with within","date":"2022-10-05T15:16:24Z"},{"author":"zstone1","committer":"zstone1","hash":"2b5cf3fc3ab42ec3c789cf1ec838f7930b548c42","message":"improving specialized notations","date":"2022-10-06T14:42:51Z"}]},{"author":"affeldt-aist","number":751,"diff_summary":[{"file":"theories/classical_sets.v","status":"M","additions":9,"deletions":7},{"file":"theories/fsbigop.v","status":"M","additions":9,"deletions":7},{"file":"theories/topology.v","status":"M","additions":9,"deletions":7}],"state":"merged","open_date":"2022-09-23T08:55:53Z","update_date":"2022-09-28T15:16:03Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"8e6fa327c6b6124a282312b3f9b7cf9dbffb64ca","message":"setIv setvI are duplicated","date":"2022-09-23T08:54:42Z"}]},{"author":"affeldt-aist","number":749,"diff_summary":[{"file":"_CoqProject","status":"A","additions":2292,"deletions":2},{"file":"theories/kernel.v","status":"A","additions":2292,"deletions":2},{"file":"theories/lebesgue_integral.v","status":"A","additions":2292,"deletions":2},{"file":"theories/prob_lang.v","status":"A","additions":2292,"deletions":2},{"file":"theories/wip.v","status":"A","additions":2292,"deletions":2}],"state":"open","open_date":"2022-09-21T13:32:30Z","update_date":"2023-03-19T00:38:44Z","discussion":[],"review_discussion":[],"tags":[{"tag":"enhancement :sparkles:","description":"This issue/PR is about adding new features enhancing the library"}],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"3fff13d0398342e6d6e5eaa571662ab92947f332","message":"tentative definition of kernel","date":"2023-03-19T00:26:41Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"a35425c1b466b89473a716db63c825bfaa8e6f75","message":"tentative statement of lemma 3","date":"2023-03-19T00:26:41Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"7b18cf104a971166603d34c401949b8b706e5e64","message":"complete infinite sum of kernels is a kernel","date":"2023-03-19T00:26:41Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"e13c58f86bdbc6e698ab65b3f0d52a2187690866","message":"prove that star_kernel is a measure","date":"2023-03-19T00:26:41Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"0bfaf8a918a444e3ae6a831342931c41c7eb8b02","message":"proposition 1","date":"2023-03-19T00:26:42Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"9de275728db1e06fe3b7298075510cc9865473c8","message":"tentative first part of lemma 3 (admit pending)\n\n- tentative example of semantics","date":"2023-03-19T00:26:42Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"cbd871c888497e69d28ea91b791eda59b9d7b54a","message":"complete lemma 3 and s-finite proofs\n\n- s-finite proofs for bernoulli, return, score\n- various fixes","date":"2023-03-19T00:26:42Z"},{"author":"AyumuSaito","committer":"affeldt-aist","hash":"c8e2268d8559a88bfd22ad3a2fa8fe90ea64984a","message":"nonneg 2/7","date":"2023-03-19T00:26:42Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"29fc0f63411cc7443bc34339f57d0209bebd61b0","message":"s-finite kernels for ite and examples\n\n- some rewriting laws for programs","date":"2023-03-19T00:26:42Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"477fcdda851c4ce2c35beca51b5a1988395e07ac","message":"factorization of code, normalize, cleaning","date":"2023-03-19T00:26:42Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"259df8e3b636692218b8f0c2a740b42e938b6e8b","message":"complete normalize, finite fubini, improve hier with pker","date":"2023-03-19T00:26:42Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"061ad30002135e975342394fd1ecf3dffc387586","message":"more uniform naming, kdirac is pker, etc.","date":"2023-03-19T00:26:42Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"39b4d78880e76f8c6545e8218f1abee996e5283b","message":"mscore using mscale and dirac","date":"2023-03-19T00:26:42Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"c6901eb0ac11e61ccdbcf934b262e50d3898b067","message":"generalize mscoreE","date":"2023-03-19T00:26:42Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"42a2b9ddc224a6305dc72f3accf3a23c81d07267","message":"various minor simplifications and generalizations","date":"2023-03-19T00:26:42Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"21eaa02384de9567996358181aa54bf2da62790a","message":"staton bus with exp","date":"2023-03-19T00:26:42Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"8bbb9c9f722e283457b3dab5f42f3157b40c584f","message":"wip (gauss)","date":"2023-03-19T00:26:42Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"48331420b654242595e51520433ae2964b184483","message":"linearize hierarchy","date":"2023-03-19T00:26:42Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"334ddba20e1aca717cda00880caef0fded676946","message":"subprob kernel","date":"2023-03-19T00:26:42Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"c35547097fbcb6f24e7c31d5dc5a6be83e7c2f17","message":"cleaning","date":"2023-03-19T00:26:42Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"d6f46b777aa1b72dd3ec23fb1cee095fc936ce79","message":"hard constraint example","date":"2023-03-19T00:26:42Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"e8286be0b19e2df1ae67f73efc513da8fac92d66","message":"minor cleaning","date":"2023-03-19T00:26:42Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"8c8c0184de2163987ff7ed607d730dd9c902746f","message":"gen sample","date":"2023-03-19T00:26:42Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"0702f743e1a7992da2e2328cdbdfa45a02938a60","message":"upd wrt master","date":"2023-03-19T00:26:42Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"ac875e7d8f9ada89a3072268eb64489a22a23b4c","message":"shorten measurable_fun_kprobability","date":"2023-03-19T00:26:42Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"f34d6f15298988798d56ea2d3fe64d785ccbc2ae","message":"upd with recent PRs","date":"2023-03-19T00:26:42Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"78732a038e5de816a235a9d95d8f413b6b316045","message":"use reversible coercions","date":"2023-03-19T00:26:42Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"f2103df9b2e003e885f32b78843fc8b78d49df8a","message":"upd wrt recent PRs, compat with Coq 8.15","date":"2023-03-19T00:26:42Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"c4768fa73ecc945d38e29970c4f413301dd70cb5","message":"simple example","date":"2023-03-19T00:26:42Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"1b80f0e85e0cb8cfdcdc69dd434ac1179a0f89c8","message":"letinA","date":"2023-03-19T00:26:42Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"201f20d1df197ac62493a1e26f07e79e51150c4f","message":"minor cleaning","date":"2023-03-19T00:26:42Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"e6dc481f01aaee04d101b2bc58e767168d399d77","message":"rebase wrt branch on finite measures","date":"2023-03-19T00:26:42Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"a241ec4d9b5adcc7d28e529a6cf8b56b61d18fe1","message":"adapt to hierarchy with subprob","date":"2023-03-19T00:26:42Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"f7e5826f47752dc920aa9ba33d7a72edca92f2a6","message":"upd","date":"2023-03-19T00:38:29Z"}]},{"author":"zstone1","number":748,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":45,"deletions":2},{"file":"theories/constructive_ereal.v","status":"M","additions":45,"deletions":2},{"file":"theories/lebesgue_integral.v","status":"M","additions":45,"deletions":2}],"state":"merged","open_date":"2022-09-19T18:30:25Z","update_date":"2022-09-23T03:45:12Z","discussion":[{"author":"affeldt-aist","date":"2022-09-23T01:56:31Z","comment":"Maybe squash before merge."}],"review_discussion":[{"author":"affeldt-aist","file":"CHANGELOG_UNRELEASED.md","date":"2022-09-23T00:26:20Z","comment":"This looks like a duplicated entry."}],"tags":[],"commits":[{"author":"zstone1","committer":"zstone1","hash":"d3633aa62b5a629a95b320c2e5d66be8210bba72","message":"changelog and simple lint","date":"2022-09-19T18:07:38Z"},{"author":"zstone1","committer":"zstone1","hash":"513651cd2b65818a3292b52aaba2f205ea57c957","message":"linting","date":"2022-09-19T18:32:06Z"},{"author":"zstone1","committer":"zstone1","hash":"2352d773f7316599266c121f50cfa3754837cbb6","message":"typos","date":"2022-09-19T19:17:56Z"},{"author":"zstone1","committer":"zstone1","hash":"d9e52f40a2fe40cc6e6c740f23434dd3d8f28b31","message":"unncessary change","date":"2022-09-19T19:19:50Z"},{"author":"zstone1","committer":"zstone1","hash":"2664a38584ada2b367fe13e34f7f8c150c2d7bc3","message":"notations for rintegral","date":"2022-09-22T13:37:39Z"},{"author":"zstone1","committer":"zstone1","hash":"db3314b6753c9db3381dcfc3f470836eff20949b","message":"fixing changelog","date":"2022-09-23T01:02:49Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"ceac76360800350ce558d8d664427f24aeca057c","message":"use lte_oppl, shorten","date":"2022-09-23T01:52:22Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"953fa8e832c62acb1ef9170c628b6a3e0f4fe13d","message":"fix changelog","date":"2022-09-23T01:53:56Z"}]},{"author":"zstone1","number":747,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":44,"deletions":31},{"file":"theories/topology.v","status":"M","additions":44,"deletions":31}],"state":"merged","open_date":"2022-09-17T02:19:15Z","update_date":"2022-09-25T01:37:47Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"zstone1","committer":"zstone1","hash":"ac7a840bdff38db7bf5ef79b016c69081d36e54f","message":"subspace open map\n\nminimizing proof\n\nrm dead code and spurious characters","date":"2022-09-23T14:59:53Z"}]},{"author":"affeldt-aist","number":744,"diff_summary":[{"file":".github/workflows/nix-action-8.16.yml","status":"M","additions":113,"deletions":296},{"file":".nix/config.nix","status":"M","additions":113,"deletions":296},{"file":".nix/coq-nix-toolbox.nix","status":"M","additions":113,"deletions":296},{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":113,"deletions":296},{"file":"theories/constructive_ereal.v","status":"M","additions":113,"deletions":296},{"file":"theories/lebesgue_integral.v","status":"M","additions":113,"deletions":296},{"file":"theories/sequences.v","status":"M","additions":113,"deletions":296}],"state":"merged","open_date":"2022-09-12T07:10:07Z","update_date":"2022-09-26T12:48:10Z","discussion":[{"author":"affeldt-aist","date":"2022-09-23T12:35:56Z","comment":"I have a new commit:\r\nhttps://github.com/affeldt-aist/analysis/commit/faa597fd761589cbef43aa4311b87df7bfb1d55d\r\nbut I can't rebase it on top of this PR without having to edit nix related files.\r\nCould you try to cherry-pick it on your side?\r\n"},{"author":"proux01","date":"2022-09-23T12:41:21Z","comment":"done"},{"author":"proux01","date":"2022-09-23T13:28:53Z","comment":"@CohenCyril sorry, I may need your help here with the Nix CI: the `nix/config.nix` file asks for real-closed master in bundle master but the CI still builds 1.1.3:\r\n```\r\nbuilding '/nix/store/dk1wnxyhscz06hj3avjkdqd3x4y9k4pp-coqdev-mathcompdev-real-closed-1.1.3.drv'...\r\n```\r\n(c.f. failing job)\r\nWould you have any idea of what I made wrong?"},{"author":"proux01","date":"2022-09-23T13:31:28Z","comment":"BTW: why is analysis dependening on real-closed in Nix but not in OPAM?"},{"author":"proux01","date":"2022-09-26T12:48:03Z","comment":"Let's merge as is and fix CI in another PR."}],"review_discussion":[{"author":"proux01","file":"theories/constructive_ereal.v","date":"2022-09-23T08:44:44Z","comment":"In ssrnum, we have\r\n```Coq\r\ngtr_addl : (x + y < x) = (y < 0).\r\n```\r\nmaybe we want something similar here? (same remark for `gte_addr`)"},{"author":"affeldt-aist","file":"theories/constructive_ereal.v","date":"2022-09-23T10:24:04Z","comment":"in the long term, this should be better indeed"},{"author":"proux01","file":"theories/constructive_ereal.v","date":"2022-09-23T10:34:31Z","comment":"Maybe mention the renaming from `lte_spaddr` to `lte_spaddre` in the CHANGELOG?"},{"author":"affeldt-aist","file":"theories/constructive_ereal.v","date":"2022-09-23T11:09:14Z","comment":"It is not really removed, just deprecated, that is why I didn't document it."},{"author":"proux01","file":"theories/constructive_ereal.v","date":"2022-09-23T11:13:32Z","comment":"Ok, maybe we should document deprecations in the changelog then, but that's unrelated to that PR (I mean if, when the deprecation is removed, the thing is just listed as \"removed\", then the changelog is not very helpful as it doesn't link the new and old names).\r\n"},{"author":"affeldt-aist","file":"theories/constructive_ereal.v","date":"2022-09-23T11:44:30Z","comment":"This would take the form of a new entry? # Deprecated?"},{"author":"proux01","file":"theories/constructive_ereal.v","date":"2022-09-23T12:02:55Z","comment":"As a, not very cautious, user, when I have ignored the deprecation warnings for too long and something got removed, facing an error `blah doesn't exist` I'd like to find in the changelog an entry like `version x.y, blah replaced by bar`"}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"proux01","hash":"6aad3eb30edcc49c6750578245b620a1fd62b6ca","message":"gte_add{l,r}","date":"2022-09-26T12:29:07Z"},{"author":"affeldt-aist","committer":"proux01","hash":"cbb4dfb02459ef358b4a6c172306eb62b1ce4502","message":"dual lemmas","date":"2022-09-26T12:29:07Z"},{"author":"affeldt-aist","committer":"proux01","hash":"f449220153b3262dbc68fc2e0724802680c51e9a","message":"turn -> into =","date":"2022-09-26T12:29:07Z"},{"author":"proux01","committer":"proux01","hash":"1a1b0a9c259aa0616c679d1f9d7ba41540516442","message":"[CI] Update Nix CI\n\nMathComp 1.15 doesn't compile anymore on Coq master","date":"2022-09-26T12:29:07Z"},{"author":"proux01","committer":"proux01","hash":"f256b5ad6b3827e98a1f8bdfde7d43cda2a3429d","message":"[CI] Update Coq Nix toolbox","date":"2022-09-26T12:29:07Z"},{"author":"affeldt-aist","committer":"proux01","hash":"dfe12d7d0ce9a6a52be50ca18f10858a0379f917","message":"deprecated","date":"2022-09-26T12:29:07Z"},{"author":"affeldt-aist","committer":"proux01","hash":"fc30da690c99ceb1f8f7b7ef52d269a6e5ce00a0","message":"fixes and forgotten lemma","date":"2022-09-26T12:29:07Z"},{"author":"proux01","committer":"proux01","hash":"aca43ce1affc881d12f875ed0baeb178fa1f6f22","message":"Forgotten generalization","date":"2022-09-26T12:29:07Z"}]},{"author":"affeldt-aist","number":743,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":111,"deletions":70},{"file":"theories/ereal.v","status":"M","additions":111,"deletions":70},{"file":"theories/lebesgue_integral.v","status":"M","additions":111,"deletions":70}],"state":"merged","open_date":"2022-09-06T07:23:16Z","update_date":"2022-10-16T06:42:02Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"9316436d1e7e7391b1f5ccec996ebd4f1980efc4","message":"sequence notation in Fubini","date":"2022-10-16T05:55:08Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"18ac57c204e601bdd4013979fc16e3e3561f55eb","message":"fset_set in fimfunE","date":"2022-10-16T05:55:08Z"}]},{"author":"affeldt-aist","number":742,"diff_summary":[{"file":"CHANGELOG.md","status":"M","additions":97,"deletions":98},{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":97,"deletions":98},{"file":"INSTALL.md","status":"M","additions":97,"deletions":98},{"file":"README.md","status":"M","additions":97,"deletions":98},{"file":"coq-mathcomp-analysis.opam","status":"M","additions":97,"deletions":98},{"file":"meta.yml","status":"M","additions":97,"deletions":98}],"state":"merged","open_date":"2022-09-05T13:47:41Z","update_date":"2022-09-07T02:21:32Z","discussion":[{"author":"affeldt-aist","date":"2022-09-06T13:43:44Z","comment":"@proux01 do you understand the errors in the CI about Coq 8.14?"},{"author":"proux01","date":"2022-09-06T15:24:32Z","comment":"@affeldt-aist thats because of the bound\r\n```\r\n  \"coq-hierarchy-builder\" { (>= \"1.3.0\") }\r\n```\r\nHB 1.3.0 requires coq-elpi >= 1.14 and coq-elpi.1.14.0 requires Coq >= 8.15.\r\nSo if we want to support Coq 8.14, we need to keep HB 1.2.0."},{"author":"affeldt-aist","date":"2022-09-06T23:36:54Z","comment":"> So if we want to support Coq 8.14, we need to keep HB 1.2.0.\r\n\r\nThank you!\r\n"}],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"0bb62deaf78f267470ee57a12998121664176f66","message":"changelog for version 0.5.4","date":"2022-09-07T01:58:00Z"}]},{"author":"affeldt-aist","number":741,"diff_summary":[{"file":"theories/Rstruct.v","status":"M","additions":22,"deletions":0}],"state":"merged","open_date":"2022-09-05T00:12:15Z","update_date":"2022-09-06T00:40:52Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"40ba1ba1f8b221ea17591f4da7f1aa63fec89dd2","message":"deprecated warnings for Rstruct's bigmax","date":"2022-09-05T00:10:00Z"}]},{"author":"zstone1","number":739,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":57,"deletions":38},{"file":"theories/derive.v","status":"M","additions":57,"deletions":38},{"file":"theories/exp.v","status":"M","additions":57,"deletions":38},{"file":"theories/realfun.v","status":"M","additions":57,"deletions":38},{"file":"theories/topology.v","status":"M","additions":57,"deletions":38},{"file":"theories/trigo.v","status":"M","additions":57,"deletions":38}],"state":"merged","open_date":"2022-09-03T04:04:42Z","update_date":"2022-09-15T02:57:57Z","discussion":[{"author":"zstone1","date":"2022-09-15T02:42:02Z","comment":"Yup, makes sense. I've updated the names, and I'll merge shortly. "},{"author":"affeldt-aist","date":"2022-09-15T02:50:23Z","comment":"> I'll merge shortly.\r\n\r\n\"Squash and merge\" may be appropriate since there are many commits. \r\n\r\n"},{"author":"zstone1","date":"2022-09-15T02:51:43Z","comment":"Yes, I'll be sure to do that. "}],"review_discussion":[],"tags":[],"commits":[{"author":"zstone1","committer":"zstone1","hash":"3d1722d85335746127b189ee6df310380f34294c","message":"changing susbapce names","date":"2022-09-07T03:33:35Z"},{"author":"zstone1","committer":"zstone1","hash":"ab78280b546e7b8b536bc8b62203ddbede6801e2","message":"updating changelog","date":"2022-09-07T03:33:35Z"},{"author":"zstone1","committer":"zstone1","hash":"1adb89a433313c2994c1a7afb45f39a7f6520f82","message":"linting","date":"2022-09-07T03:33:35Z"},{"author":"zstone1","committer":"zstone1","hash":"602c3a2028c70f6b5ea20ade89d974317d4512ee","message":"changing names","date":"2022-09-07T03:33:35Z"},{"author":"zstone1","committer":"zstone1","hash":"61044eb601ab9ac8d5d5b9a1acbb14ca56adb969","message":"fixing names","date":"2022-09-07T03:33:35Z"},{"author":"zstone1","committer":"zstone1","hash":"e97588b4b80fc9ce3580f04e461207d947dc082d","message":"update changelog","date":"2022-09-07T03:35:44Z"},{"author":"zstone1","committer":"zstone1","hash":"bfd6923804d5cbcf9473c820aa5fb49c403c516c","message":"changelog fix","date":"2022-09-07T03:36:20Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"83875876919a382c96855fc22f4c210879f442d5","message":"fix within-continuous notation\n\n- various minor shortenings","date":"2022-09-15T01:22:16Z"},{"author":"zstone1","committer":"zstone1","hash":"b8c3e97966ea9f615a7893165116b8c9d9911877","message":"name improvements","date":"2022-09-15T02:27:23Z"},{"author":"zstone1","committer":"zstone1","hash":"b046709447c2da0682d663eb0bf6c45e7881ac04","message":"mergeing","date":"2022-09-15T02:40:54Z"}]},{"author":"affeldt-aist","number":738,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":27,"deletions":21},{"file":"theories/ereal.v","status":"M","additions":27,"deletions":21},{"file":"theories/exp.v","status":"M","additions":27,"deletions":21},{"file":"theories/lebesgue_integral.v","status":"M","additions":27,"deletions":21},{"file":"theories/lebesgue_measure.v","status":"M","additions":27,"deletions":21},{"file":"theories/mathcomp_extra.v","status":"M","additions":27,"deletions":21},{"file":"theories/reals.v","status":"M","additions":27,"deletions":21},{"file":"theories/sequences.v","status":"M","additions":27,"deletions":21},{"file":"theories/set_interval.v","status":"M","additions":27,"deletions":21}],"state":"merged","open_date":"2022-09-02T02:57:48Z","update_date":"2022-09-04T23:29:10Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"84789abf5f1f9faf5b753b19b65e1051106a1bbc","message":"natrS","date":"2022-09-02T02:55:57Z"}]},{"author":"zstone1","number":737,"diff_summary":[{"file":"_CoqProject","status":"A","additions":797,"deletions":10},{"file":"theories/homotopy.v","status":"A","additions":797,"deletions":10},{"file":"theories/real_interval.v","status":"A","additions":797,"deletions":10},{"file":"theories/topology.v","status":"A","additions":797,"deletions":10}],"state":"open","open_date":"2022-09-01T18:33:51Z","update_date":"2022-10-28T14:25:31Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"zstone1","committer":"zstone1","hash":"8bcd64e0ce3533642c157010bf061c47d7217284","message":"homotopies\n\ndebugging canonical issue\n\nhomotopy stuff\n\nmore homotopy stuff\n\npath chains\n\npath connected is an equivalence relation\n\ntrying to define parametrization\n\ndoing subspace topology stuff\n\nfixing near continuous\n\ncleaned up realfun\n\nthings build correctly\n\nchangelog and linting\n\nfixing changelog\n\ngetting there on paths\n\nreversing paths\n\nmore stuff about continuous HB\n\nproving group properties\n\nno simple way around injectivity\n\nassociative proof\n\nmoving stuff\n\nitv changes\n\nawful split domain proofs\n\npath linking respects quotients\n\ndefinition of path","date":"2022-10-28T14:25:24Z"},{"author":"zstone1","committer":"zstone1","hash":"e86b5d4d00cd15cd2dd0e6323ab57b2830f28246","message":"cleaning up rebase","date":"2022-10-28T14:25:24Z"},{"author":"zstone1","committer":"zstone1","hash":"d3a4cc1a97f7c77ace3e7f6f90f2788a716f3f8f","message":"adding homotopy to coq project","date":"2022-10-28T14:25:24Z"}]},{"author":"CohenCyril","number":736,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":96,"deletions":80},{"file":"theories/derive.v","status":"M","additions":96,"deletions":80}],"state":"merged","open_date":"2022-08-30T09:43:38Z","update_date":"2022-08-31T12:18:12Z","discussion":[{"author":"affeldt-aist","date":"2022-08-31T07:10:18Z","comment":"> Looks good to me. Mostly just surprised this didn't already exist. There must be some proofs we can refactor with this. Although that's surely a problem for another day.\r\n\r\nI might have spot a few easy ones, give me some time.\r\n"},{"author":"affeldt-aist","date":"2022-08-31T08:44:04Z","comment":"> > Looks good to me. Mostly just surprised this didn't already exist. There must be some proofs we can refactor with this. Although that's surely a problem for another day.\r\n\r\nIndeed, the new lemma could be applied at a few places in `derive.v` but this called for some sectioning of the big `Derive` section. I maybe did more than what was strictly needed but imo that improves reading a bit."}],"review_discussion":[],"tags":[],"commits":[{"author":"CohenCyril","committer":"affeldt-aist","hash":"55996422fb1bc0ff238a005c9584b01f0de7eb6e","message":"Missing results in derive\n\nCo-Authored-By: Abastro <abab9579@gmail.com>","date":"2022-08-31T11:31:05Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"4bae15fbb0cc70ad9e2a44633ccfdc8fb88f83a7","message":"minor shortenings and sectioning","date":"2022-08-31T11:31:05Z"}]},{"author":"zstone1","number":735,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":28,"deletions":0},{"file":"theories/topology.v","status":"M","additions":28,"deletions":0}],"state":"merged","open_date":"2022-08-27T05:05:07Z","update_date":"2022-08-29T13:57:45Z","discussion":[],"review_discussion":[{"author":"CohenCyril","file":"theories/topology.v","date":"2022-08-29T13:13:02Z","comment":"```suggestion\r\n  by case=> [[][]] ? ? [] ?; [left | left | right | right]; split.\r\nby case=> [][] ? ?; split=> []; [left; split | left | right; split | right]. \r\n```"}],"tags":[],"commits":[{"author":"zstone1","committer":"zstone1","hash":"fe232250c482ea5dad46ca82b7358811ed414761","message":"trying to write path stuff","date":"2022-08-27T03:16:31Z"},{"author":"zstone1","committer":"zstone1","hash":"0b7b6d5751f627c655707a7579ca7593fab309a4","message":"pasting lemma","date":"2022-08-27T04:55:32Z"},{"author":"zstone1","committer":"zstone1","hash":"08181766096e5b6488859af62dc4e994b6bccb71","message":"lint","date":"2022-08-27T05:00:27Z"},{"author":"zstone1","committer":"zstone1","hash":"8e7799f81b6c03cf901975c1d27750b3d0f64c08","message":"updating changelog","date":"2022-08-27T05:03:47Z"},{"author":"zstone1","committer":"zstone1","hash":"01ff6bf1bee96c7e3b77491c7f1fc5cccfac0ce3","message":"reverting change","date":"2022-08-27T05:04:06Z"},{"author":"zstone1","committer":"web-flow","hash":"3b6467f935ee1930255f7671441302e287bdf8f0","message":"Update theories/topology.v\n\nCo-authored-by: Cyril Cohen <CohenCyril@users.noreply.github.com>","date":"2022-08-29T13:21:30Z"}]},{"author":"affeldt-aist","number":734,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":72,"deletions":7},{"file":"theories/lebesgue_integral.v","status":"M","additions":72,"deletions":7},{"file":"theories/lebesgue_measure.v","status":"M","additions":72,"deletions":7},{"file":"theories/measure.v","status":"M","additions":72,"deletions":7}],"state":"merged","open_date":"2022-08-26T02:43:46Z","update_date":"2022-08-31T07:40:41Z","discussion":[],"review_discussion":[{"author":"CohenCyril","file":"theories/lebesgue_integral.v","date":"2022-08-29T13:28:32Z","comment":"```suggestion\r\nLemma integral_pushforward (f : Y -> \\bar R) :\r\n```"}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"9775a8f951506c77df222103aa479f0f26503e6b","message":"transfer lemma","date":"2022-08-31T06:44:36Z"}]},{"author":"affeldt-aist","number":733,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":18,"deletions":0},{"file":"theories/lebesgue_measure.v","status":"M","additions":18,"deletions":0}],"state":"merged","open_date":"2022-08-24T13:25:56Z","update_date":"2022-08-30T06:15:19Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"46c540833d16b7ccd7a2c4b9b49a525a0a3be189","message":"fine is a measurable_fun","date":"2022-08-24T13:25:10Z"}]},{"author":"affeldt-aist","number":732,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":143,"deletions":85},{"file":"theories/lebesgue_measure.v","status":"M","additions":143,"deletions":85},{"file":"theories/topology.v","status":"M","additions":143,"deletions":85}],"state":"merged","open_date":"2022-08-22T14:16:42Z","update_date":"2022-09-01T09:58:14Z","discussion":[{"author":"affeldt-aist","date":"2022-08-26T05:30:25Z","comment":"Perfect! I was reluctant to PR because I didn't know how to generalize. :-)"}],"review_discussion":[{"author":"zstone1","file":"theories/lebesgue_measure.v","date":"2022-08-24T15:49:38Z","comment":"I think we should generalize this further by using the subspace topology. I'm worried that requiring `open D` is too strict because continuous functions from `[0,1]` are important. If we add something here to prove that measurable subspaces have a sensible notion of open...\r\n```suggestion\r\nLemma open_measurable_subspace (D : set R) (U : set (subspace D)) : \r\n  measurable D -> open U -> measurable (D `&` U).\r\nProof.\r\nmove=> mD /open_subspaceP [V [oV] VD]; rewrite setIC -VD. \r\nby apply: measurableI => //; exact: open_measurable.\r\nQed.\r\n```"},{"author":"zstone1","file":"theories/lebesgue_measure.v","date":"2022-08-24T15:51:56Z","comment":"Then we can define this in terms of subspace continuity, which weakens the `open D` to just `measurable D`. Note also that when `D` is open, continuous_open_subspace applies and we can recover the original statement. \r\n```suggestion\r\nLemma continuous_measurable_fun (D : set R) (f : subspace D -> R) : \r\n  measurable D -> continuous f -> measurable_fun D f.\r\nProof.\r\nmove=> mD /continuousP cf; apply: (measurability (RGenOpens.measurableE R)).\r\nmove=> _ [_ [a [b ->] <-]]; apply: open_measurable_subspace => //.\r\nby exact/cf/interval_open.\r\nQed.\r\n```"},{"author":"CohenCyril","file":"theories/topology.v","date":"2022-08-29T13:26:47Z","comment":"I'd switch the name and call this one `continuous_inP`"},{"author":"affeldt-aist","file":"theories/lebesgue_measure.v","date":"2022-08-30T08:37:33Z","comment":"I'd like to keep the specialized version `open_continuous_measurable_fun` as a corollary."},{"author":"CohenCyril","file":"theories/lebesgue_measure.v","date":"2022-08-31T15:44:13Z","comment":"```suggestion\r\nby apply: continuous_measurable_fun; exact: open_measurable.\r\n```"},{"author":"CohenCyril","file":"theories/topology.v","date":"2022-08-31T16:36:21Z","comment":"This is a trivial consequence of continuousP for the subspace toploogy."},{"author":"CohenCyril","file":"theories/lebesgue_measure.v","date":"2022-08-31T16:51:55Z","comment":"```suggestion\r\nLemma subspace_continuous_measurable_fun (D : set R) (f : subspace D -> R) :\r\n```\r\n?\r\n(to preserve the previous names, also subspace topologies are maybe not the most commonly used, so longer name for them)"},{"author":"CohenCyril","file":"CHANGELOG_UNRELEASED.md","date":"2022-09-01T09:56:57Z","comment":"```suggestion\r\n```"}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"ab7110a3217ac98392ff1aede300a7e87b74ec73","message":"generalization of continuous_measurable_fun","date":"2022-09-01T06:48:36Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"95d342050559c3dd01d7ef4e605f5f1292c4ea95","message":"change naming","date":"2022-09-01T06:48:36Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"2e17ab0403bbb55e44a698d14a13860adff0fbca","message":"generalize continuous_measurable_fun further\n\nCo-authored-by: Zachary Stone <zstonex@gmail.com>","date":"2022-09-01T06:48:36Z"},{"author":"CohenCyril","committer":"affeldt-aist","hash":"d101109984eb8abfdd6c880a4f73b28fde52e3cf","message":"continuous_inP as a consequence of continuousP","date":"2022-09-01T06:53:13Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"df62972a2814bed19664ed8e44247f09972e6ef9","message":"fix naming, upd changelog","date":"2022-09-01T07:08:41Z"},{"author":"CohenCyril","committer":"web-flow","hash":"9acbfd0924721e9d70bb87aeeed33ee086faba8f","message":"Update CHANGELOG_UNRELEASED.md","date":"2022-09-01T09:57:05Z"}]},{"author":"proux01","number":731,"diff_summary":[{"file":".github/workflows/nix-action-8.16.yml","status":"A","additions":341,"deletions":3},{"file":".nix/config.nix","status":"A","additions":341,"deletions":3},{"file":".nix/coq-nix-toolbox.nix","status":"A","additions":341,"deletions":3}],"state":"merged","open_date":"2022-08-19T12:44:54Z","update_date":"2022-08-22T14:29:19Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"proux01","committer":"proux01","hash":"cd9644b1a39afded72f47704a010addb756f4498","message":"[CI] Update Nix CI","date":"2022-08-22T11:20:59Z"}]},{"author":"affeldt-aist","number":730,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":40,"deletions":3},{"file":"theories/constructive_ereal.v","status":"M","additions":40,"deletions":3},{"file":"theories/lebesgue_integral.v","status":"M","additions":40,"deletions":3}],"state":"merged","open_date":"2022-08-19T07:12:27Z","update_date":"2022-08-19T13:04:37Z","discussion":[{"author":"affeldt-aist","date":"2022-08-19T12:34:38Z","comment":"Thank you for the review."},{"author":"proux01","date":"2022-08-19T12:37:26Z","comment":"You're welcome.\r\nBTW, looks like the `Co-authored-by` information was not matched to a Github account, don't know if this is intentional."},{"author":"affeldt-aist","date":"2022-08-19T12:44:02Z","comment":"That was not intentional. It should be fixed now."}],"review_discussion":[{"author":"proux01","file":"theories/constructive_ereal.v","date":"2022-08-19T08:43:22Z","comment":"Maybe also add\r\n```Coq\r\nsubre_lt0 : x \\is a fin_num -> (x - y < 0) = (x < y)\r\nsuber_lt0 : y \\is a fin_num -> (x - y < 0) = (x < y)\r\nsube_ge0 : (x \\is a fin_num || y \\is a fin_num) -> (x - y < 0) = (x < y)\r\n```\r\nfor the sake of completeness. We also need the dual lemmas dsub..."},{"author":"proux01","file":"theories/constructive_ereal.v","date":"2022-08-19T08:44:59Z","comment":"```suggestion\r\nLemma ltNye_eq x : (-oo < x) = (x \\is a fin_num) || (x == +oo).\r\n```\r\nfor homogeneity with `leNye` for instance"}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"90dbe467aa7e7d741acffff61a1aaff623e3a754","message":"missing lemma in ereal\n\nCo-authored-by: IshiguroYoshihiro <103252572+IshiguroYoshihiro@users.noreply.github.com>","date":"2022-08-19T12:42:23Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"2550971f921f203cfcd9b87284f9cac8d644f43e","message":"more missing lemmas in ereal","date":"2022-08-19T12:42:33Z"}]},{"author":"affeldt-aist","number":729,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":78,"deletions":77},{"file":"theories/altreals/distr.v","status":"M","additions":78,"deletions":77},{"file":"theories/constructive_ereal.v","status":"M","additions":78,"deletions":77},{"file":"theories/esum.v","status":"M","additions":78,"deletions":77},{"file":"theories/lebesgue_integral.v","status":"M","additions":78,"deletions":77},{"file":"theories/measure.v","status":"M","additions":78,"deletions":77},{"file":"theories/sequences.v","status":"M","additions":78,"deletions":77}],"state":"merged","open_date":"2022-08-15T05:50:23Z","update_date":"2022-08-23T09:28:00Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"proux01","hash":"a7f6fb707164f07186a4944a365d5da794631a8d","message":"fixes #728","date":"2022-08-23T07:53:11Z"},{"author":"affeldt-aist","committer":"proux01","hash":"baa5c662aa22f61dfbf2aa3a22c8f30005653929","message":"fixes #727","date":"2022-08-23T07:53:11Z"},{"author":"affeldt-aist","committer":"proux01","hash":"73bc6e3708517c125ee755d115d7ddf11ead828f","message":"fixes #708","date":"2022-08-23T07:53:11Z"},{"author":"affeldt-aist","committer":"proux01","hash":"4d5a8f3a06fa06a4e0c56442da2d792e1125415e","message":"fixes #707","date":"2022-08-23T07:53:11Z"}]},{"author":"affeldt-aist","number":726,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":8,"deletions":4},{"file":"theories/measure.v","status":"M","additions":8,"deletions":4}],"state":"merged","open_date":"2022-08-12T02:42:01Z","update_date":"2022-08-23T00:37:45Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"080b3064e093553fa1cfb8a241cc91ae7c4da3b5","message":"minor generalization","date":"2022-08-12T02:44:26Z"}]},{"author":"affeldt-aist","number":724,"diff_summary":[{"file":"CHANGELOG.md","status":"M","additions":111,"deletions":104},{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":111,"deletions":104},{"file":"INSTALL.md","status":"M","additions":111,"deletions":104}],"state":"merged","open_date":"2022-08-09T23:55:39Z","update_date":"2022-08-10T01:58:57Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"a040a1175f6e0298afbb0ed9d5efa49a117754e0","message":"changelog for version 0.5.3","date":"2022-08-09T23:54:17Z"}]},{"author":"affeldt-aist","number":723,"diff_summary":[{"file":"theories/measure.v","status":"M","additions":0,"deletions":10}],"state":"merged","open_date":"2022-08-04T10:05:55Z","update_date":"2022-08-04T13:25:10Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"aced454f8414d13318f7e42094aeb038090c5bf3","message":"rm duplicated lemma","date":"2022-08-04T10:04:57Z"}]},{"author":"affeldt-aist","number":721,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":39,"deletions":24},{"file":"theories/ereal.v","status":"M","additions":39,"deletions":24},{"file":"theories/lebesgue_integral.v","status":"M","additions":39,"deletions":24},{"file":"theories/lebesgue_measure.v","status":"M","additions":39,"deletions":24},{"file":"theories/normedtype.v","status":"M","additions":39,"deletions":24},{"file":"theories/reals.v","status":"M","additions":39,"deletions":24},{"file":"theories/sequences.v","status":"M","additions":39,"deletions":24},{"file":"theories/set_interval.v","status":"M","additions":39,"deletions":24}],"state":"merged","open_date":"2022-08-03T05:02:16Z","update_date":"2022-08-05T14:42:48Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"a83fd732c816e4a190b3cd037cf8d93dc4d25da6","message":"use floor rather than Rfloor","date":"2022-08-03T05:00:30Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"c4c5d76ccd315aa3c57b6dee6d7bb92dd33ec4a6","message":"similar lemmas about ceil","date":"2022-08-05T09:32:38Z"}]},{"author":"affeldt-aist","number":720,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":12,"deletions":12},{"file":"theories/lebesgue_integral.v","status":"M","additions":12,"deletions":12}],"state":"merged","open_date":"2022-08-03T03:26:11Z","update_date":"2022-08-03T04:13:39Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"caeb5a2f49e7fecfa49677dc4cb1414940783622","message":"fixes #703","date":"2022-08-03T03:25:25Z"}]},{"author":"IshiguroYoshihiro","number":719,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":4,"deletions":0},{"file":"theories/classical_sets.v","status":"M","additions":4,"deletions":0}],"state":"merged","open_date":"2022-08-02T11:25:53Z","update_date":"2022-08-02T12:35:53Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"IshiguroYoshihiro","committer":"IshiguroYoshihiro","hash":"97a232e9dc4d0a4699f53107886cdcd51d6e4422","message":"add subset_refl","date":"2022-08-02T11:04:54Z"},{"author":"IshiguroYoshihiro","committer":"IshiguroYoshihiro","hash":"78d633abff9a89761f6dcc04d17355cf07975c4f","message":"subset_refl","date":"2022-08-02T11:19:41Z"},{"author":"IshiguroYoshihiro","committer":"IshiguroYoshihiro","hash":"8fc8c5bbb85e0ee86f84686998bf51f2631b116d","message":"subset_refl","date":"2022-08-02T11:20:24Z"}]},{"author":"zstone1","number":718,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":26,"deletions":0},{"file":"theories/normedtype.v","status":"M","additions":26,"deletions":0}],"state":"merged","open_date":"2022-08-01T22:25:29Z","update_date":"2022-08-20T03:07:47Z","discussion":[{"author":"affeldt-aist","date":"2022-08-02T05:45:53Z","comment":"I would be tempted to write:\r\n```\r\nDefinition contraction (q : {nonneg R}) (f : {fun U >-> V}) :=\r\n  ((q%:num < 1) * q%:num.-lipschitz_U f)%type.\r\n```\r\nso that at least one can rewrite with an hypothesis h : contraction q f\r\nto prove q%:num < 1 (i.e., without needing to do a case analysis on h),\r\nbut I am not sure.\r\n"},{"author":"zstone1","date":"2022-08-03T01:34:21Z","comment":"Interesting. I have not seen this trick before. Although, I can't find an example of it elsewhere in mathcomp analysis. For what it's worth, in the proof I have I need to case on the hypothesis to grab the lipschitz clause anyway.  "},{"author":"affeldt-aist","date":"2022-08-12T02:07:06Z","comment":"> For what it's worth, in the proof I have I need to case on the hypothesis to grab the lipschitz clause anyway.\r\n\r\nYes, of course. I believe that there is a better definition but I do not see how to improve it in the current state of affairs. Sorry for delaying merging with unfruitful thinking."}],"review_discussion":[],"tags":[],"commits":[{"author":"zstone1","committer":"zstone1","hash":"6d37870c0447011eadfa7c6ed71f9b79792ba7e3","message":"just contraction stuff\n\nnitpicking","date":"2022-08-18T00:52:57Z"},{"author":"zstone1","committer":"zstone1","hash":"29769df81188985934eccf3cadb659863e9f5501","message":"fixing changelog","date":"2022-08-18T00:53:53Z"}]},{"author":"IshiguroYoshihiro","number":717,"diff_summary":[],"state":"closed","open_date":"2022-07-29T08:13:44Z","update_date":"2022-08-02T10:53:10Z","discussion":[{"author":"proux01","date":"2022-08-02T08:56:53Z","comment":"@IshiguroYoshihiro thanks for the pull request but I only see a line added to the changelog file, not the lemma itself?"},{"author":"IshiguroYoshihiro","date":"2022-08-02T11:13:08Z","comment":"> @IshiguroYoshihiro thanks for the pull request but I only see a line added to the changelog file, not the lemma itself?\r\n\r\nThere was a mistake on a commiting. Sorry."},{"author":"proux01","date":"2022-08-02T11:27:30Z","comment":"No worries. You could have updated this pull request rather than opening #719 , but this is fine too."}],"review_discussion":[],"tags":[],"commits":[]},{"author":"affeldt-aist","number":716,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":10,"deletions":3},{"file":"theories/classical_sets.v","status":"M","additions":10,"deletions":3},{"file":"theories/topology.v","status":"M","additions":10,"deletions":3}],"state":"merged","open_date":"2022-07-29T03:07:48Z","update_date":"2022-08-02T05:28:47Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"d62a04e217f546b408290e05fc3a8f54cf2940dd","message":"add lemma setT_unit","date":"2022-08-02T05:05:58Z"}]},{"author":"affeldt-aist","number":715,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":23,"deletions":17},{"file":"theories/lebesgue_integral.v","status":"M","additions":23,"deletions":17},{"file":"theories/lebesgue_measure.v","status":"M","additions":23,"deletions":17},{"file":"theories/measure.v","status":"M","additions":23,"deletions":17}],"state":"merged","open_date":"2022-07-29T00:51:54Z","update_date":"2022-08-23T16:03:21Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"proux01","hash":"d3856f039e86f1cbc790d647cebd1c9ca5ebeab7","message":"fixes #664","date":"2022-08-23T14:42:01Z"}]},{"author":"affeldt-aist","number":713,"diff_summary":[{"file":"NIX.md","status":"M","additions":3,"deletions":1}],"state":"merged","open_date":"2022-07-28T09:57:19Z","update_date":"2022-08-02T08:39:06Z","discussion":[{"author":"affeldt-aist","date":"2022-08-02T08:34:19Z","comment":"I chose no-deamon for the default choice because @proux01 mentioned during the last meeting that he couldn't get the aternative to work and I myself used no-deamon successfully. Any way, there is now a link to the nix documentation."},{"author":"proux01","date":"2022-08-02T08:38:59Z","comment":"Let's merge"}],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"00aa62a5957c33f8c983a1e15f97872adb6d5c93","message":"fixes #699","date":"2022-07-28T09:56:25Z"}]},{"author":"affeldt-aist","number":712,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":447,"deletions":348},{"file":"theories/lebesgue_integral.v","status":"M","additions":447,"deletions":348},{"file":"theories/mathcomp_extra.v","status":"M","additions":447,"deletions":348},{"file":"theories/normedtype.v","status":"M","additions":447,"deletions":348},{"file":"theories/topology.v","status":"M","additions":447,"deletions":348}],"state":"merged","open_date":"2022-07-28T05:56:23Z","update_date":"2022-08-02T08:52:06Z","discussion":[{"author":"proux01","date":"2022-08-01T13:44:35Z","comment":"@affeldt-aist I've opened a first backporting PR on MathComp: https://github.com/math-comp/math-comp/pull/910 (and adapted the current PR)"}],"review_discussion":[{"author":"proux01","file":"theories/normedtype.v","date":"2022-07-28T06:44:04Z","comment":"Maybe rather than having this specific to min, this can be generalized to any idempotent operator?\r\n(I would then move that to mathcomp_extra if not already in MC)"},{"author":"proux01","file":"theories/normedtype.v","date":"2022-07-28T06:45:33Z","comment":"Why can't we use a generic split lemma on bigop and AC operators?"},{"author":"proux01","file":"theories/normedtype.v","date":"2022-07-28T06:48:08Z","comment":"I would also expect this to be true for any idempotent and AC operator"},{"author":"proux01","file":"theories/normedtype.v","date":"2022-07-28T06:49:31Z","comment":"Would also expect a generic bigop lemma here on AC operators"},{"author":"proux01","file":"theories/mathcomp_extra.v","date":"2022-07-29T07:08:50Z","comment":"Just for completeness, I would add:\r\n```coq\r\nLemma big_idr (T : Type) op I r (P : pred I) (F : I -> T) x :\r\n  idempotent op -> associative op ->\r\n  \\big[op/x]_(i <- r | P i) F i = op (\\big[op/x]_(i <- r | P i) F i) x.\r\nProof.\r\nmove=> opxx opA; rewrite -big_filter; elim: [seq i <- r | P i] => [|i l ihl].\r\n  by rewrite big_nil opxx.\r\nby rewrite big_cons -opA ihl -opA opxx.\r\nQed.\r\n```"},{"author":"proux01","file":"theories/mathcomp_extra.v","date":"2022-07-29T07:12:08Z","comment":"```suggestion\r\nLemma big_seq1_id (T : Type) op I (i : I) (F : I -> T) x :\r\n```\r\nand no need for the module? (this seems inconvenient to import as it would mask the other lemmas)"},{"author":"proux01","file":"theories/mathcomp_extra.v","date":"2022-07-29T07:12:45Z","comment":"```suggestion\r\nLemma big_pred1_eq_id (T : Type) op (I : finType) (i : I) (F : I -> T) x :\r\n```"},{"author":"proux01","file":"theories/mathcomp_extra.v","date":"2022-07-29T07:13:04Z","comment":"```suggestion\r\nLemma big_pred1_id (T : Type) op (I : finType) i (P : pred I) (F : I -> T) x :\r\n```"},{"author":"proux01","file":"theories/mathcomp_extra.v","date":"2022-07-29T07:17:45Z","comment":"```suggestion\r\nLemma big_mkcond_idem (T : Type) op I r (P : pred I) (F : I -> T) x :\r\n```"},{"author":"proux01","file":"theories/mathcomp_extra.v","date":"2022-07-29T07:19:03Z","comment":"```suggestion\r\nLemma big_split_idem (T : Type) op I r (P : pred I) (F1 F2 : I -> T) x :\r\n```"},{"author":"proux01","file":"theories/mathcomp_extra.v","date":"2022-07-29T07:20:34Z","comment":"```suggestion\r\n\r\n(*******************************)\r\n(* MathComp > 1.15.0 additions *)\r\n(*******************************)\r\n\r\n```"},{"author":"proux01","file":"theories/mathcomp_extra.v","date":"2022-07-29T07:22:00Z","comment":"```suggestion\r\nLemma bigID_idem (T : Type) op I r (a P : pred I) (F : I -> T) x :\r\n```"},{"author":"proux01","file":"theories/mathcomp_extra.v","date":"2022-07-29T07:30:07Z","comment":"```suggestion\r\n```"},{"author":"proux01","file":"theories/mathcomp_extra.v","date":"2022-07-29T07:30:28Z","comment":"indentation nitpicking\r\n```suggestion\r\nhave eqop i : P i ->\r\n    op (if a i then F i else x) (if ~~ a i then F i else x) = op (F i) x.\r\n  by move=> _; case: (a i) => //=; rewrite opC.\r\n```"},{"author":"proux01","file":"theories/mathcomp_extra.v","date":"2022-07-29T08:36:32Z","comment":"We don't need idempotence here:\r\n```suggestion\r\nLemma bigD1 (T : Type) op (I : finType) j (P : pred I) (F : I -> T) x :\r\n  left_commutative op -> P j ->\r\n  \\big[op/x]_(i | P i) F i = op (F j) (\\big[op/x]_(i | P i && (i != j)) F i).\r\nProof.\r\nmove=> opCA; move: (index_enum_uniq I) (mem_index_enum j).\r\nelim: index_enum => [//|a l ihl]; rewrite cons_uniq => /andP[+ ul] => /[swap].\r\nrewrite in_cons => /orP[/eqP<-|jl anl Pj]; rewrite !big_cons; last first.\r\n  have -> : a != j by case: eqP jl anl => // -> ->.\r\n  by case: (P a); rewrite ihl// opCA.\r\nrewrite eqxx => jnl /[dup] Pj -> /=.\r\ncongr op; rewrite big_seq_cond [RHS]big_seq_cond; apply: eq_bigl => i.\r\ncase il: (i \\in l) => [/=|//].\r\nby case: (@eqP _ i j) il jnl => [-> -> //|]; rewrite andbT.\r\nQed.\r\n```\r\nbut I don't know what should be the name?"},{"author":"proux01","file":"theories/mathcomp_extra.v","date":"2022-07-29T08:42:54Z","comment":"Maybe add `bigmax_idr` just for completeness"},{"author":"proux01","file":"theories/mathcomp_extra.v","date":"2022-07-29T08:43:41Z","comment":"maybe add `bigmin_idr`"},{"author":"proux01","file":"theories/mathcomp_extra.v","date":"2022-07-29T08:45:58Z","comment":"Yes, it should be renamed `bigmax_sup_nat`, that will require some painful deprecation phase"}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"proux01","hash":"daabfab93c45b30977c5533efffc979e682d39de","message":"fixes #711","date":"2022-08-02T08:51:51Z"},{"author":"affeldt-aist","committer":"proux01","hash":"7c76fea870adab818638e53fe6073d3241b16830","message":"more generalizations and renamings","date":"2022-08-02T08:51:51Z"},{"author":"affeldt-aist","committer":"proux01","hash":"6e7d834c936e6a55014ccf4a6863e9ab780aa935","message":"minor improvement","date":"2022-08-02T08:51:51Z"},{"author":"proux01","committer":"proux01","hash":"30481c465a0593970767ceed9d7391a65874703e","message":"Adapt to math-comp/math-comp#910","date":"2022-08-02T08:51:51Z"},{"author":"proux01","committer":"proux01","hash":"fd57328e366d4fe0b591f9684caf63336f654aa9","message":"Add comment","date":"2022-08-02T08:51:51Z"},{"author":"affeldt-aist","committer":"proux01","hash":"e820ed2e8b04b07af3e5007ab85c7b2b6eaca699","message":"minor fixes\n\n- fix changelog\n- shorten proofs\n- rm local Arguments (that were anyway reverted when closing the section)\n- minor formatting issues","date":"2022-08-02T08:51:51Z"},{"author":"affeldt-aist","committer":"proux01","hash":"b97d934f0a7e9e9538b80d6cafeea87beab48a80","message":"more resolved and cosmetics","date":"2022-08-02T08:51:51Z"}]},{"author":"affeldt-aist","number":710,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":211,"deletions":157},{"file":"theories/classical_sets.v","status":"M","additions":211,"deletions":157},{"file":"theories/esum.v","status":"M","additions":211,"deletions":157},{"file":"theories/fsbigop.v","status":"M","additions":211,"deletions":157},{"file":"theories/lebesgue_integral.v","status":"M","additions":211,"deletions":157},{"file":"theories/lebesgue_measure.v","status":"M","additions":211,"deletions":157},{"file":"theories/measure.v","status":"M","additions":211,"deletions":157}],"state":"merged","open_date":"2022-07-26T09:56:51Z","update_date":"2022-08-30T07:56:27Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"f41d60068f2849f23a2dea86650b49fd4d912b6f","message":"use set instead of fset in esum","date":"2022-08-30T07:21:26Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"43c57326cae6b0a9ea6dce0fd4af5d89ccbd3757","message":"favor fsbig","date":"2022-08-30T07:21:26Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"1437105e7263085eb129a4fc08516d2cb6ce73e3","message":"minor improvements","date":"2022-08-30T07:33:53Z"}]},{"author":"affeldt-aist","number":709,"diff_summary":[{"file":"theories/measure.v","status":"M","additions":6,"deletions":6}],"state":"merged","open_date":"2022-07-26T04:16:47Z","update_date":"2022-07-26T06:47:58Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"21a0c606123ce5ea41465a1501ff6ffaa0f31f7e","message":"use the short pragma in measure.v","date":"2022-07-26T04:14:38Z"}]},{"author":"affeldt-aist","number":706,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":6,"deletions":4},{"file":"theories/lebesgue_integral.v","status":"M","additions":6,"deletions":4}],"state":"merged","open_date":"2022-07-22T14:11:17Z","update_date":"2022-07-28T10:10:50Z","discussion":[{"author":"CohenCyril","date":"2022-07-27T12:59:20Z","comment":"Rebase and merge"}],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"dd761fbe344fe04040940a0da208b7ee295ad6a4","message":"minor generalization of eq_measure_integral","date":"2022-07-28T09:48:25Z"}]},{"author":"affeldt-aist","number":705,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":202,"deletions":146},{"file":"theories/lebesgue_integral.v","status":"M","additions":202,"deletions":146},{"file":"theories/measure.v","status":"M","additions":202,"deletions":146}],"state":"merged","open_date":"2022-07-22T13:18:55Z","update_date":"2022-08-30T06:57:21Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"75eaf8e86610111ede4ce6ac99e4e6ef4c741273","message":"ge0_integral_mscale","date":"2022-08-30T06:17:39Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"ce19a50776ac9fa93bfff5cc79052e5366e392d9","message":"add and use specialized lemmas to shorten\n\n- renaming","date":"2022-08-30T06:19:45Z"}]},{"author":"CohenCyril","number":704,"diff_summary":[{"file":".nix/config.nix","status":"M","additions":16,"deletions":13},{"file":"theories/ereal.v","status":"M","additions":16,"deletions":13}],"state":"merged","open_date":"2022-07-22T11:26:31Z","update_date":"2022-07-22T12:57:34Z","discussion":[{"author":"affeldt-aist","date":"2022-07-22T11:28:45Z","comment":"Is it ok that this PR also modifies `config.nix`?"},{"author":"CohenCyril","date":"2022-07-22T11:45:08Z","comment":"> Is it ok that this PR also modifies `config.nix`?\r\n\r\nIt's a fix to local setup for nix users, maybe I should separate the PR.... I dunno"}],"review_discussion":[{"author":"proux01","file":"theories/ereal.v","date":"2022-07-22T11:58:10Z","comment":"I would expect the same simplification for `addeAC`, `addeCA` and `addeACA`"},{"author":"CohenCyril","file":"theories/ereal.v","date":"2022-07-22T12:44:21Z","comment":"Which I did, right?"},{"author":"proux01","file":"theories/ereal.v","date":"2022-07-22T12:57:27Z","comment":"Indeed, my bad :(\r\nLet's merge then."}],"tags":[],"commits":[{"author":"CohenCyril","committer":"CohenCyril","hash":"b64da22443c0746d21c5363658b1fa3803a7d23f","message":"Shorter proofs and missing instances for mule","date":"2022-07-22T11:25:28Z"}]},{"author":"affeldt-aist","number":702,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":6,"deletions":4},{"file":"theories/lebesgue_integral.v","status":"M","additions":6,"deletions":4}],"state":"merged","open_date":"2022-07-22T10:45:45Z","update_date":"2022-07-22T14:47:07Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"7737709456eca50ab018fd37cd528e8889751c9c","message":"fixes pretty-printing mfun, sfun, nnfun","date":"2022-07-22T10:44:51Z"}]},{"author":"affeldt-aist","number":700,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":11,"deletions":0},{"file":"theories/ereal.v","status":"M","additions":11,"deletions":0}],"state":"merged","open_date":"2022-07-22T09:45:02Z","update_date":"2022-07-22T11:00:44Z","discussion":[],"review_discussion":[{"author":"proux01","file":"theories/ereal.v","date":"2022-07-22T09:51:53Z","comment":"What about adding\r\n```Coq\r\nLemma muleACA : interchange (@mule R).\r\n```\r\nwhile you are at it?"}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"c2c5f8752bf9c238c52e814f3565097388746371","message":"muleAC, muleCA, muleACA","date":"2022-07-22T09:56:38Z"}]},{"author":"CohenCyril","number":698,"diff_summary":[{"file":".github/pull_request_template.md","status":"A","additions":5754,"deletions":5835},{"file":".github/workflows/docker-action.yml","status":"A","additions":5754,"deletions":5835},{"file":".github/workflows/nix-action-8.14.yml","status":"A","additions":5754,"deletions":5835},{"file":".github/workflows/nix-action-8.15.yml","status":"A","additions":5754,"deletions":5835},{"file":".github/workflows/nix-action-8.16.yml","status":"A","additions":5754,"deletions":5835},{"file":".github/workflows/nix-action-8.17.yml","status":"A","additions":5754,"deletions":5835},{"file":".github/workflows/nix-action-master.yml","status":"A","additions":5754,"deletions":5835},{"file":".nix/config.nix","status":"A","additions":5754,"deletions":5835},{"file":".nix/coq-nix-toolbox.nix","status":"A","additions":5754,"deletions":5835},{"file":".nix/coq-overlays/mathcomp/default.nix","status":"A","additions":5754,"deletions":5835},{"file":"CHANGELOG.md","status":"A","additions":5754,"deletions":5835},{"file":"CHANGELOG_UNRELEASED.md","status":"A","additions":5754,"deletions":5835},{"file":"INSTALL.md","status":"A","additions":5754,"deletions":5835},{"file":"README.md","status":"A","additions":5754,"deletions":5835},{"file":"_CoqProject","status":"A","additions":5754,"deletions":5835},{"file":"classical/boolp.v","status":"A","additions":5754,"deletions":5835},{"file":"classical/cardinality.v","status":"A","additions":5754,"deletions":5835},{"file":"classical/classical_sets.v","status":"A","additions":5754,"deletions":5835},{"file":"classical/fsbigop.v","status":"A","additions":5754,"deletions":5835},{"file":"classical/functions.v","status":"A","additions":5754,"deletions":5835},{"file":"classical/mathcomp_extra.v","status":"A","additions":5754,"deletions":5835},{"file":"theories/Rstruct.v","status":"A","additions":5754,"deletions":5835},{"file":"theories/altreals/discrete.v","status":"A","additions":5754,"deletions":5835},{"file":"theories/altreals/distr.v","status":"A","additions":5754,"deletions":5835},{"file":"theories/altreals/realseq.v","status":"A","additions":5754,"deletions":5835},{"file":"theories/constructive_ereal.v","status":"A","additions":5754,"deletions":5835},{"file":"theories/derive.v","status":"A","additions":5754,"deletions":5835},{"file":"theories/ereal.v","status":"A","additions":5754,"deletions":5835},{"file":"theories/esum.v","status":"A","additions":5754,"deletions":5835},{"file":"theories/exp.v","status":"A","additions":5754,"deletions":5835},{"file":"theories/forms.v","status":"A","additions":5754,"deletions":5835},{"file":"theories/itv.v","status":"A","additions":5754,"deletions":5835},{"file":"theories/landau.v","status":"A","additions":5754,"deletions":5835},{"file":"theories/lebesgue_integral.v","status":"A","additions":5754,"deletions":5835},{"file":"theories/lebesgue_measure.v","status":"A","additions":5754,"deletions":5835},{"file":"theories/measure.v","status":"A","additions":5754,"deletions":5835},{"file":"theories/normedtype.v","status":"A","additions":5754,"deletions":5835},{"file":"theories/numfun.v","status":"A","additions":5754,"deletions":5835},{"file":"theories/prodnormedzmodule.v","status":"A","additions":5754,"deletions":5835},{"file":"theories/real_interval.v","status":"A","additions":5754,"deletions":5835},{"file":"theories/realfun.v","status":"A","additions":5754,"deletions":5835},{"file":"theories/reals.v","status":"A","additions":5754,"deletions":5835},{"file":"theories/sequences.v","status":"A","additions":5754,"deletions":5835},{"file":"theories/signed.v","status":"A","additions":5754,"deletions":5835},{"file":"theories/summability.v","status":"A","additions":5754,"deletions":5835},{"file":"theories/topology.v","status":"A","additions":5754,"deletions":5835},{"file":"theories/trigo.v","status":"A","additions":5754,"deletions":5835}],"state":"open","open_date":"2022-07-13T13:52:49Z","update_date":"2023-04-05T15:07:52Z","discussion":[{"author":"proux01","date":"2022-07-13T15:19:07Z","comment":"I needed to add a Nix overlay to let Nix know about the mathcomp -> HB dependency, then\r\n```\r\nnix-shell --argstr bundle \"8.15\" --argstr job \"mathcomp-analysis\"  \r\n```\r\nshould work"},{"author":"CohenCyril","date":"2022-07-13T15:41:03Z","comment":"> I needed to add a Nix overlay to let Nix know about the mathcomp -> HB dependency, then\r\n> \r\n> ```\r\n> nix-shell --argstr bundle \"8.15\" --argstr job \"mathcomp-analysis\"  \r\n> ```\r\n> \r\n> \r\n\r\nOh did I forget to commit something?"},{"author":"proux01","date":"2022-07-19T14:54:11Z","comment":"@CohenCyril I'll need your help here, this is stuck on a `HB.instance` failing with message\r\n```\r\nHB: cannot inhabit mixin Order_POrder_IsLattice on set T\r\n```\r\nwhich I don't understand (c.f. last `FIXME` in classical_sets.v)"},{"author":"proux01","date":"2022-07-20T16:34:18Z","comment":"Fixed, there was a missing instance. I wonder whether this should be considered a bug of HB though?\r\n```Coq\r\n(* works *)\r\nCheck [the choiceType of set T].\r\n\r\n(* works (no evar) *)\r\nCheck Order.IsMeetJoinDistrLattice.Build set_display (set T)\r\n    le_def lt_def (@setIC _) (@setUC _) (@setIA _) (@setUA _)\r\n    joinKI meetKU (@setIUl _) setIid.\r\n\r\n(* fails: \"Error: HB: cannot inhabit mixin Order_POrder_IsLattice on set T\" *)\r\nFail #[export]\r\nHB.instance Definition _ :=\r\n  Order.IsMeetJoinDistrLattice.Build set_display (set T)\r\n    le_def lt_def (@setIC _) (@setUC _) (@setIA _) (@setUA _)\r\n    joinKI meetKU (@setIUl _) setIid.\r\n\r\n#[export]\r\nHB.instance Definition _ : Choice (set T) := Choice.copy _ (set T).\r\n\r\n(* now works *)\r\n#[export]\r\nHB.instance Definition _ :=\r\n  Order.IsMeetJoinDistrLattice.Build set_display (set T)\r\n    le_def lt_def (@setIC _) (@setUC _) (@setIA _) (@setUA _)\r\n    joinKI meetKU (@setIUl _) setIid.\r\n```\r\n\r\nMore generally: shouldn't an `HB.instance` that doesn't instantiate any structure be an error? (I often do the mistake and then fail to realize I forgot to instantiante a previous structure)."},{"author":"CohenCyril","date":"2022-07-22T14:21:49Z","comment":"> More generally: shouldn't an `HB.instance` that doesn't instantiate any structure be an error? (I often do the mistake and then fail to realize I forgot to instantiante a previous structure).\r\n\r\nNo, it should not, since adding new structures in the middle of the hierarchy might make some `HB.instance` redundant (hence no new instance is created) for which we do not want to raise error for backward compatibility reasons.\r\nWe could raise a warning though, to bring some attention, either to the user who ports a library to a new hierarchy, or for your usecase."},{"author":"affeldt-aist","date":"2022-07-26T04:03:16Z","comment":"Just for information.\r\nCompilation fails on my side at `FilteredEntourage_IsUniform` [1]\r\nwhile it looks like it should be going a bit further.\r\nIt is actually the second time that I observe such a discrepancy.\r\nI thought that using `nix-shell` would guarantee exactly the same environment.\r\nIs it wrong?\r\n\r\n--\r\n[1]\r\n```\r\nError:\r\nHB: cannot infer some information in \r\nParameterM : Type\r\nParameterlocal_mixin_choice_HasChoice : HasChoice.axioms_ elpi_ctx_entry_0_\r\nParameterlocal_mixin_eqtype_HasDecEq : Equality.mixin_of elpi_ctx_entry_0_\r\nParameterlocal_mixin_classical_sets_IsPointed : IsPointed.axioms_ elpi_ctx_entry_0_ elpi_ctx_entry_1_ elpi_ctx_entry_2_\r\nParameterlocal_mixin_topology_IsFiltered : IsFiltered.axioms_ elpi_ctx_entry_0_ elpi_ctx_entry_0_\r\nParameterlocal_mixin_topology_HasEntourage : HasEntourage.axioms_ elpi_ctx_entry_0_\r\naxioms_ : Type := Axioms_ {\r\n  uniform_ax1 : Filter entourage;\r\n  uniform_ax2 : forall A : ?elpi_evar * ?elpi_evar -> Prop,\r\nentourage A -> [set xy | xy.1 = xy.2] `<=` A;\r\n  uniform_ax3 : forall A : ?elpi_evar0 * ?elpi_evar0 -> Prop,\r\nentourage A -> entourage (A^-1)%classic;\r\n  uniform_ax4 : forall A : ?elpi_evar1 * ?elpi_evar1 -> Prop,\r\nentourage A ->\r\nexists2 B : ?elpi_evar1 * ?elpi_evar1 -> Prop, entourage B & B \\o B `<=` A;\r\n  uniform_ax5 : nbhs = nbhs_ entourage;\r\n}\r\n```"},{"author":"proux01","date":"2022-07-26T06:42:58Z","comment":"@affeldt-aist no, that's also what I'm experiencing with\r\n```\r\nnix-shell --arg withEmacs true --argstr bundle \"8.16\" --argstr job \"mathcomp-analysis\"\r\n```\r\nI indeed got further but realized I made something slightly wrong an went back \"fixing\" it. That's when I encoutered this issue and stopped there. Sorry, I should have put an explanatory comment."},{"author":"proux01","date":"2022-07-26T11:41:29Z","comment":"@CohenCyril @affeldt-aist I put a list of files currently needing porting / with someone working on them in the description of the PR on top, please edit as files become available / check boxes when you are working on one"},{"author":"CohenCyril","date":"2022-07-26T11:43:35Z","comment":"I would also put the name of the person working on it on the side."},{"author":"affeldt-aist","date":"2022-07-27T07:42:18Z","comment":"I haven't figured out weak_topologicalTypeMixin but maybe at least nbhs_of_open that will be used ought better be outisde of a builders section to stay accessible."},{"author":"proux01","date":"2022-07-27T07:45:51Z","comment":"It seems that often, the complicated `Definition foo_mixin` without a `Canonical foo_type := FooType foo_mixin` just after should become HB factories and builders (but that's sometimes easier to say than to do)."},{"author":"CohenCyril","date":"2022-07-27T07:47:05Z","comment":"> I haven't figured out weak_topologicalTypeMixin b\r\n\r\nI have, I will post it soon or I can show you."},{"author":"CohenCyril","date":"2022-07-27T09:35:22Z","comment":"@affeldt-aist @proux01 in order to fix the `product_topology` bit I need to have the canonical pointed type on a dependent product, so I committed only the weak and sup topology and I will investigate or workaround the issue on dependent products."},{"author":"proux01","date":"2022-07-27T16:20:09Z","comment":"`measure.v` was fairly easy to port.\r\nBut I encountered some `Qed` failures, apparently when using `congr (lim _)`, I should investigate."},{"author":"proux01","date":"2022-07-29T12:19:39Z","comment":"Rebased and force pushed to trigger the CI.\r\n"},{"author":"proux01","date":"2022-08-01T07:27:34Z","comment":"FYI, CI is green on 8.15, 8.16 and master (of course, there are still a few things commented out in topology.v)."},{"author":"zstone1","date":"2023-02-08T18:35:49Z","comment":"FYI, I've merged several results (metrics for supremums and quotients) in the last few days that involve some mixins. Just a heads up to \r\nA) Expect the rebase of topology.v to _not_ build correctly the first time\r\nB) Reach out to me if you run into any issues porting these changes\r\nI'm happy to do whatever is helpful. I just want to make ensure I'm not duplicating or interfering with your work. "},{"author":"proux01","date":"2023-02-09T07:43:19Z","comment":"Thanks for the head up @zstone1 ! As @CohenCyril said, the HB port shouldn't hinder further development in the main branch, so your changes are fine. Of course, if at some point you want to help completing the HB port (you are probably the best expert of the part of the code that remains to port), that would be welcome, but certainly not an obligation."},{"author":"zstone1","date":"2023-02-28T19:55:52Z","comment":"I'd be happy to make an attempt at porting the rest. I have some free time coming up, so I should be able to make some progress.  What would help me a lot:\r\n1. Any blockers? For example, things that we know need corresponding updates in HB itself. \r\n2. Any changes to the math? For example, do you expect any definitions to change in edge cases? \r\n3. Any areas I shouldn't touch?\r\n4. In terms of git management, my plan is to duplicate this branch in my fork, and then make PRs against this branch (rather than master) is that the right approach? \r\n\r\nI think the first step is a rebase, which might be challenging in its own right."},{"author":"CohenCyril","date":"2023-03-01T08:58:51Z","comment":"@affeldt-aist and I suggest we have a meeting about this port, I'm stuck in the middle of a problem of topology and I could use your advice @zstone1. Let's try to find a date.\r\n(@affeldt-aist do you want to try to do this while you're still in the french timezone?)"},{"author":"affeldt-aist","date":"2023-03-01T12:03:42Z","comment":"(@affeldt-aist do you want to try to do this while you're still in the french timezone?)\r\n\r\nThis is a good idea.\r\n\r\n"},{"author":"zstone1","date":"2023-03-01T15:51:37Z","comment":"Yeah, I'd love to help here. A couple things\r\n- Let me know what day works. I'm taking the next couple weeks off work anyway, so I'm pretty free.\r\n- I tried to build this branch, but discovered I'm the only one using vscoq. I can use the nix-shell to `make` just fine. But vscoq doesn't use the right nix artifacts. I'll figure something out."}],"review_discussion":[{"author":"CohenCyril","file":"theories/topology.v","date":"2022-07-25T09:05:13Z","comment":"So it's a actually a bug in the error message: the  `T` before the `:=` is never used.\r\nWhen defining Topological it is considered as a phantom type, but in some auxiliary definitions it's not abstracted appropriately because we assume all the parameters of the structure are parameters of the factories.\r\nI think we should print an error message when it's not the case."},{"author":"CohenCyril","file":"theories/topology.v","date":"2022-07-25T09:08:14Z","comment":"BTW this is math-comp/hierarchy-builder#298 (for archiving purposes)\r\n"},{"author":"proux01","file":"theories/topology.v","date":"2022-07-25T09:18:38Z","comment":"Oups, indeed"},{"author":"affeldt-aist","file":"theories/lebesgue_measure.v","date":"2023-04-05T14:12:09Z","comment":"NB: non forgetful inheritance detected"},{"author":"affeldt-aist","file":"theories/lebesgue_measure.v","date":"2023-04-05T14:12:26Z","comment":"non forgetful inheritance detected"},{"author":"affeldt-aist","file":"theories/lebesgue_measure.v","date":"2023-04-05T14:27:24Z","comment":"Using `measurableTypeR` instead of `R` makes the warning disappear but causes problems later (in the sense that one needs to explicitly use `measurableTypeR` here and there).\r\nIs it a case of controlled/harmless non-forgetful inheritance for which the warning should be silenced?"}],"tags":[{"tag":"enhancement :sparkles:","description":"This issue/PR is about adding new features enhancing the library"},{"tag":"experiment :test_tube:","description":"This issue/PR is very experimental"}],"commits":[{"author":"CohenCyril","committer":"proux01","hash":"be7aa7c540693cdd45c7a6c29b82b0dd34687946","message":"Port to Hierarchy-builder\n\nCo-authored-by: Cyril Cohen <cohen@crans.org>\nCo-authored-by: Reynald Affeldt <reynald.affeldt@aist.go.jp>","date":"2023-03-24T15:03:41Z"},{"author":"proux01","committer":"proux01","hash":"2f0971864da6b6d45c86564f532b8aaf2ccad700","message":"Add notation for dual_extended","date":"2023-03-24T15:03:41Z"},{"author":"proux01","committer":"proux01","hash":"da3c61b82c3019e1ff7cbf0cdc05fd5f1c397c7d","message":"Add Zsemimodule instances on ereal","date":"2023-03-24T15:03:41Z"},{"author":"proux01","committer":"proux01","hash":"70c7c8e4238ee5445384f5bd0e43d3d8e926d9e9","message":"Change +%E notations to use GRing.add","date":"2023-03-24T15:03:41Z"},{"author":"proux01","committer":"proux01","hash":"847d558fd37c13802bd2c3a3d86734acb69c1db0","message":"Don't use dEFin in notation","date":"2023-03-24T15:03:41Z"},{"author":"affeldt-aist","committer":"proux01","hash":"329cb345bd4d9f61a189d3344cbf93b0f36f96f6","message":"sumeN (#815)\n\n* sumeN, renaming, generalization","date":"2023-03-24T15:03:41Z"},{"author":"zstone1","committer":"proux01","hash":"238ecdaceac0ece33dce5f658b9391410958613f","message":"Quotient topology (#786)\n\n* quotient topology\n\n* docs\n\n* trying to fix build\n\n* cleaning up proof\n\n* more general quotients\n\n* docs\n\n* trying to fix build\n\n* nitpicks\n\n* quotType alias\n\n* fix changelog\n\n* fixing changelog again\n\n---------\n\nCo-authored-by: Reynald Affeldt <reynald.affeldt@aist.go.jp>","date":"2023-03-24T15:03:41Z"},{"author":"zstone1","committer":"proux01","hash":"d849efa17f925af20af985dfc44b1412e5e33d75","message":"Product embedding (#768)\n\n* swapping machines\n\n* proof of open map\n\n* hausdorff accessible\n\n* weak products equivalent\n\n* changelog\n\n* strengthen join_product_weak\n\n* cleaning up proofs\n\n* typos\n\n* adding local notations for proof legibility\n\n* merging product stuff\n\n* fixing changelog\n\n* specialized conjunctions to use less brackets and splits\n\n* fixing grammar\n\n* fix changelog\n\n* fixing build\n\n* more build fixes\n\n---------\n\nCo-authored-by: Reynald Affeldt <reynald.affeldt@aist.go.jp>","date":"2023-03-24T15:03:41Z"},{"author":"affeldt-aist","committer":"proux01","hash":"c65401dcb737d6c6acec4207b8e7c6d73fd867f4","message":"add other work using mca (#837)","date":"2023-03-24T15:03:41Z"},{"author":"affeldt-aist","committer":"proux01","hash":"050367e5823cff53473cfa1b44fc97cdeaca9979","message":"rename and doc finSubCover (#832)\n\n- use cover in finSubCover\n- use [set: ] instead of @setT\n- use shortcut notation for set comprehension","date":"2023-03-24T15:03:41Z"},{"author":"zstone1","committer":"proux01","hash":"c7c4824ecbd782b58e4232d22530e763ebfd356e","message":"Countable products of metrics is metrizable (#763)\n\n* proving sups preserve countable ent\n\n* proof going through\n\n* unused proofs\n\n* linting\n\n* metric implies countable uniformity\n\n* fixing changelog\n\n* linting\n\n* metric for products\n\n* linting\n\n* fixing docs\n\n* use %:pos\n\n* fixing changelog\n\n* fix changelog\n\n* nitpicking\n\n---------\n\nCo-authored-by: Reynald Affeldt <reynald.affeldt@aist.go.jp>","date":"2023-03-24T17:18:25Z"},{"author":"zstone1","committer":"proux01","hash":"7cad4440ad73d49d6939afaa69ce320fa79cbd2c","message":"Clopen and Connected sets (#840)\n\n* simplifying clopen proofs\n\n* clopen separations\n\n* adding docs\n\n* linting.\n\n* nitpicks, trailing spaces, lint\n\n---------\n\nCo-authored-by: Reynald Affeldt <reynald.affeldt@aist.go.jp>","date":"2023-03-24T21:58:14Z"},{"author":"affeldt-aist","committer":"proux01","hash":"e750162f866adfa305a6bc66f905870ad4a58bcb","message":"minor generalizations (#848)\n\n- fixes #846\r\n- fixes #845","date":"2023-03-24T21:58:59Z"},{"author":"zstone1","committer":"proux01","hash":"30ad54da058d9d903fd87805ff4a10be6f39452f","message":"Cluster1 (#850)\n\n* cluster1 proof\r\n\r\n* updating changelog\r\n\r\n* Update theories/topology.v\r\n\r\nCo-authored-by: affeldt-aist <33154536+affeldt-aist@users.noreply.github.com>\r\n\r\n* Update theories/topology.v\r\n\r\nCo-authored-by: affeldt-aist <33154536+affeldt-aist@users.noreply.github.com>\r\n\r\n* change to signature of compact_near_coveringP\r\n\r\n* no need to name intermediate hypo\r\n\r\n---------\r\n\r\nCo-authored-by: affeldt-aist <33154536+affeldt-aist@users.noreply.github.com>\r\nCo-authored-by: Reynald Affeldt <reynald.affeldt@aist.go.jp>","date":"2023-03-24T22:29:09Z"},{"author":"affeldt-aist","committer":"proux01","hash":"7ea530fd9636fbf7a286aa5ae05b3f5860d451cb","message":"fixes #853 (#854)","date":"2023-03-24T22:37:03Z"},{"author":"affeldt-aist","committer":"proux01","hash":"c41f9318def0135a6f05c75bf6b92e46220778da","message":"fixes #851","date":"2023-03-24T23:17:18Z"},{"author":"affeldt-aist","committer":"proux01","hash":"79d20c0b12944e7b2ea1c5e80d1e6397a86680ee","message":"fixes (#843)\n\n* fixes\n\n- fixes #828\n- fixes #835\n- fixes #838","date":"2023-03-25T08:18:24Z"},{"author":"affeldt-aist","committer":"proux01","hash":"741d81f70a3f249ee0ca4daee3b09c982a0d45d9","message":"add a type for finite measures (#836)\n\n* add a type for finite measures\r\n\r\n- s-finite measures from branch kernels\r\n- add subprobabilities\r\n- dirac instance of probability\r\n- rm finite_measure\r\n- renaming\r\n- minor fix","date":"2023-03-25T08:31:49Z"},{"author":"affeldt-aist","committer":"proux01","hash":"b8642a293438b96e18aedbd5445dddd9deb040b6","message":"changelog fo version 0.6.1 (#855)","date":"2023-03-25T08:44:18Z"},{"author":"affeldt-aist","committer":"proux01","hash":"8de48e1da973097203f1582514cd33aa5b8e1210","message":"\\bar R canonicals for tblattice\n\nCo-authored-by: Quentin Vermande <quentin.vermande@ens.fr>","date":"2023-03-25T09:00:07Z"},{"author":"affeldt-aist","committer":"proux01","hash":"5060f8cc2d85b7ba050bb87187d2010299a4505b","message":"generalize emeasurable_itv_* lemmas\n\n- a few pinfty/ninfty -> y/Ny renamings","date":"2023-03-25T09:00:07Z"},{"author":"proux01","committer":"proux01","hash":"dea05f66e56155b66f6da8bb36a7de78db38a3fb","message":"Itv (#869)\n\n* Add itv.v\n\nTaking inspiration on signed.v, replacing sign by intervals.\n\n* Add interval multiplication\n\n* Add hints to automatically solve _ <= 1 goals\n\n* Test to see if usable as a replacement for prob\n\n* use notation from mathcomp_extra.v\n\n* changelog and rm redundant code\n\n* prefix duplicated identifiers\n\n---------\n\nCo-authored-by: Reynald Affeldt <reynald.affeldt@aist.go.jp>","date":"2023-03-25T11:40:12Z"},{"author":"affeldt-aist","committer":"proux01","hash":"9d73a4e163e96d5741b5f3de8b94d080cb26bc37","message":"factor ae proofs","date":"2023-03-25T11:40:31Z"},{"author":"affeldt-aist","committer":"proux01","hash":"a8867753047c8819d4d581faeb0917a3336cb9ed","message":"complete changelog","date":"2023-03-25T13:11:36Z"},{"author":"affeldt-aist","committer":"proux01","hash":"9405ce4ad9c5055c42c252f790a9c651c0b870b3","message":"fubini for s-finite measures (#877)","date":"2023-03-25T13:11:55Z"},{"author":"affeldt-aist","committer":"proux01","hash":"cdd5d0438c97425eb2791d599a6afcc2b3bca24e","message":"fixes naming of topology.v\n\n- fixes #866\n- fixes #867\n- fixes #868","date":"2023-03-29T07:38:52Z"},{"author":"affeldt-aist","committer":"proux01","hash":"92e3a226186d833f649c6b266dfa24ad75aa36fd","message":"fixes #865","date":"2023-03-29T07:39:34Z"},{"author":"affeldt-aist","committer":"proux01","hash":"255fb200feca41509a709cd611955f35007ccee5","message":"fixes #864","date":"2023-03-29T07:39:47Z"},{"author":"affeldt-aist","committer":"proux01","hash":"c665e8b978108cc50a96587c2cd94621f35bdabb","message":"fix changelog","date":"2023-03-29T07:39:58Z"},{"author":"zstone1","committer":"proux01","hash":"7ce6f23d17bc6ecfea8e7bb3190d932d209f3463","message":"porting quotient fixes","date":"2023-03-29T12:03:54Z"},{"author":"proux01","committer":"web-flow","hash":"10a75dd37fe6b1c1c640786b18afe27a3d7fb3a6","message":"Merge pull request #888 from zstone1/port_quot_fix\n\nporting quotient fixes","date":"2023-03-29T15:19:15Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"1397a8826e34e7a9dc30f3d7585d2e38f59f4a18","message":"add comment about HB compatibility to pr_template.md","date":"2023-04-05T05:49:05Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"7a89a87e50e102f2deb84aab5bdb55f2c07540b6","message":"typo","date":"2023-04-05T05:49:22Z"}]},{"author":"affeldt-aist","number":697,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":22,"deletions":0},{"file":"theories/lebesgue_integral.v","status":"M","additions":22,"deletions":0}],"state":"merged","open_date":"2022-07-13T10:02:22Z","update_date":"2022-07-22T09:27:33Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"df026fc13d0f1d56d9a34166a5f87081027f43a0","message":"measurable_fun of countable sum","date":"2022-07-13T09:56:05Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"dcc3df6e8bb386457c99055df55ce8ab03c62016","message":"minor addition and fix","date":"2022-07-13T10:22:14Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"02d607a07f9cfd74624f01f16025fb3a3bf7eb7a","message":"fix","date":"2022-07-21T03:10:12Z"}]},{"author":"affeldt-aist","number":695,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":4,"deletions":1},{"file":"theories/measure.v","status":"M","additions":4,"deletions":1}],"state":"merged","open_date":"2022-07-13T00:09:45Z","update_date":"2022-07-13T00:35:14Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"00d9c755d67850b1fe4ae742773ff91b245ba0a8","message":"generalize pushforward","date":"2022-07-13T00:33:02Z"}]},{"author":"CohenCyril","number":694,"diff_summary":[{"file":".github/workflows/docker-action.yml","status":"M","additions":17,"deletions":16},{"file":".nix/config.nix","status":"M","additions":17,"deletions":16},{"file":".nix/coq-nix-toolbox.nix","status":"M","additions":17,"deletions":16},{"file":"meta.yml","status":"M","additions":17,"deletions":16},{"file":"theories/lebesgue_integral.v","status":"M","additions":17,"deletions":16}],"state":"merged","open_date":"2022-07-12T15:33:28Z","update_date":"2022-07-12T17:46:37Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"CohenCyril","committer":"CohenCyril","hash":"aeb96d38ffb5744d99f2e6e3de1fc2067d19e5e4","message":"bugfix + test coq 8.16","date":"2022-07-12T16:59:03Z"}]},{"author":"proux01","number":693,"diff_summary":[{"file":"theories/classical_sets.v","status":"M","additions":47,"deletions":31},{"file":"theories/functions.v","status":"M","additions":47,"deletions":31},{"file":"theories/mathcomp_extra.v","status":"M","additions":47,"deletions":31}],"state":"merged","open_date":"2022-07-12T09:12:06Z","update_date":"2022-07-12T12:44:01Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"proux01","committer":"proux01","hash":"e0e5d34b4c58f43e08157e4334da23c579b1c7fe","message":"Comments to remember stuff backported to MC","date":"2022-07-12T09:01:26Z"}]},{"author":"mrhaandi","number":692,"diff_summary":[{"file":"theories/altreals/distr.v","status":"M","additions":1,"deletions":1}],"state":"merged","open_date":"2022-07-12T08:39:50Z","update_date":"2022-07-22T13:57:02Z","discussion":[{"author":"mrhaandi","date":"2022-07-22T13:40:26Z","comment":"@affeldt-aist is there anything required from my side?"},{"author":"affeldt-aist","date":"2022-07-22T13:45:17Z","comment":"> @affeldt-aist is there anything required from my side?\r\n\r\nNo. I'll merge as soon as the failing checks have been rerun. Thank you for pinging!"}],"review_discussion":[],"tags":[],"commits":[{"author":"mrhaandi","committer":"mrhaandi","hash":"82db0e82e8048fb675ffe5ec794cbd4083e00c42","message":"improved auto goal selection (see coq/#16293)","date":"2022-07-12T08:28:56Z"}]},{"author":"affeldt-aist","number":691,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":193,"deletions":113},{"file":"theories/ereal.v","status":"M","additions":193,"deletions":113},{"file":"theories/esum.v","status":"M","additions":193,"deletions":113},{"file":"theories/lebesgue_integral.v","status":"M","additions":193,"deletions":113},{"file":"theories/lebesgue_measure.v","status":"M","additions":193,"deletions":113},{"file":"theories/measure.v","status":"M","additions":193,"deletions":113},{"file":"theories/sequences.v","status":"M","additions":193,"deletions":113}],"state":"merged","open_date":"2022-07-11T10:07:38Z","update_date":"2022-07-13T00:10:50Z","discussion":[{"author":"proux01","date":"2022-07-12T15:18:10Z","comment":"@affeldt-aist I added the corresponding dual addition lemmas, I guess we can postpone the real -> num Domain thing so I'll merge once CI is green (enough)"},{"author":"affeldt-aist","date":"2022-07-12T23:36:00Z","comment":"> @affeldt-aist I added the corresponding dual addition lemmas, I guess we can postpone the real -> num Domain thing so I'll merge once CI is green (enough)\r\n\r\nI agree. Maybe we can issue not to forget."}],"review_discussion":[{"author":"proux01","file":"theories/ereal.v","date":"2022-07-11T10:48:55Z","comment":"```suggestion\r\nLemma lee01 : 0 <= 1 :> \\bar R. Proof. by rewrite lee_fin. Qed.\r\n```\r\nThis should also probably be a hint, like in ssrnum:\r\n```Coq\r\nHint Resolve lee01 lte01 : core.\r\n```"},{"author":"proux01","file":"theories/ereal.v","date":"2022-07-11T10:49:05Z","comment":"same thing"},{"author":"proux01","file":"theories/ereal.v","date":"2022-07-11T10:50:13Z","comment":"Maybe `le_ninfty_eq` since the infty leaves no doubt it is in extended reals?"},{"author":"proux01","file":"theories/ereal.v","date":"2022-07-11T10:50:39Z","comment":"Maybe `ge_pinfty_eq`?"},{"author":"proux01","file":"theories/ereal.v","date":"2022-07-11T10:52:13Z","comment":"Maybe\r\n```suggestion\r\nLemma lee0N1 : 0 <= (-1)%:E :> \\bar R = false.\r\n```\r\nnot sure it is more readable though?"},{"author":"proux01","file":"theories/ereal.v","date":"2022-07-11T11:48:39Z","comment":"Note that this doesn't really need `b` finite as `lte_le_add` doesn't need `a` finite:\r\n```Coq\r\nLemma lte_le_add a b x y : b \\is a fin_num -> a < x -> b <= y -> a + b < x + y.\r\nProof.\r\nmove: x y a b => [x||] [y||] [a||] [b||] // _; rewrite ?(ltey, ltNye) //.\r\nrewrite !lte_fin; exact: ltr_le_add.\r\nQed.\r\n```"},{"author":"proux01","file":"theories/ereal.v","date":"2022-07-11T11:52:08Z","comment":"I wonder whether `R` couldn't be just a `numDomainType` here (rather than a `realDomainType`)"},{"author":"proux01","file":"theories/ereal.v","date":"2022-07-11T11:52:53Z","comment":"same about {num/real}DomainType"},{"author":"proux01","file":"theories/ereal.v","date":"2022-07-11T11:54:00Z","comment":"same? (and for other lemmas below)"},{"author":"affeldt-aist","file":"theories/ereal.v","date":"2022-07-12T13:27:05Z","comment":"I tried with `leeNy_eq`."},{"author":"affeldt-aist","file":"theories/ereal.v","date":"2022-07-12T13:27:19Z","comment":"I tried with leye_eq"}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"c02882502df7821eb1ea81951475b49b6865fa13","message":"add lee01","date":"2022-07-11T09:23:09Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"59a6829230a03803984176d593366a692084db66","message":"l{e,t}e_pmul","date":"2022-07-11T09:55:23Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"23cb5b8bce2ae519ca1009ce8db754d24b233216","message":"from PR 487","date":"2022-07-11T09:57:12Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"486444baae0d069e38ffad7c3c1dbf579ad55a25","message":"Co-authored-by: Pierre Roux <pierre@roux01.fr>","date":"2022-07-12T13:43:03Z"},{"author":"proux01","committer":"proux01","hash":"1997a55e6f67d9e16133a68cdda58b505e016415","message":"Add corresponding dual lemmas","date":"2022-07-12T15:16:13Z"}]},{"author":"zstone1","number":690,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":85,"deletions":0},{"file":"theories/boolp.v","status":"M","additions":85,"deletions":0},{"file":"theories/functions.v","status":"M","additions":85,"deletions":0}],"state":"merged","open_date":"2022-07-10T20:03:38Z","update_date":"2022-07-27T12:57:16Z","discussion":[],"review_discussion":[{"author":"CohenCyril","file":"CHANGELOG_UNRELEASED.md","date":"2022-07-10T23:34:15Z","comment":"Internal proofs (e.g. ending in `_subproof`) do not belong to the changelog."},{"author":"CohenCyril","file":"CHANGELOG_UNRELEASED.md","date":"2022-07-10T23:36:49Z","comment":"It's more than just these 3 instances. Maybe just write\r\n```suggestion\r\n  + Instances for functions interfaces (partial inverse up to bijective function)\r\n```"},{"author":"affeldt-aist","file":"theories/functions.v","date":"2022-07-12T00:24:02Z","comment":"```suggestion\r\nContext {f : {oinv aT >-> aT}}.\r\n```"},{"author":"affeldt-aist","file":"theories/functions.v","date":"2022-07-12T00:24:35Z","comment":"```suggestion\r\nLemma oinv_iter n : 'oinv_(iter n f) = iter n (obind 'oinv_f) \\o some.\r\n```"},{"author":"affeldt-aist","file":"theories/functions.v","date":"2022-07-12T00:24:57Z","comment":"```suggestion\r\nLemma some_iter_inv n : olift (iter n f^-1) = 'oinv_(iter n f).\r\n```"},{"author":"affeldt-aist","file":"theories/functions.v","date":"2022-07-12T00:25:19Z","comment":"```suggestion\r\nLemma inv_iter n : (iter n f)^-1 = iter n f^-1. Proof. by []. Qed.\r\n```"},{"author":"affeldt-aist","file":"theories/functions.v","date":"2022-07-12T00:26:33Z","comment":"Should we move `iter_compl`, `iter_compr`, `iter0` earlier in the file hiearchy? (say, in `boolp`?)"},{"author":"affeldt-aist","file":"theories/functions.v","date":"2022-07-12T00:36:02Z","comment":"```suggestion\r\nrewrite (_ : Some \\o f^-1 = 'oinv_f); first by rewrite iter_compr; congr (_ \\o _).\r\n```"},{"author":"zstone1","file":"theories/functions.v","date":"2022-07-12T01:20:51Z","comment":"Very sensible. Updated. "},{"author":"CohenCyril","file":"theories/boolp.v","date":"2022-07-12T15:42:00Z","comment":"These lemmas are called `iterSr` and `iterS` in `mathcomp.ssrnat`, maybe better names would be `iterfSr` and `iterfS`?"},{"author":"CohenCyril","file":"theories/boolp.v","date":"2022-07-12T15:44:21Z","comment":"```suggestion\r\nProof. by []. Qed.\r\n```"},{"author":"CohenCyril","file":"theories/boolp.v","date":"2022-07-12T15:44:35Z","comment":"```suggestion\r\nProof. by []. Qed.\r\n```"},{"author":"CohenCyril","file":"theories/functions.v","date":"2022-07-12T15:44:48Z","comment":"```suggestion\r\n```"}],"tags":[],"commits":[{"author":"zstone1","committer":"zstone1","hash":"7ea0dce1508dffe339549b746e3dca06f2f9e197","message":"HB instances for iter\n\nupdating changelog\n\nlinting\n\nfixing changelog\n\nApply suggestions from code review\n\nCo-authored-by: affeldt-aist <33154536+affeldt-aist@users.noreply.github.com>\n\nmoving lemmas to boolp\n\nApply suggestions from code review\n\nCo-authored-by: Cyril Cohen <CohenCyril@users.noreply.github.com>\n\nchanging names of iter lemmas","date":"2022-07-14T01:13:08Z"},{"author":"zstone1","committer":"zstone1","hash":"9d9d975dc563ecfefbd8429ff3754762a2c2daa6","message":"fixing function name","date":"2022-07-15T02:39:58Z"}]},{"author":"CohenCyril","number":689,"diff_summary":[{"file":".nix/config.nix","status":"M","additions":3,"deletions":3},{"file":".nix/coq-nix-toolbox.nix","status":"M","additions":3,"deletions":3}],"state":"closed","open_date":"2022-07-09T09:26:05Z","update_date":"2022-10-26T14:21:36Z","discussion":[{"author":"proux01","date":"2022-10-26T14:21:36Z","comment":"I guess this is now outdated and superseded by more recent updates, let's close."}],"review_discussion":[],"tags":[],"commits":[{"author":"CohenCyril","committer":"CohenCyril","hash":"22db02ea285f38fa2303276303921128e75a9747","message":"update config","date":"2022-07-09T09:25:50Z"}]},{"author":"CohenCyril","number":688,"diff_summary":[{"file":".github/workflows/docker-action.yml","status":"M","additions":206,"deletions":207},{"file":"CHANGELOG.md","status":"M","additions":206,"deletions":207},{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":206,"deletions":207},{"file":"coq-mathcomp-analysis.opam","status":"M","additions":206,"deletions":207},{"file":"meta.yml","status":"M","additions":206,"deletions":207}],"state":"merged","open_date":"2022-07-08T21:30:20Z","update_date":"2022-07-08T21:54:07Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"CohenCyril","committer":"CohenCyril","hash":"8a7fea2ca9e9d7d992b7ccd26396d2b15dca391b","message":"Update Changelog","date":"2022-07-08T21:29:46Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"82361f67ddba3f06c929ed89814c647a3e165661","message":"update meta & opam & docker","date":"2022-07-08T21:33:59Z"}]},{"author":"CohenCyril","number":687,"diff_summary":[{"file":".github/workflows/docker-action.yml","status":"D","additions":5,"deletions":130},{"file":".github/workflows/nix-action-8.13.yml","status":"D","additions":5,"deletions":130},{"file":".nix/config.nix","status":"D","additions":5,"deletions":130},{"file":"README.md","status":"D","additions":5,"deletions":130},{"file":"coq-mathcomp-analysis.opam","status":"D","additions":5,"deletions":130},{"file":"meta.yml","status":"D","additions":5,"deletions":130}],"state":"merged","open_date":"2022-07-08T09:49:55Z","update_date":"2022-07-08T11:07:48Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"CohenCyril","committer":"CohenCyril","hash":"dd27c4a51aaec3ea4e73d8f3bbdcf72511c80db5","message":"dropping Coq 8.13","date":"2022-07-08T09:48:53Z"}]},{"author":"affeldt-aist","number":686,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":64,"deletions":22},{"file":"theories/trigo.v","status":"M","additions":64,"deletions":22}],"state":"merged","open_date":"2022-07-07T16:32:57Z","update_date":"2022-07-08T09:13:01Z","discussion":[{"author":"CohenCyril","date":"2022-07-07T18:31:02Z","comment":"Great, except former lemmas should stay or be deprecated (e.g. `0 < pi / 2 < 2`), I even wonder why the new one is not a `Let`, since the individual (binary) inequalities are more likely yo be used than the ternary one."}],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"b09b4bb333d8388e719606b244bc56eea52d2fb1","message":"2 <= pi","date":"2022-07-07T20:29:27Z"}]},{"author":"affeldt-aist","number":685,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":58,"deletions":33},{"file":"theories/set_interval.v","status":"M","additions":58,"deletions":33}],"state":"merged","open_date":"2022-07-05T14:06:19Z","update_date":"2022-07-08T11:08:31Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"CohenCyril","hash":"c74fd6039ec8889f364a8c8c90f00e67ddb38584","message":"generalize the type of conv and factor","date":"2022-07-08T09:20:17Z"}]},{"author":"affeldt-aist","number":684,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":6,"deletions":3},{"file":"theories/lebesgue_integral.v","status":"M","additions":6,"deletions":3}],"state":"merged","open_date":"2022-07-01T16:32:21Z","update_date":"2022-07-03T08:30:05Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"696364f7d025aa1ad754a18586fd0d443c5e3887","message":"fixes #661","date":"2022-07-01T16:31:39Z"}]},{"author":"affeldt-aist","number":682,"diff_summary":[{"file":"_CoqProject","status":"M","additions":0,"deletions":1}],"state":"merged","open_date":"2022-06-28T07:52:44Z","update_date":"2022-06-28T10:24:02Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"9be71e972557cdbf4c2e8a2b4813d7e22ff485bc","message":"duplicate in _CoqProject","date":"2022-06-28T07:45:31Z"}]},{"author":"affeldt-aist","number":681,"diff_summary":[{"file":"theories/signed.v","status":"M","additions":3,"deletions":3}],"state":"merged","open_date":"2022-06-23T07:02:09Z","update_date":"2022-06-23T08:18:54Z","discussion":[{"author":"proux01","date":"2022-06-23T08:18:49Z","comment":"Thanks, this is a trivial one, let's merge now."}],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"7b855392f46269a3d12968cc39efa4071fdf47c2","message":"rm useless parameter","date":"2022-06-23T07:01:16Z"}]},{"author":"affeldt-aist","number":680,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":9,"deletions":0},{"file":"theories/lebesgue_integral.v","status":"M","additions":9,"deletions":0}],"state":"merged","open_date":"2022-06-22T08:50:05Z","update_date":"2022-06-22T10:14:55Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"20df1df8c059aaa63b00d333f308cf2c9609fec9","message":"minor addition","date":"2022-06-22T08:47:49Z"}]},{"author":"affeldt-aist","number":679,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":27,"deletions":32},{"file":"theories/functions.v","status":"M","additions":27,"deletions":32},{"file":"theories/lebesgue_integral.v","status":"M","additions":27,"deletions":32},{"file":"theories/measure.v","status":"M","additions":27,"deletions":32}],"state":"merged","open_date":"2022-06-22T02:52:11Z","update_date":"2022-07-08T16:57:18Z","discussion":[{"author":"affeldt-aist","date":"2022-07-03T08:49:14Z","comment":"I will maybe merge this one soon because it is small and looks fine to me."},{"author":"proux01","date":"2022-07-04T06:57:02Z","comment":"@affeldt-aist according to the CI, there is an issue on Coq 8.13"},{"author":"affeldt-aist","date":"2022-07-04T07:05:53Z","comment":"> @affeldt-aist according to the CI, there is an issue on Coq 8.13\r\n\r\nIndeed. It looks like a notation problem. Aren't we suppose to drop 8.13 soon? (When 8.16 is available?)."},{"author":"proux01","date":"2022-07-04T13:19:43Z","comment":"I'm perfectly fine with dropping 8.13."}],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"CohenCyril","hash":"dd5e0b6c768e4788f64d9b71363406abdba1ea83","message":"minor generalization\n\nCo-authored-by: @AyumuSaito","date":"2022-07-08T15:53:12Z"}]},{"author":"zstone1","number":678,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":182,"deletions":3},{"file":"theories/mathcomp_extra.v","status":"M","additions":182,"deletions":3},{"file":"theories/sequences.v","status":"M","additions":182,"deletions":3},{"file":"theories/signed.v","status":"M","additions":182,"deletions":3},{"file":"theories/topology.v","status":"M","additions":182,"deletions":3}],"state":"merged","open_date":"2022-06-19T04:17:00Z","update_date":"2022-08-23T04:05:56Z","discussion":[{"author":"zstone1","date":"2022-06-19T21:00:29Z","comment":"On further reflection, something is wrong with the ~~current~~ previous formulation. Most applications of this theorem carve out a subset `U` of `X`, which is invariant under `f`, and where it's a contraction. This won't work work for us, (even if we used pseudoMetrc instead of normed) without making the domain a the dependent pair subtype. Using our definition of subspace won't work, because it includes all the extra points, and `f` won't be a contraction. We could introduce a set into the definition of contraction, but I wish there were a way to define things to make subspace work. \r\n\r\nEdit: Thankfully `functions.v` lets me write `f : {fun U >-> U}`. Is this the cleanest way to get what I want? We will probably want a proof that if `U` is a subset of `X`, `U` is closed, and `X` is complete, then so is `{subspace U}` when working with subspaces anyway. "},{"author":"affeldt-aist","date":"2022-06-21T06:54:39Z","comment":"In another setting, we've been discussing with @proux01 a way to introduce a type for real numbers r between 0 and 1 so that 1 - r can be ruled out automatically as non-negative. It would help here too, wouldn't it? "},{"author":"zstone1","date":"2022-06-21T14:11:34Z","comment":"Yes, support for a \"between 0 and 1\" real would definitely simplify things for this proof. There are some details regarding strictness of the inequalities. I defined contractions here as `0 <= q  < 1`. But the `0 = q` case is rather degenerate: it's a constant function (which of course has a unique fixed point). Redefining things to be `0 < q < 1` would lose almost nothing. However, the strictness of `q < 1` is critical (translations have no fixed points in R, and have q=1). The machinery in `signed.v` is precise enough to handle the strictness, so as long as you're reusing that, it should work out well. "},{"author":"affeldt-aist","date":"2022-08-22T03:53:15Z","comment":"I think that in other situations similar needs to work with `1 - q` and `1- q ^ n` expressions will occur (we have been using such expressions a lot with probabilities and convexity) so I have been trying to come up with a way to make your mechanism to take advantage of `signed.v` available from outside of the section. What do you think about this commit https://github.com/affeldt-aist/analysis/commit/3b08c0e8788f56ec2b46f9427598867e6bd36942 ? It introduces a definition and a small theory for `1 - q` expressions so that automation can be made available in (imho) a bit more principled way. (Though obviously this cannot be a definitive solution.)"},{"author":"zstone1","date":"2022-08-22T04:32:29Z","comment":"It's definitely an improvement. Factoring out the reusable bits from that giant algebra rewrite block is great. This look like a good halfway to building some canonical automation. I have a two thoughts:\r\n\r\n1. Is `onemN` necessary? It seems to break the abstraction by producing an actually negative number. I also see you end up using it in the proofs. As far as submitting this improvement, it's not a blocker. But it does seem like a point where the automation is likely to hit a dead end.\r\n2. The `r.~` notation surprised me at first. It's not what I would have expected in this context. But the more I think about that's likely because I'm missing some deeper connection between this result and something in probability theory. I'm now quite curious to see where this line of inquiry will take us."},{"author":"affeldt-aist","date":"2022-08-22T07:02:57Z","comment":">     1. Is `onemN` necessary? It seems to break the abstraction by producing an actually negative number. I also see you end up using it in the proofs. As far as submitting this improvement, it's not a blocker. But it does seem like a point where the automation is likely to hit a dead end.\r\n\r\nI tried to do without `onemN`: https://github.com/affeldt-aist/analysis/commit/63f6eca7d38195cc680ff7a19e086d25fd1cf90d\r\n\r\n>     2. The `r.~` notation surprised me at first. It's not what I would have expected in this context. But the more I think about that's likely because I'm missing some deeper connection between this result and something in probability theory. I'm now quite curious to see where this line of inquiry will take us.\r\n\r\n(I changed the notation to `1.-r`.)\r\nThis comes from paper like e.g. https://arxiv.org/pdf/0903.5522.pdf where in section 2 the author use `\\bar{r}` notations and a bit of theory that we found useful when doing formalization with no automation in other work.\r\n\r\n"},{"author":"proux01","date":"2022-08-22T08:06:12Z","comment":"I once took inspiration of `signed.v` to infer intervals: https://github.com/math-comp/analysis/commit/3b2bcc1207eae2b89182d55fb6e519cbc86429db This could probably extend `signed.v` to the use case needed here (without even needing any specific notation for `1 - x`). This requires a bit more work (in particular to see whether it can replace `signed.v` or has to live beside it and how) that I probably won't be able to do before next month. Meanwhile the current situation here is probably fine and this shouldn't block merging this PR."},{"author":"zstone1","date":"2022-08-22T14:59:45Z","comment":"Yeah, this looks good. That theory should probably move elsewhere, but otherwise I'm quite happy to see this improvement. "}],"review_discussion":[{"author":"CohenCyril","file":"theories/functions.v","date":"2022-07-07T12:34:12Z","comment":"Please endow `iter` with an instance of function from `A` to `A` (and also injection, surjection, etc)."},{"author":"CohenCyril","file":"theories/sequences.v","date":"2022-07-07T12:37:26Z","comment":"Maybe this deserves a structure in the hierarchy of functions."},{"author":"zstone1","file":"theories/functions.v","date":"2022-07-08T03:04:01Z","comment":"Yes, that makes sense. I'm creating a separate change with these features. "},{"author":"zstone1","file":"theories/sequences.v","date":"2022-07-08T03:04:05Z","comment":"I agree in principle, but this is not how I would encode it into a hierarchy. I would instead add Lipschitz to the hierarchy of functions, then define contractions a structure like \"Lipchitz with `0 <= k <1`\". Does that make sense to you as well? "},{"author":"CohenCyril","file":"theories/sequences.v","date":"2022-07-08T17:48:42Z","comment":"Sure, although I'm having second thoughts about adding this to a hierarchy of functions, I guess it should rather be part of a big refactoring that should be carefully planned, so let's put it on the side for now.\r\n\r\nHowever, since you mention it, we have Lipchitz as a predicate here, maybe you could reuse it?\r\nhttps://github.com/math-comp/analysis/blob/8a22f574abaa5d57621970dad31f1b1240ed74d1/theories/normedtype.v#L62-L67"},{"author":"CohenCyril","file":"theories/sequences.v","date":"2022-07-08T17:50:11Z","comment":"Why don't you do a multirule that could be inserted in a normal rewrite instead?"},{"author":"zstone1","file":"theories/sequences.v","date":"2022-07-29T21:12:25Z","comment":"Turns out the multi-rule fails when there's a `1-q^m.+1` and a `1-q^m` in the goal, which is frequent. I've improved this to just have two separate local equality lemmas. Seems much more idiomatic than the local ltac. "}],"tags":[],"commits":[{"author":"zstone1","committer":"zstone1","hash":"feda40a1ebd777a09ea969284e114f6724c6d00e","message":"full thing working!\n\ncleaning up a bit\n\nputting lemmas in more appropriate places\n\nrewritten to support subspaces better\n\nlinting a bit\n\nrm exprn_ler; lint (wip)\n\nfull thing working!\n\ncleaning up a bit\n\nputting lemmas in more appropriate places\n\nrewritten to support subspaces better\n\nlinting a bit\n\nrm exprn_ler; lint (wip)\n\nimproving proofs with funS\n\nlinting\n\nchangelog\n\nmoving fixed point stuff around\n\nchanging implicits","date":"2022-08-21T19:12:54Z"},{"author":"zstone1","committer":"zstone1","hash":"d4bd40cb02579fc05bc1ce29722215a83143ca8d","message":"updating changelog","date":"2022-08-21T19:17:07Z"},{"author":"zstone1","committer":"zstone1","hash":"9d626a959434d507f61d8c9df239ea44b711cadd","message":"fixing contraction syntax","date":"2022-08-21T19:18:40Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"5ecc14995f36eb94afec0d443cc071c14c78ee4a","message":"shortening","date":"2022-08-22T03:26:33Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"808ec87902a062478e2719037244d6474a069e56","message":"nitpicking","date":"2022-08-22T03:41:35Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"765ee482cb559a9c42c6ffc2ed75cd745ff16175","message":"introduce onem to share automation","date":"2022-08-23T03:39:12Z"}]},{"author":"affeldt-aist","number":677,"diff_summary":[{"file":"_CoqProject","status":"A","additions":520,"deletions":1},{"file":"theories/lebesgue_measure.v","status":"A","additions":520,"deletions":1},{"file":"theories/lebesgue_stieltjes_measure.v","status":"A","additions":520,"deletions":1}],"state":"open","open_date":"2022-06-09T10:48:56Z","update_date":"2023-03-15T14:44:19Z","discussion":[{"author":"zstone1","date":"2022-06-24T23:12:36Z","comment":"I've just checked out the lemma statements (not the proofs), and it looks pretty neat. The existing `hlength_measure` canonical instance provides a reasonably nice interface for it. And `Hahn_ext_measure`. One thing that makes me particularly happy about this is I _think_ I can use this to state \"spectral theorem\". But I'm not 100% sure if it's general enough. That's something I'll look into shortly. In the meanwhile, I have only one question about this work. You carry around the `(ndf : {homo f : x y / (x <= y)%R}) (rcf : right_continuous f` conditions a lot. Which is fine while writing the proofs, but I can imagine this generating a lot of annoying side conditions when using them. Is there a nice way to package that up? Would a canonical structure for this make sense? Perhaps it's too cumbersome.\r\n"}],"review_discussion":[{"author":"CohenCyril","file":"theories/lebesgue_stieltjes_measure.v","date":"2022-07-07T12:40:35Z","comment":"`ndf` and `rcf` could be combined and declared as a structure."},{"author":"zstone1","file":"theories/lebesgue_stieltjes_measure.v","date":"2022-10-06T22:19:11Z","comment":"`CF` is probably too short a name. Likely to conflict with something in the future. `CumulativeFun` may be sufficient. "},{"author":"zstone1","file":"theories/lebesgue_stieltjes_measure.v","date":"2022-10-06T22:19:50Z","comment":"why not make `e : {posnum R}` as well? "},{"author":"zstone1","file":"theories/lebesgue_stieltjes_measure.v","date":"2022-10-06T22:22:02Z","comment":"Would it perhaps be useful to have `R with the \"right-sided\" topology` be a dedicated alias for `R`? Wikipedia calls R with this topology \"the Sorgenfrey line\"."},{"author":"zstone1","file":"theories/lebesgue_stieltjes_measure.v","date":"2022-10-06T22:51:09Z","comment":"Is the plan to eventually replace all the semiring and sigma_sub_additive stuff in `lebesgue_measure`? Would we need anything other than a `IsCumulative` instance for the identity function? "},{"author":"hoheinzollern","file":"theories/lebesgue_stieltjes_measure.v","date":"2022-10-07T10:04:36Z","comment":"This should be fixed in #764 "},{"author":"CohenCyril","file":"theories/lebesgue_stieltjes_measure.v","date":"2022-10-07T11:24:01Z","comment":"I recommend not. In the current state of affairs, `0 < e` sub-goals can be automatically discharged when `e` is canonically a  `{posnum R}`, but when it is not canonical, we still want a subgoal to prove. If you switch the statement to a quantification on a `{posnum R}` you force the lemma to be applied with a canonical, and it becomes heavy to do a partial application with the right \"raw\" `e : R`. So we always prefer hyporheses of the form `forall e : R, 0 < e -> ...` except for canonical declarations of positivity. The proofs then start with a `move=> _/posnumP[e]`.\r\n_(Note that this might be updated with the evolution of design patterns for subsets in the distant future)_"},{"author":"CohenCyril","file":"theories/lebesgue_stieltjes_measure.v","date":"2022-10-07T11:29:41Z","comment":"I did not know that! Reaally nice abstraction :two_hearts: "},{"author":"CohenCyril","file":"theories/lebesgue_stieltjes_measure.v","date":"2022-10-07T11:30:15Z","comment":"I do not understand why you mean by \"replace all the semirings\" ?"},{"author":"zstone1","file":"theories/lebesgue_stieltjes_measure.v","date":"2022-10-07T13:45:06Z","comment":"Oh, that does make sense. Just like taking `Filter F` as a separate argument in topology. When defining new structures to follow this pattern, I see four things are needed\r\n\r\n1. A bundled structure (like {posnum R})\r\n2. A predicate with the same information (like 0<e or Filter F)\r\n3. A way to bundle them during introduction (like posnumP)\r\n4. A hint or something that will automatically solve for the property\r\n\r\nIs this a complete description of the design?\r\n"},{"author":"zstone1","file":"theories/lebesgue_stieltjes_measure.v","date":"2022-10-07T14:45:26Z","comment":"Oh, sorry, I should have been more clear. In `lebesgue_measure.v`, we have separate, less general, definitions of `hlength`, `hlength_sigma_sub_additive` and `hlength_semi_additive`. So I'm hoping that there's a long-term plan to delete the stuff from `lebesgue_measure.v`. I believe we can define lebesgue measure as \"the lebesgue-stieltjes measure of the identity\". But I haven't thought through all the details. "},{"author":"affeldt-aist","file":"theories/lebesgue_stieltjes_measure.v","date":"2022-10-07T15:05:28Z","comment":"That's indeed the intent, though I would like to keep the simpler Lebesgue measure around."},{"author":"affeldt-aist","file":"theories/lebesgue_stieltjes_measure.v","date":"2022-10-07T15:06:25Z","comment":"As for `isCumulative`: maybe to define cumulative distribution functions."},{"author":"CohenCyril","file":"theories/lebesgue_stieltjes_measure.v","date":"2022-10-10T11:47:14Z","comment":"I think you summed it up pretty well, although the picture is not always (yet) complete (e.g. step 3. is missing for filters)."},{"author":"CohenCyril","file":"theories/lebesgue_stieltjes_measure.v","date":"2022-10-10T11:49:39Z","comment":"BTW, with some work in the next few months I hope to make 1. and 2. almost transparently equivalent for the elaborator so that 3. is not necessary anymore and that 4. always works with the same mechanism."},{"author":"affeldt-aist","file":"theories/lebesgue_stieltjes_measure.v","date":"2023-01-26T10:10:00Z","comment":"rename to `funEFin`?"}],"tags":[{"tag":"enhancement :sparkles:","description":"This issue/PR is about adding new features enhancing the library"}],"commits":[{"author":"IshiguroYoshihiro","committer":"affeldt-aist","hash":"c72636477aa851b0741f4a06fc9d881c466d9000","message":"start lebesgue stieltjes measure\n- up to sigma_sub_additive (wip)","date":"2023-03-14T15:16:14Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"43ba49f3bf2bd2b65c1b0fa4f8399218ff6f1fbd","message":"tentative sketch for sigma_sub_additive","date":"2023-03-14T15:16:14Z"},{"author":"IshiguroYoshihiro","committer":"affeldt-aist","hash":"9b9afb45d7300daaa087b62887bd532b38af0bde","message":"progress wrt hlength_sigma_sub_additive\n- fix intermediate lemma\n- use continuity hypo","date":"2023-03-14T15:16:14Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"c6609c6205dfd73854620239b81a2a12c65f17e8","message":"tentative definition of lebesgue stieltjes measure","date":"2023-03-14T15:16:14Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"d4d6fa12cd8d671c3186fb1643eae75dd0ed998d","message":"cumulative function with HB\n\nCo-authored-by: brun@itu.dk\nCo-authored-by: Takafumi Saikawa <tscompor@gmail.com>","date":"2023-03-14T15:16:14Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"f163332cfeccbcdd3233cc2c03e2246fe1644725","message":"upd and complete","date":"2023-03-14T15:16:14Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"fb880b772813e1d9961877b9ba2ace9c2f76af44","message":"upd","date":"2023-03-14T15:16:14Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"bad2809fae2025eeaba97655b70475ccb28ee23b","message":"EFinf is actually er_map","date":"2023-03-14T15:22:50Z"}]},{"author":"affeldt-aist","number":676,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":247,"deletions":167},{"file":"theories/classical_sets.v","status":"M","additions":247,"deletions":167},{"file":"theories/esum.v","status":"M","additions":247,"deletions":167},{"file":"theories/fsbigop.v","status":"M","additions":247,"deletions":167},{"file":"theories/functions.v","status":"M","additions":247,"deletions":167},{"file":"theories/lebesgue_integral.v","status":"M","additions":247,"deletions":167},{"file":"theories/measure.v","status":"M","additions":247,"deletions":167}],"state":"merged","open_date":"2022-06-08T14:53:23Z","update_date":"2022-07-08T17:50:32Z","discussion":[],"review_discussion":[{"author":"CohenCyril","file":"theories/measure.v","date":"2022-07-07T12:41:45Z","comment":"No primes ;)"},{"author":"CohenCyril","file":"theories/measure.v","date":"2022-07-07T12:45:50Z","comment":"There still is a `fset_set` here."}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"CohenCyril","hash":"3b0086b2574eecdb95a4f2b5e27c16e6843b6e91","message":"use set instead of fset in decomp","date":"2022-07-08T17:21:17Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"db860d57c67bb9e8d66088a954dff401becf4f32","message":"more trivIset lemmas + refactored some proofs of measure additivity","date":"2022-07-08T17:21:17Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"4ec24eb503639ddd993ca64f9c1e302aa5ded42d","message":"less fset_set","date":"2022-07-08T17:21:17Z"}]},{"author":"affeldt-aist","number":675,"diff_summary":[{"file":"theories/kernel.v","status":"A","additions":121,"deletions":0}],"state":"closed","open_date":"2022-06-08T04:09:48Z","update_date":"2022-06-15T04:03:31Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"ad7aa673f1242b24da00c42ed69a8be04a372c7f","message":"tentative definition of kernel","date":"2022-06-08T04:07:28Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"00ba4d61b02782330d481e36696bd7a41b286f09","message":"tentative statement of lemma 3","date":"2022-06-15T03:53:38Z"}]},{"author":"zstone1","number":674,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":222,"deletions":46},{"file":"theories/topology.v","status":"M","additions":222,"deletions":46}],"state":"merged","open_date":"2022-06-06T04:43:07Z","update_date":"2022-09-26T14:39:02Z","discussion":[{"author":"CohenCyril","date":"2022-09-26T09:04:33Z","comment":"Looks Ok... I would prefer an alias that carries both the canonical structures of weak topologies and weak uniform spaces (as it should be in the HB version anyway), but meanwhile we can live with this version."},{"author":"zstone1","date":"2022-09-26T14:36:56Z","comment":"Yeah, I don't want to add extra complexity to this file while the HB port in in progress. I will be happy to go back and clean this up once that PR is landed. "}],"review_discussion":[{"author":"CohenCyril","file":"theories/topology.v","date":"2022-06-07T12:50:39Z","comment":"I think a more \"uniform\" naming would be more `map_pair` rather than `lift_pair`"}],"tags":[],"commits":[{"author":"zstone1","committer":"zstone1","hash":"e9e9f164b457f0dec29adb09f53379c4b2274df5","message":"uniform weak types\n\ntrying to prove uniform supremums\n\nalmost done with sup topology\n\nproduct uniform topologies\n\nfirst linting pass\n\ncleaning up canonicals\n\nrenaming lift_pair to map_pair","date":"2022-09-25T01:42:24Z"},{"author":"zstone1","committer":"zstone1","hash":"2976954cb0795be0aa332792351ab64c3f2a6c22","message":"docs and cleanup","date":"2022-09-25T01:42:24Z"},{"author":"zstone1","committer":"zstone1","hash":"df3abf228de8ef68b386bff09a40ed893e5db6bb","message":"more changelogs for uniform family topologies","date":"2022-09-25T01:42:24Z"},{"author":"zstone1","committer":"zstone1","hash":"56ceff821475629b14f917e1ad78024968c18eec","message":"fixing changelog","date":"2022-09-25T01:42:24Z"},{"author":"zstone1","committer":"zstone1","hash":"314cbb10c1c8bbb721b4cdb8476a3a59b3b16942","message":"fixing changelog","date":"2022-09-25T01:44:32Z"}]},{"author":"affeldt-aist","number":673,"diff_summary":[{"file":"CHANGELOG.md","status":"M","additions":209,"deletions":209},{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":209,"deletions":209},{"file":"INSTALL.md","status":"M","additions":209,"deletions":209}],"state":"merged","open_date":"2022-06-03T17:01:04Z","update_date":"2022-06-03T17:17:36Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"74c385d88f5729daa335b24f983db9bb72d00b06","message":"changelog for version 0.5.1","date":"2022-06-03T16:59:47Z"}]},{"author":"affeldt-aist","number":672,"diff_summary":[{"file":"theories/lebesgue_integral.v","status":"M","additions":53,"deletions":32}],"state":"open","open_date":"2022-06-03T12:33:03Z","update_date":"2023-03-15T14:43:57Z","discussion":[{"author":"CohenCyril","date":"2022-07-07T20:08:41Z","comment":"@affeldt-aist I tried something... "}],"review_discussion":[],"tags":[{"tag":"help :sos:","description":"This author/reviewer of this issue/PR needs external help"}],"commits":[{"author":"affeldt-aist","committer":"CohenCyril","hash":"6062fe97b82834976eb21c70107ef43f4f04c0fa","message":"trying to generalize mfun","date":"2022-07-07T13:05:37Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"e2675b4970a6b7b33a5c24f12a3c1a51bd82e45b","message":"Circumvented the `measurableTypeR rT` problem but stack overflowed","date":"2022-07-07T20:02:34Z"}]},{"author":"affeldt-aist","number":671,"diff_summary":[{"file":"_CoqProject","status":"A","additions":1020,"deletions":1},{"file":"theories/probability.v","status":"A","additions":1020,"deletions":1}],"state":"closed","open_date":"2022-06-02T08:29:45Z","update_date":"2022-06-23T06:58:55Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"b545c6f0f5e86345796a39f20bd7306d1293a446","message":"wip","date":"2022-05-19T05:03:13Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"ca8abfa5879d22a6c349217c418e69dae599776e","message":"first take at probability theory","date":"2022-05-19T05:03:13Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"1f66bf2e82a450b5220610fb62641c8a7020f883","message":"variance (wip)","date":"2022-05-19T05:03:13Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"cf9191eda0fd3c7f39b63c76bcc74516abbca2dd","message":"wip","date":"2022-05-19T05:03:13Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"1048d04ecd0a3f58f21d3319e9a3716aa55751d0","message":"wip\n\nCo-authored-by: Takafumi Saikawa <tscompor@gmail.com>","date":"2022-05-19T05:03:13Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"4bc37fdbb4a2dd0d8a0fe44121d9d4e14a0e5626","message":"wip","date":"2022-05-19T06:10:30Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"e7f58f71b64f4f0031dda7246c8637721bf8f69f","message":"wip","date":"2022-06-02T08:24:45Z"}]},{"author":"affeldt-aist","number":670,"diff_summary":[{"file":"_CoqProject","status":"A","additions":1020,"deletions":1},{"file":"theories/probability.v","status":"A","additions":1020,"deletions":1}],"state":"closed","open_date":"2022-06-02T08:25:47Z","update_date":"2022-06-02T08:27:32Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"b545c6f0f5e86345796a39f20bd7306d1293a446","message":"wip","date":"2022-05-19T05:03:13Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"ca8abfa5879d22a6c349217c418e69dae599776e","message":"first take at probability theory","date":"2022-05-19T05:03:13Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"1f66bf2e82a450b5220610fb62641c8a7020f883","message":"variance (wip)","date":"2022-05-19T05:03:13Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"cf9191eda0fd3c7f39b63c76bcc74516abbca2dd","message":"wip","date":"2022-05-19T05:03:13Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"1048d04ecd0a3f58f21d3319e9a3716aa55751d0","message":"wip\n\nCo-authored-by: Takafumi Saikawa <tscompor@gmail.com>","date":"2022-05-19T05:03:13Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"4bc37fdbb4a2dd0d8a0fe44121d9d4e14a0e5626","message":"wip","date":"2022-05-19T06:10:30Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"e7f58f71b64f4f0031dda7246c8637721bf8f69f","message":"wip","date":"2022-06-02T08:24:45Z"}]},{"author":"affeldt-aist","number":669,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":103,"deletions":136},{"file":"theories/exp.v","status":"M","additions":103,"deletions":136},{"file":"theories/lebesgue_integral.v","status":"M","additions":103,"deletions":136},{"file":"theories/lebesgue_measure.v","status":"M","additions":103,"deletions":136},{"file":"theories/measure.v","status":"M","additions":103,"deletions":136},{"file":"theories/reals.v","status":"M","additions":103,"deletions":136},{"file":"theories/sequences.v","status":"M","additions":103,"deletions":136},{"file":"theories/trigo.v","status":"M","additions":103,"deletions":136}],"state":"merged","open_date":"2022-06-02T04:40:59Z","update_date":"2022-06-06T09:06:56Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"d75b6959b82ae845de4c315a28a4b4963a71b947","message":"rm dead code","date":"2022-06-06T08:14:20Z"}]},{"author":"zstone1","number":668,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":110,"deletions":3},{"file":"theories/classical_sets.v","status":"M","additions":110,"deletions":3},{"file":"theories/normedtype.v","status":"M","additions":110,"deletions":3},{"file":"theories/topology.v","status":"M","additions":110,"deletions":3}],"state":"merged","open_date":"2022-06-02T04:32:07Z","update_date":"2022-06-04T17:48:49Z","discussion":[{"author":"affeldt-aist","date":"2022-06-03T14:49:44Z","comment":"Maybe rebase and/or squash because there are several disgracious commits (such as merge branch commits). "}],"review_discussion":[{"author":"t6s","file":"theories/topology.v","date":"2022-06-03T06:47:42Z","comment":"Isn't this rather usually spelled principal filter?"},{"author":"affeldt-aist","file":"theories/topology.v","date":"2022-06-03T06:58:30Z","comment":"Indeed."},{"author":"affeldt-aist","file":"theories/classical_sets.v","date":"2022-06-03T14:47:45Z","comment":"Having `bool` and `2` in the name is not a bit redundant? Maybe `set_bool` would be more informative."},{"author":"affeldt-aist","file":"theories/normedtype.v","date":"2022-06-04T03:16:03Z","comment":"```suggestion\r\n  by move=> ?; exact: subset_closure.\r\n```"}],"tags":[],"commits":[{"author":"zstone1","committer":"zstone1","hash":"5b96acd0a83d6ee7415648f1fba0b3b1dcbcfa46","message":"Adding topologies and principal filters","date":"2022-06-04T03:16:05Z"},{"author":"zstone1","committer":"web-flow","hash":"1b28c3ce85d02dda2e0934aaa6511ba3f9f8042b","message":"Fixing proof style\n\nCo-authored-by: affeldt-aist <33154536+affeldt-aist@users.noreply.github.com>","date":"2022-06-04T17:32:21Z"}]},{"author":"proux01","number":666,"diff_summary":[{"file":"theories/topology.v","status":"M","additions":1,"deletions":1}],"state":"merged","open_date":"2022-05-30T12:14:35Z","update_date":"2022-06-01T05:40:49Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"proux01","committer":"proux01","hash":"64fd2bfe703ae1a785d44eec279710c628ae8a65","message":"Adapt to math-comp/math-comp#878","date":"2022-05-30T12:14:03Z"}]},{"author":"affeldt-aist","number":665,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":255,"deletions":17},{"file":"theories/classical_sets.v","status":"M","additions":255,"deletions":17},{"file":"theories/lebesgue_measure.v","status":"M","additions":255,"deletions":17},{"file":"theories/set_interval.v","status":"M","additions":255,"deletions":17}],"state":"merged","open_date":"2022-05-26T13:36:58Z","update_date":"2022-06-03T15:21:25Z","discussion":[{"author":"proux01","date":"2022-05-31T11:44:28Z","comment":"I'll merge by the end of the week if there is no further comment."},{"author":"t6s","date":"2022-06-03T06:42:21Z","comment":"I left a minor comment on the source code but I do not intend to block merging."},{"author":"proux01","date":"2022-06-03T14:11:52Z","comment":"@affeldt-aist do you prefer to handle the above `bigcup_oppr` point in the current PR or in a further one?"},{"author":"affeldt-aist","date":"2022-06-03T14:15:30Z","comment":"~~Maybe in a future PR.~~ done by the last commit \r\n\r\n"}],"review_discussion":[{"author":"proux01","file":"theories/lebesgue_measure.v","date":"2022-05-30T15:16:37Z","comment":"```suggestion\r\n  move=> x [n _ /=]; rewrite !in_itv => /andP[-> /le_lt_trans]; apply.\r\n```\r\nor maybe even\r\n```suggestion\r\n  move=> x [n _ /=] [!in_itv] /andP[-> /le_lt_trans]; apply.\r\n```\r\nwith recent mathcomp\r\n"},{"author":"proux01","file":"theories/lebesgue_measure.v","date":"2022-05-30T15:24:03Z","comment":"I would have expected the proof to use symmetry and the previous `itv_bnd_infty_bigcup`?\r\n\r\nI'd also expect a `itv_open_bnd_bigcup` for completeness"},{"author":"proux01","file":"theories/lebesgue_measure.v","date":"2022-05-30T15:30:10Z","comment":"```suggestion\r\nLet lebesgue_measure_itv_bnd (x y : bool) (a b : R) :\r\n```"},{"author":"proux01","file":"theories/classical_sets.v","date":"2022-05-31T11:44:08Z","comment":"Not for that PR but wouldn't it be worth having a similar lemma for ring morphisms? (if it holds, haven't tried)\r\n"},{"author":"t6s","file":"theories/classical_sets.v","date":"2022-06-03T06:39:00Z","comment":"This should hold with any function and any family of sets over any type. Isn't there already such a generic lemma?"},{"author":"proux01","file":"theories/classical_sets.v","date":"2022-06-03T14:11:06Z","comment":"Note that, in the same vein, there is already `some_bigcup`."}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"d558da89efce54e023a44e05cd31a16bfc8b70b1","message":"lebesgue measure of intervals","date":"2022-06-03T14:17:04Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"53f88df0a62ba378e7e5a507144a34d8dedf9bac","message":"measure of set of rationals","date":"2022-06-03T14:17:04Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"7b4667fd024ab0738059c0364e9911fd7d7dd301","message":"generalizations\n\nCo-authored-by: Pierre Roux <pierre@roux01.fr>","date":"2022-06-03T14:17:04Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"561cf329f1236629775d891a6a8f48b1359f479a","message":"lemma generalization","date":"2022-06-03T14:35:51Z"}]},{"author":"Alizter","number":663,"diff_summary":[{"file":"theories/topology.v","status":"M","additions":1,"deletions":0}],"state":"merged","open_date":"2022-05-26T01:24:55Z","update_date":"2022-05-26T02:16:45Z","discussion":[{"author":"affeldt-aist","date":"2022-05-26T01:31:49Z","comment":"Thanks.\r\n\r\nfixes #651 (that was going to be taken care of by PR #574)"}],"review_discussion":[],"tags":[],"commits":[{"author":"Alizter","committer":"Alizter","hash":"51ffe974e1e60885755bfb3dbf73d10d575aa641","message":"Adapt w.r.t. coq/coq#16004","date":"2022-05-25T22:25:55Z"}]},{"author":"affeldt-aist","number":656,"diff_summary":[{"file":"theories/lebesgue_measure.v","status":"M","additions":3,"deletions":3}],"state":"merged","open_date":"2022-04-26T09:12:21Z","update_date":"2022-04-26T09:43:42Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"b8e702200d21d0d4c1210229b2e95a054614f9c0","message":"minor shortcut","date":"2022-04-26T09:10:54Z"}]},{"author":"affeldt-aist","number":655,"diff_summary":[{"file":"theories/measure.v","status":"M","additions":3,"deletions":4}],"state":"merged","open_date":"2022-04-19T23:58:54Z","update_date":"2022-04-22T13:58:31Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"c4ed53dd6e5b96540fcf820ddbb8f468e9b2843c","message":"nitpicking","date":"2022-04-19T23:57:16Z"}]},{"author":"proux01","number":654,"diff_summary":[{"file":"theories/mathcomp_extra.v","status":"M","additions":4,"deletions":3}],"state":"merged","open_date":"2022-04-19T14:40:23Z","update_date":"2022-04-20T00:03:06Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"proux01","committer":"proux01","hash":"a77f682434f075ceab727c2f01dfac92b06bc6f5","message":"Prepare for https://github.com/math-comp/math-comp/pull/871","date":"2022-04-19T14:55:25Z"}]},{"author":"affeldt-aist","number":653,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":774,"deletions":586},{"file":"theories/lebesgue_integral.v","status":"M","additions":774,"deletions":586},{"file":"theories/lebesgue_measure.v","status":"M","additions":774,"deletions":586},{"file":"theories/measure.v","status":"M","additions":774,"deletions":586}],"state":"merged","open_date":"2022-04-19T05:28:49Z","update_date":"2022-07-08T09:24:46Z","discussion":[{"author":"affeldt-aist","date":"2022-07-02T16:05:01Z","comment":"It has been rebased, we may consider merging it. @CohenCyril "},{"author":"CohenCyril","date":"2022-07-07T12:53:42Z","comment":"I'm the initial author of this code. I should not be the one merging it. I let you decide what to do with it @affeldt-aist "},{"author":"affeldt-aist","date":"2022-07-07T16:44:29Z","comment":"> I'm the initial author of this code. I should not be the one merging it. I let you decide what to do with it @affeldt-aist\r\n\r\nok, then maybe I can count myself as a reviewer and merge because the regular rebasings of this PR have not been much fun :-(\r\n\r\n  is it ok with you @pi8027 ?\r\n\r\n@CohenCyril note that this is this PR that renames `g_measurableType` (I was wrongly telling you sooner today that this was in master) \r\n\r\n"}],"review_discussion":[],"tags":[],"commits":[{"author":"CohenCyril","committer":"affeldt-aist","hash":"1afe5516e5ac72864bad1a9178fc04343dd2f25a","message":"Adding displays for measurable sets","date":"2022-07-08T09:16:11Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"2b356d616f7e3cbd54a38cefc0ffbf6f4cc14dff","message":"update/fix changelog and doc\n\n- cosmetics","date":"2022-07-08T09:16:11Z"}]},{"author":"affeldt-aist","number":652,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":7,"deletions":6},{"file":"theories/cardinality.v","status":"M","additions":7,"deletions":6},{"file":"theories/classical_sets.v","status":"M","additions":7,"deletions":6}],"state":"merged","open_date":"2022-04-18T07:28:39Z","update_date":"2022-05-02T14:55:38Z","discussion":[{"author":"affeldt-aist","date":"2022-04-30T02:11:09Z","comment":"@CohenCyril ping?"}],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"0005522864c8851b45c5fa355be401da98174b8e","message":"fixes #650","date":"2022-04-18T07:27:24Z"}]},{"author":"affeldt-aist","number":649,"diff_summary":[{"file":"theories/measure.v","status":"M","additions":4,"deletions":4}],"state":"merged","open_date":"2022-04-18T02:47:20Z","update_date":"2022-04-18T03:31:28Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"bac26e6b20e3db815201131c2e472f15fe60a1c8","message":"fixes #648","date":"2022-04-18T02:46:37Z"}]},{"author":"affeldt-aist","number":647,"diff_summary":[{"file":"theories/boolp.v","status":"M","additions":8,"deletions":8}],"state":"merged","open_date":"2022-04-18T02:37:07Z","update_date":"2022-04-18T03:02:43Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"1063b19ffd623baf71e5f250bc159b0a9f522e0c","message":"fixes #643","date":"2022-04-18T02:36:19Z"}]},{"author":"affeldt-aist","number":646,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":538,"deletions":519},{"file":"theories/classical_sets.v","status":"M","additions":538,"deletions":519},{"file":"theories/lebesgue_integral.v","status":"M","additions":538,"deletions":519},{"file":"theories/lebesgue_measure.v","status":"M","additions":538,"deletions":519},{"file":"theories/measure.v","status":"M","additions":538,"deletions":519}],"state":"merged","open_date":"2022-04-18T02:19:32Z","update_date":"2022-07-01T16:04:04Z","discussion":[{"author":"affeldt-aist","date":"2022-06-06T10:00:02Z","comment":"After rebasing, I get this error message:\r\n```coq\r\nLet lebesgue_measure_itvoc (a b : R) :\r\n  (lebesgue_measure `]a, b] = hlength `]a, b])%classic.\r\nError: Stack overflow.\r\n```\r\nWhat could cause this error? Any hint is welcomed.\r\nBy the way, I can avoid the error by writing `]a, b] : set R`.\r\n(I put enough type constraints so that this branch compile.)"},{"author":"affeldt-aist","date":"2022-06-22T17:18:23Z","comment":"In the section below [1], we haved added a type constraint `: set R` around\r\nintervals to avoid a Stack Overflow. I do not remember what change caused that\r\nand if I already told you but since this PR uses an experimental(?) feature of HB I thought you might\r\nwant to know @gares @CohenCyril .\r\n\r\n[1] https://github.com/math-comp/analysis/blob/fixes_642/theories/lebesgue_measure.v#L826-L978"},{"author":"gares","date":"2022-06-22T20:02:31Z","comment":"I'm a bit out of context, but if you tell me how to reproduce the stack overflow I'll look at it."},{"author":"affeldt-aist","date":"2022-06-23T03:03:50Z","comment":"> I'm a bit out of context, but if you tell me how to reproduce the stack overflow I'll look at it.\r\n\r\nYou can just remote the type constraint here\r\nhttps://github.com/math-comp/analysis/blob/fixes_642/theories/lebesgue_measure.v#L830\r\nand compile.\r\n"}],"review_discussion":[{"author":"CohenCyril","file":"theories/lebesgue_integral.v","date":"2022-05-02T11:40:21Z","comment":"This exposes the supposedly blackbox implementation of HB defined structures.\r\nCan you explain the purpose of the definition so that we try to rephrase it?"},{"author":"proux01","file":"theories/measure.v","date":"2022-05-02T15:49:38Z","comment":"Isn't `measure0` implied by `measure_semi_additive` (or alternatively, couldn't `semi_additive` be replaced by `semi_additive2`?)"},{"author":"affeldt-aist","file":"theories/lebesgue_integral.v","date":"2022-05-03T08:03:26Z","comment":"This definition is used a few times in `lebesgue_integral.v` (e.g., https://github.com/math-comp/analysis/blob/fixes_642/theories/lebesgue_integral.v#L3535). It seemed necessary to have a constructor to which one can tell explicitly that the domain is measurable because this fact didn't seem inferrable automatically with a standard use of HB packed classes."},{"author":"affeldt-aist","file":"theories/measure.v","date":"2022-05-03T08:03:44Z","comment":"> Isn't measure0 implied by measure_semi_additive\r\n\r\nIndeed."},{"author":"affeldt-aist","file":"theories/measure.v","date":"2022-05-03T08:07:44Z","comment":"> couldn't semi_additive be replaced by semi_additive2?\r\n\r\n~~Under the hypothesis that `mu set0 = 0`, using lemmas `additive2P` and `semi_additive2E`.~~\r\nThis might not be true, these lemmas actually require a ring of sets, my mistake."},{"author":"CohenCyril","file":"theories/measure.v","date":"2022-05-03T08:10:08Z","comment":"If I recall correcly, `semi_additive2` and `semi_additive` are not equivalent on a semiring."},{"author":"CohenCyril","file":"theories/lebesgue_integral.v","date":"2022-05-03T08:17:32Z","comment":"OK I see! The solution is to create a wrapper around a function, which takes as a phantom argument the measurablility of the domain : `Definition mrestr D f (mD : measurable D):= f` and provide an HB instance for this one."},{"author":"affeldt-aist","file":"theories/lebesgue_integral.v","date":"2022-05-03T10:45:29Z","comment":"This indeed provides a way not to relay on the internals of HB but I suspect this commit https://github.com/math-comp/analysis/pull/646/commits/8e0001fbeac1edd2925c85a188075112f6ae06d6 is not exactly it."},{"author":"proux01","file":"theories/measure.v","date":"2022-05-03T13:05:42Z","comment":"Indeed, my bad. So this is just `measure0` being redundant."},{"author":"proux01","file":"theories/measure.v","date":"2022-05-05T09:21:52Z","comment":"Isn't `measure0` redundant here too?"},{"author":"proux01","file":"theories/measure.v","date":"2022-05-05T09:23:29Z","comment":"An alternative to `measure_ge0` would be to ask for `mu : set T -> {nonneg \\bar R}` don't know what's best?"},{"author":"CohenCyril","file":"theories/measure.v","date":"2022-05-05T11:59:18Z","comment":"I'm 99% sure it is better to have `measure_ge0`."},{"author":"CohenCyril","file":"theories/lebesgue_integral.v","date":"2022-05-05T12:00:35Z","comment":"> This indeed provides a way not to relay on the internals of HB but I suspect this commit [8e0001f](https://github.com/math-comp/analysis/commit/8e0001fbeac1edd2925c85a188075112f6ae06d6) is not exactly it.\r\n\r\nSure I guess the definition of `mrestr` should be `restr` and not the identity."},{"author":"proux01","file":"theories/measure.v","date":"2022-05-05T12:06:15Z","comment":"Ok, would you mind explaining? it's not obvious to me.\r\n"},{"author":"CohenCyril","file":"theories/measure.v","date":"2022-05-05T12:14:40Z","comment":"It's better to deliver the raw type, without having to add an extra `%:num` almost everywhere and have a canonical instance to declare the output is always non-negative.\r\nThe idea is pervasive in mathcomp: if possible give the simplest possible type (no structure) and recover any structure by resolution."},{"author":"CohenCyril","file":"theories/measure.v","date":"2022-05-05T12:23:23Z","comment":"Morever, if there is more structure on the output, since the head symbol is now `%:num` instead of `Measure.sort` so the head symbol (which would lead to the resolution of the additional instance) is now wrong."},{"author":"affeldt-aist","file":"theories/measure.v","date":"2022-05-10T01:11:56Z","comment":"Maybe not because otherwise the function that associates +oo to any set could be a measure."},{"author":"proux01","file":"theories/measure.v","date":"2022-05-10T09:19:15Z","comment":"So we could add the following\r\n```Coq\r\nSection additive_measure_signed.\r\nContext (R : numFieldType) (T : semiRingOfSetsType).\r\n\r\nVariable mu : {additive_measure set T -> \\bar R}.\r\n\r\nLemma additive_measure_snum_subproof S : Signed.spec 0 ?=0 >=0 (mu S).\r\nProof. exact: measure_ge0. Qed.\r\n\r\nCanonical additive_measure_snum S :=\r\n  Signed.mk (additive_measure_snum_subproof S).\r\n\r\nEnd additive_measure_signed.\r\n\r\nSection\tmeasure_signed.\r\nVariables (R : numFieldType) (T : semiRingOfSetsType).\r\n         \r\nVariable mu : {measure set T -> \\bar R}.\r\n\r\nLemma measure_snum_subproof S : Signed.spec 0 ?=0 >=0 (mu S).\r\nProof. exact: measure_ge0. Qed.\r\n\r\nCanonical measure_snum S := Signed.mk (measure_snum_subproof S).\r\n\r\nEnd measure_signed.\r\n```\r\nrespectively after the definitions of additive_measure and measure.\r\n"},{"author":"proux01","file":"theories/measure.v","date":"2022-05-10T09:22:27Z","comment":"This seems to only require R to be a numFieldType rather than a realFieldType."},{"author":"CohenCyril","file":"theories/measure.v","date":"2022-05-10T10:44:29Z","comment":"One day HB might finally handle that automatically ..."},{"author":"affeldt-aist","file":"theories/measure.v","date":"2022-05-10T13:42:09Z","comment":"Are you suggesting to add this right now or will it be part of a later PR?"},{"author":"CohenCyril","file":"theories/measure.v","date":"2022-05-10T13:46:17Z","comment":"> Are you suggesting to add this right now or will it be part of a later PR?\r\n\r\nI'm fine with either. (And the HB stuff is pure fiction for now)"},{"author":"proux01","file":"theories/measure.v","date":"2022-05-10T14:04:31Z","comment":"You can add it now (I checked it doesn't require any adaptation)."},{"author":"CohenCyril","file":"theories/lebesgue_integral.v","date":"2022-05-16T13:22:28Z","comment":"doesn't \r\n```suggestion\r\n  \\int_ D f x 'd mzero[x] = 0.\r\n```\r\nwork?"},{"author":"CohenCyril","file":"theories/lebesgue_integral.v","date":"2022-05-16T13:23:36Z","comment":"No need to name instances.\r\n```suggestion\r\nHB.instance Definition _ := isMeasure.Build _ _\r\n```"},{"author":"CohenCyril","file":"theories/lebesgue_integral.v","date":"2022-05-16T13:26:48Z","comment":"If applied, it is probably unnecessary to take `[the measure .. of ..]`\r\n```suggestion\r\n(product_measure1 m1 sm2) (A1 `*` A2) = m1 A1 * m2 A2.\r\n```"},{"author":"affeldt-aist","file":"theories/lebesgue_integral.v","date":"2022-05-17T02:48:14Z","comment":"No, it does not work."},{"author":"CohenCyril","file":"theories/lebesgue_integral.v","date":"2022-06-07T12:44:17Z","comment":"Doesn't `\\int[mzero]` work?"},{"author":"affeldt-aist","file":"theories/lebesgue_integral.v","date":"2022-06-07T13:11:26Z","comment":"```\r\nThe term \"mzero\" has type \"set ?T0 -> \\bar ?R0\" while it is expected to have type\r\n \"{measure set ?T -> \\bar ?R}\".\r\n ```"},{"author":"proux01","file":"theories/lebesgue_integral.v","date":"2022-06-07T13:14:12Z","comment":"Couldn't we add a phantom or something in the `\\int` notation to avoid that?"}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"b4fda5ba6d6ff8be2e13e57d90f8003ff7c5e1a5","message":"use HB to define measures","date":"2022-06-22T17:01:38Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"6af82e0d47659665b203d9766aafb248cce4bc7d","message":"tentative removal of Restr, Product_measure{1,2}\n\nCo-authored-by: Cyril Cohen <cohen@crans.org>","date":"2022-06-22T17:01:40Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"d6d307db5582e9c97eecf86e279bfec71a182355","message":"rm measure0 from additive measure interface\n\nCo-authored-by: Pierre Roux <pierre@roux01.fr>","date":"2022-06-22T17:01:40Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"56b6bd8fc44cf5db1c5c9ea9ed59702cefd5b535","message":"fix restr and product_measure","date":"2022-06-22T17:01:40Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"06904d5e3fdf69bd0dec259d3af6cb1b53e02703","message":"improvements\n\nCo-authored-by: Pierre Roux <pierre@roux01.fr>","date":"2022-06-22T17:01:40Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"38b7cb14ff2831d9a0c401b18933ecbba88f504a","message":"rm warning, upd changelog","date":"2022-06-22T17:10:54Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"392be47f84575b5b6fdcaa02c01af44150b382f7","message":"mscale","date":"2022-06-22T17:13:07Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"31b9715430333b430bf6e085a20da9afa7c008e9","message":"rm [the ... of ...] for \\d_","date":"2022-06-22T17:13:09Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"eb0e4ec33256ca109d74fe66bf565bd1c9deda39","message":"ill-placed reserved notation","date":"2022-06-22T17:13:09Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"0ce7c9b7de27fe71d6b91d466c5c15939085103a","message":"various fixes","date":"2022-06-30T16:48:57Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"5a44af89e90f2f51397f80f2498876dfe5a7df8f","message":"update and fix changelog","date":"2022-07-01T15:44:09Z"}]},{"author":"proux01","number":645,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"A","additions":3414,"deletions":3347},{"file":"_CoqProject","status":"A","additions":3414,"deletions":3347},{"file":"theories/constructive_ereal.v","status":"A","additions":3414,"deletions":3347},{"file":"theories/ereal.v","status":"A","additions":3414,"deletions":3347}],"state":"merged","open_date":"2022-04-15T14:00:23Z","update_date":"2022-08-02T09:29:24Z","discussion":[{"author":"proux01","date":"2022-07-29T15:16:33Z","comment":"@affeldt-aist CI \"green\", this can be merged as discussed during the last meeting (the `constructive_ereal.v` file should further be merged with `table.v` from real-closed (c.f. https://github.com/math-comp/real-closed/pull/29 ) and integrated into mathcomp proper)."}],"review_discussion":[],"tags":[],"commits":[{"author":"proux01","committer":"proux01","hash":"727a4bb518bc489b718ac5e862f62fe162e1825d","message":"Split ereal in constructive_ereal and ereal","date":"2022-07-29T14:35:10Z"}]},{"author":"affeldt-aist","number":644,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":181,"deletions":188},{"file":"theories/lebesgue_integral.v","status":"M","additions":181,"deletions":188}],"state":"merged","open_date":"2022-04-14T06:34:28Z","update_date":"2022-05-16T13:31:11Z","discussion":[{"author":"CohenCyril","date":"2022-04-14T09:43:08Z","comment":"@mkerjean what do you think of the new vs the old notation. Cf [new notation scheme for integrals, closer to mathcomp's ASCII](https://github.com/math-comp/analysis/wiki/2022-04-12-Meeting)"},{"author":"affeldt-aist","date":"2022-04-21T00:28:38Z","comment":"I just rebased so that it is ready-to-merge.\r\n\r\n@mkerjean You can observe that the new notation makes it for shorter expressions compared to the previous one."}],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"409492f1e07dff75181ca3aeeffc19c450791a8e","message":"change \\int_ notation","date":"2022-05-13T15:29:30Z"},{"author":"CohenCyril","committer":"affeldt-aist","hash":"757163e87fbd022ac7fd06fec97470dea5f4cf7a","message":"further simplifications","date":"2022-05-13T15:29:32Z"}]},{"author":"zstone1","number":641,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":214,"deletions":84},{"file":"theories/topology.v","status":"M","additions":214,"deletions":84}],"state":"merged","open_date":"2022-04-12T14:21:27Z","update_date":"2022-06-04T03:15:19Z","discussion":[{"author":"affeldt-aist","date":"2022-04-29T10:00:48Z","comment":"> It looks like the notation `{ptws, F --> f}` is not displayed as it should.\r\n\r\nThe last commit fixes the problem with my setting.\r\n"},{"author":"affeldt-aist","date":"2022-04-29T10:30:21Z","comment":"> One small detail is that compact_equicontinuous is a necessary step to prove precompact_equicontinuous.\r\n> But the latter is strictly stronger. Perhaps this could be compressed into a single proof with a WLOG to split the cases?\r\n\r\nAt least, we can maybe let `compact_equicontinuous` out of the interface like in\r\nd9029b30fd94dfcbe838ab509adc8d2b3ab829d5 ?\r\n\r\n"},{"author":"affeldt-aist","date":"2022-04-29T10:36:34Z","comment":"Maybe it is more in line with MathComp to write `Theorem Ascoli` instead of `Lemma ascoli_theorem`.\r\n\r\nIt might also be better to pick a different name for `ascoli_forward`, a name made up from the identifiers\r\nused in the statement, like `ptws_precompact_equicontinuous`.\r\n\r\n\r\n"},{"author":"affeldt-aist","date":"2022-04-29T10:45:23Z","comment":"One last comment about naming. I could spot a mix of \"pointwise\" and \"ptws\" in the name of lemmas. Maybe you want to be more uniform?"},{"author":"zstone1","date":"2022-04-29T13:49:15Z","comment":"Thanks for this review. You are correct. We definitely should be more consistent with `pointwise` and `ptws`. Does math-comp style generally have a preference for one or the other? "},{"author":"affeldt-aist","date":"2022-04-30T03:30:35Z","comment":"> We definitely should be more consistent with `pointwise` and `ptws`. Does math-comp style generally have a preference for one or the other?\r\n\r\nI am not sure about the convention. I would rather go with `pointwise` for identifiers here. One reason is that I cannot think of a shortening scheme that would also apply to `piecewise`.\r\n\r\n"},{"author":"zstone1","date":"2022-04-30T04:13:24Z","comment":"Yeah, seems reasonable. I've pushed an update to fix the `ptws` names in identifiers. I've left the `{ptws F --> F}` notation alone. I can live with `ptws` in the notation. The brevity is marginally useful because the predicate appears a lot in proof contexts. But it's easy enough to change if you prefer. "},{"author":"affeldt-aist","date":"2022-04-30T07:10:45Z","comment":"I think that `ptws` is fine for the notation."},{"author":"affeldt-aist","date":"2022-06-03T14:54:39Z","comment":"This is also in need of a rebase (there are merge commits). "}],"review_discussion":[],"tags":[],"commits":[{"author":"zstone1","committer":"zstone1","hash":"7f17d238c0250c7b0a42834fa73196b7faf353bc","message":"Arzela Ascoli main results","date":"2022-06-03T19:20:14Z"}]},{"author":"affeldt-aist","number":638,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":3,"deletions":26},{"file":"theories/ereal.v","status":"M","additions":3,"deletions":26},{"file":"theories/topology.v","status":"M","additions":3,"deletions":26}],"state":"merged","open_date":"2022-04-12T10:34:48Z","update_date":"2022-05-17T05:41:36Z","discussion":[{"author":"affeldt-aist","date":"2022-05-14T00:04:56Z","comment":"I'll merge this one, it looks harmless."}],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"517a7cfc3638e58a862f28dcaed45b71ca300abe","message":"fixes #637","date":"2022-05-10T21:50:38Z"}]},{"author":"affeldt-aist","number":636,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":13,"deletions":5},{"file":"theories/classical_sets.v","status":"M","additions":13,"deletions":5},{"file":"theories/lebesgue_integral.v","status":"M","additions":13,"deletions":5}],"state":"merged","open_date":"2022-04-12T09:22:01Z","update_date":"2022-07-28T11:09:12Z","discussion":[],"review_discussion":[{"author":"CohenCyril","file":"theories/classical_sets.v","date":"2022-07-07T12:55:29Z","comment":"I'd have a second lemma with name `preimage10P` for this one."}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"cb10408c48dcea5bd95e73b386871817ab98c66a","message":"preimage10P equivalence to generalize preimage10","date":"2022-07-28T10:17:58Z"}]},{"author":"affeldt-aist","number":635,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":4,"deletions":0},{"file":"theories/ereal.v","status":"M","additions":4,"deletions":0}],"state":"merged","open_date":"2022-04-12T09:02:44Z","update_date":"2022-04-13T08:06:15Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"7d8ee24f98b5f9565e87b423f8a299856065a934","message":"abse1","date":"2022-04-13T01:38:53Z"}]},{"author":"affeldt-aist","number":634,"diff_summary":[{"file":"theories/lebesgue_measure.v","status":"M","additions":0,"deletions":2},{"file":"theories/set_interval.v","status":"M","additions":0,"deletions":2}],"state":"merged","open_date":"2022-04-12T02:57:03Z","update_date":"2022-05-17T06:04:40Z","discussion":[{"author":"affeldt-aist","date":"2022-05-14T00:07:41Z","comment":"I'll merge this one, among others because PR #644 looks promising."}],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"3b719520482481b6d45b114247fd2cb131312fc6","message":"remove company-coq-local-symbols\n\n- they are redundant with `.dir-locals.el`\n- there are still a few symbols defined in\n  `lebesgue_integral.v` but they might disappear\n  with an anticipated change of ASCII notation","date":"2022-04-12T02:51:56Z"}]},{"author":"affeldt-aist","number":633,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":27,"deletions":2},{"file":"theories/topology.v","status":"M","additions":27,"deletions":2}],"state":"merged","open_date":"2022-04-10T13:33:09Z","update_date":"2022-06-06T09:54:31Z","discussion":[],"review_discussion":[{"author":"zstone1","file":"theories/topology.v","date":"2022-06-03T02:56:08Z","comment":"Can we generalize this to any to use any type `T` instead of `nat`? There's a handy lemma that says \r\n> ultrafilters either extend the frechet filter, or are principle\r\n\r\nwhich I'd like to prove at some point.\r\n\r\nThen the frechet_properfilter would ideally say `infinite_set [set: T] -> ProperFilter frechet_filter`. It looks like that would be possible, but I'm not sure. I could imagine still creating a `Global Instance` specifically for the `nat` case, as that's helpful separately. "},{"author":"affeldt-aist","file":"theories/topology.v","date":"2022-06-03T04:11:28Z","comment":"See https://github.com/math-comp/analysis/pull/633/commits/e885fee421768b6c08e691a69f25a36cdd2f7cd3 for a tentative generalization."},{"author":"zstone1","file":"theories/topology.v","date":"2022-06-03T14:11:36Z","comment":"Looks good."}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"dd405769f70e5f5688c135e5204400136c58803a","message":"frechet filter","date":"2022-06-06T09:09:06Z"}]},{"author":"affeldt-aist","number":632,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":82,"deletions":1},{"file":"theories/lebesgue_integral.v","status":"M","additions":82,"deletions":1}],"state":"merged","open_date":"2022-04-05T15:20:02Z","update_date":"2022-07-03T08:51:42Z","discussion":[{"author":"affeldt-aist","date":"2022-07-03T08:27:13Z","comment":"This is now axiom-free thanks to the merge of `integral_count`."}],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"d8123ad3f5ceef12149f7053fdd4e9d04ec10057","message":"countable additivity","date":"2022-07-03T08:25:24Z"}]},{"author":"affeldt-aist","number":631,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":4,"deletions":19},{"file":"theories/mathcomp_extra.v","status":"M","additions":4,"deletions":19}],"state":"merged","open_date":"2022-04-05T09:45:46Z","update_date":"2022-04-05T22:27:54Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"4cba060eea37f59e7d1592b07d1112b8f560bd8a","message":"remove code now available in mathcomp","date":"2022-04-05T09:44:37Z"}]},{"author":"affeldt-aist","number":628,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":613,"deletions":26},{"file":"theories/ereal.v","status":"M","additions":613,"deletions":26},{"file":"theories/esum.v","status":"M","additions":613,"deletions":26},{"file":"theories/lebesgue_integral.v","status":"M","additions":613,"deletions":26},{"file":"theories/measure.v","status":"M","additions":613,"deletions":26},{"file":"theories/sequences.v","status":"M","additions":613,"deletions":26}],"state":"merged","open_date":"2022-04-04T10:58:19Z","update_date":"2022-07-03T07:31:51Z","discussion":[{"author":"affeldt-aist","date":"2022-06-14T01:49:55Z","comment":"> Looks good to me\r\n\r\nIs it an approval for this PR and the PR it is based on?"},{"author":"affeldt-aist","date":"2022-06-22T16:20:43Z","comment":"We have a need for `ge0_integral_measure_series` in another project.\r\n(We were about to re-prove it. :-/)"}],"review_discussion":[{"author":"t6s","file":"theories/esum.v","date":"2022-06-03T05:47:46Z","comment":"The e in the notation esum does not express very well that it is actually an unordered summation(, or the summation over classical sets). But I do not strongly insist on changing that."},{"author":"t6s","file":"theories/lebesgue_integral.v","date":"2022-06-03T05:56:45Z","comment":"If I remember correctly these two lines are the new findings while you were trying to improve this lemma. Isn't it worth leaving a few comments on these lines?"},{"author":"affeldt-aist","file":"theories/esum.v","date":"2022-06-06T08:27:46Z","comment":"It used to be `csum`. Do you think that `usum` would be more appropriate?"},{"author":"affeldt-aist","file":"theories/lebesgue_integral.v","date":"2022-06-06T09:04:49Z","comment":"Were they \"new findings\"? I do not remember very well. Were they oversights in a reference we used? Maybe but now they rather look to me as technical consequences of the `esumB` lemma which was maybe our \"finding\" in the sense that we did not understand immediately how to organize ourselves to produce a satisfactory version of it. We started with the PR https://github.com/math-comp/analysis/pull/596 that redefined `esum` as `\\nnesum_(i in I) f^\\+ i - \\nnesum_(i in I) f^\\- i` so that we could prove:\r\n```coq\r\nLemma esumB D f g : esummable D f -> esummable D g ->\r\n  (forall i, D i -> 0 <= f i) -> (forall i, D i -> 0 <= g i) ->\r\n  \\esum_(i in D) (f i - g i) = \\esum_(i in D) f i - \\esum_(i in D) g i.\r\n```\r\nbut that led to reproduce lemmas looking too much like already-proved integration lemmas.\r\nWhereas in this PR we can get along without redefining `esum` and prove instead:\r\n```coq\r\nLemma esumB D f g : summable D f -> summable D g ->\r\n  (forall i, D i -> 0 <= f i) -> (forall i, D i -> 0 <= g i) ->\r\n  \\esum_(i in D) (f \\- g)^\\+ i - \\esum_(i in D) (f \\- g)^\\- i =\r\n  \\esum_(i in D) f i - \\esum_(i in D) g i.\r\n```\r\nto limit duplication of similar-looking facts. I am not sure what should be commented on.\r\n"},{"author":"CohenCyril","file":"theories/esum.v","date":"2022-06-07T12:45:47Z","comment":"`e` is for \"extented\" because this kind of summation only makes sense for `ereal`"}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"08848b769b543ff2192b3a336a3818acdb9acbdd","message":"counting measure","date":"2022-07-02T21:11:40Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"418dc2ffe8d0a27269942bef4daeeb6e60023b86","message":"fix","date":"2022-07-02T21:17:41Z"}]},{"author":"zstone1","number":627,"diff_summary":[{"file":"_CoqProject","status":"A","additions":412,"deletions":0},{"file":"theories/cantor.v","status":"A","additions":412,"deletions":0}],"state":"closed","open_date":"2022-04-04T02:56:24Z","update_date":"2022-10-10T21:08:17Z","discussion":[{"author":"affeldt-aist","date":"2022-04-04T03:19:43Z","comment":"Not a deep comment but you may want to consider the if/is/then/else syntax to write functions, e.g.:\r\n```coq\r\nFixpoint false_extend (s : seq bool) : cantor_space :=\r\n  if s is b :: s then\r\n    (fun n => if n is m.+1 then false_extend s m else b)\r\n  else\r\n    (fun=> false).\r\n\r\nFixpoint prefix_of (x : cantor_space) (n : nat) : seq bool :=\r\n  if n is m.+1 then x 0 :: prefix_of (pull x) m else nil.\r\n\r\nLocal Fixpoint prefix_helper (i : nat) (s : seq bool) :=\r\n  if s is b :: l then\r\n    prod_topo_apply i @^-1` [set b] `&` prefix_helper (S i) l\r\n  else\r\n    [set: cantor_space].\r\n```"},{"author":"zstone1","date":"2022-10-10T21:08:17Z","comment":"Bigger and better cantor stuff coming. With #763, the bulk of this work becomes redundant anyway."}],"review_discussion":[],"tags":[],"commits":[{"author":"zstone1","committer":"web-flow","hash":"bcc5d6a39881e447ff7fca1c9283d982620c07cf","message":"Arzela Ascoli main results (#545)\n\nAdding main lemmas for arzela ascoli, some lemmas for dealing with compactness, and a technique for getting \"sufficiently small\" sets from a filter.","date":"2022-04-12T13:37:54Z"},{"author":"zstone1","committer":"zstone1","hash":"12462fe68c083008dd0c76355c65fdc0edc54d0a","message":"Merge branch 'master' of https://github.com/math-comp/analysis","date":"2022-04-28T03:00:50Z"},{"author":"zstone1","committer":"zstone1","hash":"a50af3955bd6147efe93af9c05a2e3ec3e251f63","message":"Merge branch 'master' of https://github.com/math-comp/analysis","date":"2022-05-29T16:22:10Z"},{"author":"zstone1","committer":"zstone1","hash":"638320e3759a65354f29ed3d7fae00d5a1354203","message":"basic cantor set stuff\n\ncantor hausdorff\n\ntrying to prove false","date":"2022-05-29T16:24:25Z"},{"author":"zstone1","committer":"zstone1","hash":"733f4a9029af683dd22f2ef9b88616f1468d1f04","message":"fixed prefixes are closed","date":"2022-05-29T16:24:25Z"},{"author":"zstone1","committer":"zstone1","hash":"57287536be83452ac3dba2f8161a62a98dc8d83a","message":"working on metric","date":"2022-05-29T16:24:25Z"},{"author":"zstone1","committer":"zstone1","hash":"c14ac71ee07565a8dc1436476baf56cc1ba62cfe","message":"ugly proofs, but helpful facts","date":"2022-05-30T04:50:23Z"},{"author":"zstone1","committer":"zstone1","hash":"34b31b34de9385df9a24a22c782de7d4f0c007ab","message":"done with most of the convergence stuff","date":"2022-05-30T05:13:19Z"},{"author":"zstone1","committer":"zstone1","hash":"99323b2168778e0c5c4920476bd540b1f7c53ae9","message":"cantor space metric proof","date":"2022-05-30T17:04:16Z"}]},{"author":"affeldt-aist","number":626,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":32,"deletions":0},{"file":"theories/measure.v","status":"M","additions":32,"deletions":0}],"state":"merged","open_date":"2022-04-02T15:05:50Z","update_date":"2022-05-02T16:04:01Z","discussion":[{"author":"CohenCyril","date":"2022-04-07T16:06:21Z","comment":"This is a gallicism, which is not totally inappropriate for Coq, but still, let's call it \"image measure\" or \"pushforward measure\" ? https://en.wikipedia.org/wiki/Pushforward_measure"},{"author":"affeldt-aist","date":"2022-04-19T23:41:28Z","comment":"Note that the presentation of the theory of this commit will certainly be changed by https://github.com/math-comp/analysis/pull/646 but not the proof so it is still relevant to review it first."},{"author":"affeldt-aist","date":"2022-04-19T23:41:28Z","comment":"Note that the presentation of the theory of this commit will certainly be changed by https://github.com/math-comp/analysis/pull/646 but not the proof so it is still relevant to review it first."},{"author":"proux01","date":"2022-04-20T07:44:03Z","comment":"Thanks for the information. I hope to have a look in the coming days."},{"author":"affeldt-aist","date":"2022-04-30T02:12:11Z","comment":"@proux01 ping?"}],"review_discussion":[{"author":"proux01","file":"theories/measure.v","date":"2022-05-02T15:45:23Z","comment":"```suggestion\r\nVariables (R : realFieldType) (m : {measure set T1 -> \\bar R}).\r\n```\r\nI understand it cannot be generalized to `numFieldType` because of\r\n```Coq\r\n(*NB: generalize to numFieldType when Rhausdorff is generalized *)\r\nLemma semi_sigma_additive_is_additive (R : realFieldType)\r\n```\r\nbut `realFieldType` is already more generic than `realType`"},{"author":"affeldt-aist","file":"theories/measure.v","date":"2022-05-03T07:06:12Z","comment":"Thank you for noticing."}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"proux01","hash":"d6bcc93b1dd474dcd0d96979219f5e15631d077c","message":"pushforward/image measure","date":"2022-05-02T15:47:16Z"}]},{"author":"affeldt-aist","number":625,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":79,"deletions":77},{"file":"theories/ereal.v","status":"M","additions":79,"deletions":77},{"file":"theories/esum.v","status":"M","additions":79,"deletions":77},{"file":"theories/lebesgue_integral.v","status":"M","additions":79,"deletions":77},{"file":"theories/measure.v","status":"M","additions":79,"deletions":77},{"file":"theories/sequences.v","status":"M","additions":79,"deletions":77}],"state":"closed","open_date":"2022-04-01T15:16:19Z","update_date":"2022-10-07T13:31:30Z","discussion":[],"review_discussion":[{"author":"CohenCyril","file":"theories/ereal.v","date":"2022-04-04T09:59:23Z","comment":"I'd rather have a new battery of lemmas and keep the old names with their old meaning"},{"author":"affeldt-aist","file":"theories/ereal.v","date":"2022-04-05T03:05:27Z","comment":"Then I'll close this PR very soon."}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"52405d5eae5a6e05a025402dcaa45a262693aa44","message":"fix definition of fin_num","date":"2022-04-01T15:13:00Z"}]},{"author":"affeldt-aist","number":624,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":176,"deletions":174},{"file":"theories/lebesgue_integral.v","status":"M","additions":176,"deletions":174},{"file":"theories/lebesgue_measure.v","status":"M","additions":176,"deletions":174},{"file":"theories/numfun.v","status":"M","additions":176,"deletions":174}],"state":"merged","open_date":"2022-04-01T02:42:25Z","update_date":"2022-05-02T14:54:21Z","discussion":[{"author":"affeldt-aist","date":"2022-04-25T13:51:42Z","comment":"Since it is essentially a renaming discussed in the meeting, we may consider it as good to go?"},{"author":"affeldt-aist","date":"2022-04-30T02:12:47Z","comment":"@ybertot ping?"},{"author":"affeldt-aist","date":"2022-05-02T14:12:46Z","comment":"> This looks good to me. There are two minor problems that I think should be corrected.\r\n\r\nIndeed. Thank you!\r\n"}],"review_discussion":[{"author":"ybertot","file":"theories/lebesgue_integral.v","date":"2022-05-02T13:04:00Z","comment":"I believe there is typo here: should funeneg"},{"author":"ybertot","file":"CHANGELOG_UNRELEASED.md","date":"2022-05-02T13:10:21Z","comment":"The renaming of `integrable_funennp` into `integrable_funeneg` should also be documented."}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"3fb688e9e88a73d91fa29491917242ccca2e5b1c","message":"fixes #613","date":"2022-05-02T14:04:34Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"b3568c781913bc279b036a7af93ce929f746706d","message":"fixes\n\nCo-authored-by: Yves Bertot <Yves.Bertot@inria.fr>","date":"2022-05-02T14:10:52Z"}]},{"author":"affeldt-aist","number":623,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":8,"deletions":10},{"file":"theories/lebesgue_measure.v","status":"M","additions":8,"deletions":10},{"file":"theories/realfun.v","status":"M","additions":8,"deletions":10}],"state":"merged","open_date":"2022-04-01T01:58:53Z","update_date":"2022-04-06T07:02:53Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"d7fbc6a56f9acf4a4f3cf00741dcb38d97ea79c7","message":"fixes #612","date":"2022-04-06T06:47:28Z"}]},{"author":"affeldt-aist","number":622,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":102,"deletions":96},{"file":"theories/esum.v","status":"M","additions":102,"deletions":96},{"file":"theories/lebesgue_measure.v","status":"M","additions":102,"deletions":96},{"file":"theories/measure.v","status":"M","additions":102,"deletions":96},{"file":"theories/sequences.v","status":"M","additions":102,"deletions":96}],"state":"merged","open_date":"2022-03-31T15:37:36Z","update_date":"2022-04-06T09:22:18Z","discussion":[{"author":"CohenCyril","date":"2022-04-05T22:37:38Z","comment":"rebase and merge :+1: "}],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"f79b3542405d6aac44c76fefce4ee2db8c34aed0","message":"fixes #602","date":"2022-04-06T07:54:42Z"}]},{"author":"affeldt-aist","number":620,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":195,"deletions":10},{"file":"theories/lebesgue_integral.v","status":"M","additions":195,"deletions":10},{"file":"theories/lebesgue_measure.v","status":"M","additions":195,"deletions":10},{"file":"theories/measure.v","status":"M","additions":195,"deletions":10}],"state":"merged","open_date":"2022-03-29T09:20:09Z","update_date":"2022-05-13T13:06:11Z","discussion":[{"author":"affeldt-aist","date":"2022-04-19T23:42:37Z","comment":"Note that the presentation of the theory of this commit will certainly be changed by https://github.com/math-comp/analysis/pull/646 but not the proof so it is still relevant to review it first."},{"author":"affeldt-aist","date":"2022-04-19T23:42:37Z","comment":"Note that the presentation of the theory of this commit will certainly be changed by https://github.com/math-comp/analysis/pull/646 but not the proof so it is still relevant to review it first."},{"author":"affeldt-aist","date":"2022-04-30T02:13:50Z","comment":"> All changes look just fine.\r\n\r\nThanks for having a look!"},{"author":"affeldt-aist","date":"2022-05-10T21:54:46Z","comment":"I guess we can merge this one?"}],"review_discussion":[{"author":"t6s","file":"theories/measure.v","date":"2022-04-29T06:19:24Z","comment":"`ereal_series` (instead of `ereal_series_cond`) works too."},{"author":"CohenCyril","file":"theories/measure.v","date":"2022-05-02T11:38:52Z","comment":"`eq_measure`?"}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"9689da8abddf3330b945bc9d25b9f889258b95fd","message":"sum of measures","date":"2022-05-04T07:36:22Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"23ee522c21ed2dcf4ee0dffb1e6dac4ad8bf717d","message":"fixes #659","date":"2022-05-06T09:40:14Z"}]},{"author":"affeldt-aist","number":619,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":97,"deletions":15},{"file":"theories/cardinality.v","status":"M","additions":97,"deletions":15},{"file":"theories/classical_sets.v","status":"M","additions":97,"deletions":15},{"file":"theories/mathcomp_extra.v","status":"M","additions":97,"deletions":15}],"state":"merged","open_date":"2022-03-29T07:42:55Z","update_date":"2022-03-31T13:47:34Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"CohenCyril","hash":"1f6a0b9a672a552284bd148aa115f7ed23f8532f","message":"More lemmas about cardinality\n\nCo-authored-by: Cyril Cohen <cohen@crans.org>\nCo-authored-by: Takafumi Saikawa <tscompor@gmail.com>","date":"2022-03-31T12:56:45Z"}]},{"author":"affeldt-aist","number":618,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":15,"deletions":17},{"file":"theories/lebesgue_integral.v","status":"M","additions":15,"deletions":17},{"file":"theories/lebesgue_measure.v","status":"M","additions":15,"deletions":17}],"state":"merged","open_date":"2022-03-29T06:49:03Z","update_date":"2022-03-29T18:14:10Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"a8a889e79970acc0f1af0fcde7c324a2746ea209","message":"move and generalize hint","date":"2022-03-29T06:50:19Z"}]},{"author":"hoheinzollern","number":617,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":10,"deletions":19},{"file":"theories/lebesgue_measure.v","status":"M","additions":10,"deletions":19},{"file":"theories/normedtype.v","status":"M","additions":10,"deletions":19}],"state":"merged","open_date":"2022-03-28T13:27:17Z","update_date":"2022-03-29T18:11:41Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"hoheinzollern","committer":"hoheinzollern","hash":"2f13e44704bab94bc1dfadb3ec06e7cb154b2ebc","message":"Simplifying measurable_funrM, fails for the moment","date":"2022-03-28T13:25:11Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"f86d5fad100b05e4ac1012fe433af9cba28dc25c","message":"fix `measurable_funrM`","date":"2022-03-29T01:25:09Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"a0948fcdb46c7aad59e42478bb10f76d7228a67c","message":"missing theorems + proof compressions","date":"2022-03-29T13:52:01Z"}]},{"author":"affeldt-aist","number":616,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":156,"deletions":3},{"file":"theories/lebesgue_integral.v","status":"M","additions":156,"deletions":3},{"file":"theories/mathcomp_extra.v","status":"M","additions":156,"deletions":3},{"file":"theories/measure.v","status":"M","additions":156,"deletions":3}],"state":"merged","open_date":"2022-03-28T10:11:59Z","update_date":"2022-05-03T13:49:38Z","discussion":[{"author":"affeldt-aist","date":"2022-04-19T23:42:02Z","comment":"Note that the presentation of the theory of this commit will certainly be changed by https://github.com/math-comp/analysis/pull/646 but not the proof so it is still relevant to review it first."},{"author":"affeldt-aist","date":"2022-04-19T23:42:02Z","comment":"Note that the presentation of the theory of this commit will certainly be changed by https://github.com/math-comp/analysis/pull/646 but not the proof so it is still relevant to review it first."},{"author":"proux01","date":"2022-05-02T16:54:04Z","comment":"BTW, the dirac measure should probably be in `measure.v` rather than `lebesgue_integral.v` (it seems to be just a matter of requiring `numfun` to get `\\1_`)"},{"author":"affeldt-aist","date":"2022-05-03T07:02:50Z","comment":"> LGTM, sorry for those late reviews\r\n\r\nDefinitely no problem. Thank you very much!"},{"author":"proux01","date":"2022-05-03T13:29:34Z","comment":"Updated CHANGELOG, will merge once CI is green."}],"review_discussion":[{"author":"CohenCyril","file":"theories/lebesgue_integral.v","date":"2022-03-29T18:16:24Z","comment":"`dirac` for the function and `dirac_measure` for the measure? (let's try to keep the code `'` free)"},{"author":"proux01","file":"theories/lebesgue_integral.v","date":"2022-05-02T16:20:25Z","comment":"```suggestion\r\nVariables (T : measurableType) (a : T) (R : realFieldType).\r\n\r\nDefinition dirac (A : set T) : \\bar R := (\\1_A a)%:E.\r\n\r\nLet dirac0 : dirac set0 = 0. Proof. by rewrite /dirac indic0. Qed.\r\n\r\nLet dirac_ge0 B : 0 <= dirac B. Proof. by rewrite /dirac indicE. Qed.\r\n```"},{"author":"proux01","file":"theories/lebesgue_integral.v","date":"2022-05-02T16:45:08Z","comment":"indentation\r\n```suggestion\r\nrewrite ge0_integral_sum//; last 2 first.\r\n- move=> r; apply/EFin_measurable_fun.\r\n  apply: measurable_funM => //; first exact: measurable_fun_cst.\r\n  apply: (@measurable_funS _ _ setT) => //.\r\n  by rewrite (_ : \\1_ _ = mindic R (measurable_sfunP (f_ n) r)).\r\n- by move=> r x _; rewrite muleindic_ge0.\r\n```"},{"author":"proux01","file":"theories/lebesgue_integral.v","date":"2022-05-02T16:46:49Z","comment":"Couldn't this be generalized to something like?\r\n```Coq\r\n\\int_ D (f x) 'd (\\d_ a)[x] = (\\1_D a)%:E * f a.\r\n```"},{"author":"affeldt-aist","file":"theories/lebesgue_integral.v","date":"2022-05-03T07:02:17Z","comment":"This is a good idea but it might require lemmas that are part of PR #620.\r\nAllow me to do it as part of PR #620 a bit later."},{"author":"CohenCyril","file":"theories/measure.v","date":"2022-05-03T18:00:06Z","comment":"I'm worried that this notation is bound to `dirac_measure` instead of `dirac`... it looks unstable to me."},{"author":"CohenCyril","file":"theories/measure.v","date":"2022-05-03T18:00:06Z","comment":"I'm worried that this notation is bound to `dirac_measure` instead of `dirac`... it looks unstable to me."},{"author":"affeldt-aist","file":"theories/measure.v","date":"2022-05-03T23:05:23Z","comment":"Indeed. This is an oversight. This will anyway disappear once PR #646 is rebased."}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"proux01","hash":"87efa7adf6456a13d6661c93020e4088d9533f3f","message":"Dirac measure","date":"2022-05-03T13:28:44Z"}]},{"author":"affeldt-aist","number":615,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":383,"deletions":374},{"file":"theories/altreals/distr.v","status":"M","additions":383,"deletions":374},{"file":"theories/altreals/realseq.v","status":"M","additions":383,"deletions":374},{"file":"theories/altreals/realsum.v","status":"M","additions":383,"deletions":374},{"file":"theories/ereal.v","status":"M","additions":383,"deletions":374},{"file":"theories/esum.v","status":"M","additions":383,"deletions":374},{"file":"theories/lebesgue_integral.v","status":"M","additions":383,"deletions":374},{"file":"theories/lebesgue_measure.v","status":"M","additions":383,"deletions":374},{"file":"theories/measure.v","status":"M","additions":383,"deletions":374},{"file":"theories/normedtype.v","status":"M","additions":383,"deletions":374},{"file":"theories/numfun.v","status":"M","additions":383,"deletions":374},{"file":"theories/sequences.v","status":"M","additions":383,"deletions":374},{"file":"theories/set_interval.v","status":"M","additions":383,"deletions":374}],"state":"merged","open_date":"2022-03-28T06:33:08Z","update_date":"2022-04-05T22:30:11Z","discussion":[{"author":"CohenCyril","date":"2022-03-28T21:25:51Z","comment":"> ##### Motivation for this change\r\n> fixes #597\r\n> \r\n> implements this renaming: `addeoo` -> `addepinfty` `addooe` -> `addpinftye`\r\n\r\nI agree they should be changed. But the conventions of mathcomp is that shortsuffixes (one-letter) are to be glued without `_` while long one have to be separted (either by `_` or by `N`, `E` or `P` (capital letters)).\r\n \r\n> other proposal: add_pinfty_e adde_pinfty\r\n\r\nUsually long suffixes are not alternated with a short suffix (or other suffixes) to reflect the order positionally, we use `l` and `r` instead.\r\n\r\nHence... I suggest we make up a new 1-letter suffix for infinity, looking at the letters, I guess only the `y` is unattributed and unambiguous so what about `y` for `infty` and `Ny` for negative infty (either as `-oo` or as `- +oo`, they are convertible anyway).\r\n\r\n@affeldt-aist WDYT?\r\n"},{"author":"affeldt-aist","date":"2022-03-29T03:48:36Z","comment":"I tried the one-letter convention in this commit https://github.com/math-comp/analysis/pull/615/commits/9ee776e55581e9f4e744cd322fdea49a2a50056e.\r\n\r\nThat looks fine to me."},{"author":"CohenCyril","date":"2022-03-31T12:25:37Z","comment":"I am afraid this PR has to be rebased in a non trivial way to take into account new lemmas added by #609"},{"author":"affeldt-aist","date":"2022-03-31T13:58:23Z","comment":"> I am afraid this PR has to be rebased in a non trivial way to take into account new lemmas added by #609\r\n\r\n~~Let me check.~~ It looks ok.\r\n"}],"review_discussion":[{"author":"proux01","file":"CHANGELOG_UNRELEASED.md","date":"2022-03-29T08:16:13Z","comment":"Should we retain the left and right suffix here? (although `r` for right somewhat clashes with `r` for real)\r\n```suggestion\r\n  + `gt0_mulpinfty` -> `gt0_mulyl`\r\n  + `lt0_mulpinfty` -> `lt0_mulyl`\r\n  + `gt0_mulninfty` -> `gt0_mulNyl`\r\n  + `lt0_mulninfty` -> `lt0_mulNyl`\r\n  + `maxe_pinftyl` -> `maxyl`\r\n  + `maxe_pinftyr` -> `maxyr`\r\n  + `maxe_ninftyl` -> `maxNyl`\r\n  + `maxe_ninftyr` -> `maxNyr`\r\n  + `mine_ninftyl` -> `minNyl`\r\n  + `mine_ninftyr` -> `minNyr`\r\n  + `mine_pinftyl` -> `minyl`\r\n  + `mine_pinftyr` -> `minyr`\r\n```"},{"author":"proux01","file":"theories/ereal.v","date":"2022-03-29T08:18:11Z","comment":"Shouldn't the `gt0` be a suffix here? (and same for the three following lemmas)\r\n```suggestion\r\nLemma mulye_gt0 x : (0 < x -> +oo * x = +oo)%E.\r\n```"},{"author":"CohenCyril","file":"CHANGELOG_UNRELEASED.md","date":"2022-03-29T08:24:05Z","comment":"I'd say no, either suffixes are short and positional, or long and with `l` and `r`."},{"author":"CohenCyril","file":"theories/ereal.v","date":"2022-03-29T08:24:51Z","comment":"No, `_gt0` as a suffix means the **conclusion** is of the form `_ > 0`"},{"author":"CohenCyril","file":"theories/ereal.v","date":"2022-03-29T08:31:25Z","comment":"```suggestion\r\nLemma mulNyr r : r \\is Num.real -> -oo * r%:E = (Num.sg r)%:E * -oo.\r\n```\r\nThe suffix `r` already tells the RHS of the `*` is a real."},{"author":"affeldt-aist","file":"theories/ereal.v","date":"2022-03-30T03:07:07Z","comment":"Yet, `mulNyr` already exists:\r\nhttps://github.com/math-comp/analysis/blob/fixes_597/theories/ereal.v#L1352\r\nMaybe this lemma should be `real_mulNyr` instead of `mulNyr_real`?"},{"author":"CohenCyril","file":"theories/ereal.v","date":"2022-03-30T07:56:53Z","comment":"> Maybe this lemma should be `real_mulNyr` instead of `mulNyr_real`?\r\n\r\nindeed"},{"author":"CohenCyril","file":"CHANGELOG_UNRELEASED.md","date":"2022-03-30T16:05:34Z","comment":"```suggestion\r\n  + `mulrinfty_real` -> `real_mulr_infty`\r\n```\r\nSince its a long suffix, we should add an underscore. Same goes for `mulrinfty`"}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"e757b789b4bc6aad4d74e763d29e5eb54027e3dc","message":"fixes #597","date":"2022-03-31T13:57:58Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"fc52de41001e3e284791d39b7c31bb81d2f41552","message":"using a one-letter convention for infty","date":"2022-03-31T14:03:57Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"9b26e61289ca343d408f3cb875b03bdbe116b254","message":"fix naming","date":"2022-03-31T14:15:53Z"}]},{"author":"affeldt-aist","number":614,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":124,"deletions":18},{"file":"theories/ereal.v","status":"M","additions":124,"deletions":18},{"file":"theories/esum.v","status":"M","additions":124,"deletions":18},{"file":"theories/measure.v","status":"M","additions":124,"deletions":18},{"file":"theories/sequences.v","status":"M","additions":124,"deletions":18}],"state":"merged","open_date":"2022-03-28T04:46:30Z","update_date":"2022-04-19T23:53:44Z","discussion":[],"review_discussion":[{"author":"zstone1","file":"theories/sequences.v","date":"2022-04-15T02:52:37Z","comment":"Since `n` is fixed for the whole proof, one could rephrase this with `(f g : nat -> \\bar R)` and `x \\near oo`. Would that make it easier or harder to use?"},{"author":"zstone1","file":"theories/sequences.v","date":"2022-04-15T03:27:39Z","comment":"Do you need `0 <= l`? It took me a minute, see that if `u --> +oo` and `l = -oo` bad things would happen. Could we just do `-oo < l`? "},{"author":"affeldt-aist","file":"theories/sequences.v","date":"2022-04-15T11:20:40Z","comment":"The proofs are small so that it does not make a big difference but at least it makes for a clearer statement and a shorter proof."}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"b0c15046520dcd43a37bb30e1d9fb9d457cc4a69","message":"additions and minor generalizations\n\n- non-negative series interchange\n- lee_lim for nneseries","date":"2022-04-15T14:50:32Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"3cb924fa44c47c2749d64e33957f230def3fe52e","message":"address comments\n\nCo-authored-by: Zachary Stone <zstonex@gmail.com>","date":"2022-04-15T14:50:32Z"}]},{"author":"hoheinzollern","number":611,"diff_summary":[{"file":"theories/esum.v","status":"M","additions":13,"deletions":31},{"file":"theories/lebesgue_measure.v","status":"M","additions":13,"deletions":31}],"state":"merged","open_date":"2022-03-24T10:14:30Z","update_date":"2022-03-29T13:01:02Z","discussion":[{"author":"CohenCyril","date":"2022-03-24T10:25:47Z","comment":"But ... why? It's the `fun x => x ^ n` which is continuous, `f` does not have to be. Use composition. "},{"author":"hoheinzollern","date":"2022-03-24T13:40:37Z","comment":"Ok thanks for the suggestion, this actually fixes that."}],"review_discussion":[{"author":"CohenCyril","file":"theories/lebesgue_measure.v","date":"2022-03-24T15:08:38Z","comment":"This lemma [is already in the library under the name `exp_continuous`](https://github.com/math-comp/analysis/blob/4826a21d6fa4582ee9d19b9aabe5ae8e80929a88/theories/realfun.v#L416-L424) \r\n```suggestion\r\n```"},{"author":"CohenCyril","file":"theories/lebesgue_measure.v","date":"2022-03-24T15:09:26Z","comment":"Please generalize to\r\n```suggestion\r\nLemma measurable_fun_exprn n (f : R -> R) :\r\n  measurable_fun D f -> measurable_fun D (fun x => f x ^+ n).\r\n```"},{"author":"CohenCyril","file":"theories/lebesgue_measure.v","date":"2022-03-28T16:54:38Z","comment":"```suggestion\r\napply: measurable_fun_comp ((@GRing.exp R)^~ n) _ _ _.\r\nby apply: continuous_measurable_fun; apply: exp_continuous.\r\n```"},{"author":"CohenCyril","file":"theories/lebesgue_measure.v","date":"2022-03-28T16:54:49Z","comment":"```suggestion\r\nProof. exact: measurable_fun_exprn. Qed.\r\n```"}],"tags":[],"commits":[{"author":"hoheinzollern","committer":"hoheinzollern","hash":"081f5c52bba325f307103229d5b50a332df263e9","message":"measurable_fun_mulrn","date":"2022-03-28T12:26:54Z"},{"author":"hoheinzollern","committer":"hoheinzollern","hash":"4d04a8a88706c8dfcbf1bccf364e4735f2595c3e","message":"Lemma measurable_fun_exprn, changed to use continuous implies measurable","date":"2022-03-28T12:26:54Z"},{"author":"hoheinzollern","committer":"hoheinzollern","hash":"8bd04ceb266f08c082295472b270ddb5daceeb0e","message":"measurable_fun_exprn removes assumption on f continuous\nnew lemma continuous_exprn","date":"2022-03-28T12:26:54Z"},{"author":"hoheinzollern","committer":"hoheinzollern","hash":"3a701cd51635c3ac8388c8c3e33eb4d606441d6f","message":"Generalize type of `measurable_fun_exprn`","date":"2022-03-28T12:26:54Z"},{"author":"hoheinzollern","committer":"hoheinzollern","hash":"38a7e4643c74192353807e6551269715d164df40","message":"Simplify `measurable_fun_sqr`","date":"2022-03-28T12:26:54Z"},{"author":"hoheinzollern","committer":"hoheinzollern","hash":"cddc27890f1190de03f91ed623fb891cb9b63cd2","message":"Update theories/lebesgue_measure.v\n\nCo-authored-by: Cyril Cohen <CohenCyril@users.noreply.github.com>","date":"2022-03-28T12:28:27Z"},{"author":"CohenCyril","committer":"hoheinzollern","hash":"94c65d2eddaf8916d89807baa80e8c3adfa42a6d","message":"fixing a weird universe error","date":"2022-03-28T12:29:25Z"},{"author":"hoheinzollern","committer":"hoheinzollern","hash":"82dd764e9eb233fabfb58559f795649d14e00d99","message":"using exp_continuous","date":"2022-03-28T12:33:06Z"},{"author":"hoheinzollern","committer":"web-flow","hash":"0074b6289ad8c850963a85c84ccb58ccd298222c","message":"Update theories/lebesgue_measure.v\n\nCo-authored-by: Cyril Cohen <CohenCyril@users.noreply.github.com>","date":"2022-03-29T04:31:08Z"},{"author":"hoheinzollern","committer":"web-flow","hash":"05ea8078c7318649580e061ee9a886745140e941","message":"Update theories/lebesgue_measure.v\n\nCo-authored-by: Cyril Cohen <CohenCyril@users.noreply.github.com>","date":"2022-03-29T04:32:01Z"}]},{"author":"affeldt-aist","number":610,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":7,"deletions":5},{"file":"theories/esum.v","status":"M","additions":7,"deletions":5}],"state":"merged","open_date":"2022-03-24T09:43:32Z","update_date":"2022-03-25T12:48:02Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"863d979ce11ad43aec000e3acdf8c30d21edc790","message":"simplify statements","date":"2022-03-24T09:42:04Z"}]},{"author":"affeldt-aist","number":609,"diff_summary":[{"file":".github/workflows/docker-action.yml","status":"M","additions":128,"deletions":10},{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":128,"deletions":10},{"file":"theories/classical_sets.v","status":"M","additions":128,"deletions":10},{"file":"theories/ereal.v","status":"M","additions":128,"deletions":10},{"file":"theories/esum.v","status":"M","additions":128,"deletions":10}],"state":"merged","open_date":"2022-03-23T12:43:56Z","update_date":"2022-03-31T09:46:16Z","discussion":[{"author":"proux01","date":"2022-03-28T08:59:40Z","comment":"@gares ever seen those errors https://github.com/math-comp/analysis/runs/5714400270?check_suite_focus=true\r\nwhen installing elpi.1.14.3 that uses camlp5.8.00.03?"},{"author":"gares","date":"2022-03-28T09:46:35Z","comment":"Yes. If you have opam 2.1 then it should just work, otherwise one should run `opam depext camlp5` at some point in the run.\r\nThis was the star that broke the camel's back: https://github.com/LPCIC/elpi/pull/130"},{"author":"proux01","date":"2022-03-28T09:56:11Z","comment":"Thanks, @erikmd do you know how we could do that with the Docker images?"},{"author":"gares","date":"2022-03-28T14:23:13Z","comment":"Maybe [before_script](https://github.com/coq-community/docker-coq-action#before_script) [sorry, before_install]"},{"author":"proux01","date":"2022-03-28T16:03:52Z","comment":"That works thanks."},{"author":"proux01","date":"2022-03-29T10:31:54Z","comment":"@affeldt-aist your last for-push looks like a regression?"},{"author":"affeldt-aist","date":"2022-03-29T11:12:57Z","comment":"> @affeldt-aist your last for-push looks like a regression?\r\n\r\nAh, indeed I can  spot at least one change that has resurfaced..."},{"author":"proux01","date":"2022-03-31T08:58:57Z","comment":"I'll merge once squashed (and CI green)."},{"author":"affeldt-aist","date":"2022-03-31T09:22:49Z","comment":"> I'll merge once squashed (and CI green).\r\n\r\nYou'd prefer me to squash first rather than using the \"squash and merge\" github button?"},{"author":"proux01","date":"2022-03-31T09:45:18Z","comment":"Never used that button, let me try."}],"review_discussion":[{"author":"proux01","file":"theories/ereal.v","date":"2022-03-24T12:49:02Z","comment":"We should have the dual version."},{"author":"proux01","file":"theories/ereal.v","date":"2022-03-24T12:51:01Z","comment":"```suggestion\r\nNotation \"x ^+ n\" := (expe x%dE n) : ereal_dual_scope.\r\nNotation \"x ^+ n\" := (expe x n) : ereal_scope.\r\nNotation \"x *+ n\" := (ednatmul x%dE n) : ereal_dual_scope.\r\nNotation \"x *+ n\" := (enatmul x n) : ereal_scope.\r\n```"},{"author":"proux01","file":"theories/ereal.v","date":"2022-03-28T07:59:53Z","comment":"```suggestion\r\n```"},{"author":"proux01","file":"CHANGELOG_UNRELEASED.md","date":"2022-03-28T08:03:20Z","comment":"```suggestion\r\n  + definition `expe` with notation `^+`\r\n  + definition `enatmul` with notation `*+` (scope `%E`)\r\n  + definition `ednatmul` with notation `*+` (scope `%dE`)\r\n```"},{"author":"proux01","file":"theories/ereal.v","date":"2022-03-28T08:05:28Z","comment":"Maybe\r\n```suggestion\r\nLemma EFin_natmul (r : R) n : (r *+ n.+1)%:E = r%:E *+ n.+1.\r\n```"},{"author":"proux01","file":"theories/ereal.v","date":"2022-03-28T08:17:25Z","comment":"```suggestion\r\nLemma oppeB x y : y \\is a fin_num -> - (x - y) = - x + y.\r\nProof. by move=> yfin; rewrite oppeD ?oppeK// fin_numN. Qed.\r\n\r\nLemma doppeB x y : y \\is a fin_num → - (x - y) = - x + y.\r\nProof. by move⇒ yfin; rewrite doppeD ?oppeK// fin_numN. Qed.\r\n```\r\n(to put just before `dfin_numD`)"},{"author":"proux01","file":"theories/ereal.v","date":"2022-03-28T08:18:34Z","comment":"```suggestion\r\nLemma dfineB : {in @fin_num R &, {morph fine : x y / x - y ↣ (x - y)%R}}.\r\nProof. by move⇒ [r| |] [s| |]. Qed.\r\n\r\nLemma fineB : {in @fin_num R &, {morph fine : x y / x - y >-> (x - y)%R}}.\r\n```\r\n(to put just after `dfineD`)"},{"author":"proux01","file":"CHANGELOG_UNRELEASED.md","date":"2022-03-28T08:19:05Z","comment":"```suggestion\r\n  + lemmas `oppeB`, `fineB`, `doppeB`, `dfineB`\r\n```"},{"author":"proux01","file":"theories/ereal.v","date":"2022-03-28T08:51:51Z","comment":"```suggestion\r\nLemma ednatmulE x n : x *+ n = (x *+ n)%E.\r\nProof.\r\ncase: x ⇒ [x‖]; case: n ⇒ [//|n].\r\n- by rewrite -EFin_enatmul -EFin_ednatmul.\r\n- by rewrite enatmul_pinfty ednatmul_pinfty.\r\n- by rewrite enatmul_ninfty ednatmul_ninfty.\r\nQed.\r\n\r\nLemma dmule_natl x n : n%:R%:E * x = x *+ n.\r\nProof. by rewrite mule_natl ednatmulE. Qed.\r\n\r\n```\r\n(`ednatmulE` should be placed after `EFin_ednatmul`)"},{"author":"proux01","file":"CHANGELOG_UNRELEASED.md","date":"2022-03-28T08:52:25Z","comment":"```suggestion\r\n  + lemmas `ednatmul_pinfty`, `ednatmul_ninfty`, `EFin_ednatmul`, `ednatmulE`, `dmule2n`, `dmule_natl`\r\n```"},{"author":"proux01","file":"theories/ereal.v","date":"2022-03-29T12:53:01Z","comment":"Don't we also want\r\n```Coq\r\nLemma fin_num_sum (T : Type) (s : seq T) (P : pred T) (f : T -> \\bar R) :\r\n  \\sum_(i <- s | P i) f i \\is a fin_num <-> forall i, P i -> f i \\is a fin_num.\r\n```\r\nand the current `fin_num_sum` would be `fin_num_sum_in`?\r\n"},{"author":"affeldt-aist","file":"theories/ereal.v","date":"2022-03-30T04:11:50Z","comment":"maybe not exactly this statement because of the case s = nil?"},{"author":"proux01","file":"theories/ereal.v","date":"2022-03-30T06:46:29Z","comment":"Indeed, that doesn't hold, maybe something like\r\n```Coq\r\nLemma fin_num_sum (T : Type) (s : seq T) (P : pred T) (f : T -> \\bar R) :\r\n  \\sum_(i <- s | P i) f i \\is a fin_num = all fin_num [seq f i | i <- s & P i].\r\n```\r\nand\r\n```Coq\r\nLemma fin_num_sumP (T : eqType) (s : seq T) (P : pred T) (f : T -> \\bar R) :\r\n  \\sum_(i <- s | P i) f i \\is a fin_num <->\r\n  forall i, i \\in s -> P i -> f i \\is a fin_num.\r\n```"},{"author":"CohenCyril","file":"theories/esum.v","date":"2022-03-30T10:57:43Z","comment":"Why `0 <= a t` ?"},{"author":"proux01","file":"theories/esum.v","date":"2022-03-30T11:02:00Z","comment":"Because otherwise, the `\\esum` is `0`."},{"author":"CohenCyril","file":"theories/ereal.v","date":"2022-03-30T12:07:43Z","comment":"```suggestion\r\nby rewrite -big_all big_map big_filter; apply: (big_morph _ fin_numD).\r\n```\r\n"},{"author":"CohenCyril","file":"theories/ereal.v","date":"2022-03-30T12:08:00Z","comment":"Shouldn't it be `sum_fin_num`?"},{"author":"CohenCyril","file":"theories/ereal.v","date":"2022-03-30T16:35:18Z","comment":"Also, this should be a reflect\r\n```suggestion\r\nLemma fin_num_sumP (T : eqType) (s : seq T) (P : pred T) (f : T -> \\bar R) :\r\n  reflect (forall i, i \\in s -> P i -> f i \\is a fin_num)\r\n          (\\sum_(i <- s | P i) f i \\is a fin_num).\r\nProof.\r\nrewrite fin_num_sum; apply: (iffP allP) => /=.\r\n  by move=> + x xs Px; apply; rewrite map_f// mem_filter Px.\r\nby move=> + _ /mapP[x /[!mem_filter]/andP[Px xs] ->]; apply.\r\nQed.\r\n```\r\n"},{"author":"proux01","file":"theories/ereal.v","date":"2022-03-31T08:25:41Z","comment":"Nitpicking: is there a good reason to prefer `\\in fin_num` over `\\is a fin_num`?"},{"author":"proux01","file":"theories/ereal.v","date":"2022-03-31T08:26:45Z","comment":"Should we add (at the bottom of this header?) a note that the `y` and `Ny` suffix stand for `+oo` and `-oo`?"},{"author":"affeldt-aist","file":"theories/ereal.v","date":"2022-03-31T08:41:06Z","comment":"Definitely. (I thought I had written that, it was maybe lost by my careless force-push.)"},{"author":"affeldt-aist","file":"theories/ereal.v","date":"2022-03-31T08:50:33Z","comment":"No. It is rather a typo."}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"5dfb91ac4011cde60d84deead75f9c3fb8b404d7","message":"a few basic lemmas about ereal\n\nCo-authored-by: Pierre Roux <pierre@roux01.fr>","date":"2022-03-29T11:20:33Z"},{"author":"proux01","committer":"affeldt-aist","hash":"62787b3e7d2aa5e58f440cd89afaeb0a1ede994f","message":"Try to please CI","date":"2022-03-29T11:20:33Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"244cae3487ef7bc56718d7aaa7a34a127d5118d1","message":"fin_num_sum","date":"2022-03-29T11:20:33Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"0c1e44f339670c18052062ac007b819ccdacf5b1","message":"generalization\n\nCo-authored-by: Pierre Roux <pierre@roux01.fr>","date":"2022-03-30T09:48:54Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"1030f96decec726eeac17db182643913b07e2108","message":"shorter proofs, naming\n\nCo-authored-by: Cyril Cohen <cohen@crans.org>","date":"2022-03-31T03:42:44Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"bfaed4729b217a2d5226f2aed3f4a0780f9edb06","message":"about naming convention","date":"2022-03-31T08:47:07Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"3e48be4ebce21052953e2d72057ce9e86d9c7edd","message":"typo","date":"2022-03-31T08:50:44Z"}]},{"author":"proux01","number":608,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":6,"deletions":2},{"file":"theories/ereal.v","status":"M","additions":6,"deletions":2}],"state":"merged","open_date":"2022-03-23T10:18:01Z","update_date":"2022-03-28T04:05:45Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"proux01","committer":"proux01","hash":"28beed03a12f26855ddc5420fb6a3c8b4d09aa02","message":"Rename num_abs_{lt,le} lemmas to num_abse_{lt,le}\n\nThere were homonym lemmas in signed.v.","date":"2022-03-23T10:23:11Z"}]},{"author":"affeldt-aist","number":606,"diff_summary":[{"file":"CHANGELOG.md","status":"M","additions":63,"deletions":53},{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":63,"deletions":53},{"file":"INSTALL.md","status":"M","additions":63,"deletions":53}],"state":"merged","open_date":"2022-03-23T04:55:51Z","update_date":"2022-03-23T05:12:16Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"2451de0f9a0bce953228d0fbd44d939cd861b0ab","message":"changelog for version 0.5.0","date":"2022-03-23T04:54:43Z"}]},{"author":"affeldt-aist","number":605,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":102,"deletions":113},{"file":"theories/derive.v","status":"M","additions":102,"deletions":113},{"file":"theories/ereal.v","status":"M","additions":102,"deletions":113},{"file":"theories/esum.v","status":"M","additions":102,"deletions":113},{"file":"theories/exp.v","status":"M","additions":102,"deletions":113},{"file":"theories/landau.v","status":"M","additions":102,"deletions":113},{"file":"theories/lebesgue_integral.v","status":"M","additions":102,"deletions":113},{"file":"theories/lebesgue_measure.v","status":"M","additions":102,"deletions":113},{"file":"theories/mathcomp_extra.v","status":"M","additions":102,"deletions":113},{"file":"theories/measure.v","status":"M","additions":102,"deletions":113},{"file":"theories/normedtype.v","status":"M","additions":102,"deletions":113},{"file":"theories/reals.v","status":"M","additions":102,"deletions":113},{"file":"theories/sequences.v","status":"M","additions":102,"deletions":113},{"file":"theories/trigo.v","status":"M","additions":102,"deletions":113}],"state":"merged","open_date":"2022-03-21T03:21:20Z","update_date":"2022-03-21T10:05:39Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"db4b43287a78312984663cf7e9e3a76d56941e89","message":"fixes #604","date":"2022-03-21T03:19:47Z"}]},{"author":"affeldt-aist","number":603,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":8,"deletions":15},{"file":"theories/fsbigop.v","status":"M","additions":8,"deletions":15},{"file":"theories/topology.v","status":"M","additions":8,"deletions":15}],"state":"merged","open_date":"2022-03-19T10:09:42Z","update_date":"2022-03-22T14:20:40Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"e2f3209fdc71ec75a47917d04b53ee032b19b27b","message":"rm useless code","date":"2022-03-22T13:55:55Z"}]},{"author":"proux01","number":601,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"D","additions":45,"deletions":120},{"file":"_CoqProject","status":"D","additions":45,"deletions":120},{"file":"theories/Rstruct.v","status":"D","additions":45,"deletions":120},{"file":"theories/derive.v","status":"D","additions":45,"deletions":120},{"file":"theories/ereal.v","status":"D","additions":45,"deletions":120},{"file":"theories/esum.v","status":"D","additions":45,"deletions":120},{"file":"theories/exp.v","status":"D","additions":45,"deletions":120},{"file":"theories/fsbigop.v","status":"D","additions":45,"deletions":120},{"file":"theories/landau.v","status":"D","additions":45,"deletions":120},{"file":"theories/lebesgue_integral.v","status":"D","additions":45,"deletions":120},{"file":"theories/lebesgue_measure.v","status":"D","additions":45,"deletions":120},{"file":"theories/measure.v","status":"D","additions":45,"deletions":120},{"file":"theories/nngnum.v","status":"D","additions":45,"deletions":120},{"file":"theories/normedtype.v","status":"D","additions":45,"deletions":120},{"file":"theories/numfun.v","status":"D","additions":45,"deletions":120},{"file":"theories/posnum.v","status":"D","additions":45,"deletions":120},{"file":"theories/prodnormedzmodule.v","status":"D","additions":45,"deletions":120},{"file":"theories/realfun.v","status":"D","additions":45,"deletions":120},{"file":"theories/sequences.v","status":"D","additions":45,"deletions":120},{"file":"theories/set_interval.v","status":"D","additions":45,"deletions":120},{"file":"theories/signed.v","status":"D","additions":45,"deletions":120},{"file":"theories/summability.v","status":"D","additions":45,"deletions":120},{"file":"theories/topology.v","status":"D","additions":45,"deletions":120},{"file":"theories/trigo.v","status":"D","additions":45,"deletions":120}],"state":"merged","open_date":"2022-03-18T16:11:51Z","update_date":"2022-03-22T13:54:18Z","discussion":[{"author":"affeldt-aist","date":"2022-03-22T13:41:44Z","comment":"It looks like the same CI error as https://github.com/math-comp/analysis/pull/595."},{"author":"proux01","date":"2022-03-22T13:52:29Z","comment":"Yes looks like an issue with Docker images, elpi.1.14.1 builds fine on Docker image `mathcomp/mathcomp-dev:coq-dev` but fails on `mathcomp/mathcomp:1.14.0-coq-dev` (appart from mathcomp, all other packages seem to be the same).\r\n\r\nPinging @erikmd in case you have an idea\r\n\r\nAnyway, we probably shouldn't consider this blocking here."},{"author":"CohenCyril","date":"2022-03-22T14:20:55Z","comment":"Oh you merged this before I managed to express my opinion... This is a cause for a minor version bump...\r\n(We removed files!)"},{"author":"affeldt-aist","date":"2022-03-22T14:22:18Z","comment":"You mean that it justifies jumping to 0.5?"},{"author":"proux01","date":"2022-03-22T14:24:57Z","comment":"That's fundamentally right but analysis is still 0.something and there are a few breaking changes almost at every release anyway."},{"author":"affeldt-aist","date":"2022-03-22T14:26:47Z","comment":"I indeed merged in this perspective, I was rather expecting the split with mathcomp-classical to be 0.5..."}],"review_discussion":[{"author":"affeldt-aist","file":"theories/normedtype.v","date":"2022-03-22T13:15:49Z","comment":"```suggestion\r\n```"}],"tags":[],"commits":[{"author":"proux01","committer":"proux01","hash":"e9087053d317867147243c0fbf4759bb6edd5288","message":"Remove posnum and nngnum\n\nThey are subsumed by signed","date":"2022-03-22T13:26:36Z"}]},{"author":"proux01","number":600,"diff_summary":[{"file":".github/workflows/docker-action.yml","status":"A","additions":1596,"deletions":1163},{"file":".github/workflows/nix-action-8.14.yml","status":"A","additions":1596,"deletions":1163},{"file":".github/workflows/nix-action-8.15.yml","status":"A","additions":1596,"deletions":1163},{"file":".github/workflows/nix-action-8.16.yml","status":"A","additions":1596,"deletions":1163},{"file":".github/workflows/nix-action-master.yml","status":"A","additions":1596,"deletions":1163},{"file":".nix/config.nix","status":"A","additions":1596,"deletions":1163},{"file":".nix/coq-nix-toolbox.nix","status":"A","additions":1596,"deletions":1163},{"file":".nix/coq-overlays/mathcomp-analysis-single/default.nix","status":"A","additions":1596,"deletions":1163},{"file":"CHANGELOG_UNRELEASED.md","status":"A","additions":1596,"deletions":1163},{"file":"_CoqProject","status":"A","additions":1596,"deletions":1163},{"file":"classical/Make","status":"A","additions":1596,"deletions":1163},{"file":"classical/Makefile","status":"A","additions":1596,"deletions":1163},{"file":"classical/all_classical.v","status":"A","additions":1596,"deletions":1163},{"file":"theories/boolp.v","status":"A","additions":1596,"deletions":1163},{"file":"theories/cardinality.v","status":"A","additions":1596,"deletions":1163},{"file":"theories/classical_sets.v","status":"A","additions":1596,"deletions":1163},{"file":"theories/fsbigop.v","status":"A","additions":1596,"deletions":1163},{"file":"theories/functions.v","status":"A","additions":1596,"deletions":1163},{"file":"classical/mathcomp_extra.v","status":"A","additions":1596,"deletions":1163},{"file":"classical/set_interval.v","status":"A","additions":1596,"deletions":1163},{"file":"coq-mathcomp-analysis.opam","status":"A","additions":1596,"deletions":1163},{"file":"coq-mathcomp-classical.opam","status":"A","additions":1596,"deletions":1163},{"file":"meta.yml","status":"A","additions":1596,"deletions":1163},{"file":"theories/Make","status":"A","additions":1596,"deletions":1163},{"file":"theories/Makefile","status":"A","additions":1596,"deletions":1163},{"file":"theories/Rstruct.v","status":"A","additions":1596,"deletions":1163},{"file":"theories/altreals/discrete.v","status":"A","additions":1596,"deletions":1163},{"file":"theories/altreals/distr.v","status":"A","additions":1596,"deletions":1163},{"file":"theories/altreals/realseq.v","status":"A","additions":1596,"deletions":1163},{"file":"theories/altreals/realsum.v","status":"A","additions":1596,"deletions":1163},{"file":"theories/constructive_ereal.v","status":"A","additions":1596,"deletions":1163},{"file":"theories/derive.v","status":"A","additions":1596,"deletions":1163},{"file":"theories/ereal.v","status":"A","additions":1596,"deletions":1163},{"file":"theories/esum.v","status":"A","additions":1596,"deletions":1163},{"file":"theories/exp.v","status":"A","additions":1596,"deletions":1163},{"file":"theories/landau.v","status":"A","additions":1596,"deletions":1163},{"file":"theories/lebesgue_integral.v","status":"A","additions":1596,"deletions":1163},{"file":"theories/lebesgue_measure.v","status":"A","additions":1596,"deletions":1163},{"file":"theories/mathcomp_extra.v","status":"A","additions":1596,"deletions":1163},{"file":"theories/measure.v","status":"A","additions":1596,"deletions":1163},{"file":"theories/normedtype.v","status":"A","additions":1596,"deletions":1163},{"file":"theories/nsatz_realtype.v","status":"A","additions":1596,"deletions":1163},{"file":"theories/numfun.v","status":"A","additions":1596,"deletions":1163},{"file":"theories/realfun.v","status":"A","additions":1596,"deletions":1163},{"file":"theories/reals.v","status":"A","additions":1596,"deletions":1163},{"file":"theories/sequences.v","status":"A","additions":1596,"deletions":1163},{"file":"theories/set_interval.v","status":"A","additions":1596,"deletions":1163},{"file":"theories/signed.v","status":"A","additions":1596,"deletions":1163},{"file":"theories/summability.v","status":"A","additions":1596,"deletions":1163},{"file":"theories/topology.v","status":"A","additions":1596,"deletions":1163},{"file":"theories/trigo.v","status":"A","additions":1596,"deletions":1163}],"state":"merged","open_date":"2022-03-18T14:31:26Z","update_date":"2022-10-12T12:35:19Z","discussion":[{"author":"affeldt-aist","date":"2022-03-21T02:43:43Z","comment":"> we may also consider adding functions and signed there.\r\n\r\nI would maybe refrain to do so for now because we didn't have (yet?) explicit requests for them and `functions.v` requires more dependencies and this has consequences on compilation time. \r\n"},{"author":"CohenCyril","date":"2022-03-21T10:02:51Z","comment":"Actually, I would rather draw the line now, and dispatch to the new package anything that does not strictly pertain to topology/calculus/analysis, rather than adjust later and cause further changes in the dependencies of client packages."},{"author":"proux01","date":"2022-03-21T15:53:38Z","comment":"@CohenCyril  done. We thus have in classical:\r\n* boolp.v\r\n* classical_sets.v\r\n* cardinality.v\r\n* ereal.v\r\n* forms.v\r\n* fsbigop.v\r\n* functions.v\r\n* mathcomp_extra.v\r\n* nngnum.v\r\n* nsatz_realtype.v\r\n* posnum.v\r\n* prodnormedzmodule.v\r\n* reals.v\r\n* Rstruct.v\r\n* signed.v\r\n* all_classical.v\r\n\r\nand in main package:\r\n* landau.v\r\n* Rstruct.v\r\n* topology.v\r\n* normedtype.v\r\n* realfun.v\r\n* sequences.v\r\n* exp.v\r\n* trigo.v\r\n* esum.v\r\n* set_interval.v\r\n* lebesgue_measure.v\r\n* derive.v\r\n* measure.v\r\n* numfun.v\r\n* lebesgue_integral.v\r\n* summability.v\r\n* altreals/xfinmap.v\r\n* altreals/discrete.v\r\n* altreals/realseq.v\r\n* altreals/realsum.v\r\n* altreals/distr.v\r\n\r\n@affeldt-aist points are valid though:\r\n* compilation time of classical here is around 2min40s whereas boolp and classical alone only take 10s (however, that compilation time is comparable to mathcomp-algebra which is a dependency anyway, so that's probably acceptable)\r\n* this adds HB as a dependency (which will be a dependency of MC 2.0 but whose OPAM package takes some time to compile (maybe because it runs tests by default))\r\n"},{"author":"affeldt-aist","date":"2022-03-21T15:58:12Z","comment":"what about the near tactic?"},{"author":"proux01","date":"2022-03-21T16:06:43Z","comment":"It is in topology.v and seem very related to topology IINM."},{"author":"affeldt-aist","date":"2022-03-21T16:10:05Z","comment":"i think that at some point it was scheduled to replace bigenough"},{"author":"CohenCyril","date":"2022-03-22T18:53:12Z","comment":"> i think that at some point it was scheduled to replace bigenough\r\n\r\nit is, actually near is neither analysis nor classical :smile: "},{"author":"proux01","date":"2022-03-23T10:39:51Z","comment":"@affeldt-aist has a good point that mathcomp-classical may, in the current state of the PR, be larger than what @strub initially requested.\r\n\r\nWhat about cutting it in three instead?\r\n* mathcomp-classical: with boolp and classical_sets, only requiring mathcomp-ssreflect\r\n* mathcomp-reals: everything else not strictly pertaining to topology/calculus/analysis, requiring mathcomp-algebra and HB\r\n* mathcomp-analysis: topology/calculus/analysis"},{"author":"CohenCyril","date":"2022-03-23T18:04:09Z","comment":"> What about cutting it in three instead?\r\n> \r\n> * mathcomp-classical: with boolp and classical_sets, only requiring mathcomp-ssreflect\r\n> * mathcomp-reals: everything else not strictly pertaining to topology/calculus/analysis, requiring mathcomp-algebra and HB\r\n> * mathcomp-analysis: topology/calculus/analysis\r\n\r\nI disagree with this. I have no objection to merge reals and analysis, but I believe that:\r\n- `boolp.v`\r\n- `classical_sets.v`\r\n- `cardinality.v`\r\n- `fsbigop.v`\r\n- `functions.v` (not in mathcomp just because of HB + a light separation between the constructive and classical part should be done)\r\nbelong to classical.\r\n\r\nOn the other hand `forms.v` (PR in progress for a while) and `mathcomp_extra.v` (easy stuff) have to be merged in mathcomp.\r\nAlso `nngnum.v`, `posnum.v` and `signed.v` do belong to mathcomp too.\r\n\r\nEDIT:\r\nFinally, the `near` tactics do not belong to analysis nor do they belong to classical... and should thus be extracted from the repo...\r\n\r\n> @affeldt-aist has a good point that mathcomp-classical may, in the current state of the PR, be larger than what @strub initially requested.\r\n\r\nThe only reason not to make it bigger is to avoid delay. I advocate to be finer than lazy (in a CS way not a judgmental way)"},{"author":"CohenCyril","date":"2022-03-23T18:07:23Z","comment":"We should discuss this at the next mc analysis meeting"},{"author":"proux01","date":"2022-04-15T09:06:00Z","comment":"So, here is a classical package with only\r\n* `boolp.v`\r\n* `classical_sets.v`\r\n* `cardinality.v`\r\n* `fsbigop.v`\r\n* `functions.v`\r\n* the part of `set_interval.v` that doesn't depend on reals or ereal\r\n\r\nThe classical package depends on HB (because of functions) but I think it's fine as MC 2.0 will depend on it anyway.\r\n\r\nReals and ereal should probably go in another separate package but I think this belongs to a further PR.\r\nBTW, ereal should maybe be split between its classic and non classic part."},{"author":"CohenCyril","date":"2022-07-07T13:00:17Z","comment":"Sorry for the delay. This looks nice. We also need to take care of the nix packages when we do this."},{"author":"proux01","date":"2022-07-12T12:32:57Z","comment":"Rebased (hope will manage to merge this \"soon\", because those rebases are rather painful)"},{"author":"affeldt-aist","date":"2022-07-12T23:39:46Z","comment":"> Rebased (hope will manage to merge this \"soon\", because those rebases are rather painful)\r\n\r\nAgreed. We can maybe merge the easy PRs in the pipeline that touch the relevant files and then make this PR the top priority, so that it can be merged by the next meeting."},{"author":"proux01","date":"2022-08-03T09:23:12Z","comment":"CI green, this requires:\r\n* for Nix: https://github.com/NixOS/nixpkgs/pull/184961 on nixpkgs, then https://github.com/coq-community/coq-nix-toolbox/pull/117 on coq-nix-toolbox (we could then update coq-nix-toolbox here and remove the overlays)\r\n* for OPAM: a PR on extra-dev"},{"author":"CohenCyril","date":"2022-09-26T14:17:56Z","comment":"Hi @proux01 the overlays should be unnecessary (since you merged the nixpkgs pr), however this made me noticed that a `mathcomp-analysis-single` package would be convenient for dev and CI purposes (as in https://github.com/NixOS/nixpkgs/blob/2a48d5921115733b840e651b843a3c7c515db582/pkgs/development/coq-modules/mathcomp/default.nix#L54).\r\nI'm sorry this is undocumented. The purpose of this package is to be able to build everything in a single `make`"},{"author":"proux01","date":"2022-09-27T10:47:14Z","comment":"> Hi @proux01 the overlays should be unnecessary (since you merged the nixpkgs pr)\r\n\r\n@CohenCyril right, removed. Ci is as green as expected (there is still this master failure with this strange dependency to real-closed that we should fix, but that's orthogonal to the current PR).\r\n\r\n> however this made me noticed that a `mathcomp-analysis-single` package would be convenient for dev and CI purposes (as in https://github.com/NixOS/nixpkgs/blob/2a48d5921115733b840e651b843a3c7c515db582/pkgs/development/coq-modules/mathcomp/default.nix#L54). I'm sorry this is undocumented. The purpose of this package is to be able to build everything in a single `make`\r\n\r\nDone there: https://github.com/NixOS/nixpkgs/pull/193162 (and successfully tested on the coq-nix-toolbox there: https://github.com/coq-community/coq-nix-toolbox/pull/122)\r\n\r\nI'll do the OPAM packages in extra-dev once this is merged"},{"author":"proux01","date":"2022-09-28T16:09:28Z","comment":"@CohenCyril Nix CI green (the Docker CI failure seems unrelated and is likely due to this: https://github.com/math-comp/math-comp/pull/924)\r\nSo I think the current PR can be merged (I'll then update the extra-dev OPAM packages)."},{"author":"proux01","date":"2022-10-12T12:24:02Z","comment":"@CohenCyril CI \"green\" (the Docker failures are exepected due to the exhaustion of gitlab credits), including the `mathcomp-analysis-single` package."},{"author":"CohenCyril","date":"2022-10-12T12:35:40Z","comment":"Fantastique !"},{"author":"gares","date":"2022-10-12T12:52:13Z","comment":"Classy ;-)"},{"author":"proux01","date":"2022-10-12T14:40:08Z","comment":"OPAM package done, we should be all set."}],"review_discussion":[],"tags":[],"commits":[{"author":"proux01","committer":"proux01","hash":"4c99a7f5b0fdf51d367974127f2b9dd60f6bdbb4","message":"Put boolp in a separate classical OPAM package","date":"2022-10-11T13:05:49Z"},{"author":"proux01","committer":"proux01","hash":"3185f4fa4844d71f8cebae629aa94a2cedb581e7","message":"Move classical_sets to classical","date":"2022-10-11T13:13:04Z"},{"author":"proux01","committer":"proux01","hash":"65590e1774d5029a7e9ad18ade04844d635a90b9","message":"Move functions to classical","date":"2022-10-11T13:13:23Z"},{"author":"proux01","committer":"proux01","hash":"e2b2c52cafea27a8a4ceb90be1713d6c42e95696","message":"Move cardinality to classical","date":"2022-10-11T13:13:25Z"},{"author":"proux01","committer":"proux01","hash":"119c527aca90e7f144675d0ad6eee326a7872363","message":"Move fsbigop to classical","date":"2022-10-11T13:13:25Z"},{"author":"proux01","committer":"proux01","hash":"1f17cf68ed0bd4ee57239af54f0b2266de6a91d0","message":"Move part of set_interval to classical\n\nEverything not dealing with reals or ereal is moved to classicel,\nthe remaining is left in analysis.","date":"2022-10-11T13:13:25Z"},{"author":"proux01","committer":"proux01","hash":"1bd04c65d302d89d7032d630819d9200614d8a17","message":"Update Nix CI","date":"2022-10-12T11:47:24Z"},{"author":"proux01","committer":"proux01","hash":"9de04e3b1435647c5ed675337fb3c5675686f8c7","message":"Don't require camlp5","date":"2022-10-12T11:52:09Z"}]},{"author":"proux01","number":599,"diff_summary":[{"file":"theories/topology.v","status":"M","additions":4,"deletions":1}],"state":"merged","open_date":"2022-03-16T13:50:57Z","update_date":"2022-03-22T09:02:46Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"proux01","committer":"proux01","hash":"8286f085fefc542b6422a7b2d3ceecbea4762d35","message":"Adapt to coq/coq#15802","date":"2022-03-21T12:17:01Z"}]},{"author":"affeldt-aist","number":598,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":234,"deletions":36},{"file":"theories/cardinality.v","status":"M","additions":234,"deletions":36},{"file":"theories/lebesgue_integral.v","status":"M","additions":234,"deletions":36},{"file":"theories/measure.v","status":"M","additions":234,"deletions":36},{"file":"theories/sequences.v","status":"M","additions":234,"deletions":36},{"file":"theories/topology.v","status":"M","additions":234,"deletions":36}],"state":"merged","open_date":"2022-03-15T11:38:29Z","update_date":"2022-07-02T18:15:59Z","discussion":[{"author":"affeldt-aist","date":"2022-06-22T16:53:01Z","comment":"ping @CohenCyril @t6s "}],"review_discussion":[{"author":"t6s","file":"theories/cardinality.v","date":"2022-06-04T03:49:32Z","comment":"Why not if and only if?"},{"author":"affeldt-aist","file":"theories/cardinality.v","date":"2022-06-23T03:01:10Z","comment":"Nothing is lost by making it an equality, so let's do it."}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"ebf9d9f6dec3f53d17385ab282aa9c5cb52871f7","message":"counting measure","date":"2022-07-02T16:31:13Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"8baa461653a06a63582e25f5d093e30e7b028f3a","message":"make fset_set_sub an equality","date":"2022-07-02T16:31:15Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"4fb3087f3892c3e81fbc99a78770c6195632c5e6","message":"fix","date":"2022-07-02T17:45:57Z"}]},{"author":"affeldt-aist","number":596,"diff_summary":[{"file":"theories/esum.v","status":"M","additions":346,"deletions":104},{"file":"theories/lebesgue_measure.v","status":"M","additions":346,"deletions":104},{"file":"theories/measure.v","status":"M","additions":346,"deletions":104}],"state":"closed","open_date":"2022-03-11T10:56:53Z","update_date":"2022-07-03T09:10:23Z","discussion":[{"author":"CohenCyril","date":"2022-03-11T11:05:21Z","comment":"I think this is redundant with the integral.\r\nIndeed the new `esum` is in fact the integral on de discrete measure on nat"},{"author":"affeldt-aist","date":"2022-03-11T12:57:01Z","comment":"So the generalization of \\esum should be constructed as an instance of the theory of integral?"},{"author":"CohenCyril","date":"2022-03-11T13:00:39Z","comment":"Yes and then you even recover the cvd and fubini and cool stuff for free.\r\nActually even the current `esum` is only there for bootstrapping..."},{"author":"affeldt-aist","date":"2022-03-11T13:26:47Z","comment":"Will do."},{"author":"affeldt-aist","date":"2022-07-03T09:09:35Z","comment":"The goal of this draft PR was mainly to produce the following lemma to prove countable additivity:\r\n```coq\r\nLemma esumB D f g : esummable D f -> esummable D g ->\r\n  (forall i, D i -> 0 <= f i) -> (forall i, D i -> 0 <= g i) ->\r\n  \\esum_(i in D) (f i - g i) = \\esum_(i in D) f i - \\esum_(i in D) g i.\r\n  ```\r\nbut it was introducing sequences of arbitrary extended real numbers and developing their theory for this purpose.\r\nThe following lemma made its way into master, is equally useful, and does not require the introduction of new definition: \r\n```coq\r\nLemma esumB D f g : summable D f -> summable D g ->\r\n  (forall i, D i -> 0 <= f i) -> (forall i, D i -> 0 <= g i) ->\r\n  \\esum_(i in D) (f \\- g)^\\+ i - \\esum_(i in D) (f \\- g)^\\- i =\r\n  \\esum_(i in D) f i - \\esum_(i in D) g i.\r\n  ```\r\n  I therefore close this draft PR.\r\n  \r\n  "}],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"b9d9c9dab0690a88c2bbb9ce8b28ed19fb45e718","message":"distinguish between nnesum and esum","date":"2022-03-11T10:55:23Z"}]},{"author":"affeldt-aist","number":595,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":107,"deletions":99},{"file":"theories/lebesgue_integral.v","status":"M","additions":107,"deletions":99},{"file":"theories/lebesgue_measure.v","status":"M","additions":107,"deletions":99},{"file":"theories/measure.v","status":"M","additions":107,"deletions":99}],"state":"merged","open_date":"2022-03-11T10:19:40Z","update_date":"2022-03-23T00:03:12Z","discussion":[{"author":"affeldt-aist","date":"2022-03-22T13:34:11Z","comment":"Here is an excerpt of the only CI error:\r\n```\r\n  # CAMLC -c src/coq_elpi_HOAS.ml\r\n  # File \"src/coq_elpi_HOAS.ml\", line 616, characters 53-64:\r\n  # Error: This expression has type Sorts.t\r\n  #        but an expression was expected of type Univ.Universe.t\r\n  # make[1]: *** [Makefile.coq:736: src/coq_elpi_HOAS.cmo] Error 2\r\n  # make: *** [Makefile:38: build] Error 2\r\n  ```"}],"review_discussion":[{"author":"CohenCyril","file":"CHANGELOG_UNRELEASED.md","date":"2022-03-18T09:06:03Z","comment":"No. It's the other way around. `bigcup_measurable` should be the more general (with the condition).\r\nInstead the specialized one should be named `bigcupT_measurable` instead."}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"5a6daa7d48e2e3dd03e8379ae4a009f5e9bf598a","message":"fixes #566","date":"2022-03-22T13:19:33Z"}]},{"author":"affeldt-aist","number":594,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":10,"deletions":8},{"file":"theories/normedtype.v","status":"M","additions":10,"deletions":8},{"file":"theories/topology.v","status":"M","additions":10,"deletions":8}],"state":"merged","open_date":"2022-03-11T09:42:01Z","update_date":"2022-03-11T10:41:42Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"aa4f8047d18197b48542be4294a0d19b9a90bcb9","message":"fixes #573","date":"2022-03-11T09:39:20Z"}]},{"author":"affeldt-aist","number":593,"diff_summary":[{"file":"theories/classical_sets.v","status":"M","additions":8,"deletions":0}],"state":"merged","open_date":"2022-03-10T10:57:15Z","update_date":"2022-03-10T12:30:01Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"b887b8839d0e1eb4faa6f4192988f87c375876e9","message":"fixes #592","date":"2022-03-10T10:56:23Z"}]},{"author":"affeldt-aist","number":591,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":188,"deletions":90},{"file":"theories/cardinality.v","status":"M","additions":188,"deletions":90},{"file":"theories/classical_sets.v","status":"M","additions":188,"deletions":90},{"file":"theories/derive.v","status":"M","additions":188,"deletions":90},{"file":"theories/functions.v","status":"M","additions":188,"deletions":90},{"file":"theories/trigo.v","status":"M","additions":188,"deletions":90}],"state":"merged","open_date":"2022-03-09T03:00:47Z","update_date":"2022-03-19T23:27:51Z","discussion":[{"author":"CohenCyril","date":"2022-03-15T09:15:27Z","comment":"#578 has not been completely addressed: a renaming is missing"},{"author":"affeldt-aist","date":"2022-03-15T09:21:23Z","comment":"> #578 has not been completely addressed: a renaming is missing\r\n\r\nI didn't see the comment but that explains the strange naming that was puzzling me.\r\n"}],"review_discussion":[{"author":"CohenCyril","file":"theories/functions.v","date":"2022-03-09T12:29:59Z","comment":"While you're at it, no `pointedType` is required for `zmodType` (it becomes necessary because `ringType` is defined to be the type of non-trivial rings, i.e. s.t. `0 != 1`, which requires the domain of the function space to be non-empty)"},{"author":"proux01","file":"theories/cardinality.v","date":"2022-03-15T09:02:07Z","comment":"Nitpicking : why those extra spaces on the right of `==` (or `:=`)?"},{"author":"affeldt-aist","file":"theories/cardinality.v","date":"2022-03-15T09:04:19Z","comment":"A few lines below `<->` is used. The purpose of the extra space is for alignment I presume."},{"author":"proux01","file":"theories/cardinality.v","date":"2022-03-15T09:06:05Z","comment":"In mathcomp (c.f., ssralg.v for instance), only the `<->` entries get the extra space, but why not."}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"2a231f51051c0506800d1fcddbca91b2cd64e3a2","message":"documentation of functions.v\n\n- fixes #589\n- fixes #580\n- fixes #588\n- fixes #584","date":"2022-03-15T08:05:30Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"057a9a96b57946cb7fec9c3da388bcc4385c409f","message":"document functions.v\n\n- fixes #586","date":"2022-03-15T08:06:36Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"e73cdd7b1f4d044dc5b1e45e514d4d811bbfecd1","message":"document functions\n\n- fixes #581","date":"2022-03-15T08:06:38Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"fa6bdbae2810e21c6277a33b71a7fcb265c5a6f6","message":"document functions.v\n\n- fixes #587\n- fixes #585\n- fixes #583\n- fixes #582","date":"2022-03-15T08:06:38Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"2bc53d3bb708b8b372743dbbeff487d9e70c1f60","message":"document functions.v\n\n- fixes #579\n- fixes #578\n- fixes #577\n- fixes #577","date":"2022-03-15T08:06:38Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"82431f994a9e6b74cfcb4ab2cad3286e2fbcbe54","message":"fixes #576","date":"2022-03-15T08:06:38Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"d382223d52e5b3e44bdf77eb5ba2f078d3af6ea5","message":"fix","date":"2022-03-15T09:11:00Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"c51b30eff461935957fddf5e6156d69f13d31a49","message":"rename valLr -> valR","date":"2022-03-15T09:32:27Z"}]},{"author":"affeldt-aist","number":590,"diff_summary":[{"file":"INSTALL.md","status":"M","additions":6,"deletions":10},{"file":"README.md","status":"M","additions":6,"deletions":10},{"file":"coq-mathcomp-analysis.opam","status":"M","additions":6,"deletions":10},{"file":"meta.yml","status":"M","additions":6,"deletions":10}],"state":"merged","open_date":"2022-03-09T01:26:45Z","update_date":"2022-03-18T09:07:34Z","discussion":[{"author":"affeldt-aist","date":"2022-03-11T12:54:40Z","comment":"I guess this is ok to merge but I suspect that if we do so further PRs will be red."}],"review_discussion":[{"author":"CohenCyril","file":"default.nix","date":"2022-03-11T13:03:19Z","comment":"What is that?"},{"author":"affeldt-aist","file":"default.nix","date":"2022-03-11T13:08:02Z","comment":"I don't know. Is it possible that templates/generate.sh messed up with the Nix configuration?"},{"author":"affeldt-aist","file":"default.nix","date":"2022-03-11T13:52:23Z","comment":"It indeed looks like templates/generate.sh overwrote the Nix configuration."},{"author":"CohenCyril","file":"default.nix","date":"2022-03-11T14:38:01Z","comment":"meta.yml should disable the nix config"}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"5599a0fc391b96219119bef4aef788f1899c3eba","message":"fix hb dependency version","date":"2022-03-11T13:25:43Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"a6f5d0c3a02d4f47afa4982be5abce91ffdf5545","message":"disable nix from meta.yml","date":"2022-03-15T08:11:05Z"}]},{"author":"affeldt-aist","number":575,"diff_summary":[{"file":"CHANGELOG.md","status":"M","additions":692,"deletions":725},{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":692,"deletions":725},{"file":"INSTALL.md","status":"M","additions":692,"deletions":725},{"file":"theories/mathcomp_extra.v","status":"M","additions":692,"deletions":725}],"state":"merged","open_date":"2022-03-07T16:22:48Z","update_date":"2022-03-08T11:17:58Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"dc936367e7c80529577f50d51f51cf25cd687978","message":"changelog for version 0.4.0","date":"2022-03-07T16:21:06Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"4126986cab4ecf96025ef8820579a52eb995c918","message":"fix","date":"2022-03-07T16:25:34Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"86c2e392e81004e0781dbc6a04beaf1aace554c9","message":"fix","date":"2022-03-08T08:57:10Z"}]},{"author":"affeldt-aist","number":574,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":96,"deletions":1},{"file":"theories/classical_sets.v","status":"M","additions":96,"deletions":1},{"file":"theories/lebesgue_integral.v","status":"M","additions":96,"deletions":1},{"file":"theories/measure.v","status":"M","additions":96,"deletions":1},{"file":"theories/numfun.v","status":"M","additions":96,"deletions":1},{"file":"theories/topology.v","status":"M","additions":96,"deletions":1}],"state":"merged","open_date":"2022-03-07T11:16:53Z","update_date":"2022-06-03T14:04:02Z","discussion":[],"review_discussion":[{"author":"CohenCyril","file":"theories/lebesgue_integral.v","date":"2022-03-07T11:32:07Z","comment":"`ge0_integral_bigcup`?"},{"author":"CohenCyril","file":"theories/lebesgue_integral.v","date":"2022-03-10T12:31:15Z","comment":"`ge0_` ?"},{"author":"CohenCyril","file":"theories/lebesgue_integral.v","date":"2022-03-10T12:31:53Z","comment":"Is this condition really necessary by the way?\r\n(very naive question)"},{"author":"affeldt-aist","file":"theories/lebesgue_integral.v","date":"2022-03-15T08:37:28Z","comment":"Couldn't find out easily how to get rid of it..."},{"author":"affeldt-aist","file":"theories/lebesgue_integral.v","date":"2022-05-14T00:16:10Z","comment":"Is it the only blocker for this PR?"},{"author":"proux01","file":"theories/lebesgue_integral.v","date":"2022-05-30T15:45:51Z","comment":"Bikeshedding: I would have expected the hypothesis to be in a similar order to `ge0_integral_bigsetU`"}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"d1dd7e3a93f2cab2da3669697284e707efe5b123","message":"countable additivity for nonnegative functions","date":"2022-05-24T04:24:29Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"526de98fae14e6c1eaf4be026863e36721d7ee76","message":"fixes #651","date":"2022-05-24T04:41:03Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"6b56e65d98965039f5789917c5648c10ce6d465e","message":"minor fix","date":"2022-05-31T03:10:44Z"}]},{"author":"affeldt-aist","number":572,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":32,"deletions":39},{"file":"theories/fsbigop.v","status":"M","additions":32,"deletions":39},{"file":"theories/lebesgue_integral.v","status":"M","additions":32,"deletions":39}],"state":"merged","open_date":"2022-03-07T06:47:54Z","update_date":"2022-03-07T15:26:22Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"d3ebe16753560ecc6d33b3d966481a39852d56ea","message":"the easy part of issue 570","date":"2022-03-07T06:45:17Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"3975738f2ddb731630f08edf2858d01e6e46d1d3","message":"rm redundancy","date":"2022-03-07T07:39:29Z"}]},{"author":"affeldt-aist","number":571,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":88,"deletions":1},{"file":"theories/lebesgue_measure.v","status":"M","additions":88,"deletions":1},{"file":"theories/normedtype.v","status":"M","additions":88,"deletions":1}],"state":"merged","open_date":"2022-03-07T03:38:16Z","update_date":"2022-03-24T13:18:08Z","discussion":[],"review_discussion":[{"author":"CohenCyril","file":"theories/normedtype.v","date":"2022-03-07T10:00:15Z","comment":"Later on you could prove that `open = smallest topology is_interval` or something like that. But this is enough for now."}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"5b0e02274050cbd6a02709608d405290391d311a","message":"continuous implies measurable","date":"2022-03-10T10:42:05Z"}]},{"author":"proux01","number":569,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":28,"deletions":203},{"file":"theories/altreals/discrete.v","status":"M","additions":28,"deletions":203},{"file":"theories/altreals/realseq.v","status":"M","additions":28,"deletions":203},{"file":"theories/altreals/realsum.v","status":"M","additions":28,"deletions":203},{"file":"theories/boolp.v","status":"M","additions":28,"deletions":203},{"file":"theories/reals.v","status":"M","additions":28,"deletions":203},{"file":"theories/topology.v","status":"M","additions":28,"deletions":203}],"state":"merged","open_date":"2022-03-04T19:17:03Z","update_date":"2022-03-05T17:28:58Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"proux01","committer":"proux01","hash":"fdc2d89301deed19d0a60fe144b60bd8a4f6fac2","message":"Remove `[forall x P] and `[exists x P]\n\nThey are now subsumed by asbool.","date":"2022-03-04T19:14:45Z"}]},{"author":"proux01","number":568,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":53,"deletions":2},{"file":"theories/boolp.v","status":"M","additions":53,"deletions":2}],"state":"merged","open_date":"2022-03-04T10:29:39Z","update_date":"2022-03-05T18:03:51Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"proux01","committer":"proux01","hash":"6d8584687cba7bf65d61767969a78104ab5e0a55","message":"Add latticeType on functions","date":"2022-03-05T17:36:17Z"}]},{"author":"proux01","number":567,"diff_summary":[{"file":"theories/boolp.v","status":"M","additions":29,"deletions":1}],"state":"merged","open_date":"2022-03-04T09:33:07Z","update_date":"2022-03-05T17:32:36Z","discussion":[{"author":"proux01","date":"2022-03-04T09:36:23Z","comment":"I added entries for `'[forall x P]` and `'[exists x P]` but I don't understand what they bring compared to `asbool` used as `'[< forall x, P >]` and `'[< exists x, P >]`? This seems unused in Analysis, @amahboubi you seem to be the author of the feature, maybe you can shed some light?"},{"author":"CohenCyril","date":"2022-03-04T12:24:45Z","comment":"\r\n\r\n\r\n> I added entries for `'[forall x P]` and `'[exists x P]` but I don't understand what they bring compared to `asbool` used as `'[< forall x, P >]` and `'[< exists x, P >]`? This seems unused in Analysis, @amahboubi you seem to be the author of the feature, maybe you can shed some light?\r\n\r\nI believe that the boolean forall and exists are completely subsumed by `asbool` and should thus be removed."},{"author":"proux01","date":"2022-03-04T13:40:57Z","comment":"Ok, I'll remove them in a separate PR."}],"review_discussion":[],"tags":[],"commits":[{"author":"proux01","committer":"proux01","hash":"4e943dc8a2c6d8869c406f8902f321af25155e96","message":"Document boolp","date":"2022-03-04T19:18:04Z"}]},{"author":"hoheinzollern","number":565,"diff_summary":[{"file":"theories/lebesgue_measure.v","status":"M","additions":15,"deletions":0}],"state":"closed","open_date":"2022-03-03T16:24:23Z","update_date":"2022-03-28T13:28:43Z","discussion":[{"author":"CohenCyril","date":"2022-03-03T16:36:57Z","comment":"Hi, first, thank you for your contribution, it is greatly appreciated.\r\nIn order for your change to be integrated it will need to be slightly changed.\r\nThe proof should be compressed and the name should be updated to `measurable_fun_exprn`.\r\nThe proof can be done by composition with between a function and a continuous function (the lemma about the measurability of $$\\mathbb{R}$$ function is not yet in the library AFAIK)"},{"author":"CohenCyril","date":"2022-03-03T17:58:10Z","comment":"additionally, I strongly advise you *not to* PR from your fork's master branch."},{"author":"affeldt-aist","date":"2022-03-07T03:40:04Z","comment":"> (the lemma about the measurability of $$\\mathbb{R}$$ function is not yet in the library AFAIK)\r\n\r\nHere is a proposal PR #571 \r\n"}],"review_discussion":[],"tags":[],"commits":[{"author":"hoheinzollern","committer":"hoheinzollern","hash":"cb1d6481e6e23e712b7dffdc4a4ac5f43ff5b185","message":"measurable_fun_mulrn","date":"2022-03-03T16:21:44Z"}]},{"author":"hoheinzollern","number":564,"diff_summary":[{"file":"theories/lebesgue_integral.v","status":"M","additions":47,"deletions":0}],"state":"closed","open_date":"2022-03-03T14:47:16Z","update_date":"2022-03-03T15:14:14Z","discussion":[{"author":"affeldt-aist","date":"2022-03-03T14:54:29Z","comment":"NB: I changed the base to `probability` but maybe you want to make a PR which is based on master since what you add does not depend on `probability.v`."},{"author":"hoheinzollern","date":"2022-03-03T15:14:14Z","comment":"Ok I'll redo my pull request based on the master branch, thanks"}],"review_discussion":[],"tags":[],"commits":[{"author":"hoheinzollern","committer":"hoheinzollern","hash":"272d845c50fa17ff94bacfa7260c6535ea2d1d61","message":"Proving measurable_fun_mulrn nintegrableP","date":"2022-03-03T14:39:07Z"}]},{"author":"affeldt-aist","number":563,"diff_summary":[{"file":"theories/lebesgue_integral.v","status":"M","additions":30,"deletions":11}],"state":"merged","open_date":"2022-03-03T06:35:59Z","update_date":"2022-03-06T06:15:08Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"630c089c3bf8f4953b0be44d6de5da21f7e17515","message":"generalization, minor addition","date":"2022-03-06T06:00:40Z"}]},{"author":"affeldt-aist","number":562,"diff_summary":[{"file":"theories/lebesgue_integral.v","status":"M","additions":1,"deletions":1}],"state":"merged","open_date":"2022-03-03T05:49:03Z","update_date":"2022-03-03T15:23:06Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"b9f05817391b3aced9aaa2a95664253857fc47fb","message":"rm dead code","date":"2022-03-03T05:48:21Z"}]},{"author":"CohenCyril","number":561,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":78,"deletions":76},{"file":"theories/cardinality.v","status":"M","additions":78,"deletions":76},{"file":"theories/classical_sets.v","status":"M","additions":78,"deletions":76},{"file":"theories/functions.v","status":"M","additions":78,"deletions":76},{"file":"theories/lebesgue_integral.v","status":"M","additions":78,"deletions":76},{"file":"theories/lebesgue_measure.v","status":"M","additions":78,"deletions":76},{"file":"theories/measure.v","status":"M","additions":78,"deletions":76},{"file":"theories/normedtype.v","status":"M","additions":78,"deletions":76},{"file":"theories/sequences.v","status":"M","additions":78,"deletions":76}],"state":"merged","open_date":"2022-03-02T13:16:12Z","update_date":"2022-03-02T14:35:11Z","discussion":[],"review_discussion":[{"author":"affeldt-aist","file":"theories/classical_sets.v","date":"2022-03-02T13:21:45Z","comment":"```suggestion\r\n(*                     range F == set defined by the expression F x for any   *)\r\n```"},{"author":"affeldt-aist","file":"theories/lebesgue_integral.v","date":"2022-03-02T13:22:33Z","comment":"```suggestion\r\n  \\big[setU/set0]_(i \\in range f) (f @^-1` [set i]) = setT.\r\n```"},{"author":"affeldt-aist","file":"theories/lebesgue_integral.v","date":"2022-03-02T13:23:00Z","comment":"```suggestion\r\n  \\sum_(i \\in range g) m (f @^-1` [set x] `&` (g @^-1` [set i])) =\r\n```"},{"author":"affeldt-aist","file":"theories/lebesgue_integral.v","date":"2022-03-02T13:23:17Z","comment":"```suggestion\r\n  m (f @^-1` [set x] `&` \\big[setU/set0]_(i \\in range g) (g @^-1` [set i])).\r\n```"}],"tags":[],"commits":[{"author":"CohenCyril","committer":"CohenCyril","hash":"183c29091229961a5bce62f575daac79ea45a72e","message":"[set of _] -> range _","date":"2022-03-02T13:24:50Z"},{"author":"CohenCyril","committer":"web-flow","hash":"89afe4092b996a819d4143e04c6eea1f845c0f3a","message":"Removing spurious parenthesis\n\nCo-authored-by: affeldt-aist <33154536+affeldt-aist@users.noreply.github.com>","date":"2022-03-02T13:26:02Z"},{"author":"CohenCyril","committer":"web-flow","hash":"333115ce06527283ea75f597a82724869321d5ac","message":"removing spurious parenthesis\n\nCo-authored-by: affeldt-aist <33154536+affeldt-aist@users.noreply.github.com>","date":"2022-03-02T13:26:23Z"}]},{"author":"affeldt-aist","number":560,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":18,"deletions":45},{"file":"theories/sequences.v","status":"M","additions":18,"deletions":45},{"file":"theories/topology.v","status":"M","additions":18,"deletions":45}],"state":"merged","open_date":"2022-03-01T09:50:00Z","update_date":"2022-03-01T10:55:19Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"26a1fab9724615800522896f792f44ac35905374","message":"fixes #431","date":"2022-03-01T09:48:55Z"}]},{"author":"affeldt-aist","number":559,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":8,"deletions":17},{"file":"theories/landau.v","status":"M","additions":8,"deletions":17},{"file":"theories/normedtype.v","status":"M","additions":8,"deletions":17}],"state":"merged","open_date":"2022-03-01T09:01:12Z","update_date":"2022-03-06T05:48:38Z","discussion":[{"author":"proux01","date":"2022-03-01T19:44:04Z","comment":"Indeed, there should be a hint in the new posnum stuff, we should try."},{"author":"affeldt-aist","date":"2022-03-02T07:12:03Z","comment":"~~Then I'll merge and issue not to forget about testing some automation.~~ on hold"},{"author":"affeldt-aist","date":"2022-03-03T15:28:24Z","comment":"> I strongly prefer to waìt until the posnum PR is merged\r\n\r\nDo you mean that it is not sure that we'll get rid of the lemmas after all?"},{"author":"CohenCyril","date":"2022-03-03T15:37:12Z","comment":"> Do you mean that it is not sure that we'll get rid of the lemmas after all?\r\n\r\nI mean that it seems to be a detour to \"merge this, open an issue, finish & merge the new posnum, then fix the issue by (hopefully) restoring the old proofs\", rather than \"finish & merge posnum, amend this PR, merge\""},{"author":"affeldt-aist","date":"2022-03-05T06:13:37Z","comment":"To use the new posnum, I needed to rebase it but it was too difficult to retain its intermediate commits. I therefore squashed it, rebased it, and then rebased this PR on top of it so as to propagate the automation it provides to the files that changed in the meantime in master. The new posnum addresses the comments by Zachary. I kept all the technical comments about the new posnum into the commit message of the squashed commits. How about we merge this?\r\n"},{"author":"proux01","date":"2022-03-05T13:42:10Z","comment":"Great, thanks! I did a finer rebase to keep a bit more history in https://github.com/math-comp/analysis/pull/511"},{"author":"affeldt-aist","date":"2022-03-05T15:49:11Z","comment":"> Great, thanks! I did a finer rebase to keep a bit more history in #511\r\n\r\nI rebased on the new #511. That addresses the pending change request."}],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"79c8ab5db5e83a2cac4db8af30b754d09bd1bc17","message":"fixes #486","date":"2022-03-06T05:25:52Z"}]},{"author":"affeldt-aist","number":558,"diff_summary":[{"file":".dir-locals.el","status":"A","additions":586,"deletions":512},{"file":"CHANGELOG_UNRELEASED.md","status":"A","additions":586,"deletions":512},{"file":"_CoqProject","status":"A","additions":586,"deletions":512},{"file":"theories/altreals/realseq.v","status":"A","additions":586,"deletions":512},{"file":"theories/altreals/realsum.v","status":"A","additions":586,"deletions":512},{"file":"theories/cardinality.v","status":"A","additions":586,"deletions":512},{"file":"theories/derive.v","status":"A","additions":586,"deletions":512},{"file":"theories/exp.v","status":"A","additions":586,"deletions":512},{"file":"theories/functions.v","status":"A","additions":586,"deletions":512},{"file":"theories/landau.v","status":"A","additions":586,"deletions":512},{"file":"theories/lebesgue_integral.v","status":"A","additions":586,"deletions":512},{"file":"theories/lebesgue_measure.v","status":"A","additions":586,"deletions":512},{"file":"theories/numfun.v","status":"A","additions":586,"deletions":512},{"file":"theories/sequences.v","status":"A","additions":586,"deletions":512},{"file":"theories/topology.v","status":"A","additions":586,"deletions":512},{"file":"theories/trigo.v","status":"A","additions":586,"deletions":512}],"state":"merged","open_date":"2022-02-28T11:36:20Z","update_date":"2022-03-07T15:25:28Z","discussion":[{"author":"CohenCyril","date":"2022-03-01T12:02:54Z","comment":"Great! But why are the `fct_zmodType` etc stuff in `functions` rather than `numfun`?"},{"author":"affeldt-aist","date":"2022-03-01T13:20:37Z","comment":"> Great! But why are the `fct_zmodType` etc stuff in `functions` rather than `numfun`?\r\n\r\nIt seemed to me that some files (e.g., topology.v, derive.v) didn't need most of `numfun.v`\r\nand that doing it this way is more conservative (it's easier to move things out of `functions.v`\r\nthan the other way around). \r\n\r\n"},{"author":"affeldt-aist","date":"2022-03-05T15:50:06Z","comment":"Heading for merge?"},{"author":"CohenCyril","date":"2022-03-05T16:12:51Z","comment":"I did not have time to so a full review yet... but I saw measurability results in `numfun`, I don't think it should depend on `measure`"}],"review_discussion":[{"author":"CohenCyril","file":"theories/functions.v","date":"2022-03-07T13:27:24Z","comment":"Actually,  (my mistake), it exists and it is called `\\o*`"}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"342f1a6ee9117bd9618432661160607ae60be30c","message":"new file to factor out lebesgue_integral.v","date":"2022-03-07T13:19:53Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"2efba49a6d39e6c63b80e1dfe226c3f685255d04","message":"rm fun_cmul","date":"2022-03-07T13:39:52Z"}]},{"author":"affeldt-aist","number":557,"diff_summary":[{"file":".github/pull_request_template.md","status":"A","additions":19,"deletions":0}],"state":"merged","open_date":"2022-02-28T10:19:12Z","update_date":"2022-02-28T12:40:52Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"b719b6eed88ef8b0d27dd15d558d919d0f193267","message":"add pull_request_template","date":"2022-02-28T10:17:57Z"}]},{"author":"affeldt-aist","number":555,"diff_summary":[{"file":"_CoqProject","status":"M","additions":14,"deletions":15},{"file":"theories/boolp.v","status":"M","additions":14,"deletions":15},{"file":"theories/classical_sets.v","status":"M","additions":14,"deletions":15},{"file":"theories/normedtype.v","status":"M","additions":14,"deletions":15},{"file":"theories/sequences.v","status":"M","additions":14,"deletions":15},{"file":"theories/topology.v","status":"M","additions":14,"deletions":15}],"state":"merged","open_date":"2022-02-27T12:15:46Z","update_date":"2022-02-27T14:07:47Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"df9f5c90173182524c83c7185cc4ed781315cd0f","message":"fixes #342","date":"2022-02-27T12:15:14Z"}]},{"author":"affeldt-aist","number":554,"diff_summary":[{"file":"theories/Rstruct.v","status":"M","additions":31,"deletions":57},{"file":"theories/altreals/xfinmap.v","status":"M","additions":31,"deletions":57},{"file":"theories/boolp.v","status":"M","additions":31,"deletions":57},{"file":"theories/cardinality.v","status":"M","additions":31,"deletions":57},{"file":"theories/classical_sets.v","status":"M","additions":31,"deletions":57},{"file":"theories/derive.v","status":"M","additions":31,"deletions":57},{"file":"theories/ereal.v","status":"M","additions":31,"deletions":57},{"file":"theories/esum.v","status":"M","additions":31,"deletions":57},{"file":"theories/exp.v","status":"M","additions":31,"deletions":57},{"file":"theories/forms.v","status":"M","additions":31,"deletions":57},{"file":"theories/fsbigop.v","status":"M","additions":31,"deletions":57},{"file":"theories/functions.v","status":"M","additions":31,"deletions":57},{"file":"theories/landau.v","status":"M","additions":31,"deletions":57},{"file":"theories/lebesgue_integral.v","status":"M","additions":31,"deletions":57},{"file":"theories/mathcomp_extra.v","status":"M","additions":31,"deletions":57},{"file":"theories/nngnum.v","status":"M","additions":31,"deletions":57},{"file":"theories/normedtype.v","status":"M","additions":31,"deletions":57},{"file":"theories/posnum.v","status":"M","additions":31,"deletions":57},{"file":"theories/prodnormedzmodule.v","status":"M","additions":31,"deletions":57},{"file":"theories/realfun.v","status":"M","additions":31,"deletions":57},{"file":"theories/sequences.v","status":"M","additions":31,"deletions":57},{"file":"theories/summability.v","status":"M","additions":31,"deletions":57},{"file":"theories/trigo.v","status":"M","additions":31,"deletions":57}],"state":"merged","open_date":"2022-02-27T11:59:31Z","update_date":"2022-02-27T14:08:32Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"418f4124ac8ce0fc552b0972a00146bebdb531c7","message":"fixes #441","date":"2022-02-27T11:59:00Z"}]},{"author":"affeldt-aist","number":553,"diff_summary":[{"file":"theories/normedtype.v","status":"M","additions":17,"deletions":19},{"file":"theories/topology.v","status":"M","additions":17,"deletions":19}],"state":"merged","open_date":"2022-02-27T11:21:59Z","update_date":"2022-02-27T14:12:41Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"b6b2d8f51b9d4080a8b13a4022b2a95478c20b59","message":"fixes #544","date":"2022-02-27T11:20:44Z"}]},{"author":"affeldt-aist","number":552,"diff_summary":[{"file":"_CoqProject","status":"M","additions":157,"deletions":137},{"file":"theories/altreals/distr.v","status":"M","additions":157,"deletions":137},{"file":"theories/altreals/realsum.v","status":"M","additions":157,"deletions":137},{"file":"theories/altreals/xfinmap.v","status":"M","additions":157,"deletions":137},{"file":"theories/boolp.v","status":"M","additions":157,"deletions":137},{"file":"theories/cardinality.v","status":"M","additions":157,"deletions":137},{"file":"theories/classical_sets.v","status":"M","additions":157,"deletions":137},{"file":"theories/derive.v","status":"M","additions":157,"deletions":137},{"file":"theories/ereal.v","status":"M","additions":157,"deletions":137},{"file":"theories/exp.v","status":"M","additions":157,"deletions":137},{"file":"theories/fsbigop.v","status":"M","additions":157,"deletions":137},{"file":"theories/functions.v","status":"M","additions":157,"deletions":137},{"file":"theories/landau.v","status":"M","additions":157,"deletions":137},{"file":"theories/lebesgue_integral.v","status":"M","additions":157,"deletions":137},{"file":"theories/lebesgue_measure.v","status":"M","additions":157,"deletions":137},{"file":"theories/measure.v","status":"M","additions":157,"deletions":137},{"file":"theories/nngnum.v","status":"M","additions":157,"deletions":137},{"file":"theories/normedtype.v","status":"M","additions":157,"deletions":137},{"file":"theories/posnum.v","status":"M","additions":157,"deletions":137},{"file":"theories/realfun.v","status":"M","additions":157,"deletions":137},{"file":"theories/sequences.v","status":"M","additions":157,"deletions":137},{"file":"theories/set_interval.v","status":"M","additions":157,"deletions":137},{"file":"theories/topology.v","status":"M","additions":157,"deletions":137},{"file":"theories/trigo.v","status":"M","additions":157,"deletions":137}],"state":"merged","open_date":"2022-02-27T08:04:58Z","update_date":"2022-02-28T12:45:57Z","discussion":[{"author":"zstone1","date":"2022-02-27T18:25:58Z","comment":"I'm still seeing some `Hint locality` warnings in the Files Changed view. All of them are in `cardinality.v`. Can we add the global tag to those while in this diff, or is there are a reason to leave that file alone?"},{"author":"affeldt-aist","date":"2022-02-28T05:32:30Z","comment":"> I'm still seeing some `Hint locality` warnings in the Files Changed view. All of them are in `cardinality.v`. Can we add the global tag to those while in this diff, or is there are a reason to leave that file alone?\r\n\r\nThank you for reporting. I added them, this was a miss on my side.\r\n"}],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"9dd673e4e0af89467b040eab595c2e830cfec442","message":"fixes #341","date":"2022-02-28T05:31:26Z"}]},{"author":"affeldt-aist","number":551,"diff_summary":[{"file":"_CoqProject","status":"M","additions":0,"deletions":1}],"state":"merged","open_date":"2022-02-27T07:08:23Z","update_date":"2022-02-27T09:45:13Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"f126e02f0a58e81ed8b3d1670a88847434e42f26","message":"fixes #344","date":"2022-02-27T07:06:23Z"}]},{"author":"zstone1","number":547,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":33,"deletions":3},{"file":"theories/topology.v","status":"M","additions":33,"deletions":3}],"state":"merged","open_date":"2022-02-24T03:03:12Z","update_date":"2022-03-05T19:48:37Z","discussion":[{"author":"CohenCyril","date":"2022-03-05T18:46:17Z","comment":"wait for CI, then  ~~squash & merge~~\r\nOh no wait the  ~~CI~~ changelog is missing the two new entries"},{"author":"zstone1","date":"2022-03-05T19:00:31Z","comment":"Do you meant the changelog is missing the entries? I've added them. "},{"author":"CohenCyril","date":"2022-03-05T19:22:09Z","comment":"> Do you meant the changelog is missing the entries? I've added them.\r\n\r\nYes, sorry I got distracted"}],"review_discussion":[{"author":"CohenCyril","file":"theories/topology.v","date":"2022-03-05T17:58:27Z","comment":"```suggestion\r\n  ProperFilter F -> (\\forall g \\near F, continuous (g : U -> V)) ->\r\n```"},{"author":"CohenCyril","file":"theories/topology.v","date":"2022-03-05T17:58:40Z","comment":"```suggestion\r\n  {uniform, F --> f} -> continuous f.\r\n```"},{"author":"CohenCyril","file":"theories/topology.v","date":"2022-03-05T17:59:00Z","comment":"```suggestion\r\n  {uniform K, F --> f} -> {within K, continuous f}.\r\n```"},{"author":"CohenCyril","file":"theories/topology.v","date":"2022-03-05T18:00:16Z","comment":"```suggestion\r\n  ProperFilter F -> (\\forall g \\near F, continuous (g : subspace K -> V)) ->\r\n```"}],"tags":[],"commits":[{"author":"zstone1","committer":"zstone1","hash":"01920cc9c543d69bcc81ec3efd32ad965420c9b8","message":"uniform limits are continuous\n\nuniform limit proofs\n\nuniform limits are continuous\n\ncleaning up proofs\n\nminor lints\n\nUpdate theories/topology.v\n\nCo-authored-by: Cyril Cohen <CohenCyril@users.noreply.github.com>\n\nUpdate theories/topology.v\n\nCo-authored-by: Cyril Cohen <CohenCyril@users.noreply.github.com>\n\nUpdate theories/topology.v\n\nCo-authored-by: Cyril Cohen <CohenCyril@users.noreply.github.com>\n\nUpdate theories/topology.v\n\nCo-authored-by: Cyril Cohen <CohenCyril@users.noreply.github.com>\n\nupdating changelog","date":"2022-03-05T18:58:18Z"}]},{"author":"proux01","number":546,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":121,"deletions":15},{"file":"theories/ereal.v","status":"M","additions":121,"deletions":15}],"state":"merged","open_date":"2022-02-22T10:04:15Z","update_date":"2022-03-01T08:30:46Z","discussion":[{"author":"proux01","date":"2022-02-23T09:22:16Z","comment":"Indeed, I copy pasted those without enough thinking, they are definitely useless. Let me fix that.\r\n"},{"author":"proux01","date":"2022-02-23T16:23:37Z","comment":"@affeldt-aist thanks for your remark, I thought about this a bit more carefully and came up with a naming scheme I'm happy with for this family of lemmas: `l{t,e}e_{,d}sub{,e}{r,l}_add{r,l}` with\r\n* sub{r,l} when the subtracted var must be a fin_num\r\n* sube{r,l} when the subtracted var can be an extended value (and one of the two other vars must be a fin_num)\r\n\r\nThis is now a full cartesian product (all 32 lemmas are there)."},{"author":"proux01","date":"2022-02-23T16:25:25Z","comment":"P.S. : Here, I think I should squash the three commits before this is merged."}],"review_discussion":[],"tags":[],"commits":[{"author":"proux01","committer":"affeldt-aist","hash":"7a47385b83488b8a949938582f5220b6535fb33e","message":"Add lemmas on subtraction of extended values","date":"2022-03-01T08:01:13Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"6bf5cea31ebab261edbe60aa9d89e5f1542a8ee6","message":"these are maybe not the right lemmas","date":"2022-03-01T08:01:13Z"},{"author":"proux01","committer":"affeldt-aist","hash":"c468d1df44025e2034568825c39a58c9c0c7f35b","message":"Add missing lemmas and fix naming scheme\n\nThe naming scheme for the l{t,e}e_{,d}sub{,e}{r,l}_add{r,l} lemmas is\nnow as follows:\n- sub{r,l} when the subtracted var must be a fin_num\n- sube{r,l} when the subtracted var can be an extended value\n  (and another var must be a fin_num)","date":"2022-03-01T08:01:13Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"8fb98ab4930821b80683f4c736ac9e23574e7e3a","message":"rebase, fix changelog","date":"2022-03-01T08:03:25Z"}]},{"author":"zstone1","number":545,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":270,"deletions":32},{"file":"theories/topology.v","status":"M","additions":270,"deletions":32}],"state":"merged","open_date":"2022-02-19T06:21:19Z","update_date":"2022-04-12T13:37:55Z","discussion":[{"author":"CohenCyril","date":"2022-03-23T00:15:43Z","comment":"This is really nice. I'd love to see the reproduction of the problems with near that you mentioned. And yes, the no-unfolding stuff is annoying, since we piggyback on Coq evar we should introduce the unfolding in the tactic, but it needs to be smart and thus be reprogrammed in another metalanguage (e.g. ltac2 or coq-elpi), which I meant to do at some point anyways."},{"author":"zstone1","date":"2022-03-23T02:23:15Z","comment":"Thank you, I'm pretty happy with how it worked out. I still have some questions about `near_compact_covering` to think about. In particular, I'm very much hoping the converse is false, because means there's a possibility of a novel generalization of arzela-ascoli.\r\n\r\nI will post a branch with the broken `near` application once this is merged.\r\n\r\nAlso, I remember @affeldt-aist mentioned something about uniform series convergence proofs (in R or C). Once this is merged, you can use `ptws_compact_cvg` + local compactness. (I believe it'll be easier to formalize this way, rather copying textbook proofs that use Weierstrass M-test and deal with boundary conditions)."},{"author":"zstone1","date":"2022-03-23T20:34:35Z","comment":"Well, it was a nice thought. I have a proof of the converse of near_compact_covering. I'll post it separately once I clean it up."}],"review_discussion":[{"author":"CohenCyril","file":"theories/topology.v","date":"2022-03-23T00:07:46Z","comment":"```suggestion\r\nLemma equicontinuous_subset {I J} (W : set I) (V : set J) {fW : I -> X -> Y} {fV : J -> X -> Y} :\r\n  fW @`W `<=` fV @` V -> equicontinuous V fV -> equicontinuous W fW.\r\n```"},{"author":"CohenCyril","file":"theories/topology.v","date":"2022-03-23T00:07:58Z","comment":"```suggestion\r\nLemma equicontinuous_continuous_for {I} (W : set I) (fW : I -> X -> Y) i x :\r\n```"},{"author":"CohenCyril","file":"theories/topology.v","date":"2022-03-23T00:08:13Z","comment":"```suggestion\r\nDefinition pointwise_precompact {I} (W : set I) (d : I -> X -> Y) :=\r\n```"},{"author":"CohenCyril","file":"theories/topology.v","date":"2022-03-23T00:08:33Z","comment":"same as for equicontinuous_subset"},{"author":"CohenCyril","file":"theories/topology.v","date":"2022-03-23T00:10:39Z","comment":"This will allow to switch between `equicontinous V id` and other variants."},{"author":"CohenCyril","file":"theories/topology.v","date":"2022-03-23T00:11:00Z","comment":"```suggestion\r\nGlobal Instance sets_of_filter : ProperFilter sets_of.\r\n```"},{"author":"CohenCyril","file":"theories/topology.v","date":"2022-03-23T00:11:24Z","comment":"`sets_of` sounds too generic a name, do you have another suggestion?"},{"author":"CohenCyril","file":"theories/topology.v","date":"2022-03-23T00:11:42Z","comment":"```suggestion\r\nLemma ascoli_forward (W : set (X -> Y)) :\r\n```"},{"author":"zstone1","file":"theories/topology.v","date":"2022-03-23T01:31:47Z","comment":"That's true. I've updated with `powerset_filter_from` which is marginally better. Maybe `small_set_filter_from` is more descriptive?"}],"tags":[],"commits":[{"author":"zstone1","committer":"zstone1","hash":"09996d93607073762978d5e09040ff7d39d4ba5d","message":"using small_ent\n\ncleanish implementation for first lemma\n\nproofs now use near correctly\n\nminor lint\n\nfixing build for 8.14\n\nalways more linting to do\n\nuse notations in `sets_of`\n\n- minor linting\n\nrephrasing definitions with index and map\n\nfixing bad merge\n\nupdating changelog\n\nfixing bad merge again\n\nforgot to add docs for sets_of\n\nUpdate theories/topology.v\n\nCo-authored-by: Cyril Cohen <CohenCyril@users.noreply.github.com>\n\nUpdate theories/topology.v\n\nCo-authored-by: Cyril Cohen <CohenCyril@users.noreply.github.com>\n\nUpdate theories/topology.v\n\nCo-authored-by: Cyril Cohen <CohenCyril@users.noreply.github.com>\n\nUpdate theories/topology.v\n\nCo-authored-by: Cyril Cohen <CohenCyril@users.noreply.github.com>\n\nUpdate theories/topology.v\n\nCo-authored-by: Cyril Cohen <CohenCyril@users.noreply.github.com>\n\nrenaming sets_of\n\nfixing changelog","date":"2022-04-12T13:16:02Z"}]},{"author":"CohenCyril","number":543,"diff_summary":[{"file":".github/workflows/docker-action.yml","status":"A","additions":17234,"deletions":2671},{"file":".github/workflows/nix-action-8.15.yml","status":"A","additions":17234,"deletions":2671},{"file":".github/workflows/nix-action-master.yml","status":"A","additions":17234,"deletions":2671},{"file":".nix/config.nix","status":"A","additions":17234,"deletions":2671},{"file":".nix/coq-nix-toolbox.nix","status":"A","additions":17234,"deletions":2671},{"file":"CHANGELOG_UNRELEASED.md","status":"A","additions":17234,"deletions":2671},{"file":"README.md","status":"A","additions":17234,"deletions":2671},{"file":"_CoqProject","status":"A","additions":17234,"deletions":2671},{"file":"coq-mathcomp-analysis.opam","status":"A","additions":17234,"deletions":2671},{"file":"meta.yml","status":"A","additions":17234,"deletions":2671},{"file":"theories/altreals/distr.v","status":"A","additions":17234,"deletions":2671},{"file":"theories/altreals/realseq.v","status":"A","additions":17234,"deletions":2671},{"file":"theories/altreals/realsum.v","status":"A","additions":17234,"deletions":2671},{"file":"theories/boolp.v","status":"A","additions":17234,"deletions":2671},{"file":"theories/cardinality.v","status":"A","additions":17234,"deletions":2671},{"file":"theories/classical_sets.v","status":"A","additions":17234,"deletions":2671},{"file":"theories/csum.v","status":"A","additions":17234,"deletions":2671},{"file":"theories/derive.v","status":"A","additions":17234,"deletions":2671},{"file":"theories/ereal.v","status":"A","additions":17234,"deletions":2671},{"file":"theories/esum.v","status":"A","additions":17234,"deletions":2671},{"file":"theories/fsbigop.v","status":"A","additions":17234,"deletions":2671},{"file":"theories/functions.v","status":"A","additions":17234,"deletions":2671},{"file":"theories/landau.v","status":"A","additions":17234,"deletions":2671},{"file":"theories/lebesgue_integral.v","status":"A","additions":17234,"deletions":2671},{"file":"theories/lebesgue_measure.v","status":"A","additions":17234,"deletions":2671},{"file":"theories/mathcomp_extra.v","status":"A","additions":17234,"deletions":2671},{"file":"theories/measure.v","status":"A","additions":17234,"deletions":2671},{"file":"theories/normedtype.v","status":"A","additions":17234,"deletions":2671},{"file":"theories/posnum.v","status":"A","additions":17234,"deletions":2671},{"file":"theories/realfun.v","status":"A","additions":17234,"deletions":2671},{"file":"theories/reals.v","status":"A","additions":17234,"deletions":2671},{"file":"theories/sequences.v","status":"A","additions":17234,"deletions":2671},{"file":"theories/set_interval.v","status":"A","additions":17234,"deletions":2671},{"file":"theories/topology.v","status":"A","additions":17234,"deletions":2671},{"file":"theories/trigo.v","status":"A","additions":17234,"deletions":2671}],"state":"merged","open_date":"2022-02-17T15:58:29Z","update_date":"2022-02-26T14:14:49Z","discussion":[{"author":"affeldt-aist","date":"2022-02-17T16:01:32Z","comment":"That's all fine with (modulo the changelog update :-/)."},{"author":"affeldt-aist","date":"2022-02-25T17:45:24Z","comment":"The errors are syntax errors with Coq 8.13 only.\r\nI fixed some in `lebesgue_measure.v` (by adding parentheses to disambiguate the parsing of intervals) but didn't have time to fix the ones in `lebesgue_integral.v\":\r\n```\r\n# File \"./theories/lebesgue_integral.v\", line 1428, characters 53-54:\r\n# Error: Syntax error: 'nnsfun' 'of' expected after '[' (in [term]).\r\n ```\r\n"},{"author":"affeldt-aist","date":"2022-02-26T05:49:38Z","comment":"The only errors are now \"Nix CI for bundle\" errors, so they are maybe not relevant."},{"author":"CohenCyril","date":"2022-02-26T10:18:16Z","comment":"> The only errors are now \"Nix CI for bundle\" errors, so they are maybe not relevant.\r\n\r\n@affeldt-aist I fixed something in `boolp.v` doc, added some (working) nix CI, and we should be good to go."},{"author":"affeldt-aist","date":"2022-02-26T10:44:07Z","comment":"Only one failure left:\r\n```\r\nNix CI for bundle master / coq (pull_request_target)  Failing after 24s — coq\r\n\r\nChecking presence of CI target coq\r\n\r\nRun nb_dry_run=$(NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link \\\r\n  nb_dry_run=$(NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link \\\r\n     --argstr bundle \"master\" --argstr job \"coq\" \\\r\n     --dry-run 2>&1 > /dev/null)\r\n  echo $nb_dry_run\r\n  echo ::set-output name=status::$(echo $nb_dry_run | grep \"built:\" | sed \"s/.*/built/\")\r\n  shell: /usr/bin/bash -e {0}\r\n  env:\r\n    tested_commit: dba57a6d631d8b2b199cc308d10a53590529fdea\r\n    NIX_PATH: nixpkgs=channel:nixpkgs-unstable\r\nError: Process completed with exit code 1.\r\n```"},{"author":"CohenCyril","date":"2022-02-26T12:17:00Z","comment":"The CI errors will disapear after the merge"}],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"dbf156a49027d456f66368082f58c02912936aec","message":"lebesgue measure and integral\n\nCo-authored-by: Cyril Cohen <cyril.cohen@inria.fr>","date":"2022-02-25T17:27:45Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"4d56e5764e861e9d627da654427f6a20386fc9af","message":"adjust notation levels for Coq 8.13","date":"2022-02-26T05:21:32Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"a77ca5ec710e5e9eb1498797b52ff004f7762573","message":"cleanup nix and doc boolp","date":"2022-02-26T10:19:41Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"b88ac3a06d82ddcb39658a637fe4950a4316c673","message":"minor naming fix","date":"2022-02-26T10:22:54Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"c79345cd5a8b8bbdcc86fbe9bc0e92b499686746","message":"minor fix","date":"2022-02-26T10:44:14Z"}]},{"author":"affeldt-aist","number":542,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":62,"deletions":0},{"file":"theories/derive.v","status":"M","additions":62,"deletions":0},{"file":"theories/trigo.v","status":"M","additions":62,"deletions":0}],"state":"merged","open_date":"2022-02-15T09:24:24Z","update_date":"2022-03-07T15:52:33Z","discussion":[{"author":"affeldt-aist","date":"2022-02-28T09:36:54Z","comment":"These lemmas seem uncontroversial to me. It is ok to merge?"}],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"8320940941b7cf97e08cc14a4c937816d0208f06","message":"small additions to trigo.v\n\n- coming from coq-robot\n\nCo-authored-by: thery <Laurent.Thery@inria.fr>","date":"2022-03-07T15:27:10Z"}]},{"author":"CohenCyril","number":541,"diff_summary":[{"file":"theories/lebesgue_integral.v","status":"M","additions":572,"deletions":445},{"file":"theories/lebesgue_measure.v","status":"M","additions":572,"deletions":445},{"file":"theories/measure.v","status":"M","additions":572,"deletions":445}],"state":"closed","open_date":"2022-02-12T09:27:57Z","update_date":"2022-07-08T09:24:46Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"CohenCyril","committer":"CohenCyril","hash":"33f82f54bd04e72b7e33ccccd69f91a4804b54ae","message":"Adding displays for measurable sets","date":"2022-02-12T09:28:48Z"}]},{"author":"affeldt-aist","number":540,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":32,"deletions":40},{"file":"theories/ereal.v","status":"M","additions":32,"deletions":40},{"file":"theories/sequences.v","status":"M","additions":32,"deletions":40}],"state":"merged","open_date":"2022-02-10T11:11:18Z","update_date":"2022-02-10T13:07:14Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"c6ce9e2838703644c3d84dec4ce9d67cef6bbac3","message":"fixes the fix 531","date":"2022-02-10T11:10:07Z"}]},{"author":"mkerjean","number":539,"diff_summary":[{"file":"_CoqProject","status":"A","additions":383,"deletions":0},{"file":"theories/tvs.v","status":"A","additions":383,"deletions":0}],"state":"open","open_date":"2022-02-08T15:13:23Z","update_date":"2022-06-25T15:06:30Z","discussion":[{"author":"zstone1","date":"2022-06-25T15:06:29Z","comment":"With a long-term goal of doing spectral theory, I'm looking at defining integrals for a TVS. The most straightforward choice seems to be \"weak integrals\". I can work in a normed vector space for now, but I'd love to build on your work directly. What is the state of this PR today? And is there anything I can do to help get it ready for submission?"}],"review_discussion":[],"tags":[],"commits":[{"author":"mkerjean","hash":"9f09d37cc66159abce7ca3dde61049e678c8120f","message":"Create tvs.v","date":"2022-02-24T13:50:36Z"},{"hash":"603718177d68bf58f4598443c6d58eb8a38b0628","message":"tvs Coq project","date":"2022-02-24T13:50:36Z"},{"hash":"0de9e2514df7b954be998c9f38c23a4cc47a431c","message":"structure tvs","date":"2022-02-24T13:50:36Z"},{"hash":"7caad7643ccdf2d3454a36b9503273fd94fb51be","message":"linear_zmodtype wip","date":"2022-02-24T13:50:36Z"},{"hash":"884c1d227c4088dcda6f3eee6b41a678f6591ab7","message":"subtyping wip","date":"2022-02-25T10:54:34Z"}]},{"author":"CohenCyril","number":537,"diff_summary":[{"file":".github/workflows/nix-action-master.yml","status":"A","additions":437,"deletions":11},{"file":".nix/config.nix","status":"A","additions":437,"deletions":11},{"file":".nix/coq-nix-toolbox.nix","status":"A","additions":437,"deletions":11}],"state":"merged","open_date":"2022-02-06T14:03:36Z","update_date":"2022-06-08T11:11:24Z","discussion":[{"author":"proux01","date":"2022-02-06T14:51:50Z","comment":"The failure for Coq master comes from https://github.com/coq/coq/pull/15220"},{"author":"CohenCyril","date":"2022-02-06T15:29:38Z","comment":"> The failure for Coq master comes from [coq/coq#15220](https://github.com/coq/coq/pull/15220)\r\n\r\n:sob:"},{"author":"proux01","date":"2022-06-03T12:13:10Z","comment":"@CohenCyril I uncommented Coq master in config.nix but we now have a Cachix error: https://github.com/math-comp/analysis/runs/6725051905?check_suite_focus=true"},{"author":"CohenCyril","date":"2022-06-03T12:25:24Z","comment":"> @CohenCyril I uncommented Coq master in config.nix but we now have a Cachix error: https://github.com/math-comp/analysis/runs/6725051905?check_suite_focus=true\r\n\r\nLooks like a cachix error... I reran it"},{"author":"proux01","date":"2022-06-03T12:37:16Z","comment":"Looks like you aren't luckyer than me :("},{"author":"CohenCyril","date":"2022-06-03T14:31:58Z","comment":"coq master looks broken for other reasons now :-/"},{"author":"proux01","date":"2022-06-03T14:42:59Z","comment":"I handled that in the HB port, let me fix it."},{"author":"proux01","date":"2022-06-03T16:55:40Z","comment":"This now works but with a few overlays. Let me backport them."},{"author":"CohenCyril","date":"2022-06-07T12:32:06Z","comment":"@proux01 great! For the record there is no need to copy meta-fetch and extra-lib anymore, cf https://github.com/math-comp/hierarchy-builder/blob/86c75aaf6e7517fcd4ddf4f7b0cdab850a06b46b/.nix/ocaml-overlays/elpi/default.nix#L7"},{"author":"proux01","date":"2022-06-08T11:11:13Z","comment":"CI for Coq master is finally back :tada: "}],"review_discussion":[],"tags":[],"commits":[{"author":"CohenCyril","committer":"proux01","hash":"319ee6f97fe798c2b03d3d78671dff86e2ba6b50","message":"Update nix toolbox","date":"2022-06-08T09:23:15Z"}]},{"author":"proux01","number":535,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":110,"deletions":40},{"file":"theories/ereal.v","status":"M","additions":110,"deletions":40}],"state":"merged","open_date":"2022-01-30T13:53:00Z","update_date":"2022-02-28T11:18:26Z","discussion":[{"author":"affeldt-aist","date":"2022-02-09T15:15:27Z","comment":"You maybe want to squash the commits."},{"author":"proux01","date":"2022-02-09T15:27:19Z","comment":"I'd rather not but if you prefer, I can."}],"review_discussion":[{"author":"affeldt-aist","file":"theories/ereal.v","date":"2022-01-30T14:11:13Z","comment":"What about having two lemmas instead?\r\n```\r\nLemma padde_eq0 (R : numDomainType) (x y : \\bar R) :\r\n  0 <= x -> 0 <= y -> (x + y == 0) = (x == 0) && (y == 0).\r\nProof.\r\nmove: x y => [x| |] [y| |]//; rewrite !lee_fin; first exact: paddr_eq0.\r\nby move=> x0 _ /=; rewrite andbF.\r\nQed.\r\n\r\nLemma nadde_eq0 (R : numDomainType) (x y : \\bar R) :\r\n  x <= 0 -> y <= 0 -> (x + y == 0) = (x == 0) && (y == 0).\r\nProof.\r\nmove: x y => [x| |] [y| |]//; rewrite !lee_fin; first exact: naddr_eq0.\r\nby move=> x0 _ /=; rewrite andbF.\r\nQed.\r\n```"},{"author":"proux01","file":"theories/ereal.v","date":"2022-01-30T14:16:17Z","comment":"I copied it from `addr_ss_eq0` https://github.com/math-comp/math-comp/blob/master/mathcomp/algebra/ssrnum.v#L2006\r\nand I must admit I found it quite convenient this way."},{"author":"affeldt-aist","file":"theories/ereal.v","date":"2022-01-30T14:39:21Z","comment":"Maybe we want them all."},{"author":"affeldt-aist","file":"theories/ereal.v","date":"2022-01-30T14:47:40Z","comment":"You dropped the `Proof.` command."},{"author":"affeldt-aist","file":"theories/ereal.v","date":"2022-02-06T10:12:18Z","comment":"```suggestion\r\nLemma nadde_eq0 x y : x <= 0 -> y <= 0 -> x + y == 0 = (x == 0) && (y == 0).\r\n```"},{"author":"affeldt-aist","file":"theories/ereal.v","date":"2022-02-06T10:12:39Z","comment":"```suggestion\r\nLemma padde_eq0 x y : 0 <= x -> 0 <= y -> x + y == 0 = (x == 0) && (y == 0).\r\n```"},{"author":"affeldt-aist","file":"theories/ereal.v","date":"2022-02-06T10:13:13Z","comment":"```suggestion\r\nLemma ndadde_eq0 x y : x <= 0 -> y <= 0 -> x + y == 0 = (x == 0) && (y == 0).\r\n```"},{"author":"affeldt-aist","file":"theories/ereal.v","date":"2022-02-06T10:13:27Z","comment":"```suggestion\r\nLemma pdadde_eq0 x y : 0 <= x -> 0 <= y -> x + y == 0 = (x == 0) && (y == 0).\r\n```"}],"tags":[],"commits":[{"author":"proux01","committer":"affeldt-aist","hash":"d75e8fc8959f0261600dbfca3f4176ec7096dd9a","message":"Add lemmas nadde_eq0, padde_eq0 and adde_ss_eq0","date":"2022-02-28T09:11:58Z"},{"author":"proux01","committer":"affeldt-aist","hash":"4445df9092085142daed8dbe12b955b99872a485","message":"Generalize some lemmas on abse from real to numDomain","date":"2022-02-28T09:13:57Z"},{"author":"proux01","committer":"affeldt-aist","hash":"41bce83b9f20e14e98c67b11314e9df2f586e922","message":"Generalize somme lemmas on mule from real to numDomain","date":"2022-02-28T09:13:59Z"},{"author":"proux01","committer":"affeldt-aist","hash":"cd0780c99ea2b9bece7f2b18b9ee5434e99bcc7c","message":"Add lemma realDe","date":"2022-02-28T09:15:24Z"},{"author":"proux01","committer":"affeldt-aist","hash":"a3659d69d867038daf8a6a5faa52621e2ea85178","message":"Add lemma realMe","date":"2022-02-28T09:16:44Z"},{"author":"proux01","committer":"affeldt-aist","hash":"c4088c39604d547e3d33464ac9fc8d0c7f56f1c3","message":"Update changelog","date":"2022-02-28T09:16:46Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"37cb370f8cae36dcbdcc93436c82b9d3607e9b4b","message":"nitpicking","date":"2022-02-28T09:47:30Z"}]},{"author":"proux01","number":534,"diff_summary":[{"file":"theories/topology.v","status":"M","additions":30,"deletions":30}],"state":"merged","open_date":"2022-01-29T15:27:56Z","update_date":"2022-02-05T02:24:39Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"proux01","committer":"proux01","hash":"10397fdec5ec0fa7cbc568756b248412be09188e","message":"Do not glue { to notations","date":"2022-01-29T15:42:12Z"}]},{"author":"thery","number":533,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":9,"deletions":8},{"file":"theories/trigo.v","status":"M","additions":9,"deletions":8}],"state":"merged","open_date":"2022-01-29T11:21:45Z","update_date":"2022-02-05T02:25:20Z","discussion":[],"review_discussion":[{"author":"proux01","file":"theories/trigo.v","date":"2022-01-29T15:03:42Z","comment":"spurious newline?"}],"tags":[],"commits":[{"author":"thery","committer":"thery","hash":"2be42e9cabede044c15a426eaf423eb12b6ec227","message":"Some fix in trigo","date":"2022-01-29T21:04:00Z"}]},{"author":"affeldt-aist","number":532,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":59,"deletions":31},{"file":"theories/ereal.v","status":"M","additions":59,"deletions":31},{"file":"theories/sequences.v","status":"M","additions":59,"deletions":31}],"state":"merged","open_date":"2022-01-29T04:03:41Z","update_date":"2022-02-10T09:51:43Z","discussion":[],"review_discussion":[{"author":"proux01","file":"theories/ereal.v","date":"2022-01-29T15:06:08Z","comment":"```suggestion\r\nLemma daddooe x : x != +oo -> -oo + x = -oo.\r\nProof. by case: x. Qed.\r\n\r\nLemma daddeoo x : x != +oo -> x + -oo = -oo.\r\n```"},{"author":"proux01","file":"theories/ereal.v","date":"2022-01-29T15:09:50Z","comment":"```suggestion\r\nLemma esum_ninfty (T : eqType) (s : seq T) (P : pred T) (f : T -> \\bar R) :\r\n  \\sum_(i <- s | P i) f i = -oo <-> exists i, [/\\ i \\in s, P i & f i = -oo].\r\n```\r\nIINM this is the most generic form, so I would drop the `seq` (same for the three others)"},{"author":"affeldt-aist","file":"theories/ereal.v","date":"2022-02-09T15:19:04Z","comment":"Yes, but there is already a `esum_ninfty` lemma. :-/"},{"author":"proux01","file":"theories/ereal.v","date":"2022-02-09T15:31:38Z","comment":"Maybe the current `esum_ninfty` lemma should be renamed to `esum_ord_ninfty`? (it doesn't seem to be widely used, so the renaming should be easy)\r\nI would prefer the most generic lemma to have the shortest name."},{"author":"affeldt-aist","file":"theories/ereal.v","date":"2022-02-09T15:48:21Z","comment":"That's exactly what I did in the next commit. :-)"},{"author":"proux01","file":"theories/ereal.v","date":"2022-02-09T17:17:20Z","comment":"That explains how you were so damn fast :laughing: "},{"author":"CohenCyril","file":"theories/ereal.v","date":"2022-02-10T10:15:19Z","comment":"I agree this is a better naming, but a more general version would be \r\n```suggestion\r\nLemma esum_pinfty (I : finType) (P : {pred I} (f : 'I_n -> \\bar R) : (forall i, f i != -oo) ->\r\n  (\\sum_(i | P i) f i == +oo) = [exists i in P, f i == +oo].\r\n```"},{"author":"CohenCyril","file":"theories/ereal.v","date":"2022-02-10T10:16:21Z","comment":"And rename `esum_pinfty` to `esum_pinftyP` which is a `<->` lemma"},{"author":"affeldt-aist","file":"theories/ereal.v","date":"2022-02-10T11:13:36Z","comment":"See PR #540 .\r\n"}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"57225c36a402f02fa9c91f278dd8a4a09fc7739e","message":"fixes #531","date":"2022-02-10T09:31:21Z"}]},{"author":"proux01","number":530,"diff_summary":[{"file":"theories/ereal.v","status":"M","additions":7,"deletions":0}],"state":"merged","open_date":"2022-01-25T09:18:07Z","update_date":"2022-01-28T00:12:54Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"proux01","committer":"proux01","hash":"1ea707bb159ed952452d39bc1f7a8a3f8c3e541a","message":"Comment on the order of notations in ereal scopes","date":"2022-01-25T09:17:08Z"},{"author":"proux01","committer":"proux01","hash":"1b449be7fac1c6f03b76668edbaca2c44f731b16","message":"Adding missing notation in ereal_dual_scope","date":"2022-01-25T09:19:39Z"}]},{"author":"affeldt-aist","number":529,"diff_summary":[{"file":"CHANGELOG.md","status":"M","additions":61,"deletions":53},{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":61,"deletions":53},{"file":"INSTALL.md","status":"M","additions":61,"deletions":53},{"file":"README.md","status":"M","additions":61,"deletions":53},{"file":"coq-mathcomp-analysis.opam","status":"M","additions":61,"deletions":53},{"file":"meta.yml","status":"M","additions":61,"deletions":53}],"state":"merged","open_date":"2022-01-24T14:35:54Z","update_date":"2022-01-24T14:54:31Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"e1fb1fccef570595af96e444a1a929d61d2eae4e","message":"changelog for version 0.3.13","date":"2022-01-24T14:52:51Z"}]},{"author":"proux01","number":528,"diff_summary":[{"file":".github/workflows/docker-action.yml","status":"M","additions":7,"deletions":7},{"file":"coq-mathcomp-analysis.opam","status":"M","additions":7,"deletions":7},{"file":"theories/trigo.v","status":"M","additions":7,"deletions":7}],"state":"merged","open_date":"2022-01-22T11:52:01Z","update_date":"2022-01-24T14:26:48Z","discussion":[{"author":"proux01","date":"2022-01-24T10:02:52Z","comment":"CI green here (it's a trivial one)\r\n"}],"review_discussion":[],"tags":[],"commits":[{"author":"proux01","committer":"proux01","hash":"9fdc694c72d6d2f9b90439773372652c7a2e0121","message":"Add %N for nat constants\n\nThis is in preparation of\nhttps://github.com/math-comp/math-comp/pull/841\n\nThis is backward compatible (it only ensures that natural number\nconstants will kee being interpreted in nat_scope when a number\nnotation will be added in ring_scope).","date":"2022-01-22T11:50:03Z"},{"author":"proux01","committer":"proux01","hash":"898806420c4b34631ffe39dcb25aee8150df6ef4","message":"[CI] Update","date":"2022-01-22T12:34:44Z"}]},{"author":"zstone1","number":527,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":207,"deletions":31},{"file":"theories/topology.v","status":"M","additions":207,"deletions":31}],"state":"merged","open_date":"2022-01-21T22:08:53Z","update_date":"2022-02-18T18:26:09Z","discussion":[],"review_discussion":[{"author":"CohenCyril","file":"theories/topology.v","date":"2022-01-27T23:56:20Z","comment":"```suggestion\r\nLemma compact_set1 (x : T) : compact [set x].\r\n```"},{"author":"CohenCyril","file":"theories/topology.v","date":"2022-01-27T23:56:37Z","comment":"```suggestion\r\nLemma uniform_set1 F (f : U -> V) (x : U) :\r\n```"},{"author":"CohenCyril","file":"theories/topology.v","date":"2022-01-27T23:57:21Z","comment":"```suggestion\r\nDefinition singletons {X : Type} := [set [set x] | x in [set: X]].\r\n```"},{"author":"CohenCyril","file":"theories/topology.v","date":"2022-01-27T23:57:35Z","comment":"```suggestion\r\n```"},{"author":"CohenCyril","file":"theories/topology.v","date":"2022-01-27T23:58:24Z","comment":"```suggestion\r\n  Filter F -> {ptws, F --> f} = {family @singletons U, F --> f}.\r\n```\r\n(if it does not work, we should fix the notation)"},{"author":"CohenCyril","file":"theories/topology.v","date":"2022-01-27T23:58:30Z","comment":"```suggestion\r\n```"},{"author":"CohenCyril","file":"theories/topology.v","date":"2022-01-27T23:58:42Z","comment":"```suggestion\r\nLemma ptws_cvg_compact_family F (f : U -> V):\r\n```"},{"author":"CohenCyril","file":"theories/topology.v","date":"2022-01-27T23:59:44Z","comment":"I wonder if you can reuse the `[locally P]` notation rather making an ad-hoc one."},{"author":"CohenCyril","file":"theories/topology.v","date":"2022-01-27T23:59:53Z","comment":"```suggestion\r\nDefinition precompact (C : set X) := compact (closure C).\r\n```"},{"author":"CohenCyril","file":"theories/topology.v","date":"2022-01-28T00:00:12Z","comment":"```suggestion\r\n  forall x (E : set (Y * Y)), entourage E -> exists (U : set X), \r\n    nbhs x U /\\ (forall f y, W f -> U y -> E (f x, f y)).\r\n```"},{"author":"CohenCyril","file":"theories/topology.v","date":"2022-01-28T00:02:08Z","comment":"Isn't `exists U, nbhx x U /\\ (forall y, U y -> P y)` equivalent (and more \"canonically expressed as\") `\\near x, P x`, for this kind of `P` ?"},{"author":"CohenCyril","file":"theories/topology.v","date":"2022-01-28T00:02:50Z","comment":"```suggestion\r\nLemma equicontinuous_subset (W V : set (X -> Y)) : \r\n```"},{"author":"CohenCyril","file":"theories/topology.v","date":"2022-01-28T00:03:47Z","comment":"```suggestion\r\nDefinition pointwise_precompact (W : set (X -> Y)):=\r\n  forall x, precompact (f @` W).\r\n```"},{"author":"CohenCyril","file":"theories/topology.v","date":"2022-01-28T00:04:02Z","comment":"```suggestion\r\nLemma pointwisePrecompact_precompact (W : set {ptws X -> Y}):\r\n```"},{"author":"CohenCyril","file":"theories/topology.v","date":"2022-01-28T00:05:25Z","comment":"```suggestion\r\nLemma uniform_pointwise_compact (W : set (X -> Y)): \r\n  compact (W : {family compact, X -> Y}) -> compact (W : {ptws X -> Y}).\r\n```\r\n?"},{"author":"zstone1","file":"theories/topology.v","date":"2022-02-12T20:13:08Z","comment":"I figured out a way to do it. Working with the definition of `precompact` is a bit nicer for this, because `precompact` respects subset in the right way. And conviently, `locally compact` and `locally precompact` are more-or-less interchangable. "}],"tags":[],"commits":[{"author":"zstone1","committer":"zstone1","hash":"24759a3d60fc51fa5c97d268f1d3067596f4243f","message":"adding basic notions for arzela ascoli\n\nUpdate theories/topology.v\n\nCo-authored-by: Cyril Cohen <CohenCyril@users.noreply.github.com>\n\nUpdate theories/topology.v\n\nCo-authored-by: Cyril Cohen <CohenCyril@users.noreply.github.com>\n\nUpdate theories/topology.v\n\nCo-authored-by: Cyril Cohen <CohenCyril@users.noreply.github.com>\n\nUpdate theories/topology.v\n\nCo-authored-by: Cyril Cohen <CohenCyril@users.noreply.github.com>\n\nUpdate theories/topology.v\n\nCo-authored-by: Cyril Cohen <CohenCyril@users.noreply.github.com>\n\nUpdate theories/topology.v\n\nCo-authored-by: Cyril Cohen <CohenCyril@users.noreply.github.com>\n\nUpdate theories/topology.v\n\nCo-authored-by: Cyril Cohen <CohenCyril@users.noreply.github.com>\n\nUpdate theories/topology.v\n\nCo-authored-by: Cyril Cohen <CohenCyril@users.noreply.github.com>\n\nUpdate theories/topology.v\n\nCo-authored-by: Cyril Cohen <CohenCyril@users.noreply.github.com>\n\nUpdate theories/topology.v\n\nCo-authored-by: Cyril Cohen <CohenCyril@users.noreply.github.com>\n\nUpdate theories/topology.v\n\nCo-authored-by: Cyril Cohen <CohenCyril@users.noreply.github.com>\n\nusing near syntax\n\ncleaned up precompact, adding docs\n\nfixing changelog\n\nfixing import\n\nmissed some linting\n\nnitpicking","date":"2022-02-18T17:47:02Z"},{"author":"zstone1","committer":"zstone1","hash":"3f6b278885be45e509b7c98f9c08c3a0caf93e1e","message":"fixing sections","date":"2022-02-18T18:13:58Z"}]},{"author":"affeldt-aist","number":526,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":12,"deletions":150},{"file":"theories/normedtype.v","status":"M","additions":12,"deletions":150},{"file":"theories/topology.v","status":"M","additions":12,"deletions":150}],"state":"merged","open_date":"2022-01-21T02:12:05Z","update_date":"2022-01-21T03:20:21Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"01f52d26891b910e179c6cb7689ce5a36be5ed76","message":"rm/restore outdated comments\n\n- fixes #503\n- fixes #521\n- fixes #522\n- fixes #523","date":"2022-01-21T03:16:15Z"}]},{"author":"CohenCyril","number":525,"diff_summary":[{"file":".dir-locals.el","status":"A","additions":16237,"deletions":1614},{"file":"CHANGELOG_UNRELEASED.md","status":"A","additions":16237,"deletions":1614},{"file":"_CoqProject","status":"A","additions":16237,"deletions":1614},{"file":"theories/altreals/realseq.v","status":"A","additions":16237,"deletions":1614},{"file":"theories/boolp.v","status":"A","additions":16237,"deletions":1614},{"file":"theories/cardinality.v","status":"A","additions":16237,"deletions":1614},{"file":"theories/classical_sets.v","status":"A","additions":16237,"deletions":1614},{"file":"theories/csum.v","status":"A","additions":16237,"deletions":1614},{"file":"theories/ereal.v","status":"A","additions":16237,"deletions":1614},{"file":"theories/functions.v","status":"A","additions":16237,"deletions":1614},{"file":"theories/lebesgue_integral.v","status":"A","additions":16237,"deletions":1614},{"file":"theories/lebesgue_measure.v","status":"A","additions":16237,"deletions":1614},{"file":"theories/mathcomp_extra.v","status":"A","additions":16237,"deletions":1614},{"file":"theories/measure.v","status":"A","additions":16237,"deletions":1614},{"file":"theories/normedtype.v","status":"A","additions":16237,"deletions":1614},{"file":"theories/realfun.v","status":"A","additions":16237,"deletions":1614},{"file":"theories/topology.v","status":"A","additions":16237,"deletions":1614}],"state":"closed","open_date":"2022-01-20T20:13:54Z","update_date":"2022-02-09T09:17:03Z","discussion":[],"review_discussion":[{"author":"CohenCyril","file":"theories/lebesgue_integral.v","date":"2022-01-26T13:14:22Z","comment":"These 3 hypotheses seem unnecessary (although the case analysis should probably occur inside the proof)"}],"tags":[],"commits":[{"author":"CohenCyril","committer":"CohenCyril","hash":"d5071fe096531405e6e61b6454522f7208ca0f5b","message":"Theory of partial functions and cardinality","date":"2022-01-19T14:32:40Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"45cfe7229a6c0857e89a48421ce15528485b7c84","message":"documenting functions.v (wip)\n\n- one forgotten notation in classical_sets.v\n- duplicated Reserved\n- fix one typo","date":"2022-01-21T07:46:25Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"03c0ce680d7f87d9fb0f9330dcb4019918e45ae5","message":"more doc (wip)\n\n- doc about {e,}classicType\n- complete doc in cardinality.v\n- lint","date":"2022-01-21T08:32:28Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"a874cb06a06775190ce878a6ae4dcd9d4dea1e8a","message":"minor additions to ereal.v","date":"2022-01-21T18:21:56Z"},{"author":"zstone1","committer":"CohenCyril","hash":"d120a7a1feea022ac3ef41dd8f517a828db09e95","message":"Products of Hausdorff spaces.  (#474)\n\n- using a better lemma to eliminate Eqdep_dec.eq_rect_eq_dec\r\n\r\nCo-authored-by: Cyril Cohen <CohenCyril@users.noreply.github.com>","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"cea4bcacfb74bbf5e5bbdc77ffffe5501b766fcd","message":"remove old comment about ring with abs. val.","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"7e0bf4c5459c6d91b11b2de6260f1c0a18c4817f","message":"fixes #515","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"218e44e02cbbbf020f7d5305b3e93d367d206c1c","message":"add .dir-locals.el for company-coq symbols","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"607d331889c310af34ec7e10bd5a3c67826e15b0","message":"lemmas about ereal\n\n- case analysis for x * y = oo\n- about abse and fin_num","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"06ffcaafd1b05d8e51feeebc995b913ab6eedaf9","message":"rm/restore outdated comments\n\n- fixes #503\n- fixes #521\n- fixes #522\n- fixes #523","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"1587f17b6e7a00772eadf66ecae78f3c63724e7a","message":"changelog fix","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"c7798073d5ebf193e87a24602cbd3930aa760bdd","message":"more measure theory stashed in `measure_wip.v`\n\n- fix bug: One should never put an HB.instance on a variable and HB must comp","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"610f7e74e5e080bcd5b8d6b4b73aee09fada88a1","message":"adapt to use mkset\n\n- maybe expose a typeclasses inference problem","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"b8570338844453fd94c7e3addd9431cd5e9d21c9","message":"adapt to new interval definition","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"9afbf415f690fb087feeba7a423d481aa9c4e535","message":"simplify definition","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"1a0e8443089e6c27136041d8361aabcac7bdc60e","message":"various lemmas about intervals\n\n- RFC","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"00e379255866dc4a03eda142617074c08beb1751","message":"sets of intervals form a ring of sets","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"3e20268912d54d773790cf81b93ed07045cfc350","message":"tentative def of Lebesgue measure on ring of sets","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"83e226da82ab37573f61556b1a4f3dec9fdd91b0","message":"length_itv is additive\n\n- to be cleaned","date":"2022-01-21T18:21:56Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"fd7541d1e5066624da2d6834644778a10053735b","message":"wip trivIset","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"fc39343568da7bf9258ae545aa26ac04194f6b53","message":"wip","date":"2022-01-21T18:21:56Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"2b5505b159029e2f026f6a2b2c677e20dc261487","message":"Reproving length_itvUitv in another way","date":"2022-01-21T18:21:56Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"47aa0deff4e1b53507b2eba4dcba32ad71d5e5e8","message":"Better length measurement\n\n- length_itv -> hlength \\o set_of_itv","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"fc1fd563a9b2435ff5e4812e0a13bdc2dcef4c17","message":"lemma le_hlength\n\n- intermediate lemma le_Rhull","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"aec3d7d0c9c83f070b29b97e5d26b18c11f526a1","message":"lemma hlength_itvU\n\n- cleaning wip","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"c50ad53a224087b41261f82a5753aa8eb592fbb9","message":"prove hlengthUset","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"c5613d65f78ccc13b79ba2c3dbe00d0298fe7171","message":"length is sigma-finite","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"21d00ee724f1379f16343c8181d78ca6d5580eb7","message":"length is additive","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"9b40681191f8658fb730b96ad2518891f4d209b4","message":"first step towards length_semi_sigma_additive","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"e2141f4fb2120daacb9b9f59948501fff102dacd","message":"semi-sigma-additive for intervals","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"c3039974eda2b16cdf2c389e960d36ebac6e3b21","message":"only sigma-sub-additivity left","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"06aefe904f77dbb45b36e0492bd82491ee1cd976","message":"axiom free","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"a18020cbada2856d3a67abb76b8e39127bedb1cf","message":"cleaning\n\n- documentation\n- [sset of ...] notation for simple sets\n- remove some unused lemmas\n- memo","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"08908e6a1b86d83682221e37d4fa5f55dc604b83","message":"fixes\n\n- fix changelog after rebase\n- renaming following caratheodory PR\n- adapt to more recent HB versions\n- adapt measure_wip to the new master and csum.v\n- duplicate uncurry definition for the CI","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"4e753dddb8bafb025bff3946a4c33c12d96ac9c7","message":"using only normrzE instead of four lemmas\n\nCo-authored-by: Kazuhiko Sakaguchi <pi8027@gmail.com>","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"c7e7295a43590eb4837d178e382233aa05c62313","message":"rebase and cleaning","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"dfd3dcda49ad532c4f22e36599f7593bb771d7d6","message":"use xget instead of pselect in length","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"0a64d0e69c42cbc1bfa1d743a952bd9ca1b774e0","message":"cleaning and progress\n\n- tentative proof of uniqueness of measures\n- isolate reindexing lemmas\n- generalization of a few intermediate lemmas\n  that were specialized to slength for no reason\n  (like monotonicity)\n- etc.","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"5aae1da26fe1e2a27ebb6217b2e11f5aad431a88","message":"add the structure of algebra of sets\n\n- rename factory isRingOfSets to isRingAlgebraOfSets","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"deaf7db58fc2317bccaa915d16924eff126a3773","message":"tentative proof of uniqueness of Hahn extension","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"d778294d7fede9bbd76d01c7f59b4790cdf3699f","message":"adde_undef -> adde_def","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"d44971fe681ab27120de091a314e6c1fd1369ac8","message":"use (_ <= _)%O instead of pselect in decompose","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"f4d0d81ec2f3e49b291b9b87de24f3d227c415b6","message":"minor cleaning and fixes\n\n- simplify the expression of lt_itv","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"bfaae04aaa67a6b6a4e9f4cdfff73e896d8fd827","message":"using a modified version of epsilon_trick\n\n- from PR #395 (in progress)","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"4eeca1890ff6d42cfd5b0e9d92f39d45c73005d4","message":"minor cleaning","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"b329954ce0c9c69f6c5422194f43e3aa3b697c7f","message":"measurableType for \\bar R","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"0c351ce40fe261cf937300392bbbaa36e814283a","message":"rebase","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"cc334c4f8df268f54d957b13816eb2309dd4a338","message":"ereal_lebesgue_measure\n\n- to be cleaned","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"cb287333d704fcd101d591cb6c40ba664f708ba3","message":"measurable_fun and generated sigma-algebras","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"40fa6ea2a3bc38e3b049250730706fa459a4b4fc","message":"equivalent generators for measurableR and measurableRbar","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"b6dfd696e0b23d553961f4d819531976fc5a544e","message":"minor cleaning","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"0a5f8cd45a5906d1d27d19832d57b0ecc9721df3","message":"lemmas about measurable functions","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"b3938f3cd4aa0175c12e73479ca214b662bd2534","message":"more lemmas about measurable functions","date":"2022-01-21T18:21:56Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"64c831ba0e632725478b95172c9cc39aa12ea7f0","message":"wip refactor","date":"2022-01-21T18:21:56Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"ad3e8782f60b739b6c0f11e72658f4b6008c65fb","message":"changing autoexpansion setting of set1, setT, setI, etc","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"bf10479b676ba0db45750cf306a143de0f3ee386","message":"lemmas about measurable_fun and norme/EFin","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"c24820d1cdedd21e2c79759e8a4e76752f08533b","message":"cleaning\n\n- document the notation [set` ...]\n- remove dead code\n- rename:\n  + decompose into decompose_sorted\n  + Decompose into decompose\n  + decomposition_of into is_decomposition\n  + rename measurableP to are_measurable_sets\n- replace:\n  + [|] := boolP with eqVneq or asboolP when possible\n- move:\n  + measure_setD to measure.v\n  + move defs and lemmas from simple_function","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"c2651e7be182330f84f914a11ac31ec3240c967e","message":"minor generalizations\n\n- renaming (measureD, measureDI)\n- generalization (has_lbound_itv, has_ubound_itv, etc.)\n- removing dead code","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"122e8c0db935318289d9179ad9bbfd45f104ec15","message":"documentation, formatting","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"4a5f5dc3eb84444fd52dc28fcaec5df364e985be","message":"small generalizations\n\n- from numDomainType to ordered types\n- using Interval expressions","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"24347850eb00f81920991c2982a942c2c3e779f3","message":"more lim_{sup,inf}\n\n- introduce definitions sups, infs, esups, einfs to\n  clarify\n- more lemmas\n- other minor cleaning","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"a70fa01ec28dfa6dbf1d906d2799e2761768e618","message":"lim_infD, lim_supD\n\n- minor addtions and cleaning","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"b23516b055dfd19a538e62f2c608e929d246938d","message":"minor renaming and update wrt master","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"ea406efa4cf41ccb24893373d3f3defdb3ae6034","message":"generalize the measurability criterion\n\n- also generalize are_measurable_sets to handle\n  sigma-algebra on subsets\n- other minor generalization","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"fcb065a170d5c11af8bd9cb82bf992b14f15fa53","message":"abse, maxe, measurable_fun lemma","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"889192f3d00477ec016b845fc36c9f872f26727c","message":"cleaning\n\n- rm Rbar substrings in identifiers\n- renaming (miditv, etc.)\n- fix/complete documentation\n- remove a few lemmas about itv\n- rebase","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"039944a9639b45c13c299e33cb7ed7bffbb0ccb6","message":"cleaning\n\n- simpify neitv lemmas","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"9185500faf0a4ee3becc4f25ab82b63616b1d8de","message":"first lemmas about product of measurable spaces\n\n- product of measurableType\n- monotone classes lemma\n- measurable/partial functions over a product of measurableTypes","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"8e8df6dd661793806cfe05e250d40c4e8f7e5aa3","message":"minor updates and additions","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"ae4d1321a70002a139a592ca7dba72436cd1e20e","message":"alternative proof of measure uniqueness\n\n- remove a few lemmas about neitv\n- minor simplifcations","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"a15dab9de97ff51c14025af2e865549f4ca430f4","message":"more lemmas about measurable functions\n\n- measurable_funM\n- emeasurable_fun_min","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"63fa4967928386e587ed81892913bb3394ebc5c6","message":"minor renaming","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"ab70b437e732a652db5eec9960070fefd3522c31","message":"minor cleaning\n\n- do not use in_setE\n- avoid unfolding preimage\n- minor lemma addition","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"286e968830bd37a98c927ef7a7369720e3a648a3","message":"minor generalizations","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"d565e36e2b02969d41096642a26e8a5510327f50","message":"tentative definition of simple functions","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"72e004e9d14b0183419cc89873f3b81bb50475d7","message":"sintegralK","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"742eebdb03be6897b28ef93a6c36ecb5a1ab318d","message":"homo property for sintegral\n\n- change sfun to have a codom without unreachable values","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"94181e66fa7d97fa059a926b150a5ecdd97661bc","message":"propriete de limite croissante de l'integrale\n\n- to be cleaned","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"1c95eb458030c2b29cf8197fc2ca3e74b9b21f12","message":"integral is limit of nondecreasing simple functions","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"a79d14b25c9ae827733bf52bef5b5b98841f877b","message":"approximation theorem and integralK (wip)\n\n- completed but requires serious cleaning","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"dd4b9567833a9a6fc9bd803714a741e8787b7402","message":"rebase","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"29b8f6deed415dc426c28b9d0e69ae092ad8cece","message":"integralD","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"344aac01d055692b415252ebada9975c0ef265d5","message":"le_integral","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"eb61c9c753eb41c9dc5210a67b82a576b53e7b95","message":"monotone convergence theorem","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"57265fd84c2fbdbf0f8027f3cc2de0b415ba8cd6","message":"generalize integration with a restriction domain\n\n- renaming and cleaning in progress","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"66153a06fb8eb58819a23c7274eb2e64e31858fd","message":"Fatou's lemma (tentative)","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"cf96428ce53ad96d9bbee9cd4387c8b82ddf9ba0","message":"fix","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"86f31c5412314aa8f1b00e0dae44d8826d89cdab","message":"first take at dct","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"28a1a1ea52cdb86c6dd6605d37724eb9fe78d80b","message":"rebase, formatting","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"557b26ff505a4ebfc3fd4e076e7e1440fa39230c","message":"do without point_cvg, typo","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"294b2da1bbacb0ad74bacff10ea131df13915427","message":"first take at the 2nd part of dct\n\n- use predU1P, apply:, rm some R^o","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"3a247c4583b81ae438551b66ef2eb324e5afd52e","message":"le_norme_integral\n\n- also generalization of integralN","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"b30db341a4c63fcdbf4fb6fc336c7cfe383e02e7","message":"generalize fatou to any measurable domain","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"66f02301e439fba0238799ca01d9a84ffa6df026","message":"generalize ge0_integralM","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"dd771030644c75a937c4fb52bb5243367a9de61d","message":"linearity of integral\n\n- integralM, integralD","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"b5b51dab729cc8be503783e513f2e96710b697b9","message":"dominated convergence theorem\n\n- to be generalized with ae hypotheses","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"a59667737e01ec81359d30b9b664d47b05dad81d","message":"prove that an integrable function is ae fin_num","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"80eca60fbc84a0feca8862525dff762677976d03","message":"start definition of product of measures\n\n- proof that a section is measurable\n- start proof of the so-called fundamental lemma","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"d78024de01c55461de9b5155aded65f3cf834703","message":"tentative formalization of product measure","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"eff12b7d711173bdc3e570ab9408d510ed2c70b3","message":"simplications wrt simple functions","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"7e949990eb40ecf8a5b1d2a4bee0bf56165d1665","message":"first take at fubini tonelli","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"c9e56b96c80ffd4f5f43b80aeff1d81b68cde3d4","message":"lemmas and notation\n\n- tentative notation for integral\n- lemmas about ae equality\n- markov-tchbebychev, etc.","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"2f2b81feb761ba4a1a9f902a6397946f1369e773","message":"corollary 1.9b and better \\int_ notation","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"bb39b75575808465b83834a900c3a756e6de0845","message":"first take at Fubini's theorem","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"39d899f66c75c940998e887ec9dfbc11153655eb","message":"fubini's theorem","date":"2022-01-21T18:21:56Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"7bf58e06744ad8f1c9ff65eda9acee3979cac4dc","message":"remove predcondition for measurability of addition of ereal funs","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"bcef7be1b105b5c0a58894e3ebc0e4914d52aa88","message":"generalization of measurability of functions product\n\n- minor cleaning","date":"2022-01-21T18:21:56Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"7cf08f485afa80cb8620ca1c2bcf254e80022915","message":"simplify fubini3","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"d725cf6b4e606571652c4bf778883236f36c5512","message":"minor generalizations","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"23307284fe0485726cd8eec58fa5ea015edd9db2","message":"generalization of the dct, notations","date":"2022-01-21T18:21:56Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"b829cf48d3bbc1b6bb3fa4e69ffd29534987974e","message":"cleaning and simplifications","date":"2022-01-21T18:21:56Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"d5b6dd922e30ca18a8bcc1c9ddf32d0d53a678cb","message":"wip","date":"2022-01-21T18:28:39Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"08da5046bd8ce843c3a0fbb708bac42ae5890143","message":"adapt to functions and cardinality","date":"2022-01-21T18:28:40Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"a50905353df815ffe2c6a048764ef5ea4bc08a07","message":"fix fset notation","date":"2022-01-21T18:28:40Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"b1e3b477489a2c037ca509cc444a542caec5a0d1","message":"fix fset notations","date":"2022-01-21T18:28:40Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"45376735bfc3bd828d52e002ec2bd93c43299aad","message":"Adapt cvd + fubini proofs","date":"2022-01-21T18:43:09Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"aa8681472a6b78bfa12886ed22b8880ea91fc129","message":"new simple functions form a ring","date":"2022-01-21T18:43:36Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"f820ce58f5710d40e10a98593bfe752f385f2c7f","message":"adding a point everywhere","date":"2022-01-21T18:50:02Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"483c415498cee44470a9014f3b20ae4b0b661223","message":"swap domain side","date":"2022-01-21T19:09:20Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"cb0effbd868decc5745374289d8eb66497b21258","message":"dispatch fset_set to cardinality","date":"2022-01-21T19:09:21Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"3c98065711b8d5d2e5b0ed5e5a045a92ec1d5e5a","message":"progress in change the def of simple functions in lebesgue integral","date":"2022-01-21T19:09:22Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"c9f920ed9e7462540dae2f9c3144a17f505cb6f1","message":"fix nnsfun notation","date":"2022-01-21T19:10:41Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"7984520497a79240556e7f1914adaa77c143c36f","message":"fix nnfun notation","date":"2022-01-21T19:16:27Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"ebbd39a9b6fbdc4f26dc4d7fe7937e67f0810781","message":"lemma sintegralrM","date":"2022-01-21T19:16:28Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"65fee649120de9e43f3694f5181839591a28b02c","message":"ring structure by subtyping","date":"2022-01-22T01:13:19Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"e5823a8e474c91d6b57e97d21e82472dc55dfa9e","message":"minor fix","date":"2022-01-22T11:14:47Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"0cc964cdf6f1fbeabb28345ab60cf4bd89c685f6","message":"wip","date":"2022-01-24T08:35:01Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"9df0f7f86e2eb5dc47af12df773936af4c6068e6","message":"Je pousse tout","date":"2022-01-24T10:47:10Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"42e573cc19c010540ca15c92e5eb028625eb0892","message":"measurable hierarchy is rebased on pointedType","date":"2022-01-25T16:16:46Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"0495eea04629861e25cf1e5fadd4110e8608f7bf","message":"tentative definition for fs sums","date":"2022-01-26T12:26:31Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"c54dbc30f683390ad6346bea6b15fe9d59c34bc6","message":"wip","date":"2022-01-27T10:18:21Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"cbf70ca7943ba96e0e4171fea6cf9ed12ec2c19f","message":"reindex_inside\n\n- other minor simplifications and additions\n- this complete sintegralrM","date":"2022-01-28T04:43:26Z"}]},{"author":"affeldt-aist","number":524,"diff_summary":[{"file":"theories/normedtype.v","status":"M","additions":0,"deletions":12}],"state":"merged","open_date":"2022-01-20T04:03:26Z","update_date":"2022-01-21T02:01:41Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"3c2b3e6150bf3f294131faaaa9179ef56b3e2888","message":"remove old comment about ring with abs. val.","date":"2022-01-20T04:02:41Z"}]},{"author":"affeldt-aist","number":520,"diff_summary":[{"file":"theories/boolp.v","status":"M","additions":0,"deletions":79}],"state":"merged","open_date":"2022-01-20T03:28:19Z","update_date":"2022-01-21T02:06:58Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"019f68441c0247bfc247267b2c33e4657d1f7291","message":"fixes #515","date":"2022-01-20T03:27:54Z"}]},{"author":"affeldt-aist","number":517,"diff_summary":[{"file":".dir-locals.el","status":"A","additions":15,"deletions":0},{"file":"CHANGELOG_UNRELEASED.md","status":"A","additions":15,"deletions":0}],"state":"merged","open_date":"2022-01-18T15:12:12Z","update_date":"2022-01-21T02:15:05Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"14703df69a52f5f6d142eab6f117c3fdf1f053a5","message":"add .dir-locals.el for company-coq symbols","date":"2022-01-20T09:58:43Z"}]},{"author":"affeldt-aist","number":516,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"A","additions":683,"deletions":18},{"file":"_CoqProject","status":"A","additions":683,"deletions":18},{"file":"theories/constructive_ereal.v","status":"A","additions":683,"deletions":18},{"file":"theories/ereal.v","status":"A","additions":683,"deletions":18},{"file":"theories/lebesgue_integral.v","status":"A","additions":683,"deletions":18},{"file":"theories/lebesgue_measure.v","status":"A","additions":683,"deletions":18},{"file":"theories/probability.v","status":"A","additions":683,"deletions":18}],"state":"open","open_date":"2022-01-17T09:33:17Z","update_date":"2023-03-28T15:51:07Z","discussion":[{"author":"zstone1","date":"2023-03-06T16:40:27Z","comment":"I'm ok with the remaining details here. Removing the specialized notations is great. Leaving LP spaces as pseudo-normed is fine (we can always quotient later. I can build the generic proofs that a quotient by `close` preserves most important structures).\r\nAnd for everything else, I have no constructive suggestions. So I'm fine to merge this, and improve incrementally. \r\n\r\nIn particular, there are a bunch of statements that will need to be generalized to be AE, but that can be done as needed. "},{"author":"affeldt-aist","date":"2023-03-10T06:40:34Z","comment":"Thank you for your comments.\r\nWe understand that some lemmas are not yet in their most general form\r\nand we will issue about it upon squash-merging.\r\n(In particular, `expectation_le` should be AE and `Lspace` should be\r\nquotiented.)\r\nWe will have the opportunity to go back to this file in the near future\r\nsince there is work in progress relying on it\r\n(https://github.com/math-comp/analysis/pull/769 and https://github.com/math-comp/analysis/pull/790).\r\n\r\n"},{"author":"affeldt-aist","date":"2023-03-17T08:42:51Z","comment":"> (In particular, `expectation_le` should be AE and `Lspace` should be quotiented.)\r\n\r\nThe last commits (kind of) address these two issues.\r\n\r\n"}],"review_discussion":[{"author":"affeldt-aist","file":"theories/probability.v","date":"2023-01-21T12:21:02Z","comment":"This should be generalized to other exponents."},{"author":"zstone1","file":"theories/probability.v","date":"2023-02-03T20:28:03Z","comment":"Why do we want dedicated random variable notations? My guess is that we can explicitly make `{mfun P >-> R}` into an `comUnitAlgebra` over `R`, and inherit all these notations and theorem.  "},{"author":"zstone1","file":"theories/probability.v","date":"2023-02-03T20:31:19Z","comment":"Do we have good machinery for \"almost everywhere\" statements yet?"},{"author":"zstone1","file":"theories/probability.v","date":"2023-02-03T20:34:45Z","comment":"LP spaces are annoying to formalize. Sometimes you want it like this. Other times you want to quotient by \"equal almost everywhere\" to make it a proper normed space. Should we make a distinction at this stage? "},{"author":"zstone1","file":"theories/probability.v","date":"2023-02-03T20:37:33Z","comment":"I would have expected `=` instead of  ``<=``. Is this some annoying detail about LP spaces I'm forgetting? "},{"author":"zstone1","file":"theories/probability.v","date":"2023-02-03T20:48:06Z","comment":"Oof. This proof style requires a lot of patience to succeed. Is there a reasonable canonical structures approach to address this?"},{"author":"zstone1","file":"theories/probability.v","date":"2023-02-04T04:16:28Z","comment":"That's subtle... using `(k < oo)` even though `X` might have finite range isn't great. Part of the indexing issues, I guess. "},{"author":"zstone1","file":"theories/probability.v","date":"2023-02-04T04:17:06Z","comment":"Here too, proving all these measurability side conditions is kinda cumbersome. Automation for this is definitely out of scope for this review though."},{"author":"zstone1","file":"theories/probability.v","date":"2023-02-04T04:47:04Z","comment":"Interesting. I had an incarnation of this problem in my cantor space diff. Where I want some set to carry an indexing.\r\n\r\nIn a textbook proof, the proof will frequently start with\r\n\r\n> Since `A` is countable, let `a_1,...,a_n,...` be its members\r\n\r\nbut honestly I'm having trouble formalizing these arguments myself. It's workable, but the proofs can quickly turn into monsters. One _potential_ approach might be with a this subtype theory business. Where we would make `A` into a subtype of `nat` with the indexing as its embedding. However I'm not sure it will improve things, and it won't be available anytime soon. "},{"author":"CohenCyril","file":"theories/probability.v","date":"2023-03-06T17:06:15Z","comment":"Why do you redefine/alias exponential and absolute value?"},{"author":"CohenCyril","file":"theories/probability.v","date":"2023-03-06T17:17:05Z","comment":"I think this must be correct but that's it's nontrivial because one must prove f is measurable iff f^p is."},{"author":"zstone1","file":"theories/probability.v","date":"2023-03-07T15:05:56Z","comment":"Apparently there are some pathological counter examples. If `A` is a non-measurable subset of `T`, then `f = X_B - X_(~B)`  (the characteristics functions) is non measurable. But it only takes values of 1 or -1. So `f^2` is constant, therefore measurable.\r\n\r\nSo these measurability conditions are more sensitive than I realized. I guess this lemma is good as it is. "},{"author":"t6s","file":"theories/probability.v","date":"2023-03-08T01:37:29Z","comment":"I often think a lot of such subtle counterexamples should be formalized and recorded as a part of formalization.\r\nWhat do you think?  If this is a good idea, which file should I put such (counter)examples in?"},{"author":"zstone1","file":"theories/probability.v","date":"2023-03-08T18:41:31Z","comment":"It's a good question. Mathcomp analysis doesn't have a lot of this kind of thing right now. But I agree that it should. Counter-examples help validate that our formalizations are correct. Maybe this is a good topic for the next analysis meeting? "},{"author":"affeldt-aist","file":"theories/probability.v","date":"2023-03-09T08:00:37Z","comment":"We have a definition in `measure.v` and several lemmas in `lebesgue_integral.v`.\r\nAre you thinking about generalizing this lemma?"},{"author":"affeldt-aist","file":"theories/probability.v","date":"2023-03-09T08:01:48Z","comment":"We'd like to do the quotienting later (as suggested by a more recent comment of yours)."},{"author":"affeldt-aist","file":"theories/probability.v","date":"2023-03-09T08:06:34Z","comment":"Maybe counter-examples could stay in the file but should be well-identified since they are less likely to be reused like a standard library lemma. (Maybe put them in a `CounterExample` module or having a naming scheme for distinguishing them?) "},{"author":"zstone1","file":"theories/probability.v","date":"2023-03-09T18:05:52Z","comment":"Yeah, we'll want generalized versions of these. For example, when working with radon-nikodym derivatives, we only know about it's behavior AE. But it can be improved as needed. "},{"author":"affeldt-aist","file":"theories/probability.v","date":"2023-03-10T06:31:47Z","comment":"We removed the alias for the absolute value (and use `normr` instead).\r\nWe were using an alias for exponential because inference did not seem to work when using `@GRing.exp R ^~ n` instead. However, we changed the code in a way such that the instance is not need anymore."},{"author":"affeldt-aist","file":"theories/probability.v","date":"2023-03-10T06:37:46Z","comment":"Not sure. In the meantime, we introduced lemmas such as:\r\n```coq\r\nLemma compreBr T (h : R -> \\bar R) (f g : T -> R) :\r\n  {morph h : x y / (x - y)%R >-> (x - y)%E} ->\r\n  h \\o (f \\- g)%R = ((h \\o f) \\- (h \\o g))%E.\r\n```\r\nto rely less on inputting intermediate steps by ourselves.\r\n"},{"author":"proux01","file":"theories/ereal.v","date":"2023-03-16T15:14:33Z","comment":"Couldn't this be generalized to any set rather than `` `[0, +oo[ ``?"},{"author":"affeldt-aist","file":"theories/ereal.v","date":"2023-03-17T06:40:46Z","comment":"You are right. Thanks."},{"author":"proux01","file":"theories/ereal.v","date":"2023-03-27T14:10:29Z","comment":"Maybe this should go in `constructive_ereal.v` (the part not dependening on classical that could eventually be backported to mathcomp)"},{"author":"proux01","file":"theories/probability.v","date":"2023-03-28T15:51:06Z","comment":"I just happened to find use for the two following small lemmas, so just dropping them here in case they are useful to anyone\r\n```suggestion\r\n\r\nLemma variance_ge0 (X : {RV P >-> R}) : (0 <= 'V_P[X])%E.\r\nProof. by apply: expectation_ge0 => x; apply: sqr_ge0. Qed.\r\n\r\nLemma variance_cst r : 'V_P[cst r] = 0%E.\r\nProof.\r\nrewrite /variance expectation_cst/=.\r\nrewrite [X in 'E_P[X]](_ : _ = cst 0%R) ?expectation_cst//.\r\nby apply/funext => x; rewrite /GRing.exp/GRing.mul/= subrr mulr0.\r\nQed.\r\n```"}],"tags":[{"tag":"enhancement :sparkles:","description":"This issue/PR is about adding new features enhancing the library"}],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"1333b7d1b487d61ad9e069fb6057e7333068f11c","message":"first take at probability theory\n\nCo-authored-by: Takafumi Saikawa <tscompor@gmail.com>\nCo-authored-by: Alessandro Bruni <alessandro.bruni@gmail.com>","date":"2023-03-17T06:58:33Z"},{"author":"hoheinzollern","committer":"affeldt-aist","hash":"7755e13ac8cfec3650f2ab6f737f4a5c36ffc179","message":"Lemma probability_fin","date":"2023-03-17T06:58:33Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"f701b2ebd904615b07b6468020b580789041eda8","message":"better definition of discrete random variable\n\n- markov, chebyshev","date":"2023-03-17T06:58:33Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"1168e2f53f51bdda1b585f8a2b47c12b3d1933af","message":"fixes, cleaning","date":"2023-03-17T06:58:33Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"2140b0e03e32b3ab2e9ac707785dc786b63b94d2","message":"get rid of specialized notations","date":"2023-03-17T06:58:33Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"9ec11293c63bf4e119cde14c7974ed6f36d58718","message":"get rid of specialized notations (cont'd)","date":"2023-03-17T06:58:33Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"399f7fd3fdd0f2ca90006d64f4830986be183b61","message":"generalize probability_integrable_cst","date":"2023-03-17T06:58:33Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"040387d67483a0f7d8e0099f32fb8cc6be5d50c3","message":"rm 'E notation, mabs and mexp","date":"2023-03-17T06:58:33Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"0431402490697500ba050b26d92e871f7347e00d","message":"wip","date":"2023-03-17T06:58:33Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"33b7a2d97a46237cb8b16010894575a48728ca40","message":"changelog","date":"2023-03-17T06:58:33Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"a840005797aba4d88ecb7f0a2ef2a1f906582cf5","message":"fix changelog","date":"2023-03-17T06:58:33Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"30fbf2d59224dfe9f69324f283fb306ee0b4c2b3","message":"gen expectation_le","date":"2023-03-17T06:58:33Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"c5a3e75cb310d74922ae8ee45f50f71a76cb1ffc","message":"generalize le_er_map","date":"2023-03-17T06:58:33Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"71705b899f76a4c20200e8a6fda5451e64f18887","message":"tentative def of Lp spaces using quotient","date":"2023-03-17T08:39:32Z"}]},{"author":"affeldt-aist","number":514,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":39,"deletions":8},{"file":"theories/ereal.v","status":"M","additions":39,"deletions":8}],"state":"merged","open_date":"2022-01-17T03:44:16Z","update_date":"2022-01-21T01:14:38Z","discussion":[],"review_discussion":[{"author":"proux01","file":"theories/ereal.v","date":"2022-01-17T12:22:34Z","comment":"Bikeshedding: everywhere else in the file, notations are first put in ereal_dual_scope then in ereal_scope, maybe we could keep the same ordering here (although it has no impact considering the two scopes are different)."},{"author":"proux01","file":"theories/ereal.v","date":"2022-01-17T12:26:41Z","comment":"I'm not fond of the name which may suggest this is the main property of `mule_def`.\r\nMaybe `neq0_infty_mule_def`? It also looks like we should also add `x \\isn't a fin_num -> y != 0 -> x *? y`.\r\n"},{"author":"CohenCyril","file":"theories/ereal.v","date":"2022-01-17T12:31:17Z","comment":"Or `mule_def_neq0_infty`, and indeed `mule_def_infty_neq0` should also be added."},{"author":"CohenCyril","file":"theories/ereal.v","date":"2022-01-17T12:32:57Z","comment":"`mule_def_fin`"},{"author":"affeldt-aist","file":"theories/ereal.v","date":"2022-01-18T14:42:45Z","comment":"Ok. It only seemed strange to me to start with the longer variant."},{"author":"proux01","file":"theories/ereal.v","date":"2022-01-18T14:47:46Z","comment":"Makes senses. It would be fine for me to change this everywhere (in a separate commit)"},{"author":"CohenCyril","file":"theories/ereal.v","date":"2022-01-18T15:39:59Z","comment":"Except sometimes, the precedence *does* matter. Be careful please."},{"author":"affeldt-aist","file":"theories/ereal.v","date":"2022-01-18T15:41:54Z","comment":"Even when scopes are different?"},{"author":"proux01","file":"theories/ereal.v","date":"2022-01-18T15:52:57Z","comment":"The ones above are definitely fine, but we should indeed double check with +oo for instance."},{"author":"CohenCyril","file":"theories/ereal.v","date":"2022-01-18T22:49:48Z","comment":"```suggestion\r\nLemma mule_def_neq0_infty x y : x != 0 -> y \\isn't a fin_num -> x *? y.\r\nProof. by move: x y => [x| |] [y| |]// x0 _; rewrite /mule_def (negbTE x0). Qed.\r\n\r\nLemma mule_def_infty_neq0 x y : x \\isn't a fin_num  -> y != 0 -> x *? y.\r\nProof. by move: x y => [x| |] [y| |]// _ y0; rewrite /mule_def (negbTE y0). Qed.\r\n```"}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"665dd3e5fab38665e5dafcff9298315b61ff4b39","message":"minor additions to ereal.v","date":"2022-01-19T07:51:00Z"}]},{"author":"affeldt-aist","number":513,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":7,"deletions":6},{"file":"theories/ereal.v","status":"M","additions":7,"deletions":6}],"state":"merged","open_date":"2022-01-11T04:09:57Z","update_date":"2022-01-12T07:54:29Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"3aedc1295ed5594641ab76841b3a3e92413e5145","message":"fixes #512","date":"2022-01-11T04:09:15Z"}]},{"author":"CohenCyril","number":511,"diff_summary":[{"file":"_CoqProject","status":"A","additions":1380,"deletions":501},{"file":"theories/Rstruct.v","status":"A","additions":1380,"deletions":501},{"file":"theories/derive.v","status":"A","additions":1380,"deletions":501},{"file":"theories/ereal.v","status":"A","additions":1380,"deletions":501},{"file":"theories/landau.v","status":"A","additions":1380,"deletions":501},{"file":"theories/lebesgue_integral.v","status":"A","additions":1380,"deletions":501},{"file":"theories/lebesgue_measure.v","status":"A","additions":1380,"deletions":501},{"file":"theories/measure.v","status":"A","additions":1380,"deletions":501},{"file":"theories/nngnum.v","status":"A","additions":1380,"deletions":501},{"file":"theories/normedtype.v","status":"A","additions":1380,"deletions":501},{"file":"theories/posnum.v","status":"A","additions":1380,"deletions":501},{"file":"theories/prodnormedzmodule.v","status":"A","additions":1380,"deletions":501},{"file":"theories/realfun.v","status":"A","additions":1380,"deletions":501},{"file":"theories/sequences.v","status":"A","additions":1380,"deletions":501},{"file":"theories/signed.v","status":"A","additions":1380,"deletions":501},{"file":"theories/topology.v","status":"A","additions":1380,"deletions":501},{"file":"theories/trigo.v","status":"A","additions":1380,"deletions":501}],"state":"merged","open_date":"2022-01-09T18:13:04Z","update_date":"2022-03-05T17:14:17Z","discussion":[{"author":"CohenCyril","date":"2022-01-09T18:14:06Z","comment":"CC @affeldt-aist @proux01"},{"author":"proux01","date":"2022-01-11T12:31:15Z","comment":"I had a quick look, this looks great.\r\nI'd like to do a more careful review, but this will probably have to wait for a few more days."},{"author":"proux01","date":"2022-01-25T13:18:08Z","comment":"Previously, a posnum was also a nonneg thanks to that Canonical instance in posnum.v\r\n```Coq\r\nCanonical posnum_nngnum x := Nonneg.NngNum x%:num (posnum_ge0 x).\r\n```\r\nit seems we have a regression here (c.f. comments above on one and inv)."},{"author":"CohenCyril","date":"2022-01-25T14:01:04Z","comment":"Thank you for your thorough review @proux01, this is much appreciated. I will try to address all your comments.\r\nMy main objective on this pass was to be able to cover everything `posnum` and `nnegnum` were covering before, some holes are voluntary in this first past others not.\r\n\r\n> Main comment: in abstract interpretation, we would say that the abstract domain (>=0, <=0) doesn't have the property of the best abstraction, which causes a bunch of issues (should 0 be considered >=0 or <=0 ? both abstractions are not comparable), the usual fix is to add a 0 in the lattice (as (meet <=0 >=0) so that 0 now has a best abstraction). I could offer a commit with that change if you want.\r\n\r\nYes, I noticed this very late and this additional would make sense.\r\nHowever in practical cases, it is very easy to get around this tricky corner case, e.g. by using `addr0` or `mulr0` to remove `0` altogether from the guilty goal, and I guess that's why it was not a problem at all.\r\nNaturally, I'm not opposed to adding this case of course!\r\n\r\n> Comments on entire files\r\n> \r\n> * nngnum.v and posnum.v: shouldn't we just remove these files?\r\n\r\nYes, I kept these two files as a stub in order to transition smoothly between the new and old code, especially to anticipate a compat with unmerged PRs. But they should disappear in the long run.\r\n\r\n\r\n> * measure.v and normedtype.v: replace all `%:nngnum` by `%:num`?\r\n\r\nI'm not completely sure, this will show up more precisely later in my answer to detailed comments, but the rough reason is that we may not want to rely on an arbitrary signed number, as we may want to guide the resolution a little bit.\r\n"},{"author":"proux01","date":"2022-01-29T14:53:19Z","comment":"> Yes, I noticed this very late and this additional would make sense. However in practical cases, it is very easy to get around this tricky corner case, e.g. by using `addr0` or `mulr0` to remove `0` altogether from the guilty goal, and I guess that's why it was not a problem at all.\r\n\r\nI'm not worried about `0 + _` or `0 * _` but I'm less confident about things like `min 0 _` or `max 0 _`.\r\n\r\n> Naturally, I'm not opposed to adding this case of course!\r\n\r\nHere it is: https://github.com/proux01/analysis/commits/posnum_wip (this branch also adresses all my comments above we agreed upon)"},{"author":"proux01","date":"2022-02-05T12:00:06Z","comment":"I added the doc I promised, so AFAICT, the remaining TODOs are:\r\n* should notations such as `%:pos` and `%:nng` be in ring_scope? (that would allow for similar notations in `ereal_scope` in ereal.v)\r\n* discuss construction of orderType on signs (c.f., commented Section Order)\r\n* add a comment to signed_intro\r\n* fix two problems in the application of le_num (don't know which ones)\r\n* add a nonzero structure to detect that `|x| > 0 when x != 0 (not sure to grasp the details)\r\n\r\nExtended reals are handled separately in #375 \r\n"},{"author":"proux01","date":"2022-02-07T16:45:44Z","comment":"@CohenCyril I generalized (c.f. last commit) what was already done for nat to infer some sign information based on the type when no canonical instance matches the head symbol. In particular, I added a \"top\" catch-all that states that everything is in `{compare x0 & ?=0 & >?<0 }`. This enables things like `abse x` (in #375 ) or `max 0 x` to infer `>=0` even when nothing is known about `x`.\r\n\r\nThe main drawback is that canonical structure inference no longer unfolds anything (since the catch-all triggers before).\r\nThus a few more unfolding are needed. This seems an acceptable trade-off to me, but you may not share my opinion (see last commit for example of impact).\r\n\r\nApart from the few points above (and adding still more canonical instances, but that's endless), I consider this and #375 ready.\r\n"},{"author":"CohenCyril","date":"2022-02-07T20:10:58Z","comment":"> The main drawback is that canonical structure inference no longer unfolds anything (since the catch-all triggers before).\r\n> Thus a few more unfolding are needed. This seems an acceptable trade-off to me, but you may not share my opinion (see last commit for example of impact).\r\n\r\nYes indeed, I think that's a good trade-off."},{"author":"proux01","date":"2022-03-02T08:05:31Z","comment":"Thanks @affeldt-aist or the review. @CohenCyril do you agree if I rebase (and squash a bit/tidy the history) this in order to move towards merging?"},{"author":"proux01","date":"2022-03-05T13:41:21Z","comment":"Since there was no opposition, I rebased (thanks @affeldt-aist for the initial rebase!).\r\nA few points remain (c.f. initial PR description on top), but none of them is blocking.\r\nI would argue in favor of merging (and adding issues to remember those points). @CohenCyril WDYT?"},{"author":"CohenCyril","date":"2022-03-05T16:07:06Z","comment":"\"Pull request authors cannot approve their own pull request\", still I'm in favor."},{"author":"proux01","date":"2022-03-05T17:14:05Z","comment":"Looks everyone agrees, let's merge then."}],"review_discussion":[{"author":"CohenCyril","file":"theories/sequences.v","date":"2022-01-11T14:58:33Z","comment":"Helper lemma for using the lemma `near`, which is unused here, should be moved to another PR\r\n```suggestion\r\n```"},{"author":"proux01","file":"theories/landau.v","date":"2022-01-25T12:11:22Z","comment":"```suggestion\r\n\r\n```\r\nspurious new line?"},{"author":"proux01","file":"theories/signed.v","date":"2022-01-25T12:14:57Z","comment":"```suggestion\r\nReserved Notation \"{ 'compare' x0 & nz & cond }\"\r\n  (at level 0, x0 at level 200, nz at level 200, format \"{ 'compare'  x0  &  nz  &  cond }\").\r\n```\r\nthis is what seems to be done everywhere in mathcomp (but not in analysis), don't know what's best"},{"author":"proux01","file":"theories/signed.v","date":"2022-01-25T12:15:59Z","comment":"This is used only once in the section (as a coercion), not sure it is worth the effort to declare it a local coercion"},{"author":"proux01","file":"theories/signed.v","date":"2022-01-25T12:16:15Z","comment":"leftover?"},{"author":"proux01","file":"theories/signed.v","date":"2022-01-25T12:17:09Z","comment":"I'm not fond of this notation for 2 (why not 3 or 4 then? and why here?)"},{"author":"proux01","file":"theories/signed.v","date":"2022-01-25T12:17:45Z","comment":"leftover?"},{"author":"proux01","file":"theories/signed.v","date":"2022-01-25T12:18:43Z","comment":"What is this `signed_intro` for? (it seems unused)"},{"author":"proux01","file":"theories/signed.v","date":"2022-01-25T12:21:03Z","comment":"Is it common to write `0 >=< x` rather than `x >=< 0`? ssrnum seems to have both and I may find the second one a tad more natural (we have `x != 0` and not `0 != x` below)"},{"author":"proux01","file":"theories/signed.v","date":"2022-01-25T12:21:22Z","comment":"```suggestion\r\n\r\nLemma eq0F x : unify nz NonZero -> x%:num == x0 :> T = false.\r\n```"},{"author":"proux01","file":"theories/signed.v","date":"2022-01-25T12:21:57Z","comment":"Missing `Arguments` for `le0F`, `lt0F`, `gt0F` and `eq0`?"},{"author":"proux01","file":"theories/signed.v","date":"2022-01-25T12:22:21Z","comment":"Should those have a `Reserved Notation` on top of the file?"},{"author":"proux01","file":"theories/signed.v","date":"2022-01-25T12:23:05Z","comment":"```suggestion\r\n  match xr with\r\n  | Real (Sign >=0) => <=0\r\n  | Real (Sign <=0) => >=0\r\n  | Real AnySign => >=<0\r\n  | Arbitrary => >?<0\r\n  end.\r\n```"},{"author":"proux01","file":"theories/signed.v","date":"2022-01-25T12:23:44Z","comment":"Why having `xnz` and `ynz` as arguments here? (and same for many others below, I guess it's for the sake of uniformity?)\r\nAlso indentation:\r\n```suggestion\r\nDefinition add_samesign_subdef (xnz ynz : nullity) (xr yr : reality) :=\r\n  match xr, yr with\r\n  | Real (Sign >=0), Real (Sign >=0)\r\n  | Real (Sign <=0), Real (Sign <=0) => true\r\n  | _, _ => false\r\n  end.\r\n```"},{"author":"proux01","file":"theories/signed.v","date":"2022-01-25T12:25:18Z","comment":"Isn't the `xr &&` redundant with `add_samesign_subdef`?"},{"author":"proux01","file":"theories/signed.v","date":"2022-01-25T12:28:13Z","comment":"Why have `xr` and `yr` as arguments? (and same for many others below, I guess it's for the sake of uniformity?)\r\nAlso\r\n```suggestion\r\nDefinition mul_nonzero_subdef (xnz ynz : nullity) (xr yr : reality) :=\r\n  nz_of_bool (xnz && ynz).\r\n```"},{"author":"proux01","file":"theories/signed.v","date":"2022-01-25T12:29:54Z","comment":"Couldn't we be more precise, replacing `nr` with `>=0`? in which case `mul_reality_subdef xnz ynz xr yr` just becomes `xr`"},{"author":"proux01","file":"theories/signed.v","date":"2022-01-25T12:30:48Z","comment":"Couldn't we be more precise, knowing that `nr` is `Real _` (even if we don't know the sign)?"},{"author":"proux01","file":"theories/signed.v","date":"2022-01-25T12:31:22Z","comment":"This is exactly `mul_nonzero_subdef`"},{"author":"proux01","file":"theories/signed.v","date":"2022-01-25T12:32:36Z","comment":"We could be more precise, for instance min(<0, >=0) != 0 or min(<=0, >=0) <= 0"},{"author":"proux01","file":"theories/signed.v","date":"2022-01-25T12:33:02Z","comment":"This could probably also be more precise"},{"author":"proux01","file":"theories/signed.v","date":"2022-01-25T12:33:24Z","comment":"Could we be more precise on `nz`?"},{"author":"proux01","file":"theories/signed.v","date":"2022-01-25T12:34:54Z","comment":"Could we directly put `>=0` for the reality? (same for all nat ops)"},{"author":"proux01","file":"theories/signed.v","date":"2022-01-25T12:35:33Z","comment":"Bikeshedding: we could be a little more precise on `0 ^ 0 = 1` is `!=0`"},{"author":"proux01","file":"theories/signed.v","date":"2022-01-25T12:36:16Z","comment":"`rnz` could probably just be `nz_of_bool (xnz || ynz)`"},{"author":"proux01","file":"theories/signed.v","date":"2022-01-25T12:37:31Z","comment":"What is this for? (seems unused)"},{"author":"proux01","file":"theories/signed.v","date":"2022-01-25T12:38:30Z","comment":"Why is the nullity fixed to `?=0`? (it seems to me everything in this section would also work fine for `!=0`)"},{"author":"proux01","file":"theories/signed.v","date":"2022-01-25T13:04:52Z","comment":"I would expect\r\n```suggestion\r\n\r\nLemma one_snum_subproof nz cond : Signed.spec 0 nz cond (1 : R).\r\n```\r\notherwise\r\n```Coq\r\nCheck (1%R : R)%:nng.\r\n```\r\nfails with\r\n```Coq\r\nThe term \"(1 : R)%:sgn\" has type \"{compare 0 & !=0 & >=0}\"\r\nwhile it is expected to have type \"{nonneg R}\"\r\n```"},{"author":"proux01","file":"theories/signed.v","date":"2022-01-25T13:11:19Z","comment":"I'm a bit worried by the fact that the following fails but I have no idea of a good fix:\r\n```Coq\r\nVariable x : {posnum R}.\r\nCheck (x%:num^-1)%:pos.  (* OK *)\r\nCheck (x%:num^-1)%:nng.  (* fails *)\r\n```"},{"author":"CohenCyril","file":"theories/landau.v","date":"2022-01-25T14:03:06Z","comment":"most certainly"},{"author":"CohenCyril","file":"theories/signed.v","date":"2022-01-25T14:03:28Z","comment":"Yes you are right, gluing `{` to the rest is dangerous in terms of lexing. We should switch to the latter everywhere."},{"author":"CohenCyril","file":"theories/signed.v","date":"2022-01-25T14:05:42Z","comment":"I sometimes do many of them indeed, but the general way out is the one from math-comp/math-comp#841 of course"},{"author":"CohenCyril","file":"theories/signed.v","date":"2022-01-25T14:06:44Z","comment":"Yes, that's because there are at least two ways to get signs totally ordered :-/ and this is not the one which is used most of the time. We have to discuss to make them live with each other, because right now, I don't know how..."},{"author":"CohenCyril","file":"theories/signed.v","date":"2022-01-25T14:07:12Z","comment":"It is made for debugging purposes mostly, it forces canonical structure inference by rewriting with it."},{"author":"CohenCyril","file":"theories/signed.v","date":"2022-01-25T14:09:02Z","comment":"I agree with you, except that [`Num.real` is convertible to `0 >=< x`](https://github.com/math-comp/math-comp/blob/80ccf365b8a5f35e0ce329b37b68aa0339c17c77/mathcomp/algebra/ssrnum.v#L387) rather than the other, which makes some things work better with `0 >=< x` than with `x >=< 0` when the comparison is actually hidden in `Num.real`."},{"author":"proux01","file":"theories/signed.v","date":"2022-01-25T14:16:47Z","comment":"Ok, might be worth a comment?"},{"author":"CohenCyril","file":"theories/signed.v","date":"2022-01-25T14:17:20Z","comment":"Maybe, I think since they are unlikely to be combined like the others, it is not important, but at least it would be uniform."},{"author":"CohenCyril","file":"theories/signed.v","date":"2022-01-25T14:18:54Z","comment":"Uniformity indeed, just in case there is a more precise interpretation taking xnz and ynz into account."},{"author":"CohenCyril","file":"theories/signed.v","date":"2022-01-25T14:20:45Z","comment":"Mmhh, looks like it indeed."},{"author":"CohenCyril","file":"theories/signed.v","date":"2022-01-25T14:24:01Z","comment":"In order to for the inference to work properly, the arguments have to variable as `nullity` and `reality` and the output must depend solely on this variable. Fixing `>=0` would break this invariant."},{"author":"CohenCyril","file":"theories/signed.v","date":"2022-01-25T14:25:43Z","comment":"We also can expect natural numbers to always be `>=0`, however we could replace it in `rnz` and `rrl` to simplify computations, or just in case it fails for some weird reason."},{"author":"CohenCyril","file":"theories/signed.v","date":"2022-01-25T14:26:06Z","comment":"Same, no in `n`, but yes in `rnz` and `rrl`."},{"author":"CohenCyril","file":"theories/signed.v","date":"2022-01-25T14:27:34Z","comment":"Mmh, true, maybe it we could eliminate the redundancy..."},{"author":"CohenCyril","file":"theories/signed.v","date":"2022-01-25T14:29:11Z","comment":"Oh yeah, this is an unfortunate copy-paste of the real sqrt I think."},{"author":"CohenCyril","file":"theories/signed.v","date":"2022-01-25T14:29:32Z","comment":"Cf my answer for `natmul`."},{"author":"CohenCyril","file":"theories/signed.v","date":"2022-01-25T14:30:16Z","comment":"probably..."},{"author":"CohenCyril","file":"theories/signed.v","date":"2022-01-25T14:31:19Z","comment":"For the sake of completeness? (For the sake of which we should probably add a couple more \"morphism lemmas\")"},{"author":"CohenCyril","file":"theories/signed.v","date":"2022-01-25T14:35:02Z","comment":"In order to for the inference to work properly, the arguments have to variable as nullity and reality and the output must depend solely on this variable. Letting `nz` and `cond` be free means that during inference they stay variable and are not computed by the various abstract interpretation functions.\r\n\r\nI think the way to preserve the behavior you mention is to have a coercion operator (using the same technique as all the other operators `add`, `mul`, etc)."},{"author":"CohenCyril","file":"theories/signed.v","date":"2022-01-25T14:35:29Z","comment":"Cf my previous comment about coercion operator."},{"author":"proux01","file":"theories/signed.v","date":"2022-01-26T06:09:54Z","comment":"I don't see how to do it with coercions, but I have an idea encoding as a boolean function the order `more_precise` of the abstract lattice (for instance `more precise (!0, >=0) (?0, >=0) = true`), thus enabling to have a cast lemma (for instance from posnum to nonneg) taking a proof of `more_precise = true` as input, that could then be fed with `erefl` in a notation. Let me try that."},{"author":"proux01","file":"theories/signed.v","date":"2022-01-26T16:30:19Z","comment":"BTW, this seems unused"},{"author":"CohenCyril","file":"theories/signed.v","date":"2022-01-26T16:33:29Z","comment":"Oh no this is totally used in `eq0` etc"},{"author":"proux01","file":"theories/signed.v","date":"2022-01-26T16:52:45Z","comment":"Hmm, looks like there is some magic I still don't perfectly understand, I'll have a closer look."},{"author":"proux01","file":"theories/signed.v","date":"2022-01-26T17:41:19Z","comment":"In fact, here is a much simpler fix: https://github.com/proux01/analysis/commit/54f21a9a3cb5132aec9b50d234ecf10e81ff5baa (feel free to cherry-pick)"},{"author":"CohenCyril","file":"theories/signed.v","date":"2022-01-26T17:48:54Z","comment":"Does not seem generic enough, I'll try the \"coercion operator\""},{"author":"proux01","file":"theories/signed.v","date":"2022-01-28T13:30:14Z","comment":"@CohenCyril this is more generic: https://github.com/proux01/analysis/commit/422bb1ba398e1730d238f3809ec58ecbb7fe0815 and https://github.com/proux01/analysis/commit/4162ac3865f896961316c5dea388ae62d9737507 is that what you had in mind?"},{"author":"proux01","file":"theories/signed.v","date":"2022-01-28T16:11:06Z","comment":"That was broken (mostly because of the canonical instance for 0 that had a variable as input ;-) ), here is a fix: https://github.com/proux01/analysis/commit/b9a7732916bc4c82c7dd8e0571c81cb2d2a56485"},{"author":"CohenCyril","file":"theories/signed.v","date":"2022-02-01T10:05:41Z","comment":"Really nice! I'm a bit worried about [this](https://github.com/proux01/analysis/commit/b9a7732916bc4c82c7dd8e0571c81cb2d2a56485#diff-ec3855f35a085739515162cb2620b5daea6488b737c11df25d618370adc5e240R1942-R1943) and [that](https://github.com/proux01/analysis/commit/b9a7732916bc4c82c7dd8e0571c81cb2d2a56485#diff-ec3855f35a085739515162cb2620b5daea6488b737c11df25d618370adc5e240R1950-R1951) though. Will it go back to oneliners once merged with [the new `=0`](https://github.com/proux01/analysis/commit/8b03eb6ba821d6a3e27ada88c033fd544158d99c)?"},{"author":"proux01","file":"theories/signed.v","date":"2022-02-03T10:18:27Z","comment":"Sorry for the delay, I managed to improve things quite a bit, but that's still not perfect: https://github.com/proux01/analysis/commit/aeb0cfedb71289d0c2869085194eeef01a9fc2a3\r\nNote the following rewrite\r\n```Coq\r\nrewrite [X in _ <= X](_ : 0 = 0%:nng%:num)//\r\n```\r\nthat I would have expected to write\r\n```Coq\r\nrewrite -[0]/(0%:nng%:num)\r\n```\r\nbut that fails with an anomaly, I opened an issue https://github.com/coq/coq/issues/15598\r\n(more generally, that might explain the difficulties here).\r\n\r\nMaybe we could have elimination lemmas here like `nngE` and `posE`?"},{"author":"proux01","file":"theories/signed.v","date":"2022-02-03T16:01:23Z","comment":"That works, we are back to one liners: https://github.com/proux01/analysis/commit/64090854e9c8dd3d1c5b23e437696d90ffab2dea"},{"author":"CohenCyril","file":"theories/signed.v","date":"2022-02-04T16:24:21Z","comment":"All of this looks good to me. I expected that `rewrite -[0]/(0%:nng%:num)` would stop working, and I'm ok with elimination lemmas !"},{"author":"CohenCyril","file":"theories/signed.v","date":"2022-02-04T16:24:45Z","comment":"Feel free to stack up on my branch"},{"author":"proux01","file":"theories/signed.v","date":"2022-02-05T10:09:07Z","comment":"Looks like I don't have write access:\r\n```\r\nremote: Permission to math-comp/analysis.git denied to proux01.\r\nfatal: unable to access 'https://github.com/math-comp/analysis/': The requested URL returned error: 403\r\n```"},{"author":"CohenCyril","file":"theories/signed.v","date":"2022-02-05T11:01:15Z","comment":"@proux01 \r\n> Looks like I don't have write access:\r\n\r\nThis should be fixed\r\n\r\n"},{"author":"proux01","file":"theories/signed.v","date":"2022-02-05T11:19:19Z","comment":"Thanks!"},{"author":"affeldt-aist","file":"theories/signed.v","date":"2022-03-02T07:06:11Z","comment":"This comment can be removed because it is included in the doc in a more elaborated form."},{"author":"affeldt-aist","file":"theories/signed.v","date":"2022-03-02T07:06:44Z","comment":"This is maybe a candidate for move into `mathcomp_extra.v` once the PR is rebased."},{"author":"affeldt-aist","file":"theories/signed.v","date":"2022-03-02T07:08:17Z","comment":"`/orP[/eqP ->|]` -> `/predU1P[->|]` (4 occurrences)"},{"author":"proux01","file":"theories/signed.v","date":"2022-03-02T08:04:11Z","comment":"Looks like it's already there :laughing: (will remove here when rebasing)"}],"tags":[],"commits":[{"author":"CohenCyril","committer":"proux01","hash":"eb9911103c0db06d5b6b89acbe12ecf7d849f5dd","message":"Rewriting posnum","date":"2022-03-05T12:13:10Z"},{"author":"proux01","committer":"proux01","hash":"0bfe5fc99b50137776c9def73ebb35b63cd054ad","message":"Make unify more generic\n\nIt was requiring an exact abstract value,\nnow any more-precise abstract value also works.\n\nFor instance `unify AnySign NonNeg` was failing\nbecause NonNeg was too precise, whereas\n`unify_r AnySign NonNeg` now works.\n\nThis is currently useless because one was only asking for most-precise\nabstract values, but should become useful in the future.","date":"2022-03-05T12:33:54Z"},{"author":"proux01","committer":"proux01","hash":"f674c9fa9a8778992c7025caa4cf98b4930b638e","message":"Make 1%:nng work\n\n`expr%:nng` was failing when `expr%:pos` was working because the more\nprecise type `{posnum _}` was infered instead of `{nonneg _}`.","date":"2022-03-05T12:40:56Z"},{"author":"proux01","committer":"proux01","hash":"d6355ae021a8da1b142d1a531d775279601f6a25","message":"Add =0 to the abstract domain\n\nOtherwise, we didn't know wether 0 should be abstracted as >=0 or <=0.\nThe former made max(0, _) fail to be recognized as <=0 while the\nlatter would break min(0, _) similarly.","date":"2022-03-05T12:50:00Z"},{"author":"proux01","committer":"proux01","hash":"e298fe469c4c779276b3ee9724f0f97a68d3e3f6","message":"Add sign inference on type as a last resort\n\nPreviously e%:sgn was failing when an unknown (or no, i.e., for which\nno canonical instance is registered) operation was encountered in the\nexpression e, now some sign information can be inferred from the type\nof the unknown sub expression.\n\nThis is generalizing the canonical instance already existing for the\ntype nat.\n\nThis is needed in https://github.com/math-comp/analysis/pull/375 to be\nable to infer that `|x|%E is non negative when nothing is known on x.","date":"2022-03-05T13:20:49Z"},{"author":"proux01","committer":"proux01","hash":"3d3f380599eea00a02fa2b4e244eced134dddffd","message":"Add documentation","date":"2022-03-05T13:20:55Z"},{"author":"proux01","committer":"proux01","hash":"ea83ebc7d5c74614927a6e3cffe7ef780bbc0ecb","message":"Generalize min and max\n\nGeneralize min and max signed instances from numDomainType to\nporderType. This way, they can be used for extended reals.","date":"2022-03-05T13:20:55Z"},{"author":"proux01","committer":"proux01","hash":"c52712be3b02bc30a211f4f683c8f379dd660430","message":"Generalize morphism lemmas\n\nThis way, they can also be used for extended reals for instance.","date":"2022-03-05T13:20:55Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"a5c139fa303a58fbf1c5e7ce5b29a0fad4bfc302","message":"simplifications, global attributes","date":"2022-03-05T15:23:37Z"}]},{"author":"proux01","number":510,"diff_summary":[{"file":".github/workflows/docker-action.yml","status":"A","additions":155,"deletions":5},{"file":".github/workflows/nix-action-master.yml","status":"A","additions":155,"deletions":5},{"file":".nix/config.nix","status":"A","additions":155,"deletions":5},{"file":"README.md","status":"A","additions":155,"deletions":5},{"file":"coq-mathcomp-analysis.opam","status":"A","additions":155,"deletions":5},{"file":"meta.yml","status":"A","additions":155,"deletions":5},{"file":"theories/normedtype.v","status":"A","additions":155,"deletions":5}],"state":"closed","open_date":"2022-01-07T13:37:20Z","update_date":"2022-01-18T22:54:25Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"CohenCyril","committer":"CohenCyril","hash":"d20cca5cd5d50030eb1d5b76e09633bbf8705810","message":"[CI] removing 8.11 and 8.12 properly and adding master","date":"2022-01-06T20:03:35Z"},{"author":"proux01","committer":"proux01","hash":"b4cc407f6c2ed696c48795e68703e0749c529eb5","message":"[CI] Try coq-master branch of coq-elpi","date":"2022-01-07T13:31:33Z"},{"author":"proux01","committer":"proux01","hash":"4c2d0e3bd3438a5d3f2cb58ac279654af278728a","message":"[CI] Test Coq master with Docker","date":"2022-01-07T13:53:16Z"},{"author":"proux01","committer":"proux01","hash":"32b08d4f13df5eb9ca926073ba48d3207a25665b","message":"Try compiling with master","date":"2022-01-11T12:30:21Z"}]},{"author":"CohenCyril","number":509,"diff_summary":[{"file":".github/workflows/docker-action.yml","status":"A","additions":450,"deletions":18},{"file":".github/workflows/nix-action-8.13.yml","status":"A","additions":450,"deletions":18},{"file":".github/workflows/nix-action-8.14.yml","status":"A","additions":450,"deletions":18},{"file":".github/workflows/nix-action-master.yml","status":"A","additions":450,"deletions":18},{"file":".nix/config.nix","status":"A","additions":450,"deletions":18},{"file":".nix/coq-nix-toolbox.nix","status":"A","additions":450,"deletions":18},{"file":"README.md","status":"A","additions":450,"deletions":18},{"file":"coq-mathcomp-analysis.opam","status":"A","additions":450,"deletions":18},{"file":"meta.yml","status":"A","additions":450,"deletions":18},{"file":"theories/normedtype.v","status":"A","additions":450,"deletions":18},{"file":"theories/sequences.v","status":"A","additions":450,"deletions":18}],"state":"merged","open_date":"2022-01-06T19:59:33Z","update_date":"2022-01-18T22:56:14Z","discussion":[{"author":"proux01","date":"2022-01-06T20:06:28Z","comment":"Should we also add 8.15 and master to the Docker CI?"},{"author":"proux01","date":"2022-01-07T08:50:24Z","comment":"@CohenCyril maybe using branch `coq-master` of coq-elpi could help?\r\n"},{"author":"proux01","date":"2022-01-11T12:58:00Z","comment":"@CohenCyril feel free to cherry pick the three commits in https://github.com/math-comp/analysis/pull/510\r\nAt least the Docker CI goes through for master.\r\nThe 8.15 job is failing due to a bug in 8.15+rc1 that is fixed in 8.15 branch so hopefully 8.15.0 will be ok.\r\nThe `Nix CI for bundle master / coq-elpi` job is now ok but there is still an error with the `Nix CI for bundle master / mathcomp-analysis` job I don't get (it seems a redirection to /dev/null is hidding the error)."},{"author":"CohenCyril","date":"2022-01-18T21:15:05Z","comment":"> @CohenCyril feel free to cherry pick the three commits in #510 At least the Docker CI goes through for master. The 8.15 job is failing due to a bug in 8.15+rc1 that is fixed in 8.15 branch so hopefully 8.15.0 will be ok. The `Nix CI for bundle master / coq-elpi` job is now ok but there is still an error with the `Nix CI for bundle master / mathcomp-analysis` job I don't get (it seems a redirection to /dev/null is hidding the error).\r\n\r\nThanks, cherry-picked them all and squahed.\r\n\r\n(I changed the faulty proof to one more conventional)"}],"review_discussion":[],"tags":[],"commits":[{"author":"CohenCyril","committer":"CohenCyril","hash":"77e0af21c3526dc9eaa07f0cd3f48370cf6f7712","message":"[CI] adding master\n\nCo-Authored-By: Pierre Roux <pierre@roux01.fr>","date":"2022-01-18T22:37:13Z"}]},{"author":"affeldt-aist","number":508,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":35,"deletions":0},{"file":"theories/ereal.v","status":"M","additions":35,"deletions":0}],"state":"merged","open_date":"2022-01-04T08:30:52Z","update_date":"2022-01-21T03:15:20Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"54706cfe47908f18c999b2a5ebf9da577b98ed3b","message":"lemmas about ereal\n\n- case analysis for x * y = oo\n- about abse and fin_num","date":"2022-01-21T03:03:34Z"}]},{"author":"affeldt-aist","number":506,"diff_summary":[{"file":"CHANGELOG.md","status":"M","additions":243,"deletions":240},{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":243,"deletions":240},{"file":"INSTALL.md","status":"M","additions":243,"deletions":240},{"file":"Makefile.common","status":"M","additions":243,"deletions":240},{"file":"theories/boolp.v","status":"M","additions":243,"deletions":240},{"file":"theories/derive.v","status":"M","additions":243,"deletions":240}],"state":"merged","open_date":"2021-12-28T02:53:31Z","update_date":"2021-12-29T06:17:23Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"e971e696882910179fb963447530580c44e0d090","message":"changelog v0.3.12","date":"2021-12-29T06:04:15Z"}]},{"author":"zstone1","number":505,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":389,"deletions":227},{"file":"theories/derive.v","status":"M","additions":389,"deletions":227},{"file":"theories/exp.v","status":"M","additions":389,"deletions":227},{"file":"theories/normedtype.v","status":"M","additions":389,"deletions":227},{"file":"theories/realfun.v","status":"M","additions":389,"deletions":227},{"file":"theories/topology.v","status":"M","additions":389,"deletions":227},{"file":"theories/trigo.v","status":"M","additions":389,"deletions":227}],"state":"merged","open_date":"2021-12-27T21:27:36Z","update_date":"2022-02-18T17:11:18Z","discussion":[{"author":"zstone1","date":"2022-01-20T17:10:40Z","comment":"Merges are all resolved here. Build is broken, but that seems to be affecting more than just this change. Can we get this into the next release? "}],"review_discussion":[{"author":"CohenCyril","file":"theories/derive.v","date":"2022-01-20T17:57:09Z","comment":"```suggestion\r\nLemma MVT_segment (R : realType) (f df : R -> R) (a b : R) :\r\n``\r\n?\r\n"},{"author":"CohenCyril","file":"theories/derive.v","date":"2022-01-20T17:58:27Z","comment":"```suggestion\r\nmove=> leab fdrvbl fcont; case: ltgtP leab => // [altb|aeb]; last first\r\n```"},{"author":"CohenCyril","file":"theories/derive.v","date":"2022-01-20T17:59:19Z","comment":"```suggestion\r\ncase: ltgtP lexy => // [xlty|xyb]; last first.\r\n```"},{"author":"CohenCyril","file":"theories/derive.v","date":"2022-01-20T17:59:35Z","comment":"(blind suggestion)"},{"author":"CohenCyril","file":"theories/derive.v","date":"2022-01-20T17:59:44Z","comment":"(blind suggestion)"},{"author":"CohenCyril","file":"theories/realfun.v","date":"2022-01-20T18:01:18Z","comment":"```suggestion\r\nLemma continuous_subspace_itv ( I : interval R) (f : R -> R) : \r\n```\r\nthe shortcut for `interval` is `itv`, the `int` is the one for integers."},{"author":"CohenCyril","file":"theories/topology.v","date":"2022-01-20T18:02:30Z","comment":"```suggestion\r\nLemma closedC (D : set T) : closed (~` D) = open D.\r\n```"},{"author":"CohenCyril","file":"theories/topology.v","date":"2022-01-20T18:02:51Z","comment":"Same for `openC`, while the former of the same name, which is too weak should be renamed."},{"author":"CohenCyril","file":"theories/topology.v","date":"2022-01-20T18:03:19Z","comment":"```suggestion\r\n```"},{"author":"CohenCyril","file":"theories/derive.v","date":"2022-01-20T18:03:36Z","comment":"```suggestion\r\n```"},{"author":"zstone1","file":"theories/topology.v","date":"2022-01-20T18:11:08Z","comment":"There's a detail with this one, where `openC` and `closedC` already exist, but are one-way implications. It's convenient to have a bidirectional lemma as well (hence me adding `open_closedC ` and `openC_closed`). Would `openCE` and `closedCE` be better?"},{"author":"CohenCyril","file":"theories/topology.v","date":"2022-01-20T18:34:34Z","comment":"What I meant was that the implications are ill-named and they are the one that should be renamed (`open_closedC` and `closed_openC`)"}],"tags":[],"commits":[{"author":"zstone1","committer":"zstone1","hash":"4dad600b8dc6ccfd04efe750c93a697a1240af4e","message":"fixed connected continuous\n\ncleanup topology\n\nfixing notations\n\nminor cleanups\n\nfixing build\n\nmore merge fixes\n\ncleaning up names\n\nfix build\n\nrenaming openC and closedC\n\nupdating changelog\n\nupdating changelog","date":"2022-02-17T22:40:03Z"},{"author":"zstone1","committer":"zstone1","hash":"272eb288d25d11ede83bba36f191eaf660d5a161","message":"fix syntax","date":"2022-02-17T23:07:51Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"fc969ac59117018730fa4019d68f1374cd896752","message":"nitpicking\n\n- tidy up scripts\n- remove trailing spaces\n- complete changelog","date":"2022-02-18T03:35:05Z"}]},{"author":"affeldt-aist","number":504,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":170,"deletions":24},{"file":"theories/altreals/distr.v","status":"M","additions":170,"deletions":24},{"file":"theories/altreals/realseq.v","status":"M","additions":170,"deletions":24},{"file":"theories/altreals/realsum.v","status":"M","additions":170,"deletions":24},{"file":"theories/ereal.v","status":"M","additions":170,"deletions":24},{"file":"theories/normedtype.v","status":"M","additions":170,"deletions":24},{"file":"theories/sequences.v","status":"M","additions":170,"deletions":24},{"file":"theories/topology.v","status":"M","additions":170,"deletions":24}],"state":"merged","open_date":"2021-12-27T09:13:57Z","update_date":"2022-01-14T14:55:51Z","discussion":[],"review_discussion":[{"author":"CohenCyril","file":"theories/sequences.v","date":"2022-01-06T13:48:57Z","comment":"```suggestion\r\n  (0 < b)%R -> f --> +oo -> g --> b%:E -> f \\* g --> +oo.\r\n```"},{"author":"affeldt-aist","file":"theories/sequences.v","date":"2022-01-14T05:53:19Z","comment":"This notation was actually defined in altreals, I moved it up. Is that ok? "}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"f851b9f1ff6b5252799b564dc6fdf71303e2ffa1","message":"lemma ereal_cvgM","date":"2022-01-07T12:23:29Z"}]},{"author":"affeldt-aist","number":502,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":198,"deletions":24},{"file":"theories/altreals/distr.v","status":"M","additions":198,"deletions":24},{"file":"theories/altreals/realseq.v","status":"M","additions":198,"deletions":24},{"file":"theories/altreals/realsum.v","status":"M","additions":198,"deletions":24},{"file":"theories/ereal.v","status":"M","additions":198,"deletions":24},{"file":"theories/normedtype.v","status":"M","additions":198,"deletions":24},{"file":"theories/sequences.v","status":"M","additions":198,"deletions":24},{"file":"theories/topology.v","status":"M","additions":198,"deletions":24}],"state":"merged","open_date":"2021-12-27T03:49:26Z","update_date":"2022-01-14T15:11:29Z","discussion":[],"review_discussion":[{"author":"CohenCyril","file":"theories/ereal.v","date":"2022-01-06T13:47:26Z","comment":"```suggestion\r\nLemma lee_pemulr x y : 0 <= y -> 1 <= x -> y <= y * x.\r\n```"},{"author":"CohenCyril","file":"theories/ereal.v","date":"2022-01-06T13:47:35Z","comment":"```suggestion\r\nLemma lee_nemulr x y : y <= 0 -> 1 <= x -> y * x <= y.\r\n```"},{"author":"CohenCyril","file":"CHANGELOG_UNRELEASED.md","date":"2022-01-06T13:47:50Z","comment":"```suggestion\r\n  + lemmas `lee_pemull`, `lee_nemul`, `lee_pemulr`, `lee_nemulr`\r\n```"}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"3989a1f20b0be2ee24132f448353aff440e30f24","message":"lemmas about mule and `<=`","date":"2022-01-14T15:00:56Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"5eede2fd70ff6ae74ff7f523ff800ddea2836f6a","message":"lemma ereal_cvgM","date":"2022-01-14T15:00:56Z"}]},{"author":"affeldt-aist","number":501,"diff_summary":[{"file":"theories/sequences.v","status":"M","additions":38,"deletions":69}],"state":"merged","open_date":"2021-12-27T03:17:29Z","update_date":"2021-12-27T23:56:32Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"a7c4a56106c6bbd56175ca1fae0017bd4ac13502","message":"simplify proof lee_lim and ereal_cvgD","date":"2021-12-27T03:16:22Z"}]},{"author":"affeldt-aist","number":500,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":9,"deletions":9},{"file":"theories/ereal.v","status":"M","additions":9,"deletions":9},{"file":"theories/sequences.v","status":"M","additions":9,"deletions":9}],"state":"merged","open_date":"2021-12-27T02:38:51Z","update_date":"2021-12-27T23:55:43Z","discussion":[{"author":"affeldt-aist","date":"2021-12-27T03:21:54Z","comment":"NB: solved\r\n\r\nCI errors are Curl errors about coq-elpi or hierarchy-builder:\r\n\r\nE.g.: mathcomp 1.13.0 / coq 8.12.\r\n```\r\nError:  The sources of the following couldn't be obtained, aborting:\r\n            - coq-elpi.1.6.0: Curl failed\r\n```\r\n"}],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"1178072fa1e6853ac205de7f4ff743d7c7999c28","message":"fixes #499","date":"2021-12-27T02:38:00Z"}]},{"author":"affeldt-aist","number":496,"diff_summary":[{"file":"README.md","status":"M","additions":28,"deletions":20},{"file":"meta.yml","status":"M","additions":28,"deletions":20}],"state":"merged","open_date":"2021-12-16T03:00:13Z","update_date":"2021-12-16T15:39:13Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"2a42f6b30511a9bfb28af4e962a3de51d3f99ff4","message":"sectioning in the readme","date":"2021-12-16T03:07:12Z"}]},{"author":"affeldt-aist","number":495,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":16,"deletions":20},{"file":"theories/measure.v","status":"M","additions":16,"deletions":20}],"state":"merged","open_date":"2021-12-13T08:35:03Z","update_date":"2021-12-16T01:17:05Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"6d46de8fa2de0d49e190c95c23715305364fe4ee","message":"hints for measurable0 and measurableT","date":"2021-12-16T01:03:15Z"}]},{"author":"affeldt-aist","number":494,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":44,"deletions":0},{"file":"theories/ereal.v","status":"M","additions":44,"deletions":0}],"state":"merged","open_date":"2021-12-10T09:51:28Z","update_date":"2021-12-16T11:30:52Z","discussion":[{"author":"proux01","date":"2021-12-10T12:10:56Z","comment":"I can't merge but this looks fine to me"}],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"41ade3499b094d4cadb742bbd40857c7d80c63ca","message":"a few more lemmas about extended reals","date":"2021-12-16T10:59:55Z"}]},{"author":"affeldt-aist","number":493,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":12,"deletions":7},{"file":"theories/ereal.v","status":"M","additions":12,"deletions":7}],"state":"merged","open_date":"2021-12-10T09:40:39Z","update_date":"2021-12-13T08:36:56Z","discussion":[{"author":"proux01","date":"2021-12-10T12:11:58Z","comment":"@affeldt-aist note that since you didn't mention #491 in the description, github did not grasp that this fixes it and won't automatically close it (c.f. \"Linked issues\" on the right)."}],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"4b632b8a14be88bc2fda72eafa04c5f2d48146d6","message":"fixes #491","date":"2021-12-10T09:40:04Z"}]},{"author":"CohenCyril","number":492,"diff_summary":[{"file":"_CoqProject","status":"A","additions":3572,"deletions":1314},{"file":"theories/boolp.v","status":"A","additions":3572,"deletions":1314},{"file":"theories/cardinality.v","status":"A","additions":3572,"deletions":1314},{"file":"theories/classical_sets.v","status":"A","additions":3572,"deletions":1314},{"file":"theories/csum.v","status":"A","additions":3572,"deletions":1314},{"file":"theories/ereal.v","status":"A","additions":3572,"deletions":1314},{"file":"theories/functions.v","status":"A","additions":3572,"deletions":1314},{"file":"theories/mathcomp_extra.v","status":"A","additions":3572,"deletions":1314},{"file":"theories/measure.v","status":"A","additions":3572,"deletions":1314},{"file":"theories/normedtype.v","status":"A","additions":3572,"deletions":1314},{"file":"theories/realfun.v","status":"A","additions":3572,"deletions":1314},{"file":"theories/topology.v","status":"A","additions":3572,"deletions":1314}],"state":"closed","open_date":"2021-12-08T09:29:21Z","update_date":"2022-02-26T14:14:49Z","discussion":[{"author":"CohenCyril","date":"2022-01-18T15:32:22Z","comment":"@affeldt-aist I finished the PR modulo documentation and changelog"},{"author":"affeldt-aist","date":"2022-02-14T08:52:19Z","comment":"Note that changelog appears as part of PR #371 now."}],"review_discussion":[{"author":"CohenCyril","file":"theories/functions.v","date":"2022-01-26T13:06:54Z","comment":"```suggestion\r\nNotation \"f \\|_ D\" := (restrict D f) : fun_scope.\r\n```"},{"author":"proux01","file":"theories/functions.v","date":"2022-02-07T16:28:36Z","comment":"When reading `{fun A >-> B } + {oinv aT >-> rT}`, I mistook it for the `{ _ } + { _ }` notation of Coq for decidability. That obviously doesn't make any sense, I don't know if we can/should do anything to prevent my stupid reading."},{"author":"affeldt-aist","file":"theories/functions.v","date":"2022-02-25T10:50:14Z","comment":"This will be taken care of in PR #543 . Thank you for your comment."}],"tags":[],"commits":[{"author":"CohenCyril","committer":"CohenCyril","hash":"d5071fe096531405e6e61b6454522f7208ca0f5b","message":"Theory of partial functions and cardinality","date":"2022-01-19T14:32:40Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"45cfe7229a6c0857e89a48421ce15528485b7c84","message":"documenting functions.v (wip)\n\n- one forgotten notation in classical_sets.v\n- duplicated Reserved\n- fix one typo","date":"2022-01-21T07:46:25Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"03c0ce680d7f87d9fb0f9330dcb4019918e45ae5","message":"more doc (wip)\n\n- doc about {e,}classicType\n- complete doc in cardinality.v\n- lint","date":"2022-01-21T08:32:28Z"},{"author":"CohenCyril","committer":"web-flow","hash":"be2acf6a2ca7abf92a7e00c242ae05dc41807815","message":"Update theories/functions.v","date":"2022-01-26T13:07:01Z"}]},{"author":"t6s","number":490,"diff_summary":[{"file":"theories/ereal.v","status":"M","additions":2,"deletions":0}],"state":"merged","open_date":"2021-12-08T02:03:46Z","update_date":"2021-12-08T23:51:28Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"t6s","committer":"t6s","hash":"ac094d062e3c9c81b1f270c6649f136f759a38ec","message":"describe \\bar R in the header of ereal.v","date":"2021-12-08T01:54:51Z"}]},{"author":"affeldt-aist","number":489,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":223,"deletions":146},{"file":"theories/Rstruct.v","status":"M","additions":223,"deletions":146},{"file":"theories/altreals/realsum.v","status":"M","additions":223,"deletions":146},{"file":"theories/classical_sets.v","status":"M","additions":223,"deletions":146},{"file":"theories/ereal.v","status":"M","additions":223,"deletions":146},{"file":"theories/lebesgue_integral.v","status":"M","additions":223,"deletions":146},{"file":"theories/measure.v","status":"M","additions":223,"deletions":146},{"file":"theories/normedtype.v","status":"M","additions":223,"deletions":146},{"file":"theories/reals.v","status":"M","additions":223,"deletions":146},{"file":"theories/sequences.v","status":"M","additions":223,"deletions":146}],"state":"merged","open_date":"2021-12-06T13:51:37Z","update_date":"2022-06-08T09:26:51Z","discussion":[{"author":"affeldt-aist","date":"2022-05-14T00:21:50Z","comment":"Could we merge this one on the grounds that it simplifies code a bit and provides documentation?\r\n(It is my understanding that the blocking point is that lemmas in classical_sets.v could be better organized\r\nto highlight the different side-conditions. Since it take time, we can maybe issue about that.)"}],"review_discussion":[{"author":"CohenCyril","file":"theories/reals.v","date":"2022-04-12T13:19:50Z","comment":"maybe:\r\n```suggestion\r\nLemma opp_set_eq0 E : (-%R @` E) = set0 <-> E = set0.\r\n```\r\n?"}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"2e8a2cefb30431dd9c3e4a93d1fd6e94bc434815","message":"express sup with supremum\n\n- complete documentation of `classical_sets.v`\n- documentation of `reals.v`\n- proof simplications in `reals.v`\n  + `sup_out`, `sup0`, `sup1` now proved as consequences of the definition of `sup` using `supremum`\n- minor generalizations","date":"2022-06-08T08:33:49Z"}]},{"author":"affeldt-aist","number":488,"diff_summary":[{"file":"theories/classical_sets.v","status":"M","additions":8,"deletions":7},{"file":"theories/topology.v","status":"M","additions":8,"deletions":7}],"state":"closed","open_date":"2021-12-06T08:57:00Z","update_date":"2021-12-06T09:15:34Z","discussion":[{"author":"CohenCyril","date":"2021-12-06T09:14:36Z","comment":"no please, no."},{"author":"CohenCyril","date":"2021-12-06T09:15:40Z","comment":"The equivalence is already dealt with by `inE`, these functions are meant to be adapter lemmas.\r\nIf you really need a `reflect` version add a new lemma called `mem_setP`"}],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"b0817d31010cf86144cc8675d794c710c13f428f","message":"mem_set expressed with reflect","date":"2021-12-06T08:55:52Z"}]},{"author":"affeldt-aist","number":487,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":191,"deletions":169},{"file":"theories/derive.v","status":"M","additions":191,"deletions":169},{"file":"theories/ereal.v","status":"M","additions":191,"deletions":169},{"file":"theories/exp.v","status":"M","additions":191,"deletions":169},{"file":"theories/landau.v","status":"M","additions":191,"deletions":169},{"file":"theories/normedtype.v","status":"M","additions":191,"deletions":169},{"file":"theories/sequences.v","status":"M","additions":191,"deletions":169},{"file":"theories/topology.v","status":"M","additions":191,"deletions":169}],"state":"open","open_date":"2021-12-04T10:22:57Z","update_date":"2023-03-15T14:46:14Z","discussion":[{"author":"affeldt-aist","date":"2022-05-14T00:24:15Z","comment":"IIRC, the problem with this PR is that it does not bring the expected code size reduction. But there is now code size augmentation (except with one lemma). Since we all seem to agree that large inequalities fell better suited, we can maybe merge this PR for now. What do you think? "},{"author":"CohenCyril","date":"2022-05-16T20:23:15Z","comment":"I think this PR essentially exibits a lack of abstraction. We should actually understand how to make the code smaller, and I think it might not be about changing the def."}],"review_discussion":[],"tags":[{"tag":"experiment :test_tube:","description":"This issue/PR is very experimental"}],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"6c306ddc541a9ad1f92dda21b307c738490c0379","message":"change inequality in ereal_{d,}nbhs\n\n- from strict to large\n- also in {p,n}infty_{d,}nbhs\n\nclosed #122","date":"2023-02-09T07:18:36Z"}]},{"author":"affeldt-aist","number":485,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":4,"deletions":3},{"file":"theories/sequences.v","status":"M","additions":4,"deletions":3}],"state":"merged","open_date":"2021-11-30T15:15:42Z","update_date":"2021-12-10T09:30:26Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"c505d2fbc4258c6eb4e056dbe38f0dd929af9a60","message":"fixes #477","date":"2021-12-04T05:37:58Z"}]},{"author":"affeldt-aist","number":484,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":3,"deletions":5},{"file":"theories/sequences.v","status":"M","additions":3,"deletions":5}],"state":"merged","open_date":"2021-11-30T10:23:22Z","update_date":"2021-11-30T15:00:51Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"web-flow","hash":"49bb4894d1bb21047e37b460b9b167c03d4a7234","message":"Revert \"Fixes 477\"","date":"2021-11-30T10:23:15Z"}]},{"author":"affeldt-aist","number":483,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":30,"deletions":0},{"file":"theories/classical_sets.v","status":"M","additions":30,"deletions":0}],"state":"merged","open_date":"2021-11-30T09:29:08Z","update_date":"2021-12-04T05:26:46Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"56c2674c2e40d3af271d78f39dbfb97dc9418a96","message":"add lemmas about setM","date":"2021-12-03T07:06:56Z"}]},{"author":"affeldt-aist","number":481,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":18,"deletions":18},{"file":"theories/measure.v","status":"M","additions":18,"deletions":18}],"state":"merged","open_date":"2021-11-29T11:45:42Z","update_date":"2021-12-04T06:47:41Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"e1aef24dbb5ecdedf8f0dbc83d9f22859a679bd4","message":"fixes #480","date":"2021-12-04T06:32:37Z"}]},{"author":"affeldt-aist","number":479,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":6,"deletions":0},{"file":"theories/classical_sets.v","status":"M","additions":6,"deletions":0}],"state":"merged","open_date":"2021-11-29T11:05:17Z","update_date":"2021-11-29T11:39:32Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"7e4a47e9381a7a84f8c850d21e8eb96bc91e205b","message":"add setDIr lemma","date":"2021-11-29T11:04:20Z"}]},{"author":"affeldt-aist","number":478,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":5,"deletions":3},{"file":"theories/sequences.v","status":"M","additions":5,"deletions":3}],"state":"merged","open_date":"2021-11-26T09:36:06Z","update_date":"2021-11-28T06:34:36Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"fb9b9882705db04a825710f899339ea51233a1f6","message":"wip","date":"2021-11-26T09:28:17Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"2976b0b77c995576ff6d2da780f2c8c7b305d3e6","message":"fixes #477","date":"2021-11-26T09:35:46Z"}]},{"author":"affeldt-aist","number":476,"diff_summary":[{"file":"README.md","status":"M","additions":7,"deletions":0},{"file":"coq-mathcomp-analysis.opam","status":"M","additions":7,"deletions":0},{"file":"meta.yml","status":"M","additions":7,"deletions":0}],"state":"merged","open_date":"2021-11-19T13:29:35Z","update_date":"2021-11-19T13:55:48Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"b4e55704f494db5ed18afbd0f76ea16b425f35ea","message":"fix bigenough CI error","date":"2021-11-19T13:40:05Z"}]},{"author":"affeldt-aist","number":475,"diff_summary":[{"file":".github/workflows/docker-action.yml","status":"M","additions":356,"deletions":365},{"file":"CHANGELOG.md","status":"M","additions":356,"deletions":365},{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":356,"deletions":365},{"file":"INSTALL.md","status":"M","additions":356,"deletions":365},{"file":"README.md","status":"M","additions":356,"deletions":365},{"file":"coq-mathcomp-analysis.opam","status":"M","additions":356,"deletions":365},{"file":"meta.yml","status":"M","additions":356,"deletions":365}],"state":"merged","open_date":"2021-11-14T03:13:26Z","update_date":"2021-11-19T13:06:54Z","discussion":[{"author":"affeldt-aist","date":"2021-11-14T10:09:32Z","comment":"Here is the CI error for MathComp 1.12/Coq 8.14:\r\n```\r\n  The following dependencies couldn't be met:\r\n    - coq-mathcomp-analysis -> coq-hierarchy-builder >= 0.10.0 -> coq-elpi -> coq < 8.14~\r\n        not available because the package is pinned to version 8.14.0\r\n    - coq-mathcomp-analysis -> coq-hierarchy-builder >= 0.10.0 -> coq-elpi -> ocaml >= 4.07.0\r\n        base of this switch (use `--unlock-base' to force)\r\n```"},{"author":"pi8027","date":"2021-11-15T04:10:16Z","comment":"@affeldt-aist That's the issue I reported as math-comp/docker-mathcomp#12."},{"author":"affeldt-aist","date":"2021-11-15T13:27:01Z","comment":"@pi8027 Thank you. I was bewildered by the failing dependency chain. Is there a way to make the CI use the \"switch\"? @erikmd "}],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"1d6444d224998214a077a914d08a3ce95500688d","message":"changelog for version 0.3.11\n\n- update meta.yml and install.md","date":"2021-11-14T10:03:07Z"}]},{"author":"zstone1","number":474,"diff_summary":[{"file":"theories/topology.v","status":"M","additions":43,"deletions":0}],"state":"merged","open_date":"2021-11-12T22:24:38Z","update_date":"2022-01-21T01:31:31Z","discussion":[{"author":"zstone1","date":"2022-01-19T03:14:58Z","comment":"Just wanted to check if there is anything else I should update here before Thursday. "},{"author":"affeldt-aist","date":"2022-01-19T05:46:10Z","comment":"Since there is a definition, we maybe want to add documentation. I added some but you certainly have better wording. We can also maybe gain a few more lines by compressing scripts further."},{"author":"CohenCyril","date":"2022-01-19T11:57:45Z","comment":"Looks good to me, except for the name `evaluator_dep` which does not ring a bell to me (it says nothings about topology and `evaluator` is not an existing naming convention for application in the library).\r\nI'd suggest `prod_topo_apply` or something like this."},{"author":"zstone1","date":"2022-01-20T00:46:44Z","comment":"Ah, that is a dramatic simplification for the continuity proof. Thanks! And I agree your suggested name is much improved. Now updated."}],"review_discussion":[{"author":"CohenCyril","file":"theories/topology.v","date":"2021-12-16T13:26:01Z","comment":"```suggestion\r\n  by move=> e; rewrite eq_axiomK.\r\n```"}],"tags":[],"commits":[{"author":"zstone1","committer":"zstone1","hash":"958cc305415f4f3cdc1a51421dcaca30b732458d","message":"linting pass\n\nfixing lines\n\nUpdate theories/topology.v\n\nusing a better lemma to eliminate Eqdep_dec.eq_rect_eq_dec\n\nCo-authored-by: Cyril Cohen <CohenCyril@users.noreply.github.com>\n\ndoc, lint, compress","date":"2022-01-20T00:23:55Z"},{"author":"zstone1","committer":"zstone1","hash":"e3ffa87614f7f440320ffafe0b7adc28ea3b6cba","message":"renaming and making apply local","date":"2022-01-20T00:38:05Z"},{"author":"zstone1","committer":"zstone1","hash":"2a20c4c703ac3c949e389af4aefae4f5505ae1a6","message":"restoring docs","date":"2022-01-20T00:46:00Z"}]},{"author":"affeldt-aist","number":473,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":51,"deletions":3},{"file":"theories/ereal.v","status":"M","additions":51,"deletions":3},{"file":"theories/sequences.v","status":"M","additions":51,"deletions":3}],"state":"merged","open_date":"2021-11-12T11:33:27Z","update_date":"2021-12-27T23:54:43Z","discussion":[{"author":"affeldt-aist","date":"2021-12-27T02:28:46Z","comment":"Can we consider the proof simplifications as an approval?"}],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"37f1bd38151d2fef47f4a09939189284b4e9479f","message":"lemmas about sequences of ereals\n\n- from PR #404\n\nCo-authored-by: Cyril Cohen <cyril.cohen@inria.fr>","date":"2021-12-23T10:57:44Z"}]},{"author":"affeldt-aist","number":472,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":22,"deletions":0},{"file":"theories/classical_sets.v","status":"M","additions":22,"deletions":0}],"state":"merged","open_date":"2021-11-12T11:15:16Z","update_date":"2021-12-21T04:39:12Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"cfb7aeb84a440288c2fd86608f52683bba10d448","message":"lemmas about cover\n\n- from PR #371\n\nCo-authored-by: Cyril Cohen <cyril.cohen@inria.fr>","date":"2021-12-21T03:35:29Z"}]},{"author":"affeldt-aist","number":471,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":2,"deletions":2},{"file":"theories/topology.v","status":"M","additions":2,"deletions":2}],"state":"merged","open_date":"2021-11-08T09:59:12Z","update_date":"2021-11-08T12:01:55Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"6b8424d5f91feddfe40a996a35ed2d8927eab8d0","message":"fixes #461","date":"2021-11-08T09:58:36Z"}]},{"author":"affeldt-aist","number":469,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":105,"deletions":18},{"file":"theories/classical_sets.v","status":"M","additions":105,"deletions":18},{"file":"theories/measure.v","status":"M","additions":105,"deletions":18}],"state":"merged","open_date":"2021-11-05T00:28:19Z","update_date":"2021-11-08T07:24:45Z","discussion":[],"review_discussion":[{"author":"CohenCyril","file":"theories/measure.v","date":"2021-11-07T00:14:59Z","comment":"Never use a lemma called `Internal`"}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"0c156a4fb46d024093d19c97003db9e94aef6dfa","message":"lemma generalization and addition","date":"2021-11-05T09:47:20Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"112daee44faeeda1fcec4f5d360951411dbf0504","message":"renamings and lemma addition from PR #371","date":"2021-11-05T09:53:39Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"1aa9d8c09c448af4f5399e5eece573a068c9b236","message":"avoid resorting to an Internal lemma","date":"2021-11-07T07:01:32Z"}]},{"author":"CohenCyril","number":468,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":134,"deletions":129},{"file":"theories/csum.v","status":"M","additions":134,"deletions":129},{"file":"theories/ereal.v","status":"M","additions":134,"deletions":129},{"file":"theories/measure.v","status":"M","additions":134,"deletions":129},{"file":"theories/normedtype.v","status":"M","additions":134,"deletions":129},{"file":"theories/sequences.v","status":"M","additions":134,"deletions":129}],"state":"merged","open_date":"2021-11-04T23:24:29Z","update_date":"2021-12-15T10:18:01Z","discussion":[],"review_discussion":[{"author":"proux01","file":"theories/ereal.v","date":"2021-11-05T08:35:24Z","comment":"We have `NEFin` just above, should we remove it? or add `BEFin` and `MEFin`?"},{"author":"proux01","file":"theories/ereal.v","date":"2021-11-05T08:42:14Z","comment":"```suggestion\r\n```"},{"author":"proux01","file":"theories/ereal.v","date":"2021-11-05T08:59:35Z","comment":"Not sure I'd call that a proof simplification?"},{"author":"proux01","file":"theories/ereal.v","date":"2021-11-05T09:01:28Z","comment":"```suggestion\r\nLemma pmule_lgt0 x y : 0 < x -> (y * x > 0) = (y > 0).\r\nProof. by move=> xgt0; rewrite muleC pmule_rgt0. Qed.\r\n```\r\n(and same below for some nmule*, but probably not worth the change)"},{"author":"affeldt-aist","file":"theories/ereal.v","date":"2021-11-05T10:03:51Z","comment":"Shouldn't `NEFin` (and `oppEFin` for that matter) actually be `EFinN`?\r\n(and `EFinD`, etc.)"},{"author":"proux01","file":"theories/ereal.v","date":"2021-11-08T14:20:34Z","comment":"could you please also rename\r\n```suggestion\r\nLemma dEFinB (r r' : R) : (r - r')%R%:E = r%:E - r'%:E.\r\n```"}],"tags":[],"commits":[{"author":"CohenCyril","committer":"CohenCyril","hash":"b4dbcf97446a1e1880bb93eb6043b69522f90ae9","message":"Proof simplifications in ereal.v","date":"2021-12-14T15:02:48Z"}]},{"author":"affeldt-aist","number":467,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":89,"deletions":69},{"file":"theories/altreals/distr.v","status":"M","additions":89,"deletions":69},{"file":"theories/altreals/realseq.v","status":"M","additions":89,"deletions":69},{"file":"theories/altreals/realsum.v","status":"M","additions":89,"deletions":69},{"file":"theories/ereal.v","status":"M","additions":89,"deletions":69},{"file":"theories/sequences.v","status":"M","additions":89,"deletions":69}],"state":"merged","open_date":"2021-11-04T22:49:34Z","update_date":"2021-11-05T08:38:16Z","discussion":[{"author":"affeldt-aist","date":"2021-11-04T23:54:34Z","comment":"you meant `fine` maybe"}],"review_discussion":[{"author":"proux01","file":"CHANGELOG_UNRELEASED.md","date":"2021-11-05T07:43:34Z","comment":"Also `fineN`, `fineD`, `fineK` and `fine_expand`?"},{"author":"affeldt-aist","file":"CHANGELOG_UNRELEASED.md","date":"2021-11-05T08:14:09Z","comment":"I was about to add a couple of other lemmas so I documented the names change on this occasion."}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"4259baa84b5c51cafe5fa1bcead8da8037ba1843","message":"telescope for ereal","date":"2021-11-04T22:48:45Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"058ef4e9cedb773003d46032d7c8e6e418f63699","message":"renaming `real_of_extended` to `fine`","date":"2021-11-04T23:57:54Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"875010e213337a05305ea4f79ccb6c6b273faf1c","message":"other lemmas from PR #371 and changelog fix","date":"2021-11-05T08:12:40Z"}]},{"author":"proux01","number":466,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":82,"deletions":51},{"file":"theories/ereal.v","status":"M","additions":82,"deletions":51}],"state":"merged","open_date":"2021-11-03T15:32:52Z","update_date":"2021-11-04T07:50:31Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"proux01","committer":"proux01","hash":"5882d402cdf05c6f546b4ad64a5b29b152090ba3","message":"Some lemmas about mule don't require realDomainType\n\nThey are already valid on numDomainType.","date":"2021-11-03T15:33:29Z"}]},{"author":"proux01","number":465,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":82,"deletions":51},{"file":"theories/classical_sets.v","status":"M","additions":82,"deletions":51}],"state":"merged","open_date":"2021-11-03T10:47:53Z","update_date":"2021-11-04T13:55:37Z","discussion":[],"review_discussion":[{"author":"affeldt-aist","file":"theories/classical_sets.v","date":"2021-11-04T08:12:02Z","comment":"If we use the `homo` notation, how can the user see the statement `A <= B -> C | A <= C | B`?\r\nI am not sure it can be `Search`ed and `About` expands `setUS` to the point it is unreadable,\r\nat least in my setting. How can I mitigate this problem? By the way `finset.v` does not use the `homo` notation but this is maybe for a different reason (like the notation was not available at the time it was first written). "},{"author":"proux01","file":"theories/classical_sets.v","date":"2021-11-04T09:31:08Z","comment":"I agree it's an issue. The best fix would probably be improving `Search`. I have no strong opinion, so let's revert this.\r\nI keep the order of argument though, which is still an improvement (`C` shouldn't be implicit but I don't know how to fix that, short of putting `Arguments` commands everywhere)."},{"author":"CohenCyril","file":"theories/classical_sets.v","date":"2021-11-04T10:25:00Z","comment":"Please restore the line below (i.e. `Proof.`)\r\n```suggestion\r\nLemma setCS A B : (~` A `<=` ~` B) = (B `<=` A).\r\nProof.\r\n```"},{"author":"proux01","file":"theories/classical_sets.v","date":"2021-11-04T10:27:31Z","comment":"Indeed, sorry."}],"tags":[],"commits":[{"author":"proux01","committer":"proux01","hash":"c554b60eea6b62a5a6414b51cb9593d761a7ce61","message":"[set] Use usual predicates more uniformly\n\n* commutative\n* associative\n* left_id\n* right_id\n* left_zero\n* right_zero\n* left_commutative\n* right_commutative\n* interchange\n* idempotent","date":"2021-11-03T10:49:37Z"},{"author":"proux01","committer":"proux01","hash":"7b79b2c813773e295b68e7ab6410264ff66cd615","message":"[set] Add lemmas on `|` related to existing ones on `&`","date":"2021-11-03T10:49:37Z"},{"author":"proux01","committer":"proux01","hash":"59eaf535ebdc91ac7c72516045979bb4ff9f4881","message":"[set] Change some argument order","date":"2021-11-04T10:29:55Z"}]},{"author":"CohenCyril","number":464,"diff_summary":[{"file":".github/workflows/coq-action.yml","status":"A","additions":228,"deletions":174},{"file":".github/workflows/docker-action.yml","status":"A","additions":228,"deletions":174},{"file":".github/workflows/nix-action-8.11.yml","status":"A","additions":228,"deletions":174},{"file":".github/workflows/nix-action-8.12.yml","status":"A","additions":228,"deletions":174},{"file":".github/workflows/nix-action-8.13.yml","status":"A","additions":228,"deletions":174},{"file":".github/workflows/nix-action-8.14.yml","status":"A","additions":228,"deletions":174},{"file":".nix/config.nix","status":"A","additions":228,"deletions":174},{"file":".nix/coq-nix-toolbox.nix","status":"A","additions":228,"deletions":174},{"file":"README.md","status":"A","additions":228,"deletions":174},{"file":"coq-mathcomp-analysis.opam","status":"A","additions":228,"deletions":174},{"file":"meta.yml","status":"A","additions":228,"deletions":174}],"state":"merged","open_date":"2021-10-30T01:59:04Z","update_date":"2021-10-31T09:43:16Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"CohenCyril","committer":"CohenCyril","hash":"b09eea8d147c2a1213aa7c474c5888de5a700b2b","message":"Try Coq 8.14 and dev and mathcomp 1.13 and dev","date":"2021-10-30T22:07:43Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"672d30999bb83a61d09f52c2c887ed4f20fa2bd4","message":"Update toolbox and meta.yml\n\n- add nix CI for Coq 8.14\n- remove broken docker CIs","date":"2021-10-30T22:07:43Z"},{"author":"CohenCyril","committer":"web-flow","hash":"38e43f22cfef4c6f88d085c2345422a0b70b24a2","message":"Delete coq-action.yml","date":"2021-10-31T09:28:45Z"}]},{"author":"CohenCyril","number":463,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":508,"deletions":202},{"file":"theories/boolp.v","status":"M","additions":508,"deletions":202},{"file":"theories/cardinality.v","status":"M","additions":508,"deletions":202},{"file":"theories/classical_sets.v","status":"M","additions":508,"deletions":202},{"file":"theories/measure.v","status":"M","additions":508,"deletions":202},{"file":"theories/topology.v","status":"M","additions":508,"deletions":202}],"state":"merged","open_date":"2021-10-30T01:24:07Z","update_date":"2021-10-30T16:59:27Z","discussion":[{"author":"affeldt-aist","date":"2021-10-30T14:10:39Z","comment":"Is it possible to make some room in this PR for this lemma?\r\n```\r\nLemma bigcup_setU P F G : \\bigcup_(i in P) (F i `|` G i) =\r\n  (\\bigcup_(i in P) F i) `|` (\\bigcup_(i in P) G i).\r\nProof.\r\nrewrite predeqE => x; split=> [[i Pi [Fix|Gix]]|[[i Pi Fix]|[i Pi Gix]]];\r\n  by [left; exists i|right; exists i|exists i =>//; left|exists i =>//; right].\r\nQed.\r\n```\r\nIt is used in PR #371 and now its name clashes with one of the recent additions. "},{"author":"CohenCyril","date":"2021-10-30T14:13:39Z","comment":"> Is it possible to make some room in this PR for this lemma?\r\n> \r\n> ```\r\n> Lemma bigcup_setU P F G : \\bigcup_(i in P) (F i `|` G i) =\r\n>   (\\bigcup_(i in P) F i) `|` (\\bigcup_(i in P) G i).\r\n> Proof.\r\n> rewrite predeqE => x; split=> [[i Pi [Fix|Gix]]|[[i Pi Fix]|[i Pi Gix]]];\r\n>   by [left; exists i|right; exists i|exists i =>//; left|exists i =>//; right].\r\n> Qed.\r\n> ```\r\n> \r\n> It is used in PR #371 and now its name clashes with one of the recent additions.\r\n\r\nSure, with the new conventions, it should be `bigcupU`."}],"review_discussion":[],"tags":[],"commits":[{"author":"CohenCyril","committer":"CohenCyril","hash":"c418b34bdf54f7b5b64af3c037f9a41e9437549b","message":"Uniformizing and completing bigcup and bigcap theory","date":"2021-10-30T01:39:48Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"57a7a7529130e2eb6fe5228a4ea06f421c3faaf7","message":"nitpicking","date":"2021-10-30T08:43:21Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"c303e58648c8f0bd67253d47a383a6bd4282a17a","message":"compacting proofs + new lemmas\n\nCo-Authored-By: Reynald Affeldt <reynald.affeldt@aist.go.jp>","date":"2021-10-30T15:21:52Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"ff6a3575065e8f425f14422dd48a63b36cf36b82","message":"fix compilation for Coq 8.11","date":"2021-10-30T15:58:51Z"}]},{"author":"CohenCyril","number":462,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":504,"deletions":15},{"file":"theories/classical_sets.v","status":"M","additions":504,"deletions":15},{"file":"theories/topology.v","status":"M","additions":504,"deletions":15}],"state":"merged","open_date":"2021-10-30T01:19:42Z","update_date":"2021-10-30T18:34:38Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"zstone1","committer":"CohenCyril","hash":"9efd53bc08de5e55b04f38154b8e49193099ff46","message":"Adding domain restrictions and compact convergence","date":"2021-10-30T18:15:13Z"}]},{"author":"affeldt-aist","number":460,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":201,"deletions":157},{"file":"theories/cardinality.v","status":"M","additions":201,"deletions":157},{"file":"theories/classical_sets.v","status":"M","additions":201,"deletions":157},{"file":"theories/derive.v","status":"M","additions":201,"deletions":157},{"file":"theories/normedtype.v","status":"M","additions":201,"deletions":157},{"file":"theories/realfun.v","status":"M","additions":201,"deletions":157},{"file":"theories/reals.v","status":"M","additions":201,"deletions":157},{"file":"theories/topology.v","status":"M","additions":201,"deletions":157}],"state":"merged","open_date":"2021-10-25T02:42:21Z","update_date":"2021-10-30T19:39:34Z","discussion":[{"author":"CohenCyril","date":"2021-10-29T09:48:15Z","comment":"@affeldt-aist thanks for extracting this bit from the other PR it was needed indeed."}],"review_discussion":[{"author":"proux01","file":"theories/classical_sets.v","date":"2021-10-29T09:03:44Z","comment":"```suggestion\r\nNotation \"[ 'set`' p ]\":= [set x | x \\in p]\r\n  (format \"[ 'set`'  p ]\") : classical_set_scope.\r\n```\r\nshouldn't there be a reserve notation?"},{"author":"proux01","file":"theories/classical_sets.v","date":"2021-10-29T09:05:38Z","comment":"The notation doesn't seem specific to intervals but works for anything with a canonical structure for `\\in` isn't it?\r\nMaybe document the interval notations on their own entry just below (`'[a, b] == ...`,...)."},{"author":"proux01","file":"theories/realfun.v","date":"2021-10-29T09:10:25Z","comment":"Shouldn't the `@` notation open the classic scope, to avoid that scope annotation?"},{"author":"CohenCyril","file":"theories/realfun.v","date":"2021-10-29T09:43:28Z","comment":"This is a ``_ @`[_, _]`` notation, ~~I think there was a mistake and~~ it should be:\r\n```suggestion\r\n    (J := [set` f @`[a, b]]) :\r\n```"},{"author":"CohenCyril","file":"theories/classical_sets.v","date":"2021-10-29T09:44:30Z","comment":"The level and format need not be repeated."},{"author":"CohenCyril","file":"theories/normedtype.v","date":"2021-10-29T09:45:01Z","comment":"Should be documented as well."},{"author":"affeldt-aist","file":"theories/realfun.v","date":"2021-10-29T10:23:51Z","comment":"Indeed, except that the `classical` scope is not open in `realfun.v` whereas it is in `normedtype.v`. This choice was originally motivated by the number of occurrences of each type of intervals in both files."},{"author":"proux01","file":"theories/realfun.v","date":"2021-10-29T10:54:30Z","comment":"My bad, I misread this for ``f @` `[a, b]`` which is something completely different."},{"author":"CohenCyril","file":"theories/realfun.v","date":"2021-10-29T11:27:28Z","comment":"```suggestion\r\n    (I := `[a, b]%classic) (J := [set` f @`[a, b]]%classic) :\r\n```"},{"author":"CohenCyril","file":"theories/realfun.v","date":"2021-10-29T11:29:10Z","comment":"> Indeed, except that the `classical` scope is not open in `realfun.v` whereas it is in `normedtype.v`. This choice was originally motivated by the number of occurrences of each type of intervals in both files.\r\n\r\nYou could open the `classical` scope before the `ring_scope` in order to get precedence for the `ring_scope` though"},{"author":"CohenCyril","file":"theories/realfun.v","date":"2021-10-29T11:30:16Z","comment":"Actually maybe having a classic scoped variant of ``f @`[a, b]`` would be even better."},{"author":"affeldt-aist","file":"theories/realfun.v","date":"2021-10-30T03:35:50Z","comment":"I tried something along this line. Having such a variant and adopting the same scope discipline in `normedtype.v` and `realfun.v` seems to reduce the number of explicit scope annotations and lead to statements light enough to get rid of the `I :=` and `J :=` bindings."}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"CohenCyril","hash":"e26c291656a38b2d46fac888fb82ea5626b2ba23","message":"notation for intervals as sets","date":"2021-10-30T19:23:48Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"582c31019829fd58d2d535d46da4fba98e2dd7d4","message":"address comments\n\nCo-authored-by: Cyril Cohen <cyril.cohen@inria.fr>\nCo-authored-by: Pierre Roux <pierre@roux01.fr>","date":"2021-10-30T19:23:48Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"b2a4d7057092425ff9e810bcb6f10b9eef6bcbde","message":"adjust notations and scope","date":"2021-10-30T19:23:48Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"0c9ba501c611e169efcddc4c3b7a5e13cd1572f3","message":"cleanup in parsing and printing","date":"2021-10-30T19:23:48Z"}]},{"author":"affeldt-aist","number":459,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":399,"deletions":144},{"file":"theories/ereal.v","status":"M","additions":399,"deletions":144},{"file":"theories/measure.v","status":"M","additions":399,"deletions":144}],"state":"merged","open_date":"2021-10-25T02:14:55Z","update_date":"2021-10-30T13:58:01Z","discussion":[{"author":"proux01","date":"2021-10-26T11:04:17Z","comment":"BTW, we could also add `mine` but distributivity of addition over it would require dual addition, so maybe defer it to #374 "},{"author":"affeldt-aist","date":"2021-10-26T11:13:05Z","comment":"> BTW, we could also add `mine` but distributivity of addition over it would require dual addition, so maybe defer it to #374\r\n\r\nI just put the definition (on my side, it is rather maxe lemmas that I need)."}],"review_discussion":[{"author":"proux01","file":"theories/ereal.v","date":"2021-10-25T11:21:20Z","comment":"Maybe adding `lee_abs_sum` while at it."},{"author":"proux01","file":"theories/ereal.v","date":"2021-10-25T11:21:53Z","comment":"Also adding `gte0_abs` and `lee0_abs`?"},{"author":"proux01","file":"theories/ereal.v","date":"2021-10-25T11:23:42Z","comment":"```suggestion\r\nLemma maxEFin r1 r2 : maxe r1%:E r2%:E = (Num.Def.maxr r1 r2)%:E.\r\n```\r\nto be consistent with `addEFin`, `subEFin` and `sumEFin`"},{"author":"CohenCyril","file":"theories/ereal.v","date":"2021-10-25T11:36:07Z","comment":"I do not understand, `max` is already defined isn't it?"},{"author":"CohenCyril","file":"theories/ereal.v","date":"2021-10-25T14:18:01Z","comment":"These are generic, maybe they are unnecessary?"},{"author":"CohenCyril","file":"theories/ereal.v","date":"2021-10-25T14:18:21Z","comment":"Doesn't `maxr r1 r2` work?"},{"author":"CohenCyril","file":"theories/ereal.v","date":"2021-10-25T14:18:35Z","comment":"Or `Num.max` ?"}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"96c09b74ae3abbdf1a8ff51dd8f30855844dc3fa","message":"define maxe and more lemmas about ereal","date":"2021-10-29T09:05:54Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"2df17f8afb9527cc5d14d0193ab2f88bbc29721e","message":"address comments by Pierre and Cyril","date":"2021-10-29T09:05:54Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"1a09c2547fe0309dab7fc285b2781f425e43d753","message":"more lemmas about maxe, abse\n\n- other ereal lemmas\n- add the mine notation\n- fix implicits for EFin and abse\n- fin_num instead of %:E\n- cosmetics","date":"2021-10-30T07:00:13Z"}]},{"author":"affeldt-aist","number":458,"diff_summary":[{"file":"Makefile.common","status":"M","additions":14,"deletions":1},{"file":"theories/normedtype.v","status":"M","additions":14,"deletions":1}],"state":"open","open_date":"2021-10-22T07:15:33Z","update_date":"2023-03-15T15:06:03Z","discussion":[{"author":"proux01","date":"2021-10-22T14:50:24Z","comment":"Indeed, it's terribly slow (nearly 45 minutes for topology.v), I don't know why, the file is large (4800 lines and generated HTML is 3.7 Mo) but not exceptionally huge.\r\nMaybe @cpitclaudel or @ejgallego would have an idea?"},{"author":"thery","date":"2021-10-22T15:18:57Z","comment":"Did you try --html-minification #cpitclaudel/alectryon/issues/35"},{"author":"cpitclaudel","date":"2021-10-23T19:09:50Z","comment":"I can have a look, thanks for the ping.  What commands do I need to run to compile that file?"},{"author":"ejgallego","date":"2021-10-24T18:38:53Z","comment":"> Maybe @cpitclaudel or @ejgallego would have an idea?\r\n\r\nNo idea, other than the well-known efficiency problems as of today; we are working on some workarounds that I feel should help a lot [pyCoq and coq-layout-engine], mainly the allowing tools such as Alectryon do everything in a single pass [no roundtrip] , but still not there yet."},{"author":"affeldt-aist","date":"2021-10-24T23:59:39Z","comment":"> Did you try --html-minification #[cpitclaudel/alectryon/issues/35](https://github.com/cpitclaudel/alectryon/issues/35)\r\n\r\nI just tried but it ends up with an error (`^CTraceback (most recent call last): ...`, referring to `.py` files from alectryon) this time after about 30 min.\r\n"},{"author":"affeldt-aist","date":"2021-10-25T00:01:12Z","comment":"> I can have a look, thanks for the ping. What commands do I need to run to compile that file?\r\n\r\nThanks for your time (and for the tool, the rendering is nice).\r\n`make alectryon`. This is a target in `Makefile.common`."},{"author":"affeldt-aist","date":"2021-10-25T14:54:38Z","comment":"I got a bit more feedback from @ejgallego : https://github.com/ejgallego/coq-serapi/issues/260\r\n\r\nIt looks like it is going to be difficult to use alectryon for us. :-( "},{"author":"affeldt-aist","date":"2023-02-12T10:01:56Z","comment":"I tried again today with Alectryon 1.4.0, coq-serapi 8.15.0+0.15.0, coq 8.15.2 and\r\nit seems that it could generate html versions for all files,\r\nsee https://math-comp.github.io/analysis/htmldoc_master_alectryon/.\r\n\r\nHowever there were a number of warnings (`Dynlink error... The offending chunk is deliminated by...`) and\r\na critical error (`[sertop] Critical Dynlink` critical).\r\nI guess that part of the problem is that alectryon does not find `.vo` files despite the `-R` options\r\nthat I maybe got wrong.\r\n\r\n`--html-minification` does not seem to have a visible effect.\r\n\r\nIs there a way to hide the `Proof. ... Qed.` blocks?"},{"author":"cpitclaudel","date":"2023-02-12T17:45:52Z","comment":"Great work!\r\n\r\n> Is there a way to hide the Proof. ... Qed. blocks?\r\n\r\nNot built-in; it's relatively easy to add it as a custom script, but the exact process depends on what you need.  Do you want them removed completely, or dynamically shown/hidden with a click?\r\n\r\n> However there were a number of warnings (Dynlink error... The offending chunk is deliminated by...) and\r\na critical error ([sertop] Critical Dynlink critical).\r\n\r\nHow annoying.  I didn't have time to work on Alectryon while I was at AWS, but I'm planning to resume now that I've moved.\r\nIs there a simple recipe I could try out?\r\n\r\n> `--html-minification` does not seem to have a visible effect.\r\n\r\nMaybe I can try to help with that too."},{"author":"affeldt-aist","date":"2023-02-13T00:11:10Z","comment":"> \r\n\r\n"},{"author":"affeldt-aist","date":"2023-02-13T00:15:11Z","comment":"> Do you want them removed completely, or dynamically shown/hidden with a click?\r\n\r\nDynamic would be great but we were only thinking about hiding as with coqdoc.\r\nIn fact, so far, we were mostly thinking of using alectryon as a replacement for coqdoc\r\nto generate the documentation of MathComp-Analysis as in:\r\nhttps://math-comp.github.io/analysis/\r\n\r\n> Is there a simple recipe I could try out?\r\n\r\nMaybe clone this branch https://github.com/math-comp/analysis/tree/alectryon\r\nand try `make alectryon`. This takes some time.\r\n"}],"review_discussion":[],"tags":[{"tag":"experiment :test_tube:","description":"This issue/PR is very experimental"},{"tag":"documentation :memo:","description":"This issue/PR is about documentation of the library / repository"}],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"449723b090f6429a91efe1ea467806aa75516e40","message":"doc generated with alectryon","date":"2023-02-12T09:24:20Z"}]},{"author":"affeldt-aist","number":457,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":30,"deletions":3},{"file":"Makefile.common","status":"M","additions":30,"deletions":3},{"file":"theories/normedtype.v","status":"M","additions":30,"deletions":3}],"state":"merged","open_date":"2021-10-22T05:54:35Z","update_date":"2021-12-28T02:31:38Z","discussion":[{"author":"affeldt-aist","date":"2021-10-24T23:15:43Z","comment":"or create a subdirectory `analysis` on https://math-comp.github.io/ ?"},{"author":"affeldt-aist","date":"2021-10-25T14:57:43Z","comment":"FYI, PR #458 tried to generate the same documentation using alectryon but that won't be as immediate as coqdoc."}],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"1ac0db9ac133b8030147cbbf4499a799a6244ec0","message":"add doc targets to makefile\n\n- also remove a few spurious comments","date":"2021-11-26T09:42:12Z"}]},{"author":"affeldt-aist","number":455,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":117,"deletions":59},{"file":"theories/measure.v","status":"M","additions":117,"deletions":59},{"file":"theories/normedtype.v","status":"M","additions":117,"deletions":59},{"file":"theories/reals.v","status":"M","additions":117,"deletions":59},{"file":"theories/sequences.v","status":"M","additions":117,"deletions":59}],"state":"merged","open_date":"2021-10-14T04:33:05Z","update_date":"2021-12-16T01:25:50Z","discussion":[{"author":"affeldt-aist","date":"2021-10-14T08:48:58Z","comment":"The CI seems to fail only with Coq 8.12. Here is one of the error messages for information: SOLVED\r\n```\r\n  # File \"./.coq-native/Nmathcomp_bigenough_bigenough.native\", line 169, characters 3-66:\r\n  # Error: Unbound module Nmathcomp_ssreflect_ssrnat\r\n  # File \"./bigenough.v\", line 121, characters 0-14:\r\n  # Warning: Removed file ./bigenough.vo\r\n  # Error: Native compiler exited with status 2\r\n  # \r\n  # make[2]: *** [Makefile.coq:678: bigenough.vo] Error 1\r\n  # make[1]: *** [Makefile.coq:327: all] Error 2\r\n  # make[1]: Leaving directory '/home/coq/.opam/4.05.0/.opam-switch/build/coq-mathcomp-bigenough.1.0.0'\r\n  # make: *** [Makefile.common:51: this-build] Error 2\r\n  ```"},{"author":"affeldt-aist","date":"2021-10-27T13:37:13Z","comment":"The bigenough error is no more, this is about a time out now (this is not specific to this PR): SOLVED\r\n```\r\n  Error:  Sorry, resolution of the request timed out.\r\n          Try to specify a simpler request, use a different solver, or increase the allowed time by setting OPAMSOLVERTIMEOUT to a bigger value \r\n```"},{"author":"affeldt-aist","date":"2021-10-28T03:13:24Z","comment":"It's a time out but the web interface gives the impression of an almost instantaneous failure. SOLVED"},{"author":"CohenCyril","date":"2021-12-15T12:17:49Z","comment":"@affeldt-aist did you force-push on top of my simplifications ? (https://github.com/math-comp/analysis/commit/6df74ff30a6c1ee133f0c6f983bee56ce071b46e)"},{"author":"affeldt-aist","date":"2021-12-15T13:29:48Z","comment":"> @affeldt-aist did you force-push on top of my simplifications ? ([6df74ff](https://github.com/math-comp/analysis/commit/6df74ff30a6c1ee133f0c6f983bee56ce071b46e))\r\n\r\nI am afraid that I did this mistake, sorry. :-(\r\n(should be fixed now)"}],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"673962e599a16c2176b638a8b2e1888b4f72723e","message":"enforce usage of available bound predicates\n\n- to avoid passing explicitly bounds in a few sequences.v\n  lemmas\n- other minor additions about bounded_fun and to sequences.v\n- fixes #470","date":"2021-12-15T13:48:44Z"},{"author":"CohenCyril","committer":"affeldt-aist","hash":"a4ed9ee6070bdeda294db9b45fe41ce7bd54dcf4","message":"shorter proof scripts","date":"2021-12-15T13:48:44Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"cd1d484864a65f85f7fca60fa913b44803872102","message":"fix","date":"2021-12-15T14:01:02Z"}]},{"author":"affeldt-aist","number":454,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":6,"deletions":5},{"file":"theories/boolp.v","status":"M","additions":6,"deletions":5},{"file":"theories/topology.v","status":"M","additions":6,"deletions":5}],"state":"merged","open_date":"2021-10-13T08:21:17Z","update_date":"2021-10-15T06:47:35Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"cd64b3daf056d59fe47517fb80153ad753f76e65","message":"fixes #453","date":"2021-10-14T08:50:02Z"}]},{"author":"affeldt-aist","number":452,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":4,"deletions":9},{"file":"theories/derive.v","status":"M","additions":4,"deletions":9},{"file":"theories/topology.v","status":"M","additions":4,"deletions":9}],"state":"merged","open_date":"2021-10-04T13:36:17Z","update_date":"2021-10-07T04:27:12Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"94b97ddac627c762ad4d3eedbcc982a25da6f836","message":"remove duplicate","date":"2021-10-04T13:35:03Z"}]},{"author":"affeldt-aist","number":451,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":98,"deletions":113},{"file":"theories/Rstruct.v","status":"M","additions":98,"deletions":113},{"file":"theories/derive.v","status":"M","additions":98,"deletions":113},{"file":"theories/ereal.v","status":"M","additions":98,"deletions":113},{"file":"theories/normedtype.v","status":"M","additions":98,"deletions":113},{"file":"theories/topology.v","status":"M","additions":98,"deletions":113}],"state":"merged","open_date":"2021-10-04T08:10:36Z","update_date":"2021-10-07T04:57:21Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"4b272e2f0dc65ec01975863530ae6075bcf469bb","message":"fixes #450","date":"2021-10-04T08:09:05Z"}]},{"author":"affeldt-aist","number":449,"diff_summary":[{"file":"theories/topology.v","status":"M","additions":39,"deletions":27}],"state":"merged","open_date":"2021-10-04T06:54:00Z","update_date":"2021-10-21T23:11:28Z","discussion":[],"review_discussion":[{"author":"CohenCyril","file":"theories/topology.v","date":"2021-10-05T11:09:30Z","comment":"I was wrong it is clearly not read only.\r\n```suggestion\r\n(*                                     filteredType U.                       *)\r\n```"},{"author":"CohenCyril","file":"theories/topology.v","date":"2021-10-20T13:07:57Z","comment":"I do not understand the rephrasing... it does not sound english to me anymore.\r\nMaybe  \"a cnonical structure of filteredType U on T\", but why change the original phrasing?\r\nSame comment for every rephrasing of the sort later on..."},{"author":"affeldt-aist","file":"theories/topology.v","date":"2021-10-20T13:14:57Z","comment":"it was my understanding that in the documentation \"canonical\" was used with two meanings, one for canonical filters and one for \"canonical structure\" in the sense of the MathComp hierarchy of structures, and that this was source of confusion, by insisting on identifying more precisely \"canonical structure\" I hoped to clarify"},{"author":"CohenCyril","file":"theories/topology.v","date":"2021-10-20T13:17:59Z","comment":"Then add \"of\" and it should be ok..."}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"9a093ce61ea12e70b3309c151d38d54b598b3c7b","message":"documentation improvement\n\n- fixes #157\n- fixes #448","date":"2021-10-21T09:00:59Z"}]},{"author":"affeldt-aist","number":447,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":63,"deletions":46},{"file":"theories/landau.v","status":"M","additions":63,"deletions":46},{"file":"theories/normedtype.v","status":"M","additions":63,"deletions":46},{"file":"theories/sequences.v","status":"M","additions":63,"deletions":46}],"state":"merged","open_date":"2021-10-04T03:22:52Z","update_date":"2021-12-04T05:28:33Z","discussion":[],"review_discussion":[{"author":"CohenCyril","file":"theories/normedtype.v","date":"2021-10-05T11:10:53Z","comment":"While you're at it, I'd rephrase those with a precondition rather than an explicit `%:num`\r\n"},{"author":"CohenCyril","file":"theories/normedtype.v","date":"2021-11-02T17:33:20Z","comment":"```suggestion\r\nLemma nbhs_pinfty_gt_pos r : 0 < r -> \\forall x \\near +oo, r < x.\r\n```"},{"author":"CohenCyril","file":"theories/normedtype.v","date":"2021-11-02T17:34:03Z","comment":"Is it necessary though? Isn't it subsumed by the `real` one? which could be the \"main\" one instead."},{"author":"affeldt-aist","file":"theories/normedtype.v","date":"2021-11-03T10:57:33Z","comment":"Both are actually used but it is true that there is such a small difference that this indicates a potential factorization. Should you put an issue about that?"}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"5e8586e573b4b1f99bb860a44039cf0c12f3d1ce","message":"fixes #446","date":"2021-12-03T07:16:38Z"}]},{"author":"affeldt-aist","number":445,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":7,"deletions":5},{"file":"theories/normedtype.v","status":"M","additions":7,"deletions":5},{"file":"theories/sequences.v","status":"M","additions":7,"deletions":5}],"state":"closed","open_date":"2021-10-04T03:02:02Z","update_date":"2021-10-05T11:12:22Z","discussion":[{"author":"CohenCyril","date":"2021-10-05T11:12:22Z","comment":"Indeed `is_cvg` is the naming convention for `cvg _` while `cvg` is for `lim _`, but I think we can make an exception for preconditions, since `lim` is not a proposition, there is no ambiguity."}],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"c071244e5fce205d79e8a01ff51ab54f58d39b6e","message":"fixes #439","date":"2021-10-04T03:07:11Z"}]},{"author":"affeldt-aist","number":444,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":119,"deletions":120},{"file":"theories/csum.v","status":"M","additions":119,"deletions":120},{"file":"theories/ereal.v","status":"M","additions":119,"deletions":120},{"file":"theories/measure.v","status":"M","additions":119,"deletions":120},{"file":"theories/sequences.v","status":"M","additions":119,"deletions":120}],"state":"merged","open_date":"2021-10-04T02:48:03Z","update_date":"2021-10-07T04:55:57Z","discussion":[{"author":"proux01","date":"2021-10-04T08:24:30Z","comment":"Impressive refactoring ! (I would have feared that this would break more code)"}],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"212634133fdd6ed617b251f1cc21093a414cf3d3","message":"favor the use of `\\is a fin_num`\n\n- remove a lemma and minor simplifications","date":"2021-10-07T04:28:32Z"}]},{"author":"proux01","number":440,"diff_summary":[{"file":"theories/csum.v","status":"M","additions":121,"deletions":121},{"file":"theories/derive.v","status":"M","additions":121,"deletions":121},{"file":"theories/landau.v","status":"M","additions":121,"deletions":121},{"file":"theories/measure.v","status":"M","additions":121,"deletions":121},{"file":"theories/normedtype.v","status":"M","additions":121,"deletions":121},{"file":"theories/sequences.v","status":"M","additions":121,"deletions":121},{"file":"theories/topology.v","status":"M","additions":121,"deletions":121}],"state":"closed","open_date":"2021-10-01T07:22:25Z","update_date":"2021-10-01T11:29:13Z","discussion":[{"author":"proux01","date":"2021-10-01T07:24:52Z","comment":"> Oups, this is actually a duplicate of #343 \r\n\r\nIt was not merged because the CI failed, we maybe have to wait until older versions become unsupported."},{"author":"proux01","date":"2021-10-01T11:29:13Z","comment":"Indeed, we'll have to drop support for Coq 8.11 and 8.12 when we'll want to support 8.15.\r\nSo closing this one."},{"author":"proux01","date":"2021-10-01T11:29:24Z","comment":"Sorry for the noise."}],"review_discussion":[],"tags":[],"commits":[{"author":"proux01","committer":"proux01","hash":"133519510e9560fa26dbd4e25dee5c619ac56996","message":"Remove Grab Existential Variables\n\nDeprecated since Coq 8.13 and removed in 8.15 coq/coq#14819","date":"2021-10-01T07:21:44Z"}]},{"author":"vlj","number":438,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":75,"deletions":34},{"file":"theories/classical_sets.v","status":"M","additions":75,"deletions":34},{"file":"theories/normedtype.v","status":"M","additions":75,"deletions":34},{"file":"theories/topology.v","status":"M","additions":75,"deletions":34}],"state":"merged","open_date":"2021-09-26T21:27:54Z","update_date":"2022-01-06T13:27:10Z","discussion":[{"author":"vlj","date":"2021-09-26T21:43:51Z","comment":"Actually I used setC1E since it makes the other proof cleaner."},{"author":"affeldt-aist","date":"2021-10-13T08:10:30Z","comment":"> This PR adds T0 and T1 spaces definitions, proof that singletons in T1 space are closed, and that T1 -> T0.\r\n\r\nThank you for your contribution!\r\n\r\n> I introduced 2 lemmas in classical_sets to make easy to work with [set~ x] : setC_set1C and setC_subset_set1C.\r\n> I'm not really sure about the naming convention:\r\n\r\nFor T_0 and T_1, we should maybe go with full names like we did for `hausdorff`, otherwise it looks too much\r\nlike code identifier.\r\n\r\n>     * setC_subset_set1C is involving a subset of set1C, but I don't know how to phrase it correctly.\r\n> I'm also not sure my proof is optimal.\r\n\r\nIt can be a one-liner, I am not sure about the naming either, I would propose to name it on the model of\r\n`disjoints_subset` because it looks like a special case.\r\n"},{"author":"CohenCyril","date":"2021-12-08T23:41:33Z","comment":"FYI\r\n- removed useless `setC1E` (it is convertible and `inE` yields the same result)\r\n- removed `mem_setC_subset` which was a duplicate of `setC_subset_set1C`\r\n- generalized and renamed the latter to `subsetC1`\r\n- removed all uses of `-in_setE`"}],"review_discussion":[],"tags":[{"tag":"enhancement :sparkles:","description":"This issue/PR is about adding new features enhancing the library"}],"commits":[{"author":"vlj","committer":"affeldt-aist","hash":"a2780317e094137454fe20e0508b9d8f39743251","message":"Introduce T_0 and T_1 spaces and prove T_1 -> T0.","date":"2021-12-29T09:07:14Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"6464cc1aab4b54fa6a12eea8397cd5350522a127","message":"formatting\n\n- `setC_subset_set1C` rename to `mem_setC_subset` on the model\n   of the lemma `disjoints_subset`\n- `setC1E` rather than `set1CE` with equality the other way around\n- rename `T_0` and `T_1` to `kolmogorov` and `accessible` on\n  the model of `hausdorff`\n- update changelog and documentation","date":"2021-12-29T09:07:14Z"},{"author":"CohenCyril","committer":"affeldt-aist","hash":"b77e7f3416e645bdd8b07e4ed4e38c888b4a578e","message":"fix\n\n- removed useless `setC1E` (it is convertible and `inE` yields the same result)\n- removed `mem_setC_subset` which was a duplicate of `setC_subset_set1C`\n- generalized and renamed the latter to `subsetC1`\n- removed all uses of `-in_setE`","date":"2021-12-29T09:07:14Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"c959eeeb7c68b6f3ac054861306c06a2e78ba9f7","message":"renaming\n\n- following 2021-12-16 meeting","date":"2021-12-29T09:32:10Z"}]},{"author":"affeldt-aist","number":436,"diff_summary":[{"file":"theories/csum.v","status":"M","additions":26,"deletions":32},{"file":"theories/measure.v","status":"M","additions":26,"deletions":32}],"state":"merged","open_date":"2021-09-22T16:33:12Z","update_date":"2021-09-22T16:46:01Z","discussion":[],"review_discussion":[],"tags":[{"tag":"enhancement :sparkles:","description":"This issue/PR is about adding new features enhancing the library"}],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"c3f9a60d6ce0d75dde79dfea1f2e3eec2af7e825","message":"simplify csum","date":"2021-09-22T16:31:26Z"}]},{"author":"affeldt-aist","number":435,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":312,"deletions":571},{"file":"theories/cardinality.v","status":"M","additions":312,"deletions":571},{"file":"theories/classical_sets.v","status":"M","additions":312,"deletions":571},{"file":"theories/measure.v","status":"M","additions":312,"deletions":571}],"state":"closed","open_date":"2021-09-22T02:46:59Z","update_date":"2022-02-26T14:16:03Z","discussion":[{"author":"CohenCyril","date":"2022-02-26T14:16:03Z","comment":"Closed by #543"}],"review_discussion":[{"author":"CohenCyril","file":"theories/cardinality.v","date":"2021-09-22T08:14:55Z","comment":"Note that `pickle` and `unpickle` already do that...\r\nhttps://github.com/math-comp/math-comp/blob/6c66f38e8312624d866050284ec2591e85c96c11/mathcomp/ssreflect/choice.v#L14-L15"},{"author":"CohenCyril","file":"theories/cardinality.v","date":"2021-09-22T09:15:06Z","comment":"This import does not have to be in the begining, it can be contained in a section."},{"author":"proux01","file":"CHANGELOG_UNRELEASED.md","date":"2021-09-22T14:00:02Z","comment":"```suggestion\r\n  + definitions `nat_of_pair`, `nat_of_rat`, `rat_of_nat`\r\n```"},{"author":"CohenCyril","file":"CHANGELOG_UNRELEASED.md","date":"2021-09-22T14:00:50Z","comment":"This will disappear anyway"}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"ace96916b5de60b448ea249e1fe1976cda143e0c","message":"rat is countable, cleaning\n\n- remove lemmas from documentation\n- replace cases on boolP with eqVneq when possible\n- replace O with 0%N","date":"2021-11-26T10:12:42Z"},{"author":"CohenCyril","committer":"affeldt-aist","hash":"49954d5cf61bc504055e7fcd95189cecdd65ee59","message":"first pass of simplifications in cardinality","date":"2021-11-26T10:12:42Z"},{"author":"CohenCyril","committer":"affeldt-aist","hash":"229567618ddc94767fcdff4469b76d24c802421e","message":"subsume pigeonhole","date":"2021-11-26T10:13:51Z"}]},{"author":"affeldt-aist","number":434,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":92,"deletions":2},{"file":"theories/reals.v","status":"M","additions":92,"deletions":2},{"file":"theories/topology.v","status":"M","additions":92,"deletions":2}],"state":"merged","open_date":"2021-09-21T04:09:13Z","update_date":"2021-10-28T15:56:25Z","discussion":[],"review_discussion":[{"author":"CohenCyril","file":"theories/reals.v","date":"2021-09-21T07:58:21Z","comment":"A `realType` is already defined as archimedean... https://github.com/math-comp/analysis/blob/61df13069bee88cd5fbd35c22705d8f4488f515d/theories/reals.v#L151"},{"author":"CohenCyril","file":"theories/reals.v","date":"2021-09-21T07:59:33Z","comment":"That's why you have supremums in the first place..."},{"author":"affeldt-aist","file":"theories/reals.v","date":"2021-09-21T13:59:12Z","comment":"This was to have the lemma in this form, which is a form that often appears in books. True this can be shortened with lemmas from archimedean, the next commit does that."},{"author":"CohenCyril","file":"theories/reals.v","date":"2021-10-14T13:21:23Z","comment":"The name `density` corresponds to nothing in the library and is hence not informative about the statement.\r\nI suggest `rat_in_itvoo`."},{"author":"CohenCyril","file":"theories/reals.v","date":"2021-10-14T13:26:28Z","comment":"and it could be rephrased\r\n```suggestion\r\nLemma density_rat (R : realType) (x y : R) : x < y -> exists q, ratr q \\in `]x, y[.\r\n```"},{"author":"CohenCyril","file":"theories/normedtype.v","date":"2021-10-20T13:18:23Z","comment":"```suggestion\r\nsuff: `|x - y| < eps%:num by rewrite ltr_norml => /andP[_].\r\n```"},{"author":"CohenCyril","file":"theories/reals.v","date":"2021-10-20T13:19:08Z","comment":"`bound_div` should either be documented and its theory extended, or inlined in the only proof where it is used."}],"tags":[{"tag":"enhancement :sparkles:","description":"This issue/PR is about adding new features enhancing the library"}],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"f5fc73f83aae33b0835a415bc58c5b749d45d689","message":"density of rationals in reals","date":"2021-10-21T10:31:15Z"}]},{"author":"CohenCyril","number":433,"diff_summary":[{"file":"theories/sequences.v","status":"M","additions":1,"deletions":1}],"state":"merged","open_date":"2021-09-20T12:47:08Z","update_date":"2021-09-20T13:12:01Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"CohenCyril","committer":"web-flow","hash":"d6e3207c4522d1750962f3943d0d9c5614279a4e","message":"Abort -> Qed","date":"2021-09-20T12:47:04Z"}]},{"author":"CohenCyril","number":432,"diff_summary":[{"file":".github/workflows/nix-action-8.11.yml","status":"D","additions":456,"deletions":173},{"file":".github/workflows/nix-action-8.12.yml","status":"D","additions":456,"deletions":173},{"file":".github/workflows/nix-action-8.13.yml","status":"D","additions":456,"deletions":173},{"file":".github/workflows/nix.yml","status":"D","additions":456,"deletions":173},{"file":".nix/config.nix","status":"D","additions":456,"deletions":173},{"file":".nix/coq-nix-toolbox.nix","status":"D","additions":456,"deletions":173},{"file":"config.nix","status":"D","additions":456,"deletions":173},{"file":"default.nix","status":"D","additions":456,"deletions":173},{"file":"package.nix","status":"D","additions":456,"deletions":173}],"state":"merged","open_date":"2021-09-20T10:47:33Z","update_date":"2021-09-21T08:17:55Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"CohenCyril","committer":"CohenCyril","hash":"b9e77feab4a1404415e4d02cc7c4a5c10abe31d2","message":"Using Coq Nix Toolbox","date":"2021-09-20T10:47:05Z"}]},{"author":"affeldt-aist","number":430,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":107,"deletions":15},{"file":"theories/measure.v","status":"M","additions":107,"deletions":15},{"file":"theories/normedtype.v","status":"M","additions":107,"deletions":15},{"file":"theories/sequences.v","status":"M","additions":107,"deletions":15}],"state":"merged","open_date":"2021-09-19T03:16:24Z","update_date":"2021-09-21T17:02:37Z","discussion":[],"review_discussion":[{"author":"CohenCyril","file":"theories/normedtype.v","date":"2021-09-21T14:50:38Z","comment":"Shouldn't be `Z`, should be `M` maybe `Mr` and `rM` with the `r` denoting the side of the \"real\" argument."},{"author":"CohenCyril","file":"theories/normedtype.v","date":"2021-09-21T14:52:10Z","comment":"Maybe the `r%:E` should be turned into `y` with a precondition of the form `is_fin y`...."}],"tags":[{"tag":"enhancement :sparkles:","description":"This issue/PR is about adding new features enhancing the library"}],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"7c63e614b26c3c04ee24e5a1316a4824582c5c6e","message":"standard lemmas about sequences of ereal's","date":"2021-09-21T16:41:38Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"f5ba82310d9134b2e70455bcdc147bae1e377805","message":"more generalizations\n\n- move lemmas from `sequences.v` to `normedtype.v`\n- rename `nondecreasing_seq_ereal_cvg` to `nondecreasing_ereal_cvg`\n  because `nondecreasing_seq` being a notation is maybe not a good\n  candidate for naming lemmas\n\nCo-authored-by: Cyril Cohen <cohen@crans.org>","date":"2021-09-21T16:41:38Z"}]},{"author":"affeldt-aist","number":429,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":13,"deletions":5},{"file":"theories/cardinality.v","status":"M","additions":13,"deletions":5}],"state":"merged","open_date":"2021-09-18T08:51:39Z","update_date":"2021-09-18T10:27:17Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"fdc6468924303a4e40656b3baaec3d1a504b49cb","message":"export the `nat_of_pair` injection","date":"2021-09-18T08:49:07Z"}]},{"author":"affeldt-aist","number":428,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":12,"deletions":6},{"file":"theories/classical_sets.v","status":"M","additions":12,"deletions":6}],"state":"merged","open_date":"2021-09-07T10:56:58Z","update_date":"2021-09-20T14:02:27Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"d23e809ef7b645883f1b064d5490f954eb518c0d","message":"generalize lemma `perm_eq_trivIset`","date":"2021-09-20T13:54:59Z"}]},{"author":"affeldt-aist","number":427,"diff_summary":[{"file":"theories/measure.v","status":"M","additions":16,"deletions":18}],"state":"merged","open_date":"2021-09-03T15:17:33Z","update_date":"2021-09-20T13:55:56Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"cfe006ee472010221a7c2ab8ea408e131dd73f7b","message":"fixes issue #426","date":"2021-09-03T15:16:29Z"}]},{"author":"affeldt-aist","number":425,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":14,"deletions":0},{"file":"theories/reals.v","status":"M","additions":14,"deletions":0}],"state":"merged","open_date":"2021-09-02T07:19:46Z","update_date":"2021-09-21T03:02:55Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"d54148a9ae6c15a97ac6a268f67a175d5def97b6","message":"minor addition to real.v\n\nCo-authored-by: Cyril Cohen <cyril.cohen@inria.fr>","date":"2021-09-21T02:18:50Z"}]},{"author":"affeldt-aist","number":424,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":23,"deletions":39},{"file":"theories/sequences.v","status":"M","additions":23,"deletions":39},{"file":"theories/topology.v","status":"M","additions":23,"deletions":39}],"state":"merged","open_date":"2021-08-30T09:58:45Z","update_date":"2021-09-20T13:52:20Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"0213db010a94125798c08fb99fd30343c18e8160","message":"fixes #423","date":"2021-09-20T13:31:25Z"}]},{"author":"affeldt-aist","number":422,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":148,"deletions":96},{"file":"theories/measure.v","status":"M","additions":148,"deletions":96},{"file":"theories/reals.v","status":"M","additions":148,"deletions":96},{"file":"theories/sequences.v","status":"M","additions":148,"deletions":96}],"state":"merged","open_date":"2021-08-27T11:15:03Z","update_date":"2021-09-20T13:20:06Z","discussion":[],"review_discussion":[{"author":"CohenCyril","file":"theories/sequences.v","date":"2021-08-30T09:41:20Z","comment":"This looks like an unfolding of `u_ --> +oo`"},{"author":"affeldt-aist","file":"theories/sequences.v","date":"2021-08-30T17:36:31Z","comment":"This analogy led me to change the statements of `cvgPpinfty` lemmas along the way."},{"author":"CohenCyril","file":"theories/reals.v","date":"2021-09-14T09:12:56Z","comment":"```suggestion\r\nLemma has_inf_supN E : has_sup (-%R @` E) <-> has_inf E.\r\n```"},{"author":"CohenCyril","file":"theories/sequences.v","date":"2021-09-14T09:14:58Z","comment":"```suggestion\r\n  u_ --> -oo <-> forall A, \\forall n \\near \\oo, A >= u_ n.\r\n```"},{"author":"CohenCyril","file":"theories/sequences.v","date":"2021-09-14T09:18:11Z","comment":"```suggestion\r\n  (forall k, P k -> f k --> l k) ->\r\n```"},{"author":"CohenCyril","file":"theories/sequences.v","date":"2021-09-14T09:18:41Z","comment":"```suggestion\r\n  (forall k n, P k -> 0 <= f k n)%E ->\r\n```"}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"649119c898becbb092a2961bd42e2f84f9440854","message":"3 lemmas about sequences used for simple functions\n\n- minor generalizations of existing lemmas","date":"2021-09-18T10:48:38Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"0186d840628b15421874073be90ce4aca2cb7d89","message":"change the statement of nondecreasing_dvg_lt\n\n- change the statements of cvgPpinfty lemmas","date":"2021-09-18T10:48:38Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"aa7ac659a6d81c0229f29831b0d14eb34a1055ee","message":"minor generalizations\n\n- also fix changelog","date":"2021-09-18T10:48:38Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"94a056567b64b9239464b7b5fd19b5ffe1c54f57","message":"address comments\n\nCo-authored-by: Cyril Cohen <cyril.cohen@inria.fr>","date":"2021-09-18T10:48:38Z"}]},{"author":"affeldt-aist","number":421,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":225,"deletions":316},{"file":"theories/nngnum.v","status":"M","additions":225,"deletions":316},{"file":"theories/normedtype.v","status":"M","additions":225,"deletions":316},{"file":"theories/topology.v","status":"M","additions":225,"deletions":316}],"state":"merged","open_date":"2021-08-26T14:50:05Z","update_date":"2021-09-20T13:30:26Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"b6aa7ff9db59103db94010aaaf82b9d42b345d95","message":"generalize `bigmaxr` lemmas to `orderType`\n\n- remove the now redundant `BigmaxrNonneg` module from `nngnum.v`\n- move the new module `Bigmax` to `topology.v`\n- add a lemma to the module `Bigmax`","date":"2021-09-20T13:17:57Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"c946d13963cc572ac3637f776f6c89597428276c","message":"remove module Bigmax\n\nCo-authored-by: Cyril Cohen <cohen@crans.org>","date":"2021-09-20T13:17:57Z"}]},{"author":"affeldt-aist","number":420,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":4,"deletions":8},{"file":"theories/boolp.v","status":"M","additions":4,"deletions":8}],"state":"merged","open_date":"2021-08-21T07:25:34Z","update_date":"2021-08-21T08:29:28Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"40236ffe13bb78101e5cde3a2c96c2a9c5570a06","message":"fixes #419","date":"2021-08-21T07:25:11Z"}]},{"author":"affeldt-aist","number":418,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":9,"deletions":0},{"file":"theories/boolp.v","status":"M","additions":9,"deletions":0}],"state":"merged","open_date":"2021-08-21T07:18:08Z","update_date":"2021-08-21T08:29:58Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"4bfaf1d8439f286d7538caba5b0c64889a0e6aaa","message":"associativity for or and and","date":"2021-08-21T07:17:33Z"}]},{"author":"affeldt-aist","number":417,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":88,"deletions":43},{"file":"theories/measure.v","status":"M","additions":88,"deletions":43}],"state":"merged","open_date":"2021-08-21T06:44:32Z","update_date":"2021-08-30T09:39:49Z","discussion":[{"author":"CohenCyril","date":"2021-08-21T08:41:39Z","comment":"@affeldt-aist is `seqD` still useful in the presence of `seqDU`, doesn't the latter subsume the former?"},{"author":"affeldt-aist","date":"2021-08-21T09:18:31Z","comment":"> @affeldt-aist is `seqD` still useful in the presence of `seqDU`, doesn't the latter subsume the former?\r\n\r\nThey are the same for non-decreasing sequences wrt inclusion which indeed suggest this simplification\r\nbut I could not figure out quickly how to clean seqD proofs, and since both sequences are anyway used\r\nin paper proofs I thought that for the time being it could be enough to put them in the same file, keep an eye\r\non them and come back to factorization when revising the proofs using seqDU, which should happen soon. \r\n"}],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"6a513ed8987a8c90c92e70d0fd6a8c147d5edd17","message":"add seqDU with a few theorems\n\n- slight generalization of seqD","date":"2021-08-27T08:09:30Z"}]},{"author":"affeldt-aist","number":416,"diff_summary":[{"file":"theories/nngnum.v","status":"M","additions":7,"deletions":7}],"state":"merged","open_date":"2021-08-15T09:17:03Z","update_date":"2021-09-20T12:20:59Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"9a6337f4453566f2981f8ed4ed0e743c9c0c3056","message":"fixes #415","date":"2021-08-15T09:16:30Z"}]},{"author":"affeldt-aist","number":414,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":6,"deletions":3},{"file":"theories/normedtype.v","status":"M","additions":6,"deletions":3}],"state":"merged","open_date":"2021-08-12T05:59:14Z","update_date":"2021-08-16T17:24:43Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"2116985cd43f6395f7b39d1933838d400f8444f1","message":"fixes #413","date":"2021-08-12T06:06:11Z"}]},{"author":"affeldt-aist","number":412,"diff_summary":[{"file":"CHANGELOG.md","status":"M","additions":127,"deletions":125},{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":127,"deletions":125}],"state":"merged","open_date":"2021-08-11T01:26:30Z","update_date":"2021-08-11T09:01:45Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"ea16ab0cdd651ce73757a2ee0fff71b65364a734","message":"changelog for version 0.3.10","date":"2021-08-11T01:24:41Z"}]},{"author":"ybertot","number":411,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":30,"deletions":22},{"file":"theories/normedtype.v","status":"M","additions":30,"deletions":22}],"state":"merged","open_date":"2021-07-29T14:08:57Z","update_date":"2021-09-28T14:31:59Z","discussion":[{"author":"CohenCyril","date":"2021-07-29T15:34:56Z","comment":"Hi @ybertot, I do not understand what 793badc are 3aa4fe5 doing here. Did I miss something?"},{"author":"ybertot","date":"2021-07-30T06:19:30Z","comment":"I don't understand either.  I did a rebase, and all of a sudden these commits were included in the branch.  Maybe I goofed one of my rebase, and then I had to do force push, but people usually have to do a force push after a rebase, so that you are really working without a safety net at this point.\r\n\r\nMaybe the solution will be to remake the branch from scratch and cherry-pick the commits.  I am not too fluent, but I may be able to repair that."},{"author":"CohenCyril","date":"2021-07-30T07:50:26Z","comment":"> I did a rebase, and all of a sudden these commits were included in the branch.\r\n\r\nWell, it looks like you rebased master on top of `is_itv` and then added a commit..."},{"author":"ybertot","date":"2021-07-30T08:18:24Z","comment":"should be fixed now."},{"author":"affeldt-aist","date":"2021-07-30T08:52:03Z","comment":"> OK, I'm 100% of the benefits of this change.\r\n> @affeldt-aist do you agree?\r\n\r\nYes, no problem."}],"review_discussion":[{"author":"CohenCyril","file":"theories/normedtype.v","date":"2021-07-30T10:23:33Z","comment":"```suggestion\r\n    rewrite !le_eqVlt => /predU1P [<-//|xz] /predU1P[/eqP->|zy] Ez.\r\n```"},{"author":"CohenCyril","file":"theories/normedtype.v","date":"2021-07-30T10:23:54Z","comment":"```suggestion\r\nby rewrite addrCA subrr addr0 => er; apply: (iX e y); rewrite ?ltW.\r\n```"},{"author":"CohenCyril","file":"theories/normedtype.v","date":"2021-07-30T10:24:14Z","comment":"```suggestion\r\nby rewrite opprB addrCA subrr addr0 => re; apply: (iX y e); rewrite ?ltW.\r\n```"},{"author":"CohenCyril","file":"theories/normedtype.v","date":"2021-07-30T10:24:31Z","comment":"```suggestion\r\nby apply: (iX y z); rewrite ?ltW.\r\n```"},{"author":"CohenCyril","file":"theories/normedtype.v","date":"2021-07-30T10:25:35Z","comment":"```suggestion\r\n  by move=> xz zy; apply: (iE x y); rewrite ?ltW.\r\nrewrite !le_eqVlt => /predU1P[<-//|xz] /predU1P[->//|zy].\r\nby apply: (iE x y); rewrite ?xz.\r\n```"},{"author":"CohenCyril","file":"theories/normedtype.v","date":"2021-07-30T10:26:03Z","comment":"```suggestion\r\nby rewrite opprB addrCA subrr addr0 => rf; apply: (iX e f); rewrite ?ltW.\r\n```"},{"author":"CohenCyril","file":"theories/normedtype.v","date":"2021-07-30T10:26:24Z","comment":"```suggestion\r\n    apply/negP; rewrite -leNgt.\r\n    apply: sup_ub; first by exists y => u [_] /andP[].\r\n```"}],"tags":[],"commits":[{"author":"ybertot","committer":"affeldt-aist","hash":"7fab3bd81ff935d42699a2149ee774326366c145","message":"changed the definition of is_interval and made all proofs go through in master","date":"2021-09-28T11:51:23Z"},{"author":"ybertot","committer":"affeldt-aist","hash":"b14d904109dcac20ca3746cd9487e0a8bc3f7f42","message":"add CHANGELOG entries","date":"2021-09-28T11:51:23Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"8d0110ceb9de231a6876cb841ba4fe17f756f79a","message":"nitpicking and rebase\n\nCo-authored-by: Cyril Cohen <cohen@crans.org>","date":"2021-09-28T14:11:06Z"}]},{"author":"zstone1","number":410,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":432,"deletions":55},{"file":"theories/boolp.v","status":"M","additions":432,"deletions":55},{"file":"theories/classical_sets.v","status":"M","additions":432,"deletions":55},{"file":"theories/topology.v","status":"M","additions":432,"deletions":55}],"state":"merged","open_date":"2021-07-26T03:16:19Z","update_date":"2021-12-20T15:01:45Z","discussion":[{"author":"CohenCyril","date":"2021-07-28T10:03:42Z","comment":"This is really nice, and now you tried the ultrafilter seems like a sensible default choice, I wanted a definition where a set X could be \"open in A\" iff ``X `&` A`` is: so great! Could you expand on the problems you encountered with the subspace entourage? I am curious whether this could give insight on better ways to phrase it. (BTW a variation could be to write ``(A `*` A) xy`` instead of `A xy.1 /\\ A xy.2`.)\r\n\r\nAs for the location, I am in favor of adding it to `topology.v`."},{"author":"zstone1","date":"2021-07-28T16:32:00Z","comment":"My main complaint about `subspace_ent` is that I was hoping ` subspace_ent := within (A `*` A) entourage` would work. And that the proof of `(nbhs_  subspace_ent = subspace_nbhs)` would go smoother. What I have now is ok, but that proof was kinda nasty. Certainly not a blocking issue, but I was a little surprised how much entourage proofs were more difficult than the metric proofs. If you have an epiphany, that'd be great. Otherwise I'm ok to submit the current definition of `subspace_ent`. "},{"author":"zstone1","date":"2021-07-28T17:16:58Z","comment":"~~Oops, borked the commits. Hold on.~~ Ok, everything now moved to topology.v"},{"author":"CohenCyril","date":"2021-07-29T20:32:52Z","comment":"The name `inclusion` is too generic IMO...\r\nMaybe something like `in_subspace`?\r\nCould you also uncapitalize `Subspace`?"},{"author":"zstone1","date":"2021-11-10T23:14:49Z","comment":"Just for the record, I'm working on these style changes you suggested. I'll post a more compatible revision soon. "},{"author":"CohenCyril","date":"2021-11-18T10:17:24Z","comment":"Unless there is a particular reason for separating the commits (in which case please explain), it's a better practice to squash your commits, it makes rebasing easier."},{"author":"CohenCyril","date":"2021-12-15T18:05:20Z","comment":"@affeldt-aist I wouldn't mind one last look before merging."},{"author":"affeldt-aist","date":"2021-12-17T03:48:23Z","comment":"I found a few minor issues and propose at least to rename X : topologicalType to T : topologicalType (because we have been using R, S, T, U, ... for topologicalType mostly so far, on the other hand we have been using X : set T---yet, I do not go as far as to not use U, V for sets because in the context of topology they look like often used notations to me)."},{"author":"zstone1","date":"2021-12-17T15:41:36Z","comment":"Looks good to me. Renaming `X --> T` does improve consistency with the rest of the file.  "},{"author":"affeldt-aist","date":"2021-12-19T08:00:02Z","comment":"then let's squash and merge..."}],"review_discussion":[{"author":"CohenCyril","file":"theories/topology.v","date":"2021-09-22T11:17:31Z","comment":"Linting: \r\n- equations should be with a large LHS and simpler RHS when applicable. (so that they could be seen as rewrite rules from left to right)\r\n- proof scripts should be compacted when it makes sense.\r\n- [no bullets when only 2 subgoals are generated](https://github.com/math-comp/math-comp/blob/master/CONTRIBUTING.md#indentation-in-proof-scripts)\r\n- every line closing a subgoal must have a terminator (mostly `by`, `exact`, `reflexivity`)\r\n\r\n```suggestion\r\nLemma within_interior (x : X) : A^° x -> within A (nbhs x) = nbhs x.\r\nProof.\r\nmove=> Aox; rewrite eqEsubset; split; last first.\r\n  by move=> W nbhsW; apply: cvg_within.\r\nrewrite ?nbhsE => W /= => [[B [+ BsubW ]]].\r\nrewrite open_nbhsE => [[oB nbhsB]].\r\nexists (B `&` A^°); split; last first.\r\n  by move=> t /= [] /BsubW + /interior_subset; apply.\r\nrewrite open_nbhsE; split; first by apply: openI => //; exact: open_interior.\r\nby apply: filterI => //; move:(open_interior A); rewrite openE; apply.\r\nQed.\r\n```"},{"author":"CohenCyril","file":"theories/topology.v","date":"2021-09-22T11:17:57Z","comment":"```suggestion\r\nmove=> FF AsubB W; rewrite /within; apply: filter_app; rewrite nbhs_simpl.\r\nby apply: filterE => ? + ?; apply; exact: AsubB.\r\n```"},{"author":"CohenCyril","file":"theories/topology.v","date":"2021-09-22T11:19:18Z","comment":"Such case analyses should be replaced by `Variant` and specification properies as in `eqVneq`, `leqP`, etc"},{"author":"CohenCyril","file":"theories/topology.v","date":"2021-09-22T11:21:55Z","comment":"Automatic introductions are forsaken. If you are going to use proof obligations, please prefix the `Program` command with: `Oblication Tactic := idtac` as in https://github.com/math-comp/analysis/blob/f1872095600aa3390fe10b10e4241493e2435de3/theories/topology.v#L3720\r\nI am aware that this rule is not consistently used throughout the library, but let's watch closely from now on."},{"author":"CohenCyril","file":"theories/topology.v","date":"2021-09-22T11:24:52Z","comment":"We do not use the focusing `{` in the conventions of this repo."},{"author":"zstone1","file":"theories/topology.v","date":"2021-11-11T03:11:22Z","comment":"I'm now using a Variants for being within or without the subspace. (Is inside/outside more clear?). I'm not sure how well I've done it. For example, The definition of subspace_ball is now \r\n```\r\n\r\nDefinition subspace_ball (x : subspace A) (r : R) :=\r\n  match withinVwithout A x with \r\n  | Within _ => A `&` ball (x : X) r\r\n  | Without _ => [set x]\r\n  end.\r\n```\r\nwhich matches directly on the withinVwithout lemma. Is this in line with what you were expecting?"},{"author":"zstone1","file":"theories/topology.v","date":"2021-11-11T03:14:10Z","comment":"Lots of linting. I've likely missed a few things. Hopefully you find it a bit more readable? "},{"author":"CohenCyril","file":"theories/topology.v","date":"2021-11-18T10:09:00Z","comment":"I'm so sorry, that's not what I meant at all, I should have explained better. I was not suggesting to change the definition but rather change the use of the tactic by the use of techniques described in section 5.2 of the [mathcomp book](https://math-comp.github.io/mcb/), and which most famous example might be  `case: leqP` or `case: ifP`.\r\n\r\nHere is the code I suggest:\r\n```coq\r\n(* To be moved to boolp *)\r\nLemma not_True : (~ True) = False. Proof. exact/propext. Qed.\r\nLemma not_False : (~ False) = True. Proof. by apply/propext; split=> // _. Qed.\r\n(* To be moved to classical_sets *)\r\nLemma notin_set T (A : set T) x : (x \\notin A : Prop) = ~ (A x).\r\nProof.\r\napply/propext; split=> [+ Ax|nAx].\r\n  by apply/negP; rewrite negbK inE.\r\nby apply: contra_notN nAx; rewrite inE.\r\nQed.\r\n(* end of prerequisites *)\r\n\r\nSection Subspace.\r\nContext {X : topologicalType} (A : set X).\r\n\r\nDefinition subspace_nbhs (x : subspace A) : set (set (subspace A)) :=\r\n  if x \\in A then within A (nbhs x) else globally [set x].\r\n\r\nVariant subspace_nbhs_spec x : Prop -> Prop -> bool -> set (set X) -> Type :=\r\n  | WithinSubspace : A x -> subspace_nbhs_spec x True False true (within A (nbhs x))\r\n  | WithoutSubspace : ~ A x -> subspace_nbhs_spec x False True false (globally [set x]).\r\n\r\nLemma subspace_nbhsP x : subspace_nbhs_spec x (A x) (~ A x) (x \\in A) (subspace_nbhs x).\r\nProof.\r\nrewrite /subspace_nbhs; case: (boolP (x \\in A)); rewrite ?(inE, notin_set) => xA.\r\n  have -> : A x = True by exact/propext.\r\n  by rewrite not_True; constructor.\r\nhave -> : A x = False by exact/propext.\r\nby rewrite not_False; constructor.\r\nQed.\r\n```\r\nThis subsumes the use of both the tactic you used to have and the lemma `withinVglobal` that can be proved using `case: subspace_nbhsP` and thus must be removed. Let's show on this particular example the result of `case: subspace_nbhsP`\r\n```coq\r\nLemma withinVglobal (x : X) : \r\n  (within A (nbhs x) = subspace_nbhs x /\\ A x) \\/\r\n  (globally [set x] = subspace_nbhs x /\\ ~ A x).\r\nProof.\r\ncase: subspace_nbhsP.\r\n```\r\n\r\nYields two goals, performing the appropriate substitutions in both.\r\n<details><summary>Goal1</summary>\r\n\r\n```coq\r\n  A x ->\r\n  within A (nbhs x) = within A (nbhs x) /\\ True \\/\r\n  globally [set x] = within A (nbhs x) /\\ False\r\n```\r\n</details>\r\n<details><summary>Goal 2</summary>\r\n\r\n```coq\r\n ~ A x ->\r\n within A (nbhs x) = globally [set x] /\\ False \\/\r\n globally [set x] = globally [set x] /\\ True\r\n```\r\n</details>\r\n\r\n\r\n\r\n"},{"author":"CohenCyril","file":"theories/topology.v","date":"2021-11-18T10:10:28Z","comment":"Note that \r\n```coq\r\nLemma subspace_nbhsP (U : set X) (x : X) : \r\n  A x ->\r\n  nbhs (x : subspace A) (U) <->\r\n  (exists V, nbhs (x : X) (V) /\\ U `&` A = V `&` A).\r\n```\r\nShould thus be renamed  `nbhs_subspaceP`"},{"author":"CohenCyril","file":"theories/topology.v","date":"2021-11-19T10:18:03Z","comment":"@zstone1 did you mange to decipher my comment?"},{"author":"zstone1","file":"theories/topology.v","date":"2021-11-19T22:59:18Z","comment":"Ok, that seems to make more sense. I will make another attempt. Thanks for bearing with me here. "},{"author":"zstone1","file":"theories/topology.v","date":"2021-12-02T03:59:45Z","comment":"Ok, things are making sense now. Not sure if it's 100% right, but definitely better.\r\n\r\nTurns out I didn't really understand how `ifP` was rewriting things, so I learned something either way. Thanks for pointing me to that chapter. "},{"author":"affeldt-aist","file":"theories/classical_sets.v","date":"2021-12-06T07:13:58Z","comment":"I also use this lemma in the Lebesgue measure.\r\nI called it `notin_setE` to match `in_setE`.\r\nIt can be proved in one line.\r\n```\r\nLemma notin_setE (A : set T) x : x \\notin A = ~ A x :> Prop.\r\nProof.\r\nby rewrite propeqE; split => [/asboolP//|]; apply: contra_notN; rewrite in_setE.\r\nQed.\r\n```"},{"author":"CohenCyril","file":"theories/classical_sets.v","date":"2021-12-06T07:37:32Z","comment":"Please keep the name `notin_set`, you can update the statement and proof (and replace the `in_setE` in the proof by `inE`, which is the priviledged way of calling `in_setE`, and glue `split=>` together (the space is recommanded when an identifier preceeds the `=>`, as in `rewrite stuff => bla`)"},{"author":"affeldt-aist","file":"theories/topology.v","date":"2021-12-06T08:46:21Z","comment":"This should do as well:\r\n```\r\nrewrite /nbhs_subspace; have [Ax|Ax] := boolP (x \\in A).\r\n  by rewrite -inE Ax trueE not_True; constructor; rewrite -inE.\r\nby rewrite -inE (negbTE Ax) falseE not_False; constructor; rewrite -notin_set.\r\n```"},{"author":"CohenCyril","file":"theories/topology.v","date":"2021-12-06T09:09:19Z","comment":"Beware! `inE` should **never** be used with `-` (right to left), this is not supposed to be predictible."},{"author":"zstone1","file":"theories/classical_sets.v","date":"2021-12-08T01:01:15Z","comment":"What's the next step here to resolve the conflict? Does it make sense to merge this as is, and manage the conflict in the Lebesgue measure branch? "},{"author":"affeldt-aist","file":"theories/classical_sets.v","date":"2021-12-08T01:44:17Z","comment":"We'll manage the conflict in the Lebesgue measure branch."}],"tags":[],"commits":[{"author":"zstone1","committer":"CohenCyril","hash":"4e8cee3c4a1588c17668240f43be9255e7c7d833","message":"Creating subspace topology\n\n- including subspace compactness\n- using variants definitions\n\nCo-Authored-By: Cyril Cohen <cyril.cohen@inria.fr>","date":"2021-12-15T18:08:40Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"6a9a4abc0f44b1305d3cf5157261958936681e8a","message":"various minor fixes\n\n- minor proof compression\n- formatting and documentation fixes\n- rename X : topologicalType to T\n- lemmas about `within` have been moved next to their siblings","date":"2021-12-20T02:07:44Z"}]},{"author":"affeldt-aist","number":409,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":18,"deletions":0},{"file":"theories/classical_sets.v","status":"M","additions":18,"deletions":0}],"state":"merged","open_date":"2021-07-22T08:13:52Z","update_date":"2021-07-29T09:59:56Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"04690cf7d1659753f360396ed85acd397f250054","message":"bigcapD1, bigcupD1","date":"2021-07-29T09:05:39Z"}]},{"author":"affeldt-aist","number":407,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":7,"deletions":0},{"file":"theories/measure.v","status":"M","additions":7,"deletions":0}],"state":"merged","open_date":"2021-07-14T12:27:06Z","update_date":"2021-08-02T06:55:44Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"d30caf9f3c3df6de7e26c6c99d2c541fc6cc96b9","message":"definition of measurable function\n\n- from the integral_sketch branch","date":"2021-08-02T02:57:49Z"}]},{"author":"affeldt-aist","number":406,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":18,"deletions":3},{"file":"theories/classical_sets.v","status":"M","additions":18,"deletions":3}],"state":"merged","open_date":"2021-07-13T02:16:25Z","update_date":"2021-07-14T01:31:55Z","discussion":[],"review_discussion":[{"author":"CohenCyril","file":"theories/classical_sets.v","date":"2021-07-13T21:22:29Z","comment":"```suggestion\r\nby rewrite eqEsubset; split=> [a [i ?]->| a [i ?]<-]; [apply: imageP | exists i].\r\n```"}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"11476bf6e96d381616d12a7fedae6538134d0c92","message":"two lemmas from infotheo","date":"2021-07-14T01:10:42Z"}]},{"author":"affeldt-aist","number":405,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":8,"deletions":0},{"file":"theories/boolp.v","status":"M","additions":8,"deletions":0}],"state":"merged","open_date":"2021-07-13T01:46:55Z","update_date":"2021-07-15T20:29:24Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"48b160ae9c5462f343eba10bfced8de6829a12c7","message":"add choice_of_Type definition","date":"2021-07-15T10:00:51Z"}]},{"author":"affeldt-aist","number":404,"diff_summary":[{"file":"_CoqProject","status":"A","additions":5937,"deletions":0},{"file":"theories/lebesgue_integral.v","status":"A","additions":5937,"deletions":0}],"state":"merged","open_date":"2021-07-12T07:08:01Z","update_date":"2022-01-18T15:42:50Z","discussion":[],"review_discussion":[{"author":"CohenCyril","file":"theories/lebesgue_integral.v","date":"2021-09-23T08:51:48Z","comment":"why `K` ? `K` is reserved for cancelling. I guess you meant `M`"},{"author":"CohenCyril","file":"theories/lebesgue_integral.v","date":"2021-09-23T08:52:12Z","comment":"`K` -> `M`"}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"be92e7d470e945bdf12a3b8c135d3fd51b1ae3da","message":"tentative definition of simple functions","date":"2022-01-18T12:55:55Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"1b7ed5fc187ecd9cc243a5ec5e37a2a1992eb644","message":"sintegralK","date":"2022-01-18T12:55:55Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"4e2a557b5491fbd39771797980ffaad68b863519","message":"homo property for sintegral\n\n- change sfun to have a codom without unreachable values","date":"2022-01-18T12:55:55Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"6eb011894d77001f2a3962ed174e63efd7f321ac","message":"propriete de limite croissante de l'integrale\n\n- to be cleaned","date":"2022-01-18T12:55:55Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"0083ecc035d9c4d0efb9d0dd94e1f5605be39a9d","message":"integral is limit of nondecreasing simple functions","date":"2022-01-18T12:55:55Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"08ba5eccc37cb986fa9fb7091d2e2b1035fb5494","message":"approximation theorem and integralK (wip)\n\n- completed but requires serious cleaning","date":"2022-01-18T12:55:55Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"811f7ae209978cee347f7d0ec1e48547694a5a61","message":"rebase","date":"2022-01-18T12:55:55Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"039dd2486b02ac3b7cab6ab49d8683d9b5b5c394","message":"integralD","date":"2022-01-18T12:55:55Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"0193654fa896df13782fe8de9bb0614baf89ddad","message":"le_integral","date":"2022-01-18T12:55:55Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"37c77fee8635d2fad4794ec42f431c96ea2e7bb0","message":"monotone convergence theorem","date":"2022-01-18T12:55:55Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"a745f595540a9ed8b1c8f253100b0574cc8da582","message":"generalize integration with a restriction domain\n\n- renaming and cleaning in progress","date":"2022-01-18T12:55:55Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"f7583762164a65183f7d0fe4e8e66ef0a7ea1283","message":"Fatou's lemma (tentative)","date":"2022-01-18T12:55:55Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"00e326fbabf98d556b4bc9135e5b293f6915c5f4","message":"fix","date":"2022-01-18T12:55:55Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"cd70f5024a606fc6b41bf7b16169fd38b5c76fc6","message":"first take at dct","date":"2022-01-18T12:55:55Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"f3ae57898ed5c13956ea8a8fabe6e4288ecf79f8","message":"rebase, formatting","date":"2022-01-18T12:55:55Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"c29f0cee512628e21ea66f132d7c036e2f89b0ca","message":"do without point_cvg, typo","date":"2022-01-18T12:55:55Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"9a7e96e89dc71a6d3d7ab5f49f5ba392de8b70bc","message":"first take at the 2nd part of dct\n\n- use predU1P, apply:, rm some R^o","date":"2022-01-18T12:55:55Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"f4b21232f4900af0280221bce4d8a1e970f17bef","message":"le_norme_integral\n\n- also generalization of integralN","date":"2022-01-18T12:55:55Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"43c293d20d89d23fc2001896064bbdda482953bb","message":"generalize fatou to any measurable domain","date":"2022-01-18T12:55:55Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"42a2d4a3657c4715c925b48a46319538dc954961","message":"generalize ge0_integralM","date":"2022-01-18T12:55:55Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"f5e1373a493ff431d113d42950e1772b1d5030c4","message":"linearity of integral\n\n- integralM, integralD","date":"2022-01-18T12:55:55Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"9d0eb75edd03d1f51fe9332fcc071452020c7e73","message":"dominated convergence theorem\n\n- to be generalized with ae hypotheses","date":"2022-01-18T12:55:55Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"17b64aaf2bba2cba7ba016a9d043776cfb568237","message":"prove that an integrable function is ae fin_num","date":"2022-01-18T12:55:55Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"9c351932a917352cdeaed3e643602ff775fbf293","message":"start definition of product of measures\n\n- proof that a section is measurable\n- start proof of the so-called fundamental lemma","date":"2022-01-18T12:55:55Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"fb2141f9d50e8199f1469cf6ff920bb0fe3772ef","message":"tentative formalization of product measure","date":"2022-01-18T12:55:55Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"ad9522057ce0489abbca12504ef41bd568948fa8","message":"simplications wrt simple functions","date":"2022-01-18T12:55:55Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"3fe386c59b348faf38a2f3b693abed1335e2838e","message":"first take at fubini tonelli","date":"2022-01-18T12:55:55Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"c85e96644ba6de9a2f2305365132ecffcea152e1","message":"lemmas and notation\n\n- tentative notation for integral\n- lemmas about ae equality\n- markov-tchbebychev, etc.","date":"2022-01-18T12:55:55Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"ad34358c4f3331d6cffe19b4e1e3c94ae0969ef7","message":"corollary 1.9b and better \\int_ notation","date":"2022-01-18T12:55:55Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"94e099e0897bdfe1ef3cce1b8c93bf1a300c1b6b","message":"first take at Fubini's theorem","date":"2022-01-18T12:55:55Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"92d6bfccf257b49216577babc82456c3d8c04f62","message":"fubini's theorem","date":"2022-01-18T12:55:55Z"},{"author":"CohenCyril","committer":"affeldt-aist","hash":"e8322237b47fd029c5316643e514b660ad9621ef","message":"remove predcondition for measurability of addition of ereal funs","date":"2022-01-18T12:55:55Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"3a14cc377111a17f0aaecce7b3a72e70da8eb91f","message":"generalization of measurability of functions product\n\n- minor cleaning","date":"2022-01-18T12:55:55Z"},{"author":"CohenCyril","committer":"affeldt-aist","hash":"4d9755a907a1b3ee9979dc7a3e9754f64f130893","message":"simplify fubini3","date":"2022-01-18T12:55:55Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"de9d101e7faf5eeb48c1053e39ad9f642674327c","message":"minor generalizations","date":"2022-01-18T15:27:24Z"}]},{"author":"affeldt-aist","number":403,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":492,"deletions":61},{"file":"theories/ereal.v","status":"M","additions":492,"deletions":61},{"file":"theories/normedtype.v","status":"M","additions":492,"deletions":61},{"file":"theories/sequences.v","status":"M","additions":492,"deletions":61}],"state":"merged","open_date":"2021-07-12T06:59:36Z","update_date":"2021-09-18T08:34:27Z","discussion":[{"author":"CohenCyril","date":"2021-07-27T22:25:16Z","comment":"A comment about what goes wrong when unlocked?"},{"author":"affeldt-aist","date":"2021-07-29T08:14:33Z","comment":"> A comment about what goes wrong when unlocked?\r\n\r\nThe detail that prompted me to lock is that otherwise  `/=` simplifies it even under bigops given difficult-to-read formulas on the screen. I guess we did not bother for other arithmetic operations so far because they are more simple."},{"author":"CohenCyril","date":"2021-07-29T08:18:16Z","comment":"> > A comment about what goes wrong when unlocked?\r\n> \r\n> The detail that prompted me to lock is that otherwise `/=` simplifies it even under bigops given difficult-to-read formulas on the screen. I guess we did not bother for other arithmetic operations so far because they are more simple.\r\n\r\nOk, lock is not made for that, only for kernel / unification inefficiences.\r\nPlease try `nosimpl` instead:\r\n```coq\r\nDefinition mule_subdef := <the definition of multiplication>\r\n\r\nDefinition mule := nosimpl mule_subdef.\r\n```\r\n"},{"author":"affeldt-aist","date":"2021-08-20T06:17:19Z","comment":"> Sorry for the delayed review. This looks great!\r\n> (I had some doubts at first because in floating-point arithmetic oo x 0 yields a NaN and not 0, but that's quite moral, the 0 of floats meaning \"a tiny value\" whereas here 0 is exactly 0)\r\n\r\nthank you very much, I addressed your comments, there were all to the point\r\n"}],"review_discussion":[{"author":"proux01","file":"CHANGELOG_UNRELEASED.md","date":"2021-08-13T10:47:17Z","comment":"```suggestion\r\n  + lemmas `lte_pdivr_mull`, `lte_pdivl_mull`\r\n- in `normedtype.v`\r\n  + lemma `mule_continuous`\r\n```"},{"author":"proux01","file":"theories/ereal.v","date":"2021-08-13T10:50:59Z","comment":"Why not doing the same for addition (I observed that `(r%:E + x)%E` simplifies to a not very readable match)?"},{"author":"proux01","file":"theories/ereal.v","date":"2021-08-13T10:53:14Z","comment":"Is the `0 <= y` hypothesis really needed?\r\nI also don't get the name of this lemma (why `add`?)"},{"author":"proux01","file":"theories/ereal.v","date":"2021-08-13T10:53:59Z","comment":"Add `ge0` in the name? (same for `sume_distrr` below)"},{"author":"proux01","file":"theories/ereal.v","date":"2021-08-13T10:56:07Z","comment":"Doesn't that also hold for any `r : \\bar R`?\r\nShould we add `lte_pdivr_mulr`, `lte_pdivl_mulr`, `lte_ndivl_mulr`, `lte_ndivl_mull`, `lte_ndivr_mull`, `lte_ndivr_mulr` and similar lemmas for `lee`?"},{"author":"CohenCyril","file":"theories/ereal.v","date":"2021-08-30T10:25:27Z","comment":"```suggestion\r\nDefinition adde_subdef x y :=\r\n```\r\nrename so as not to collide with `adde_def` (so that no renaming to `adde_defined` is necessary)"},{"author":"CohenCyril","file":"theories/ereal.v","date":"2021-08-30T10:25:40Z","comment":"```suggestion\r\nDefinition mule_subdef x y :=\r\n```"},{"author":"CohenCyril","file":"theories/ereal.v","date":"2021-08-30T10:26:08Z","comment":"(moreover, definitions with `subdef` suffix are hidden in `Search`)"},{"author":"CohenCyril","file":"theories/ereal.v","date":"2021-08-30T10:26:54Z","comment":"```suggestion\r\nLemma mulr_pinfty r : r%:E * +oo%E = (Num.sg r)%:E * +oo%E.\r\n```"},{"author":"CohenCyril","file":"theories/ereal.v","date":"2021-08-30T10:27:03Z","comment":"```suggestion\r\nLemma mulr_ninfty r : r%:E * -oo%E = (Num.sg r)%:E * -oo%E.\r\n```"},{"author":"CohenCyril","file":"theories/ereal.v","date":"2021-08-30T10:27:31Z","comment":"```suggestion\r\nLemma muleA : associative (*%E : \\bar R -> \\bar R -> \\bar R).\r\n```"},{"author":"CohenCyril","file":"theories/ereal.v","date":"2021-08-30T10:30:05Z","comment":"BTW, what about having the symbol `x +? y` for `adde_def x y`? "},{"author":"CohenCyril","file":"theories/ereal.v","date":"2021-09-02T12:28:56Z","comment":"```suggestion\r\n(*                            nor -oo + oo                                    *)\r\n```"}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"1d9ba6a45977c72b98542fee27894b13b05e6370","message":"lemmas about mule\n\n- distributivity lemmas\n- associativity of mule\n- lock definition mule with lemma muleE","date":"2021-08-30T17:31:01Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"69693a3ca2381fcbbb0f13b5d435a1840ed54582","message":"address comments\n\nCo-authored-by: Pierre Roux <pierre@roux01.fr>","date":"2021-08-30T17:31:01Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"849bb39173b09941c2f1e82b047ddba0bbb58bc7","message":"address comments\n\nCo-authored-by: Cyril Cohen <cohen@crans.org>","date":"2021-08-30T17:31:44Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"5399b9855d80210dff3781da5ae8d83b15a72147","message":"lemmas mulN1e and muleN1\n\n- also fix changelog","date":"2021-09-02T05:50:09Z"},{"author":"affeldt-aist","committer":"web-flow","hash":"507de4d55093ba6de4d4a33dcb8c8d1a00a563cc","message":"Update theories/ereal.v\r\n\r\ntypo\n\nCo-authored-by: Cyril Cohen <CohenCyril@users.noreply.github.com>","date":"2021-09-02T12:52:06Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"2c361f41c9e9521bd9ca37ae9eea3b43a7715648","message":"lemmas about non-positive products","date":"2021-09-10T09:11:38Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"527ec51de9050447d115cf0b70e3a8ad5dcced75","message":"sube0","date":"2021-09-14T07:18:19Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"e97cdb24a2d595ada81defe8d51ebd300e14a0de","message":"using wlog","date":"2021-09-17T09:36:27Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"5a412c055bef08fa8541af107cbacf668abc2b9a","message":"add mulrinfty","date":"2021-09-17T09:37:25Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"b3cb8f342967e8b519e768c956bcf58fcea3b21f","message":"fix","date":"2021-09-17T09:40:08Z"}]},{"author":"affeldt-aist","number":402,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":27,"deletions":7},{"file":"theories/classical_sets.v","status":"M","additions":27,"deletions":7},{"file":"theories/measure.v","status":"M","additions":27,"deletions":7}],"state":"merged","open_date":"2021-07-12T02:19:30Z","update_date":"2021-07-27T11:54:37Z","discussion":[],"review_discussion":[{"author":"CohenCyril","file":"theories/classical_sets.v","date":"2021-07-15T20:30:07Z","comment":"Why not `bigcup_set_cond` ?"},{"author":"CohenCyril","file":"theories/classical_sets.v","date":"2021-07-22T07:57:14Z","comment":"```suggestion\r\nLemma bigcup_set (s : seq T) (f : T -> set U) :\r\n```\r\nfor uniformily"}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"28a2bd0f0b7638436239cb12b9692a5a0a86084d","message":"generalization of `bigcup_mkset`","date":"2021-07-22T08:25:30Z"}]},{"author":"affeldt-aist","number":401,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":43,"deletions":32},{"file":"theories/classical_sets.v","status":"M","additions":43,"deletions":32},{"file":"theories/measure.v","status":"M","additions":43,"deletions":32}],"state":"merged","open_date":"2021-06-28T07:01:19Z","update_date":"2021-07-29T10:10:55Z","discussion":[],"review_discussion":[{"author":"CohenCyril","file":"theories/measure.v","date":"2021-07-22T08:02:46Z","comment":"If `seqD` is meant to be reused outside (Caratheodory extension theorem?) please document it in the header of the file.\r\nOtherwise, document locally."}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"9006be99a36ff61e133f50654be8fcd71dd3970f","message":"fixes #400","date":"2021-07-29T09:07:06Z"}]},{"author":"affeldt-aist","number":399,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":46,"deletions":16},{"file":"theories/measure.v","status":"M","additions":46,"deletions":16}],"state":"merged","open_date":"2021-06-22T14:09:15Z","update_date":"2021-07-19T00:52:12Z","discussion":[],"review_discussion":[{"author":"CohenCyril","file":"theories/measure.v","date":"2021-07-15T20:31:39Z","comment":"no need to qualify with `algebraOfSets_` it's in a module anyway.\r\n(but you do not need to fix it)"}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"0bb603fb991ee9be0d809966644f32f8f489b811","message":"add the structure of algebra of sets\n\n- rename factory isRingOfSets to isAlgebraOfSets","date":"2021-07-19T00:34:27Z"}]},{"author":"proux01","number":398,"diff_summary":[{"file":"theories/mclra.v","status":"A","additions":73,"deletions":0}],"state":"closed","open_date":"2021-06-22T11:38:51Z","update_date":"2022-04-04T13:28:46Z","discussion":[{"author":"proux01","date":"2022-04-04T13:28:46Z","comment":"Closing as this is superseeded by https://github.com/math-comp/algebra-tactics/pull/54"}],"review_discussion":[],"tags":[],"commits":[{"author":"proux01","committer":"proux01","hash":"d72e62bd74b3d3d72c4eaac231d139f04032c56d","message":"Experiment for a MathComp lra tactic\n\nThis is simple and already works but has major limitations:\n- only works for R (from Coq stdlib)\n- pulls axioms from real numbers in Coq stdlib every time it's used\n\nWe may like this to work for any realFieldType, maybe we should\nwrite a new MathComp frontend to the lra.","date":"2021-07-10T09:09:56Z"}]},{"author":"zstone1","number":397,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"A","additions":1294,"deletions":246},{"file":"_CoqProject","status":"A","additions":1294,"deletions":246},{"file":"theories/classical_sets.v","status":"A","additions":1294,"deletions":246},{"file":"theories/forms.v","status":"A","additions":1294,"deletions":246},{"file":"theories/functionspace_topology.v","status":"A","additions":1294,"deletions":246},{"file":"theories/normedtype.v","status":"A","additions":1294,"deletions":246},{"file":"theories/topology.v","status":"A","additions":1294,"deletions":246}],"state":"closed","open_date":"2021-06-18T21:53:53Z","update_date":"2022-06-06T12:41:49Z","discussion":[{"author":"zstone1","date":"2022-06-06T12:41:49Z","comment":"This was successfully broken into smaller changes and dramatically improved. All those changes have been merged, so this is now redundant."}],"review_discussion":[],"tags":[],"commits":[{"author":"zstone1","committer":"zstone1","hash":"05c05b3e063a2359a4d1616005cb7d0e8fd8e35f","message":"adding domain restrictions and compact convergence","date":"2020-12-19T21:54:40Z"},{"author":"zstone1","committer":"zstone1","hash":"b6e226ae77ee10592c633c5aa0ee6bb2791f9127","message":"fixing notation","date":"2020-12-19T22:54:53Z"},{"author":"zstone1","committer":"zstone1","hash":"bc5c85e66e917f9b56451f183bd486e0443dd193","message":"hausdorff close","date":"2020-12-20T00:39:17Z"},{"author":"zstone1","committer":"zstone1","hash":"636aea48a5b89c556bcb631812eddfa351fbf250","message":"halfway through improvements","date":"2020-12-20T05:43:54Z"},{"author":"zstone1","committer":"zstone1","hash":"72e3eb1367ca7d43b2397b0a95514ef87c7ce564","message":"fixed split proof style","date":"2020-12-20T05:49:08Z"},{"author":"zstone1","committer":"zstone1","hash":"ba563731bea89e3d4d315c9cd44cf6a1d930acc4","message":"fixing style issues","date":"2020-12-20T12:46:26Z"},{"author":"zstone1","committer":"zstone1","hash":"8b11f194a75f7d7ce4d2293e91b4e84f5718fbc7","message":"changing convergence notation","date":"2020-12-23T21:13:50Z"},{"author":"zstone1","committer":"zstone1","hash":"cd2fa7dc4cbb976765ebd0001c5f9e5e1ffd440a","message":"uniform implies pointwise, and dependent pairs","date":"2020-12-26T22:29:34Z"},{"author":"zstone1","committer":"zstone1","hash":"cedf06ed7d82f6825dfe8b47a8e13a3e7aa181a5","message":"fixing build","date":"2020-12-26T22:49:24Z"},{"author":"zstone1","committer":"zstone1","hash":"bfa1f919c80b9c27421244fc9b82bd5fe2c3c401","message":"removing old notation","date":"2020-12-26T22:50:18Z"},{"author":"zstone1","committer":"web-flow","hash":"04ac867f141ead77be310c88cf659491b41e33cb","message":"Merge pull request #1 from zstone1/subspace_top\n\nAdding dependent pair technique for convergence, and unif -> ptws","date":"2020-12-26T22:58:27Z"},{"author":"zstone1","committer":"zstone1","hash":"75250fb771ad9733ea715376b09bdb88785cc530","message":"fixing filter_on, using filter_from","date":"2021-01-13T17:24:37Z"},{"author":"zstone1","committer":"zstone1","hash":"a1a3bb69c103ab6d49a2d961554abb4f90564b69","message":"getting notations to print correctly","date":"2021-01-13T20:39:11Z"},{"author":"zstone1","committer":"zstone1","hash":"c9477c4713363f799ac93d94f219264439c4494b","message":"adding casting functions to fix pretty printing","date":"2021-01-13T20:58:19Z"},{"author":"zstone1","committer":"zstone1","hash":"e41e7a53ceefc2bf8e1a8f3fb64a1af04a6a9838","message":"cleaning up relation between fam cvg and restricted cvg","date":"2021-01-13T21:16:37Z"},{"author":"zstone1","committer":"zstone1","hash":"383c06124d0b792e11c594f9cd45de2cc4877bfe","message":"new mathcomp notations","date":"2021-01-18T20:16:16Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"b90eeacec95e4a2a768a9f19486adfd22af499dd","message":"lint","date":"2021-03-25T05:39:43Z"},{"author":"zstone1","committer":"zstone1","hash":"a90e5ee2e6bbbdbff3ce30a707292c39b9404812","message":"adding canonical defs","date":"2021-05-30T02:03:53Z"},{"author":"zstone1","committer":"zstone1","hash":"4fd676a96af6c403be05e546afdaa3aaec945752","message":"trying to prove restricted works","date":"2021-06-07T04:25:27Z"},{"author":"zstone1","committer":"zstone1","hash":"be095950c82fe447e475338c2081fbde76dd9aa1","message":"adding restrict lemma","date":"2021-06-08T04:05:19Z"},{"author":"zstone1","committer":"zstone1","hash":"dfc30c8284fba9e0021d7be6cfece05b3c4e1d2f","message":"merging","date":"2021-06-08T04:10:38Z"},{"author":"zstone1","committer":"zstone1","hash":"9bc7fbf1444e672fea709bece80ef4cea0984046","message":"more merge fixes","date":"2021-06-10T01:34:14Z"},{"author":"zstone1","committer":"zstone1","hash":"ac0f18aba83c3bbacdc6b1d3fc3e25d0ad8ee44c","message":"evaluation map continuous for general products","date":"2021-06-13T03:40:31Z"},{"author":"zstone1","committer":"zstone1","hash":"0dfed45a1307331d328b44c220dde7420b76c3c9","message":"pointwise compact images implies compact in ptws","date":"2021-06-13T04:06:00Z"},{"author":"zstone1","committer":"zstone1","hash":"4c28bae2e9d9d25492b6dd06149d1bebd9648ab9","message":"working though pt 2","date":"2021-06-13T04:51:23Z"},{"author":"zstone1","committer":"zstone1","hash":"78a96f4d5dcd8351f16a9e0517067441e44c040e","message":"quite close to pt 2","date":"2021-06-13T05:08:41Z"},{"author":"zstone1","committer":"zstone1","hash":"bf4d89734c5cbb708b3f20dbbca76a4e2b828a4e","message":"equicontinuous closures","date":"2021-06-13T22:05:47Z"},{"author":"zstone1","committer":"zstone1","hash":"8d475e678ebbdf30200aea3771b2a7c0a8fd190a","message":"maybe step 3","date":"2021-06-14T03:14:26Z"},{"author":"zstone1","committer":"zstone1","hash":"6d5f650debb19126e9edb57b058fc9456ed2a237","message":"arzela ascoli forward done","date":"2021-06-15T02:35:41Z"},{"author":"zstone1","committer":"zstone1","hash":"d40f43183d5ec1818929eeaa1b07154d4c4ae8f8","message":"about to finish az forward","date":"2021-06-15T02:53:00Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"05bb2e9b4d332219ff2b2b6e68bb7ce113c84244","message":"use `pred U` instead of `set U` in `patch`\n\n- presentation becomes a big shorted except for the proof\n  of `family_cvg_finite_covers`\n- also lint in the process\n- NB: remove algC and algnum from forms.v because they were causing\n  an error in my setting:\n```\nFile \"./theories/derive.v\", line 6, characters 0-39:\nError: Universe inconsistency. Cannot enforce\nmathcomp.field.algebraics_fundamentals.12862 <= Coq.ssr.ssrfun.92 because\nCoq.ssr.ssrfun.92 < mathcomp.field.algebraics_fundamentals.12862.\n```","date":"2021-06-18T10:11:19Z"},{"author":"zstone1","committer":"zstone1","hash":"fc8d3d36e6145462071628dd399e2cd373d35690","message":"forward direction of arzela ascoli done.","date":"2021-06-18T18:56:16Z"},{"author":"zstone1","committer":"zstone1","hash":"04dab9c0c74b034a92b72497bcffe553bcb61175","message":"now with correct definitions","date":"2021-06-18T20:52:08Z"},{"author":"zstone1","committer":"zstone1","hash":"48234f7c9d67f421d0295b9d07327c9a8a5f983c","message":"merged pred change","date":"2021-06-18T21:13:41Z"},{"author":"zstone1","committer":"zstone1","hash":"2f241da76b3c1f9ef9eafd9d0a3e40e6a45a94bf","message":"various style improvements","date":"2021-06-18T21:39:58Z"},{"author":"zstone1","committer":"zstone1","hash":"af87d092334120895ce1df89cc0f8e2660fb2031","message":"adding all the useful lemmas to the changelog","date":"2021-06-22T00:30:27Z"},{"author":"zstone1","committer":"zstone1","hash":"42a46921aba5395c36df28bd7f312f073f22f6f7","message":"proof style","date":"2021-06-22T14:01:12Z"},{"author":"zstone1","committer":"zstone1","hash":"b9dbd18703c6b769dbd3580361c2089f099ef15d","message":"in the middle of updating changelog","date":"2021-06-22T22:07:05Z"},{"author":"zstone1","committer":"zstone1","hash":"d2bb8b7da49801e4f612c4dda145bf0d068a5971","message":"moving work","date":"2021-06-23T23:00:43Z"},{"author":"zstone1","committer":"zstone1","hash":"9ffcbe2a8fb4b64695e0526f5bb2da788895130e","message":"pointwise compact images implies compact in ptws","date":"2021-06-26T09:13:57Z"},{"author":"zstone1","committer":"zstone1","hash":"59d1174fbc03d461e5148323c7ef207badc51a30","message":"working though pt 2","date":"2021-06-26T09:13:57Z"},{"author":"zstone1","committer":"zstone1","hash":"367657ee25a70ec325ded664271ca2fc49b05efe","message":"quite close to pt 2","date":"2021-06-26T09:13:57Z"},{"author":"zstone1","committer":"zstone1","hash":"96d49ea2b6ba5dd5be48c193be64c61e9ccef12a","message":"equicontinuous closures","date":"2021-06-26T09:14:46Z"},{"author":"zstone1","committer":"zstone1","hash":"6af89a4cc1096d5208720a66affa89fc356cd866","message":"maybe step 3","date":"2021-06-26T09:14:46Z"},{"author":"zstone1","committer":"zstone1","hash":"c1c6998fc1e8f994ccdce40f1672005a5db588e0","message":"arzela ascoli forward done","date":"2021-06-26T09:14:46Z"},{"author":"zstone1","committer":"zstone1","hash":"346cee8b2a0da24c73fb884f7bec6848f42abe43","message":"about to finish az forward","date":"2021-06-26T09:14:46Z"},{"author":"zstone1","committer":"zstone1","hash":"09120b414c107ed96d075c9152d466fba9a58a8f","message":"forward direction of arzela ascoli done.","date":"2021-06-26T09:16:20Z"},{"author":"zstone1","committer":"zstone1","hash":"2ddfd67eda097d7ffdf55e8cc5706cc9e0a14868","message":"now with correct definitions","date":"2021-06-26T09:16:20Z"},{"author":"zstone1","committer":"zstone1","hash":"b2c291b5b586ddc15e078e980bb4f594233f79cc","message":"various style improvements","date":"2021-06-26T09:17:00Z"},{"author":"zstone1","committer":"zstone1","hash":"112d7e19c08758155130b72a98a2059faf58bb04","message":"proof style","date":"2021-06-26T09:17:39Z"},{"author":"zstone1","committer":"zstone1","hash":"61d48c56167e8c2c7bc91c2c87ac8c673605545f","message":"moving work","date":"2021-06-26T09:18:37Z"},{"author":"zstone1","committer":"zstone1","hash":"ed53677cf65bb525b26a670bca1cea3dcdf7d211","message":"az backwards almost done","date":"2021-06-26T09:18:37Z"},{"author":"zstone1","committer":"zstone1","hash":"7e7a64d339fe9c4a8dd44fb1bd78ae4cc217bd47","message":"trying slightly more general form","date":"2021-06-26T09:18:37Z"},{"author":"zstone1","committer":"zstone1","hash":"8dd5684e1197b89aa421566979a065250d7c54d1","message":"arzela ascoli is done","date":"2021-06-26T09:18:37Z"},{"author":"zstone1","committer":"zstone1","hash":"d6a9e75fc33d7734c271ef87e4661a61fe62b5b6","message":"fixed after merge","date":"2021-06-26T10:21:12Z"},{"author":"zstone1","committer":"zstone1","hash":"ab80148ec50c57b7dfd3196e294251498f76af8d","message":"transfering all function space topology stuff","date":"2021-06-26T10:42:44Z"},{"author":"zstone1","committer":"zstone1","hash":"df401ce384840c6c5c2a52c2536eca50e43c7f2e","message":"removing hausdorff assumption","date":"2021-06-26T10:55:36Z"},{"author":"zstone1","committer":"zstone1","hash":"3e20b7ca4059a9b7fe579bd0c370ff674b6e5970","message":"trying to use the weak topology instead","date":"2021-06-27T03:58:49Z"},{"author":"zstone1","committer":"zstone1","hash":"505ef31c50d8cc6b8f8dc27c6df5120e668fa254","message":"changing pointwise to be domain restricted also","date":"2021-06-27T21:38:07Z"},{"author":"zstone1","committer":"zstone1","hash":"a48d46ba413182be7de7565db97e149b9f7efbab","message":"weak topology is done","date":"2021-06-27T22:53:49Z"},{"author":"zstone1","committer":"zstone1","hash":"a292a1ee4412665211877cab68ae21ca85aa6fbe","message":"fixing docs","date":"2021-06-27T22:55:35Z"},{"author":"zstone1","committer":"zstone1","hash":"878d924c203d89950fe46def95a2d7608c328fde","message":"Merge branch 'trying_weak'","date":"2021-06-27T22:55:57Z"},{"author":"zstone1","committer":"zstone1","hash":"0297247838c17952d70c1d083759a2a0ba189ba2","message":"fixing changelog","date":"2021-06-27T23:16:47Z"},{"author":"zstone1","committer":"zstone1","hash":"1ffed7cab927eb0ac17b7aaf5327046c14292daa","message":"comments and typos","date":"2021-06-27T23:24:01Z"},{"author":"zstone1","committer":"zstone1","hash":"0717e6f7801c112e7a9eefbbc7f180a29067a5b6","message":"Merge branch 'master' of https://github.com/math-comp/analysis","date":"2021-06-27T23:28:22Z"},{"author":"zstone1","committer":"zstone1","hash":"02350234250b41e18f1f30ede271500092d1cd1d","message":"evaluation map continuous for general products","date":"2021-06-26T09:13:57Z"},{"author":"zstone1","committer":"zstone1","hash":"95d462bd730280e766f4508b061dd18676cf043f","message":"Merge branch 'arzela-back' of https://github.com/zstone1/analysis into arzela-back","date":"2021-06-29T21:59:23Z"},{"author":"zstone1","committer":"zstone1","hash":"a016f356a90cbbd8488c72cd6a17866e62b16a1b","message":"everything building","date":"2021-06-30T17:25:18Z"},{"author":"zstone1","committer":"zstone1","hash":"5988dec18d7c00e75b5b9f4e7b0c89f7a9b707be","message":"minor generalizations","date":"2021-07-06T02:38:49Z"}]},{"author":"t6s","number":396,"diff_summary":[{"file":"theories/power_series.v","status":"A","additions":93,"deletions":0}],"state":"open","open_date":"2021-06-18T01:54:31Z","update_date":"2023-03-15T15:05:48Z","discussion":[{"author":"CohenCyril","date":"2021-06-18T07:16:40Z","comment":"You might find this relevant: https://github.com/math-comp/newtonsums/pull/2\r\nCC: @hivert \r\n"},{"author":"hivert","date":"2021-06-18T08:56:34Z","comment":"@CohenCyril  Thanks for mentioning me. Concerning power series, if you only want the formal side I've a fairly developed code on https://github.com/hivert/FormalPowerSeries. It is largely based on Cyril's newtonsums which only dealt with truncated power series. In my code I've 2*3 differents proof for the formula for Catalan numbers. The first series uses truncated power series, the second one normal powerseries. The later are formalized as inverse limits of truncated thanks to the classical axioms of analysis. For two series, I've formalised 3 proof (generalized newton formula, lagrange inversion and differential holonomic equation). I wanted to compare how much work is required by using only truncated power series (constructive, no axioms).\r\n\r\nAs usual with me, it is work in progress and nothing is published...\r\n"}],"review_discussion":[],"tags":[{"tag":"experiment :test_tube:","description":"This issue/PR is very experimental"}],"commits":[{"author":"t6s","committer":"t6s","hash":"5fa3027a9fb7caabcb4c655758ef54dc9a8b36a0","message":"scratch on power series","date":"2021-06-18T01:52:24Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"37d27a9a37fd25808a630cb3f101ae305b5fbc37","message":"type-check definitions for the sake of discussion\n\nCo-Authored-By: Takafumi Saikawa <tscompor@gmail.com>","date":"2021-06-18T04:44:31Z"}]},{"author":"affeldt-aist","number":395,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":213,"deletions":2},{"file":"theories/measure.v","status":"M","additions":213,"deletions":2},{"file":"theories/sequences.v","status":"M","additions":213,"deletions":2}],"state":"merged","open_date":"2021-06-17T14:56:50Z","update_date":"2021-08-04T21:20:44Z","discussion":[],"review_discussion":[{"author":"CohenCyril","file":"theories/measure.v","date":"2021-07-15T20:26:53Z","comment":"Would\r\n```suggestion\r\n  \\sum_(i <oo | P i) (A i + (e%:nngnum / (2 ^ i.+1)%:R)%:E) <=\r\n  \\sum_(i <oo | P i) A i + e%:nngnum%:E.\r\n```\r\nbe more practical by any chance?"},{"author":"CohenCyril","file":"theories/measure.v","date":"2021-07-15T20:28:09Z","comment":"possibly with  `e : \\bar R` such that `0 <= e`?"},{"author":"affeldt-aist","file":"theories/measure.v","date":"2021-07-19T07:37:55Z","comment":"> be more practical by any chance?\r\n\r\nIt seems to shorten a bit the proofs where it is used (one occurrence in measure.v and another in measure_wip.v not commited yet). NB: the commit in question: https://github.com/math-comp/analysis/pull/371/commits/b22e2ceea8ec2ad704b075a337bd9d0849604798\r\n"},{"author":"affeldt-aist","file":"theories/measure.v","date":"2021-07-19T07:48:27Z","comment":"> possibly with `e : \\bar R` such that `0 <= e`?\r\n\r\nIs it ok to issue and wait for PR #403 to check this one?"}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"b05674c58d3a9960f4382d2fcdceaf0e156abf84","message":"extension theorem\n\n- build an outer measure out of a measure over a ring of sets","date":"2021-08-04T08:18:09Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"0a482bff8a2079545ae4e28e0a8b743872710483","message":"add temporary definition of uncurry\n\n- for the CI","date":"2021-08-04T08:18:09Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"865ea0af98b747ce069f52d6c25f4a46fe777367","message":"nitpicking and rebase","date":"2021-08-04T08:18:10Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"57425d5a056eb22f4af970d94603650a6de4dd1b","message":"simpler `epsilon_trick` statement","date":"2021-08-04T08:18:10Z"}]},{"author":"affeldt-aist","number":394,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":13,"deletions":9},{"file":"theories/ereal.v","status":"M","additions":13,"deletions":9},{"file":"theories/sequences.v","status":"M","additions":13,"deletions":9}],"state":"merged","open_date":"2021-06-17T13:57:01Z","update_date":"2021-06-22T13:53:57Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"a4e309d674b4743c2c797268351852930ccd9383","message":"fixes #365","date":"2021-06-17T13:55:30Z"}]},{"author":"affeldt-aist","number":393,"diff_summary":[{"file":"CHANGELOG.md","status":"M","additions":3,"deletions":1},{"file":"theories/classical_sets.v","status":"M","additions":3,"deletions":1}],"state":"merged","open_date":"2021-06-17T07:25:57Z","update_date":"2021-06-17T07:57:22Z","discussion":[{"author":"CohenCyril","date":"2021-06-17T07:58:25Z","comment":"We could also have had `Definition image_def A f := ...` and `Notation image f A := (image_def A f)` :)"},{"author":"proux01","date":"2021-06-17T11:12:55Z","comment":"Thanks!"},{"author":"affeldt-aist","date":"2021-06-17T11:15:41Z","comment":"> We could also have had `Definition image_def A f := ...` and `Notation image f A := (image_def A f)` :)\r\n\r\nIn our case, we were using `image` in the expression `@image`. Would this notation fit this role?"},{"author":"CohenCyril","date":"2021-06-17T14:26:13Z","comment":"> > We could also have had `Definition image_def A f := ...` and `Notation image f A := (image_def A f)` :)\r\n> \r\n> In our case, we were using `image` in the expression `@image`. Would this notation fit this role?\r\n\r\nno"}],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"9ee5a5c7a2a10905973bda694c59280edc6bd18e","message":"document the change of order of image arguments","date":"2021-06-17T07:24:29Z"}]},{"author":"affeldt-aist","number":392,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":16,"deletions":15},{"file":"theories/measure.v","status":"M","additions":16,"deletions":15}],"state":"merged","open_date":"2021-06-17T02:37:20Z","update_date":"2021-06-17T06:31:07Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"8bd6005c3bcf17c5e375c222c4c2a2ae70535aa8","message":"generalize B_of lemma\n\n- also fix a few warnings about Hint","date":"2021-06-17T02:44:42Z"}]},{"author":"affeldt-aist","number":391,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":16,"deletions":13},{"file":"theories/sequences.v","status":"M","additions":16,"deletions":13}],"state":"merged","open_date":"2021-06-14T04:08:06Z","update_date":"2021-06-24T13:13:17Z","discussion":[],"review_discussion":[{"author":"CohenCyril","file":"theories/sequences.v","date":"2021-06-17T07:14:31Z","comment":"line overflow"}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"5ed8eab3a336f57c5040c57a588036b41a96af55","message":"generalize *reasing_seqP lemmas","date":"2021-06-23T14:13:17Z"}]},{"author":"affeldt-aist","number":390,"diff_summary":[{"file":"theories/classical_sets.v","status":"M","additions":2,"deletions":0}],"state":"merged","open_date":"2021-06-14T00:45:39Z","update_date":"2021-06-16T05:15:49Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"ec54e4c5944ff8400fba20a2d8229be146bafb86","message":"fix section SetOrder","date":"2021-06-14T00:40:29Z"}]},{"author":"affeldt-aist","number":389,"diff_summary":[{"file":"CHANGELOG.md","status":"M","additions":26,"deletions":8},{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":26,"deletions":8}],"state":"merged","open_date":"2021-06-11T15:03:27Z","update_date":"2021-06-11T15:38:36Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"f2887237dd2b7b9292cca054cff5ef58b88edbf6","message":"changelog 0.3.8.1","date":"2021-06-11T15:06:19Z"}]},{"author":"proux01","number":388,"diff_summary":[{"file":"theories/classical_sets.v","status":"M","additions":12,"deletions":4},{"file":"theories/normedtype.v","status":"M","additions":12,"deletions":4}],"state":"merged","open_date":"2021-06-10T15:31:23Z","update_date":"2021-06-11T10:08:34Z","discussion":[{"author":"CohenCyril","date":"2021-06-10T20:02:21Z","comment":"I would keep the function first, could you tell me why you picked the other order of arguments?"},{"author":"proux01","date":"2021-06-10T20:06:59Z","comment":"It works better for type inference. I don't know whether it is such a fundamental thing or just the result of the previous notation that was written in that order (`exists2 x, A x & f x = y` rather than `exists2 x, f x = y & A x`) though."},{"author":"affeldt-aist","date":"2021-06-11T09:07:45Z","comment":"Would it be ok to merge this and make a minor release of MathComp-Analysis?"},{"author":"affeldt-aist","date":"2021-06-17T01:15:42Z","comment":"Hasn't the order of the arguments of `image` change from 0.3.7? (I noticed late because I only tested infotheo, not monae that is built on top of it and which is referencing the `image` identifier directly.)"},{"author":"proux01","date":"2021-06-17T07:03:18Z","comment":"Yes, c.f. the discussion in #388 . The ` [set E | x in A]` notation was written as `exists2 x, A x & f x = y` and the order `image A f` enabled to get similar type inference results. With the previous order `image f A`, quite a few extra type casts were needed to make analysis itself compile."},{"author":"CohenCyril","date":"2021-06-17T07:08:34Z","comment":"I did not think enough about this. We should at least document the breaking change."}],"review_discussion":[],"tags":[],"commits":[{"author":"proux01","committer":"proux01","hash":"242daac5812fa9fce1977771dfd0e2ede9f6151a","message":"Make set image a (only parsing) notation, 2nd take","date":"2021-06-10T15:26:20Z"}]},{"author":"affeldt-aist","number":387,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":65,"deletions":0},{"file":"theories/sequences.v","status":"M","additions":65,"deletions":0}],"state":"merged","open_date":"2021-06-09T07:24:25Z","update_date":"2021-06-17T07:12:10Z","discussion":[{"author":"affeldt-aist","date":"2021-06-14T01:47:03Z","comment":"I've changed the `seriesZr` substrings in the identifiers to `seriesZ`. Using `Zr` was stemming from `limZr`\r\nbut here it is a bit surprising and `Z` only looks more natural."}],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"2be5905105a20589b401d7cb4a117622c969bc6d","message":"lemmas about serie, cvg, and lim\n\nCo-Authored-By: thery <Laurent.Thery@inria.fr>","date":"2021-06-14T01:44:13Z"}]},{"author":"affeldt-aist","number":386,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":24,"deletions":5},{"file":"theories/sequences.v","status":"M","additions":24,"deletions":5}],"state":"merged","open_date":"2021-06-04T09:12:04Z","update_date":"2021-06-04T10:02:42Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"c326e12fdf9f3b783aecfb6a716b34100431762a","message":"divergence of the harmonic series\n\n- incidentally remove a lemma that made its way to MathComp","date":"2021-06-04T09:09:36Z"}]},{"author":"ybertot","number":385,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"A","additions":775,"deletions":53},{"file":"_CoqProject","status":"A","additions":775,"deletions":53},{"file":"theories/cardinality.v","status":"A","additions":775,"deletions":53},{"file":"theories/derive.v","status":"A","additions":775,"deletions":53},{"file":"theories/landau.v","status":"A","additions":775,"deletions":53},{"file":"theories/normedtype.v","status":"A","additions":775,"deletions":53},{"file":"theories/realfun.v","status":"A","additions":775,"deletions":53},{"file":"theories/topology.v","status":"A","additions":775,"deletions":53}],"state":"merged","open_date":"2021-06-02T14:32:54Z","update_date":"2021-10-13T11:53:42Z","discussion":[{"author":"thery","date":"2021-06-02T22:59:00Z","comment":"I am looking for the inverse of `ln` and I need something like : \r\n```\r\nLemma continuous_inverse (f g : R -> R) x :  \r\n  (\\forall z \\near x, g (f z) = z)  ->\r\n  (\\forall z \\near x, {for z, continuous f})  ->\r\n  {for f x, continuous g}.\r\n```\r\nAny idea how this could be proved? I think we are almost there with your theorem.\r\nWhat we are missing is just than a continuous injective function `f` is either strictly increasing or strictly decreasing. "},{"author":"thery","date":"2021-06-03T05:51:30Z","comment":"Great! Do you think it would be possible to prove the generic lemma once and forall and not have\r\nto prove the increasing bit for each injective continuous function?"},{"author":"ybertot","date":"2021-06-30T11:05:02Z","comment":"The failures seem to be unrelated  to the content of the PR?  Is it possible to restart the compilation?"},{"author":"thery","date":"2021-07-05T11:24:50Z","comment":"Maybe an alternative formulation of the ffrst theorem is :\r\n```\r\n{near a, injective f} ->\r\n(near a, continuous f} ->\r\n{near a, {mono f : x y / x <= y}} \\/ {near a, {mono f : x y /~ x <= y}}\r\n```"},{"author":"CohenCyril","date":"2021-07-05T14:35:45Z","comment":"> Maybe an alternative formulation of the ffrst theorem is :\r\n> \r\n> ```\r\n> {near a, injective f} ->\r\n> (near a, continuous f} ->\r\n> {near a, {mono f : x y / x <= y}} \\/ {near a, {mono f : x y /~ x <= y}}\r\n> ```\r\n\r\nNo, this lemma would be less general, the naming is wrong, not the statement."},{"author":"CohenCyril","date":"2021-07-05T14:37:05Z","comment":"> > Maybe an alternative formulation of the ffrst theorem is :\r\n> > ```\r\n> > {near a, injective f} ->\r\n> > (near a, continuous f} ->\r\n> > {near a, {mono f : x y / x <= y}} \\/ {near a, {mono f : x y /~ x <= y}}\r\n> > ```\r\n> \r\n> No, this lemma would be less general, the naming is wrong, not the statement.\r\n\r\nOf course, we could/should also have the \"near version\", which should be an almost trivial specialization of the one on a segment."},{"author":"thery","date":"2021-07-05T16:32:49Z","comment":"> I think the lemmas with `\\/` are difficult to use, we should also provide the two alternatives for each: one with hypothesis `f a <= f b` and one with `f a >= f b`.\r\n\r\nThis is the way the actual proof works, It proves f a <= f b and then prove the other taking -f"},{"author":"CohenCyril","date":"2021-07-05T16:33:28Z","comment":"> > I think the lemmas with `\\/` are difficult to use, we should also provide the two alternatives for each: one with hypothesis `f a <= f b` and one with `f a >= f b`.\r\n> \r\n> This is the way the actual proof works, It proves f a <= f b and then prove the other taking -f\r\n\r\nI know ;)"},{"author":"thery","date":"2021-07-05T16:49:08Z","comment":"so stating the two alternatives before should simplify the proof."},{"author":"thery","date":"2021-07-08T23:22:23Z","comment":"Here is the other proof I need\r\n\r\n```\r\nLemma inverse_swap_continuous  (f g : R -> R) (x : R) :\r\n  {near x, cancel f g} -> {near x, continuous f} -> {near (f x), cancel g f}.\r\nProof.\r\nmove=> [e egt0 fK] [e' e'gt0 ctf].\r\nset e'' := Num.min e e' / 2.\r\nhave e''gt0 : 0 < e''.\r\n  by apply: divr_gt0; [rewrite /Num.min; case: ifP | rewrite ltr0Sn].\r\nhave [e''lte e''lte'] : e'' < e /\\ e'' < e'.\r\n  have e''lt2 : e'' < e'' + e'' by rewrite ltr_addl //.\r\n  rewrite !(lt_le_trans e''lt2) // /e'' -mulrDl (le_trans (midf_le _).2) //;\r\n    by case: (lerP e e') => // strict; rewrite ltW.\r\nhave fK' : {in `[x - e'', x + e''], cancel f g}.\r\n  move=> y; rewrite in_itv /= => /andP [yin1 yin2]; apply: fK=> /=.\r\n  rewrite -opprB normrN real_ltr_distl ?num_real // (lt_le_trans _ yin1) /=.\r\n    by rewrite (le_lt_trans yin2) // ltr_add2.\r\n  by rewrite ltr_add2 ltr_oppl opprK.\r\nhave ctf' : {in `[x - e'', x + e''], continuous f}.\r\n  move=> y; rewrite in_itv /= => /andP [yin1 yin2]; apply: ctf => /=.\r\n  rewrite -opprB normrN real_ltr_distl ?num_real // (lt_le_trans _ yin1) /=.\r\n    by rewrite (le_lt_trans yin2) // ltr_add2.\r\n  by rewrite ltr_add2 ltr_oppl opprK.\r\nhave cmp1 : x - e'' < x by rewrite ltr_subl_addr ltr_addl.\r\nhave cmp2 : x < x + e'' by rewrite ltr_addl.\r\nhave cmp : x - e'' < x + e'' by rewrite (lt_trans cmp1).\r\nhave ifx : If f (x - e'') (x + e'').\r\n  by move=> v w vin win fq; rewrite -(fK' v) // fq fK'.\r\nhave [mfx |mfx] := segment_injective_monotone ifx ctf'.\r\n  near=> z.\r\n  apply: interval_injective_continuous_bijective _ ctf' _ _ _ _ => //.\r\n  apply: strict_to_large_itv.\r\n  near: z; rewrite near_simpl; apply: near_in_interval.\r\n  by rewrite in_itv /= !(ltNge, mfx, in_itv) /= -?ltNge ?(lexx, cmp1, ltW).\r\nnear=> y; suff : ((f \\o -%R) \\o -g) y = y by rewrite /= opprK.\r\nhave ctNf' : {in `[ (- x) - e'', (-x) + e''], continuous (f \\o -%R)}.\r\n  move=> z /itvP zI; apply: continuous_comp; first by apply: continuousN.\r\n  apply: ctf'.\r\n  by rewrite in_itv /= lter_oppr opprD opprK zI lter_oppl opprD zI.\r\napply: interval_injective_continuous_bijective _ ctNf' _ _ _ _.\r\n- by rewrite -opprD lter_oppl opprD opprK.\r\n- move=> z1 z2 /itvP z1I /itvP z2I.\r\n  by rewrite mfx // 1?lter_oppl ?opprK // in_itv /= lter_oppl lter_oppr !opprD\r\n             opprK ?(z1I, z2I).\r\n- move=> z /itvP zI; rewrite -[RHS](opprK z); congr (- _).\r\n  apply: fK'.\r\n  by rewrite in_itv /= lter_oppr opprD opprK zI lter_oppl opprD zI.\r\napply: strict_to_large_itv.\r\nnear: y; rewrite near_simpl; apply: near_in_interval.\r\nrewrite in_itv /= !(opprD, opprK).\r\nby rewrite !(ltNge, mfx, in_itv) /= -?ltNge ?(lexx, cmp2) // ltW // ltW.\r\nGrab Existential Variables. all:end_near. Qed.\r\n```\r\n"},{"author":"CohenCyril","date":"2021-07-13T08:04:09Z","comment":"I think all the shorthands that appear in statements should be removed from statements: I find `If`, `Cf`, and `Mf` unreadable. Please replace them by the body of the let in..."},{"author":"ybertot","date":"2021-07-13T09:14:21Z","comment":"I did the replacement of If Cf and Mf, but only in main statements.  Inside proofs, I kept them.  Is that ok?\r\n"},{"author":"thery","date":"2021-07-29T10:18:14Z","comment":"is it ready to merge?"},{"author":"ybertot","date":"2021-07-30T06:21:05Z","comment":"@CohenCyril you requested changes long ago, and I think they were made, can you check?"},{"author":"CohenCyril","date":"2021-08-04T14:42:04Z","comment":"@ybertot there are several naming problems, ordering of lemmas and too strong hypotheses here and there. I take the lock on this PR, please do not touch anything yet."},{"author":"CohenCyril","date":"2021-08-04T21:57:51Z","comment":"I will stop there for now... It needs a second pass to create `realfun.v`, dispatch various lemmas (including backports to mathcomp) where they belong and double check their names. There still are some generalizations to make on some auxiliary lemmas. Also the changelog must be update.\r\n@ybertot if you feel like doing it...\r\n"},{"author":"thery","date":"2021-09-16T09:45:11Z","comment":"@ybertot  @CohenCyril news?\r\n"},{"author":"ybertot","date":"2021-09-17T08:37:37Z","comment":"I had a direct discussion with @CohenCyril.  I won't be able to work on this PR before October."},{"author":"affeldt-aist","date":"2021-09-27T00:58:31Z","comment":"> including backports to mathcomp\r\n\r\n`ltr_distlC`, `ler_distlC`, `subset_itv_oo_cc`, `itvxx`, `itvxxP` backported to MathComp\r\n(PR: https://github.com/math-comp/math-comp/pull/791)\r\n"},{"author":"affeldt-aist","date":"2021-10-01T12:28:35Z","comment":"> I will stop there for now... It needs a second pass to create `realfun.v`, dispatch various lemmas (including backports to mathcomp) where they belong and double check their names. There still are some generalizations to make on some auxiliary lemmas. Also the changelog must be update. @ybertot if you feel like doing it...\r\n\r\nI did some work in this direction but I have to stop for now.\r\n\r\n"},{"author":"thery","date":"2021-10-12T08:10:16Z","comment":"@affeldt-aist @ybertot @CohenCyril what is left to be done?"},{"author":"affeldt-aist","date":"2021-10-12T09:28:06Z","comment":"> @affeldt-aist @ybertot @CohenCyril what is left to be done?\r\n\r\nLast time I checked there were still lemmas to be put in better locations. I go back to it  right now."},{"author":"affeldt-aist","date":"2021-10-12T14:32:31Z","comment":"> > @affeldt-aist @ybertot @CohenCyril what is left to be done?\r\n> \r\n> Last time I checked there were still lemmas to be put in better locations. I go back to it right now.\r\n\r\nWe did a bit of cleaning with @thery .\r\n\r\nWhat about merging? @CohenCyril \r\n\r\n@ybertot Is it ok to squash some contiguous commits before merging?"},{"author":"ybertot","date":"2021-10-12T15:02:31Z","comment":"I trust you all on every operations that can be made on this commit.  Do you need me for sth?  I am busy with conference reviewing just now."},{"author":"affeldt-aist","date":"2021-10-12T15:53:41Z","comment":"> Do you need me for sth?\r\n\r\nNo, I think we are almost done. \r\n\r\n"}],"review_discussion":[{"author":"ybertot","file":"theories/inverse_continuous.v","date":"2021-06-22T08:33:22Z","comment":"It would be better to have a wlog step 4 lines above, where you show that e can be taken small enough for `` `]x-e, x+e[ `` to be inside `` `]a,b[``"},{"author":"CohenCyril","file":"theories/inverse_continuous.v","date":"2021-06-30T11:45:49Z","comment":"These seemed unused\r\n```suggestion\r\n```\r\n"},{"author":"thery","file":"theories/inverse_continuous.v","date":"2021-07-05T10:29:19Z","comment":"```move=> x xin; apply: main => //; first by rewrite /= ltr_oppr opprK.```"},{"author":"thery","file":"theories/inverse_continuous.v","date":"2021-07-05T10:30:28Z","comment":"```\r\nrewrite (_ : (fun x => x ^ 2) = (fun x => x * x)); last first.\r\n```\r\n"},{"author":"thery","file":"theories/inverse_continuous.v","date":"2021-07-05T10:31:20Z","comment":"simply `by apply: continuousM.`"},{"author":"thery","file":"theories/inverse_continuous.v","date":"2021-07-05T10:36:03Z","comment":"Maybe also add ```Let MTf (f : R -> R) a b := \r\n  {in `[a, b] &, {mono f : x y / x <= y}} \\/\r\n  {in `[a, b] &, {mono f : x y /~ x <= y}}.```\r\n"},{"author":"thery","file":"theories/inverse_continuous.v","date":"2021-07-05T10:36:42Z","comment":"```MTf f a b```"},{"author":"thery","file":"theories/inverse_continuous.v","date":"2021-07-05T10:37:38Z","comment":"on one line"},{"author":"thery","file":"theories/inverse_continuous.v","date":"2021-07-05T10:38:14Z","comment":"Proof on one line"},{"author":"thery","file":"theories/inverse_continuous.v","date":"2021-07-05T10:38:50Z","comment":"Proof on one line"},{"author":"thery","file":"theories/inverse_continuous.v","date":"2021-07-05T10:39:41Z","comment":"``` MTf g (Num.min (f a) (f b)) (Num.max (f a) (f b))```"},{"author":"thery","file":"theories/inverse_continuous.v","date":"2021-07-05T10:40:17Z","comment":"nearN?"},{"author":"thery","file":"theories/inverse_continuous.v","date":"2021-07-05T10:41:09Z","comment":"```\r\nrewrite ltNge monf -?ltNge //; first by rewrite in_itv /= (ltW aLgy) (ltW gyLb).\r\n```"},{"author":"CohenCyril","file":"theories/inverse_continuous.v","date":"2021-07-05T14:28:14Z","comment":"This lemma is misnamed since it does not use `near` at all: maybe `segment_inj_monotone` ?"},{"author":"CohenCyril","file":"theories/inverse_continuous.v","date":"2021-07-05T14:28:53Z","comment":"This proof can be compressed, I will suggest something later, but if I do not it should not delay the merge."},{"author":"CohenCyril","file":"theories/inverse_continuous.v","date":"2021-07-05T14:32:49Z","comment":"Please open a PR in mathcomp so that it is merged for 1.13.0 :smile: "},{"author":"CohenCyril","file":"theories/inverse_continuous.v","date":"2021-07-05T14:33:41Z","comment":"```suggestion\r\n  {in `](f a), (f b)[, continuous g}.\r\n```"},{"author":"CohenCyril","file":"theories/inverse_continuous.v","date":"2021-07-05T21:44:26Z","comment":"```suggestion\r\n  {near x, cancel f g} ->\r\n  {near x, continuous f} ->\r\n```"},{"author":"CohenCyril","file":"theories/inverse_continuous.v","date":"2021-07-05T21:45:34Z","comment":"I guess the conclusion could be strengthened to `{near f x, continuous g}`?"},{"author":"ybertot","file":"theories/inverse_continuous.v","date":"2021-07-06T15:04:13Z","comment":"When looking for the place where this should be included, I found the following lemma\r\n`real_oppr_min`  which expresses the required property in a more elegant way.  However, it feels strange that we need to prove the `_ \\is real` property, while all elements of a realType are real (actually, all elements of a realDomainType).\r\nShould the theorem `num_real` be included in the hint database for // (is there such a hint database)?"},{"author":"ybertot","file":"theories/inverse_continuous.v","date":"2021-07-06T20:27:37Z","comment":"Anyway, I just check oppr_min and oppr_max already exist.  I did not search for them in the right way (it did not come to my mind that they were morphism lemmas)."},{"author":"thery","file":"theories/inverse_continuous.v","date":"2021-07-08T22:02:18Z","comment":"Maybe one could use `segment_injective_monotone` instead of `wlog`\r\n\r\n```\r\nLemma continuous_inverse  (f g : R -> R) (x : R) :\r\n  {near x, cancel f g} -> {near x, continuous f} -> {near (f x), continuous g}.\r\nProof.\r\nmove=> [e egt0 fK] [e' e'gt0 ctf].\r\nset e'' := Num.min e e' / 2.\r\nhave e''gt0 : 0 < e''.\r\n  by apply: divr_gt0; [rewrite /Num.min; case: ifP | rewrite ltr0Sn].\r\nhave [e''lte e''lte'] : e'' < e /\\ e'' < e'.\r\n  have e''lt2 : e'' < e'' + e'' by rewrite ltr_addl //.\r\n  rewrite !(lt_le_trans e''lt2) // /e'' -mulrDl (le_trans (midf_le _).2) //;\r\n    by case: (lerP e e') => // strict; rewrite ltW.\r\nhave fK' : {in `[x - e'', x + e''], cancel f g}.\r\n  move=> y; rewrite in_itv /= => /andP [yin1 yin2]; apply: fK=> /=.\r\n  rewrite -opprB normrN real_ltr_distl ?num_real // (lt_le_trans _ yin1) /=.\r\n    by rewrite (le_lt_trans yin2) // ltr_add2.\r\n  by rewrite ltr_add2 ltr_oppl opprK.\r\nhave ctf' : {in `[x - e'', x + e''], continuous f}.\r\n  move=> y; rewrite in_itv /= => /andP [yin1 yin2]; apply: ctf => /=.\r\n  rewrite -opprB normrN real_ltr_distl ?num_real // (lt_le_trans _ yin1) /=.\r\n    by rewrite (le_lt_trans yin2) // ltr_add2.\r\n  by rewrite ltr_add2 ltr_oppl opprK.\r\nhave cmp1 : x - e'' < x by rewrite ltr_subl_addr ltr_addl.\r\nhave cmp2 : x < x + e'' by rewrite ltr_addl.\r\nhave cmp : x - e'' < x + e'' by rewrite (lt_trans cmp1).\r\nhave ifx : If f (x - e'') (x + e'').\r\n  by move=> v w vin win fq; rewrite -(fK' v) // fq fK'.\r\nhave [mfx |mfx] := segment_injective_monotone ifx ctf'.\r\n  near=> z; apply: inverse_increasing_continuous ctf' _ _ _ => //.\r\n    by rewrite mfx ?ltW // in_itv /= ?lexx ltW.\r\n  near: z; rewrite near_simpl; apply: near_in_interval.\r\n  by rewrite in_itv /= !(ltNge, mfx, in_itv) /= -?ltNge ?(lexx, cmp1, ltW).\r\nnear=> y; rewrite -[y]opprK (_ : g = (g \\o -%R \\o -%R)); last first.\r\n  by apply: funext=> u; rewrite /= opprK.\r\napply: continuous_comp; rewrite opprK; first by apply: continuousN.\r\nhave ctNf: {in `[(x - e''), (x + e'')], continuous (- f)}.\r\n  by move=> z zI; apply/continuousN/ctf'.\r\napply: inverse_increasing_continuous ctNf _ _ _ => //.\r\n- by rewrite lter_oppr opprK mfx ?ltW // in_itv /= ?lexx ltW.\r\n- by move=> z zI; rewrite /= opprK fK'.\r\nrewrite oppr_itvoo !opprK.\r\nnear: y; rewrite near_simpl; apply: near_in_interval.\r\nby rewrite in_itv /= !(ltNge, mfx, in_itv) /= -?ltNge ?(lexx, cmp2, ltW).\r\nGrab Existential Variables. all:end_near. Qed.\r\n```"},{"author":"affeldt-aist","file":"theories/inverse_continuous.v","date":"2021-07-12T13:56:25Z","comment":"What about using `total_homo_mono_in`?\r\n\r\n```coq\r\nLemma segment_injective_increasing' (f : R -> R) (a b : R) :\r\n  f a <= f b -> If f a b -> Cf f a b -> {in `[a, b] &, {homo f : x y / x < y}}.\r\nProof.\r\nmove=> fab fI fC x y xI yI; rewrite lt_neqAle => /andP[xy yx].\r\nrewrite lt_neqAle; apply/andP; split; first by apply: contra xy => /eqP/fI ->.\r\nhave /andP[fax fxb] : f a <= f x <= f b by exact: triplet_injective_increasing.\r\nsuff /andP[-> //] : f x <= f y <= f b.\r\napply: triplet_injective_increasing => [|u v /itvP uI /itvP vI |z /itvP uI|] //.\r\n- by apply: fI; rewrite in_itv /= (le_trans (_ : a <= x)) !(itvP xI, uI, vI).\r\n- by apply: fC; rewrite in_itv /= (le_trans (_ : a <= x)) !(itvP xI, uI).\r\n- by rewrite yx (itvP yI).\r\nQed.\r\n\r\nLemma segment_injective_increasing (f : R -> R) (a b : R) :\r\n  f a <= f b -> If f a b -> Cf f a b -> Mf f a b.\r\nProof.\r\nmove=> fab fI fC.\r\nby apply: total_homo_mono_in (segment_injective_increasing' fab fI fC) => //;\r\n  [exact: lt_neqAle | exact: lt_neqAle | exact: le_anti | exact: le_total].\r\nQed.\r\n```"},{"author":"affeldt-aist","file":"theories/inverse_continuous.v","date":"2021-07-13T03:20:48Z","comment":"What about using the `subset` notation?\r\n\r\n```coq\r\nLemma strict_to_large_itv (a b : R) : {subset `]a, b[ <= `[a, b]}.\r\nProof. by move=> x; rewrite !in_itv /= => /andP[/ltW -> /ltW ->]. Qed.\r\n```"},{"author":"affeldt-aist","file":"theories/inverse_continuous.v","date":"2021-07-13T07:30:55Z","comment":"I tried to use `subset_prop_in1` and make it shorter but the gain is not obvious. I let it here for the record. \r\n\r\n```coq\r\nmove=> faLfb fI fC /andP[aLc cLb].\r\nhave [faLfc|fcLfa|faEfc] /= := ltrgtP (f a) (f c).\r\n- rewrite leNgt; apply/negP => fbLfc.\r\n  move: (fbLfc); suff /eqP -> : c == b by rewrite ltxx.\r\n  rewrite eq_le cLb /=.\r\n  have [d /itvP dI fdEfb] : exists2 d, d \\in `[a, c] & f d = f b.\r\n    apply: IVT => //; last by case: ltrgtP faLfc; rewrite // faLfb // ltW.\r\n    apply: subset_prop_in1 fC.\r\n    by move=> x; rewrite !in_itv => /andP[->] /le_trans; exact.\r\n  suff <- : d = b by rewrite dI.\r\n  by apply: fI fdEfb; rewrite in_itv/= ?(lexx,dI,le_trans aLc,le_trans _ cLb).\r\n- have [fbLfc|fcLfb|fbEfc] /= := ltrgtP (f b) (f c).\r\n  + by have := lt_trans fbLfc fcLfa; rewrite ltNge faLfb.\r\n  + move: (fcLfa); suff /eqP -> : c == a by rewrite ltxx.\r\n    rewrite eq_le aLc andbT.\r\n    have [d /itvP dI fdEfa] : exists2 d, d \\in `[c, b] & f d = f a.\r\n      apply: IVT => //; last by case: ltrgtP fcLfb => // _ _; rewrite ltW.\r\n      apply: subset_prop_in1 fC.\r\n      by move=> x; rewrite !in_itv => /andP[/(le_trans aLc) /= ->].\r\n    suff <- : d = a by rewrite dI.\r\n    by apply: fI fdEfa; rewrite in_itv/= ?(lexx,dI,le_trans aLc).\r\n  + by move: fcLfa; rewrite -fbEfc ltNge faLfb.\r\n- by rewrite -(fI _  _ _ _ faEfc) // in_itv /= ?lexx (le_trans aLc).\r\n```"},{"author":"CohenCyril","file":"theories/inverse_continuous.v","date":"2021-07-13T07:35:17Z","comment":"I suggest to inline the former inside the latter.\r\nIf there is an additional lemma to add it should be:\r\n```coq\r\nforall (f : R -> R) (a b : R), f a <= f b -> If f a b -> Cf f a b -> {in `[a, b] &, {mono f : x y / x < y}}.\r\n```\r\nwhich is a oneliner from the latter.\r\n  "},{"author":"CohenCyril","file":"theories/inverse_continuous.v","date":"2021-07-13T07:38:07Z","comment":"This kind of goal were supposed to be closed by `apply/subitvP; rewrite !lexx.` but it looks like that inequalities on bounds do not unfold anymore with mathcomp 1.12 ... @pi8027 do you have a solution for that?"},{"author":"CohenCyril","file":"theories/inverse_continuous.v","date":"2021-07-13T07:41:35Z","comment":"I believe this is an internal lemma to `segment_injective_increasing` and should be inlined, because it is subsumed by it."},{"author":"ybertot","file":"theories/inverse_continuous.v","date":"2021-07-13T07:48:18Z","comment":"An alternative proof goes through `subitvP` : \r\n\r\n    Proof. by apply: subitvP; rewrite subitvE !bound_lexx. Qed.\r\n\r\nI am scared by how difficult it was for me to find `bound_lexx`.  This is yet another example of the need to improve the Search command drastically.\r\n\r\nBy the way, How do you make that your code is colorized?"},{"author":"affeldt-aist","file":"theories/inverse_continuous.v","date":"2021-07-13T07:51:13Z","comment":"By starting with \r\n```\r\n```coq\r\n```\r\n"},{"author":"CohenCyril","file":"theories/inverse_continuous.v","date":"2021-07-13T07:57:14Z","comment":"What about `continuous_inj_le_itvcc` (cf [`inj_eq`](https://github.com/math-comp/math-comp/blob/1c4a6d3ca17820f6c60f194ffa845f8c007c9d8f/mathcomp/ssreflect/eqtype.v#L423-L424))\r\nI think for the sake of completeness, the theorem should actually be provided on any interval..."},{"author":"ybertot","file":"theories/inverse_continuous.v","date":"2021-07-13T08:51:06Z","comment":"Thanks, I am integrating this variant in the proof, together with more uses of `subitvP` `subitvE`"},{"author":"ybertot","file":"theories/inverse_continuous.v","date":"2021-07-13T08:51:34Z","comment":"Just did the inlining."},{"author":"ybertot","file":"theories/inverse_continuous.v","date":"2021-07-13T08:52:16Z","comment":"Is this a naming suggestion?"},{"author":"ybertot","file":"theories/inverse_continuous.v","date":"2021-07-13T08:58:15Z","comment":"Anyway, I am not sure it holds for open intervals."},{"author":"CohenCyril","file":"theories/inverse_continuous.v","date":"2021-07-13T09:08:45Z","comment":"> Anyway, I am not sure it holds for open intervals.\r\n\r\nI'm quite sure it does. The problem might be the condition `f a <= f b`, which you do not want to consider for the open intervals.\r\nI think this is actually a flaw of the current phrasing. Maybe a precondition of the form `(exists x y, [x \\in I, y \\in I, x < y & f x <= f y])` would actually be more flexible and desirable than the specialization to `a` and `b` which does not make sense when a bound is excluded or infinite)"},{"author":"CohenCyril","file":"theories/inverse_continuous.v","date":"2021-07-13T09:11:47Z","comment":"> I think the lemmas with `\\/` are difficult to use, we should also provide the two alternatives for each: one with hypothesis `f a <= f b` and one with `f a >= f b`.\r\n\r\nAlso when I said this, I did not mean to have you remove the statements with the `\\/`, just derive them from the other ones."},{"author":"CohenCyril","file":"theories/inverse_continuous.v","date":"2021-07-16T11:00:28Z","comment":"This can also be generalized to any interval."},{"author":"ybertot","file":"theories/inverse_continuous.v","date":"2021-07-21T15:30:07Z","comment":"done, but I have difficulties with name choice.  Also should we keep the ones with f a <= f b where a and b are extremities of a closed interval, or should this lemma be removed?"},{"author":"CohenCyril","file":"theories/inverse_continuous.v","date":"2021-07-21T15:49:23Z","comment":"Can you rarher use a quaternary conjuction? `[/\\ ..., ..., & ...]`"},{"author":"CohenCyril","file":"theories/inverse_continuous.v","date":"2021-07-22T08:10:59Z","comment":"```suggestion\r\n    x \\in I -> y \\in I -> x < y -> f x != f y.\r\n```"},{"author":"CohenCyril","file":"theories/inverse_continuous.v","date":"2021-07-22T08:11:29Z","comment":"do not `?` unless the goal is closed in the same line."},{"author":"CohenCyril","file":"theories/inverse_continuous.v","date":"2021-07-22T08:14:09Z","comment":"https://github.com/math-comp/analysis/blob/804a5e060da46853ea14e29a720edab76ea79fa4/theories/normedtype.v#L2968-L2972\r\n\r\nGives the two characterization, one with strict inequalities, one with large. Both are useful depending on whether you want to prove or use. "},{"author":"CohenCyril","file":"theories/inverse_continuous.v","date":"2021-07-22T08:14:49Z","comment":"Use `is_intervalPle` instead"},{"author":"CohenCyril","file":"theories/inverse_continuous.v","date":"2021-07-22T08:15:43Z","comment":"Use quaternary conjuction instead\r\n```suggestion\r\n  (exists x y, [/\\ x \\in I, y \\in I, x < y & f y <= f x]) ->\r\n```"},{"author":"CohenCyril","file":"theories/inverse_continuous.v","date":"2021-07-22T08:23:10Z","comment":"There is a ssreflect feature for that. Here is a (untested) suggestion for replacement of your proof script.\r\n```suggestion\r\nmove=> e0 [:xlt] [:xgt]; case/and3P; split.\r\n- by abstract: xlt; rewrite ltr_addl.\r\n- by abstract: xgt; rewrite ltr_subl_addr.\r\nexact: lt_trans xgt.\r\n```"},{"author":"ybertot","file":"theories/inverse_continuous.v","date":"2021-07-22T09:04:12Z","comment":"I agree they are both useful, but by choosing to use the one with the \"strongest\" hypothesis by default, we make usage harder: is_intervalPle is a clumsy tool: implicit arguments don't do the right thing in this use case."},{"author":"ybertot","file":"theories/inverse_continuous.v","date":"2021-07-22T09:05:13Z","comment":"I did try, and it was a collection of unpleasant discoveries."},{"author":"thery","file":"theories/normedtype.v","date":"2021-07-29T10:28:57Z","comment":"I was wondering why there was not the assumption f a <= f b then I understood.\r\nmaybe a comment could be added. "},{"author":"thery","file":"theories/normedtype.v","date":"2021-07-29T10:32:33Z","comment":"should we have the variant `segment_left_inverse_decreasing`\r\nwith `[f b , f a]`?"},{"author":"ybertot","file":"theories/normedtype.v","date":"2021-07-29T12:09:49Z","comment":"This is delaying the merge of the main theorem for the sake of being complete with respect to less important by-products.\r\nAnyway, I am adding the comment and the extra lemma in the next commit."},{"author":"CohenCyril","file":"theories/normedtype.v","date":"2021-08-03T12:50:13Z","comment":"```suggestion\r\nLemma cvg_comp_shift {T : Type} {K : numDomainType} {R : normedModType K}\r\n```"},{"author":"CohenCyril","file":"theories/normedtype.v","date":"2021-08-03T12:50:50Z","comment":"Why? Doesn't `bound_itvE1` subsume them all?"},{"author":"CohenCyril","file":"theories/normedtype.v","date":"2021-08-03T12:51:14Z","comment":"```suggestion\r\nLemma nearN {R : numFieldType} (a : R) (P : R -> Prop) :\r\n  (\\forall x \\near (- a), P x) = (\\forall x \\near a,  P (- x)).\r\n```"},{"author":"affeldt-aist","file":"theories/normedtype.v","date":"2021-10-01T11:46:58Z","comment":"These notations are intended to become global?"},{"author":"CohenCyril","file":"theories/normedtype.v","date":"2021-10-01T11:48:56Z","comment":"Would be nice."}],"tags":[],"commits":[{"author":"ybertot","committer":"affeldt-aist","hash":"e3ed1089725fad95e7e4b3061033d1110527c85e","message":"lemma to prove the continuity of inverse functions\n\n- generic lemma and its instantiation to prove that sqrt is continuous","date":"2021-10-12T15:49:00Z"},{"author":"ybertot","committer":"affeldt-aist","hash":"f118b6d468dc09d7596b0485431bd36f97aec14c","message":"adds the continuity of ln","date":"2021-10-12T15:49:00Z"},{"author":"ybertot","committer":"affeldt-aist","hash":"780cc490f25e18fd28cdea9171a052a17eadb244","message":"checkpoint with ctxt","date":"2021-10-12T15:49:00Z"},{"author":"ybertot","committer":"affeldt-aist","hash":"45b6e3f30c8d0347246e5fa9ca84a4a72f92914e","message":"an injective continuous function is monotone\n\n- proof completed","date":"2021-10-12T15:49:00Z"},{"author":"ybertot","committer":"affeldt-aist","hash":"76fa002ddd419752114e619d02ff2098cc47daaa","message":"proof cleanup\n\nCo-Authored-By: thery <Laurent.Thery@inria.fr>","date":"2021-10-12T15:49:00Z"},{"author":"ybertot","committer":"affeldt-aist","hash":"4316133dd845e52b19dc6867c2a0899ae9c788fd","message":"compilable version\n\n- this version contains the theorem for Laurent and compiles,\n  but the old bad theorem has not been removed and is still used","date":"2021-10-12T15:49:00Z"},{"author":"ybertot","committer":"affeldt-aist","hash":"c75432fb1c451f17f63e0aaed7c5805c85e24914","message":"finished proof of inverse_continuous\n\n- application to sqrt","date":"2021-10-12T15:49:00Z"},{"author":"ybertot","committer":"affeldt-aist","hash":"b8339c2840a2a7424dab647e81ce86903829d1a2","message":"replace uses of min and max by a wlog statement.  No big gain.","date":"2021-10-12T15:49:00Z"},{"author":"ybertot","committer":"affeldt-aist","hash":"9fd6efb091664e577a5d40a66cb4f8677d54f723","message":"progress\n\n- proof: the left inverse of an injective function is monotone\n- checkpoint: surjective increasing implies continuous\n- clean up inverse_continuous","date":"2021-10-12T15:49:00Z"},{"author":"ybertot","committer":"affeldt-aist","hash":"0fd0f564d6a1196575d72ca2255baa9f16610e28","message":"finished proofs, with better intermediate lemmas\n\n- continuous + injective -> monotone\n- continuous + injective + mono -> bijective between 2 intervals\n- monotone + invertible + with monotone inverse -> continuous\n- finally the main lemma: continuous and injective -> inverse continuous","date":"2021-10-12T15:49:00Z"},{"author":"ybertot","committer":"affeldt-aist","hash":"5eebdd35f6a1adfff17f4c1976a363d8f917881a","message":"progress\n\n- establish a form that is preferred in another branch","date":"2021-10-12T15:49:00Z"},{"author":"ybertot","committer":"affeldt-aist","hash":"693ca20cc985d27cb4edcd1b01d8e3fc8438ffb5","message":"addressing reviews\n\n- many of the remarks in reviews by Laurent and Cyril\n- cosmetic change requested","date":"2021-10-12T15:49:00Z"},{"author":"ybertot","committer":"affeldt-aist","hash":"013cc6b551fc68b1a77438a753f3a55de4e4457f","message":"reorganization, fix, improvements\n\n- reorganize proofs to treat faster the increasing cases\n- reorganize proofs to treat first increasing cases\n- make interval and ball manipulations more natural\n- collapse two proofs about the inverse in a single one\n- fix the proof for sqrt","date":"2021-10-12T15:49:00Z"},{"author":"ybertot","committer":"affeldt-aist","hash":"58119df29b891dce159c604c6f2ac0ac357ceb57","message":"inline proofs and better use of subset_prop_in1\n\nCo-Authored-By : Reynald Affeldt <reynald.affeldt@aist.go.jp>","date":"2021-10-12T15:49:00Z"},{"author":"ybertot","committer":"affeldt-aist","hash":"9a5ca42fd4c509599a6ff6aaf56895862ba4866d","message":"progress\n\n- a continuous injective function is increasing on an interval as soon as\n  there are two points where the increase condition is satisfied","date":"2021-10-12T15:49:00Z"},{"author":"ybertot","committer":"affeldt-aist","hash":"079b64b709b77adf29f6949817c3e51bb76dc8c1","message":"simplifications, cosmetics\n\n- simplified proof\n- cosmetic changes\n- subset_prop_in1 was already present in coq, under the name sub_in1","date":"2021-10-12T15:49:00Z"},{"author":"ybertot","committer":"affeldt-aist","hash":"d8eb689f3a5112ee4355bbf0c11a824b0f207151","message":"generalization, removals, reognization\n\n- remove lemmas that already existed\n- remove lemma itvcc_sub the use case of which is contrived\n- remove uses of itvcc_le in favor of interval_is_interval\n- make the monotony lemma generic for any interval\n- reorganize main monotony proof","date":"2021-10-12T15:49:00Z"},{"author":"ybertot","committer":"affeldt-aist","hash":"55825c0ed690e20024ac47ec77b2305deec614f9","message":"Moves lemmas in appropriate places\n\n - The definition of shift is moved from landau.v to normedtype.v\n - Lemmas used in the proof that inverse functions are continuous are\n   also moved to normedtype.v\n\n   Generic lemmas (only slightly related to continuous or inverse functions)\n   * bound_itvE1 (conditions for the bounds of an interval to be in the interval)\n   * nearN, near_in_itv\n   * subset_itv_oo_cc (this should be a math-comp lemma)\n   * subset_ball_prop_in_itv (maybe a better name should be found)\n   * prop_in_and (this should be a coq/ssr lemma)\n\n   Specific lemmas about inverse of continuous functions, some of these lemmas\n   are concerned with closed input intervals (these lemmas have the prefix\n   \"segment\" in their name); some are concerned with any form of interval\n   (these lemmas have the prefix \"itv\" in their name); some of these lemmas\n   work near a given point.\n   * segment_continuous_inj_le, segment_left_inverse_increasing,\n     segment_inverse_increasing_continuous\n   * itv_continuous_inj_le, itv_continuous_inj_ge, itv_continuous_inj_monotone\n   * continuous_inverse, continuous_can_sym\n\n   Some symmetric lemmas could be added: segment_continuous_inj_ge\n   (inspired from itv.*ge) and segment_left_inverse_decreasing\n\n - normedtype.v also contains one application: the proof that sqrt\n   is continuous.\n\n - The file inverse_continuous.v still exists, but it is destined to be removed.","date":"2021-10-12T15:49:00Z"},{"author":"ybertot","committer":"affeldt-aist","hash":"ebb5bd554635e821e8ce2375e00b6138aded2542","message":"comments, removal, fixes\n\n- remove theories/inverse_continuous which now only contains exercises\n  what is left in this file is now in a branch named ssr_ex0\n- segment_left_inverse_increasing : add a comment about an unnecessary\n  hypothesis\n- also adds the symmetric segment_left_inverse_decreasing","date":"2021-10-12T15:49:00Z"},{"author":"CohenCyril","committer":"affeldt-aist","hash":"8a423c17f9e1fd34c6d0d99928fb72672083c7dc","message":"weaker hyps, shorter proofs, renamings, variaants","date":"2021-10-12T15:49:00Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"b2c747e47c7c4bcd3293d71ac347ad434e0d1c40","message":"minor generalizations, mv/rm lemmas\n\n- moving some lemmas to cardinality.v\n- lerN, leNr seem to be subsumed by ssrnum's ge0_cp, etc. lemmas\n- notation f @`[_, _] made global\n- create realfun.v\n- update changelog","date":"2021-10-12T15:49:00Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"743cce80810d74683419d7c8afe0fd473640b9d0","message":"cleaning\n\n- update documentation\n- move lemmas out of normedtype.v to topology.v and realfun.v\n- remove can_stable_on, section in normedtype.v\n\nCo-Authored-By: thery <Laurent.Thery@inria.fr>","date":"2021-10-12T15:49:00Z"}]},{"author":"affeldt-aist","number":384,"diff_summary":[{"file":"CHANGELOG.md","status":"M","additions":159,"deletions":147},{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":159,"deletions":147},{"file":"INSTALL.md","status":"M","additions":159,"deletions":147},{"file":"README.md","status":"M","additions":159,"deletions":147},{"file":"coq-mathcomp-analysis.opam","status":"M","additions":159,"deletions":147},{"file":"meta.yml","status":"M","additions":159,"deletions":147}],"state":"merged","open_date":"2021-06-01T09:03:34Z","update_date":"2021-06-01T09:31:31Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"14e71e5255719a72a2574ebbd8fc3803de51862b","message":"changelog for version 0.3.8","date":"2021-06-01T09:18:32Z"}]},{"author":"thery","number":383,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"A","additions":2241,"deletions":25},{"file":"_CoqProject","status":"A","additions":2241,"deletions":25},{"file":"theories/derive.v","status":"A","additions":2241,"deletions":25},{"file":"theories/exp.v","status":"A","additions":2241,"deletions":25},{"file":"theories/normedtype.v","status":"A","additions":2241,"deletions":25},{"file":"theories/nsatz_realtype.v","status":"A","additions":2241,"deletions":25},{"file":"theories/realfun.v","status":"A","additions":2241,"deletions":25},{"file":"theories/sequences.v","status":"A","additions":2241,"deletions":25},{"file":"theories/topology.v","status":"A","additions":2241,"deletions":25},{"file":"theories/trigo.v","status":"A","additions":2241,"deletions":25}],"state":"merged","open_date":"2021-06-01T00:36:16Z","update_date":"2021-12-22T12:52:19Z","discussion":[{"author":"thery","date":"2021-06-01T01:07:08Z","comment":"Don't understand why the CI fails, it works on my machine. \r\nI cannot do a `Require Import Nsatz` because there is a Notation clash on `-->` \r\nbut the tactic should be there\r\n\r\nFixed"},{"author":"CohenCyril","date":"2021-06-01T07:06:08Z","comment":"Looks really promising to me :) "},{"author":"thery","date":"2021-07-08T23:26:28Z","comment":"This PR depends on #385. As soon as it is merged we can remove the file `inverse_continuous.v`"},{"author":"affeldt-aist","date":"2021-09-24T00:19:44Z","comment":"Should we try to submit `sqrtrV` and `divr_eq` to MathComp before its 1.13 release?"},{"author":"thery","date":"2021-10-14T09:34:44Z","comment":"@affeldt-aist what is left to be done?"},{"author":"affeldt-aist","date":"2021-10-14T09:38:41Z","comment":"> @affeldt-aist what is left to be done?\r\n\r\nI think it is mostly about putting the lemmas in the right files."},{"author":"thery","date":"2021-10-14T12:44:59Z","comment":"is it normal the CI does not make it to build big_enough?\r\n"},{"author":"CohenCyril","date":"2021-10-14T12:48:59Z","comment":"> is it normal the CI does not make it to build big_enough?\r\n\r\nI'm clueless, I've been banging my head on it since this morning in another repo...\r\nhttps://github.com/math-comp/Abel/pull/71/checks?check_run_id=3894379682"},{"author":"thery","date":"2021-10-17T20:15:04Z","comment":"can't figure out with 8.11 is failing on topology at ligne 620."},{"author":"thery","date":"2021-10-18T11:16:17Z","comment":"Almost there. @affeldt-aist  if you can have a look I haven´t messed up things after my moving around and renaming"},{"author":"thery","date":"2021-10-18T11:38:29Z","comment":"the CI seems very unstable I get some timeout\r\n"},{"author":"thery","date":"2021-10-21T13:14:43Z","comment":"@erikmd there is a timeout in the CI for the resolution of opam constrains. Would it be possible to have a more recent version of opam associated with the dockerimage (@gares says the solver that comes with 2.1 is much better)"},{"author":"gares","date":"2021-10-21T14:22:31Z","comment":"FTR: https://github.com/ocaml/opam/issues/4495"},{"author":"thery","date":"2021-10-21T14:25:34Z","comment":"they propose to install `z3`, life is tough!"},{"author":"affeldt-aist","date":"2021-12-21T14:24:15Z","comment":"I made a last pass and hopefully addressed comments from the last meeting. Ready to merge."},{"author":"CohenCyril","date":"2021-12-22T20:02:45Z","comment":"45 commits :cry: "},{"author":"CohenCyril","date":"2021-12-22T20:04:32Z","comment":"> 45 commits cry\r\n\r\nnext time, please squash"},{"author":"thery","date":"2021-12-22T20:41:20Z","comment":"@CohenCyril can't we configure github so that it automatically squashes merge?"},{"author":"CohenCyril","date":"2021-12-22T21:18:29Z","comment":"> @CohenCyril can't we configure github so that it automatically squashes merge?\r\n\r\nNot that I know of..."},{"author":"thery","date":"2021-12-22T21:25:13Z","comment":"@CohenCyril it seems it is possible : \r\nhttps://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/configuring-commit-squashing-for-pull-requests"},{"author":"affeldt-aist","date":"2021-12-22T22:51:16Z","comment":"Note that several contiguous commits were actually squashed before merge (commits that were just minor fixes or that were actually incremental progress)."},{"author":"thery","date":"2021-12-23T10:21:18Z","comment":"@CohenCyril it seems it is possible : \r\nhttps://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/configuring-commit-squashing-for-pull-requests"}],"review_discussion":[{"author":"CohenCyril","file":"theories/exp.v","date":"2021-06-01T07:38:25Z","comment":"I would have expected  `f ~_F g -> f @ F --> a -> g @ F --> a` with this name.\r\n(BTW `f x @[x --> F]` is denoted `f @ F`, isn't it displayed that way?)\r\n\r\nI guess `near_eq_cvg_trans` would be a more meaningful name to me for this lemma"},{"author":"CohenCyril","file":"theories/exp.v","date":"2021-06-01T07:39:49Z","comment":"But is it really needed? (given it's just `near_eq_cvg` + `cvg_trans`)"},{"author":"thery","file":"theories/exp.v","date":"2021-06-01T08:59:37Z","comment":"done\r\n"},{"author":"CohenCyril","file":"theories/exp.v","date":"2021-06-07T17:09:01Z","comment":"Please refrain from using numbered occurrences in final scripts.  (here `{2}`)"},{"author":"thery","file":"theories/exp.v","date":"2021-06-07T18:13:31Z","comment":"should be ok now"},{"author":"CohenCyril","file":"theories/exp.v","date":"2021-10-14T12:33:35Z","comment":"I'd rather have a multi-rule instead."},{"author":"thery","file":"theories/exp.v","date":"2021-10-14T12:35:47Z","comment":"a multi rule that does the unfold?\r\n"},{"author":"CohenCyril","file":"theories/exp.v","date":"2021-10-14T12:38:04Z","comment":"a multi-rule that does the rewriting, ... (all equations will be proven by reflexivity)"},{"author":"CohenCyril","file":"theories/topology.v","date":"2021-10-15T17:03:05Z","comment":"why `rcf`?"},{"author":"thery","file":"theories/topology.v","date":"2021-10-16T23:46:23Z","comment":"my bad"},{"author":"CohenCyril","file":"theories/realfun.v","date":"2021-10-20T22:15:56Z","comment":"This pattern is not precise enough, this could lead to severe inefficiencies and even loops in the proof search."}],"tags":[{"tag":"enhancement :sparkles:","description":"This issue/PR is about adding new features enhancing the library"}],"commits":[{"author":"thery","committer":"affeldt-aist","hash":"acaba843874e31d74e6aa7927dbcc5e051e5e234","message":"exp0","date":"2021-12-21T09:07:23Z"},{"author":"thery","committer":"affeldt-aist","hash":"7f821b725c1bbdfdb92b7b64fc108a49c5e8f719","message":"1 + x <= exp x","date":"2021-12-21T09:07:23Z"},{"author":"thery","committer":"affeldt-aist","hash":"1b4b1c1a684c39a33529df008503ff99a07300b1","message":"1 < exp x","date":"2021-12-21T09:07:23Z"},{"author":"thery","committer":"affeldt-aist","hash":"4db299fb882c32a35a5cb0a20780c557196a6faa","message":"differentiation\n\n- P3, P4, termdiff_P","date":"2021-12-21T09:07:23Z"},{"author":"thery","committer":"affeldt-aist","hash":"1515c430127348b0ac04cb4a2f05bad44f22e733","message":"deriv of exp","date":"2021-12-21T09:07:23Z"},{"author":"thery","committer":"affeldt-aist","hash":"b01d47caa9100741baa30534c0ebbe15de5bf213","message":"expD\n\n- renaming eq_cvg","date":"2021-12-21T09:07:23Z"},{"author":"thery","committer":"affeldt-aist","hash":"ad1d3cada609ba79bb322dfb3f481b399f615166","message":"cos and sin","date":"2021-12-21T09:07:23Z"},{"author":"thery","committer":"affeldt-aist","hash":"1cc2d9fc0278158b8113f0aa80e85d086c3ff9ac","message":"cos^2 + sin^2 = 1","date":"2021-12-21T09:07:23Z"},{"author":"thery","committer":"affeldt-aist","hash":"ffb9520b8d0650cf535c1bfb5b1489483aac64ee","message":"definition of pi and more trigonometry\n\n- nsatz on a separate file","date":"2021-12-21T09:07:23Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"073d75c75ae9900f33bd3179cf6567dde681641d","message":"simplify `cvg_extra`\n\n- rename `cvg_trans` to avoid name clash with `cvg_trans` in `topology.v`\n- `cvg_equiv` is a combination of `cvg_trans` and `near_eq_cvg`","date":"2021-12-21T09:07:23Z"},{"author":"thery","committer":"affeldt-aist","hash":"5b47c0c11ec324887a4b65f8510cada5078a4da9","message":"remove Locate","date":"2021-12-21T09:07:23Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"b3733acf5777c93f5c4df694874ac763a1f2c74b","message":"simplify `cvg_series_bounded`","date":"2021-12-21T09:07:23Z"},{"author":"thery","committer":"affeldt-aist","hash":"6bd84b96ca67c58c86ff52c3b3be214e31781716","message":"improved rcfE","date":"2021-12-21T09:07:23Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"f8d2b80cd0768092e0da079ca76108bf44fdc1fd","message":"simplify `Section Cvg` and `continuous_withinNshiftx`\n\n- `cvgS` is `cvg_shiftS`\n- `is_cvg_seriesN` turned into an equality and proved using more basic lemmas\n- `is_cvg_seriesZr`, `is_cvg_seriesD`, etc. proved using more basic lemmas","date":"2021-12-21T09:07:23Z"},{"author":"thery","committer":"affeldt-aist","hash":"534fd745ebbeab4362bef087c539f6b5a1e71db5","message":"simplify derivation","date":"2021-12-21T09:07:23Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"00c0a80bc0c90c9d192c559d3d821ff867b37118","message":"define `pi` using `get`\n\n- import `chain_rule` from coq-robot\n  to shorten `is_derive1_chain`","date":"2021-12-21T09:07:23Z"},{"author":"thery","committer":"affeldt-aist","hash":"d870b4f669ab53ebe81b5cdc823c0e5ba40eb953","message":"more theorems about exp, ln, cos/sin\n\n- remove cvg_equiv","date":"2021-12-21T09:07:23Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"f2f9d54b0f830f778fc799463dfef2bf48a74cb5","message":"proof of cos 2 < 0\n\n- mimicking HOL-light","date":"2021-12-21T09:07:23Z"},{"author":"thery","committer":"affeldt-aist","hash":"2139a008140025a5a95488242095ce0b20302fcc","message":"only one value such that 0 <= x < 2 et cos x = 0","date":"2021-12-21T09:07:23Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"752f72983ee1a422753fb2d403a37f85a05a7eb5","message":"cos pi = - 1\n\n- minor cleaning","date":"2021-12-21T09:07:23Z"},{"author":"thery","committer":"affeldt-aist","hash":"0ee42fdb06cee12434d301631742173e4b8a0a80","message":"starting with tan","date":"2021-12-21T09:07:23Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"7c32dbeef28ecea35f9db31bcbe58e720ba1a0a7","message":"periodicity lemmas and De Moivre\n\n- from coq-robot","date":"2021-12-21T09:07:23Z"},{"author":"thery","committer":"affeldt-aist","hash":"d8d3d73e1c1294961841e06ac5d65f92f9ffcb96","message":"more on tan","date":"2021-12-21T09:07:23Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"9103c1b07d125255e537b26d1b9c232bb08e6f82","message":"exponential functions\n\n- tentative application to Riemann series","date":"2021-12-21T09:07:23Z"},{"author":"thery","committer":"affeldt-aist","hash":"f7f871ffc510fcc6ba4be499754b644fc8c940f4","message":"definition of acos","date":"2021-12-21T09:07:23Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"b97af95370f5824a82b6609e32969f9178d669b4","message":"generalization of periodicity lemmas","date":"2021-12-21T09:07:23Z"},{"author":"thery","committer":"affeldt-aist","hash":"7a9de16fe399cbdcfa7f61c30b930b61d4580be0","message":"acos, asin, and atan","date":"2021-12-21T09:07:23Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"084f05f65f2c884ce41132d53d49f3e8beac3347","message":"shorter proofs","date":"2021-12-21T09:07:23Z"},{"author":"thery","committer":"affeldt-aist","hash":"acb6f308882bdf50a7340a66a8ee4c1ad998c918","message":"minor fixes\n\n- remove explicite occurrence\n- fix docker","date":"2021-12-21T09:07:23Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"1c85ddd31eba66ac1092e12729aa04f4ff747440","message":"use more notations and changelog\n\n- use more mono, morph, etc. notations\n- split exp.v into two files","date":"2021-12-21T09:07:23Z"},{"author":"thery","committer":"affeldt-aist","hash":"951c733199a954f6ae5fdea9f0b87c1637d59a4a","message":"typo","date":"2021-12-21T09:07:23Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"d9b22cfd90a8b16da31a0dc27bb64849109de694","message":"doc, changelog, shorter proofs\n\n- cos_inj using ltr_cos\n- complete changelog and shorten proofs\n- header to nsatz_realType.v","date":"2021-12-21T09:07:23Z"},{"author":"thery","committer":"affeldt-aist","hash":"aaf0e765332091acea95de1c3389ab89902eee33","message":"derivation results\n\n- derivative of ln\n- derivation of acos asin atan\n- derivative of atan without axiom","date":"2021-12-21T09:07:23Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"5b59d1f38430da4f3ffb67c6e183aa909e570264","message":"complete changelog","date":"2021-12-21T09:07:23Z"},{"author":"thery","committer":"affeldt-aist","hash":"b8431ac9c85faebdbc4eba54082a35478d40ffca","message":"Thanks to Yves no admit!","date":"2021-12-21T09:07:23Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"290206f7f00f1a2954eb9450dd3ef9f0e2a2de59","message":"minor improvements and fixes\n\n- generalize is_derive1_id\n- rename following mathcomp\n- update w.r.t. master\n- fix changelog\n- proof optimization","date":"2021-12-21T09:07:23Z"},{"author":"thery","committer":"affeldt-aist","hash":"2b6ea0f0859e24cbaf537259a764c9d26bcffbba","message":"Add multi rule for unfolding functional expression\n\n- rename chain -> comp\n- remove comment\n- moving cvg","date":"2021-12-21T09:07:23Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"1bc5787f49573fe5cdcddaa2c8d61040855d7862","message":"minor improvements\n\n- use bounded_fun in cvg_series_bounded\n- move continuous/shift lemmas and multirule","date":"2021-12-21T09:07:23Z"},{"author":"thery","committer":"affeldt-aist","hash":"3faf423531245989dbb82b4d628ff92f07df6993","message":"update changelog","date":"2021-12-21T09:07:23Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"b3e81d72e354f018b9ad149a8a9beb169e57b452","message":"remove *_group2 lemma","date":"2021-12-21T09:07:23Z"},{"author":"thery","committer":"affeldt-aist","hash":"8483da7ab2c714db9e2eda2f39239b4033605013","message":"fixes and simplification\n\n- simplify proofs using is_derive_0_cst\n- renaming rcfE -> fctE\n- remove [arguments]","date":"2021-12-21T09:07:23Z"},{"author":"thery","committer":"affeldt-aist","hash":"3c332e752220b9983e35d331a06f9bdd528bf6f1","message":"introduction of formal series\n\n- update comment in exp.v\n- minor fixes (missing nl, in trigo.v)\n- more pseries","date":"2021-12-21T09:07:23Z"},{"author":"thery","committer":"affeldt-aist","hash":"d64c4b62c28d2e0dc944015412881dc82fc7963f","message":"fix is_derive automation\n\n- fix is_derive resolution\n- more precise pattern for Hint","date":"2021-12-21T09:07:23Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"4fc2788453fd1ad5505268d3410bfea32529baef","message":"fixes\n\n- formatting, documentation, changelog, rebase","date":"2021-12-22T07:26:58Z"},{"author":"thery","committer":"thery","hash":"fec79498b999d009f2a5a669b57f2710d4a1d2bc","message":"some cleaning","date":"2021-12-22T11:20:02Z"}]},{"author":"affeldt-aist","number":381,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":3,"deletions":2},{"file":"theories/normedtype.v","status":"M","additions":3,"deletions":2}],"state":"merged","open_date":"2021-05-21T15:14:53Z","update_date":"2021-06-01T07:34:47Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"c6cc36f63b55e1810fac1c33af6bdc1cf94bf6e0","message":"minor generalization","date":"2021-05-21T15:14:31Z"}]},{"author":"affeldt-aist","number":380,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":173,"deletions":20},{"file":"theories/sequences.v","status":"M","additions":173,"deletions":20}],"state":"merged","open_date":"2021-05-14T11:21:51Z","update_date":"2021-06-01T08:50:06Z","discussion":[{"author":"affeldt-aist","date":"2021-05-27T10:54:52Z","comment":"I take the opportunity of this conversation to ask a related question. Given the exponential function defined as:\r\n```\r\nDefinition exp (x : R) : R := lim (series (exp_coeff x)).\r\n```\r\nHow to define the natural logarithm? What is better than the following?\r\n```\r\nDefinition ln (R : realType) (x : R) :=\r\n  if pselect (exists y, exp y = x) is left e then projT1 (cid e) else 0.\r\n```\r\n@CohenCyril "},{"author":"affeldt-aist","date":"2021-05-30T04:42:54Z","comment":"Is it ok to merge this as it is for 0.3.8 and come back to it later? @CohenCyril @thery "}],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"82b5657192bf926aa114502f58247222df69a7e7","message":"convergence of exponential series","date":"2021-06-01T08:37:31Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"0b07491d0fe728cbc4305187e88a74d371e9c1bc","message":"commit by Laurent Thery\n\nCo-Authored-By: thery <Laurent.Thery@inria.fr>","date":"2021-06-01T08:37:31Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"a3943bc8d8e9d94f9c52bda57d0799e604ccf0cf","message":"add `expR` definition and update documentation\n\nCo-Authored-By: thery <Laurent.Thery@inria.fr>","date":"2021-06-01T08:37:31Z"}]},{"author":"affeldt-aist","number":379,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":3,"deletions":1},{"file":"theories/forms.v","status":"M","additions":3,"deletions":1}],"state":"merged","open_date":"2021-05-11T07:26:30Z","update_date":"2021-06-01T08:50:23Z","discussion":[{"author":"affeldt-aist","date":"2021-05-21T15:13:54Z","comment":"oops, I pushed by mistake to master https://github.com/math-comp/analysis/commit/bdf276666be6679a9f6cc0842961d2e15fa7694c which corresponds to one commit of this PR,\r\nI think it is harmless because it is just removal of duplicated things and git will just skip the patch when merging"},{"author":"affeldt-aist","date":"2021-05-28T10:29:23Z","comment":"This is really just to avoid a clash in coq-robot @CohenCyril "},{"author":"CohenCyril","date":"2021-05-28T10:45:32Z","comment":"OK. Can you rename it to `symmetric_form` instead?"}],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"27021cf76669acdbd6c8fb566355c672fedf783c","message":"to avoid clash with ssrbool.symmetric","date":"2021-06-01T08:38:31Z"}]},{"author":"affeldt-aist","number":378,"diff_summary":[{"file":"_CoqProject","status":"A","additions":483,"deletions":0},{"file":"theories/integral.v","status":"A","additions":483,"deletions":0}],"state":"closed","open_date":"2021-05-09T09:45:31Z","update_date":"2022-02-09T09:15:09Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"87c9778d45f43740b980eaa0fe29d0fe9590e661","message":"sketch of integration theory\n\n- written with the members during mathcomp-analysis-dev meetings","date":"2021-10-27T13:20:51Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"d2a6514f50d8ec0d3f9e4f8e116f89078af04529","message":"theory of funepos, funeneg, fer\n\n- original commit circa last quarter 2020\n\nCo-authored-by: Cyril Cohen <cohen@crans.org>","date":"2021-10-27T13:20:51Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"356c5f06f2719bd937275f1869dcc408523f9d5a","message":"update wrt master","date":"2021-10-27T13:26:18Z"}]},{"author":"affeldt-aist","number":377,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":12,"deletions":5},{"file":"theories/measure.v","status":"M","additions":12,"deletions":5}],"state":"merged","open_date":"2021-05-07T09:53:59Z","update_date":"2021-05-12T03:01:19Z","discussion":[],"review_discussion":[{"author":"CohenCyril","file":"theories/measure.v","date":"2021-05-07T18:28:40Z","comment":"`measure_is_complete` would be better so that we can reserve `complete_measure` for the canonical structure of complete measure"}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"ad5ebae2419d8671bf440f9da40517d196dd066d","message":"add and use `measure_is_complete`\n\n- from the `integral_sketch` branch","date":"2021-05-12T02:01:08Z"}]},{"author":"affeldt-aist","number":376,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":33,"deletions":22},{"file":"theories/reals.v","status":"M","additions":33,"deletions":22}],"state":"merged","open_date":"2021-05-06T10:13:40Z","update_date":"2021-06-01T07:31:17Z","discussion":[],"review_discussion":[{"author":"CohenCyril","file":"theories/reals.v","date":"2021-05-17T11:58:52Z","comment":"`le_floor`"},{"author":"CohenCyril","file":"theories/reals.v","date":"2021-05-17T11:59:05Z","comment":"`le_ceil`"},{"author":"CohenCyril","file":"theories/reals.v","date":"2021-05-17T11:59:26Z","comment":"Should be: `ceil_ge`"},{"author":"CohenCyril","file":"theories/reals.v","date":"2021-05-17T12:00:28Z","comment":"And I guess it should come before `ceil_ge0` so that it could use it."}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"37887e3455878e474a746ca3c04c2c5ec9619f47","message":"missing lemmas about floor and ceil","date":"2021-05-18T10:25:18Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"d14d5fb839708d76612c59a666910e87800f395a","message":"naming convention","date":"2021-05-18T10:25:18Z"}]},{"author":"proux01","number":375,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":372,"deletions":13},{"file":"theories/ereal.v","status":"M","additions":372,"deletions":13},{"file":"theories/lebesgue_integral.v","status":"M","additions":372,"deletions":13},{"file":"theories/lebesgue_measure.v","status":"M","additions":372,"deletions":13},{"file":"theories/measure.v","status":"M","additions":372,"deletions":13},{"file":"theories/sequences.v","status":"M","additions":372,"deletions":13}],"state":"merged","open_date":"2021-05-04T15:19:17Z","update_date":"2022-03-22T15:43:25Z","discussion":[{"author":"CohenCyril","date":"2021-05-04T15:32:56Z","comment":"I have a version, in one of my workdirs that is supposed to cover everything (non negative, negative, positive, non positive, extended or not, symmetric on multiplication). I just did not have time to finish it :'(\r\nMeanwhile, I do not mind having several copies."},{"author":"CohenCyril","date":"2022-01-09T18:14:45Z","comment":"> I have a version, in one of my workdirs that is supposed to cover everything (non negative, negative, positive, non positive, extended or not, symmetric on multiplication). I just did not have time to finish it :'(\r\n> Meanwhile, I do not mind having several copies.\r\n\r\ncf #511 "},{"author":"proux01","date":"2022-01-11T12:31:30Z","comment":"Thanks, I'll rebase on top of it."},{"author":"CohenCyril","date":"2022-01-11T15:37:29Z","comment":"> Thanks, I'll rebase on top of it.\r\n\r\nDo you understand how to do it with minimal duplication?\r\nDo you want to chat for a few minutes?"},{"author":"proux01","date":"2022-01-11T15:44:57Z","comment":"I hope so. I'll ask if I run into trouble (but if I understand correctly, that should mostly be a few canonical instances and a spec inductive with two cases (+oo or non negative real))."},{"author":"CohenCyril","date":"2022-01-11T16:09:56Z","comment":"> I hope so. I'll ask if I run into trouble (but if I understand correctly, that should mostly be a few canonical instances and a spec inductive with two cases (+oo or non negative real)).\r\n\r\nI expect that most (if not all) `*_(nonzero|reality)_subdef` can be reused as such and that their should be exactly one `operator_snum_subproof` to add and the corresponding canonical, per new supported operation (`0`, `1`, `+oo`, `-oo`, negation, addition, multiplication, etc)."},{"author":"CohenCyril","date":"2022-01-11T16:10:33Z","comment":"> spec inductive with two cases (+oo or non negative real)).\r\n\r\nI do not understand this bit..."},{"author":"proux01","date":"2022-01-11T16:21:16Z","comment":"> > spec inductive with two cases (+oo or non negative real)).\r\n> \r\n> I do not understand this bit...\r\n\r\nSomething similar to nonneg_spec in #511"},{"author":"proux01","date":"2022-03-05T18:51:59Z","comment":"Rebased and ready for review (this is mostly a bunch of canonical instances)."}],"review_discussion":[],"tags":[],"commits":[{"author":"proux01","committer":"proux01","hash":"7349fb7b05a542a1c7ca9cf8415b55668358cccd","message":"Add signed instances to ereal","date":"2022-03-22T15:08:46Z"},{"author":"affeldt-aist","committer":"proux01","hash":"0639a95eb2fa46fd7f9e5ae1c018a9f2b04b9522","message":"reduce numbers of warning","date":"2022-03-22T15:19:49Z"}]},{"author":"proux01","number":374,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":792,"deletions":4},{"file":"theories/ereal.v","status":"M","additions":792,"deletions":4}],"state":"merged","open_date":"2021-05-04T15:14:43Z","update_date":"2021-11-04T17:53:14Z","discussion":[{"author":"CohenCyril","date":"2021-05-04T15:21:41Z","comment":"I'd rather keep extended reals a commutative monoid (which was the case before this PR), this is crucial for taking maximal advantage of bigops."},{"author":"proux01","date":"2021-05-04T15:22:45Z","comment":"I fully agree, this PR doesn't change anything about extended reals, just offers dual extended reals where -oo++oo = +oo instead of -oo."},{"author":"CohenCyril","date":"2021-05-04T15:30:12Z","comment":"Sorry, I misunderstood your original post and did not open the diff. It seems reasonable to me although:\r\n- I cannot foresee a use yet (could you point me towards a concrete example)\r\n- I would not integrate this within the same scope and same names. We could use for example `%dE` (for \"dual Extended\") an the names could be prefixed with `dual_`?\r\n"},{"author":"CohenCyril","date":"2021-05-04T15:31:03Z","comment":"Also, I would integrate it within `ereal.v`"},{"author":"proux01","date":"2021-05-04T16:11:54Z","comment":"> * I cannot foresee a use yet (could you point me towards a concrete example)\r\n\r\nWe use it in a formalization of Network Calculus (a static analysis for networks, used to certify embedded networks in civil aircrafts) that is based on min-plus algebra. Sorry, can't share the code yet due to licencing issues (hope to finally fix that in the coming weeks).\r\n\r\n> * I would not integrate this within the same scope and same names. We could use for example `%dE` (for \"dual Extended\") an the names could be prefixed with `dual_`?\r\n\r\nWould indeed make sense to enable mix use of both regular and dual versions (no idea if that can arise though).\r\n"},{"author":"CohenCyril","date":"2021-05-04T16:21:50Z","comment":"> Would indeed make sense to enable mix use of both regular and dual versions (no idea if that can arise though).\r\n\r\nI think it can... and I forgot about providing correspondance lemmas under the negation `add_undef` precondition.\r\n(Although we might very well switch to `add_def` as per #365)"},{"author":"proux01","date":"2021-05-06T15:15:52Z","comment":"@CohenCyril all your comments should be taken into account."},{"author":"proux01","date":"2021-08-13T11:02:12Z","comment":"This is rebased on top of #403, `dual_mule` disappeared since it is now the same as `mule`."},{"author":"proux01","date":"2021-09-28T08:41:03Z","comment":"Just rebased this on top of master now that #403 is merged."},{"author":"proux01","date":"2021-09-29T14:40:42Z","comment":"@CohenCyril all notation seem to work properly (for instance `x + y <= -(x + y))%dE` uses dual_adde as expected and prints back identically), I just spotted an omission int the bigop notations and `+?` was missing in `ereal_dual_scope`. "},{"author":"proux01","date":"2021-10-29T08:57:03Z","comment":"@CohenCyril I'd like to rebase this on top of #459 once it is merged (to add lemmas about mine, the dual of maxe)"},{"author":"CohenCyril","date":"2021-10-29T23:27:34Z","comment":"> @CohenCyril I'd like to rebase this on top of #459 once it is merged (to add lemmas about mine, the dual of maxe)\r\n\r\nSure. I also think that the new convention is to use `forall x : \\bar R, x \\in fin_num -> P x` rather than `forall r : R, P r%:E`.\r\nI also think theorems about dual ereal should be encapsulated in a submodule and imported on demand."},{"author":"proux01","date":"2021-11-02T16:11:01Z","comment":"Indeed, done, this should now be ready.\r\n\r\nBTW, this dual add thing is used there: https://gitlab.mpi-sws.org/proux/nc-coq\r\nI wanted to do opam and nix packages for CI when I realized I'm still using dioid master that relies on a nasty hack to use HB on top of current MC https://github.com/math-comp/dioid/blob/master/HB_wrappers.v . So I should probably wait for MC 2.0."},{"author":"proux01","date":"2021-11-04T17:06:33Z","comment":"rebased"},{"author":"proux01","date":"2021-11-05T07:42:48Z","comment":"Thanks!"}],"review_discussion":[{"author":"CohenCyril","file":"theories/ereal.v","date":"2021-05-05T16:33:44Z","comment":"Notations in the `ereal_dual_scope`  must not take precedence, they should be declared before their `ereal_scope` counterpart. Moreover, I do not see the point unless the variables of the notations are \"rescoped\" inside `ereal_dual_scope`. I'm also tempted to suggest one definies an alias `dual_ereal := ereal` and uses `Bind Scope` on this type to make sure arguments are correctly scoped."},{"author":"CohenCyril","file":"theories/ereal.v","date":"2021-05-05T16:34:09Z","comment":"For the operators, I'd use a longer name, like `dual_adde`"},{"author":"CohenCyril","file":"theories/ereal.v","date":"2021-05-05T16:35:03Z","comment":"I do not understand this one, it should a minima be declared before the other one, so as not to take precedence... But I'm not sure how useful this can be..."},{"author":"CohenCyril","file":"theories/ereal.v","date":"2021-05-05T16:35:24Z","comment":"swap not to take precedence, and make sure `x` is correctly scoped"},{"author":"CohenCyril","file":"theories/ereal.v","date":"2021-05-05T16:36:09Z","comment":"One should make sure `x` and `y` are correctly scoped (same for multiplication etc.)"},{"author":"CohenCyril","file":"theories/ereal.v","date":"2021-05-05T16:41:42Z","comment":"Missing two compatibility lemmas :\r\n```\r\nLemma dual_addeE (x y : \\bar R) : (x + y)%dE = - ((- x) + (- y))%E.\r\nLemma dual_sumeE I (r : seq I) (P : {pred I}) (F : I -> \\bar R) : (\\sum_(i <- r | P i) F i)%dE = - (\\sum_(i <- r | P i) - F i)%E.\r\nLemma def_dual_addeE (x y : \\bar R) : ~~ add_undef x y -> (x + y)%dE = (x + y)%E.\r\n```\r\nThen in the remainder of this file, I find that interleaving ereal lemmas with dual ones clutters the code.\r\nI would put all dual lemmas in a single section and prove them all using `dual_addeE` and `dual_sumeE`"},{"author":"proux01","file":"theories/ereal.v","date":"2021-05-06T13:35:26Z","comment":"Makes sense, I had to add a few lemmas in order to prove everything by duality but that did work."},{"author":"proux01","file":"theories/ereal.v","date":"2021-05-06T13:37:25Z","comment":"Indeed quite useless, removed."},{"author":"CohenCyril","file":"theories/ereal.v","date":"2021-10-28T15:54:47Z","comment":"Shouldn't `x` and `y` be rescoped here?"},{"author":"proux01","file":"theories/ereal.v","date":"2021-10-29T08:55:52Z","comment":"Indeed, fixed"}],"tags":[],"commits":[{"author":"proux01","committer":"proux01","hash":"a9303956f538f4bea51b3d85b3f0066c81e8d00f","message":"Use Variant for non recursive inductive","date":"2021-11-04T17:00:02Z"},{"author":"proux01","committer":"proux01","hash":"bd2fd3545dace417db613a44556f93aece00275d","message":"Document multiplication in ereal.v","date":"2021-11-04T17:00:02Z"},{"author":"proux01","committer":"proux01","hash":"aa1715fb64ec5c8c7caf8acfc10282502df54194","message":"Add a few lemmas in ereal.v","date":"2021-11-04T17:39:01Z"},{"author":"proux01","committer":"proux01","hash":"87c544470925f0d6150a35155f9ac42a9119d56a","message":"Dual ereal","date":"2021-11-04T17:39:03Z"}]},{"author":"proux01","number":373,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":22,"deletions":3},{"file":"theories/ereal.v","status":"M","additions":22,"deletions":3}],"state":"merged","open_date":"2021-05-04T14:58:12Z","update_date":"2021-05-04T16:31:25Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"proux01","committer":"proux01","hash":"35ca1a4a560551ad34899703378c9cfc6453e99a","message":"ereal_sup_ninfty reverse also holds","date":"2021-05-04T14:55:42Z"},{"author":"proux01","committer":"proux01","hash":"e286cbd9895e38f51202e65889e84dc39e55a88f","message":"Convenient lemmas about ereal_sup/inf","date":"2021-05-04T14:55:42Z"}]},{"author":"proux01","number":372,"diff_summary":[{"file":"theories/nngnum.v","status":"M","additions":4,"deletions":4},{"file":"theories/posnum.v","status":"M","additions":4,"deletions":4}],"state":"merged","open_date":"2021-05-04T14:24:01Z","update_date":"2021-05-04T15:05:57Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"proux01","committer":"proux01","hash":"ced483a6837a0d37cc597826578b3e2fb3cb9b87","message":"Fix level of notations like %:pos\n\nPrint 0%:pos or x%:pos instead of (0)%:pos or (x)%:pos.\nThis takes inspiration from %:R and the likes in MathComp.","date":"2021-05-04T14:14:11Z"}]},{"author":"affeldt-aist","number":371,"diff_summary":[{"file":".github/workflows/nix-action-8.13.yml","status":"A","additions":16939,"deletions":2544},{"file":".github/workflows/nix-action-master.yml","status":"A","additions":16939,"deletions":2544},{"file":".nix/config.nix","status":"A","additions":16939,"deletions":2544},{"file":"CHANGELOG_UNRELEASED.md","status":"A","additions":16939,"deletions":2544},{"file":"_CoqProject","status":"A","additions":16939,"deletions":2544},{"file":"coq-mathcomp-analysis.opam","status":"A","additions":16939,"deletions":2544},{"file":"theories/altreals/distr.v","status":"A","additions":16939,"deletions":2544},{"file":"theories/altreals/realseq.v","status":"A","additions":16939,"deletions":2544},{"file":"theories/altreals/realsum.v","status":"A","additions":16939,"deletions":2544},{"file":"theories/boolp.v","status":"A","additions":16939,"deletions":2544},{"file":"theories/cardinality.v","status":"A","additions":16939,"deletions":2544},{"file":"theories/classical_sets.v","status":"A","additions":16939,"deletions":2544},{"file":"theories/csum.v","status":"A","additions":16939,"deletions":2544},{"file":"theories/ereal.v","status":"A","additions":16939,"deletions":2544},{"file":"theories/fsbigop.v","status":"A","additions":16939,"deletions":2544},{"file":"theories/functions.v","status":"A","additions":16939,"deletions":2544},{"file":"theories/lebesgue_integral.v","status":"A","additions":16939,"deletions":2544},{"file":"theories/lebesgue_measure.v","status":"A","additions":16939,"deletions":2544},{"file":"theories/mathcomp_extra.v","status":"A","additions":16939,"deletions":2544},{"file":"theories/measure.v","status":"A","additions":16939,"deletions":2544},{"file":"theories/normedtype.v","status":"A","additions":16939,"deletions":2544},{"file":"theories/realfun.v","status":"A","additions":16939,"deletions":2544},{"file":"theories/reals.v","status":"A","additions":16939,"deletions":2544},{"file":"theories/sequences.v","status":"A","additions":16939,"deletions":2544},{"file":"theories/set_interval.v","status":"A","additions":16939,"deletions":2544},{"file":"theories/topology.v","status":"A","additions":16939,"deletions":2544}],"state":"closed","open_date":"2021-05-03T15:48:36Z","update_date":"2022-02-26T14:14:49Z","discussion":[{"author":"pi8027","date":"2021-05-26T05:40:49Z","comment":"Here is a patch I propose (context: https://github.com/math-comp/math-comp/pull/732#discussion_r639371183):\r\n```patch\r\nFrom 46158eb46e2ab033884151726c6dbbd9233b1e24 Mon Sep 17 00:00:00 2001\r\nFrom: Kazuhiko Sakaguchi <pi8027@gmail.com>\r\nDate: Wed, 26 May 2021 14:37:16 +0900\r\nSubject: [PATCH] normrzE\r\n\r\n---\r\n theories/measure_wip.v | 29 +++++++++++------------------\r\n 1 file changed, 11 insertions(+), 18 deletions(-)\r\n\r\ndiff --git a/theories/measure_wip.v b/theories/measure_wip.v\r\nindex 5f94173..e7e507f 100644\r\n--- a/theories/measure_wip.v\r\n+++ b/theories/measure_wip.v\r\n@@ -63,17 +63,8 @@ Definition uncurry {A B C:Type} (f:A -> B -> C)\r\n   (p:A * B) : C := match p with (x, y) => f x y end.\r\n \r\n (* NB: PR to MathComp in progress *)\r\n-Lemma gez0_norm (R : numDomainType) (i : int) : 0 <= i -> `|i|%:R = i%:~R :> R.\r\n-Proof. by move/gez0_abs => <-. Qed.\r\n-\r\n-Lemma gtz0_norm (R : numDomainType) (i : int) : 0 < i -> `|i|%:R = i%:~R :> R.\r\n-Proof. by move/gtz0_abs => <-. Qed.\r\n-\r\n-Lemma ltz0_norm (R : numDomainType) (i : int) : i < 0 -> `|i|%:R = - i%:~R :> R.\r\n-Proof.\r\n-move/ltz0_abs/eqP; rewrite -eqr_oppLR => /eqP <-.\r\n-by rewrite abszN absz_id mulrNz opprK.\r\n-Qed.\r\n+Lemma normrzE (R : numDomainType) i : `|i|%:R = `|i|%:~R :> R.\r\n+Proof. by rewrite -abszE. Qed.\r\n (* END NB: PR to MathComp in progress *)\r\n \r\n Section eseries.\r\n@@ -3570,10 +3561,11 @@ exists (set_of_itv \\o ccitv).\r\n   rewrite predeqE => /= r; split => // _; have [r0|r0] := leP 0 r.\r\n   - exists (absz (ceil r)) => //; apply/set_of_itv_mem.\r\n     rewrite itv_boundlr/= 2!lte_bnd (le_trans _ r0)/= ?oppr_le0 ?ler0n//.\r\n-    by rewrite gez0_norm ?ceil_ge0 // ler_ceil.\r\n+    by rewrite normrzE ger0_norm ?ceil_ge0 // ler_ceil.\r\n   - exists (absz (floor r)) => //; apply/set_of_itv_mem.\r\n     rewrite itv_boundlr /= 2!lte_bnd (le_trans (ltW r0)) ?ler0n// andbT.\r\n-    by rewrite ler_oppl ltz0_norm ?floor_lt0// ler_oppl opprK ler_floor.\r\n+    rewrite ler_oppl normrzE ltr0_norm ?floor_lt0//.\r\n+    by rewrite mulrNz ler_opp2 ler_floor.\r\n move=> n; split.\r\n   by exists [fset (ccitv n)]%fset; rewrite ssetE /= big_seq_fset1.\r\n by rewrite length_itv hlength_itv /=; case: ifPn; rewrite lte_pinfty.\r\n@@ -3965,7 +3957,8 @@ have len_iIN_dvg : forall M, M > 0 -> exists N, (N >= 1)%N /\\ (M%:E < length (iI\r\n     have ? : (0 < `|ceil M|)%N by rewrite absz_gt0 gt_eqF // ceil_gt0.\r\n     exists `|ceil M|%N; split=> //; rewrite /iIN ioo set_of_itvE setTI.\r\n     rewrite length_ccitv lte_fin (le_lt_trans (ler_ceil _)) //.\r\n-    by rewrite -gtz0_norm ?ceil_gt0// ltr_nat -addnn -ltn_subLR // subnn.\r\n+    rewrite -[c in c%:~R]gtr0_norm ?ceil_gt0//.\r\n+    by rewrite -normrzE ltr_nat -addnn -add1n leq_add2r.\r\n   rewrite /iIN.\r\n   wlog : i {ij iIN} b r {iroo} / i = Interval -oo%O (BSide b r).\r\n     move=> h; move: iroo => [->|iroo]; first exact: h.\r\n@@ -3978,7 +3971,7 @@ have len_iIN_dvg : forall M, M > 0 -> exists N, (N >= 1)%N /\\ (M%:E < length (iI\r\n     rewrite ltr_oppl opprK.\r\n     case: ifPn => [rrM|].\r\n       rewrite meet_l ?(le_trans r0) // lte_fin mulrSr.\r\n-      rewrite gez0_norm ?ceil_ge0// ?(addr_ge0 _ (ltW _))//.\r\n+      rewrite normrzE ger0_norm ?ceil_ge0// ?(addr_ge0 _ (ltW _))//.\r\n       rewrite -ltr_subl_addl (@le_lt_trans _ _ (`|r| + M)) // ?ler_addr//.\r\n         by rewrite ler0_norm // addrC.\r\n       rewrite (@lt_le_trans _ _ (`|r| + M + 1)) // ?ltr_addl // ler_add2r.\r\n@@ -3986,7 +3979,7 @@ have len_iIN_dvg : forall M, M > 0 -> exists N, (N >= 1)%N /\\ (M%:E < length (iI\r\n     move=> /negP; apply: absurd.\r\n     rewrite -(ler0_norm r0) mulrSr ltr_spaddr //.\r\n     rewrite (@le_trans _ _ (`|r| + M)) // ?ler_addl //; first exact/ltW.\r\n-    by rewrite gez0_norm ?ceil_ge0// ?(addr_ge0 _ (ltW _))// ler_ceil.\r\n+    by rewrite normrzE (ger0_norm (ceil_ge0 _)) ?addr_ge0 ?ler_ceil // ltW.\r\n   have crM : (0 < `|ceil (`|r| + M)|)%N.\r\n     by rewrite absz_gt0 gt_eqF // ceil_gt0 // -(addr0 0) ler_lt_add.\r\n   exists (`|ceil (`| r | + M)|%N); split => //.\r\n@@ -3994,10 +3987,10 @@ have len_iIN_dvg : forall M, M > 0 -> exists N, (N >= 1)%N /\\ (M%:E < length (iI\r\n   rewrite opprK andbT.\r\n   case: ifPn => [_|].\r\n     rewrite meet_l; last first.\r\n-      rewrite gez0_norm ?ceil_ge0// ?(addr_ge0 _ (ltW _))// gtr0_norm//.\r\n+      rewrite normrzE ger0_norm ?ceil_ge0// ?(addr_ge0 _ (ltW _))// gtr0_norm//.\r\n       by rewrite (le_trans (ler_ceil _)) // ler_int ceil_le // ler_addl ltW.\r\n     rewrite lte_fin -{1}(add0r M) ltr_le_add //.\r\n-    rewrite gez0_norm ?ceil_ge0// ?(addr_ge0 _ (ltW _))// gtr0_norm//.\r\n+    rewrite normrzE ger0_norm ?ceil_ge0// ?(addr_ge0 _ (ltW _))// gtr0_norm//.\r\n     by rewrite (le_trans (ler_ceil _)) // ler_int ceil_le // ler_addr ltW.\r\n   move/negP; apply: absurd.\r\n   rewrite -(@ltr_nat R) in crM.\r\n-- \r\n2.20.1\r\n```"},{"author":"affeldt-aist","date":"2021-05-26T10:01:15Z","comment":"@pi8027 I have replayed the proofs in the spirit of your patch. Maybe that's good enough with only one lemma.\r\nI modify the mathcomp PR accordingly. Thanks for your time!"}],"review_discussion":[{"author":"CohenCyril","file":"theories/lebesgue_measure.v","date":"2021-09-22T09:20:51Z","comment":"Isn't it ``open_itvoo : open `]a, b[%classic``?"}],"tags":[],"commits":[{"author":"CohenCyril","committer":"affeldt-aist","hash":"2441096ac42524b72c65ddb11a4dc859eab2c5c6","message":"lebesgue measure and integral","date":"2022-02-09T09:05:06Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"f0b5c2e5e80c28dca70bfe3f15218d38c0d942cf","message":"Update nix-shell and require 8.14 <= Coq < master","date":"2022-02-09T14:30:00Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"18a3c6d315ffd425e13e6e9c19fce5e90f275d43","message":"Simplifications in SetRing","date":"2022-02-10T23:41:41Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"0a9dc631b8977643a2582bd3edcb1610ad24f22d","message":"changelog for existing files\n\n- does not cover new files\n  + `mathcomp_extra.v`\n  + `fsbigop.v`\n  + `set_interval.v`\n  + `lebesgue_measure.v`\n  + `lebesgue_integral.v`\n  + `functions`","date":"2022-02-13T07:01:49Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"acda50a1605da6b8abc818d6aafb3995fcb871bd","message":"more changelog\n\n- for `functions.v`, `mathcomp_extra.v`, `fsbig.v`","date":"2022-02-14T08:17:31Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"d55f5e9e9a8a76f799ada652d34e9fee96281e8c","message":"changelog for set_interval.v","date":"2022-02-14T08:46:00Z"}]},{"author":"affeldt-aist","number":370,"diff_summary":[{"file":"theories/sequences.v","status":"M","additions":5,"deletions":5}],"state":"merged","open_date":"2021-04-30T09:06:58Z","update_date":"2021-05-04T16:28:46Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"372b568d157edf273b4a9d932aa291a7370b2b5e","message":"minor generalization","date":"2021-04-30T09:06:29Z"}]},{"author":"affeldt-aist","number":369,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":10,"deletions":85},{"file":"theories/ereal.v","status":"M","additions":10,"deletions":85},{"file":"theories/topology.v","status":"M","additions":10,"deletions":85}],"state":"merged","open_date":"2021-04-30T02:44:39Z","update_date":"2021-05-05T10:08:57Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"972ebf960d6baf858e5bdace2d070839c68439ee","message":"remove lemmas that made their way in MathComp","date":"2021-05-05T09:54:34Z"}]},{"author":"affeldt-aist","number":367,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":489,"deletions":470},{"file":"theories/altreals/distr.v","status":"M","additions":489,"deletions":470},{"file":"theories/altreals/realseq.v","status":"M","additions":489,"deletions":470},{"file":"theories/altreals/realsum.v","status":"M","additions":489,"deletions":470},{"file":"theories/csum.v","status":"M","additions":489,"deletions":470},{"file":"theories/ereal.v","status":"M","additions":489,"deletions":470},{"file":"theories/measure.v","status":"M","additions":489,"deletions":470},{"file":"theories/normedtype.v","status":"M","additions":489,"deletions":470},{"file":"theories/sequences.v","status":"M","additions":489,"deletions":470},{"file":"theories/topology.v","status":"M","additions":489,"deletions":470}],"state":"merged","open_date":"2021-04-26T04:43:23Z","update_date":"2021-05-06T08:24:06Z","discussion":[{"author":"CohenCyril","date":"2021-05-04T15:33:59Z","comment":"I prefer `\\bar R` much more"},{"author":"CohenCyril","date":"2021-05-05T10:07:51Z","comment":"BTW, `er` does not make sense, it is so short we should use it instead of `\\bar` but it is utterly uninformative.\r\nI think it should be renamed `extended` or `with_infinities`.\r\n"}],"review_discussion":[{"author":"CohenCyril","file":"theories/ereal.v","date":"2021-04-26T20:37:15Z","comment":"Never ever do a string notation without guarding it with symbols or you will turn the string into a keyword..."},{"author":"CohenCyril","file":"theories/ereal.v","date":"2021-04-26T20:38:33Z","comment":"moreover if there was a scope to put, it should be `type_scope`.\r\n"}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"4f509952a18d77052832e30c196d7368eb275abf","message":"change notation `{ereal R}` to `\\bar R`","date":"2021-05-06T00:59:18Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"99d2fa66214cbd3596b5653dc46c4f8debf22c73","message":"rename `er` to `extended`\n\n- and related renamings","date":"2021-05-06T00:59:18Z"}]},{"author":"affeldt-aist","number":366,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":160,"deletions":152},{"file":"theories/csum.v","status":"M","additions":160,"deletions":152},{"file":"theories/ereal.v","status":"M","additions":160,"deletions":152},{"file":"theories/measure.v","status":"M","additions":160,"deletions":152},{"file":"theories/normedtype.v","status":"M","additions":160,"deletions":152},{"file":"theories/sequences.v","status":"M","additions":160,"deletions":152}],"state":"merged","open_date":"2021-04-02T09:27:05Z","update_date":"2021-05-17T12:16:27Z","discussion":[{"author":"CohenCyril","date":"2021-05-04T16:30:21Z","comment":"Great! Can you also take this opportunity to add `0%E` and `1%E` as definitions for `0%R%:E` and `1%R%:E`?"}],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"103aaa01b9def48343321f29871f68740e0f8eb9","message":"change the use of scopes in ereal notations\n\n- to reduce nested `%E`/`%R` in `integral_sketch` in particular","date":"2021-05-14T11:55:43Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"5252e24b839c8781ae510c63cb69041d741ef91d","message":"add notations for 0 and 1 in ereal_scope","date":"2021-05-14T13:27:43Z"}]},{"author":"affeldt-aist","number":364,"diff_summary":[{"file":"CHANGELOG.md","status":"M","additions":103,"deletions":97},{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":103,"deletions":97},{"file":"INSTALL.md","status":"M","additions":103,"deletions":97}],"state":"merged","open_date":"2021-04-01T11:07:00Z","update_date":"2021-04-01T14:22:39Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"633373dab8043425dea7473cc19ff858d56bc668","message":"changelog for version 0.3.7","date":"2021-04-01T11:06:09Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"5fa6a1e7e94fca17ad8f565934674581c9d90661","message":"bump version in install.md","date":"2021-04-01T11:09:21Z"}]},{"author":"CohenCyril","number":363,"diff_summary":[{"file":"theories/measure.v","status":"M","additions":0,"deletions":3}],"state":"merged","open_date":"2021-04-01T07:35:59Z","update_date":"2021-04-01T07:52:26Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"CohenCyril","committer":"CohenCyril","hash":"4bb0b17cb5e02f061f6c227cea2f3fcc76621d2f","message":"Remove measurableT which is already defined","date":"2021-04-01T07:35:20Z"}]},{"author":"proux01","number":362,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":13,"deletions":13},{"file":"theories/classical_sets.v","status":"M","additions":13,"deletions":13}],"state":"merged","open_date":"2021-03-31T13:18:59Z","update_date":"2021-05-04T16:29:08Z","discussion":[{"author":"CohenCyril","date":"2021-03-31T13:24:13Z","comment":"I'm afraid this is too agressive, one has to check that `[set f x | x in A]` is not systematically printed `(fun x => f x) `@ A`"},{"author":"proux01","date":"2021-03-31T13:37:56Z","comment":"> I'm afraid this is too agressive, one has to check that `[set f x | x in A]` is not systematically printed `(fun x => f x) `@ A`\r\n\r\nThe notation is declared `only parsing` (I just move this in the `Reserved Notation` for uniformity)."},{"author":"proux01","date":"2021-05-04T15:04:01Z","comment":"@CohenCyril are you expecting anything from me here?"},{"author":"CohenCyril","date":"2021-05-04T15:38:22Z","comment":"> @CohenCyril are you expecting anything from me here?\r\n\r\nSorry, I forgot about this. I think the direct image refactoring is ok. I'm not convinced the preimage definition should be removed though... And it needs a rebase."},{"author":"proux01","date":"2021-05-04T16:07:34Z","comment":"Me neither now that you point it, so let's forgot about it for now.\r\nRebased."},{"author":"affeldt-aist","date":"2021-06-08T04:29:39Z","comment":"This change seems to cause problems for infotheo:\r\nhttps://github.com/affeldt-aist/infotheo/pull/60/commits/2c15a31dd368b739d3c35a74ca4093dd2362c508\r\nYou can observe the need to insert coercions and also scripts that break because of uncontrolled simplification.\r\nWhat are the advantages of having made `image` a notation?\r\n\r\n"},{"author":"proux01","date":"2021-06-08T06:22:56Z","comment":"The ability to rewrite `image_comp`, c.f. https://github.com/math-comp/analysis/pull/360#discussion_r604738035"},{"author":"affeldt-aist","date":"2021-06-08T06:47:28Z","comment":"We used to be able to rewrite `image_comp`, some of these proofs are now failing. :-/"},{"author":"affeldt-aist","date":"2021-06-08T09:30:33Z","comment":"So it looks like the inconvenients outweigh the advantages, isn't it?"},{"author":"proux01","date":"2021-06-08T10:26:55Z","comment":"I really don't know, rewriting image_comp on things like `[set f x | x in [set g y | y in A]]` with non trivial `f` and `g` was a real pain.\r\n\r\nHere is a commit in analysis that could avoid your coercions : https://github.com/proux01/analysis/commit/e8568c8acebcdef6cd91c806e93176fa7b74e8a9\r\nand a fix (not ideal) for infotheo : https://github.com/proux01/infotheo/commit/791c3b619ca59bc473702420e6548161b9391c37\r\n\r\nIt seems that `/=` is simplifying set notations too much, making `image` a definition was stopping that but I'm not convinced it is the right fix. WDYT @CohenCyril ?"},{"author":"CohenCyril","date":"2021-06-10T06:52:11Z","comment":"Maybe a solution would be to define\r\n```coq\r\nDefinition image f A := [set y | exists2 x, A x & f x = y].\r\nArguments image f A /.\r\n```\r\nbefore the notation\r\n```coq\r\nNotation \"[ 'set' E | x 'in' A ]\" := (image (fun x => E) A) : classical_set_scope.\r\n```\r\nso that we still have the head symbol but at least it is the same everywhere."},{"author":"proux01","date":"2021-06-10T15:33:43Z","comment":"Thanks, a slight variation seems to work (c.f. #388 ) and the impact on infotheo is minimal https://github.com/proux01/infotheo/commit/19c95c315ee38561a6101b66c475e972533767eb"}],"review_discussion":[{"author":"CohenCyril","file":"theories/classical_sets.v","date":"2021-05-04T16:13:51Z","comment":"Oh and I also forgot to check that: I thought `only parsing` was useless (i.e. ignored by Coq) in `Reserved Notation` and thus it might not have the expected outcome."},{"author":"CohenCyril","file":"theories/classical_sets.v","date":"2021-05-04T16:14:15Z","comment":"Following my previous comment, it would be safer to add `only parsing` here."},{"author":"proux01","file":"theories/classical_sets.v","date":"2021-05-04T16:17:56Z","comment":"Oh, right, thanks, fixed."},{"author":"proux01","file":"theories/classical_sets.v","date":"2021-05-04T16:18:26Z","comment":"Indeed, it wasn't :("},{"author":"CohenCyril","file":"CHANGELOG_UNRELEASED.md","date":"2021-05-04T16:27:47Z","comment":"```suggestion\r\n  + definition `image` (there is no intermediate definition for the notations ``f @` A`` and `[set f x | x in A]` anymore)\r\n```"}],"tags":[],"commits":[{"author":"proux01","committer":"proux01","hash":"d264d65e4a62ce7b618d4b062b7ab7f658336702","message":"Make set image a (only parsing) notation","date":"2021-05-04T16:17:02Z"}]},{"author":"proux01","number":360,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":61,"deletions":3},{"file":"theories/classical_sets.v","status":"M","additions":61,"deletions":3},{"file":"theories/ereal.v","status":"M","additions":61,"deletions":3},{"file":"theories/nngnum.v","status":"M","additions":61,"deletions":3},{"file":"theories/posnum.v","status":"M","additions":61,"deletions":3}],"state":"merged","open_date":"2021-03-27T12:12:15Z","update_date":"2021-03-31T12:09:10Z","discussion":[{"author":"CohenCyril","date":"2021-03-29T10:21:55Z","comment":"It looks mostly good, I will take a closer look by wednesday..."},{"author":"CohenCyril","date":"2021-03-31T09:15:10Z","comment":"I think this can be merged modulo answering my comments and rebasing."},{"author":"proux01","date":"2021-03-31T11:08:08Z","comment":"Rebased, CI green"}],"review_discussion":[{"author":"affeldt-aist","file":"theories/classical_sets.v","date":"2021-03-28T05:37:37Z","comment":"Maybe a one-liner: `by move=> h; rewrite predeqE=> y; split=> [][x ? <-]; exists x=> //; rewrite h.`?"},{"author":"affeldt-aist","file":"theories/ereal.v","date":"2021-03-28T05:42:02Z","comment":"I am a bit concerned by the fact that this is the same proof as `ereal_sup_ninfty`\r\nand that is not more \"compositional\", i.e., something like that:\r\n```\r\nLemma oppE_subset (R : realType) (A B : set (er R)) :\r\n  (A `<=` B) <-> (-%E @` A `<=` -%E @` B).\r\nProof.\r\nsplit=> [AB _ [] x ? <-|AB x Ax]; first by exists x => //; exact/AB.\r\nhave /AB[y By /eqP] : (-%E @` A) (- x)%E by exists x.\r\nby rewrite eqe_opp => /eqP <-.\r\nQed.\r\n\r\nLemma eqe_oppLRP (R : numDomainType) (x y : er R) : ((- x)%E = y) <-> (x = (- y)%E).\r\nProof.\r\nsplit; first by move/eqP; rewrite eqe_oppLR => /eqP.\r\nby move=> ?; apply/eqP; rewrite eqe_oppLR; apply/eqP.\r\nQed.\r\n\r\nLemma ereal_inf_pinfty (R : realType) (S : set {ereal R}) : ereal_inf S = +oo%E -> S `<=` [set +oo%E].\r\nProof.\r\nby rewrite eqe_oppLRP oppE_subset image_set1; apply ereal_sup_ninfty.\r\nQed.\r\n```\r\n(or we can use `eqe_oppLR` but then we do not have a one-linear anymore).\r\n\r\nAren't we lacking at least `oppe_subset`?"},{"author":"affeldt-aist","file":"theories/ereal.v","date":"2021-03-28T05:48:02Z","comment":"I wonder whether we really want to add such a direct instance of `big_morph`.\r\n(As a user, knowing that `big_morph` exists, I maybe wouldn't even search\r\nfor an instance. On the other hand, one still has to search for `addERFin`...)"},{"author":"proux01","file":"theories/classical_sets.v","date":"2021-03-29T09:59:01Z","comment":"Thanks, applied."},{"author":"proux01","file":"theories/ereal.v","date":"2021-03-29T09:59:39Z","comment":"Indeed. While adding `eqe_oppLRP` I also added `eqe_oppP`."},{"author":"proux01","file":"theories/ereal.v","date":"2021-03-29T10:01:03Z","comment":"No strong opinion. I find it convenient but we could indeed as well live without it.\r\nI'll drop this commit if there is no further comment.\r\n"},{"author":"affeldt-aist","file":"theories/ereal.v","date":"2021-03-31T03:45:54Z","comment":"Could you rename it to `ereal_inf1`?\r\nDon't worry about other such renamings, some of them will be taken care of by PR #359 or/and forthcoming issue/PS. (Thanks for revealing the naming issue anyway!)"},{"author":"proux01","file":"theories/ereal.v","date":"2021-03-31T07:47:48Z","comment":"Done, I'll rebase if #359 is merged first."},{"author":"CohenCyril","file":"theories/classical_sets.v","date":"2021-03-31T09:00:20Z","comment":"```suggestion\r\nLemma eq_imagel T1 T2 (A : set T1) (f f' : T1 -> T2) :\r\n```"},{"author":"CohenCyril","file":"theories/classical_sets.v","date":"2021-03-31T09:00:39Z","comment":"This is `image_comp` why redefining it?"},{"author":"CohenCyril","file":"theories/ereal.v","date":"2021-03-31T09:01:05Z","comment":"Please keep it."},{"author":"proux01","file":"theories/classical_sets.v","date":"2021-03-31T09:21:02Z","comment":"To be able to use it in rewrite (`rewrite image_comp` doesn't work in this case unless you make `image` explicitly appears which can be painful)."},{"author":"CohenCyril","file":"theories/classical_sets.v","date":"2021-03-31T09:24:58Z","comment":"I see! I think this comes from a design problem in the library. We should probably have `image f A` be a (only parsing) notation for `[set f x | x in A]`..."},{"author":"CohenCyril","file":"theories/classical_sets.v","date":"2021-03-31T09:25:25Z","comment":"So let's keep it for now, and let's open an issue to try and fix it later."},{"author":"proux01","file":"theories/classical_sets.v","date":"2021-03-31T10:55:51Z","comment":"To be done later (see discussion just below)."}],"tags":[],"commits":[{"author":"proux01","committer":"proux01","hash":"fc11114757889c4875773d7d6f6818e514b17152","message":"Add canonical instance for inverse of non negative numbers","date":"2021-03-31T10:48:24Z"},{"author":"proux01","committer":"proux01","hash":"8cd093f953417ad17f327e719ee8f48391f3c748","message":"Add canonical instance making a nngnum from a posnum","date":"2021-03-31T10:48:24Z"},{"author":"proux01","committer":"proux01","hash":"9be1b1ca6e3199f4a5d687dd20f59ed21d1bbfd0","message":"Add lemma sumERFin","date":"2021-03-31T10:48:24Z"},{"author":"proux01","committer":"proux01","hash":"d992d0510ae2550c2835828312b52ea1a405f2c8","message":"Add lemmas ereal_inf1 and ereal_inf_pinfty","date":"2021-03-31T10:54:48Z"},{"author":"proux01","committer":"proux01","hash":"5b1451e5078d8f7ae9bb0bb468293a4b3b9ebb12","message":"Add er_map","date":"2021-03-31T10:54:48Z"},{"author":"proux01","committer":"proux01","hash":"5609037771452f8bf14f469a2d53bf487bb7d54a","message":"Add lemmas eq_set_inl and set_in_in","date":"2021-03-31T10:54:48Z"}]},{"author":"affeldt-aist","number":359,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":77,"deletions":59},{"file":"theories/classical_sets.v","status":"M","additions":77,"deletions":59},{"file":"theories/ereal.v","status":"M","additions":77,"deletions":59},{"file":"theories/normedtype.v","status":"M","additions":77,"deletions":59},{"file":"theories/reals.v","status":"M","additions":77,"deletions":59},{"file":"theories/sequences.v","status":"M","additions":77,"deletions":59}],"state":"merged","open_date":"2021-03-26T08:09:28Z","update_date":"2021-03-31T09:14:34Z","discussion":[],"review_discussion":[{"author":"CohenCyril","file":"theories/sequences.v","date":"2021-03-30T19:00:30Z","comment":"There seems to be a disparity between the conventions:\r\nhere you use lemma `ereal_sup_set1`, should it be `ereal_sup1`?"},{"author":"affeldt-aist","file":"theories/sequences.v","date":"2021-03-31T03:43:04Z","comment":"That's better. I did this renaming and closely related ones. There are more but that's maybe better to make an issue or another PR about them."}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"d3e876eec648a5827cebcdb9ba74a46ea3b099ac","message":"hull of set0","date":"2021-03-31T02:43:22Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"522c99ab4f4de44df49d7b5bff49c48a0b1cf2ef","message":"minor simplifications of proof using set1","date":"2021-03-31T02:43:22Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"b380fbb84cd4d629d0f2f4fdb93ac6130baa3690","message":"rename a few X_set{0,1} to Xi{0,1}","date":"2021-03-31T03:40:36Z"}]},{"author":"pi8027","number":358,"diff_summary":[{"file":"theories/normedtype.v","status":"M","additions":30,"deletions":72}],"state":"merged","open_date":"2021-03-26T05:46:03Z","update_date":"2021-03-26T13:47:56Z","discussion":[{"author":"pi8027","date":"2021-03-26T07:38:40Z","comment":"I found myself good at this kind of refactoring work, and it also helps me to understand existing code. So I wish to have a list of lemmas I should try to refactor when I have some time."},{"author":"pi8027","date":"2021-03-26T10:15:29Z","comment":"I replaced `Defined` with `Qed` as discussed in the meeting."}],"review_discussion":[],"tags":[],"commits":[{"author":"pi8027","committer":"pi8027","hash":"d51a9f6a4cd506e42b3aeadc15ca5248e52752bf","message":"Small cleanup","date":"2021-03-26T10:07:37Z"}]},{"author":"affeldt-aist","number":357,"diff_summary":[{"file":"theories/normedtype.v","status":"M","additions":2,"deletions":7},{"file":"theories/topology.v","status":"M","additions":2,"deletions":7}],"state":"merged","open_date":"2021-03-26T05:33:43Z","update_date":"2021-03-26T10:47:23Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"5dfd513dc6e8c38b0534a6c58d948da1c2190a57","message":"fixes #323","date":"2021-03-26T08:10:51Z"}]},{"author":"affeldt-aist","number":356,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":3,"deletions":1},{"file":"theories/classical_sets.v","status":"M","additions":3,"deletions":1}],"state":"merged","open_date":"2021-03-26T05:20:12Z","update_date":"2021-03-31T09:13:36Z","discussion":[{"author":"CohenCyril","date":"2021-03-30T18:54:36Z","comment":"Maybe we could still have a changelog entry?"}],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"8b838af6451937623d274920261e6fe9f7c07fa6","message":"order of arguments of subset_trans","date":"2021-03-31T03:48:11Z"}]},{"author":"affeldt-aist","number":355,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":251,"deletions":73},{"file":"theories/ereal.v","status":"M","additions":251,"deletions":73},{"file":"theories/measure.v","status":"M","additions":251,"deletions":73},{"file":"theories/sequences.v","status":"M","additions":251,"deletions":73}],"state":"merged","open_date":"2021-03-26T05:14:42Z","update_date":"2021-04-23T17:41:46Z","discussion":[],"review_discussion":[{"author":"CohenCyril","file":"theories/sequences.v","date":"2021-03-31T09:04:24Z","comment":"```suggestion\r\nLemma ereal_sum_lim_psum (R : realType) N (f : nat -> nat -> {ereal R}) :\r\n```"},{"author":"CohenCyril","file":"theories/sequences.v","date":"2021-03-31T09:10:43Z","comment":"```coq\r\n(lim (fun n => (\\sum_(j < n) f i j)%E)\r\n```\r\nThis deserves a notation, I would introduce:\r\n```coq\r\nNotation \"\\big [ op / idx]_ (i <oo | P n) f i :=\r\n  (lim (fun n => (\\big[op/idx]_(i < n | P) f i)%E) (...) : big_scope\".\r\nNotation \"\\big [ op / idx ]_ ( i0 <= i <oo | P n) f i :=\r\n  (lim (fun n => (\\big[op/idx]_(i0 <= i < n | P) f i)%E) (...) : big_scope\".\r\nNotation \"\\big [ op / idx ]_ ( i <oo ) f i :=\r\n  (lim (fun n => (\\big[op/idx]_(i < n) f i)%E) (...) : big_scope\".\r\nNotation \"\\big [ op / idx ]_ ( i0 <= i <oo ) f i :=\r\n  (lim (fun n => (\\big[op/idx]_(0 <= i < n) f i)%E) (...) : big_scope\".\r\n\r\nNotation \"\\sum_ ( i <oo | P n) f i       := (lim (fun n => (\\sum_(i < n | P) f i)%E) (...) : ring_scope\".\r\nNotation \"\\sum_ ( i0 <= i <oo | P n) f i := (lim (fun n => (\\sum_(i0 <= i < n | P) f i)%E) (...) : ring_scope\".\r\nNotation \"\\sum_ ( i <oo ) f i            := (lim (fun n => (\\sum_(i < n) f i)%E) (...) : ring_scope\".\r\nNotation \"\\sum_ ( i0 <= i <oo ) f i      := (lim (fun n => (\\sum_(0 <= i < n) f i)%E) (...) : ring_scope\".\r\n```"},{"author":"CohenCyril","file":"theories/sequences.v","date":"2021-03-31T09:12:54Z","comment":"And this them looks like it could be refactored by abstracting the inner sum by a non-decreasing function."},{"author":"affeldt-aist","file":"theories/sequences.v","date":"2021-04-02T10:57:04Z","comment":"> This deserves a notation, I would introduce:\r\n\r\nI put the notation but they are parsing only as of right now (they don't print).\r\nI have not yet been able to find out why but plan to investigate further soon."},{"author":"affeldt-aist","file":"theories/sequences.v","date":"2021-04-05T05:59:05Z","comment":"> I put the notation but they are parsing only as of right now (they don't print).\r\n> I have not yet been able to find out why but plan to investigate further soon.\r\n\r\nHow about introducing a `Definition` for the contents of the `Notation` so that it prints? (like `mkset`)\r\n"},{"author":"CohenCyril","file":"theories/sequences.v","date":"2021-04-05T10:00:29Z","comment":"Hey it's not needed  in order for notations to be printable you need to write explicitly all the coercions in the body of the notation declaration."},{"author":"CohenCyril","file":"theories/ereal.v","date":"2021-04-22T09:24:49Z","comment":"No `in l` version of big lemmas, ever, this requires an `eqType` and thus actually reduces generality.\r\nThis kind of things is covered by `big_seq_cond`."},{"author":"CohenCyril","file":"theories/sequences.v","date":"2021-04-22T09:28:47Z","comment":"I'm not fond of this, ... we are not going to generalize every rule to a rewrite under binders. Either you make it a local `have` of the proof where you need it, or you use `under eq_fun do rewrite big_mkord.` where needed."},{"author":"affeldt-aist","file":"theories/ereal.v","date":"2021-04-22T09:58:22Z","comment":"I forgot this one. Fixed."},{"author":"CohenCyril","file":"theories/sequences.v","date":"2021-04-23T10:16:10Z","comment":"```suggestion\r\nLemma ereal_pseries_sum_nat (R : realType) n (f : nat -> nat -> {ereal R}) :\r\n```\r\nSorry I misnamed it..."},{"author":"CohenCyril","file":"CHANGELOG_UNRELEASED.md","date":"2021-04-23T10:16:32Z","comment":"```suggestion\r\n  + lemmas `ereal_pseries_sum_nat`, `lte_lim`\r\n```"}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"c78259f970fcba3bcb9ad8a47372a66bf621b4fc","message":"lemmas about sequences of extended reals","date":"2021-04-01T15:31:51Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"a038b8fffeaae2e7ad1d8e7071f34024a89f78ef","message":"tentative \\sum_(i <oo) notations","date":"2021-04-02T05:46:43Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"4e5b731fab5ec1d1c6145b471ce87f2798ed7d2b","message":"switching to nat sums","date":"2021-04-21T11:14:25Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"226db88207e244b29f2ca116bc064c2607ffdd64","message":"fix statements/complete proofs\n\n- fix statement/complete proof of lee_sum_nneg_natl\n- fix implicits\n- about lemma `lee_sum_nneg_natl`:\n  the `/~` notation for homomorphism cannot be used\n  because it is not defined when the two relations are different","date":"2021-04-22T09:57:21Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"a695f480f85ba1eca35ea4e3a0421903c39566d8","message":"factoring out some lemmas missing from mathcomp","date":"2021-04-22T17:00:22Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"5ab002a4d2135307dfb9c54b33a1ec5387f1b81a","message":"strengthen and decompose ereal_sum_lim_psum","date":"2021-04-22T18:39:25Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"cf45ad9ee6dc81818904ee2502107f73bd6f6fcf","message":"fix changelog and compilation error","date":"2021-04-23T02:06:14Z"},{"author":"CohenCyril","committer":"web-flow","hash":"9043f9b7b879ba5aa24407eb9117e110c83dd4cd","message":"Apply suggestions from code review","date":"2021-04-23T10:16:50Z"}]},{"author":"mkerjean","number":354,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":16,"deletions":0},{"file":"theories/topology.v","status":"M","additions":16,"deletions":0}],"state":"merged","open_date":"2021-03-25T09:23:35Z","update_date":"2021-03-26T13:45:52Z","discussion":[{"author":"affeldt-aist","date":"2021-03-26T11:03:03Z","comment":"I did a rebase and amend to put email addresses to the commit message but couldn't find Theo's one. :-/"},{"author":"mkerjean","date":"2021-03-26T11:05:00Z","comment":"> I did a rebase and amend to put email addresses to the commit message but couldn't find Theo's one. :-/\r\n\r\nHis username on github is @tvignon. (https://github.com/tvignon)"},{"author":"affeldt-aist","date":"2021-03-26T11:14:07Z","comment":"> > I did a rebase and amend to put email addresses to the commit message but couldn't find Theo's one. :-/\r\n> \r\n> His username on github is @tvignon. (https://github.com/tvignon)\r\n\r\nI put `Co-Authored-By: Theo Vignon <tvignon@users.noreply.github.com>` in the commit message, that should do it.\r\n"}],"review_discussion":[{"author":"affeldt-aist","file":"theories/topology.v","date":"2021-03-25T09:31:41Z","comment":"`T -> Prop` -> `set T`?"},{"author":"CohenCyril","file":"theories/topology.v","date":"2021-03-25T22:15:56Z","comment":"```suggestion\r\nLemma denseNE (T : topologicalType) (S : set T) : ~ dense S ->\r\n  exists O, (exists x, open_nbhs x O) /\\ (O `&` S = set0).\r\n```"},{"author":"CohenCyril","file":"theories/topology.v","date":"2021-03-25T22:16:33Z","comment":"```suggestion\r\nDefinition dense (T : topologicalType) (S : set T) :=\r\n```"}],"tags":[],"commits":[{"committer":"affeldt-aist","hash":"3528f2ec015c395a5edaa3449194e8b2809f0b7b","message":"dense and denseNE\n\nCo-Authored-By: Theo Vignon <tvignon@users.noreply.github.com>\nCo-Authored-By: Reynald Affeldt <reynald.affeldt@aist.go.jp>\nCo-Authored-By: Cyril Cohen <cohen@crans.org>","date":"2021-03-26T11:12:53Z"}]},{"author":"affeldt-aist","number":353,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":324,"deletions":32},{"file":"theories/classical_sets.v","status":"M","additions":324,"deletions":32},{"file":"theories/measure.v","status":"M","additions":324,"deletions":32},{"file":"theories/sequences.v","status":"M","additions":324,"deletions":32}],"state":"merged","open_date":"2021-03-24T11:02:03Z","update_date":"2021-04-25T09:54:42Z","discussion":[{"author":"affeldt-aist","date":"2021-04-02T10:58:12Z","comment":"NB: I have rebase this PR on top of PR #355 to test the `\\sum_(_ <oo)` notations but revision is not over yet."}],"review_discussion":[{"author":"CohenCyril","file":"theories/measure.v","date":"2021-03-24T14:07:49Z","comment":"`measurables mu` should be documented instead of caratheodory_measurableType.\r\nMaybe it should be renamed `caratheodory mu` and the documentation look like this:\r\n```suggestion\r\n(* caratheodory mu := T, where mu : {outer_measure set T -> {ereal R}}        *)\r\n(*                    it is a canonical mesurableType copy of T.              *)\r\n```"},{"author":"CohenCyril","file":"theories/measure.v","date":"2021-03-24T14:09:05Z","comment":"And this one called `caratheodory_measure` instead?"},{"author":"CohenCyril","file":"theories/measure.v","date":"2021-03-24T14:09:39Z","comment":"We usually do not document theorems in headers (you can add this as a remark to the previous documentation, without giving the name of the theorem)"},{"author":"CohenCyril","file":"theories/measure.v","date":"2021-03-24T14:10:42Z","comment":"or `caratheodory_type` ?"},{"author":"CohenCyril","file":"theories/measure.v","date":"2021-03-31T09:16:57Z","comment":"I prefer the notations I suggested in #355"},{"author":"CohenCyril","file":"theories/measure.v","date":"2021-03-31T09:17:30Z","comment":"(and they should be in sequences)"},{"author":"CohenCyril","file":"theories/measure.v","date":"2021-03-31T09:19:51Z","comment":"```suggestion\r\nLet U : measurableType := [the measurableType of caratheodory_type mu].\r\n```"},{"author":"CohenCyril","file":"theories/measure.v","date":"2021-03-31T09:21:28Z","comment":"Actually do you need `U`? Can't you just use\r\n```suggestion\r\nLocal Notation U := (caratheodory_type mu).\r\n```"},{"author":"CohenCyril","file":"theories/measure.v","date":"2021-03-31T09:21:56Z","comment":"```suggestion\r\nLemma caratheodory_measure_complete (B : set U) :\r\n  caratheodory_measure.-negligible B -> mu.-measurable B.\r\n```\r\n```suggestion\r\nLemma caratheodory_measure_complete (B : set (caratheodory_type mu)) :\r\n  caratheodory_measure.-negligible B -> measurable B.\r\n```"}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"CohenCyril","hash":"19ca16f0fc1b477d6b285e52ff13eb15cb055ed6","message":"Caratheodory theorem","date":"2021-04-23T12:03:48Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"fcf287c69163d22726b33ada9ce05570cc44ad1e","message":"addressing comments","date":"2021-04-23T12:03:48Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"caea0aea9a3253b73072fe8c1c6ee35dabd65c07","message":"use new <oo notations","date":"2021-04-23T12:03:48Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"efc5776b9c32738cda3151d8b3cbbf5f5b40e0b8","message":"fix changelog","date":"2021-04-23T12:03:48Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"7fda4c12c90dd0282f77ea8cbfa2bae295104269","message":"small fixes","date":"2021-04-23T12:03:48Z"},{"author":"CohenCyril","committer":"web-flow","hash":"69ebd4b64e641ee6adb1b39d07f4e6de14a46518","message":"Update CHANGELOG_UNRELEASED.md","date":"2021-04-23T17:55:06Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"6c02a15826c820f455645892b97d736dbcf15b5f","message":"fix changelog","date":"2021-04-24T02:11:32Z"}]},{"author":"affeldt-aist","number":352,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":55,"deletions":2},{"file":"theories/classical_sets.v","status":"M","additions":55,"deletions":2}],"state":"merged","open_date":"2021-03-23T10:24:36Z","update_date":"2021-03-24T10:11:13Z","discussion":[],"review_discussion":[{"author":"CohenCyril","file":"theories/classical_sets.v","date":"2021-03-23T15:31:08Z","comment":"```suggestion\r\nLemma bigcup_nonempty P F :\r\n  (\\bigcup_(i in P) F i !=set0) <-> exists2 i, P i & F i !=set0.\r\nProof.\r\nsplit=> [[t [i Pi Fit]]|[j Dj [t Fjt]]]; last by exists t, j.\r\nby exists i => //; exists t.\r\nQed.\r\n```\r\n(preuve patchée au pifomètre)"},{"author":"CohenCyril","file":"theories/classical_sets.v","date":"2021-03-23T15:32:39Z","comment":"```suggestion\r\nLemma bigcup0 P F :\r\n```\r\n(in `big1` the convention is multiplicative so the neutral is `1`, for `cup` the neutral is `set0` so `0` makes more sense)"},{"author":"CohenCyril","file":"theories/classical_sets.v","date":"2021-03-23T15:33:01Z","comment":"```suggestion\r\nLemma bigcup0P P F :\r\n```"},{"author":"CohenCyril","file":"theories/classical_sets.v","date":"2021-03-23T15:34:17Z","comment":"```suggestion\r\nLemma eqbigcup_r P F G : (forall i, P i -> F i = G i) ->\r\n```\r\nThat would make it compatible with `under`"}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"cab331b1e31cfa7c0c7b01973b021f49c23cbb00","message":"lemmas about bigsetU\n\n- also notation about disjointness","date":"2021-03-24T03:51:05Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"2d655f0b8506b30a8974d1e9be49d42da130ac22","message":"address comments\n\nCo-Authored-By: Cyril Cohen <cohen@crans.org>","date":"2021-03-24T03:59:00Z"}]},{"author":"affeldt-aist","number":351,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":29,"deletions":14},{"file":"theories/reals.v","status":"M","additions":29,"deletions":14}],"state":"merged","open_date":"2021-03-23T04:39:54Z","update_date":"2021-03-23T15:28:18Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"9920554990b5d95bdc35be97026c2cc1bd6cafe7","message":"easy properties of floor and ceil\n\n- used in `integral_sketch`","date":"2021-03-23T04:38:56Z"}]},{"author":"affeldt-aist","number":350,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":110,"deletions":42},{"file":"theories/ereal.v","status":"M","additions":110,"deletions":42},{"file":"theories/sequences.v","status":"M","additions":110,"deletions":42}],"state":"merged","open_date":"2021-03-23T03:14:23Z","update_date":"2021-03-25T22:12:28Z","discussion":[],"review_discussion":[{"author":"CohenCyril","file":"theories/ereal.v","date":"2021-03-23T15:38:39Z","comment":"```suggestion\r\nLemma real_of_erD : {in is_real &, {morph real_of_er : x y / x + y}}.\r\n```\r\nDoes it work?"},{"author":"affeldt-aist","file":"theories/ereal.v","date":"2021-03-24T03:48:54Z","comment":"This one goes through:\r\n```\r\n{in is_real &, {morph real_of_er : x y / x + y >-> (x + y)%R}}\r\n```\r\nIts usage suggests to introduce the `... \\is real` notation as per the next commit.\r\n"},{"author":"CohenCyril","file":"theories/ereal.v","date":"2021-03-24T10:12:45Z","comment":"`real` is too overloaded... `finite` would actually be more appropriate but it is also too overloaded..."},{"author":"CohenCyril","file":"theories/ereal.v","date":"2021-03-24T10:13:15Z","comment":"`finite_num` sounds good but maybe too long... `fin_num` ?"},{"author":"affeldt-aist","file":"theories/ereal.v","date":"2021-03-24T10:17:15Z","comment":"are a notation `x \\isn't oo`?"},{"author":"CohenCyril","file":"theories/ereal.v","date":"2021-03-24T10:23:58Z","comment":"mmmh could work..."},{"author":"CohenCyril","file":"theories/ereal.v","date":"2021-03-24T10:24:44Z","comment":"but then it would result in\r\n```coq\r\n{in predC oo &, {morph real_of_er : x y / x + y >-> (x + y)%R}}\r\n```\r\nwhich is not as nice as the fully applied use..."},{"author":"CohenCyril","file":"theories/ereal.v","date":"2021-03-24T10:25:22Z","comment":"moreover we might want to have automatic inference on being finite, not being infinite..."},{"author":"CohenCyril","file":"theories/ereal.v","date":"2021-03-24T10:25:28Z","comment":"So... no"},{"author":"CohenCyril","file":"theories/ereal.v","date":"2021-03-24T14:11:55Z","comment":"In this case it should be `\\is a fin_num`"},{"author":"CohenCyril","file":"theories/ereal.v","date":"2021-03-25T08:49:34Z","comment":"```suggestion\r\nLemma fin_numE x : (x \\is a fin_num) = ((x != -oo) && (x != +oo)).\r\n```"}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"f14cbb4afe17d587f15f7d294cf28dd1305c4d66","message":"more lemmas about extended real numbers\n\n- used in `integral_sketch`","date":"2021-03-24T11:13:25Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"1da7ef5ce9521549423d497b57523dc22ef5ec04","message":"more lemmas about extended real numbers\n\n- used in `integral.v`, branch `integral_sketch`\n\nCo-Authored-By: Cyril Cohen <cohen@crans.org>","date":"2021-03-24T11:13:25Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"45cd77a406a88237746c5a768638d0ead789ecec","message":"morph and `\\is a fin_num` notations\n\nCo-Authored-By: Cyril Cohen <cohen@crans.org>","date":"2021-03-25T08:58:07Z"}]},{"author":"affeldt-aist","number":349,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":224,"deletions":186},{"file":"theories/ereal.v","status":"M","additions":224,"deletions":186}],"state":"merged","open_date":"2021-03-18T10:46:39Z","update_date":"2021-03-24T02:24:00Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"57cb9b4b4826eba6f36c780646e4118e4c3b3e13","message":"more lemmas about `ereal_ball`\n\n- isolate a few generic lemmas about `ereal_ball` from the\n  construction of entourages for extended reals","date":"2021-03-24T02:09:22Z"}]},{"author":"CohenCyril","number":347,"diff_summary":[{"file":"meta.yml","status":"M","additions":1,"deletions":3}],"state":"merged","open_date":"2021-03-17T00:45:45Z","update_date":"2021-03-17T01:15:04Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"CohenCyril","committer":"CohenCyril","hash":"035a794eb24227147b1885135f65967c4bd20d90","message":"fix meta","date":"2021-03-17T01:00:50Z"}]},{"author":"CohenCyril","number":346,"diff_summary":[{"file":".gitattributes","status":"A","additions":480,"deletions":200},{"file":".github/workflows/coq-action.yml","status":"A","additions":480,"deletions":200},{"file":".github/workflows/nix-action.yml","status":"A","additions":480,"deletions":200},{"file":".github/workflows/nix.yml","status":"A","additions":480,"deletions":200},{"file":".nix/config.nix","status":"A","additions":480,"deletions":200},{"file":".nix/coq-nix-toolbox.nix","status":"A","additions":480,"deletions":200},{"file":".nix/coq-overlays/mathcomp-analysis/default.nix","status":"A","additions":480,"deletions":200},{"file":".nix/fallback-config.nix","status":"A","additions":480,"deletions":200},{"file":".nix/nixpkgs.nix","status":"A","additions":480,"deletions":200},{"file":"README.md","status":"A","additions":480,"deletions":200},{"file":"config.nix","status":"A","additions":480,"deletions":200},{"file":"coq-nix-toolbox.nix","status":"A","additions":480,"deletions":200},{"file":"default.nix","status":"A","additions":480,"deletions":200},{"file":"index.md","status":"A","additions":480,"deletions":200},{"file":"meta.yml","status":"A","additions":480,"deletions":200},{"file":"package.nix","status":"A","additions":480,"deletions":200}],"state":"open","open_date":"2021-03-14T16:22:50Z","update_date":"2022-04-21T00:26:37Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"CohenCyril","committer":"CohenCyril","hash":"28f9d986817ad5720134be1464c736a5b2fd4580","message":"update meta.yml","date":"2021-03-17T02:05:46Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"2dc22d058f63c5824fb92c7ccc0c5d18f798e6ed","message":"update nix-config","date":"2021-03-17T02:05:46Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"2b4fa33158f0c86916137c396d3557a96419932b","message":"correct defult.nix","date":"2021-03-17T02:05:46Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"824f105e8f1dfe53b244f003362ac6133f17afec","message":"temp","date":"2021-03-17T02:05:46Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"84d0f3363bd7b81eab0c847c2aee5bd35ee8eb44","message":"generated fallback","date":"2021-03-17T02:05:46Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"ef950c98e3dff06eff98f4b03b092242e32c6c27","message":"tests","date":"2021-03-17T02:05:46Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"c0eba240419609b7be47710f0f5b3354f6d651b7","message":"fixup","date":"2021-03-17T02:05:46Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"991b9cc9ff5993db94ea7bf2c3362526474ec621","message":"up","date":"2021-03-17T02:05:46Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"ed6dee01b628d6532ab5e88b86324ad384b8bb07","message":"up","date":"2021-03-17T02:05:46Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"282825d01dea42177d32018fd8ed994c429272cb","message":"appropriate nix config","date":"2021-03-17T02:05:46Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"f71eb7b56259ea15930f5ddc8fa41b0f6e9877a2","message":"fixup","date":"2021-03-17T02:05:46Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"593e452d3df92711c8a12cf98cd15050c51803be","message":"up","date":"2021-03-17T02:05:46Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"b519e8e9b943cbc53a1efce15d33f1bf5101b91f","message":"fixes","date":"2021-03-17T02:05:46Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"1bfa07542c89ceb1100fa9b8f745fd40e5f7fda9","message":"up","date":"2021-03-17T02:05:46Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"c4acf627037ae58c8473a638f074c1c8d8a9b3bc","message":"Revert \"appropriate nix config\"\n\nThis reverts commit 77044bb66f088092d31ab558d4e91d63ba990677.","date":"2021-03-17T02:05:46Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"f4d25a1cd012d4cacd719a7ca59acc8eb28e38b0","message":"More is generated from meta","date":"2021-03-17T02:05:46Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"f853c65cf3ae8150823e0541fb706ecc244b7dd7","message":"better way of pinning the toolbox","date":"2021-03-17T02:05:46Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"ef8aca1a3a165414e704f86e425493cc12ae11fe","message":"missing file","date":"2021-03-17T02:05:46Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"110959f7655ed147aecdc47664221341fa04fec6","message":"inlining tasks","date":"2021-03-17T02:05:46Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"09a620d8c02469743a4190e05c8c3315adb9f75b","message":"remove taaks from meta for the test","date":"2021-03-17T02:05:46Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"27f99ffed503371c3c6a92ea7beead453c04fe3f","message":"fix","date":"2021-03-17T02:05:46Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"f1a0ae3fbb6a5aceb525fcf1c09e25960306cdb4","message":"fix","date":"2021-03-17T02:05:46Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"17c2ee108dbc93d088ac04fbdc92f211d9f55f0f","message":"up","date":"2021-03-17T02:05:46Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"175059b5e7c3db72886600b0a0e946c44d886ba2","message":"up","date":"2021-03-17T02:05:46Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"e662389bff2fc10a472a18372d3f95fa1d9e774c","message":"up","date":"2021-03-17T02:06:12Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"a72ac35a675101f66c7c55bbc8a8fc50746eac2b","message":"fixup","date":"2021-03-17T02:24:05Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"d9acc004d01d2aae839c033d7f302969b27f626b","message":"up","date":"2021-03-17T02:35:00Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"9ae9465a7c6e298ef763f21a512b656e26e27dfa","message":"update","date":"2021-03-17T02:37:17Z"}]},{"author":"CohenCyril","number":345,"diff_summary":[{"file":".gitattributes","status":"A","additions":337,"deletions":203},{"file":".github/workflows/coq-action.yml","status":"A","additions":337,"deletions":203},{"file":".github/workflows/nix-action.yml","status":"A","additions":337,"deletions":203},{"file":".github/workflows/nix.yml","status":"A","additions":337,"deletions":203},{"file":".nix/config.nix","status":"A","additions":337,"deletions":203},{"file":".nix/coq-nix-toolbox.nix","status":"A","additions":337,"deletions":203},{"file":".nix/coq-overlays/mathcomp-analysis/default.nix","status":"A","additions":337,"deletions":203},{"file":".nix/fallback-config.nix","status":"A","additions":337,"deletions":203},{"file":"README.md","status":"A","additions":337,"deletions":203},{"file":"config.nix","status":"A","additions":337,"deletions":203},{"file":"default.nix","status":"A","additions":337,"deletions":203},{"file":"index.md","status":"A","additions":337,"deletions":203},{"file":"meta.yml","status":"A","additions":337,"deletions":203},{"file":"package.nix","status":"A","additions":337,"deletions":203}],"state":"open","open_date":"2021-03-12T07:43:55Z","update_date":"2022-04-21T00:26:37Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"CohenCyril","committer":"CohenCyril","hash":"d1ba3356abc00c4c850192f9689b6acc3531b059","message":"update meta.yml","date":"2021-03-17T02:16:17Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"915787c5b111d6d84d475baaff080bb8edef5454","message":"update","date":"2021-03-17T02:43:07Z"}]},{"author":"affeldt-aist","number":343,"diff_summary":[{"file":".github/workflows/docker-action.yml","status":"D","additions":159,"deletions":402},{"file":".github/workflows/nix-action-8.11.yml","status":"D","additions":159,"deletions":402},{"file":".github/workflows/nix-action-8.12.yml","status":"D","additions":159,"deletions":402},{"file":".nix/config.nix","status":"D","additions":159,"deletions":402},{"file":"INSTALL.md","status":"D","additions":159,"deletions":402},{"file":"README.md","status":"D","additions":159,"deletions":402},{"file":"coq-mathcomp-analysis.opam","status":"D","additions":159,"deletions":402},{"file":"meta.yml","status":"D","additions":159,"deletions":402},{"file":"theories/csum.v","status":"D","additions":159,"deletions":402},{"file":"theories/derive.v","status":"D","additions":159,"deletions":402},{"file":"theories/exp.v","status":"D","additions":159,"deletions":402},{"file":"theories/landau.v","status":"D","additions":159,"deletions":402},{"file":"theories/measure.v","status":"D","additions":159,"deletions":402},{"file":"theories/normedtype.v","status":"D","additions":159,"deletions":402},{"file":"theories/realfun.v","status":"D","additions":159,"deletions":402},{"file":"theories/sequences.v","status":"D","additions":159,"deletions":402},{"file":"theories/topology.v","status":"D","additions":159,"deletions":402},{"file":"theories/trigo.v","status":"D","additions":159,"deletions":402}],"state":"merged","open_date":"2021-03-12T03:12:04Z","update_date":"2022-01-06T19:57:25Z","discussion":[{"author":"proux01","date":"2021-12-04T10:39:47Z","comment":"You should probably edit `meta.yml` and regenerate OPAM, Nix,... files (c.f.  https://github.com/coq-community/templates ) to drop 8.11 and 8.12. And we should probably also update the OPAM package on extra-dev before merging.\r\n"},{"author":"affeldt-aist","date":"2021-12-04T13:54:50Z","comment":"> we should probably also update the OPAM package on extra-dev before merging.\r\n\r\nYou mean the files in `opam-coq-archive/extra-dev/packages/coq-mathcomp-analysis`?\r\n(Because it is a long time we haven't touched those. :-( )\r\n"},{"author":"affeldt-aist","date":"2021-12-04T14:15:19Z","comment":"\"Nix CI for bundle 8.11 / mathcomp-analysis (pull_request)\" fails.\r\n\"Nix CI for bundle 8.11 / coq (pull_request)\" is marked as a success but if we click on \"Details\" we can observe that compilation is incomplete.\r\nIs that intended?\r\n"},{"author":"proux01","date":"2021-12-04T14:43:50Z","comment":"> You mean the files in `opam-coq-archive/extra-dev/packages/coq-mathcomp-analysis`?\r\n\r\nyep (we can just bump Coq 8.11 to 8.13 and take the opportunity to tell ssreflect 1.13 is supported)\r\n\r\n> \"Nix CI for bundle 8.11 / coq (pull_request)\" is marked as a success but if we click on \"Details\" we can observe that compilation is incomplete.\r\n\r\nI don't get your point, it looks to me like Coq 8.11 was successfully retrieved from cachix?\r\n"},{"author":"affeldt-aist","date":"2021-12-05T02:33:15Z","comment":"> I don't get your point, it looks to me like Coq 8.11 was successfully retrieved from cachix?\r\n\r\nI see. I didn't understand that the point of this part of the CI was to check only that Coq can be retrieved.Thank you.\r\n"},{"author":"proux01","date":"2021-12-09T11:21:14Z","comment":"@affeldt-aist this now looks mergeable\r\n"},{"author":"proux01","date":"2021-12-27T12:51:59Z","comment":"It remains to remove 8.11 and 8.12 from Nix CI, removing the two bundle lines in `.nix/config.nix` and the two corresponding files in `.github/workflows` should be enough."},{"author":"proux01","date":"2022-01-06T19:42:19Z","comment":"So addition of Analysis in Coq CI is waiting for this to be merged: https://github.com/coq/coq/pull/15443"}],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"c9624fdda3076262ba7a5b74cb2b4800650a1609","message":"replace Grab by Unshelve\n\n- add nix:true to meta.yml\n- remove 8.11 and 8.12 from the Nix CI\n\nCo-authored-by: Pierre Roux <pierre@roux01.fr>","date":"2021-12-28T00:26:50Z"}]},{"author":"affeldt-aist","number":340,"diff_summary":[{"file":"_CoqProject","status":"M","additions":4,"deletions":0}],"state":"merged","open_date":"2021-03-12T02:52:30Z","update_date":"2021-03-15T14:42:47Z","discussion":[{"author":"affeldt-aist","date":"2021-03-15T14:22:01Z","comment":"This is partly inspired by recent PRs to MathComp :-) @CohenCyril "}],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"1a98fdc9c6b06310e2f9daee9c575ac60649f6dc","message":"silence warnings","date":"2021-03-12T02:50:27Z"}]},{"author":"affeldt-aist","number":339,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":74,"deletions":66},{"file":"theories/ereal.v","status":"M","additions":74,"deletions":66},{"file":"theories/measure.v","status":"M","additions":74,"deletions":66},{"file":"theories/sequences.v","status":"M","additions":74,"deletions":66}],"state":"merged","open_date":"2021-03-10T15:39:24Z","update_date":"2021-03-10T15:56:06Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"1f5b12a4ee41f098aa8bd2f3e0783f5e446dd3a0","message":"small generalizations","date":"2021-03-10T15:38:09Z"}]},{"author":"affeldt-aist","number":338,"diff_summary":[{"file":"CHANGELOG.md","status":"M","additions":81,"deletions":81},{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":81,"deletions":81},{"file":"INSTALL.md","status":"M","additions":81,"deletions":81}],"state":"merged","open_date":"2021-03-04T02:05:13Z","update_date":"2021-03-04T11:38:58Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"30a2fa14891a841f3fd94c4af46f8bf3caf2a9ef","message":"changelog for version 0.3.6","date":"2021-03-04T02:04:15Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"6ad1d4b68ff35848c718a90e4098f3ffb359bc9c","message":"update version number","date":"2021-03-04T02:07:49Z"}]},{"author":"mkerjean","number":337,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"A","additions":1128,"deletions":0},{"file":"theories/hahnbanach.v","status":"A","additions":1128,"deletions":0},{"file":"theories/hahnbanach_normedtype.v","status":"A","additions":1128,"deletions":0}],"state":"open","open_date":"2021-02-19T15:30:00Z","update_date":"2023-03-15T15:05:36Z","discussion":[{"author":"pi8027","date":"2021-03-26T10:28:01Z","comment":"So this is the PR that needs linting and refactoring, right?"},{"author":"mkerjean","date":"2021-03-26T10:33:22Z","comment":"> So this is the PR that needs linting and refactoring, right?\r\n\r\nYes, quite heavily. In particular, hahn_banach.v could be transformed in a file depending of mathcomp-analysis, containing another (?) proof of Zorn's lemma or using the one already present in analysis. "},{"author":"affeldt-aist","date":"2021-03-26T10:46:20Z","comment":"> > So this is the PR that needs linting and refactoring, right?\r\n> \r\n> Yes, quite heavily. In particular, hahn_banach.v could be transformed in a file depending of mathcomp-analysis, containing another (?) proof of Zorn's lemma or using the one already present in analysis.\r\n\r\n@pi8027 There a few more concrete hints in the minutes of the last meeting (https://github.com/math-comp/analysis/wiki/2021-03-26-Meeting)."},{"author":"pi8027","date":"2021-04-04T17:37:04Z","comment":"Could someone grant me write permission to directly push to here?\r\n\r\n> `ERROR: Permission to math-comp/analysis.git denied to pi8027.`"},{"author":"CohenCyril","date":"2021-04-04T19:08:52Z","comment":"> Could someone grant me write permission to directly push to here?\r\n> \r\n> > `ERROR: Permission to math-comp/analysis.git denied to pi8027.`\r\n\r\ndone"},{"author":"pi8027","date":"2021-04-05T13:02:57Z","comment":"@CohenCyril Thanks!"},{"author":"mkerjean","date":"2022-02-07T14:44:26Z","comment":"Hi @pi8027, did you try to lint and refactor this or can I tackle this ? "}],"review_discussion":[],"tags":[{"tag":"enhancement :sparkles:","description":"This issue/PR is about adding new features enhancing the library"}],"commits":[{"author":"mkerjean","hash":"87bd3ad72597a525b201db12379ae3f7736a8a16","message":"Zorn and Hahn-Banach theorems","date":"2021-03-19T15:09:05Z"},{"author":"affeldt-aist","hash":"326fcf5d33a08b452440566cf554797332214317","message":"minor lemma generalization","date":"2021-03-19T15:09:05Z"},{"author":"affeldt-aist","hash":"9f86f3ea78a79e92fc68013069b39fc8a21f376b","message":"changelog, meta\n\n- add inheritance diagram to readme","date":"2021-03-19T15:09:05Z"},{"hash":"9e23427660eca0c69f6ebb9b86eb14b44cbd073b","message":"numFieldNormedType","date":"2021-03-19T15:25:36Z"}]},{"author":"affeldt-aist","number":336,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":118,"deletions":33},{"file":"theories/classical_sets.v","status":"M","additions":118,"deletions":33},{"file":"theories/measure.v","status":"M","additions":118,"deletions":33}],"state":"merged","open_date":"2021-02-19T02:52:07Z","update_date":"2021-02-19T03:04:55Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"e3796f3cd04b6e32f1b941a0d127906121a0d268","message":"generalize the defintion of trivIset\n\nCo-authored-by: Cyril Cohen <cohen@crans.org>","date":"2021-02-19T02:51:07Z"}]},{"author":"affeldt-aist","number":335,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":20,"deletions":6},{"file":"theories/ereal.v","status":"M","additions":20,"deletions":6}],"state":"merged","open_date":"2021-02-19T01:49:26Z","update_date":"2021-02-19T02:11:35Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"6c94796a00ca13fc38afe8b7998311d94991e4e6","message":"fix ereal notations\n\nCo-authored-by: Cyril Cohen <cohen@crans.org>","date":"2021-02-19T01:26:58Z"}]},{"author":"mkerjean","number":334,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":220,"deletions":1},{"file":"theories/normedtype.v","status":"M","additions":220,"deletions":1},{"file":"theories/sequences.v","status":"M","additions":220,"deletions":1}],"state":"open","open_date":"2021-02-18T21:27:23Z","update_date":"2023-03-15T15:06:47Z","discussion":[{"author":"affeldt-aist","date":"2021-03-11T11:01:30Z","comment":"I tried to simplify a bit the scripts. Tell me if I introduced to much mess, Maybe it is worth doing one more pass and discuss whether to put lemmas in other files. Should `le_closed_ball` moved in `normedtype.v` (maybe using the `homo` notation). Should `floor_nat_comp` go to `reals.v`? Should `bounded_landau` go to `landau.v`? @CohenCyril "},{"author":"mkerjean","date":"2021-03-15T13:54:47Z","comment":"> I tried to simplify a bit the scripts. Tell me if I introduced to much mess.\r\nSeems good to me, thanks :)\r\n"},{"author":"mkerjean","date":"2021-03-26T10:36:16Z","comment":"> I tried to simplify a bit the scripts. Tell me if I introduced to much mess, Maybe it is worth doing one more pass and discuss whether to put lemmas in other files. Should `le_closed_ball` moved in `normedtype.v` (maybe using the `homo` notation). Should `floor_nat_comp` go to `reals.v`? Should `bounded_landau` go to `landau.v`? @CohenCyril\r\n\r\nAs `bounded_landau` depends of the newly introduced defininition `bounded_fun_norm`, shouldn't it stay in near Banach-Steinhaus theorem for the time being ? And then Banach-Steinhaus needs to be inserted as a section/module in `landau.v` ? "},{"author":"affeldt-aist","date":"2021-03-26T10:44:20Z","comment":"\r\n> As `bounded_landau` depends of the newly introduced defininition `bounded_fun_norm`,\r\n> shouldn't it stay in near Banach-Steinhaus theorem for the time being ?\r\n\r\nI was thinking that `bounded_fun_norm` would go to `landau.v` too.\r\n\r\n> And then Banach-Steinhaus needs to be inserted as a section/module in `landau.v` ?\r\n\r\nIndeed, we wrongly stated that it should go to `normedtype.v` during the meeting. :-(\r\n"},{"author":"affeldt-aist","date":"2021-03-29T08:20:50Z","comment":"Follow-up to Friday's meeting: I tried to replace `floor_nat_comp` with more primitive lemmas and the usage of `ceil`."},{"author":"mkerjean","date":"2021-04-01T16:08:44Z","comment":"At the end Baire's theorem depends on sequences, thus Baire's and Banach-Steinhauss theorem have been added in `sequences.v`, as well as the auxiliary definitions on bounded function (to be removed one day)."},{"author":"affeldt-aist","date":"2021-05-27T11:30:17Z","comment":"NB: This PR uses the lemma `gtz0_norm` expecting it to be integrated into MathComp.\r\nThis is rather this lemma:\r\n```\r\nLemma natr_absz i : `|i|%:R = `|i|%:~R :> R.\r\nProof. by rewrite -abszE. Qed.\r\n```\r\nthat is likely to be merged into MathComp (see PR https://github.com/math-comp/math-comp/pull/732/).\r\nMaybe update this PR accordingly?\r\n"},{"author":"mkerjean","date":"2022-02-07T13:24:46Z","comment":"> NB: This PR uses the lemma `gtz0_norm` expecting it to be integrated into MathComp. This is rather this lemma:\r\n> \r\n> ```\r\n> Lemma natr_absz i : `|i|%:R = `|i|%:~R :> R.\r\n> Proof. by rewrite -abszE. Qed.\r\n> ```\r\n> \r\n> that is likely to be merged into MathComp (see PR [math-comp/math-comp#732](https://github.com/math-comp/math-comp/pull/732)). Maybe update this PR accordingly?\r\n\r\nThese lemmas have been integrated to MathComp 1.13 and Analysis seems to depend on math-comp 1.13, but I can't find them within sequence.v in this branch, any idea why ? "},{"author":"CohenCyril","date":"2022-02-07T13:32:23Z","comment":"> These lemmas have been integrated to MathComp 1.13 and Analysis seems to depend on math-comp 1.13, but I can't find them within sequence.v in this branch, any idea why ?\r\n\r\nHi! mathcomp-analysis is compatible with both (and with 1.14 too), and the default nix-shell uses the most conservative of the two (so 1.12.0).\r\nI am strongly in support of dropping 1.12.0 ASAP, that would solve your issue and several of mine :)"},{"author":"CohenCyril","date":"2022-02-07T13:33:33Z","comment":"Meanwhile is you use `nix-shell --argstr bundle 8.14` it will use Coq 8.14 and force mathcomp to 1.13."}],"review_discussion":[{"author":"CohenCyril","file":"theories/banach_steinhaus.v","date":"2021-03-19T17:13:10Z","comment":"Theo can also be credited by writing `Co-Authored-By :  Theo Vignon <insert his email address here>` in the commit log."},{"author":"CohenCyril","file":"theories/banach_steinhaus.v","date":"2021-03-19T17:13:25Z","comment":"This should probably go in topology."},{"author":"CohenCyril","file":"theories/banach_steinhaus.v","date":"2021-03-19T17:14:16Z","comment":"```suggestion\r\n  forall (O : set T), O =!set0 -> open O ->  O `&` S !=set0.\r\n```"},{"author":"CohenCyril","file":"theories/banach_steinhaus.v","date":"2021-03-31T09:32:10Z","comment":"Let's inline `Baire` in here and call the theorem `dense_bigcap` with a comment that this is Baire theorem."},{"author":"mkerjean","file":"theories/banach_steinhaus.v","date":"2021-03-31T11:00:42Z","comment":"Why do we need to call the theorem `dense_bigcap` ? A potential user is going to look for \"Baire\", never for \"bigcap\" no ?"},{"author":"CohenCyril","file":"theories/banach_steinhaus.v","date":"2021-03-31T12:14:29Z","comment":"I just wish one day we have docstrings and we are able to document the historical name of a theorem in a searchable way while not breaking the name conventions of the library. But for the time being ok for calling the theorem \"Baire\"."}],"tags":[{"tag":"enhancement :sparkles:","description":"This issue/PR is about adding new features enhancing the library"}],"commits":[{"author":"mkerjean","hash":"3fe5d4bb2b66281e43098b081a63e0ae999ba1e9","message":"old banachs-steinhaus and baire\n\nCo-Authored by Théo Vignon","date":"2022-02-07T09:33:16Z"},{"author":"affeldt-aist","hash":"40f22f763983e2529a294cf5c023048bddd42af5","message":"lint (?), changelog","date":"2022-02-07T09:33:16Z"},{"hash":"9a57b796ee0668defd487b0c463b918bcb27197c","message":"numFieldNormedType","date":"2022-02-07T09:33:16Z"},{"author":"mkerjean","hash":"900c9a7e480527552a22a565aab5394276c83cc8","message":"Update theories/banach_steinhaus.v\n\nCo-authored-by: Cyril Cohen <CohenCyril@users.noreply.github.com>","date":"2022-02-07T09:33:16Z"},{"author":"affeldt-aist","hash":"b6a5fa8be043de5ec488edb900cf50600482f6f1","message":"trying to replace `floor_nat_comp`\n\n- with more primitive lemmas","date":"2022-02-07T09:33:16Z"},{"hash":"ccbd7c7ff2f222a064f0e65c24cfbc33791c2a6b","message":"depends on sequences","date":"2022-02-07T09:37:18Z"},{"hash":"3e1b6117de41eeb8d51d1690c6ae8601f3574eec","message":"clean","date":"2022-02-07T13:29:09Z"}]},{"author":"CohenCyril","number":333,"diff_summary":[{"file":".github/workflows/docker-action.yml","status":"M","additions":2,"deletions":3},{"file":".github/workflows/nix.yml","status":"M","additions":2,"deletions":3}],"state":"merged","open_date":"2021-02-17T18:16:45Z","update_date":"2021-02-17T19:55:05Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"CohenCyril","committer":"web-flow","hash":"f5fc0069192ea29082c183d78adc696e9770b4cf","message":"Update nix.yml","date":"2021-02-17T18:16:42Z"},{"author":"CohenCyril","committer":"web-flow","hash":"e88b00167bc19c0592ad794977326779f757c636","message":"Update docker-action.yml","date":"2021-02-17T18:31:36Z"},{"author":"CohenCyril","committer":"web-flow","hash":"9fb15cb3769b8fce2a28e8a2b368c7c41a3ddd99","message":"Update nix.yml","date":"2021-02-17T18:52:04Z"}]},{"author":"affeldt-aist","number":332,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":9,"deletions":4},{"file":"theories/classical_sets.v","status":"M","additions":9,"deletions":4}],"state":"merged","open_date":"2021-02-10T09:21:04Z","update_date":"2021-03-04T01:51:58Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"6de9d787cd3e3e0183de383f2cc6842cd9e43028","message":"minor lemma generalization","date":"2021-02-10T09:20:14Z"}]},{"author":"affeldt-aist","number":331,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":3,"deletions":16},{"file":"theories/sequences.v","status":"M","additions":3,"deletions":16}],"state":"merged","open_date":"2021-02-01T14:57:07Z","update_date":"2021-02-09T11:55:49Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"04b7172efa199c6e9d056ef87c088790e96da4c3","message":"lemmas that made their way into mathcomp","date":"2021-02-01T14:56:29Z"}]},{"author":"affeldt-aist","number":329,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":19,"deletions":5},{"file":"theories/measure.v","status":"M","additions":19,"deletions":5}],"state":"merged","open_date":"2021-01-26T05:48:09Z","update_date":"2021-01-26T16:04:41Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"fc1e3f62953213f735ff2f9e4de2dd201279c03b","message":"sigma_finite definition from PR integral_sketch\n\n- lowered to ringOfSetsTypes\n\nCo-authored-by: Cyril Cohen <cohen@crans.org>","date":"2021-01-26T15:47:43Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"aedbb8c854dca19e576329ead43162dfd0714aba","message":"fix constructor name\n\n- for AdditiveMeasure and OuterMeasure","date":"2021-01-26T15:47:48Z"}]},{"author":"affeldt-aist","number":328,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":39,"deletions":7},{"file":"theories/ereal.v","status":"M","additions":39,"deletions":7}],"state":"merged","open_date":"2021-01-26T03:19:07Z","update_date":"2021-01-26T10:41:57Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"0ebf14f9cd65a895cceeed3720a57bd215ea8ffe","message":"infinite sum contains one infinite summand","date":"2021-01-26T03:15:56Z"}]},{"author":"mkerjean","number":327,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":19,"deletions":14},{"file":"theories/normedtype.v","status":"M","additions":19,"deletions":14}],"state":"merged","open_date":"2021-01-19T19:28:49Z","update_date":"2021-01-19T19:51:29Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"mkerjean","committer":"mkerjean","hash":"ca9e234227c09b82846810c997b50ccae839eea2","message":"renaming and doc on bounded_fun","date":"2021-01-19T19:24:40Z"}]},{"author":"affeldt-aist","number":326,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":6,"deletions":4},{"file":"theories/topology.v","status":"M","additions":6,"deletions":4}],"state":"merged","open_date":"2021-01-19T09:00:13Z","update_date":"2021-01-19T15:29:54Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"6177003f0bcf612d05cdc0c68d2bc6a1f137683c","message":"fixes issue #324","date":"2021-01-19T08:59:31Z"}]},{"author":"affeldt-aist","number":322,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":122,"deletions":47},{"file":"theories/altreals/realsum.v","status":"M","additions":122,"deletions":47},{"file":"theories/ereal.v","status":"M","additions":122,"deletions":47},{"file":"theories/normedtype.v","status":"M","additions":122,"deletions":47},{"file":"theories/reals.v","status":"M","additions":122,"deletions":47}],"state":"merged","open_date":"2021-01-14T05:37:47Z","update_date":"2021-01-26T10:34:15Z","discussion":[{"author":"CohenCyril","date":"2021-01-18T18:26:19Z","comment":"This is transitory code waiting for (https://github.com/math-comp/math-comp/pull/682 and https://github.com/math-comp/math-comp/pull/691) to be integrated.\r\nCan you please check that the definitions have the same type here as there, that the lemmas have the same shape and that you are not using the body of these definitions anywhere else? If a lemma is missing from the above PR, you could suggest their insertion."},{"author":"CohenCyril","date":"2021-01-18T18:35:31Z","comment":"Also, note that `Rtoint` is (and `floor` too) to disappear in favor of the more general and informative `Num.floor`."}],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"b39c709b92677a31b39c3b3f482fbdabfaddd0cc","message":"Transitory code for floor/ceil\n\nWaiting for (math-comp/math-comp#682 and math-comp/math-comp#691) to be integrated.\nTo prepare for these forthcoming PRs:\n- rename `ifloor` (of type `R -> int`) to `floor`\n- rename `floor` (of type `R -> R`) to `Rfloor` (and add `Rceil`)\n  + which will disappear in favor of `floor`/`ceil`\n- rename floor lemmas to match the equivalent forthcoming lemmas\n  + to use the `{homo ...}` notation also\n  + in particular, `floor_ge0` generalized and renamed to `Rfloor_ge_int`","date":"2021-01-21T11:44:43Z"}]},{"author":"affeldt-aist","number":321,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":28,"deletions":0},{"file":"theories/classical_sets.v","status":"M","additions":28,"deletions":0},{"file":"theories/reals.v","status":"M","additions":28,"deletions":0}],"state":"merged","open_date":"2021-01-14T04:29:00Z","update_date":"2021-01-19T08:34:05Z","discussion":[{"author":"CohenCyril","date":"2021-01-18T17:51:18Z","comment":"LGTM merge when rebased"}],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"12b620ee8baa69016877b36d253147f7486ae3a6","message":"lemmas to prove inf/sup properties of intervals","date":"2021-01-19T04:23:35Z"}]},{"author":"affeldt-aist","number":320,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":7,"deletions":0},{"file":"theories/boolp.v","status":"M","additions":7,"deletions":0}],"state":"merged","open_date":"2021-01-14T04:08:29Z","update_date":"2021-01-19T15:29:28Z","discussion":[],"review_discussion":[{"author":"CohenCyril","file":"theories/boolp.v","date":"2021-01-18T17:48:10Z","comment":"```suggestion\r\nLemma iff_notr (P Q : Prop) : (P <-> ~ Q) <-> (~ P <-> Q).\r\nProof. by split=> [/propext ->|/propext <-]; rewrite notK. Qed.\r\n\r\nLemma iff_not2 (P Q : Prop) : (~ P <-> ~ Q) <-> (P <-> Q).\r\nProof. by split=> [iff_notP|PQ]; [|apply/iff_notP]; rewrite notK. Qed.\r\n```"}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"8e3d704dac9b7c146e85dcf661ddfdb645418332","message":"iff lemmas","date":"2021-01-19T08:46:57Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"c64655e98cbfb16b204cd1428ecbef1bdb38b078","message":"Update theories/boolp.v\n\nCo-authored-by: Cyril Cohen <CohenCyril@users.noreply.github.com>","date":"2021-01-19T08:46:57Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"b924734834f5beb940b2eef7d6d26b41001df197","message":"fix and changelog update","date":"2021-01-19T08:48:08Z"}]},{"author":"pi8027","number":319,"diff_summary":[{"file":"theories/sequences.v","status":"M","additions":5,"deletions":6}],"state":"merged","open_date":"2021-01-13T12:47:37Z","update_date":"2021-01-13T13:17:12Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"pi8027","committer":"pi8027","hash":"0cccbec72f871fb4a334b4ba82c4e15b9b5479f9","message":"Get rid of `ssrnum.mc_1_10`","date":"2021-01-13T12:45:31Z"}]},{"author":"zstone1","number":318,"diff_summary":[{"file":"theories/normedtype.v","status":"M","additions":2070,"deletions":14},{"file":"theories/sequences.v","status":"M","additions":2070,"deletions":14},{"file":"theories/topology.v","status":"M","additions":2070,"deletions":14}],"state":"closed","open_date":"2021-01-12T05:00:09Z","update_date":"2021-07-22T12:55:00Z","discussion":[{"author":"CohenCyril","date":"2021-07-22T12:59:48Z","comment":"@zstone1 why did you close this one?"},{"author":"zstone1","date":"2021-07-22T13:11:49Z","comment":"Oh, sorry I should have left a closing comment. With #397 (Arzela-Ascoli), it will dramatically simplify this proof. So while the banach space definitions are still useful, that should be a separate diff. "}],"review_discussion":[],"tags":[],"commits":[{"author":"zstone1","committer":"zstone1","hash":"05c05b3e063a2359a4d1616005cb7d0e8fd8e35f","message":"adding domain restrictions and compact convergence","date":"2020-12-19T21:54:40Z"},{"author":"zstone1","committer":"zstone1","hash":"b6e226ae77ee10592c633c5aa0ee6bb2791f9127","message":"fixing notation","date":"2020-12-19T22:54:53Z"},{"author":"zstone1","committer":"zstone1","hash":"bc5c85e66e917f9b56451f183bd486e0443dd193","message":"hausdorff close","date":"2020-12-20T00:39:17Z"},{"author":"zstone1","committer":"zstone1","hash":"636aea48a5b89c556bcb631812eddfa351fbf250","message":"halfway through improvements","date":"2020-12-20T05:43:54Z"},{"author":"zstone1","committer":"zstone1","hash":"72e3eb1367ca7d43b2397b0a95514ef87c7ce564","message":"fixed split proof style","date":"2020-12-20T05:49:08Z"},{"author":"zstone1","committer":"zstone1","hash":"ba563731bea89e3d4d315c9cd44cf6a1d930acc4","message":"fixing style issues","date":"2020-12-20T12:46:26Z"},{"author":"zstone1","committer":"zstone1","hash":"8b11f194a75f7d7ce4d2293e91b4e84f5718fbc7","message":"changing convergence notation","date":"2020-12-23T21:13:50Z"},{"author":"zstone1","committer":"zstone1","hash":"cd2fa7dc4cbb976765ebd0001c5f9e5e1ffd440a","message":"uniform implies pointwise, and dependent pairs","date":"2020-12-26T22:29:34Z"},{"author":"zstone1","committer":"zstone1","hash":"cedf06ed7d82f6825dfe8b47a8e13a3e7aa181a5","message":"fixing build","date":"2020-12-26T22:49:24Z"},{"author":"zstone1","committer":"zstone1","hash":"bfa1f919c80b9c27421244fc9b82bd5fe2c3c401","message":"removing old notation","date":"2020-12-26T22:50:18Z"},{"author":"zstone1","committer":"web-flow","hash":"04ac867f141ead77be310c88cf659491b41e33cb","message":"Merge pull request #1 from zstone1/subspace_top\n\nAdding dependent pair technique for convergence, and unif -> ptws","date":"2020-12-26T22:58:27Z"},{"author":"zstone1","committer":"zstone1","hash":"3d996c3d1533183a09d14913f5bdc722e830c8a3","message":"adding banach algebra type","date":"2020-12-29T00:31:47Z"},{"author":"zstone1","committer":"zstone1","hash":"254d361c2723d8231dc610ac7fa2cde8d4949937","message":"basic banach algebra lemmas","date":"2020-12-29T01:31:13Z"},{"author":"zstone1","committer":"zstone1","hash":"ac1a1b9894d3a3bc89efc98e659ff6800380d02f","message":"making units for banach algebras","date":"2020-12-29T22:12:49Z"},{"author":"zstone1","committer":"zstone1","hash":"f6fb3dda5bd929624325d5dba669aca2e0d9e09e","message":"proving multiplication continuous","date":"2020-12-30T01:35:49Z"},{"author":"zstone1","committer":"zstone1","hash":"9a9ea9b2149577a685ffbdf2a25a317a71edfdc8","message":"continuity of algebra products","date":"2020-12-30T05:51:09Z"},{"author":"zstone1","committer":"zstone1","hash":"d964c19ac2ba153e82c8235b186132e0b89b39ab","message":"almost done with banach alg inverses","date":"2020-12-30T06:41:45Z"},{"author":"zstone1","committer":"zstone1","hash":"283b821c560afbdebb0d80532b4b12b6d92f3920","message":"units for 1-z in banach algebras","date":"2020-12-30T20:15:36Z"},{"author":"zstone1","committer":"zstone1","hash":"d4ab8fea0a7d087b7f37b1b0af1a1e1170d4f676","message":"cleaned up final lemma","date":"2020-12-30T20:34:39Z"},{"author":"zstone1","committer":"zstone1","hash":"f5fa27c6fde2b9a301288a5369cdb1aa3294e177","message":"lots of stuff about norms and series","date":"2020-12-31T23:17:54Z"},{"author":"zstone1","committer":"zstone1","hash":"1d83b0bc0a0357c5d220512d2d80fe511209af1f","message":"changing some stuff about strict inequalities","date":"2021-01-01T00:51:35Z"},{"author":"zstone1","committer":"zstone1","hash":"df1a963ff1eca0977f74d85729a53b73cb630d9f","message":"proof of geometric uniform convergence done!","date":"2021-01-01T04:40:55Z"},{"author":"zstone1","committer":"zstone1","hash":"6d395d01c84fb87d1068a99831687beba9e09a33","message":"unif convergence checkpoint","date":"2021-01-01T19:15:33Z"},{"author":"zstone1","committer":"zstone1","hash":"75250fb771ad9733ea715376b09bdb88785cc530","message":"fixing filter_on, using filter_from","date":"2021-01-13T17:24:37Z"},{"author":"zstone1","committer":"zstone1","hash":"a1a3bb69c103ab6d49a2d961554abb4f90564b69","message":"getting notations to print correctly","date":"2021-01-13T20:39:11Z"},{"author":"zstone1","committer":"zstone1","hash":"c9477c4713363f799ac93d94f219264439c4494b","message":"adding casting functions to fix pretty printing","date":"2021-01-13T20:58:19Z"},{"author":"zstone1","committer":"zstone1","hash":"e41e7a53ceefc2bf8e1a8f3fb64a1af04a6a9838","message":"cleaning up relation between fam cvg and restricted cvg","date":"2021-01-13T21:16:37Z"},{"author":"zstone1","committer":"zstone1","hash":"29d339d79626b4173a067bf93049d23967926e13","message":"merging unif cvg changes","date":"2021-01-14T05:02:45Z"},{"author":"zstone1","committer":"zstone1","hash":"4d2f0ab0f1fa3431e7406ef6c9421335ba069c42","message":"R variants of C norms","date":"2021-01-18T03:39:18Z"},{"author":"zstone1","committer":"zstone1","hash":"7b8baf11e8abbf3f8d0311047e727950b9ec7f9a","message":"Merge branch 'cnorms' into balg","date":"2021-01-18T03:44:57Z"},{"author":"zstone1","committer":"zstone1","hash":"fcd3446b334d11bb7ba1cd3f36998008a42e5e2c","message":"banach alg c to r","date":"2021-01-18T05:15:47Z"},{"author":"zstone1","committer":"zstone1","hash":"383c06124d0b792e11c594f9cd45de2cc4877bfe","message":"new mathcomp notations","date":"2021-01-18T20:16:16Z"},{"author":"zstone1","committer":"zstone1","hash":"1ad9ff0197bfb8f8fb2495ef3644cea7130182e1","message":"Merge branch 'master' of https://github.com/zstone1/analysis into balg","date":"2021-01-18T23:02:32Z"},{"author":"zstone1","committer":"zstone1","hash":"619f0587168f81338444bc4fe22a28bb70572013","message":"almost done with continuous inverse for balg","date":"2021-01-22T03:35:31Z"},{"author":"zstone1","committer":"zstone1","hash":"f863ac8da78db624a7f9931e6dc997a6317a9ed0","message":"complete but terrible proof of inv continuity","date":"2021-01-24T04:13:19Z"}]},{"author":"CohenCyril","number":316,"diff_summary":[{"file":".github/workflows/docker-action.yml","status":"M","additions":23,"deletions":14},{"file":"coq-mathcomp-analysis.opam","status":"M","additions":23,"deletions":14},{"file":"meta.yml","status":"M","additions":23,"deletions":14}],"state":"merged","open_date":"2021-01-08T18:55:14Z","update_date":"2021-01-08T19:58:54Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"CohenCyril","committer":"CohenCyril","hash":"9fd20b309a9e5a9a02ba9bba75aced1bd4604aa4","message":"testing mc-dev","date":"2021-01-08T19:08:42Z"}]},{"author":"CohenCyril","number":315,"diff_summary":[{"file":".github/workflows/docker-action.yml","status":"D","additions":56,"deletions":68},{"file":"README.md","status":"D","additions":56,"deletions":68},{"file":"coq-mathcomp-analysis.opam","status":"D","additions":56,"deletions":68},{"file":"dune","status":"D","additions":56,"deletions":68},{"file":"dune-project","status":"D","additions":56,"deletions":68},{"file":"index.md","status":"D","additions":56,"deletions":68},{"file":"meta.yml","status":"D","additions":56,"deletions":68}],"state":"merged","open_date":"2021-01-08T18:09:12Z","update_date":"2021-01-08T18:50:50Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"CohenCyril","committer":"CohenCyril","hash":"68d2b863c999315279fd403a7f4b67d8c285f1d8","message":"CI for Coq 8.13 + cleanup","date":"2021-01-08T18:35:40Z"}]},{"author":"affeldt-aist","number":314,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":470,"deletions":433},{"file":"theories/classical_sets.v","status":"M","additions":470,"deletions":433},{"file":"theories/measure.v","status":"M","additions":470,"deletions":433},{"file":"theories/topology.v","status":"M","additions":470,"deletions":433}],"state":"merged","open_date":"2021-01-07T05:28:13Z","update_date":"2021-01-26T16:05:20Z","discussion":[{"author":"CohenCyril","date":"2021-01-18T17:36:54Z","comment":"I'd rather reuse the convetions from `mathcomp/ssreflect/finset.v`\r\n\r\n> * enforce the convention of using T, U for names of variables\r\n>   in Type (or choiceType an pointedType)\r\n\r\nUse `T` (if multiple types, use a suffix as in `T'` or `T1` ... `Tn` or a prefix as in `aT` for domain type or  `rT` return type)\r\n\r\n>   * use I when the type corresponds to an index\r\n\r\nUse `I` or `J` for indexes.\r\n\r\n> * enforce the convention that sets are named A, B, C, D, etc.\r\n\r\nYes\r\n\r\n>   * indexed sets are rather named F\r\n>   * use X for set T and Y for set U when it makes sense when\r\n\r\nUse the same sufix or prefix for the sets as their containing type (e.g. `A1` in `T1`, etc)\r\n\r\n>     we are talking about images/preimages\r\n>   * keep X for sets of pairs\r\n\r\nor remove the suffix? (e.g. `A : set (T1 * T2)`)\r\n\r\n> * small reordering of lemmas in sections (basic_lemmas,\r\n>   image_lemmas, bigop_lemmas) to take advantage of Implicit Types\r\n\r\n"},{"author":"CohenCyril","date":"2021-01-18T17:37:29Z","comment":" + document these choices in the header?"},{"author":"CohenCyril","date":"2021-01-26T10:37:41Z","comment":"Please rebase and then we merge"}],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"989c9abd3f0910bb300e54b09aac1b75c2276978","message":"more uniform naming convention\n\n- enforce the convention of using T, U for names of variables\n  in Type (or choiceType an pointedType)\n  + as a consequence functions are of type T -> U\n  + use I when the type corresponds to an index\n- enforce the convention that sets are named A, B, C, D, etc.\n  + indexed sets are rather named F\n  + use X for set T and Y for set U when it makes sense when\n    we are talking about images/preimages\n  + keep X for sets of pairs\n- small reordering of lemmas in sections (basic_lemmas,\n  image_lemmas, bigop_lemmas) to take advantage of Implicit Types","date":"2021-01-26T15:50:52Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"79ffea854220185793f9d8ec2643a0e41f7ee775","message":"missing lemmas about setD","date":"2021-01-26T15:50:53Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"7dbb49bea0b0e50704ab376eb550346cc27ec312","message":"complement of bigcup and bigcap, like in finset","date":"2021-01-26T15:50:53Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"60271d88fd8debc70c2edb6c039590c1b609fee7","message":"improve naming in classical_sets\n\n- address comments by Cyril\n- document naming choices in the header\n- no more \"ill-named\" sets X or E or \"ill-named\" types U","date":"2021-01-26T15:50:53Z"}]},{"author":"affeldt-aist","number":313,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":3,"deletions":3},{"file":"theories/topology.v","status":"M","additions":3,"deletions":3}],"state":"merged","open_date":"2021-01-04T03:46:00Z","update_date":"2021-01-18T17:32:31Z","discussion":[],"review_discussion":[{"author":"CohenCyril","file":"theories/topology.v","date":"2021-01-18T17:31:45Z","comment":"The lemma `ball_ler` looks misnamed to me. I guess it should be `le_ball`."}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"2ed667d896c3339c5a2c68d96fda5ce6f1ab2e83","message":"remove duplicated lemma","date":"2021-01-04T03:45:09Z"}]},{"author":"affeldt-aist","number":312,"diff_summary":[{"file":"CHANGELOG.md","status":"M","additions":29,"deletions":20},{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":29,"deletions":20}],"state":"merged","open_date":"2020-12-21T08:03:45Z","update_date":"2020-12-21T09:23:13Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"d110cc95f8e20ae512c4ae6aeeca3fe7f7522436","message":"changelog for version 0.3.5","date":"2020-12-21T08:02:51Z"}]},{"author":"zstone1","number":311,"diff_summary":[],"state":"closed","open_date":"2020-12-19T22:27:18Z","update_date":"2021-10-30T01:15:54Z","discussion":[{"author":"CohenCyril","date":"2020-12-20T21:19:59Z","comment":"Hi @zstone1 thank you for your contribution. At first glance, it is interesting and I have many remarks to make but I am very short in time during this period of the year.\r\n\r\nJust so you know, your restriction mechanism is akin to the one used in group theory `{morphism G -> gT'}` (where `G` is a subgroup of an enclosing groupe type `gT`).\r\n\r\nYou might also be interested in PR #224 "},{"author":"zstone1","date":"2020-12-20T22:44:12Z","comment":"Ah, thanks for the heads up about the integral PR. And no worries on time. I'd love to hear your thoughts when you get to it. "},{"author":"CohenCyril","date":"2021-01-12T10:31:58Z","comment":"Hi, @zstone1 I have many remarks and questions about this PR, but I'll start \"small\": would you consider using function restriction like this one? https://github.com/math-comp/analysis/blob/0eaabe88aaac5500a2584b60648a31e1ff153e29/theories/csum.v#L46-L48 (defined in #294 and used in #224)\r\n\r\nIn your case, since you don't have `0`, you could use `point` from `pointedType` instead (which we should make sure always coincides with `0` in Z-modules). Would that be a reasonable assumption that all your codomains are pointed?"},{"author":"zstone1","date":"2021-01-12T16:47:12Z","comment":"Thanks for this, it's an interesting point. First of all, `pointedType` is a very reasonable assumption. I think I already am assuming it everywhere. Second, I have a `patch` function which behaves similarly. For a given set `A`,  the function `patch_point A := patch A (fun=> point)` is exactly the restriction you're recommending. \r\n\r\nI did consider such restrictions, and I don't have a good reason to use dependent pairs over restriction functions. It looks like the restriction functions will fit better into the existing paradigm, so I'm happy to make that change. It should be quite straightforward. On the other hand, I believe the \"exploded\" topology has the advantage of using the same filter everywhere. The only way I could figure out to use that `patch_point A` function was to say \r\n``` \r\nF ~~>_(A) :=  ((patch_point A) @` F --> (patch_point A f))\r\n```\r\nBut then, for defining convergence over a family of sets, we'd need \r\n```\r\nforall A, fam A -> (patch_point A) @` F --> (patch_point A f)\r\n```\r\nNow we've got different filters for each set. So I can't really use the nice `sup_topology` stuff. My goal was to make the definition \r\n```\r\nNotation \"F ~ famA ~> f\" := \r\n  (F --> (f : family_cvg_topologicalType famA)) (at level 100).\r\n``` \r\nas clean as possible. This also should prevent having to sprinkle in excess restrictions at application time.\r\n \r\nThat being said, in another draft PR I just posted, I prove that geometric series converge compactly. I ended up using `cvg_restrict_dep` anyway. So when it comes to proving things converge over families, having the clean definition didn't help much. So if it ends up that all of the `sup_topology` stuff is a distraction, then I'm fine to remove it, and just use the restriction definitions.\r\n\r\nDoes this explain my reasoning clearly? If I've missed something, please let me know. I'd love to simplify the PR. "},{"author":"CohenCyril","date":"2021-01-12T17:41:29Z","comment":"I agree that restrictions using dependent types might not be the most usable in general, though it could sometimes prove useful. When one stays with topology and more generally non algebraic structures, they might be ok (even if one has to pay the price of going back and forth a type and its subtype, it could be manageable). When one enters the realm of algebra, the predicate must satisfy more structure. So it's ok to keep them as a side tool, provided the theory is done once and applied to the other.\r\n\r\nAbout changing the topology on spaces of function, while it is unavoidable for the pointwise one, maybe the best strategy would be to change the topology on the domain using `within`, e.g. by having a canonical structure on an alias of the domain e.g.\r\n```coq\r\nDefinition restrict_type U (A : set U) := U.\r\nNotation \"U `\\_ A\" := (restrict_type U A) : type_scope.\r\n```\r\nThen, filters on ``F --> (f : U`\\_A -> _)`` correspond to your current `F ~~>_(A) f` (I hope, please check I'm not saying something wrong)."},{"author":"zstone1","date":"2021-01-12T18:04:35Z","comment":"I remember trying something like that, but gave up. The uniform topology for functions doesn't use a topology on the domain; it's just a `choiceType`. (I'll admit this detail surprised me.) This line of thinking is how I ended up with dependent pairs in the first place. I agree with the approach wholeheartedly, though. Only altering the function domain would be quite elegant. But I never figured out how to do it. I suspect it's not possible, but don't have any supporting evidence. "},{"author":"CohenCyril","date":"2021-01-18T17:30:39Z","comment":"> Only altering the function domain would be quite elegant. But I never figured out how to do it. I suspect it's not possible, but don't have any supporting evidence.\r\n\r\nAh right, I understand the problem, I think this could be done by adding some machinery that try to detect a restriction of a domain for the product topology...."},{"author":"CohenCyril","date":"2021-01-18T18:35:20Z","comment":"Then I guess a solution would be to have a type `{restricted A -> T}` function (note that in the mathcomp tradition, annotation of the sort are prefered over LaTeX style subscripts of the arrow, and that we use curly brackets for types and square brackets for terms)."},{"author":"zstone1","date":"2021-01-18T21:37:19Z","comment":"Ok, that's quite reasonable. I've updated the proofs with the new syntax, as well as the docs. All this raises a (possibly out of scope) question. Should `U -> V` have a canonical topology? I'm not sure I why uniform is a better choice than pointwise. Even though removing the `Canonical` declaration would force people to be explicit about their topologies, new syntax is a fairly lightweight way to annotate it. And when you're working with only one kind of convergence, the existing `F --> f` (vs `{unif, F --> f}` ) notation still works just fine."},{"author":"affeldt-aist","date":"2021-03-25T05:42:43Z","comment":"There is maybe a need for one more pass of linting.\r\n"},{"author":"zstone1","date":"2021-06-08T04:17:33Z","comment":"Ok, three things done:\r\n1) I've created aliases for `U -> V` for each topology, and given the canonical filters, topologies, uniform, as appropriate. I kept all the same notations. I believe this is the requested change, but please correct me if I'm wrong.\r\n2) I've added a new function `restrict` which is just `patch` with `(fun=> point)`. I've kept the patch function. Is this ok, or would you prefer I do some more substantial renaming?\r\n3) I've proven that `restrict` in the uniform topology behaves like the restricted topology.\r\n\r\nAre there any other blockers for merging this?"},{"author":"affeldt-aist","date":"2021-06-18T10:13:46Z","comment":"I tried to use `pred` instead of `set` in `patch` following what was said during the last meeting."},{"author":"zstone1","date":"2021-06-26T13:33:47Z","comment":"Ah, those notations suggestions are a nice improvement. I will address these issues this week. \r\n\r\nSeparately, I had a realization that I can define `{uniform A -> V}` as the weak topology of `restrict_dep A : (X -> Y) -> ({x : X| x \\in A} -> Y)`. I believe this will save several hundred lines of proofs, but I can't be sure until I try. "},{"author":"zstone1","date":"2021-06-27T23:32:57Z","comment":"Alright, I believe I've updated all the issues you identified. Also, using the weak topology of the restriction map has saved saved nearly 300 lines, and removed many of the awkward internal lemmas, such as all the `explode` stuff. "},{"author":"CohenCyril","date":"2021-07-22T07:55:28Z","comment":"@zstone1 please never merge master into a PR, use rebase instead with squashing when necessary.\r\nHowever please do not touch it for now, I will be working on it it's ok with you."},{"author":"zstone1","date":"2021-08-27T21:17:10Z","comment":"Just wanted to check the status of this diff. Is there anything I can do here? "},{"author":"CohenCyril","date":"2021-08-30T09:42:53Z","comment":"> Just wanted to check the status of this diff. Is there anything I can do here?\r\n\r\nI am back from vacation, I will attend this matter asap now."},{"author":"CohenCyril","date":"2021-09-22T15:25:29Z","comment":"@zstone1 I pushed some refactorings in the branch `domain_restriction`, I need to do a proper rebase and update the changelog. May I force-push on your `zstone1:master` branch?"},{"author":"zstone1","date":"2021-09-22T16:08:01Z","comment":"Yes, do whatever you need."},{"author":"CohenCyril","date":"2021-10-30T01:16:59Z","comment":"Sorry, when the remote branch is `master` it makes things really error prone (for me)... I will reopen it under a new branch "}],"review_discussion":[{"author":"CohenCyril","file":"theories/topology.v","date":"2021-01-12T17:23:47Z","comment":"I believe this is `filter_from F explode_set`"},{"author":"zstone1","file":"theories/topology.v","date":"2021-01-13T17:28:39Z","comment":"Nice catch. I've made that change, and updated the proofs accordingly. "},{"author":"zstone1","file":"theories/topology.v","date":"2021-06-22T12:14:52Z","comment":"Should move this to a separate file. "},{"author":"CohenCyril","file":"CHANGELOG_UNRELEASED.md","date":"2021-06-26T10:09:03Z","comment":"Am I right that `{unif, U -> V}` is equivalent to `{restricted setT -> V}`?\r\nIf so `{restricted ...}` should be defined first and `{unif ...}` should simply be a notation for the specialization of the former."},{"author":"CohenCyril","file":"CHANGELOG_UNRELEASED.md","date":"2021-06-26T10:09:38Z","comment":"```suggestion\r\n  + lemma `restricted_cvgE`\r\n```"},{"author":"CohenCyril","file":"CHANGELOG_UNRELEASED.md","date":"2021-06-26T10:10:04Z","comment":"Additionally, I'm not fond of the extra comma when the notation is not ternary."},{"author":"CohenCyril","file":"theories/classical_sets.v","date":"2021-06-26T10:12:13Z","comment":"It would be nice to have the `bigcupD1` and `bigcapD1` as in [mathcomp `bigD1`](https://github.com/math-comp/math-comp/blob/10816c7d830a568d732c749831466ba8830ffe49/mathcomp/ssreflect/bigop.v#L1453-L1455)."},{"author":"CohenCyril","file":"theories/topology.v","date":"2021-06-26T10:15:05Z","comment":"I'm confused, did you mean\r\n> the supremum **topology** of `{restricted A -> f}` (not `-->`) for all `A` such that `fam A`\r\n\r\nor something like that?"},{"author":"CohenCyril","file":"theories/topology.v","date":"2021-06-26T10:16:12Z","comment":"More generally the documentation should read \r\n> the function space U -> V equipped with the topology [...]\r\n\r\nrather than just \"the topology\""},{"author":"CohenCyril","file":"theories/topology.v","date":"2021-06-26T10:16:22Z","comment":"```suggestion\r\n(* The default filter for an arbitrary element is the one obtained *)\r\n```"},{"author":"CohenCyril","file":"theories/topology.v","date":"2021-06-26T10:19:50Z","comment":"`explode` and `explode_set` are undocumented.\r\n- Either they are internal definitions that are not supposed to be exposed in the end-user implementation, and it would be nice to have a local comment stating that, but I get the impression it is not the case, am I right?\r\n- Or they should be documented in the header and maybe renamed, why not `fun_eq_on` actually? And if it makes sense provided with a notation `[set=1 f in A]` and ``[set=1` X in A]``? (the tick means a set is expected)"},{"author":"CohenCyril","file":"theories/topology.v","date":"2021-06-26T10:21:26Z","comment":"I was envisioning this as a notation rather than a definition."},{"author":"CohenCyril","file":"theories/topology.v","date":"2021-06-26T10:23:55Z","comment":"I'm curious as to why `pred U` rather than `set U`.\r\nI have got the feeling that the former indeed simplifies the proofs of \"internal lemmas\" of the theory of `patch`, while the second one simplifies its use.\r\n\r\nA mathcomp general rule of thumb is that simplifying use must be privileged over simplifying the establishment of the theory. The rationale behind that is that the theory is limited and on the dev side, while the use-cases are potentially unbounded (even though not visible at first) and on the user side, and we should always aim at simplifying the life of our users at any cost for ourselves (the less manipulation are left after use of the theory, the better)."},{"author":"CohenCyril","file":"theories/topology.v","date":"2021-06-26T10:27:16Z","comment":"This looks like it could be merged more neatly with the theory of compact sets.\r\nMaybe it is not worth dealing with this in this PR (I don't know) but if merged as such, we must add an issue to study this."},{"author":"CohenCyril","file":"CHANGELOG_UNRELEASED.md","date":"2021-06-26T10:29:10Z","comment":"Actually why two notations, why not `{uniform A -> V}` for both and the user who wants uniformity everywhere will write `{uniform setT U -> V}`"},{"author":"zstone1","file":"theories/topology.v","date":"2021-06-26T13:30:53Z","comment":"After writing more arzela ascoli stuff in the last few days, I'm inclined to agree. `pred` has some nice benefits, but when dealing the compact convergence, `pred` is harder than I was expecting. @affeldt-aist can speak more on this, perhaps? "},{"author":"zstone1","file":"theories/topology.v","date":"2021-06-26T13:40:11Z","comment":"This was some of the first stuff I wrote, for which I did not have much of a plan. I'm hoping that my idea define things in terms of weak topologies cleans this up. "},{"author":"affeldt-aist","file":"theories/topology.v","date":"2021-06-26T14:10:41Z","comment":"I tried `pred` because it was the proposal in the minutes of the meeting, because `set` caused disgracious definitions and proof steps, and because `pred` as proved to be a good design in other situations. Most library proofs felt more natural with `pred` (but no huge improvements) except `family_cvg_finite_covers` where an awkward `in_set` appears. If that kind of inconvenience were to repeat itself in more proofs, I think it is ok to roll back to `set` since the `asbool` stuff is indeed likely to stay inside library proofs. Your experience with Arzela-Ascoli sounds like a good stress test to decide this."},{"author":"zstone1","file":"theories/classical_sets.v","date":"2021-06-27T23:17:51Z","comment":"Agreed, although I would prefer to do it as a separate pull request. "},{"author":"zstone1","file":"theories/topology.v","date":"2021-06-27T23:24:48Z","comment":"I've added a todo. Is that sufficient for this PR? "},{"author":"affeldt-aist","file":"theories/classical_sets.v","date":"2021-07-22T08:14:53Z","comment":"I also missed them in another PR, hence PR #409"}],"tags":[],"commits":[]},{"author":"affeldt-aist","number":309,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":17,"deletions":8},{"file":"theories/classical_sets.v","status":"M","additions":17,"deletions":8}],"state":"merged","open_date":"2020-12-17T04:21:22Z","update_date":"2020-12-21T04:14:05Z","discussion":[],"review_discussion":[{"author":"CohenCyril","file":"theories/classical_sets.v","date":"2020-12-17T08:59:11Z","comment":"```suggestion\r\nLemma seteqP T (A B : set T) : (A = B) <-> (A `<=>` B).\r\n```"}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"146ef806dc9620783cfd7064f73173267bcd1d3a","message":"predeqP missing, as mentioned on Zulip, statement found in PR#282","date":"2020-12-18T05:07:45Z"}]},{"author":"affeldt-aist","number":308,"diff_summary":[{"file":"theories/normedtype.v","status":"M","additions":24,"deletions":43},{"file":"theories/sequences.v","status":"M","additions":24,"deletions":43},{"file":"theories/topology.v","status":"M","additions":24,"deletions":43}],"state":"merged","open_date":"2020-12-13T05:25:25Z","update_date":"2020-12-21T04:12:56Z","discussion":[{"author":"CohenCyril","date":"2020-12-21T04:13:22Z","comment":"@affeldt-aist I merged too quickly, there is a missing changelog entry."},{"author":"affeldt-aist","date":"2020-12-21T04:19:20Z","comment":"You mean that fact that we remove `Typeclasses Opaque fmap.` ?\r\nDoes the change of definition of `interior` qualify for the changelog?"},{"author":"CohenCyril","date":"2020-12-21T04:22:04Z","comment":"> You mean that fact that we remove `Typeclasses Opaque fmap.` ?\r\n\r\nYes, it has side effects: more TC are solved and this should be logged.\r\n\r\n> Does the change of definition of `interior` qualify for the changelog?\r\n\r\nNo, it is almost syntactically equal (even though the input is slightly different) and should be convertible, unifiable and pattern matchable the same in any context..."}],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"c9b36e973d909e938a385c885e2b43965432eb58","message":"remove typeclasses opaque fmap","date":"2020-12-17T15:56:23Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"f111cfe1a724d89db68007e6a36ce932564f1723","message":"minor cleaning\n\n- remove useless type information\n- remove outdated/superfluous comments\n- shorten a few proofs","date":"2020-12-17T15:56:27Z"}]},{"author":"affeldt-aist","number":307,"diff_summary":[{"file":"CHANGELOG.md","status":"M","additions":105,"deletions":90},{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":105,"deletions":90},{"file":"INSTALL.md","status":"M","additions":105,"deletions":90}],"state":"merged","open_date":"2020-12-12T03:45:26Z","update_date":"2020-12-12T04:37:10Z","discussion":[],"review_discussion":[{"author":"pi8027","file":"INSTALL.md","date":"2020-12-12T04:18:57Z","comment":"Here I guess it is better to say `= 1.11.0`."},{"author":"affeldt-aist","file":"INSTALL.md","date":"2020-12-12T04:22:19Z","comment":"(two occurrences)"}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"00e6783c09b80a3b68c98a946575c51df32c3e07","message":"changelog for 0.3.4","date":"2020-12-12T03:41:49Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"06a8c384883d417d310990cc992473198a6512b6","message":"update of install instructions","date":"2020-12-12T04:21:51Z"}]},{"author":"CohenCyril","number":306,"diff_summary":[{"file":".gitattributes","status":"A","additions":435,"deletions":203},{"file":".github/workflows/coq-action.yml","status":"A","additions":435,"deletions":203},{"file":".github/workflows/nix-action.yml","status":"A","additions":435,"deletions":203},{"file":".github/workflows/nix.yml","status":"A","additions":435,"deletions":203},{"file":".nix/coq-nix-toolbox.nix","status":"A","additions":435,"deletions":203},{"file":".nix/coq-overlays/mathcomp-analysis/default.nix","status":"A","additions":435,"deletions":203},{"file":".nix/fallback-config.nix","status":"A","additions":435,"deletions":203},{"file":".nix/nixpkgs.nix","status":"A","additions":435,"deletions":203},{"file":"README.md","status":"A","additions":435,"deletions":203},{"file":"config.nix","status":"A","additions":435,"deletions":203},{"file":"coq-nix-toolbox.nix","status":"A","additions":435,"deletions":203},{"file":"default.nix","status":"A","additions":435,"deletions":203},{"file":"index.md","status":"A","additions":435,"deletions":203},{"file":"meta.yml","status":"A","additions":435,"deletions":203},{"file":"package.nix","status":"A","additions":435,"deletions":203}],"state":"closed","open_date":"2020-12-11T16:16:44Z","update_date":"2022-01-18T16:11:58Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"CohenCyril","committer":"CohenCyril","hash":"df43dcbc862075dbcea7538bf356c36a527d1845","message":"update meta.yml","date":"2021-03-17T02:05:27Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"5b6a57b1ab65963c7e150a29956bfa67d1c99959","message":"update nix-config","date":"2021-03-17T02:05:27Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"85c3efed49dcc7fd27c41f680c8839b99f4d7d75","message":"correct defult.nix","date":"2021-03-17T02:05:27Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"2d2c1d19c27609f2fca0e6ceb17dcee03ac97d91","message":"temp","date":"2021-03-17T02:05:27Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"b50c773a54adcb7571468108df6015bd8ddc8cdc","message":"generated fallback","date":"2021-03-17T02:05:27Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"01b1b7dba1ac9f0c1683fe03698030fc9d0c225d","message":"tests","date":"2021-03-17T02:05:27Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"33a68a6fe389e7d8239b29928affe9435db69a82","message":"fixup","date":"2021-03-17T02:05:27Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"c5c0a35232629f1adff091e99bf84f4ae42d1622","message":"up","date":"2021-03-17T02:05:27Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"2ee37ba7c26289ae08b3bb3196164c1f5be9f749","message":"up","date":"2021-03-17T02:05:27Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"57f3503afff78af7112040ef93bea4e17b4388b4","message":"appropriate nix config","date":"2021-03-17T02:05:27Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"50194352784d71c779f514b316564f581ae34592","message":"fixup","date":"2021-03-17T02:05:27Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"0bda7c0252d4ecd35d388048c0beacc05bc347f5","message":"up","date":"2021-03-17T02:05:27Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"146e3506c9cb15a6dac9a8520fff663e1ea545c1","message":"fixes","date":"2021-03-17T02:05:27Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"57cc63df27c8e3c46c767f3a39c996f2ea8fbd0c","message":"up","date":"2021-03-17T02:05:27Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"e0767cad707cc653276c08e91fd0e81357ab62b7","message":"Revert \"appropriate nix config\"\n\nThis reverts commit 77044bb66f088092d31ab558d4e91d63ba990677.","date":"2021-03-17T02:05:27Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"3003d6efd8f2256c2e85929ffd874700bc3ba37a","message":"More is generated from meta","date":"2021-03-17T02:05:27Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"1f371421359f699538bf774d7afbb9bf6150ac5b","message":"better way of pinning the toolbox","date":"2021-03-17T02:05:27Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"c0b43a0a5b048cf39f9f7f4c80eb53c9ff5e0dad","message":"missing file","date":"2021-03-17T02:05:27Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"671fd0c0fa4bf5b9a3c405661a1245cf7450c457","message":"inlining tasks -> no setup","date":"2021-03-17T02:05:27Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"7d73e6bcc783e1837142c360f5ed9047186485c3","message":"fix","date":"2021-03-17T02:05:27Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"35d81388c0fc669a1cb61b1cf595c55649b63c6f","message":"up","date":"2021-03-17T02:05:27Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"cc4e0e8a7f8c826a4e0d0aaa85a430ffffb16a7e","message":"up","date":"2021-03-17T02:05:27Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"450617b356c6ef9d9cd2e50f1e908272f97696bf","message":"up","date":"2021-03-17T02:05:27Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"3c5d41d06b2596dc864bce40eab0f2918a5a9f13","message":"up","date":"2021-03-17T02:05:27Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"751623d53e563e3223115aa501442d230e91e371","message":"fixup","date":"2021-03-17T02:05:27Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"2fb41ce489b5a8cc5e8df847b04668ab0a46cba1","message":"up","date":"2021-03-17T02:05:27Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"8a380ff8a450d01b249dd1909d6abdf8f54a8609","message":"up","date":"2021-03-17T02:05:27Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"021977c5393be3283b2eda1c43cffc10a037c685","message":"+ tgt multinomials+ exclusion","date":"2021-03-17T02:05:27Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"b47f965b0e15e9c8393aee88f504cd1867c40c9f","message":"exclusions","date":"2021-03-17T02:05:27Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"d77a222c163ee8515d44cc59a2fa330bd87f00ae","message":"Revert \"exclusions\"\n\nThis reverts commit eed1c566cdc5e798d5873196fa95e8382eb81d26.","date":"2021-03-17T02:05:27Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"fe53d7b91b63113f7c117631a10a137718fcc398","message":"up","date":"2021-03-17T02:05:27Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"b24f58228891ebfb46f6485bfb3ff86475a617a5","message":"update","date":"2021-03-17T02:35:34Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"17c47cf99aa15548eb3edf247d37eb8b1bc1dd3f","message":"update","date":"2021-03-17T17:18:29Z"}]},{"author":"affeldt-aist","number":305,"diff_summary":[{"file":"theories/topology.v","status":"M","additions":82,"deletions":18}],"state":"closed","open_date":"2020-12-11T04:42:19Z","update_date":"2021-03-10T14:21:05Z","discussion":[{"author":"affeldt-aist","date":"2020-12-11T12:29:47Z","comment":"by adding a topological structure to zmodType, I am afraid I start doing things that look like PR #205 "},{"author":"CohenCyril","date":"2020-12-11T14:30:28Z","comment":"> by adding a topological structure to zmodType, I am afraid I start doing things that look like PR #205\r\n\r\nOne should not do that, you are adding a trivial topology where everything is open, indeed you defined singletons to be open, hence any set, as an arbitrary union of singletons is automatically open...\r\n\r\nMoreover, if you were to add the discrete topology instead, it would be incompatible with any other topology that we use... If one really need discrete topologies, they need to introduce an alias `discrete T := T` and have canonicals on `discrete` instead..."},{"author":"affeldt-aist","date":"2020-12-11T14:50:39Z","comment":"well, this was really to keep going and uncover more problems, if we are to have a topologicalType as a parameter of the pseudometric mixin then the end of the file needs to be changed for we cannot used `topologyOfEntourageMixin` anymore, am I wrong? "},{"author":"CohenCyril","date":"2020-12-11T15:00:36Z","comment":"> well, this was really to keep going and uncover more problems, if we are to have a topologicalType as a parameter of the pseudometric mixin then the end of the file needs to be changed for we cannot used `topologyOfEntourageMixin` anymore, am I wrong?\r\n\r\nI'm not sure I understand..."},{"author":"affeldt-aist","date":"2020-12-11T15:11:44Z","comment":"> \r\n> \r\n> > well, this was really to keep going and uncover more problems, if we are to have a topologicalType as a parameter of the pseudometric mixin then the end of the file needs to be changed for we cannot used `topologyOfEntourageMixin` anymore, am I wrong?\r\n> \r\n> I'm not sure I understand...\r\n\r\nI think that ~normedZ~ zmodType needs to be given its topological structure earlier"},{"author":"CohenCyril","date":"2020-12-11T15:23:42Z","comment":"> I think that ~normedZ~ zmodType needs to be given its topological structure earlier\r\n\r\nI do not understand why you say that, moreover `zmodType` should not have a canonical structure..."},{"author":"affeldt-aist","date":"2020-12-11T15:31:03Z","comment":"> > I think that ~normedZ~ zmodType needs to be given its topological structure earlier\r\n> \r\n> I do not understand why you say that, moreover `zmodType` should not have a canonical structure...\r\n\r\nIt was to type check the `open (ball_ Num.Def.normr x e)` statement at line 4364 (though now we know that we can't do with this axiom anyway)."},{"author":"CohenCyril","date":"2020-12-11T15:37:11Z","comment":"> It was to type check the `open (ball_ Num.Def.normr x e)` statement at line 4364 (though now we know that we can't do with this axiom anyway).\r\n\r\nThen all you need is the topology of a  normedZmodType structure, and it must and should not be canonical, but local, since we are defining a factory on this line."},{"author":"affeldt-aist","date":"2020-12-11T15:44:06Z","comment":"> > It was to type check the `open (ball_ Num.Def.normr x e)` statement at line 4364 (though now we know that we can't do with this axiom anyway).\r\n> \r\n> Then all you need is the topology of a normedZmodType structure, and it must and should not be canonical, but local, since we are defining a factory on this line.\r\n\r\nI'll go back to it asap once ax5 is fixed as you suggested above."},{"author":"affeldt-aist","date":"2020-12-21T03:35:19Z","comment":"We gave up extending the interface of pseudometric spaces. This PR is scheduled to be closed as it is. A related discussion is going on in PR #283 ."}],"review_discussion":[{"author":"mkerjean","file":"theories/topology.v","date":"2020-12-11T08:39:54Z","comment":"I am not sure to understand why `fct_open_ball`  should be true.  Isn't there some continuity hypothesis at stake ? "},{"author":"CohenCyril","file":"theories/topology.v","date":"2020-12-11T14:25:24Z","comment":"Actually, I don't even think continuity is enough. There is no reason for this to be true.\r\nIt seems we have to backtrack on our decision to add `ax5` and introduce `open_ball x e = (ball x e)°` instead... WDYT?"}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"9a59091140fb9a5b62495f15d295816308c1f873","message":"ax5 added to PseudoMetric.mixin_of\n\n- does not compile","date":"2020-12-11T04:43:21Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"c99d84cc3135dc0121a14be4c14962d4b8787558","message":"tentative progress\n\n- structure of topologicalType for zmodType to type-check\n  pseudoMetric_of_normedDomain","date":"2020-12-11T11:02:00Z"}]},{"author":"CohenCyril","number":303,"diff_summary":[{"file":".gitattributes","status":"A","additions":227,"deletions":154},{"file":".github/workflows/nix-action.yml","status":"A","additions":227,"deletions":154},{"file":".github/workflows/nix.yml","status":"A","additions":227,"deletions":154},{"file":".nix/config.nix","status":"A","additions":227,"deletions":154},{"file":".nix/nixpkgs.nix","status":"A","additions":227,"deletions":154},{"file":".nix/shellHook.sh","status":"A","additions":227,"deletions":154},{"file":"README.md","status":"A","additions":227,"deletions":154},{"file":"coq-mathcomp-analysis.opam","status":"A","additions":227,"deletions":154},{"file":"default.nix","status":"A","additions":227,"deletions":154},{"file":"dune","status":"A","additions":227,"deletions":154},{"file":"dune-project","status":"A","additions":227,"deletions":154},{"file":"index.md","status":"A","additions":227,"deletions":154},{"file":"meta.yml","status":"A","additions":227,"deletions":154}],"state":"closed","open_date":"2020-12-10T16:31:55Z","update_date":"2020-12-11T16:15:30Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"CohenCyril","committer":"CohenCyril","hash":"533f6dfd03e4c06ad92bf969b939ffdcaa6f3813","message":"update meta.yml","date":"2020-12-11T05:54:51Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"c12a87a59730184e2284f825f1145a1c0e4775b0","message":"fetching more commits","date":"2020-12-11T05:57:15Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"a171f42f82396473cc1c31093fb1f3953c93396b","message":"remove signing","date":"2020-12-11T06:00:41Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"abccf0698aa27c3997cef0353b27edfc832de5c6","message":"support shallow clones","date":"2020-12-11T15:52:53Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"15235deea13b281261356f869933c933d13aee67","message":"fixup","date":"2020-12-11T16:05:38Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"7aa5fe19abd7a629dff705ae614a5cbc2b41cb39","message":"fixup","date":"2020-12-11T16:12:12Z"}]},{"author":"CohenCyril","number":302,"diff_summary":[{"file":".nix/config.nix","status":"D","additions":230,"deletions":142},{"file":".nix/coq-overlays/mathcomp-analysis/default.nix","status":"D","additions":230,"deletions":142},{"file":".nix/nixpkgs.nix","status":"D","additions":230,"deletions":142},{"file":".nix/overlays/elpi/default.nix","status":"D","additions":230,"deletions":142},{"file":".nix/shellHook.sh","status":"D","additions":230,"deletions":142},{"file":"README.md","status":"D","additions":230,"deletions":142},{"file":"config.nix","status":"D","additions":230,"deletions":142},{"file":"coq-mathcomp-analysis.opam","status":"D","additions":230,"deletions":142},{"file":"default.nix","status":"D","additions":230,"deletions":142},{"file":"dune","status":"D","additions":230,"deletions":142},{"file":"dune-project","status":"D","additions":230,"deletions":142},{"file":"index.md","status":"D","additions":230,"deletions":142},{"file":"meta.yml","status":"D","additions":230,"deletions":142},{"file":"package.nix","status":"D","additions":230,"deletions":142}],"state":"closed","open_date":"2020-12-09T15:17:41Z","update_date":"2020-12-17T09:17:21Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"CohenCyril","committer":"CohenCyril","hash":"c2a1b9bf6b89398c021795e41fa9bac40c90bbab","message":"wip","date":"2020-12-09T00:33:44Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"e3e9188335c4614be3694ac9ac99c877e3b148a4","message":"wip half-works","date":"2020-12-09T03:20:25Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"8bbfb9bdde37e19aaa11e873ed6b2597ec0546fe","message":"new nix tools","date":"2020-12-09T15:57:13Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"29771ca9405285b864b34d4094cdbfac6befd931","message":"simplifications","date":"2020-12-09T16:21:02Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"bd3476237f3df2c45686f568818cbf7efadf91e1","message":"save ci-mode","date":"2020-12-09T18:53:16Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"53a1b7cd538712b55335763f0fe9365c3397328f","message":"fixup","date":"2020-12-10T01:57:22Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"6ee179cd2232805fcdf88ae9454538bf4f7793cb","message":"init and fetch","date":"2020-12-10T02:05:26Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"d55d6fc946f5e9c27776897a975d9fb3581260e6","message":"wip","date":"2020-12-10T02:15:55Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"ba91a3ffcf60ae622c638933432d82119e57a787","message":"fixup","date":"2020-12-10T14:25:21Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"45a8d2a707eea3c1ef20e474b631864b72efbd1c","message":"adding nix tests","date":"2020-12-10T16:18:03Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"e76a61685c5b6c3164b482787e1d9a1f78fda6f1","message":"generated attempt","date":"2020-12-10T16:22:17Z"}]},{"author":"CohenCyril","number":300,"diff_summary":[{"file":"shell.nix","status":"M","additions":1699,"deletions":1292},{"file":"theories/boolp.v","status":"M","additions":1699,"deletions":1292},{"file":"theories/classical_sets.v","status":"M","additions":1699,"deletions":1292},{"file":"theories/topology.v","status":"M","additions":1699,"deletions":1292}],"state":"open","open_date":"2020-12-09T08:49:23Z","update_date":"2022-04-21T00:26:37Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"CohenCyril","committer":"CohenCyril","hash":"0de75791d6aba718726d3b59336ec4382e67a1f9","message":"rewriting everything","date":"2020-03-10T18:15:58Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"b437a4017d83898d688a9415c608f5c435e9aa10","message":"wip","date":"2020-03-11T02:03:03Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"d0821298a97dd0e82ee5f05d15369188b9006808","message":"WIP","date":"2020-03-11T17:32:55Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"0a61da8d1756c53a540bf3034b16d65c5f4b538b","message":"almost there!","date":"2020-03-13T01:45:49Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"61e25f04d96c02a6f459dae9bc3984e9e1eacfd5","message":"wip","date":"2020-03-19T14:14:20Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"dd4b8cf63b07695b0196d56853994383d6f5dec0","message":"wip","date":"2020-03-23T14:12:48Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"1e446aa008ea1dc9ac90afcca245f60e8e322b32","message":"wip","date":"2020-03-23T14:49:06Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"80169ea6a4e285d3e87d07a375c3dc813a98eb37","message":"wip","date":"2020-03-23T17:32:41Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"8ae5a02905a5c492fece37dfbd3df9ddba50575f","message":"wip","date":"2020-03-24T12:24:28Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"d87d6d60fe1e20afac7c7fb7bf8453d0d7934e8d","message":"wip halfway through topological spaces","date":"2020-03-24T19:15:17Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"74230028e87ec2ac7dca54ad22704a82759347f3","message":"huge renaming","date":"2020-03-24T19:29:43Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"13f826a18ac70d6e76397b18f8ed1e64eb3c287e","message":"wip mx_topo","date":"2020-03-26T02:24:52Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"b574dee75363e3df5191fbbb6897df0823c10bae","message":"wip mx done","date":"2020-03-26T15:28:44Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"1363867ca2059e83035b1e21297d113deb0fa258","message":"wip lots of fixes","date":"2020-03-27T19:02:09Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"b4b4e22b7090f35800bcb4e1b12e3abeca228606","message":"nth wip","date":"2020-08-10T17:50:22Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"a9cfb4d275298665f17e20f607ff46966e5bcc21","message":"nonfunid","date":"2020-09-24T16:52:29Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"a20333840cdab4beb0d8dc628c0b31106f6b6262","message":"going forward","date":"2020-09-24T17:59:25Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"ac5319bdc1f6c473498b609f3bbb1053e81e5137","message":"backtracking!!","date":"2020-09-24T22:34:16Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"9a0553a9830406e09f9e12216031966a9d23b4d7","message":"wip","date":"2020-09-25T01:16:29Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"8091e66d1347ba07774b471e975b5c342575988f","message":"wip","date":"2020-10-01T15:40:34Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"55c7067e03963d294769b8a2d4a8e28c1afd116e","message":"wip","date":"2020-11-16T10:52:51Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"1bfb741cd412b572805081a580a3557a5623a9b1","message":"wip","date":"2020-12-09T08:48:15Z"}]},{"author":"affeldt-aist","number":299,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":77,"deletions":61},{"file":"theories/reals.v","status":"M","additions":77,"deletions":61}],"state":"merged","open_date":"2020-12-09T07:56:58Z","update_date":"2020-12-09T10:53:00Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"2fc3fff2cbac291457a5417782b4e77e1307005e","message":"minor generalizations from realType","date":"2020-12-09T07:55:55Z"}]},{"author":"CohenCyril","number":298,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":60,"deletions":61},{"file":"theories/normedtype.v","status":"M","additions":60,"deletions":61}],"state":"merged","open_date":"2020-12-09T00:07:47Z","update_date":"2020-12-09T04:46:09Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"CohenCyril","committer":"CohenCyril","hash":"c27ae4aab27158b4b94bedf7d6a85d81547a5688","message":"interval_of set is in fact the hull of a set","date":"2020-12-09T00:10:54Z"}]},{"author":"affeldt-aist","number":297,"diff_summary":[{"file":".github/workflows/coq-action.yml","status":"D","additions":372,"deletions":124},{"file":".travis.yml","status":"D","additions":372,"deletions":124},{"file":"AUTHORS.md","status":"D","additions":372,"deletions":124},{"file":"README.md","status":"D","additions":372,"deletions":124},{"file":"coq-mathcomp-analysis.opam","status":"D","additions":372,"deletions":124},{"file":"dune","status":"D","additions":372,"deletions":124},{"file":"dune-project","status":"D","additions":372,"deletions":124},{"file":"index.md","status":"D","additions":372,"deletions":124},{"file":"meta.yml","status":"D","additions":372,"deletions":124},{"file":"opam","status":"D","additions":372,"deletions":124}],"state":"merged","open_date":"2020-12-07T16:05:07Z","update_date":"2020-12-08T12:00:15Z","discussion":[{"author":"CohenCyril","date":"2020-12-08T12:00:26Z","comment":"Great :+1: "}],"review_discussion":[{"author":"CohenCyril","file":"meta.yml","date":"2020-12-07T16:37:02Z","comment":"Add Marie Kerjean and Kazuhiko Sakaguchi if they agree."},{"author":"affeldt-aist","file":"meta.yml","date":"2020-12-07T16:38:16Z","comment":"@mkerjean @pi8027 "},{"author":"CohenCyril","file":"meta.yml","date":"2020-12-07T16:38:16Z","comment":"This seems to suggest that an entry should be added to coq template for associated chats.\r\nCC: @Zimmi48"},{"author":"pi8027","file":"meta.yml","date":"2020-12-07T18:12:56Z","comment":"Yes, I agree."},{"author":"mkerjean","file":"meta.yml","date":"2020-12-07T18:31:05Z","comment":"I agree"},{"author":"CohenCyril","file":"meta.yml","date":"2020-12-07T18:34:53Z","comment":"We should document the whole list of dependency (`ssreflect`, `mathcomp-algebra`, ... whatever is pulled in by `mathcomp-field`)"},{"author":"Zimmi48","file":"meta.yml","date":"2020-12-07T20:01:10Z","comment":"Yes, we have such a badge for coq-community projects but not for outside projects. PRs (or issues) welcome!"},{"author":"affeldt-aist","file":"meta.yml","date":"2020-12-08T07:45:39Z","comment":"What about https://github.com/coq-community/templates/pull/82 ?"},{"author":"CohenCyril","file":"meta.yml","date":"2020-12-08T10:58:27Z","comment":"@affeldt-aist \r\n```suggestion\r\n  pub_title: Formalisation Tools for Classical Analysis\r\n```\r\n@drouhling's thesis is in english, let's not deter our english readers by putting the french \"by law\" title, and let's not give false hopes to french speakers, because they won't get far in french only :laughing: "}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"1dcfecdaa5a764fb093b8b02d1f0a693a32904c0","message":"generate files using Coq-community Templates","date":"2020-12-07T15:55:31Z"},{"author":"CohenCyril","committer":"web-flow","hash":"3321bbc3ebce2c46742cfa780babd288df0edea4","message":"Delete .travis.yml","date":"2020-12-07T16:36:01Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"9049b921e7323c7447e4154d9d88418632845fbe","message":"update authors information, complete dependencies","date":"2020-12-08T03:40:41Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"714e14ddfac8974a46eb9058bfe89fcf4fe2f3c0","message":"zulip badge from coq-templates\n\n- removed old opam file","date":"2020-12-08T10:35:14Z"},{"author":"affeldt-aist","committer":"web-flow","hash":"04f1e1adb8db43773e9d237d8c8a2ec164696b74","message":"Update meta.yml\n\nCo-authored-by: Cyril Cohen <CohenCyril@users.noreply.github.com>","date":"2020-12-08T10:59:26Z"}]},{"author":"affeldt-aist","number":296,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":392,"deletions":91},{"file":"theories/normedtype.v","status":"M","additions":392,"deletions":91}],"state":"merged","open_date":"2020-12-01T08:41:09Z","update_date":"2020-12-08T15:07:22Z","discussion":[],"review_discussion":[{"author":"CohenCyril","file":"theories/normedtype.v","date":"2020-12-04T01:47:41Z","comment":"The most important lemma is:\r\n`is_intervalP X : is_interval X <-> exists i, X = [set x | x \\in i]`"},{"author":"CohenCyril","file":"theories/normedtype.v","date":"2020-12-04T01:48:14Z","comment":"```suggestion\r\nLemma connected_intervalP (R : realType) (E : set R^o) :\r\n```\r\nor\r\n```suggestion\r\nLemma is_intervalPconnected (R : realType) (E : set R^o) :\r\n```\r\nswapping the two directions"},{"author":"CohenCyril","file":"theories/normedtype.v","date":"2020-12-04T10:17:19Z","comment":"The name looks wrong. Maybe `near_infty_natSinv_lt`"},{"author":"CohenCyril","file":"theories/normedtype.v","date":"2020-12-04T10:19:32Z","comment":"Should be `segment_closed`"},{"author":"CohenCyril","file":"theories/normedtype.v","date":"2020-12-04T10:19:43Z","comment":"Should be `segment_connected`"},{"author":"CohenCyril","file":"theories/normedtype.v","date":"2020-12-04T10:20:39Z","comment":"The name should start with `interval_`"},{"author":"CohenCyril","file":"theories/normedtype.v","date":"2020-12-04T10:20:49Z","comment":"The name should start with `interval_`"},{"author":"CohenCyril","file":"theories/normedtype.v","date":"2020-12-04T10:20:54Z","comment":"The name should start with `interval_`"},{"author":"CohenCyril","file":"theories/normedtype.v","date":"2020-12-04T10:20:59Z","comment":"The name should start with `interval_`"},{"author":"CohenCyril","file":"theories/normedtype.v","date":"2020-12-04T10:22:52Z","comment":"Nop, the former name was allright."},{"author":"CohenCyril","file":"CHANGELOG_UNRELEASED.md","date":"2020-12-08T13:00:01Z","comment":"```suggestion\r\n  + lemmas `interval_open` and `segment_closed`\r\n```"},{"author":"CohenCyril","file":"theories/normedtype.v","date":"2020-12-08T13:00:23Z","comment":"This is not a segment... (the word \"segment\" is dedicated to closed and bounded intervals)\r\n```suggestion\r\nLemma interval_open a b : open [set x : R^o | x \\in `]a, b[].\r\n```"},{"author":"CohenCyril","file":"theories/normedtype.v","date":"2020-12-08T13:02:57Z","comment":"I would generalize it to the case where `a` and/or `b` are infinities"},{"author":"CohenCyril","file":"theories/normedtype.v","date":"2020-12-08T13:04:28Z","comment":"There could also be a more general variant `interval_closed` covering the cases where `a` and/or `b` are infinities"}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"2814f285d63d95b7dceb8ad6ba589237e68165a4","message":"equvalence connected <-> be an interval","date":"2020-12-01T08:36:36Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"6f52ed0df48417c4340b7884ea2bf1ff166c85bd","message":"intermediate lemma and renaming","date":"2020-12-04T01:12:59Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"40477b6d5bf1dc318749a52373110298e81a97c6","message":"equivalence is_interval <-> interval\n\n- renaming following comments","date":"2020-12-04T10:13:18Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"cf9eed36ca3408c48172f96e6a58be6e2d6c7801","message":"fix naming following comments","date":"2020-12-04T10:34:55Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"54ab2805977cb57e979fb0c1e7dc2730ff09d1fd","message":"generalize interval_{open,closed}","date":"2020-12-08T14:35:04Z"}]},{"author":"affeldt-aist","number":295,"diff_summary":[{"file":"theories/measure.v","status":"M","additions":2,"deletions":2}],"state":"merged","open_date":"2020-11-27T14:00:36Z","update_date":"2020-11-27T15:32:05Z","discussion":[{"author":"CohenCyril","date":"2020-11-27T14:03:17Z","comment":"I had already fixed that :-/"},{"author":"affeldt-aist","date":"2020-11-27T14:06:27Z","comment":"> I had already fixed that :-/\r\n\r\nI am not sure what happened but I realized when rebasing integral_sketch that the fix has been partly undone. My bad. :cat2: "},{"author":"CohenCyril","date":"2020-11-27T14:08:21Z","comment":"> I am not sure what happened but I realized when rebasing integral_sketch that the fix has been partly undone. My bad.\r\n\r\nmaybe you undid more :cry:"}],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"5fa64e15d672ce6a95d835548477779815bd643a","message":"fix {ae m, P} notation","date":"2020-11-27T13:59:11Z"}]},{"author":"affeldt-aist","number":294,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"A","additions":1634,"deletions":0},{"file":"_CoqProject","status":"A","additions":1634,"deletions":0},{"file":"theories/cardinality.v","status":"A","additions":1634,"deletions":0},{"file":"theories/csum.v","status":"A","additions":1634,"deletions":0}],"state":"merged","open_date":"2020-11-27T12:32:02Z","update_date":"2021-05-04T15:06:42Z","discussion":[{"author":"affeldt-aist","date":"2021-03-19T05:46:04Z","comment":"Can we merge this?\r\nI understand that the two files introduced by this PR are not perfect but they are useful since\r\nthey support the construction of Lebesgue measure. Moreover, we can expect substantial\r\nimprovements in the mid-term about csum (wip). Otoh, proper support of finType and countType\r\nin cardinality.v are likely to take more time.\r\nI therefore marked these files clearly as WIP in their headers (and explained why) and propose\r\nto merge this PR now (after squashing a bit) and produce issues about improving them.\r\nWe can then go on using them actively and improve them more efficiently. @CohenCyril @strub \r\n\r\n\r\n"},{"author":"affeldt-aist","date":"2021-03-26T10:29:27Z","comment":"following the discussion we had about PR #311 we should maybe take `fer`, etc. out of this PR and put them back to `integral_sketch` for the time being, right? @CohenCyril "},{"author":"affeldt-aist","date":"2021-03-31T04:15:46Z","comment":"> following the discussion we had about PR #311 we should maybe take `fer`, etc. out of this PR and put them back to `integral_sketch` for the time being, right? @CohenCyril\r\n\r\nActually, maybe the whole section `funpos`..."},{"author":"CohenCyril","date":"2021-03-31T09:28:36Z","comment":"> > following the discussion we had about PR #311 we should maybe take `fer`, etc. out of this PR and put them back to `integral_sketch` for the time being, right? @CohenCyril\r\n> \r\n> Actually, maybe the whole section `funpos`...\r\n\r\nsure"}],"review_discussion":[{"author":"CohenCyril","file":"theories/cardinality.v","date":"2021-03-26T09:39:37Z","comment":"```suggestion\r\n  {in P &, injective f} -> {in Q &, injective h} -> {homo h : x / Q x >-> P x} ->\r\n```"},{"author":"CohenCyril","file":"theories/csum.v","date":"2021-03-31T09:27:43Z","comment":"This should be in ereal scope\r\n```suggestion\r\nNotation \"f \\|_ D\" := (fer f D) : ereal_scope.\r\n```"}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"b8641e4b978a24ce352ad565c58a16776ee4fff5","message":"sums over classical sets\n\n- contains an account of cardinality properties of classical sets (wip)\n- include review and fixes by Cyril following realseq meetings\n- originally motivated by the formalization of measure theory","date":"2021-05-03T11:19:27Z"},{"author":"strub","committer":"affeldt-aist","hash":"40f77a64c89c919f3b84bbbe83599ff173368815","message":"big_setU1 -> big_fsetU1","date":"2021-05-03T11:20:46Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"71b35019540699704fb842640e9b17e094f1bf3f","message":"documentation and cleaning\n\n- set_finite is defined with fset","date":"2021-05-03T11:21:37Z"}]},{"author":"affeldt-aist","number":293,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":6,"deletions":2},{"file":"theories/ereal.v","status":"M","additions":6,"deletions":2}],"state":"merged","open_date":"2020-11-27T03:12:05Z","update_date":"2020-11-27T15:56:47Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"13358a23a3ba3cc0674f07b6fcbdc98a3886bf21","message":"fix #292","date":"2020-11-27T03:11:25Z"}]},{"author":"CohenCyril","number":291,"diff_summary":[{"file":".github/workflows/nix.yml","status":"M","additions":2,"deletions":4}],"state":"merged","open_date":"2020-11-25T23:33:45Z","update_date":"2020-11-26T08:18:55Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"CohenCyril","committer":"web-flow","hash":"837e0f6845f50db2c3e092db2d56eacfb8c5de53","message":"Update nix.yml","date":"2020-11-25T23:33:41Z"},{"author":"CohenCyril","committer":"web-flow","hash":"6a9524c14550027ba105a747cc97077c7c367ce3","message":"Update nix.yml","date":"2020-11-25T23:35:15Z"},{"author":"CohenCyril","committer":"web-flow","hash":"2ea6f820cd1b2eeb0052e8bd51e82a0970c36131","message":"Update nix.yml","date":"2020-11-26T00:43:05Z"},{"author":"CohenCyril","committer":"web-flow","hash":"b3d2db55742f595e2a0d1413d66429c27ea962b6","message":"Update nix.yml","date":"2020-11-26T01:22:02Z"},{"author":"CohenCyril","committer":"web-flow","hash":"ea33ddd6a39c45d5e34345fb7905b0b8b77c91ce","message":"Update nix.yml","date":"2020-11-26T01:22:29Z"},{"author":"CohenCyril","committer":"web-flow","hash":"7dd6e8b21753897b7e145574ebe25f950ddf36e8","message":"Update nix.yml","date":"2020-11-26T01:23:00Z"}]},{"author":"mkerjean","number":290,"diff_summary":[{"file":"theories/derive.v","status":"M","additions":2,"deletions":1}],"state":"merged","open_date":"2020-11-25T15:55:12Z","update_date":"2020-11-27T15:55:40Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"mkerjean","committer":"mkerjean","hash":"28f88150b4c84a239285c87d2c8e373dbe3f19a5","message":"improve doc of theories/derive.v","date":"2020-11-25T15:52:31Z"}]},{"author":"CohenCyril","number":289,"diff_summary":[{"file":"config.nix","status":"M","additions":11,"deletions":6},{"file":"default.nix","status":"M","additions":11,"deletions":6}],"state":"merged","open_date":"2020-11-25T14:18:47Z","update_date":"2020-11-25T14:26:56Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"CohenCyril","committer":"CohenCyril","hash":"84fb3b022e41b1d15e78cc6a06b330b5cfa3e47a","message":"update nix","date":"2020-11-25T14:17:59Z"}]},{"author":"CohenCyril","number":288,"diff_summary":[{"file":"config.nix","status":"M","additions":38,"deletions":8},{"file":"default.nix","status":"M","additions":38,"deletions":8}],"state":"merged","open_date":"2020-11-25T13:56:44Z","update_date":"2020-11-25T14:11:02Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"CohenCyril","committer":"CohenCyril","hash":"201a4024ac08e8f057531ab813594a132a00a45e","message":"fixing the nix config","date":"2020-11-25T13:56:25Z"}]},{"author":"affeldt-aist","number":287,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":18,"deletions":2},{"file":"theories/ereal.v","status":"M","additions":18,"deletions":2}],"state":"merged","open_date":"2020-11-24T16:07:16Z","update_date":"2020-11-25T13:14:54Z","discussion":[],"review_discussion":[{"author":"CohenCyril","file":"theories/ereal.v","date":"2020-11-24T23:30:50Z","comment":"```suggestion\r\n      exists `|MQ|%R; rewrite realE normr_ge0; split => // x Hx; split.\r\n```"},{"author":"CohenCyril","file":"theories/ereal.v","date":"2020-11-24T23:30:58Z","comment":"```suggestion\r\n      exists `|MP|%R; rewrite realE normr_ge0; split => // x MPx; split.\r\n```"}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"903c9adb2d61329a3b04b5ce9b88fb0a29c01f5f","message":"multiplication and absolute value for ereal\n\n- tentative","date":"2020-11-24T16:04:34Z"},{"author":"CohenCyril","committer":"web-flow","hash":"c2ffa776e25dca8e548f91d12f0491478f99887b","message":"removing extra parentheseses","date":"2020-11-24T23:31:47Z"}]},{"author":"CohenCyril","number":286,"diff_summary":[{"file":".github/workflows/nix.yml","status":"M","additions":2,"deletions":2}],"state":"merged","open_date":"2020-11-20T15:25:27Z","update_date":"2020-11-20T15:45:42Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"CohenCyril","committer":"web-flow","hash":"5b93afd1e4c2159efe248b73aa5b73fc7c0c42ae","message":"update action","date":"2020-11-20T15:25:23Z"},{"author":"CohenCyril","committer":"web-flow","hash":"4d6ee9873e2ff00f55fdf74580f8da5a54dcfd99","message":"Update nix.yml","date":"2020-11-20T15:31:48Z"},{"author":"CohenCyril","committer":"web-flow","hash":"b71a905716a927a9408a2990e4c35ca0bd582174","message":"Update nix.yml","date":"2020-11-20T15:36:22Z"}]},{"author":"mkerjean","number":285,"diff_summary":[{"file":"theories/derive.v","status":"M","additions":8,"deletions":8}],"state":"merged","open_date":"2020-11-20T15:23:13Z","update_date":"2020-11-20T16:58:05Z","discussion":[{"author":"CohenCyril","date":"2020-11-20T15:46:10Z","comment":"Please rebase to benefit from the repaired nix action."},{"author":"CohenCyril","date":"2020-11-20T15:59:04Z","comment":":scream: :scream: :scream: :scream: :scream: :scream: :scream: "},{"author":"CohenCyril","date":"2020-11-20T15:59:44Z","comment":"> Please rebase to benefit from the repaired nix action.\r\n\r\nthis was not a rebase on the right branch :scream: "}],"review_discussion":[{"author":"CohenCyril","file":"theories/derive.v","date":"2020-11-20T15:46:50Z","comment":"```suggestion\r\nmove/eqoP => oid.\r\n```"},{"author":"CohenCyril","file":"theories/derive.v","date":"2020-11-20T15:47:25Z","comment":"```suggestion\r\nhave [|xn0] := real_le0P (normr_real x).\r\n```"},{"author":"CohenCyril","file":"theories/derive.v","date":"2020-11-20T15:47:57Z","comment":"```suggestion\r\nrewrite funeqE => x; apply/eqP;  have [|xn0] := real_le0P (normr_real x).\r\n```"},{"author":"CohenCyril","file":"theories/derive.v","date":"2020-11-20T15:48:19Z","comment":"```suggestion\r\nhave [|un0] := real_le0P (normr_real u).\r\n```"},{"author":"CohenCyril","file":"theories/derive.v","date":"2020-11-20T15:48:34Z","comment":"```suggestion\r\nhave [|vn0] := real_le0P (normr_real v).\r\n```"},{"author":"CohenCyril","file":"theories/derive.v","date":"2020-11-20T16:49:09Z","comment":"```suggestion\r\nrewrite funeqE => x; apply/eqP; have [|xn0] := real_le0P (normr_real x).\r\n```"}],"tags":[{"tag":"enhancement :sparkles:","description":"This issue/PR is about adding new features enhancing the library"}],"commits":[{"author":"mkerjean","committer":"CohenCyril","hash":"1bf386e0e8a5ea9c07de8104cd35287715902723","message":"diff_unique on numField","date":"2020-11-20T16:48:14Z"},{"author":"mkerjean","committer":"CohenCyril","hash":"2355a8b78aa08d629d657e7b6e3f2bd2c77cc7cf","message":"Update theories/derive.v\n\nCo-authored-by: Cyril Cohen <CohenCyril@users.noreply.github.com>","date":"2020-11-20T16:49:39Z"}]},{"author":"affeldt-aist","number":284,"diff_summary":[{"file":".travis.yml","status":"M","additions":547,"deletions":124},{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":547,"deletions":124},{"file":"opam","status":"M","additions":547,"deletions":124},{"file":"theories/measure.v","status":"M","additions":547,"deletions":124}],"state":"merged","open_date":"2020-11-17T07:23:08Z","update_date":"2020-11-27T12:48:02Z","discussion":[],"review_discussion":[{"author":"CohenCyril","file":"theories/measure.v","date":"2020-11-24T15:46:43Z","comment":"This can be removed I think."},{"author":"CohenCyril","file":"theories/measure.v","date":"2020-11-24T16:23:28Z","comment":"Do not do two cases!\r\n```coq\r\nLemma bigsetU_measurable I (r : seq I) (P : {pred I}) (F : I -> set T) :\r\n  (forall i, P i -> measurable (F i)) -> measurable (\\big[setU/set0]_(i <- r | P i) (F i)).\r\n```\r\ncovers every use case (in possible combination with `big_seq_cond` as usual."},{"author":"CohenCyril","file":"theories/measure.v","date":"2020-11-24T16:26:44Z","comment":"Isn't it the same as `bigsetU_measurable` before?"},{"author":"CohenCyril","file":"theories/measure.v","date":"2020-11-24T16:27:07Z","comment":"Isn't it the same as (the misnamed) `measurable_bigsetU` below?"},{"author":"CohenCyril","file":"theories/measure.v","date":"2020-11-24T16:27:47Z","comment":"```suggestion\r\nLemma semi_sigma_additive_is_additive\r\n```"},{"author":"CohenCyril","file":"theories/measure.v","date":"2020-11-24T16:29:07Z","comment":"```suggestion\r\nLemma sigma_additive_is_additive\r\n```"},{"author":"CohenCyril","file":"theories/measure.v","date":"2020-11-24T16:53:02Z","comment":"```suggestion\r\nNotation outer_measure f := (axioms f).\r\n```"},{"author":"CohenCyril","file":"theories/measure.v","date":"2020-11-24T16:53:19Z","comment":"```suggestion\r\nNotation additive_measure f := (axioms f).\r\n```"},{"author":"CohenCyril","file":"theories/measure.v","date":"2020-11-24T16:53:39Z","comment":"```suggestion\r\nLemma measure_is_additive_measure : additive_measure mu.\r\n```"}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"CohenCyril","hash":"5e37736b82c09a96ec5026161a8c265844d8883e","message":"add a hierarchy of structures to measure.v\n\nCo-authored-by: Cyril Cohen <cohen@crans.org>","date":"2020-11-26T08:29:16Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"5dde6c8a004a88c498c0c8ad5721b46f36eebb17","message":"address comments","date":"2020-11-26T08:29:16Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"c19034c1b75bb45e79b67dc22c33d3c60f2ebec7","message":"Fixing `ae`","date":"2020-11-26T08:29:16Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"bbe080cdf9b6fdc31a20a911b7c50532047a5552","message":"typo opam","date":"2020-11-27T10:39:19Z"},{"author":"CohenCyril","committer":"web-flow","hash":"b886350f8c30fea7895ecaf1cbf35f32b4eff720","message":"dropping coq 8.10","date":"2020-11-27T12:46:49Z"},{"author":"CohenCyril","committer":"web-flow","hash":"4810707d856afbb9f503abc7e48553c3de0f9fb9","message":"Update opam","date":"2020-11-27T12:47:04Z"}]},{"author":"mkerjean","number":283,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":152,"deletions":0},{"file":"theories/normedtype.v","status":"M","additions":152,"deletions":0}],"state":"merged","open_date":"2020-11-16T20:01:37Z","update_date":"2021-01-15T17:48:55Z","discussion":[{"author":"affeldt-aist","date":"2020-12-04T11:26:32Z","comment":"note that PR #268 has been merged so that you can get rid of a few lemmas about closure after rebasing\r\n"},{"author":"mkerjean","date":"2021-01-14T21:18:38Z","comment":"I addressed all your comments @CohenCyril. It could be ready to be merged - or maybe another look at the proofs is necessary."},{"author":"affeldt-aist","date":"2021-01-15T05:15:07Z","comment":"- (*TBA topology.v*) means to be added to topology.v?\r\n  + of course this can't be done right away because the lemmas here depend on ball_normE\r\n  + I observe that nbhs0_lt and nbhs'0_lt could be specialized to V = K^o\r\n- naming suggestions:\r\n  + closed_neigh_ball -> open_nbhs_closed_ball? (because we don't use the string \"neigh\")\r\n  + sub_closed_ball -> closed_ball_subset? (I think that the full string \"subset\" is privileged)\r\n  + ball_closed_ball -> subset_closed_ball? (might be easier to guess what the lemma provides)\r\n"}],"review_discussion":[{"author":"CohenCyril","file":"theories/normedtype.v","date":"2020-12-08T17:09:11Z","comment":"using `normfV` will radically simplify this proof."},{"author":"CohenCyril","file":"theories/normedtype.v","date":"2020-12-08T17:09:47Z","comment":"Please use `f`-suffixed lemmas rather than `r`-suffixed lemma when you have a field, it can only lead to shorter and clearer proofs."},{"author":"mkerjean","file":"theories/normedtype.v","date":"2020-12-08T17:11:13Z","comment":"That's what I was looking for thanks, I will delete `normrZV`."},{"author":"CohenCyril","file":"theories/normedtype.v","date":"2020-12-08T17:13:38Z","comment":"You can keep the lemma, and move it to the theory of `normedModType`, with the one-line-proof."},{"author":"CohenCyril","file":"theories/normedtype.v","date":"2020-12-08T17:13:54Z","comment":"I suggest\r\n```suggestion\r\nLemma closed_ballE (R : realFieldType) (V : normedModType R) (x : V)\r\n```"},{"author":"CohenCyril","file":"theories/normedtype.v","date":"2020-12-08T17:14:45Z","comment":"```suggestion\r\nLemma closed_ball_closed (R : realFieldType) (V : normedModType R) (x : V)\r\n```\r\nThe convention we try to enforce is lemma ending with a unary predicate are named with this predicate as a suffix."},{"author":"CohenCyril","file":"theories/normedtype.v","date":"2020-12-08T17:16:07Z","comment":"I suggest the name\r\n```suggestion\r\nLemma sub_ball_closed (R : numDomainType) (V : pseudoMetricType R) (x : V)\r\n```"},{"author":"CohenCyril","file":"theories/normedtype.v","date":"2020-12-08T17:16:46Z","comment":"```suggestion\r\nLemma sub_closed_ball (R : realFieldType) (M : normedModType R) (x : M)\r\n```"},{"author":"CohenCyril","file":"theories/normedtype.v","date":"2020-12-08T17:20:49Z","comment":"I would remove this lemma and replace it when needed by two lemmas:\r\n1. `(closed_ball x r)^° = ball x r` \r\n2. `r > 0 -> open_nbhs x (ball x r)`\r\n"},{"author":"CohenCyril","file":"theories/normedtype.v","date":"2020-12-08T17:22:51Z","comment":"BTW, the preferred usage of `{posnum R}` is not to put it as assumption because it is contaminating and we prefer to be able to partially instantiate lemmas with numbers **without** proofs of positivity...\r\nWe phrase it using `forall r, r > 0 -> stuff` and use `=> _/posnumP[r]` in the goal instead, side conditions that are solvable are automatically discharged."},{"author":"mkerjean","file":"theories/normedtype.v","date":"2020-12-08T19:35:24Z","comment":"Do you suggest that `closed_ballE` be rewritten this way too, and `open_nbhs_ball` too ?"},{"author":"CohenCyril","file":"theories/normedtype.v","date":"2020-12-08T21:18:23Z","comment":"sure"},{"author":"CohenCyril","file":"theories/normedtype.v","date":"2020-12-08T21:18:59Z","comment":"`e` should be positive or this is trivial."},{"author":"CohenCyril","file":"theories/normedtype.v","date":"2020-12-08T21:20:58Z","comment":"```suggestion\r\nProof. by move=> x_neq0; rewrite normmZ normfV normr_id mulVf// normr_eq0. Qed.\r\n```"},{"author":"mkerjean","file":"theories/normedtype.v","date":"2020-12-18T19:04:23Z","comment":"I stumble on a loop here : to prove that balls are open I need to use that balls are open ... Why is the interior of `A` defined as the set of points having an *open* neighborhood inside `A`, and not just a neighborhood ? I am used to the second definition, which would allow to prove that balls are open. "},{"author":"mkerjean","file":"theories/normedtype.v","date":"2020-12-18T20:33:17Z","comment":"If there is indeed a loop I would be in favor of not splitting the lemmas as suggested by @CohenCyril above, to merge this PR soonish and open a new one to work on open balls."},{"author":"CohenCyril","file":"theories/normedtype.v","date":"2020-12-19T15:22:28Z","comment":"There is no loop, here is the proof.\r\n```suggestion\r\nLemma ball_open (R : numDomainType) (V : normedModType R) (x : V)\r\n      (r : R) : 0 < r -> open (ball x r).\r\nProof.\r\nrewrite openE -ball_normE /interior => r0 y Bxy; near=> z.\r\nrewrite /= (le_lt_trans (@ler_dist_add _ _ y _ _))// addrC -ltr_subr_addr.\r\nby near: z; apply: cvg_dist; rewrite // subr_gt0.\r\nGrab Existential Variables. all: end_near. Qed.\r\n```\r\n\r\nAn alternative, and potentially shorter, proof would go through the continuity of the composition of addition and norm."},{"author":"mkerjean","file":"theories/normedtype.v","date":"2020-12-21T10:23:10Z","comment":"What was the issue with my proof ? Is the use of `nbhsE` problematic ? "},{"author":"mkerjean","file":"theories/normedtype.v","date":"2020-12-21T20:02:17Z","comment":"Any help welcomed, I don't know how to prove this with near notations."}],"tags":[],"commits":[{"author":"mkerjean","committer":"mkerjean","hash":"9cab8c94edfc372a3c6d10ba7aa192e2747b8580","message":"closed_ball\n\nCo-Auhored-By: Théo Vignon\n\nCo-Authored-By: Cyril Cohen <CohenCyril@users.noreply.github.com>\n\nCo-Authored-By: Reynald Affeldt @affeldt-aist\n\nCo-Authored-By: @pi8027","date":"2021-01-14T21:13:44Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"90f2baff90f521cb50a97e26be07c5daa2661c2e","message":"proof-reading\n\n- add changelog\n- closed_neigh_ball' and closed_neigh_ball were the same lemmas so I removed the longer one\n- minor proof compression and nitpicking\n- rename closed_ball_int to interior_closed_ballE\n  + because the _int suffix is maybe unclear\n- move a piece of documentation in the header","date":"2021-01-15T05:11:38Z"},{"author":"mkerjean","committer":"mkerjean","hash":"b97664ffef9fd7ef031a2005939fafda4468f02c","message":"renaming","date":"2021-01-15T16:19:46Z"}]},{"author":"CohenCyril","number":282,"diff_summary":[{"file":"shell.nix","status":"M","additions":1934,"deletions":1248},{"file":"theories/boolp.v","status":"M","additions":1934,"deletions":1248},{"file":"theories/classical_sets.v","status":"M","additions":1934,"deletions":1248},{"file":"theories/topology.v","status":"M","additions":1934,"deletions":1248}],"state":"open","open_date":"2020-11-16T10:54:00Z","update_date":"2022-04-21T00:26:37Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"CohenCyril","committer":"CohenCyril","hash":"0de75791d6aba718726d3b59336ec4382e67a1f9","message":"rewriting everything","date":"2020-03-10T18:15:58Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"b437a4017d83898d688a9415c608f5c435e9aa10","message":"wip","date":"2020-03-11T02:03:03Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"d0821298a97dd0e82ee5f05d15369188b9006808","message":"WIP","date":"2020-03-11T17:32:55Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"0a61da8d1756c53a540bf3034b16d65c5f4b538b","message":"almost there!","date":"2020-03-13T01:45:49Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"61e25f04d96c02a6f459dae9bc3984e9e1eacfd5","message":"wip","date":"2020-03-19T14:14:20Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"dd4b8cf63b07695b0196d56853994383d6f5dec0","message":"wip","date":"2020-03-23T14:12:48Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"1e446aa008ea1dc9ac90afcca245f60e8e322b32","message":"wip","date":"2020-03-23T14:49:06Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"80169ea6a4e285d3e87d07a375c3dc813a98eb37","message":"wip","date":"2020-03-23T17:32:41Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"8ae5a02905a5c492fece37dfbd3df9ddba50575f","message":"wip","date":"2020-03-24T12:24:28Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"d87d6d60fe1e20afac7c7fb7bf8453d0d7934e8d","message":"wip halfway through topological spaces","date":"2020-03-24T19:15:17Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"74230028e87ec2ac7dca54ad22704a82759347f3","message":"huge renaming","date":"2020-03-24T19:29:43Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"13f826a18ac70d6e76397b18f8ed1e64eb3c287e","message":"wip mx_topo","date":"2020-03-26T02:24:52Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"b574dee75363e3df5191fbbb6897df0823c10bae","message":"wip mx done","date":"2020-03-26T15:28:44Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"1363867ca2059e83035b1e21297d113deb0fa258","message":"wip lots of fixes","date":"2020-03-27T19:02:09Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"b4b4e22b7090f35800bcb4e1b12e3abeca228606","message":"nth wip","date":"2020-08-10T17:50:22Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"a9cfb4d275298665f17e20f607ff46966e5bcc21","message":"nonfunid","date":"2020-09-24T16:52:29Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"a20333840cdab4beb0d8dc628c0b31106f6b6262","message":"going forward","date":"2020-09-24T17:59:25Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"ac5319bdc1f6c473498b609f3bbb1053e81e5137","message":"backtracking!!","date":"2020-09-24T22:34:16Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"9a0553a9830406e09f9e12216031966a9d23b4d7","message":"wip","date":"2020-09-25T01:16:29Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"8091e66d1347ba07774b471e975b5c342575988f","message":"wip","date":"2020-10-01T15:40:34Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"55c7067e03963d294769b8a2d4a8e28c1afd116e","message":"wip","date":"2020-11-16T10:52:51Z"}]},{"author":"CohenCyril","number":281,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":172,"deletions":143},{"file":"theories/classical_sets.v","status":"M","additions":172,"deletions":143},{"file":"theories/derive.v","status":"M","additions":172,"deletions":143},{"file":"theories/ereal.v","status":"M","additions":172,"deletions":143},{"file":"theories/landau.v","status":"M","additions":172,"deletions":143},{"file":"theories/measure.v","status":"M","additions":172,"deletions":143},{"file":"theories/normedtype.v","status":"M","additions":172,"deletions":143},{"file":"theories/reals.v","status":"M","additions":172,"deletions":143},{"file":"theories/sequences.v","status":"M","additions":172,"deletions":143},{"file":"theories/summability.v","status":"M","additions":172,"deletions":143},{"file":"theories/topology.v","status":"M","additions":172,"deletions":143}],"state":"merged","open_date":"2020-11-13T23:10:49Z","update_date":"2020-11-28T03:46:07Z","discussion":[{"author":"affeldt-aist","date":"2020-11-18T04:24:58Z","comment":">     * unless applied, where `/=` will simplify.\r\n> \r\n>     * unless one uses `rewrite /mkset`.\r\n\r\nTo confirm. Looking at the diff it seems that we now have from time to time to\r\ndo explicit unfolds and simplifys. Does it mean that this solution is a compromise?"},{"author":"CohenCyril","date":"2020-11-20T16:59:53Z","comment":"> Does it mean that this solution is a compromise?\r\n\r\nTo me these unfolding and simplify are necessary steps to have enough control, and not a compromise."}],"review_discussion":[],"tags":[],"commits":[{"author":"CohenCyril","committer":"affeldt-aist","hash":"d0badc994ef6d3c9779480d7e23b558772aa775f","message":"Making sure `[set x | P]` notations are not expanded eagerly\n\n- unless applied, where `/=` will simplify.\n- unless one uses `rewrite /mkset`.","date":"2020-11-28T03:05:14Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"429e5824ccb5191cfb162a5351f2c5092eebb941","message":"update changelog","date":"2020-11-28T03:05:14Z"}]},{"author":"affeldt-aist","number":280,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":9,"deletions":1},{"file":"CONTRIBUTING.md","status":"M","additions":9,"deletions":1},{"file":"theories/classical_sets.v","status":"M","additions":9,"deletions":1}],"state":"merged","open_date":"2020-11-12T10:53:07Z","update_date":"2020-11-24T16:57:02Z","discussion":[],"review_discussion":[{"author":"CohenCyril","file":"theories/classical_sets.v","date":"2020-11-20T17:12:37Z","comment":"The construction `_ !=set0` corresponds to suffix `nonempty` and not to suffix `neq0` (for which `_ != set0` does).\r\n"}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"d6991035f4c6ee114bee037c971ad210462cd0b6","message":"rename subset_empty","date":"2020-11-24T15:29:44Z"}]},{"author":"affeldt-aist","number":279,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":112,"deletions":4},{"file":"theories/boolp.v","status":"M","additions":112,"deletions":4},{"file":"theories/classical_sets.v","status":"M","additions":112,"deletions":4},{"file":"theories/topology.v","status":"M","additions":112,"deletions":4}],"state":"merged","open_date":"2020-11-12T10:29:03Z","update_date":"2020-12-08T12:52:39Z","discussion":[],"review_discussion":[{"author":"CohenCyril","file":"theories/topology.v","date":"2020-11-24T16:10:13Z","comment":"```suggestion\r\nLemma component_connected (x : T) : connected (component x).\r\n```"},{"author":"CohenCyril","file":"theories/topology.v","date":"2020-11-24T16:10:47Z","comment":"```suggestion\r\nLemma bigcup_connected I (A : I -> set T) (P : I -> Prop) :\r\n```"},{"author":"CohenCyril","file":"theories/topology.v","date":"2020-11-24T16:54:59Z","comment":"The precondition `\\bigcap_(i in P) (A i) !=set0` looks a bit too strong to me...\r\nDoesn't  ``forall i j, A i `&` A j !=set0`` suffice?"},{"author":"CohenCyril","file":"theories/topology.v","date":"2020-11-24T16:55:52Z","comment":"```suggestion\r\nDefinition connected_component (x : T) := \\bigcup_(X in [set C | connected C /\\ C x]) X.\r\n```"},{"author":"affeldt-aist","file":"theories/topology.v","date":"2020-11-25T04:26:55Z","comment":"The references I am looking at indicate that the `A i`'s must share a point. (Edit: there are indeed other presentations.)"}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"1ea1100545e3d81796b36665945080a1561dab23","message":"tentative definition of connected component","date":"2020-12-01T04:27:13Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"5fd3d43acdf76231d3926bf8e232a4dba3d33b3d","message":"renaming\n\nCo-authored-by: Cyril Cohen <cohen@crans.org>","date":"2020-12-01T04:27:13Z"}]},{"author":"affeldt-aist","number":278,"diff_summary":[{"file":"CHANGELOG.md","status":"M","additions":133,"deletions":125},{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":133,"deletions":125},{"file":"INSTALL.md","status":"M","additions":133,"deletions":125},{"file":"opam","status":"M","additions":133,"deletions":125}],"state":"merged","open_date":"2020-11-11T15:06:18Z","update_date":"2020-11-11T15:54:07Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"5c25df4fdf0019849b9b3954702af792621466cb","message":"changelog for version 0.3.3","date":"2020-11-11T14:16:02Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"7a688d4d022b72b393955755fe9e1f2f889b0d13","message":"update opam and INSTALL.md","date":"2020-11-11T15:04:55Z"}]},{"author":"affeldt-aist","number":276,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"A","additions":334,"deletions":293},{"file":"_CoqProject","status":"A","additions":334,"deletions":293},{"file":"theories/derive.v","status":"A","additions":334,"deletions":293},{"file":"theories/landau.v","status":"A","additions":334,"deletions":293},{"file":"theories/nngnum.v","status":"A","additions":334,"deletions":293},{"file":"theories/normedtype.v","status":"A","additions":334,"deletions":293},{"file":"theories/posnum.v","status":"A","additions":334,"deletions":293},{"file":"theories/prodnormedzmodule.v","status":"A","additions":334,"deletions":293}],"state":"merged","open_date":"2020-11-11T04:53:23Z","update_date":"2020-11-11T11:02:49Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"f0f9ff9ffbbc877f7fcb780dc3abc3fa88a9027e","message":"Minor clarification of the file organization\n\nProblem: {nngnum _} is in prodnormedzmodule.v where it does not\nreally belong, the theories of bigmax lemmas using {nngnum _}\ndoes not really belong to normedtype.v\n\nContents:\n- add the `nngnum.v` file for the `{nonneg _}` type and its related\n  theories\n- minor fixes in `posnum.v`: remove from the documentation the mention\n  of `posreal` which seems to have disappeared, typos\n\nNB: prodnormedzmodule.v is a short file that has been\nintroduced when rebasing on top of MathComp 1.11, there is\nanother theory of bigmax/bigmin lemmas in normedtype.v that does\nnot depend on {nngnum _}, let's see latter what to do about these","date":"2020-11-11T04:56:48Z"}]},{"author":"pi8027","number":275,"diff_summary":[{"file":".github/workflows/coq-action.yml","status":"M","additions":132,"deletions":173},{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":132,"deletions":173},{"file":"INSTALL.md","status":"M","additions":132,"deletions":173},{"file":"README.md","status":"M","additions":132,"deletions":173},{"file":"_CoqProject","status":"M","additions":132,"deletions":173},{"file":"config.nix","status":"M","additions":132,"deletions":173},{"file":"coq-mathcomp-analysis.opam","status":"M","additions":132,"deletions":173},{"file":"meta.yml","status":"M","additions":132,"deletions":173},{"file":"theories/boolp.v","status":"M","additions":132,"deletions":173},{"file":"theories/classical_sets.v","status":"M","additions":132,"deletions":173},{"file":"theories/derive.v","status":"M","additions":132,"deletions":173},{"file":"theories/ereal.v","status":"M","additions":132,"deletions":173},{"file":"theories/forms.v","status":"M","additions":132,"deletions":173},{"file":"theories/landau.v","status":"M","additions":132,"deletions":173},{"file":"theories/normedtype.v","status":"M","additions":132,"deletions":173},{"file":"theories/reals.v","status":"M","additions":132,"deletions":173},{"file":"theories/topology.v","status":"M","additions":132,"deletions":173}],"state":"merged","open_date":"2020-11-10T10:01:57Z","update_date":"2020-12-21T02:14:59Z","discussion":[{"author":"mkerjean","date":"2020-11-10T10:21:02Z","comment":"> This PR makes MathComp analysis compatible with the master branch of MathComp and [math-comp/real-closed#28](https://github.com/math-comp/real-closed/pull/28).\r\n> \r\n> CC: @affeldt-aist @mkerjean\r\n\r\nThanks ! So `inE` should be replaced by `in_ivt` but not textually ? `inE` can't be adapted to include `in_ivt` ?"},{"author":"pi8027","date":"2020-11-10T10:34:26Z","comment":"@mkerjean Performing `rewrite inE` for `x \\in i` where `i` is an interval now gives us `[x, x] <= i` where `<=` is the subset relation for intervals. So we have to use `in_itv` instead. https://github.com/math-comp/math-comp/blob/72c13992b8961f288c412414fda206213486e25b/mathcomp/algebra/interval.v#L243\r\n\r\nI think now you can rebase your PR #205 on top of this PR or otherwise `cherry-pick` my commit in your PR, to test your PR with the master branch of MathComp."},{"author":"mkerjean","date":"2020-11-10T10:41:49Z","comment":"> @mkerjean Performing `rewrite inE` for `x \\in i` where `i` is an interval now gives us `[x, x] <= i` where `<=` is the subset relation for intervals. So we have to use `in_itv` instead. https://github.com/math-comp/math-comp/blob/72c13992b8961f288c412414fda206213486e25b/mathcomp/algebra/interval.v#L243\r\n\r\nand isn't the fact that `inE` can't apply to intervals an issue for other developments over MathComp ? Do you think this can be corrected at the level of `interval.v` ? "},{"author":"pi8027","date":"2020-11-10T11:38:26Z","comment":"@mkerjean For concrete intervals whose bounds are known to be one of unbounded, open, or close, the former behavior of `inE` is preferable indeed. However, the new interval library (math-comp/math-comp#458) provides a way to reason about intervals abstractly. Intervals are now canonically a `latticeType` (if the underlying type `T` is a `latticeType`) and it allows us to reduce problems about intervals to problems about a lattice. In this case, I think that the new behavior of `inE` is preferable. So I would say it is not an issue we should fix on the MathComp side..."},{"author":"pi8027","date":"2020-11-10T11:48:22Z","comment":"I think @CohenCyril may have an opinion on this issue."},{"author":"CohenCyril","date":"2020-11-10T12:55:37Z","comment":"Indeed, there seems to be a tension between generic intervals `i` and concrete intervals (e.g. `` `[a, b]``), if we want `inE` to be readable even for abstract intervals, preferring the form `` `[x, x] <= i`` is unavoidable... however \r\n1. all are convertible, e.g. all of ``x \\in `[a, b]``, `` `[x, x] <= i`` and `a <= x <= b` are convertible (you could use `inE`, followed by `subitvE` and then there are missing converibiliy lemmas between `<=` and in `le_bound` and `<=` in the underlying ordered Type (I suggest name `leEbound`) and same for `<`). CC @pi8027 \r\n2. if you have an assumption of the form ``xab : x \\in `[a, b]``, you should avoid using either `inE` or `in_itv` and use `(itvP xab)` instead."},{"author":"CohenCyril","date":"2020-12-09T01:31:33Z","comment":"I am switching this PR back to  a draft to prevent untimely merges.\r\nThe reason is that I believe we should release one last version of math-comp/analysis for coq + mathcomp 1.11 with #298 before we merge this one for good.\r\n"},{"author":"pi8027","date":"2020-12-14T12:10:22Z","comment":"`INSTALL.md` has to be changed."},{"author":"pi8027","date":"2020-12-16T13:42:01Z","comment":"I'm fine with the changes done by Cyril and Reynald. Shall we merge? (I hope to take a look at #205 tomorrow. Merging this PR would help its process.)"},{"author":"affeldt-aist","date":"2020-12-21T02:14:37Z","comment":"Let's merge since it is waited for for PR #205."}],"review_discussion":[{"author":"pi8027","file":"theories/normedtype.v","date":"2020-12-09T01:21:57Z","comment":"@CohenCyril Thanks for fixing! Splitting `Interval a b` into two intervals using `itv_splitI` would be an easier way to prove this and `interval_closed`. (But we can do it later.)"},{"author":"CohenCyril","file":"theories/normedtype.v","date":"2020-12-09T01:29:27Z","comment":"Sure, I discovered a problem with the uses of `eq_set` here that I am a bit worried about... but, later as well..."}],"tags":[],"commits":[{"author":"pi8027","committer":"CohenCyril","hash":"7588356c33b8f46a5030072193801576b7a2feaf","message":"Compatible with MathComp master (and hopefully 1.12)","date":"2020-12-12T05:11:57Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"c28b89b44a093027ffeb6eaae63ed0c6413a4d15","message":"so that it compiles with mathcomp 1.12","date":"2020-12-12T05:11:59Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"84fb05005346a8c65247b15b1cede651cb263c11","message":"regenerate metadata","date":"2020-12-12T05:11:59Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"b055efe0dfec41c8f541d281bd4243cc4a59b192","message":"fixes\n\n- fixes #277\n- add the same fail-on-warnings as MathComp\n- fixes #259","date":"2020-12-14T08:59:52Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"33b2098a583c11b372bb474e735a56dc7cbcfc6f","message":"remove lemmas and update INSTALL.md\n\n- ltr_distW and ler_distW are now subsumed by MathComp lemmas","date":"2020-12-15T01:34:55Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"a5101620d684ceceacaf1293f956acaf52ef00de","message":"add changelog and fix INSTALL.md","date":"2020-12-17T14:55:11Z"}]},{"author":"affeldt-aist","number":273,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":26,"deletions":0},{"file":"theories/classical_sets.v","status":"M","additions":26,"deletions":0}],"state":"merged","open_date":"2020-11-06T10:21:52Z","update_date":"2020-11-18T01:13:42Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"e3b82be7555c89d6091a721b5b4a9c2da4a2006d","message":"a trivIset definition for classical sets","date":"2020-11-17T07:11:17Z"}]},{"author":"affeldt-aist","number":272,"diff_summary":[{"file":"README.md","status":"M","additions":2,"deletions":0}],"state":"merged","open_date":"2020-11-06T08:36:54Z","update_date":"2020-11-09T02:48:22Z","discussion":[{"author":"mkerjean","date":"2020-11-06T12:59:11Z","comment":"@affeldt-aist Yes if you think they can be useful (examples are outdated already)"}],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"44aaf7fa45ec95065211fee747ee1708dc4bb9b1","message":"add link to Marie's slides at TYPES 2019","date":"2020-11-06T08:35:46Z"}]},{"author":"affeldt-aist","number":270,"diff_summary":[{"file":"FILES.md","status":"D","additions":21,"deletions":593},{"file":"README.md","status":"D","additions":21,"deletions":593},{"file":"_CoqProject","status":"D","additions":21,"deletions":593},{"file":"theories/Rbar.v","status":"D","additions":21,"deletions":593}],"state":"merged","open_date":"2020-11-05T03:49:27Z","update_date":"2020-11-05T13:29:41Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"1ea10a869ce9408c776cd5826c5847476b972956","message":"update the readme and file maintenance\n\nfixes #3\n\n- `FILES.md` renamed to `ORIGINAL_FILES.md`\n  + because it is not about the current files anymore\n  + `README.org` updated\n- remove `Rbar.v`\n- add a Documentation entry\n  + with publications","date":"2020-11-05T03:48:28Z"}]},{"author":"affeldt-aist","number":269,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":1175,"deletions":1161},{"file":"theories/ereal.v","status":"M","additions":1175,"deletions":1161},{"file":"theories/normedtype.v","status":"M","additions":1175,"deletions":1161},{"file":"theories/topology.v","status":"M","additions":1175,"deletions":1161}],"state":"merged","open_date":"2020-10-27T14:24:50Z","update_date":"2020-10-29T10:59:58Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"a468bd9301c1ec1960a2d982a3627d02a87d8717","message":"move topology of ereal to ereal.v","date":"2020-10-28T03:47:30Z"}]},{"author":"affeldt-aist","number":268,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":323,"deletions":58},{"file":"theories/boolp.v","status":"M","additions":323,"deletions":58},{"file":"theories/classical_sets.v","status":"M","additions":323,"deletions":58},{"file":"theories/topology.v","status":"M","additions":323,"deletions":58}],"state":"merged","open_date":"2020-10-20T08:46:36Z","update_date":"2020-11-11T11:06:24Z","discussion":[{"author":"CohenCyril","date":"2020-11-10T14:32:30Z","comment":"Fixed and rebased"}],"review_discussion":[{"author":"CohenCyril","file":"theories/topology.v","date":"2020-11-02T12:38:39Z","comment":"Isn't it `cluster (globally E)`?"},{"author":"affeldt-aist","file":"theories/topology.v","date":"2020-11-05T05:05:28Z","comment":"Couldn't yet figure out both directions."},{"author":"mkerjean","file":"theories/topology.v","date":"2020-11-05T20:10:18Z","comment":"Isn't `cluster (globally E)` exactly `closure E` ? "},{"author":"affeldt-aist","file":"theories/topology.v","date":"2020-11-06T02:41:59Z","comment":"Indeed:\r\n```\r\nLemma closure_cluster_globally E : closure E = cluster (globally E).\r\nProof.\r\nrewrite closureE clusterE predeqE => t; split=> [Et A EA|Et A [cA EA]].\r\n  by rewrite closureE => B [? AB]; apply Et; split=> //; exact: subset_trans AB.\r\nby rewrite (iffLR (closure_id A) cA); exact: Et.\r\nQed.\r\n```"},{"author":"CohenCyril","file":"theories/topology.v","date":"2020-11-06T12:18:31Z","comment":"I found several redundancies thanks to this remark... but none of them cover `limit_point` indeed. \r\nThus I found a concept generalizing all of `closure`, `cluster`, `limit_point`, `close_to` and `close`.\r\nI'll be committing something soonish."},{"author":"CohenCyril","file":"theories/topology.v","date":"2020-11-06T15:16:21Z","comment":"done"},{"author":"CohenCyril","file":"theories/topology.v","date":"2020-11-06T15:23:49Z","comment":"This indicate that `closed_to` could be removed without loss..."},{"author":"CohenCyril","file":"theories/topology.v","date":"2020-11-06T15:28:41Z","comment":"No need to introduce a definition for the same concept...\r\n~~Morever, I'm not convinced having `P : bool -> set T` rather than two sets `(A B : setT)` is practical...~~\r\nSo I suggest the following rephrasing:\r\n```suggestion\r\nLemma connectedPn (T : topologicalType) (E : set T) :\r\n  ~ connected E <->\r\n    exists A B, [/\\ A !=set0, B !=set0, E = A `|` B & separated A B].\r\n```\r\n"},{"author":"affeldt-aist","file":"theories/topology.v","date":"2020-11-09T02:58:05Z","comment":"so `P : bool -> set T` is fine?"}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"CohenCyril","hash":"1c72734aed273f895f088d6573b055b64dfae8b7","message":"lemmas about closure and connected","date":"2020-11-10T14:30:50Z"},{"author":"mkerjean","committer":"CohenCyril","hash":"69f6a5b3087613fe1378f8f7231a2f875ae086af","message":"lemmas about closure","date":"2020-11-10T14:30:50Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"9dfcb29943da0e4f74513a8192a873a99ab27a79","message":"factorize and document","date":"2020-11-10T14:30:50Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"993ca968a2f71a1dd4e20b384e17b4913fb2df96","message":"continuous image of a connected set","date":"2020-11-10T14:30:50Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"da51f62dd2fd24964639bfacdf5e1b3cf51b6944","message":"relation closure/cluster globally","date":"2020-11-10T14:30:50Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"5838aaffaff12034da194b5c5cde71e07b244718","message":"Introducing `meets` and factoring several notions\n\n- `cluster`, `closure`, `limit_point`, `close_to` and `close`\n  can all be expressed in terms of a set of `meets`.","date":"2020-11-10T14:31:43Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"6ebd4961f3b5eb1eafc0113d62d89c96a1ad94df","message":"cleaning\n\n- get rid of not_connected\n- renaming of variables\n- remove close_to","date":"2020-11-10T14:31:45Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"c7fc0921ec379beef875d184996c92ff208357d7","message":"some fixes","date":"2020-11-10T14:31:45Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"999be2afb4c75ae2d6c48f3b5094f6fedf415506","message":"fixup","date":"2020-11-11T01:39:05Z"}]},{"author":"mkerjean","number":267,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":289,"deletions":0},{"file":"theories/normedtype.v","status":"M","additions":289,"deletions":0}],"state":"closed","open_date":"2020-10-12T10:20:30Z","update_date":"2020-11-16T19:39:10Z","discussion":[{"author":"affeldt-aist","date":"2020-11-05T16:31:24Z","comment":"@CohenCyril could you take a look to this PR? do you think we can think about merging in a very near future? (see also the last meeting minutes)"}],"review_discussion":[{"author":"affeldt-aist","file":"theories/normedtype.v","date":"2020-10-20T09:09:37Z","comment":"the hypothesis `0 < r` is not necessary (it can be proved by `move=> _; exists r; exact: subset_closure`)"}],"tags":[],"commits":[{"author":"mkerjean","committer":"affeldt-aist","hash":"1a37639900d6ef9b8c7c0b8dbb8c08f440eba363","message":"LinearContinuousBounded\n\ncontinuous_at -> for _, continuous\n\nformat lemmas in section LinearContinuousBounded\n\nUpdate theories/normedtype.v\n\nuse eqVneq instead of boolp.EM\n\nCo-Authored-By: Cyril Cohen <CohenCyril@users.noreply.github.com>\n\nfix\n\nbounded functions\n\nbounded_fun","date":"2020-10-21T07:16:46Z"},{"author":"mkerjean","committer":"affeldt-aist","hash":"5e91a1184107f3617aa5ded8feed2e6b940f340e","message":"closed balls\n\nauthored by Théo Vignon\n\nwip closure closed_ball\n\nwip closure closed_ball\n\nchanges\n\nnbhs_ballrP\n\nnbhs_ballrP\n\nwip closedball\n\nclosure\n\nclosed_closed_ball\n\nwip closure closed_ball\n\nclosure_closed_ball, TODO PR\n\nclean; review by @pi8027","date":"2020-10-21T07:16:46Z"},{"author":"mkerjean","committer":"affeldt-aist","hash":"1b1226350a0d7638872186ac59928c06b2146595","message":"clean","date":"2020-10-21T07:16:46Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"b9fad3f98a8f3c182426bd087eb19eb214b44fc0","message":"compress closure_closed_ball","date":"2020-10-21T07:16:46Z"},{"author":"mkerjean","committer":"affeldt-aist","hash":"66a92c06a9747ff79597cc91a3f8f39d56ae6a09","message":"review by @affeldt-aist","date":"2020-10-21T07:16:46Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"5843419b3684bd723972e7500cb128529a3db71b","message":"fix","date":"2020-10-21T07:36:38Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"b7fd7117049dcef26d1f062cd1c06d6ed01c84ef","message":"memo about future renaming\n\n- proof for a variant of `nbhs_closedballP`","date":"2020-10-28T07:22:46Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"602c08f0ffe6f2bcc40062d470c67b84140d0e0b","message":"lint","date":"2020-11-05T08:24:22Z"},{"author":"mkerjean","committer":"mkerjean","hash":"97081f13177aaaa624939679840b68f3420b3cb8","message":"suggestion by reynald","date":"2020-11-05T10:57:40Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"8a0bf99b8bddcdee086c9979c03815c246b1261a","message":"lint","date":"2020-11-05T16:25:14Z"},{"author":"mkerjean","committer":"mkerjean","hash":"8758d9ca1f4990f5f6103e62187e4e9f97e8ab9f","message":"impossible near","date":"2020-11-16T17:11:02Z"}]},{"author":"affeldt-aist","number":266,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":51,"deletions":15},{"file":"theories/classical_sets.v","status":"M","additions":51,"deletions":15},{"file":"theories/measure.v","status":"M","additions":51,"deletions":15}],"state":"merged","open_date":"2020-10-12T09:15:10Z","update_date":"2020-10-26T03:31:56Z","discussion":[{"author":"CohenCyril","date":"2020-10-26T02:10:55Z","comment":"@affeldt-aist please rebase"}],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"992aebbf84ea582bf8f224b88057d982598291ec","message":"minor improvements to classical_sets.v\n\n- add bigcup_set0\n- add setUCl (since we have setUCr)\n- rename setCE to setTD to match the convention in finset.v\n- add setDv (on the model of finset.v)\n- generalize bigcapCU\n- rename preimage_bigc{u,a}p\n- add preimage_set{U,I}\n- more easy preimage/image lemmas","date":"2020-10-26T02:20:15Z"}]},{"author":"affeldt-aist","number":265,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":16,"deletions":9},{"file":"theories/classical_sets.v","status":"M","additions":16,"deletions":9},{"file":"theories/topology.v","status":"M","additions":16,"deletions":9}],"state":"merged","open_date":"2020-10-12T09:06:35Z","update_date":"2020-10-26T02:09:11Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"f605108477957b713d748034e27bd741452a26fb","message":"minor generalization and addition about dependent arrows","date":"2020-10-12T09:04:50Z"}]},{"author":"affeldt-aist","number":264,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":283,"deletions":0},{"file":"theories/sequences.v","status":"M","additions":283,"deletions":0}],"state":"merged","open_date":"2020-09-28T03:55:21Z","update_date":"2020-11-09T11:07:37Z","discussion":[],"review_discussion":[],"tags":[{"tag":"enhancement :sparkles:","description":"This issue/PR is about adding new features enhancing the library"}],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"98696056e2a8d95418ffebb76e34655508d7097c","message":"more lemmas about sequences of extended real numbers\n\n- used to develop measure theory","date":"2020-11-06T09:27:02Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"f8023233f981e6c167f9eaf1795c47af0b399342","message":"minor generalization","date":"2020-11-06T09:27:02Z"}]},{"author":"affeldt-aist","number":263,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":84,"deletions":14},{"file":"theories/ereal.v","status":"M","additions":84,"deletions":14}],"state":"merged","open_date":"2020-09-28T03:53:48Z","update_date":"2020-11-05T13:33:05Z","discussion":[],"review_discussion":[{"author":"CohenCyril","file":"theories/ereal.v","date":"2020-09-28T08:05:20Z","comment":"```suggestion\r\nLemma gee0P (R : realDomainType) (x : {ereal R}) :\r\n  0%:E <= x <-> x = +oo \\/ exists2 r, r >= 0 & x = r%:E.\r\n```"},{"author":"CohenCyril","file":"theories/ereal.v","date":"2020-09-28T08:06:30Z","comment":"```suggestion\r\nLemma lee_sum I (f g : I -> {ereal R}) s (P : pred I) :\r\n  (forall i, P i -> f i <= g i) -> \\sum_(i <- s | P i) f i <= \\sum_(i <- s | P i) g i.\r\n```"},{"author":"CohenCyril","file":"theories/ereal.v","date":"2020-09-28T08:11:54Z","comment":"Depending on where/how it is used, I would rather have the following:\r\n```suggestion\r\nLemma lee_sum_nneg I (s : seq I) (P Q : pred I)\r\n  (f : I -> {ereal R}) : (forall i, P i -> ~~ Q i -> 0%:E <= f i) ->\r\n  \\sum_(i <- s | P i && Q i) f i <= \\sum_(t <- s | P i) f i.\r\n```\r\nBut I wonder how much all of this is would be subsumed by systematically duplicating ssrnum in ereal?"},{"author":"affeldt-aist","file":"theories/ereal.v","date":"2020-10-05T04:09:27Z","comment":"I have added the `lee_sum_nneg` lemma you proposed and used is to prove `lee_sum_nneg_seq` (now `lee_sum_nneg_subset`) which is now a bit more general (no  `uniq s2` hypothesis) but that it not directly related."},{"author":"CohenCyril","file":"theories/ereal.v","date":"2020-10-09T16:52:43Z","comment":"```suggestion\r\nby move=> Pfg; elim/big_ind2: _ => // *; apply: lee_add.\r\n```"},{"author":"CohenCyril","file":"theories/ereal.v","date":"2020-10-09T16:53:04Z","comment":"Not sure this is useful :-/"},{"author":"CohenCyril","file":"theories/ereal.v","date":"2020-10-09T16:53:22Z","comment":"```suggestion\r\nmove=> f_ge m n /(big_ord_widen _)->; rewrite big_mkcond lee_sum//=.\r\nby move=> i; case: ifP.\r\n```"},{"author":"affeldt-aist","file":"theories/ereal.v","date":"2020-10-12T09:27:04Z","comment":"Well, I do use `lee_sum_nneg_subset` in the `integral_sketch` branch (it is used together with fsets)."},{"author":"CohenCyril","file":"theories/ereal.v","date":"2020-11-02T12:42:30Z","comment":"```suggestion\r\n  {subset A <= B} -> {in [predD B & A], forall i, (0%:E <= f i)%E} -> (\\sum_(t <- A) f t <= \\sum_(t <- B) f t)%E.\r\n```"}],"tags":[{"tag":"enhancement :sparkles:","description":"This issue/PR is about adding new features enhancing the library"}],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"e09146d510006a90b863fe87074116d6eb931766","message":"minor changes and additions to ereal.v used to develop measure theory","date":"2020-10-30T06:33:51Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"c8bc354bf03d256d29a2ab4c4ed4ab60c50faec9","message":"fix gee0P and lee_sum","date":"2020-10-30T06:33:51Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"a4bfe1da7acab3ecdf3dfd3bc6cf0e930945b800","message":"weaken the hypotheses of lee_sum_nneg_seq (now lee_sum_nneg_subset)\nand decompose its proof using lee_sum_nneg (asked by Cyril) and\nlee_sum_nneg_undup","date":"2020-10-30T06:33:51Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"1cd506572a6f2cf1e73a1cd75cebaf1e328bff37","message":"review by Cyril\n\nCo-authored-by: Cohen Cyril <cyril.cohen@inria.fr>","date":"2020-11-03T09:37:23Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"020037f49b28e60cec815b6148bbd0268cdea63c","message":"minor generalization","date":"2020-11-03T15:41:33Z"}]},{"author":"mkerjean","number":262,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"A","additions":4989,"deletions":1},{"file":"_CoqProject","status":"A","additions":4989,"deletions":1},{"file":"theories/#normedtype.v#","status":"A","additions":4989,"deletions":1},{"file":"theories/banachsteinhaus.v","status":"A","additions":4989,"deletions":1},{"file":"theories/normedtype.v","status":"A","additions":4989,"deletions":1}],"state":"closed","open_date":"2020-09-24T10:06:56Z","update_date":"2021-02-18T15:13:45Z","discussion":[{"author":"affeldt-aist","date":"2020-11-06T03:42:10Z","comment":"Maybe this should now be rebased on top of PR #267 that subsumes PR #183 and is now under review."},{"author":"CohenCyril","date":"2021-02-18T19:37:41Z","comment":"Hi. Did you reopen this PR elsewhere?"},{"author":"mkerjean","date":"2021-02-18T19:41:16Z","comment":"> Hi. Did you reopen this PR elsewhere?\r\n\r\nYes, in the branch `banachsteinhaus`. The squashing of 37commits was too painful. I will PR the new branch once the rebasing on master is done, hopefully tonight. "}],"review_discussion":[],"tags":[],"commits":[{"author":"mkerjean","committer":"mkerjean","hash":"1d79a0338d2c941defb1d0f62bb0bdca40e80742","message":"LinearContinuousBounded","date":"2020-09-22T11:51:32Z"},{"author":"mkerjean","committer":"mkerjean","hash":"f11bb805545855851227b521f236a3a0a4a9c6b1","message":"continuous_at -> for _, continuous","date":"2020-09-22T11:52:16Z"},{"author":"affeldt-aist","committer":"mkerjean","hash":"e1f6a947cf0f545adc21c130885ef07da38b028e","message":"format lemmas in section LinearContinuousBounded","date":"2020-09-22T11:53:09Z"},{"author":"affeldt-aist","committer":"mkerjean","hash":"0287de6ed6f361c58cf6ef8308f06fa1ef60b0c0","message":"Update theories/normedtype.v\n\nuse eqVneq instead of boolp.EM\n\nCo-Authored-By: Cyril Cohen <CohenCyril@users.noreply.github.com>","date":"2020-09-22T11:53:09Z"},{"author":"affeldt-aist","committer":"mkerjean","hash":"3440a945d05c2802c80d0654512bccfa2135c2a7","message":"fix","date":"2020-09-22T11:54:13Z"},{"author":"mkerjean","committer":"mkerjean","hash":"c46a18688928793032ea8b089cb8f632bc360db8","message":"bounded functions","date":"2020-09-22T12:13:13Z"},{"author":"mkerjean","committer":"mkerjean","hash":"8d315cb13e273f581b57d7571493e0f0529b7d15","message":"closed balls\n\nauthored by Théo Vignon","date":"2020-09-23T08:43:52Z"},{"author":"mkerjean","committer":"mkerjean","hash":"a38f85abfd66823f16b1675cffd57c6c11887eed","message":"wip closure closed_ball","date":"2020-09-23T16:31:31Z"},{"author":"mkerjean","committer":"mkerjean","hash":"114842c4371a548bf4009677c15bba1c45f63701","message":"wip closure closed_ball","date":"2020-09-24T08:51:31Z"},{"author":"mkerjean","committer":"mkerjean","hash":"ddb5fcf41d6dd6bd9b24ceaf615d5384082c73db","message":"changes","date":"2020-09-24T09:02:38Z"},{"author":"mkerjean","committer":"mkerjean","hash":"d230825e4f0174276f29beec4c88686e1c10d5fc","message":"init\n\nAuthored by @tvignon","date":"2020-09-24T10:04:01Z"},{"author":"mkerjean","committer":"mkerjean","hash":"022f17f27217f587a9e4ac77bacc0141fbe77e9b","message":"nbhs_ballrP","date":"2020-09-24T13:08:39Z"},{"author":"mkerjean","committer":"mkerjean","hash":"ce21e708934d3b4232813d6c5ba95402ef84fb81","message":"nbhs_ballrP","date":"2020-09-24T13:12:13Z"},{"author":"mkerjean","committer":"mkerjean","hash":"400f497d49b2fe3442bb164571fcdf5945ffbac5","message":"wip baire","date":"2020-09-24T13:30:08Z"},{"author":"mkerjean","committer":"mkerjean","hash":"3ef81659de65a93126624f721cc481836631243e","message":"wip baire","date":"2020-09-24T14:21:19Z"},{"author":"mkerjean","committer":"mkerjean","hash":"2d8387cf50200d02ca4fd9a5ed712b21c7de93b0","message":"wip steinhaus","date":"2020-09-24T14:40:00Z"},{"author":"mkerjean","committer":"mkerjean","hash":"21298d26dc59b2983f6eb0c5bc3c168705b1af26","message":"wip baire","date":"2020-09-24T18:33:35Z"},{"author":"mkerjean","committer":"mkerjean","hash":"b0d64421f838c2b474418cd1ae5c411bdffb3637","message":"wip baire","date":"2020-09-24T18:50:29Z"},{"author":"mkerjean","committer":"mkerjean","hash":"1c7f71c5449afd984eb366561b997a100c7fddca","message":"clean baire","date":"2020-09-28T14:39:36Z"},{"author":"mkerjean","committer":"mkerjean","hash":"22d2b3add114cd2cd1542bc4cfc306d128a62119","message":"wip closedball","date":"2020-09-30T13:57:30Z"},{"author":"mkerjean","committer":"mkerjean","hash":"cadcf50cc3f7cb92602bb9c3673234a3e560e90b","message":"wip linearcontinuousbounded","date":"2020-09-30T17:47:12Z"},{"author":"mkerjean","committer":"mkerjean","hash":"8918020c283e1b6c37656b3b20f4ae1e4207cf40","message":"bounded_fun","date":"2020-10-01T08:57:11Z"},{"author":"mkerjean","committer":"mkerjean","hash":"ab5f481afd1fb9fd28ebb687a659b4bfc8d6258b","message":"closure","date":"2020-10-01T14:27:08Z"},{"author":"mkerjean","committer":"mkerjean","hash":"b7b32b0d8381f8039ef0eba984910b6f7dbc5e13","message":"alt def of bounded","date":"2020-10-06T16:00:56Z"},{"author":"mkerjean","committer":"mkerjean","hash":"0ad8431274811de2d124ccc725389b7a356cc977","message":"init\n\nAuthored by @tvignon","date":"2020-10-06T16:11:39Z"},{"author":"mkerjean","committer":"mkerjean","hash":"52e41572df24809d3439ded1945ef4b594d4c027","message":"wip baire","date":"2020-10-06T16:11:39Z"},{"author":"mkerjean","committer":"mkerjean","hash":"c9b9a01d1b58ef34bd82b3945b93153f65ba7ab4","message":"wip baire","date":"2020-10-06T16:11:39Z"},{"author":"mkerjean","committer":"mkerjean","hash":"efe5161bf83f62b159e2a107cbf0f86521342d31","message":"wip steinhaus","date":"2020-10-06T16:11:39Z"},{"author":"mkerjean","committer":"mkerjean","hash":"ff881ecc72072305ddc6039aa1da42556cb46983","message":"wip baire","date":"2020-10-06T16:11:39Z"},{"author":"mkerjean","committer":"mkerjean","hash":"4b2b039784db34e07f5b5e242eb866bac2748db3","message":"wip baire","date":"2020-10-06T16:11:39Z"},{"author":"mkerjean","committer":"mkerjean","hash":"0144d404dabb8c16e8f5feb292d21e129ef7d809","message":"clean baire","date":"2020-10-06T16:11:39Z"},{"author":"mkerjean","committer":"mkerjean","hash":"c5814ea7c2412c3b517b1417a3189e018bc7308a","message":"wip linearcontinuousbounded","date":"2020-10-06T16:11:39Z"},{"author":"mkerjean","committer":"mkerjean","hash":"b131733046cf747b7d14df07a7257cf7c669aa8e","message":"bounded_landau; clean","date":"2020-10-06T16:11:39Z"},{"author":"mkerjean","committer":"mkerjean","hash":"b78588fd147d248d6611d3646ab90407106b7c73","message":"merge","date":"2020-10-06T16:34:14Z"},{"author":"mkerjean","committer":"mkerjean","hash":"309f5131169a15542e29d9e55a0ee23a2bb67862","message":"format","date":"2020-10-07T13:29:32Z"},{"author":"mkerjean","committer":"mkerjean","hash":"823291f2e34fc88777f934d7e03248b5f0bcd37f","message":"rebase PR267","date":"2020-11-06T08:50:34Z"},{"author":"mkerjean","committer":"mkerjean","hash":"b0f147fafa2c1a2ae34de22748e94dd779c9dba9","message":"funbounded","date":"2021-01-15T09:39:23Z"}]},{"author":"affeldt-aist","number":260,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":16,"deletions":0},{"file":"theories/normedtype.v","status":"M","additions":16,"deletions":0}],"state":"merged","open_date":"2020-09-13T09:05:49Z","update_date":"2020-09-28T02:01:48Z","discussion":[{"author":"CohenCyril","date":"2020-09-25T12:30:49Z","comment":"@affeldt-aist please rebase one more time."}],"review_discussion":[],"tags":[{"tag":"enhancement :sparkles:","description":"This issue/PR is about adding new features enhancing the library"}],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"e3a686e6ffb66aaf63b73f48a31d94adec021115","message":"simple lemmas about extended reals\n\n- used to develop the theory of sequences of extended reals in another branch","date":"2020-09-25T12:44:55Z"}]},{"author":"affeldt-aist","number":258,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":36,"deletions":33},{"file":"theories/normedtype.v","status":"M","additions":36,"deletions":33}],"state":"merged","open_date":"2020-09-12T07:37:07Z","update_date":"2020-09-14T16:44:30Z","discussion":[],"review_discussion":[{"author":"CohenCyril","file":"theories/normedtype.v","date":"2020-09-14T15:44:37Z","comment":"```suggestion\r\nLemma closed_ereal_le_ereal y : closed [set x | (y <= x)%E].\r\n```"},{"author":"CohenCyril","file":"theories/normedtype.v","date":"2020-09-14T15:44:58Z","comment":"```suggestion\r\nLemma closed_ereal_ge_ereal y : closed [set x | (y >= x)%E].\r\n```"}],"tags":[{"tag":"enhancement :sparkles:","description":"This issue/PR is about adding new features enhancing the library"}],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"6ccefee55696285cc74b343e8fd51edd5c8b969c","message":"two lemmas about closed sets of extended reals","date":"2020-09-14T15:54:34Z"}]},{"author":"affeldt-aist","number":257,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":37,"deletions":71},{"file":"theories/altreals/discrete.v","status":"M","additions":37,"deletions":71},{"file":"theories/boolp.v","status":"M","additions":37,"deletions":71},{"file":"theories/normedtype.v","status":"M","additions":37,"deletions":71}],"state":"merged","open_date":"2020-09-11T02:23:06Z","update_date":"2020-09-25T12:16:55Z","discussion":[],"review_discussion":[{"author":"pi8027","file":"theories/normedtype.v","date":"2020-09-11T09:33:05Z","comment":"I guess `eqNN` should be named `notK`. (Indeed this is not the point of this PR.)"}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"2faf13c61e35402100ecf7ab6e9de7a8d2faf816","message":"remove duplicate and move/rename lemmas","date":"2020-09-25T12:02:38Z"}]},{"author":"affeldt-aist","number":256,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":27,"deletions":26},{"file":"theories/altreals/discrete.v","status":"M","additions":27,"deletions":26},{"file":"theories/altreals/realsum.v","status":"M","additions":27,"deletions":26},{"file":"theories/boolp.v","status":"M","additions":27,"deletions":26},{"file":"theories/classical_sets.v","status":"M","additions":27,"deletions":26},{"file":"theories/normedtype.v","status":"M","additions":27,"deletions":26},{"file":"theories/topology.v","status":"M","additions":27,"deletions":26}],"state":"merged","open_date":"2020-09-09T03:28:06Z","update_date":"2020-09-25T11:30:08Z","discussion":[],"review_discussion":[{"author":"CohenCyril","file":"theories/boolp.v","date":"2020-09-09T13:01:07Z","comment":"It is `contra_not` (https://github.com/math-comp/math-comp/blob/master/mathcomp/ssreflect/ssrbool.v#L215)"},{"author":"affeldt-aist","file":"theories/boolp.v","date":"2020-09-10T00:56:35Z","comment":"Then I guess we'll need to make an issue to later remove `contra_not` (when MathComp's new master is released)."},{"author":"CohenCyril","file":"CHANGELOG_UNRELEASED.md","date":"2020-09-10T01:24:11Z","comment":"This looks like unneeded changelog duplication, doesn't it?"},{"author":"CohenCyril","file":"theories/boolp.v","date":"2020-09-10T01:24:22Z","comment":"yes indeed"}],"tags":[{"tag":"enhancement :sparkles:","description":"This issue/PR is about adding new features enhancing the library"}],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"e2194829ba340fc8548d31d87b79f315b904c792","message":"rename/remove contra lemmas","date":"2020-09-10T03:34:20Z"}]},{"author":"affeldt-aist","number":254,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":22,"deletions":0},{"file":"theories/classical_sets.v","status":"M","additions":22,"deletions":0}],"state":"merged","open_date":"2020-09-02T07:37:35Z","update_date":"2020-09-25T11:29:23Z","discussion":[],"review_discussion":[],"tags":[{"tag":"enhancement :sparkles:","description":"This issue/PR is about adding new features enhancing the library"}],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"ffd577fe7bce4d5361eec0119b5b3f0c4af544c6","message":"simple lemmas added about classical sets","date":"2020-09-15T01:09:53Z"}]},{"author":"affeldt-aist","number":253,"diff_summary":[{"file":"_CoqProject","status":"A","additions":2906,"deletions":589},{"file":"config.nix","status":"A","additions":2906,"deletions":589},{"file":"opam","status":"A","additions":2906,"deletions":589},{"file":"theories/cardinality.v","status":"A","additions":2906,"deletions":589},{"file":"theories/csum.v","status":"A","additions":2906,"deletions":589},{"file":"theories/ereal.v","status":"A","additions":2906,"deletions":589},{"file":"theories/integral.v","status":"A","additions":2906,"deletions":589},{"file":"theories/measure.v","status":"A","additions":2906,"deletions":589},{"file":"theories/measure_wip.v","status":"A","additions":2906,"deletions":589}],"state":"merged","open_date":"2020-08-26T10:19:24Z","update_date":"2020-09-12T07:06:26Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"7af3e19e78e2e132cc6a6ec62c22a14c5aeb5233","message":"outer measures and Cartheodory's theorem\n\n- a small theory for summation over countable sets\n- a theory of finite and countable cardinality (enumeration, etc.)\n- use hierarchy builder for rings of sets and sigma-algebras","date":"2020-09-12T07:03:12Z"}]},{"author":"affeldt-aist","number":252,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":69,"deletions":11},{"file":"theories/boolp.v","status":"M","additions":69,"deletions":11},{"file":"theories/classical_sets.v","status":"M","additions":69,"deletions":11}],"state":"merged","open_date":"2020-08-24T08:29:50Z","update_date":"2020-08-24T11:51:09Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"6a1a9ea296fc099beb39a7743efe0081201ece7f","message":"addition of technical lemmas","date":"2020-08-24T08:25:31Z"}]},{"author":"affeldt-aist","number":251,"diff_summary":[{"file":"_CoqProject","status":"M","additions":35,"deletions":36},{"file":"theories/Rbar.v","status":"M","additions":35,"deletions":36},{"file":"theories/Rstruct.v","status":"M","additions":35,"deletions":36},{"file":"theories/altreals/distr.v","status":"M","additions":35,"deletions":36},{"file":"theories/altreals/realseq.v","status":"M","additions":35,"deletions":36},{"file":"theories/classical_sets.v","status":"M","additions":35,"deletions":36},{"file":"theories/derive.v","status":"M","additions":35,"deletions":36},{"file":"theories/measure.v","status":"M","additions":35,"deletions":36},{"file":"theories/normedtype.v","status":"M","additions":35,"deletions":36},{"file":"theories/posnum.v","status":"M","additions":35,"deletions":36},{"file":"theories/prodnormedzmodule.v","status":"M","additions":35,"deletions":36},{"file":"theories/sequences.v","status":"M","additions":35,"deletions":36},{"file":"theories/topology.v","status":"M","additions":35,"deletions":36}],"state":"merged","open_date":"2020-08-14T00:50:33Z","update_date":"2020-08-14T06:03:13Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"01a4bf32391fd660aaf53234c246dbc9ab0a0b0b","message":"removing a few warnings\n\n- duplicate-clear, implicit-core-hint-db, and non-recursive","date":"2020-08-14T00:49:37Z"}]},{"author":"CohenCyril","number":250,"diff_summary":[{"file":".gitattributes","status":"A","additions":1,"deletions":0}],"state":"merged","open_date":"2020-08-11T09:28:11Z","update_date":"2020-08-11T09:29:43Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"CohenCyril","committer":"CohenCyril","hash":"66b43ddd1a2b41edbd8c297552e85543f41388b2","message":"merging changelog unreleased with \"union\" merge driver.","date":"2020-08-11T09:27:56Z"}]},{"author":"affeldt-aist","number":249,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":5,"deletions":2},{"file":"theories/classical_sets.v","status":"M","additions":5,"deletions":2}],"state":"merged","open_date":"2020-08-11T09:06:25Z","update_date":"2020-08-11T09:29:21Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"d380da63115d6c07fec2935f0c327c86be5acffb","message":"minor generalization","date":"2020-08-11T09:05:55Z"}]},{"author":"affeldt-aist","number":248,"diff_summary":[{"file":"INSTALL.md","status":"M","additions":7,"deletions":7}],"state":"merged","open_date":"2020-08-11T07:54:17Z","update_date":"2020-08-11T09:30:03Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"26d936d8c857b5cd602817b6325a360ab7285bf8","message":"update/fix INSTALL.md","date":"2020-08-11T07:53:46Z"}]},{"author":"CohenCyril","number":247,"diff_summary":[{"file":"CHANGELOG.md","status":"M","additions":4,"deletions":5}],"state":"merged","open_date":"2020-08-11T01:26:09Z","update_date":"2020-08-11T02:25:56Z","discussion":[{"author":"CohenCyril","date":"2020-08-11T01:39:22Z","comment":"@affeldt-aist you can merge this at your convenience."}],"review_discussion":[],"tags":[],"commits":[{"author":"CohenCyril","committer":"web-flow","hash":"0197503e1662d571db604ca57896e8e5814a69fa","message":"fix changelog","date":"2020-08-11T01:26:05Z"},{"author":"CohenCyril","committer":"web-flow","hash":"b369f36b3a4d8bccd925f2ac22b87381c71bd552","message":"Update CHANGELOG.md","date":"2020-08-11T01:29:37Z"}]},{"author":"drouhling","number":246,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":91,"deletions":82},{"file":"theories/Rbar.v","status":"M","additions":91,"deletions":82},{"file":"theories/Rstruct.v","status":"M","additions":91,"deletions":82},{"file":"theories/normedtype.v","status":"M","additions":91,"deletions":82},{"file":"theories/posnum.v","status":"M","additions":91,"deletions":82},{"file":"theories/topology.v","status":"M","additions":91,"deletions":82}],"state":"merged","open_date":"2020-08-03T13:01:22Z","update_date":"2020-08-07T14:24:15Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"drouhling","committer":"drouhling","hash":"dd0b4e9ebf118df9780da2509b23a3f6577db713","message":"Move stdlib-related code to Rbar/Rstruct","date":"2020-08-03T11:13:55Z"}]},{"author":"drouhling","number":245,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":81,"deletions":35},{"file":"theories/topology.v","status":"M","additions":81,"deletions":35}],"state":"merged","open_date":"2020-08-03T08:13:49Z","update_date":"2020-08-07T14:56:09Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"drouhling","committer":"CohenCyril","hash":"d3e4c784c6a5b3d99144065c6bf12de67e95d41a","message":"Generalise closeness properties to uniform spaces","date":"2020-08-07T14:37:09Z"},{"author":"drouhling","committer":"CohenCyril","hash":"c07d14abb1735b59f76d01ca5f1337e8b24f59aa","message":"Generalise continuous_withinNx","date":"2020-08-07T14:43:43Z"}]},{"author":"affeldt-aist","number":244,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":127,"deletions":125},{"file":"theories/ereal.v","status":"M","additions":127,"deletions":125},{"file":"theories/normedtype.v","status":"M","additions":127,"deletions":125},{"file":"theories/sequences.v","status":"M","additions":127,"deletions":125}],"state":"merged","open_date":"2020-07-29T10:12:27Z","update_date":"2020-08-07T14:22:17Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"1e6ac8c02f9c90944c6e9c1ddb4158b328bd139c","message":"minor change to ereal\n\n- renaming\n- remove useless uses of notation scopes\n- remove lemma subsumed by mathcomp 1.11","date":"2020-08-02T21:27:00Z"}]},{"author":"affeldt-aist","number":243,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":30,"deletions":26},{"file":"theories/measure.v","status":"M","additions":30,"deletions":26},{"file":"theories/sequences.v","status":"M","additions":30,"deletions":26}],"state":"merged","open_date":"2020-07-29T08:49:26Z","update_date":"2020-08-07T15:16:24Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"CohenCyril","hash":"ed7d91c286e253edd328c3c69ad3b87bd309ee3a","message":"minor fix, generalizations, cleaning","date":"2020-08-07T14:58:21Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"bc0e4b2e602ccdf3d6d0318378557fb3caab6370","message":"update changelog","date":"2020-08-07T14:58:36Z"}]},{"author":"drouhling","number":242,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":1075,"deletions":349},{"file":"theories/classical_sets.v","status":"M","additions":1075,"deletions":349},{"file":"theories/derive.v","status":"M","additions":1075,"deletions":349},{"file":"theories/landau.v","status":"M","additions":1075,"deletions":349},{"file":"theories/misc/uniform_bigO.v","status":"M","additions":1075,"deletions":349},{"file":"theories/normedtype.v","status":"M","additions":1075,"deletions":349},{"file":"theories/sequences.v","status":"M","additions":1075,"deletions":349},{"file":"theories/topology.v","status":"M","additions":1075,"deletions":349}],"state":"merged","open_date":"2020-07-28T12:47:46Z","update_date":"2020-07-31T13:18:38Z","discussion":[{"author":"CohenCyril","date":"2020-07-29T08:06:34Z","comment":"That's great!!\r\n- @drouhling can you add a `CHANGELOG_UNRELEASED.md` entry?\r\n- @pi8027 can you verify the new hierarchy?"},{"author":"pi8027","date":"2020-07-29T11:17:48Z","comment":"@CohenCyril @drouhling Done, but I didn't check the implementation by myself yet. There are 5 missing joins:\r\n```coq\r\nFail check_join CompletePseudoMetric.type GRing.Lmodule.type CompleteNormedModule.type.\r\nFail check_join CompletePseudoMetric.type GRing.Zmodule.type CompleteNormedModule.type.\r\nFail check_join CompletePseudoMetric.type NormedModule.type CompleteNormedModule.type.\r\nFail check_join CompletePseudoMetric.type Num.NormedZmodule.type CompleteNormedModule.type.\r\nFail check_join CompletePseudoMetric.type PseudoMetricNormedZmodule.type CompleteNormedModule.type.\r\n```"},{"author":"drouhling","date":"2020-07-29T13:22:01Z","comment":">     * @drouhling can you add a `CHANGELOG_UNRELEASED.md` entry?\r\n\r\nDone.\r\n\r\n> ```coq\r\n> Fail check_join CompletePseudoMetric.type GRing.Lmodule.type CompleteNormedModule.type.\r\n> Fail check_join CompletePseudoMetric.type GRing.Zmodule.type CompleteNormedModule.type.\r\n> Fail check_join CompletePseudoMetric.type NormedModule.type CompleteNormedModule.type.\r\n> Fail check_join CompletePseudoMetric.type Num.NormedZmodule.type CompleteNormedModule.type.\r\n> Fail check_join CompletePseudoMetric.type PseudoMetricNormedZmodule.type CompleteNormedModule.type.\r\n> ```\r\n\r\nI added the missing joins.\r\n"},{"author":"drouhling","date":"2020-07-29T13:24:52Z","comment":"In addition to the asked modifications, I updated the `misc/uniform_bigO.v` file."},{"author":"pi8027","date":"2020-07-29T14:57:25Z","comment":"Now the new hierarchy is correct. :)"}],"review_discussion":[{"author":"pi8027","file":"theories/topology.v","date":"2020-07-29T11:23:30Z","comment":"IIUC, since this (as a function) returns a `completeType` instance, the current naming convention is that it should be named `pseudoMetric_completeType`."},{"author":"pi8027","file":"theories/normedtype.v","date":"2020-07-29T11:26:31Z","comment":"A coercion from the `CompleteNormedModule` class to the `CompletePseudoMetric` class should be declared to get rid of `CompletePseudoMetric.Class` here."},{"author":"drouhling","file":"theories/topology.v","date":"2020-07-29T13:22:30Z","comment":"Done."},{"author":"drouhling","file":"theories/normedtype.v","date":"2020-07-29T13:22:46Z","comment":"Done."},{"author":"CohenCyril","file":"CHANGELOG_UNRELEASED.md","date":"2020-07-29T17:11:48Z","comment":"`flim` prefix has been renamed to `cvg` as per #193 "},{"author":"drouhling","file":"CHANGELOG_UNRELEASED.md","date":"2020-07-31T08:00:34Z","comment":"Indeed. I forgot to update my old code. It's done now."}],"tags":[],"commits":[{"author":"drouhling","committer":"drouhling","hash":"02b0765210ec94ad35c6a40c205d2f743d0598c9","message":"Insert a structure of uniform space","date":"2020-07-28T12:42:09Z"},{"author":"drouhling","committer":"drouhling","hash":"ceee4479b3daae62cf49a150901e655c61988672","message":"Update documentation","date":"2020-07-28T13:21:21Z"},{"author":"drouhling","committer":"drouhling","hash":"e24d85199c20485f3c7bed6587611cf4106bc84f","message":"Update changelog","date":"2020-07-29T11:31:34Z"},{"author":"drouhling","committer":"drouhling","hash":"4ff7fd3817dc0f527fdaf3a555dab6062dc04f4a","message":"Follow naming convention","date":"2020-07-29T12:22:21Z"},{"author":"drouhling","committer":"drouhling","hash":"6e260fa7c26f93c1a5c4db2a498e7e944c3e385d","message":"Add missing joins","date":"2020-07-29T13:13:00Z"},{"author":"drouhling","committer":"drouhling","hash":"7c96c576a4eff52c88f306c5c83cf902884f57ea","message":"Update uniform_bigO.v","date":"2020-07-29T13:14:08Z"},{"author":"drouhling","committer":"drouhling","hash":"be176e2aabe3836ad196a346dbba277eff812f2b","message":"Replace flim with cvg","date":"2020-07-31T07:57:53Z"}]},{"author":"affeldt-aist","number":241,"diff_summary":[{"file":".travis.yml","status":"M","additions":7,"deletions":6},{"file":"opam","status":"M","additions":7,"deletions":6},{"file":"theories/landau.v","status":"M","additions":7,"deletions":6}],"state":"merged","open_date":"2020-07-26T16:59:46Z","update_date":"2020-07-27T13:30:11Z","discussion":[],"review_discussion":[{"author":"CohenCyril","file":"theories/landau.v","date":"2020-07-27T12:13:57Z","comment":"@affeldt-aist I wonder if this still compiles with Coq 8.10 and 8.11"},{"author":"CohenCyril","file":"opam","date":"2020-07-27T12:14:18Z","comment":"AFAIK Coq < 8.10 is not supported anymore"},{"author":"affeldt-aist","file":"theories/landau.v","date":"2020-07-27T12:17:01Z","comment":"It went through. But we'd better get rid of it."},{"author":"CohenCyril","file":"theories/landau.v","date":"2020-07-27T12:19:02Z","comment":"Sorry, I meant: does removing this still make Coq 8.10 pass?"},{"author":"affeldt-aist","file":"theories/landau.v","date":"2020-07-27T12:25:28Z","comment":"I think so: https://travis-ci.org/github/math-comp/analysis/jobs/711965366."}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"8ce3ddb550fce6ba7005d451a7de93bc9c67d7cb","message":"compatibility with coq 8.12","date":"2020-07-27T12:47:30Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"64f2f5e4fe3c8ec4dc81e02c0ab270fc1e3d6cbd","message":"restrict to Coq 8.10 and add Coq 8.12 to travis","date":"2020-07-27T12:47:30Z"}]},{"author":"affeldt-aist","number":240,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":66,"deletions":3},{"file":"theories/classical_sets.v","status":"M","additions":66,"deletions":3}],"state":"merged","open_date":"2020-07-26T14:51:04Z","update_date":"2020-07-27T12:43:42Z","discussion":[],"review_discussion":[{"author":"CohenCyril","file":"theories/classical_sets.v","date":"2020-07-27T12:04:23Z","comment":"```suggestion\r\n- by right; exists m => //; rewrite addSnnS.\r\n```"},{"author":"CohenCyril","file":"theories/classical_sets.v","date":"2020-07-27T12:04:32Z","comment":"```suggestion\r\n- by exists i.+1 => //; rewrite -addSnnS.\r\n```"}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"cc2edd7f9966f2dd4d3f0844816a1b4c1c4b4518","message":"more lemmas about classical sets (following the naming convention of\nfinset)","date":"2020-07-27T12:31:29Z"}]},{"author":"affeldt-aist","number":239,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":138,"deletions":25},{"file":"theories/normedtype.v","status":"M","additions":138,"deletions":25},{"file":"theories/sequences.v","status":"M","additions":138,"deletions":25}],"state":"merged","open_date":"2020-07-26T14:25:36Z","update_date":"2020-07-28T09:29:33Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"CohenCyril","hash":"c8921509760e280af1587dd117d2c9689c93084a","message":"small theory about arithmetic and geometric sequences","date":"2020-07-28T00:12:05Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"cc6a15550acab498a67c2969d67255234945e739","message":"simplifications, extensions, generalizations, fixups, renamings","date":"2020-07-28T00:26:23Z"}]},{"author":"affeldt-aist","number":238,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":28,"deletions":25},{"file":"theories/classical_sets.v","status":"M","additions":28,"deletions":25},{"file":"theories/measure.v","status":"M","additions":28,"deletions":25}],"state":"merged","open_date":"2020-07-21T23:50:21Z","update_date":"2020-07-22T17:14:32Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"6f38d23c5fa49fc159cf3b631fa30c4c5134ac86","message":"move lemmas from measure.v to classical_sets.v","date":"2020-07-21T23:51:03Z"}]},{"author":"affeldt-aist","number":237,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":96,"deletions":15},{"file":"theories/classical_sets.v","status":"M","additions":96,"deletions":15}],"state":"merged","open_date":"2020-07-20T12:30:19Z","update_date":"2020-09-25T12:20:10Z","discussion":[],"review_discussion":[{"author":"CohenCyril","file":"theories/classical_sets.v","date":"2020-08-03T22:05:33Z","comment":"I'd rather swap the last two arguments: `E t -> (supremum x0 E >= t)%O` and use a [`contra_notN`](https://github.com/math-comp/math-comp/blob/3ceb153b972cbfc23a33daa740ec31050881bfa2/mathcomp/ssreflect/ssrbool.v#L227) lemma from mathcomp `1.12` to finish the job.\r\nMaybe we should also envision adding `contra_not_le` etc lemmas to mathcomp `1.12`"},{"author":"CohenCyril","file":"theories/classical_sets.v","date":"2020-08-03T22:06:18Z","comment":"shouldn't there be the same for \"infimum\"?"},{"author":"affeldt-aist","file":"theories/classical_sets.v","date":"2020-09-03T03:00:34Z","comment":"I recorded the idea as a draft PR to mathcomp (https://github.com/math-comp/math-comp/pull/576)."}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"e296c1b11e1e81bfd3c1a39b8052bff603775fd6","message":"minor additions to the theory of supremums\n\n- definition of infimum\n- lemmas about supremum and infimum","date":"2020-09-25T12:03:59Z"}]},{"author":"affeldt-aist","number":236,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":147,"deletions":10},{"file":"theories/ereal.v","status":"M","additions":147,"deletions":10}],"state":"merged","open_date":"2020-07-20T12:21:45Z","update_date":"2020-07-27T18:35:38Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"6640575d897a0e86af734fa2d5a9da8d1101963a","message":"more technical lemmas about extended numbers' arithmetic","date":"2020-07-27T12:51:35Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"504bb6d52711506009e95404a1cb701d1c799f6a","message":"even more lemmas about extended real numbers' arithmetic","date":"2020-07-27T12:51:35Z"}]},{"author":"Zimmi48","number":235,"diff_summary":[{"file":"AUTHORS.md","status":"M","additions":2,"deletions":2}],"state":"merged","open_date":"2020-06-28T12:29:41Z","update_date":"2020-06-30T07:02:27Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"Zimmi48","committer":"web-flow","hash":"2c9fbc5ee4af48ba9b2c265f3de110d25022455d","message":"Fix links of projects moved to coq-community.","date":"2020-06-28T12:29:13Z"}]},{"author":"pi8027","number":234,"diff_summary":[{"file":"theories/altreals/distr.v","status":"M","additions":21,"deletions":15},{"file":"theories/altreals/realsum.v","status":"M","additions":21,"deletions":15},{"file":"theories/altreals/xfinmap.v","status":"M","additions":21,"deletions":15},{"file":"theories/normedtype.v","status":"M","additions":21,"deletions":15}],"state":"merged","open_date":"2020-06-22T08:08:47Z","update_date":"2020-06-23T00:40:15Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"pi8027","committer":"pi8027","hash":"04f77b7837d4fee45681d75b33f77a0a3ec3b016","message":"Get rid of deprecated lemmas filter_index_enum, uniq_perm_eq, and perm_eq_small","date":"2020-06-22T08:15:49Z"}]},{"author":"affeldt-aist","number":233,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":684,"deletions":566},{"file":"theories/derive.v","status":"M","additions":684,"deletions":566},{"file":"theories/landau.v","status":"M","additions":684,"deletions":566},{"file":"theories/normedtype.v","status":"M","additions":684,"deletions":566},{"file":"theories/sequences.v","status":"M","additions":684,"deletions":566},{"file":"theories/topology.v","status":"M","additions":684,"deletions":566}],"state":"merged","open_date":"2020-06-19T11:04:27Z","update_date":"2020-07-27T12:14:50Z","discussion":[{"author":"affeldt-aist","date":"2020-07-16T16:55:10Z","comment":"is it ok to merge?"},{"author":"CohenCyril","date":"2020-07-16T18:14:49Z","comment":"> is it ok to merge?\r\n\r\nHi, sorry @affeldt-aist I did not notice the transition to \"ready to review\". I will take a look asap\r\n\r\n"}],"review_discussion":[{"author":"CohenCyril","file":"theories/topology.v","date":"2020-07-16T20:49:18Z","comment":"`nbhsW` -> `nearW` (the current `nearW` is internal and could be renamed `near_skip_subproof`.)\r\nIndeed this lemma has nothing to do with neighborhoods."},{"author":"CohenCyril","file":"theories/topology.v","date":"2020-07-16T20:50:29Z","comment":"```suggestion\r\n(*   TopologicalMixin nbhs_filt locE == builds the mixin for a topological    *)\r\n```"},{"author":"CohenCyril","file":"theories/topology.v","date":"2020-07-16T20:50:43Z","comment":"`loc` -> `nbhs`"},{"author":"CohenCyril","file":"theories/topology.v","date":"2020-07-16T20:58:02Z","comment":"```suggestion\r\nDefinition open_nbhs (p : T) (A : set T) := open A /\\ A p.\r\n```\r\nand propagate the renaming `neigh` -> `open_nbhs`"},{"author":"CohenCyril","file":"theories/topology.v","date":"2020-07-16T20:59:54Z","comment":"```suggestion\r\nLet prod_nbhs (p : T * U) := filter_prod (nbhs p.1) (nbhs p.2).\r\n```\r\nand propagate `prod_loc` -> `prod_nbhs`"}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"ae588920dd5fd8c4589f8895238e4c943ae5b377","message":"rename \"locally\" to \"nbhs\" and propagate","date":"2020-07-25T14:41:49Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"66529f24ae4c0478b4a44515d2c9bb1eda4da2df","message":"address comments by Cyril","date":"2020-07-25T14:41:49Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"88dae6342b4554d0f6dace0cf5af3d3a30a2b114","message":"lemma open_nbhsE","date":"2020-07-25T14:42:38Z"}]},{"author":"pi8027","number":232,"diff_summary":[{"file":"theories/normedtype.v","status":"M","additions":13,"deletions":8}],"state":"merged","open_date":"2020-06-19T06:28:27Z","update_date":"2020-08-07T14:26:52Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"pi8027","committer":"pi8027","hash":"2b42967813db430ecb1581f6cd9d5c5323cf9bf0","message":"Generalize prod_pseudoMetricNormedZmodType","date":"2020-06-19T06:26:19Z"}]},{"author":"pi8027","number":230,"diff_summary":[{"file":"theories/normedtype.v","status":"M","additions":9,"deletions":2}],"state":"merged","open_date":"2020-06-17T19:02:18Z","update_date":"2020-06-17T19:25:47Z","discussion":[{"author":"pi8027","date":"2020-06-17T19:03:40Z","comment":"@mkerjean @affeldt-aist Could you rework #180 using this fix?"},{"author":"affeldt-aist","date":"2020-06-17T19:05:23Z","comment":"> @mkerjean @affeldt-aist Could you rework #180 using this fix?\r\n\r\nWill do. Thank you!"}],"review_discussion":[],"tags":[],"commits":[{"author":"pi8027","committer":"pi8027","hash":"4e5561e01a46f186b4b30eae09de139b4ed84dcb","message":"Fix inheritance from pseudoMetricNormedZmodType to completeNormedModType","date":"2020-06-17T19:00:51Z"}]},{"author":"affeldt-aist","number":229,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":47,"deletions":29},{"file":"theories/boolp.v","status":"M","additions":47,"deletions":29},{"file":"theories/ereal.v","status":"M","additions":47,"deletions":29},{"file":"theories/reals.v","status":"M","additions":47,"deletions":29},{"file":"theories/sequences.v","status":"M","additions":47,"deletions":29}],"state":"merged","open_date":"2020-06-17T14:59:30Z","update_date":"2020-07-20T12:58:08Z","discussion":[],"review_discussion":[{"author":"CohenCyril","file":"theories/boolp.v","date":"2020-06-17T19:26:35Z","comment":"```suggestion\r\nLemma not_forallP T (P : T -> Prop) :\r\n```"},{"author":"CohenCyril","file":"theories/boolp.v","date":"2020-06-17T19:27:41Z","comment":"while you're at it, could you add `andC` if it's not already here."},{"author":"CohenCyril","file":"theories/boolp.v","date":"2020-06-17T19:40:00Z","comment":"(and add it to the changelog ;))"}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"49f0559aed5cb203c8448c324f11d44ebf83b5c1","message":"renaming of lemmas for classical reasoning","date":"2020-07-20T12:42:43Z"}]},{"author":"CohenCyril","number":227,"diff_summary":[{"file":"CHANGELOG.md","status":"M","additions":28,"deletions":22},{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":28,"deletions":22}],"state":"merged","open_date":"2020-06-11T03:09:45Z","update_date":"2020-06-11T03:11:22Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"CohenCyril","committer":"CohenCyril","hash":"a37d39429df38c0310b9a1734e043d7f9dd6b92e","message":"preparing changelog","date":"2020-06-11T03:08:53Z"},{"author":"CohenCyril","committer":"web-flow","hash":"d9923c23d75fbe55e63fb16762139c1addbf7b29","message":"fixup","date":"2020-06-11T03:10:18Z"}]},{"author":"CohenCyril","number":226,"diff_summary":[{"file":"theories/normedtype.v","status":"M","additions":17,"deletions":26},{"file":"theories/sequences.v","status":"M","additions":17,"deletions":26}],"state":"merged","open_date":"2020-06-10T14:06:30Z","update_date":"2020-06-10T17:11:50Z","discussion":[{"author":"CohenCyril","date":"2020-06-10T14:06:39Z","comment":"@affeldt-aist ok with this?"},{"author":"affeldt-aist","date":"2020-06-10T14:08:48Z","comment":"> @affeldt-aist ok with this?\r\n\r\nYes, that's better."}],"review_discussion":[],"tags":[],"commits":[{"author":"CohenCyril","committer":"CohenCyril","hash":"ccbc1a39e4944bc5c8dd0b433070902b3248a0fd","message":"Small renamings about expand.\n\n- partial strict monotonicity `le_expand` is renamed `le_expand_in`\n- reattribute `le_expand` to total large monotonicity (and simplify proof)\n- remove `(le|lt)_contract(LR|RL)` which were redundant with the symmetric of `(le|lt)_expand(LR|RL)`","date":"2020-06-10T14:06:01Z"}]},{"author":"affeldt-aist","number":225,"diff_summary":[{"file":"INSTALL.md","status":"M","additions":31,"deletions":26}],"state":"merged","open_date":"2020-06-10T13:34:13Z","update_date":"2020-06-11T03:04:35Z","discussion":[{"author":"affeldt-aist","date":"2020-06-10T13:36:40Z","comment":"I guess we'd better merge PR #218 before this one @CohenCyril "},{"author":"CohenCyril","date":"2020-06-10T14:34:41Z","comment":"Since we will soon release 0.3.1, which will be incompatible with mathcomp 1.11+beta1, I suggest we remove all the technical explantations about mathcomp beta and analysis 0.3.0..."}],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"4177146f004539d684976678dae008d4f2223cb9","message":"update INSTALL.md now that 1.11.0 has been released","date":"2020-06-10T13:33:24Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"4f39f26a3cd794521d91fc5e993d5ea22f4c5e9d","message":"remove technical explanations about betas","date":"2020-06-10T15:01:44Z"},{"author":"CohenCyril","committer":"web-flow","hash":"5c11fdc9a513c40733d5bf8b11216c08d780a3d0","message":"Update INSTALL.md","date":"2020-06-11T03:04:14Z"}]},{"author":"affeldt-aist","number":224,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"A","additions":6605,"deletions":0},{"file":"_CoqProject","status":"A","additions":6605,"deletions":0},{"file":"theories/cardinality.v","status":"A","additions":6605,"deletions":0},{"file":"theories/csum.v","status":"A","additions":6605,"deletions":0},{"file":"theories/integral.v","status":"A","additions":6605,"deletions":0},{"file":"theories/measure_wip.v","status":"A","additions":6605,"deletions":0}],"state":"closed","open_date":"2020-06-09T23:33:36Z","update_date":"2021-08-05T09:46:48Z","discussion":[{"author":"CohenCyril","date":"2020-10-01T00:10:28Z","comment":"@affeldt-aist this should do the trick"},{"author":"CohenCyril","date":"2020-10-01T00:10:40Z","comment":"(beware not to put ssrsearch in final code)"},{"author":"affeldt-aist","date":"2020-10-26T11:02:48Z","comment":"> @affeldt-aist this should do the trick\r\n\r\nThe log shows that compilation is failing when running into big_setU1 which is a lemma of finmap."},{"author":"affeldt-aist","date":"2021-05-09T09:48:24Z","comment":"What about closing this draft PR now that most of it (Lebesgue measure) has been moved to PR #371 \r\nand the rest of it (that part in wip) has been moved to PR #378 ?"}],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"b2b2c29784b3ffd3e499a1ed85d753d8ac558e12","message":"a small theory for summation over countable sets\n\n- with review and fixes by Cyril following realseq meetings\n- originally motivated by the formalization of measure theory","date":"2021-04-25T09:57:50Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"1b68c947ce8787201486c60e31ffbe5e1b4426a0","message":"add theory of funepos and funeneg functions","date":"2021-04-25T09:57:50Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"f7e819f9fa934c7c2d062d72756a2e2b8f25c101","message":"export notations for funepos, funeneg, fer","date":"2021-04-25T09:57:50Z"},{"author":"strub","committer":"affeldt-aist","hash":"b3dcb94128263eb1e0e78d246542698d836a5b5e","message":"big_setU1 -> big_fsetU1","date":"2021-04-25T09:57:50Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"368fd759019fae31b741cc21e808bf54f38182c9","message":"update with generalized trivIset","date":"2021-04-25T09:57:50Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"ec243814335fe240a77d3925931ae1ae940318d5","message":"minor simplification of csum","date":"2021-04-25T09:57:50Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"b84a2a6d31de59d7cca53f27d1754fa39aec1e75","message":"documentation and cleaning\n\n- set_finite is now defined with fset\n- remove several lemmas (fset_set_finite, set_finite_fset,\n  unused lemmas) and definitions\n- documentation with clear WIP marks","date":"2021-04-25T09:57:50Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"14124a36a39ab81e99af20506863a41a209d67c3","message":"minor improvements\n\n- generalization of csum_countable\n- add lemma csum_nat_lim","date":"2021-04-25T09:57:50Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"2f53f0ea90c1679652f98d11dac6e1346738bd1f","message":"memo","date":"2021-04-25T09:57:50Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"d58d8eb23662c599cd354a2a1518efb5a895e5f6","message":"use homo notation","date":"2021-04-25T09:57:50Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"42008f1c42a59787ecfa0dafca44d2241b49057f","message":"move `fer`, etc. and lemmas out\n\n- back to the branch `integral_sketch`","date":"2021-04-25T09:57:50Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"013460313ff8cb2f0d561726c4a3c9d672efca8a","message":"fix changelog and cleaning","date":"2021-04-30T05:18:34Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"7037c04f92de473b9e0debc374824b45fae9e5a6","message":"wip","date":"2021-04-30T05:25:58Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"6a7b87675431a465807ee3a6a8a1ad8cc2e7ff83","message":"move `fer`, etc. and lemmas out\n\n- back to the branch `integral_sketch`","date":"2021-04-30T05:25:58Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"f68b40520037c58b979fccc362c1e900608c0ca2","message":"fix changelog","date":"2021-04-30T05:25:58Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"b202b34d00fc90292fa9b33a9730dfa29451ac66","message":"move `fer`, etc. and lemmas out\n\n- back to the branch `integral_sketch`","date":"2021-04-30T05:25:58Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"8a902c1c410ff4b39c00ecfdc13e9eacfcbcbee9","message":"sketch of integration theory written with the members\nduring mathcomp-analysis-dev meetings\n\n- more measure theory in measure_wip\n- fix bug: One should never put an HB.instance on a variable and HB must complain when this happens.","date":"2021-04-30T05:25:58Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"f1c3ec278af0bc5c0d7fb53964e35f8c10e9e0ce","message":"adapt to use mkset\n\n- maybe expose a typeclasses inference problem","date":"2021-04-30T05:25:58Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"58bc4de52e2c448e7fa6c74bce23b07129e5877b","message":"remove duplicated theory about funepos, funeneg, fer","date":"2021-04-30T05:25:58Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"25c77e48906101218f7ff11cb2f7cf37cffefb70","message":"adapt to new interval definition","date":"2021-04-30T05:25:58Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"d99d76b63d191522af82146e09e147e902d206d0","message":"simplify definition","date":"2021-04-30T05:25:58Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"1db06e78a002db4d7b5b3c15af6f8c2a72b79f7b","message":"various lemmas about intervals\n\n- RFC","date":"2021-04-30T05:25:58Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"3c8d783d7630630b22fccc630956320e3a7bb169","message":"sets of intervals form a ring of sets","date":"2021-04-30T05:25:58Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"a86cccbd6986bdd456d3feadf9ca813cdeeb5ec1","message":"lower sigma_finite to ring of sets","date":"2021-04-30T05:25:58Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"250b0d7b2db7370986bc75874f216f57e30cdb0f","message":"tentative def of Lebesgue measure on ring of sets","date":"2021-04-30T05:25:58Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"888c5ce89461e0048fc0934cebde3319a69f5b13","message":"length_itv is additive\n\n- to be cleaned","date":"2021-04-30T05:25:58Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"7d6345919db4215f9fa00be079d2b6f3e3ef1191","message":"cleaning","date":"2021-04-30T05:25:58Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"de481606f4e67d6f817ada81ec52a8e3a414465c","message":"wip","date":"2021-04-30T05:25:58Z"},{"author":"CohenCyril","committer":"affeldt-aist","hash":"a83737a70bea37c5e09ece66c87c259cc2fe09d3","message":"wip trivIset","date":"2021-04-30T05:25:58Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"e270a7ae64c8ed49fc85ad6b41d56421f72d5d16","message":"wip","date":"2021-04-30T05:25:58Z"},{"author":"CohenCyril","committer":"affeldt-aist","hash":"6056e95b728e1a67427c164985a2f717f30deb56","message":"Reproving length_itvUitv in another way","date":"2021-04-30T05:25:58Z"},{"author":"CohenCyril","committer":"affeldt-aist","hash":"6f6d7e63d7cfdeb2fa6126a4df904b7a63e9943f","message":"Better length measurement\n\n- length_itv -> hlength \\o set_of_itv","date":"2021-04-30T05:25:58Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"7a8b4ffd473622a9a59f34b04a46c05b7c6b9803","message":"wip","date":"2021-04-30T05:25:58Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"e37d1ed05c84c95ca9fb3eab15b88a71aa2e79d3","message":"lemma le_hlength\n\n- intermediate lemma le_Rhull","date":"2021-04-30T05:25:58Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"8364c6a5f4e2938a1994ef8e17a88ad84a2ffc30","message":"lemma hlength_itvU\n\n- cleaning wip","date":"2021-04-30T05:25:58Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"e61ebfa48bf85c919e10661aba3571876a79f728","message":"prove hlengthUset","date":"2021-04-30T05:25:58Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"ec6981c13db234eb0e47743c72be362b08fc6718","message":"length is sigma-finite","date":"2021-04-30T05:25:58Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"801381936341eb160268a338e7be03719a5f7eb0","message":"length is additive","date":"2021-04-30T05:25:58Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"42d0d74719f855afdf883be14ed1e45a6c5e71ec","message":"first step towards length_semi_sigma_additive","date":"2021-04-30T05:25:58Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"7f54df253293617af2dd4d555375a3df70b459bb","message":"minor progress","date":"2021-04-30T05:25:58Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"581dbe86657523b79985e919efc7410539a86b79","message":"semi-sigma-additive for intervals","date":"2021-04-30T05:25:58Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"c5beaea9b3ed3849cfe9b0cefe1567f70da5ac22","message":"only sigma-sub-additivity left","date":"2021-04-30T05:25:58Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"89cde6bfb816226a4fd7118f7038a0c6ad0a3a22","message":"minor change","date":"2021-04-30T05:25:58Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"f257fe275586e67491fa3776545909e417811503","message":"fix","date":"2021-04-30T05:25:58Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"163dd25819a641453b581b4e8dc5e0a6fdf95eac","message":"progress","date":"2021-04-30T05:25:58Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"8fa890344e0bf68c8b1734636b0d18b64259f363","message":"axiom free","date":"2021-04-30T05:25:58Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"3c76af2f2653734b0fc7c4f47c6830c60d372732","message":"cleaning\n\n- documentation\n- [sset of ...] notation for simple sets\n- remove some unused lemmas\n- memo","date":"2021-04-30T05:25:58Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"e2661a69b1f77221af3ee1aa1c075c9c9586e96b","message":"lemma about measurable functions","date":"2021-04-30T05:25:58Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"5aff49b29a43168576af551a7b52b77f8b1c22d9","message":"cleaning in progress","date":"2021-04-30T05:25:58Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"231da40991afd1df118e263764ac1c2c7a533bc8","message":"move `fer`, etc. back from the branch on `csum`","date":"2021-04-30T05:25:58Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"3e19a633c1fcec38fc3b15601e8cd1733e28a474","message":"fixes\n\n- fix changelog after rebase\n- renaming following caratheodory PR\n- adapt to more recent HB versions\n- adapt measure.wip to the new master and csum.v","date":"2021-04-30T05:29:00Z"}]},{"author":"affeldt-aist","number":223,"diff_summary":[{"file":"_CoqProject","status":"A","additions":537,"deletions":37},{"file":"theories/ereal.v","status":"A","additions":537,"deletions":37},{"file":"theories/measure.v","status":"A","additions":537,"deletions":37}],"state":"merged","open_date":"2020-06-09T23:31:21Z","update_date":"2020-06-19T03:01:08Z","discussion":[],"review_discussion":[{"author":"CohenCyril","file":"theories/measure.v","date":"2020-06-10T14:36:30Z","comment":"Unused"},{"author":"CohenCyril","file":"theories/measure.v","date":"2020-06-10T14:39:05Z","comment":"It's better to have `Record mixin_of := Mixin {...}` and then `Notation class_of := mixin_of.` to maintain the invariant that every structure has both a mixin and a class, although it looks a bit cosmetic."},{"author":"CohenCyril","file":"theories/measure.v","date":"2020-06-10T14:39:18Z","comment":"I would prefer `is_sigma_algebra`."},{"author":"CohenCyril","file":"theories/measure.v","date":"2020-06-10T14:40:46Z","comment":"and  `Notation MesurableMixin := Mixin`."},{"author":"CohenCyril","file":"theories/measure.v","date":"2020-06-10T14:43:43Z","comment":"rename `le_measure`"},{"author":"CohenCyril","file":"theories/measure.v","date":"2020-06-10T14:52:32Z","comment":"Using `exact:` is dangerous as a hint with priority 0 in core. I guess there is no other choice right now because `is_measure0` leaves a goal `is_measure _` unsolved, but this is because we miss a canonical structure\r\n```coq\r\nModule measure.\r\nRecord axioms ... (* ranaming of is_measure *)\r\n...\r\nStructure map := { apply :> X -> {ereal R}; _: axioms apply};\r\n...\r\nEnd measure.\r\n...\r\n```\r\ncf https://github.com/math-comp/math-comp/blob/master/mathcomp/algebra/ssralg.v#L1793-L1824"},{"author":"CohenCyril","file":"theories/measure.v","date":"2020-06-11T21:14:18Z","comment":"Maybe `Theorem Boole_inequality` instead. Otherwise by convention `bool` means `bool : Type`"},{"author":"CohenCyril","file":"theories/measure.v","date":"2020-06-17T12:52:53Z","comment":"Statements of `{homo : ... }` or `{mono : ...}` shouldn't be named after `homo`, or `mono`, just as for `{morph ...}` lemmas. Instead please use the head of the unfolded statement (for homo) or the head of the LHS of the equality (for mono). In this case: `sub_bigUB_of`."},{"author":"CohenCyril","file":"theories/measure.v","date":"2020-06-17T12:55:12Z","comment":"When a `mono` lemma subsumes `homo`, it gets priority for the short name, and if really needed the corresponding `homo` lemma can be suffixed with `W`. If the `mono` lemma is only valid on a subdomain, then the `homo` lemma takes the short name, and the `mono` lemma gets the suffix `in`.\r\n(This should all be added to CONTRIBUTING.md I guess)"},{"author":"CohenCyril","file":"theories/measure.v","date":"2020-06-17T12:55:56Z","comment":"`le_mu_ext`"},{"author":"CohenCyril","file":"theories/measure.v","date":"2020-06-17T12:58:18Z","comment":"No `is_` prefix anymore, since it is not about a predicate but a packaged operator.\r\nSame is true everywhere incuding in `outer_measure`.\r\n\r\nThe exception is `is_measure f := (axioms f)` itself, which is a predicate."},{"author":"CohenCyril","file":"theories/measure.v","date":"2020-06-17T12:59:31Z","comment":"I would name it `cvg_mu_inc`."},{"author":"CohenCyril","file":"theories/measure.v","date":"2020-06-17T13:02:17Z","comment":"This name is nice for historical purposes and external eye.\r\nInternally I suspect it will become annoying and we should at least provide an alias: e.g. `le_mu_bigsetU`.\r\n(and the generalized one `\\le_mu_bigcup`)"},{"author":"CohenCyril","file":"theories/measure.v","date":"2020-06-17T13:02:40Z","comment":"@affeldt-aist I would vouch for cutting here for this PR."},{"author":"CohenCyril","file":"theories/measure.v","date":"2020-06-17T19:38:00Z","comment":"My appologies I got carried away and did not realize the `homo` was not even the conclusion.\r\nIn fact the right name would be `eq_bigsetUB_of`.\r\n```suggestion\r\nLemma eq_bigsetUB_of (A : (set T) ^nat) n :\r\n```"},{"author":"CohenCyril","file":"theories/measure.v","date":"2020-06-17T19:38:17Z","comment":"And here\r\n```suggestion\r\nLemma eq_bigcupB_of (A : (set T) ^nat) : {homo A : n m / (n <= m)%nat >-> n `<=` m} ->\r\n```"}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"f001775881fd26b43937b68bae21d663c0e9f011","message":"tentative proof of Boole's inequality\n\nCo-authored-by: Cyril Cohen <cohen@crans.org>","date":"2020-06-17T18:07:08Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"8c499a4f4c98fd8a47222ee938d402917b492ce3","message":"technical lemmas about ereal and minor generalization","date":"2020-06-17T18:07:15Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"1785dfe38910ea72037e654ba0bfe363372b72ba","message":"improved presentation\n\n- check naming convention\n- minor cosmetics changes\n- minimal doc\n\nCo-authored-by: Cohen Cyril <cyril.cohen@inria.fr>","date":"2020-06-17T21:09:02Z"}]},{"author":"affeldt-aist","number":222,"diff_summary":[{"file":"theories/ereal.v","status":"M","additions":27,"deletions":12}],"state":"merged","open_date":"2020-06-05T22:49:28Z","update_date":"2020-06-11T14:40:26Z","discussion":[{"author":"CohenCyril","date":"2020-06-11T00:19:09Z","comment":"please rebase on top of master"}],"review_discussion":[],"tags":[{"tag":"enhancement :sparkles:","description":"This issue/PR is about adding new features enhancing the library"}],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"dde0ca40a5c182d24920a0c296ce334c1a7b3627","message":"two lemmas about arithmetic with ninfty + typos in the documentation","date":"2020-06-11T09:31:12Z"}]},{"author":"affeldt-aist","number":221,"diff_summary":[{"file":"INSTALL.md","status":"M","additions":22,"deletions":8}],"state":"merged","open_date":"2020-06-05T15:32:25Z","update_date":"2020-06-05T17:17:58Z","discussion":[],"review_discussion":[],"tags":[{"tag":"documentation :memo:","description":"This issue/PR is about documentation of the library / repository"}],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"64d8345e4ede21260d24d413fee51d49357b96a5","message":"update to last version","date":"2020-06-05T15:39:13Z"}]},{"author":"affeldt-aist","number":220,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":54,"deletions":47},{"file":"theories/Rstruct.v","status":"M","additions":54,"deletions":47},{"file":"theories/altreals/realsum.v","status":"M","additions":54,"deletions":47},{"file":"theories/classical_sets.v","status":"M","additions":54,"deletions":47},{"file":"theories/ereal.v","status":"M","additions":54,"deletions":47},{"file":"theories/normedtype.v","status":"M","additions":54,"deletions":47},{"file":"theories/reals.v","status":"M","additions":54,"deletions":47},{"file":"theories/sequences.v","status":"M","additions":54,"deletions":47}],"state":"merged","open_date":"2020-06-05T14:59:37Z","update_date":"2020-06-17T09:41:12Z","discussion":[],"review_discussion":[],"tags":[{"tag":"renaming/refactoring","description":"This is about a renaming or refactoring in the library"}],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"b8414e425e30b93569eaeebc1da7e3d331ef8429","message":"rename the short `ub` and `lb` to `ubound` and `lbound`","date":"2020-06-11T14:43:26Z"}]},{"author":"affeldt-aist","number":219,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":9,"deletions":10},{"file":"theories/boolp.v","status":"M","additions":9,"deletions":10},{"file":"theories/ereal.v","status":"M","additions":9,"deletions":10},{"file":"theories/reals.v","status":"M","additions":9,"deletions":10}],"state":"merged","open_date":"2020-06-05T14:10:07Z","update_date":"2020-06-05T15:07:43Z","discussion":[{"author":"affeldt-aist","date":"2020-06-05T14:12:29Z","comment":"Is it ok to merge quickly? (There is certainly another discussion to have about the naming of such lemmas but it can be deferred to later.)"}],"review_discussion":[],"tags":[{"tag":"renaming/refactoring","description":"This is about a renaming or refactoring in the library"}],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"b16ec6372524655d5e644417b1da4cee1dabcb06","message":"rename lemmas for classical reasoning to avoid clash with fintype","date":"2020-06-05T14:08:54Z"}]},{"author":"CohenCyril","number":218,"diff_summary":[{"file":".github/workflows/nix.yml","status":"M","additions":228,"deletions":317},{"file":".travis.yml","status":"M","additions":228,"deletions":317},{"file":"config.nix","status":"M","additions":228,"deletions":317},{"file":"theories/Rbar.v","status":"M","additions":228,"deletions":317},{"file":"theories/Rstruct.v","status":"M","additions":228,"deletions":317},{"file":"theories/altreals/distr.v","status":"M","additions":228,"deletions":317},{"file":"theories/altreals/realseq.v","status":"M","additions":228,"deletions":317},{"file":"theories/altreals/realsum.v","status":"M","additions":228,"deletions":317},{"file":"theories/derive.v","status":"M","additions":228,"deletions":317},{"file":"theories/ereal.v","status":"M","additions":228,"deletions":317},{"file":"theories/landau.v","status":"M","additions":228,"deletions":317},{"file":"theories/normedtype.v","status":"M","additions":228,"deletions":317},{"file":"theories/posnum.v","status":"M","additions":228,"deletions":317},{"file":"theories/prodnormedzmodule.v","status":"M","additions":228,"deletions":317},{"file":"theories/sequences.v","status":"M","additions":228,"deletions":317},{"file":"theories/topology.v","status":"M","additions":228,"deletions":317}],"state":"merged","open_date":"2020-06-04T17:00:26Z","update_date":"2020-06-11T00:17:13Z","discussion":[{"author":"affeldt-aist","date":"2020-06-10T14:12:53Z","comment":"I don't get the failure of the CI (the one with opam). It looks like it is trying to install analysis 0.2.3...\r\n(By the way, this branch compiles on my computer using the latest MathComp 1.11.0 opam packages.)"},{"author":"erikmd","date":"2020-06-10T14:19:27Z","comment":"@affeldt-aist I've just seen your comment; maybe this is due to the fact the line\r\nhttps://github.com/math-comp/analysis/blob/fac11966aa94d3bab0949dfa8414aca42e65bd93/.travis.yml#L25\r\ndoes not mention a version, so opam takes the first version it is aware from coq-released (0.2.3)\r\nso maybe you could try replacing it with this:\r\n```\r\n- docker exec CI /bin/bash --login -c \"opam pin add -n -y -k path coq-mathcomp-${CONTRIB}.dev .\"\r\n```\r\n?"},{"author":"erikmd","date":"2020-06-10T14:20:32Z","comment":"or alternatively, add\r\n```\r\nversion: \"dev\"\r\n```\r\nin\r\nhttps://github.com/math-comp/analysis/blob/master/opam"},{"author":"CohenCyril","date":"2020-06-10T14:21:21Z","comment":"> does not mention a version, so opam takes the first version it is aware from coq-released (0.2.3)\r\n\r\nI thought  `opam pin add .` took `./` as the source..."},{"author":"erikmd","date":"2020-06-10T14:22:29Z","comment":"yes but if no version is mentioned, the algorithm is a bit non-intuitive (it does not defaults to dev…)\r\n\r\n(There had been a related discussion in a coq issue, I'll try to re-find it just FTR)"},{"author":"erikmd","date":"2020-06-10T14:27:43Z","comment":"OK, the discussion I was thinking about is this PR:\r\n\r\nhttps://github.com/coq/coq/pull/11038\r\n\r\nwhich quotes the following comment in the `ocaml/opam` repo:\r\n\r\nhttps://github.com/ocaml/opam/issues/2932#issue-228248081\r\n\r\n> AFAIU, currently opam chooses the version for pinned packages as follow:\r\n> \r\n> 1. use the version specified on the command line, if any\r\n> 2. use the `version:` field in the opam file of the pinned package, if any\r\n> 3. **use the latest version available in the package repository, if a package with the same name already exists**\r\n>     [which explains the fact it guessed the 0.2.3 version]\r\n> 4. ~unknown with opam1 and `~dev` (+dev?) with opam2\r\n\r\n(but I don't know if this is also documented in the OPAM manual)"},{"author":"affeldt-aist","date":"2020-06-10T14:28:27Z","comment":"(I pushed the fix suggested by @erikmd but now the CI does not trigger the check using opam anymore...)"},{"author":"erikmd","date":"2020-06-10T14:38:35Z","comment":"> (I pushed the fix suggested by @erikmd but now the CI does not trigger the check using opam anymore...)\r\n\r\nActually according to [this page](https://travis-ci.org/github/math-comp/analysis/pull_requests) it seems the build was indeed triggered (but the status feedback was lost on github side):\r\n\r\nhttps://travis-ci.org/github/math-comp/analysis/jobs/696872899\r\n\r\nand the error is now different:\r\n\r\n```\r\n<><> Synchronising pinned packages ><><><><><><><><><><><><><><><><><><><><><><>\r\n[coq-mathcomp-analysis.dev] no changes from file:///home/coq/analysis\r\n\r\nThe following dependencies couldn't be met:\r\n  - coq-mathcomp-analysis -> coq-mathcomp-finmap >= 1.5.0\r\n      no matching version\r\n\r\nNo solution found, exiting\r\n```"},{"author":"affeldt-aist","date":"2020-06-10T15:23:23Z","comment":"I see. Since `coq-mathcomp-finmap` is in `extra-dev`, it fails."},{"author":"CohenCyril","date":"2020-06-10T15:35:35Z","comment":"> I see. Since `coq-mathcomp-finmap` is in `extra-dev`, it fails.\r\n\r\nWell, we should not start making packages from the leafs of the dependency graph :laughing:.\r\nFinmap should be ok, I am currently porting multinomials and should release real-closed soonish... etc"},{"author":"affeldt-aist","date":"2020-06-10T21:50:02Z","comment":"The new error is still puzzling:\r\n```\r\n# File \"./theories/normedtype.v\", line 1439, characters 6-22:\r\n# Error: The LHS of ltxI\r\n#     (_ < _ `&` _)%O\r\n```\r\nThere is no `ltxI` in the source code."},{"author":"CohenCyril","date":"2020-06-10T22:15:16Z","comment":"> The new error is still puzzling:\r\n> \r\n> ```\r\n> # File \"./theories/normedtype.v\", line 1439, characters 6-22:\r\n> # Error: The LHS of ltxI\r\n> #     (_ < _ `&` _)%O\r\n> ```\r\n> \r\n> There is no `ltxI` in the source code.\r\n\r\nYeah, the general problem seems to be the wrong codebase is pulled."},{"author":"affeldt-aist","date":"2020-06-10T22:48:31Z","comment":"It looks like it is pulling 4b3281e45c570ca3ee21659b09e8ba8707f250d2."}],"review_discussion":[],"tags":[],"commits":[{"author":"CohenCyril","committer":"CohenCyril","hash":"f30323e8f80f5c70e4df8eaa60fa257edb0d27e9","message":"Adapting to new Order.max","date":"2020-06-11T00:08:09Z"}]},{"author":"affeldt-aist","number":216,"diff_summary":[{"file":"theories/landau.v","status":"M","additions":5,"deletions":0}],"state":"merged","open_date":"2020-06-03T09:58:05Z","update_date":"2020-07-20T12:40:24Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"32387efcb33b16b42e2f13d6c090d2807bdaf0c4","message":"addition to the documentation of landau.v","date":"2020-06-03T09:55:35Z"}]},{"author":"affeldt-aist","number":215,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":990,"deletions":8},{"file":"theories/ereal.v","status":"M","additions":990,"deletions":8},{"file":"theories/normedtype.v","status":"M","additions":990,"deletions":8},{"file":"theories/sequences.v","status":"M","additions":990,"deletions":8}],"state":"merged","open_date":"2020-05-29T13:44:33Z","update_date":"2020-06-10T13:46:07Z","discussion":[],"review_discussion":[{"author":"CohenCyril","file":"theories/normedtype.v","date":"2020-05-29T15:32:45Z","comment":"`ereal_locallyE`?"},{"author":"CohenCyril","file":"theories/normedtype.v","date":"2020-05-31T00:24:50Z","comment":"I suggest that this is called `contract_inc` and that the proof of `homo_contract_lt` is inlined in it."},{"author":"CohenCyril","file":"theories/normedtype.v","date":"2020-06-02T04:18:57Z","comment":"Taking this convention would make `expand` nondecreasing everywhere, making it possible to use some of the `homoRL`/`homoLR` lemma where `monoRL`/`monoLR` do not apply..."},{"author":"CohenCyril","file":"CHANGELOG_UNRELEASED.md","date":"2020-06-09T02:47:55Z","comment":"@affeldt-aist you should document `expand` as well."},{"author":"CohenCyril","file":"theories/normedtype.v","date":"2020-06-09T02:48:34Z","comment":"remove the comment or replace it by added in mathcomp-1.11.0 ssrnum as ..."},{"author":"CohenCyril","file":"theories/sequences.v","date":"2020-06-09T02:49:02Z","comment":"why?"},{"author":"affeldt-aist","file":"theories/sequences.v","date":"2020-06-09T09:51:18Z","comment":"So that it type-checks in Lemma `nondecreasing_seq_ereal_cvg`."}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"4b3281e45c570ca3ee21659b09e8ba8707f250d2","message":"ereals from a pseudometric type","date":"2020-06-08T23:47:04Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"6e7ad00e5846cf0d21c4b3ba95405d872834ee20","message":"divergence in R is convergence to +oo in {ereal R}","date":"2020-06-08T23:47:16Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"021e7a183191ce8a6fe199ed631101fc4297208b","message":"a non-decreasing sequence of ereals converges to its sup","date":"2020-06-08T23:47:16Z"},{"author":"CohenCyril","committer":"affeldt-aist","hash":"25d840876cfa851b07f3920822ca8372468520ba","message":"exploiting fully the monotonicity of contract and expand","date":"2020-06-08T23:47:16Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"ff2de7d67b739ac14567e5413a197cf40b2c15e1","message":"sup (resp. inf) of contract is contract of sup (resp. inf)","date":"2020-06-08T23:51:54Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"861a90d32f7108f79b881c7eab525db0ef2feaff","message":"minor fixes","date":"2020-06-09T22:51:45Z"}]},{"author":"affeldt-aist","number":213,"diff_summary":[{"file":"HOWTORELEASE.md","status":"A","additions":40,"deletions":0}],"state":"closed","open_date":"2020-05-26T19:25:50Z","update_date":"2020-06-07T01:47:05Z","discussion":[{"author":"affeldt-aist","date":"2020-06-04T17:32:00Z","comment":"TODO: make the tag format precise. @CohenCyril "},{"author":"CohenCyril","date":"2020-06-04T17:36:52Z","comment":"> TODO: make the tag format precise. @CohenCyril\r\n\r\ndone in b264352aaa016e4cdf06054f412af0018bb57fc5"},{"author":"CohenCyril","date":"2020-06-04T22:32:51Z","comment":"@affeldt-aist should we merge this in the Wiki?"},{"author":"affeldt-aist","date":"2020-06-04T22:37:18Z","comment":"> should we merge this in the Wiki?\r\n\r\nYou mean merge in master (in which case I am ok) or copy-paste in the wiki (in which case I would ask why not merge in master and put a link from the wiki to the .md file)?"},{"author":"CohenCyril","date":"2020-06-04T22:40:01Z","comment":"> > should we merge this in the Wiki?\r\n> \r\n> You mean merge in master (in which case I am ok) or copy-paste in the wiki (in which case I would ask why not merge in master and put a link from the wiki to the .md file)?\r\n\r\nSince this is a release process tied to github and not to the distributed content, I think it should not be in math-comp/analysis, but math-comp/analysis.wiki...."},{"author":"affeldt-aist","date":"2020-06-05T09:43:20Z","comment":"I moved the file to `analysis.wiki`. We can maybe close without merging?\r\n\r\n[link to file on the wiki](https://github.com/math-comp/analysis/wiki/HOWTORELEASE)"}],"review_discussion":[],"tags":[{"tag":"documentation :memo:","description":"This issue/PR is about documentation of the library / repository"}],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"245fec7f5f5bbc1255cca7f3409192c6706ec5f7","message":"tentative how-to-release file","date":"2020-05-26T19:22:37Z"},{"author":"CohenCyril","committer":"web-flow","hash":"b264352aaa016e4cdf06054f412af0018bb57fc5","message":"fix version naming","date":"2020-06-04T17:35:23Z"},{"author":"CohenCyril","committer":"web-flow","hash":"ff2b7d22f9805174dde376d5f9e287a1877ea35d","message":"fixup","date":"2020-06-04T17:36:13Z"},{"author":"CohenCyril","committer":"web-flow","hash":"a0d0a519412f6e3a61ce7b2049cf9ee81d595530","message":"Update HOWTORELEASE.md","date":"2020-06-04T22:32:17Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"29dfcbaf0b944cbf4e149f6e67726a1b7f14f8ba","message":"fix","date":"2020-06-04T22:35:11Z"}]},{"author":"affeldt-aist","number":212,"diff_summary":[{"file":"CHANGELOG.md","status":"A","additions":102,"deletions":0},{"file":"CHANGELOG_UNRELEASED.md","status":"A","additions":102,"deletions":0}],"state":"merged","open_date":"2020-05-25T20:42:11Z","update_date":"2020-05-26T17:40:55Z","discussion":[{"author":"affeldt-aist","date":"2020-05-25T20:43:43Z","comment":"@CohenCyril @mkerjean @strub Here is a tentative changelog, as discussed earlier today, please amend."},{"author":"affeldt-aist","date":"2020-05-26T15:37:28Z","comment":"@CohenCyril Is it ok to squash and merge? (I understand that the changelog is not perfect but we'll do better from now on.)"}],"review_discussion":[{"author":"CohenCyril","file":"CHANGELOG_UNRELEASED.md","date":"2020-05-25T20:47:15Z","comment":"```suggestion\r\n    * a general one `numFieldType`  (`inv_` lemmas in normedtype.v, no differential so far, just continuity)\r\n```"}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"f13a80b0f1a2803d2be55ca2b0ddb923c501f623","message":"tentative changelog","date":"2020-05-25T20:39:36Z"},{"author":"CohenCyril","committer":"web-flow","hash":"d8415e9c07469d9e857494c2ec0db62232dcb195","message":"Update CHANGELOG_UNRELEASED.md","date":"2020-05-25T20:48:55Z"},{"author":"CohenCyril","committer":"web-flow","hash":"2716696eacd8b32509c7a00e974dd12b9718aa0a","message":"swapping stuff","date":"2020-05-26T17:39:57Z"}]},{"author":"CohenCyril","number":211,"diff_summary":[{"file":"config.nix","status":"M","additions":1,"deletions":0}],"state":"merged","open_date":"2020-05-23T19:29:53Z","update_date":"2020-05-23T20:04:13Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"CohenCyril","committer":"CohenCyril","hash":"efb75d7e8a6d8b5bd29e2f1a2a0f71b7710a00e9","message":"updating config.nix","date":"2020-05-23T19:28:11Z"}]},{"author":"CohenCyril","number":210,"diff_summary":[{"file":"config.nix","status":"A","additions":46,"deletions":20},{"file":"default.nix","status":"A","additions":46,"deletions":20},{"file":"package.nix","status":"A","additions":46,"deletions":20}],"state":"merged","open_date":"2020-05-23T01:36:43Z","update_date":"2020-05-23T02:16:23Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"CohenCyril","committer":"CohenCyril","hash":"9b1e649d78a11b256bc55eb90f801206a63608d1","message":"upgrading default.nix","date":"2020-05-23T01:34:20Z"}]},{"author":"affeldt-aist","number":209,"diff_summary":[{"file":"theories/normedtype.v","status":"M","additions":1,"deletions":4}],"state":"merged","open_date":"2020-05-21T17:30:18Z","update_date":"2020-05-21T17:49:05Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"81c056c0c396290c0bd483f52bec430f411095bc","message":"use mathcomp's subrKA instead of sub_trans","date":"2020-05-21T17:29:00Z"}]},{"author":"affeldt-aist","number":208,"diff_summary":[{"file":"theories/ereal.v","status":"M","additions":50,"deletions":2}],"state":"merged","open_date":"2020-05-21T01:15:33Z","update_date":"2020-05-23T01:39:08Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"db26276780b6af2b5937c56a180bb1a3e6ffebc0","message":"a few lemmas about extended reals' arithmetic","date":"2020-05-21T01:11:53Z"}]},{"author":"affeldt-aist","number":207,"diff_summary":[{"file":"_CoqProject","status":"A","additions":438,"deletions":0},{"file":"theories/sequences_wip.v","status":"A","additions":438,"deletions":0}],"state":"open","open_date":"2020-05-21T00:12:24Z","update_date":"2022-04-21T00:26:37Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"47d327409ff32aba55bbb450f524ef5ec23c4235","message":"More examples of sequences and series\n\n- convergence of (1 + 1/n)^n\n- density of R","date":"2021-09-07T00:55:57Z"}]},{"author":"vlj","number":206,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":189,"deletions":28},{"file":"theories/altreals/discrete.v","status":"M","additions":189,"deletions":28},{"file":"theories/boolp.v","status":"M","additions":189,"deletions":28},{"file":"theories/classical_sets.v","status":"M","additions":189,"deletions":28},{"file":"theories/topology.v","status":"M","additions":189,"deletions":28}],"state":"merged","open_date":"2020-05-18T21:11:26Z","update_date":"2020-11-10T14:27:26Z","discussion":[{"author":"CohenCyril","date":"2020-05-19T16:47:52Z","comment":"Hi @vlj thanks for your contribution, I will take a look a deeper look next week."},{"author":"CohenCyril","date":"2020-08-07T22:02:20Z","comment":"@vlj  thanks for your contribution, I think once the proofs are tidied we can merge, indeed proofs in math-comp/analysis should adhere to [math-comp core contributing style](https://github.com/math-comp/math-comp/blob/master/CONTRIBUTING.md) and more particularily [the proof style](https://github.com/math-comp/math-comp/blob/master/CONTRIBUTING.md#proof-style).\r\nIn particular:\r\n- The only period symbol (`.`) in a line should be the last character of the line.\r\n- When exactly two subgoals are generated, the first one should be indented and second one should not. No bullets should be used.\r\nSorry for the delay, and please do not hesitate to ask questions, I will try to be more reactive now!\r\n"},{"author":"vlj","date":"2020-08-23T09:39:30Z","comment":"About the first convention is it accepted to use the semicolon symbol even if only a single goal is focused?"},{"author":"CohenCyril","date":"2020-08-24T11:53:25Z","comment":"> About the first convention is it accepted to use the semicolon symbol even if only a single goal is focused?\r\n\r\nYes, in mathcomp proof style conventions, the semicolon is not used regardless of how many goals are focused, and its purpose is to group tactics in a line that makes a single, substantial step of reasoning."},{"author":"CohenCyril","date":"2020-08-24T12:36:00Z","comment":"Hi @vlj, I refactored and cleaned your code. The wrapper lemmas you defined were not necessary if you partially apply the wanted lemmas. Some intermediate definitions were superfluous. About the `bool` vs `Prop` thing, it is indeed expected that lattice relations are in `bool` while the classic subset relation is in `Prop`. Indeed `asbool` was needed but should be used minimally.\r\nSome pieces of code are still missing to turn sets into a full-fledged distributive lattice with top and bottom and complement. We could merge as such and open a new PR to complement it...\r\nFrom the naming of your (former) wrapper lemmas, I also suspect that many of our set lemmas in `classical_sets.v` are not following the naming conventions from `finset.v` or `order.v` (also cf #252), hence one should open yet another PR to fix them. (ping @affeldt-aist)"},{"author":"affeldt-aist","date":"2020-08-25T01:07:27Z","comment":"`setIDl` was renamed to `setIUl` by a recent PR (hence the rebase/push force).\r\n`classical_sets.v` was lacking `setUK`, etc. lemmas.\r\nShould `setI_meet` be renamed `setIidPlE` and moved near `setIidPl`?"},{"author":"vlj","date":"2020-08-26T18:40:39Z","comment":"Thanks for the refactoring and renaming !\r\nI added the canonical structure for top and bottom. I didn't manage to get Order.BLattice.Mixin to accept the sub0set lemma so I introduced an intermediate fact that uses the asboolP. There is no counterpart for the setTsub so I directly write the one that fits the input of Order.TBLattice.Mixin."},{"author":"vlj","date":"2020-09-12T21:49:11Z","comment":"I added complement and sub."},{"author":"CohenCyril","date":"2020-09-25T12:17:48Z","comment":"Additionally, the changelog should document the new canonical instances and the `E` lemmas."},{"author":"vlj","date":"2020-09-26T15:33:06Z","comment":"I merged and added the lemmas suggested."},{"author":"CohenCyril","date":"2020-09-26T19:17:00Z","comment":"Great! Can you squash and rebase?"},{"author":"vlj","date":"2020-09-28T20:41:31Z","comment":"Working on it, but it's WIP."},{"author":"vlj","date":"2020-09-29T11:46:43Z","comment":"Is mathcomp analysis supposed to be built against dev branch of mathcomp ? I need the contra_not_neq lemma which seems to have been introduced recently in ssrbool."},{"author":"CohenCyril","date":"2020-09-29T11:53:22Z","comment":"Indeed, @vlj we build master against stable releases, you may add a copy of `contra_not_neq` in `boolp.v`, with a comment saying that is material that will be subsumed by mathcomp 1.12, and you should open an issue after the merge of the PR to remind us to remove it as soon as we switch to mathcomp 1.12 when it is release"},{"author":"vlj","date":"2020-09-30T12:45:14Z","comment":"I modified the proper_subset definition. I had some troubles writing the properEset and I'm not sure it's the easiest way to do ; it uses a couple intermediate lemma, setDset0 :  (Y `\\` X) != set0 <-> exists2 a : T, Y a & ~ X a. and subsetNeqSetDnonempty (H : X `<=` Y) : X != Y <-> (Y `\\` X) != set0. I think setDset0 may be useful for other purpose, I don't know if subsetNeqSetDnonempty  is too specific or not. I'm also not very experimented with the asbool_* lemmas so maybe it's not optimal either."},{"author":"vlj","date":"2020-10-04T10:48:57Z","comment":"Added proper_neqAsubset lemma."},{"author":"affeldt-aist","date":"2020-11-05T01:38:57Z","comment":"> The `Exports` module misses a few canonicals: `Internal.blatticeType` ... `Internal.ctbDistrLatticeType`. Also, I think `subEset` should be renamed `subsetEset`, and you should add as well `` properEset : (X < Y)%O = (X `<` Y) ``, `` subEset : (X `\\` Y)%O = (X `\\` Y) ``, `` complEset : (~` X)%O = ~` X ``, `botEset : 0%O = set0` , `topEset : 1%O = setT`.\r\n\r\nIt looks like these changes have been performed.\r\n"},{"author":"pi8027","date":"2020-11-05T11:04:16Z","comment":"@affeldt-aist Could you request me a review here just not to forget about it? Thanks."},{"author":"affeldt-aist","date":"2020-11-05T11:06:15Z","comment":"> @affeldt-aist Could you request me a review here just not to forget about it? Thanks.\r\n\r\nSure. Thank you!"}],"review_discussion":[{"author":"CohenCyril","file":"theories/classical_sets.v","date":"2020-08-24T11:55:33Z","comment":"These three last lines should be regrouped in one single line."},{"author":"CohenCyril","file":"CHANGELOG_UNRELEASED.md","date":"2020-09-26T19:17:52Z","comment":"```suggestion\r\n  + Canonical `porderType`, `latticeType`, `distrLatticeType`, `blatticeType`, `tblatticeType`, `bDistrLatticeType`, `tbDistrLatticeType`, `cbDistrLatticeType`, `ctbDistrLatticeType` on classical `set`\r\n```"},{"author":"CohenCyril","file":"theories/classical_sets.v","date":"2020-09-26T19:20:09Z","comment":"```suggestion\r\nDefinition proper_subset {A} (X Y : set A) := (Y != X)  /\\ X `<=` Y.\r\n```"},{"author":"CohenCyril","file":"theories/classical_sets.v","date":"2020-09-26T22:12:13Z","comment":"Actually, on second thoughts, this definition would be even more usable like this:\r\n```suggestion\r\nDefinition proper_subset {A} (X Y : set A) := (X `<=` Y) /\\ (exists2 a, Y a & ~ X a).\r\n```\r\nWith lemma ``proper_neqAsubset :  (X `<` Y) =  (X `!=` Y) /\\  (X `<=` Y)``"},{"author":"affeldt-aist","file":"theories/classical_sets.v","date":"2020-11-05T03:05:46Z","comment":"I tried yet another definition, the one mimicking `fintype`. See the last commit."},{"author":"pi8027","file":"theories/classical_sets.v","date":"2020-11-06T09:59:45Z","comment":"Having both `subset`/`proper` and `<=%O`/`<%O` for the subset relations of classical sets seems to be duplication. (The former ones are `Prop` relations but it does not make any difference in MathComp analysis.)"},{"author":"pi8027","file":"theories/classical_sets.v","date":"2020-11-06T10:05:47Z","comment":"I think it is better to make `Order.lt` convertible with `(fun X Y => '[<proper X Y>])` here. The third argument of `MeetJoinMixin` has to be explicitly provided and `(fun _ _ => erefl)` has also to be replaced."},{"author":"pi8027","file":"theories/classical_sets.v","date":"2020-11-06T10:06:12Z","comment":"```suggestion\r\nLocal Canonical bLatticeType :=\r\n```"},{"author":"pi8027","file":"theories/classical_sets.v","date":"2020-11-06T10:06:27Z","comment":"```suggestion\r\nLocal Canonical tbLatticeType :=\r\n```"},{"author":"affeldt-aist","file":"theories/classical_sets.v","date":"2020-11-06T10:57:51Z","comment":"Indeed. But maybe this should be another PR. Is it ok to raise an issue about that and do it later, or do you think it should be done now?"},{"author":"pi8027","file":"theories/classical_sets.v","date":"2020-11-06T15:23:14Z","comment":"It is OK to do so, but I think ssrmatching becomes less useful when we duplicate definitions like this, and then we often have to rewrite ones to others manually. Also, there is a substantial overlap between the order theory and `classical_sets.v`."},{"author":"CohenCyril","file":"theories/classical_sets.v","date":"2020-11-08T00:12:45Z","comment":"@pi8027 in fact, it still makes a difference even in mathcomp analysis: because the propositional version is directly usable as an implication (for `subset`) or a conjunction of an implication (and a negation of one) for `proper`, we should have both, and there should be a reflection lemma between the two.\r\nHowever, the big problem for me is the naming, which conflicts entirely with finset, ... we should rename them all, but that's beyond the scope of this PR."},{"author":"affeldt-aist","file":"theories/classical_sets.v","date":"2020-11-09T09:01:55Z","comment":"> there should be a reflection lemma between the two\r\n\r\nAre the `subsetEset`, `properEset`, etc. lemmas sufficient for this purpose? (Provided we `Export SetOrder.Exports.`.)"}],"tags":[],"commits":[{"author":"vlj","committer":"affeldt-aist","hash":"880c49c7d55bbb34dbc436c19408e5b43b4764d2","message":"Add a distrLattice structure to subset.\n\nWith help from affeldt-aist and CohenCyril.","date":"2020-11-06T10:59:47Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"3640ec78b93eb037685b44aefaea7a6e3811a3f8","message":"change the definition of `proper_subset`\n\n- in `classical_sets.v`\n  + renamed and change the definition of `proper_subset` (to `proper` like in `fintype`)\n  + `eqEsubset` changed to be directionnal using `=` (like `finset`)\n  + `proper_neqAsubset` renamed to `properEneq` (like `finset`)\n  + `subsetNeqSetDnonempty` and `setDset0` removed\n- in `boolp.v`:\n  + add not_exists2P\n  + rename `exists2NP` to `forall2NP` and make it bidirectionnal","date":"2020-11-06T10:59:47Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"8010881e1dee1492b4bee1478862b6fb43152b18","message":"review by Sakaguchi-san\n\nCo-authored-by: Kazuhiko Sakaguchi <pi8027@gmail.com>","date":"2020-11-06T10:59:47Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"e72ac8bada54365d75ca0eec51917a0802dce6c6","message":"add subsetPset and properPset","date":"2020-11-10T08:24:26Z"}]},{"author":"mkerjean","number":205,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"A","additions":1481,"deletions":352},{"file":"README.md","status":"A","additions":1481,"deletions":352},{"file":"default.nix","status":"A","additions":1481,"deletions":352},{"file":"hierarchy.png","status":"A","additions":1481,"deletions":352},{"file":"meta.yml","status":"A","additions":1481,"deletions":352},{"file":"theories/derive.v","status":"A","additions":1481,"deletions":352},{"file":"theories/ereal.v","status":"A","additions":1481,"deletions":352},{"file":"theories/measure.v","status":"A","additions":1481,"deletions":352},{"file":"theories/normedtype.v","status":"A","additions":1481,"deletions":352},{"file":"theories/sequences.v","status":"A","additions":1481,"deletions":352},{"file":"theories/topology.v","status":"A","additions":1481,"deletions":352}],"state":"merged","open_date":"2020-05-15T23:12:44Z","update_date":"2021-03-19T01:16:32Z","discussion":[{"author":"CohenCyril","date":"2020-05-26T17:59:43Z","comment":"I am not sure it is the problem, but I see one possible explanation: you are missing the closure under the join, e.g. solution to `GRing.Ring.sort ?1 = GRing.LModule.sort ?2`, must go through `GRing.LAlgebra` and `GRing.Field.sort ?1 = GRing.LModule.sort ?2` must go through `FieldExtension`. So it seems to me that providing canonical structures only up to `lmodType` may cause unification failures and the fix is to state and make canonical that `F` is a (trivial) field extension over itself...\r\n"},{"author":"mkerjean","date":"2020-05-29T15:37:49Z","comment":"> I am not sure it is the problem, but I see one possible explanation: you are missing the closure under the join, e.g. solution to `GRing.Ring.sort ?1 = GRing.LModule.sort ?2`, must go through `GRing.LAlgebra` and `GRing.Field.sort ?1 = GRing.LModule.sort ?2` must go through `FieldExtension`. So it seems to me that providing canonical structures only up to `lmodType` may cause unification failures and the fix is to state and make canonical that `F` is a (trivial) field extension over itself...\r\n\r\nWould that be a way to resolve the rift between `NormedModule.lmodType` and  `numfield_lmodType` ? I'm puzzled about wether a new structure mimicking `numFieldType` but with a forgetful functor to lmodType is necessary. \r\nAlso where can I find `FieldExtenstion` ? "},{"author":"CohenCyril","date":"2020-05-29T21:34:54Z","comment":"> > I am not sure it is the problem, but I see one possible explanation: you are missing the closure under the join, e.g. solution to `GRing.Ring.sort ?1 = GRing.LModule.sort ?2`, must go through `GRing.LAlgebra` and `GRing.Field.sort ?1 = GRing.LModule.sort ?2` must go through `FieldExtension`. So it seems to me that providing canonical structures only up to `lmodType` may cause unification failures and the fix is to state and make canonical that `F` is a (trivial) field extension over itself...\r\n> \r\n> Would that be a way to resolve the rift between `NormedModule.lmodType` and `numfield_lmodType` ? I'm puzzled about wether a new structure mimicking `numFieldType` but with a forgetful functor to lmodType is necessary.\r\n\r\nI do not think a new structure is necessary. But I could be wrong... but it's difficult to say until we check whether all the joins can be defined...\r\n\r\n> Also where can I find `FieldExtenstion` ?\r\n\r\nhttps://github.com/math-comp/math-comp/blob/master/mathcomp/field/fieldext.v#L10\r\n\r\n"},{"author":"pi8027","date":"2020-09-23T09:27:58Z","comment":"PR math-comp/math-comp#591 reimplements the solution to the issue of ambiguous paths (math-comp/math-comp#546) using primitive class records. I suggest using the new one to work on this PR. If there is a problem, please let me know.\r\n"},{"author":"pi8027","date":"2020-12-09T21:35:26Z","comment":"@mkerjean Do you need any help? I would like to take a look at this PR after merging #275."},{"author":"mkerjean","date":"2020-12-09T21:43:34Z","comment":"> @mkerjean Do you need any help? I would like to take a look at this PR after merging #275.\r\n\r\nYes ! I think this PR begins to look better. I moved your [previous](https://github.com/math-comp/analysis/blob/b3a67378443dc35cd788b02dc384a5f3a4949935/theories/topology.v#L4329) definitions at the end of `topology.v` , as they are now needed by `ereal.v`. \r\n\r\nI would be especially happy to have your opinion on [these](https://github.com/math-comp/analysis/blob/b3a67378443dc35cd788b02dc384a5f3a4949935/theories/normedtype.v#L1258) new definitions : should normedModType structures on `rcfType`, `realType` and others be defined this way ? Shoud we define them without a clone of the structure using `_^o` ? "},{"author":"mkerjean","date":"2020-12-09T21:48:03Z","comment":"@affeldt-aist The way I did it, taking `^o` out of `ereal.v` as the unfortunate consequence that `ereal_hausdorff` needs to be explicitely used sometimes ([here](https://github.com/math-comp/analysis/blob/b3a67378443dc35cd788b02dc384a5f3a4949935/theories/measure.v#L312) for example). Do you see why ?  "},{"author":"affeldt-aist","date":"2020-12-10T02:10:08Z","comment":"> @affeldt-aist The way I did it, taking `^o` out of `ereal.v` as the unfortunate consequence that `ereal_hausdorff` needs to be explicitely used sometimes ([here](https://github.com/math-comp/analysis/blob/b3a67378443dc35cd788b02dc384a5f3a4949935/theories/measure.v#L312) for example). Do you see why ?\r\n\r\nIt seems to be fixable by changing the `Hint` (I committed)."},{"author":"pi8027","date":"2020-12-17T09:44:24Z","comment":"FTR, `sequences.v` still has some remaining `^o`."},{"author":"mkerjean","date":"2020-12-17T10:01:28Z","comment":"> FTR, `sequences.v` still has some remaining `^o`.\r\n\r\nI'll try to do that today, thanks"},{"author":"CohenCyril","date":"2020-12-17T16:39:05Z","comment":"Left todo before merge :\r\n- [ ] encapsulate \"non-forgetful inheritance\" instances inside a module (e.g `NumFieldNormed`) and document it in the headers and import the module in the subsequent files of the library,\r\n- [ ] add a `CHANGELOG_UNRELEASED.md` entry,\r\n- [ ] squash & rebase on top of master"},{"author":"pi8027","date":"2020-12-18T14:17:27Z","comment":"FYI, I intend to modify `hierarchy.ml` at some point to make sure there is no missing join in this PR, but I'm not sure if it is doable."},{"author":"mkerjean","date":"2020-12-18T14:20:55Z","comment":"> FYI, I intend to modify `hierarchy.ml` at some point to make sure there is no missing join in this PR, but I'm not sure if it is doable.\r\n\r\nThat woudl be great! I'm afraid that [these](https://github.com/math-comp/analysis/blob/b3a67378443dc35cd788b02dc384a5f3a4949935/theories/normedtype.v#L1258) definitions should be done directly one the hierarchy of topological structures. Do you want to merge already the cleanup you did in your fork of the PR ? "},{"author":"pi8027","date":"2020-12-18T14:58:14Z","comment":"> That woudl be great! I'm afraid that [these](https://github.com/math-comp/analysis/blob/b3a67378443dc35cd788b02dc384a5f3a4949935/theories/normedtype.v#L1258) definitions should be done directly one the hierarchy of topological structures.\r\n\r\nI'm not sure if I understood what you say, but is it the same as the following one?:\r\n\r\n> I would be especially happy to have your opinion on [these](https://github.com/math-comp/analysis/blob/b3a67378443dc35cd788b02dc384a5f3a4949935/theories/normedtype.v#L1258) new definitions : should normedModType structures on `rcfType`, `realType` and others be defined this way ? Shoud we define them without a clone of the structure using `_^o` ?\r\n\r\nOK, I actually did not answer this. I think we should define a `regular` instance for each topological structure (pointed, filtered, topological, normed modules, etc.), but not for each numeric field structure (`rcfType`, `realType`, etc.), and then define instances for non-forgetful inheritance based on them. These `regular` instances solve unification problems of the form `Pointed.sort ?1 = regular ?2`, `Filtered.sort ?1 = regular ?2`, and so on, and then force `?2` to be canonically a `numFieldType`. Since other numeric field structures are canonically `numFieldType`, we do not need `regular` instances for them. Also, if we define such `regular` instances, they will be redundant with ones for `numFieldType`.\r\n\r\n> Do you want to merge already the cleanup you did in your fork of the PR ?\r\n\r\nNo (I mean, not now). I'd like to wait for #275."},{"author":"mkerjean","date":"2020-12-18T15:06:49Z","comment":"> > That woudl be great! I'm afraid that [these](https://github.com/math-comp/analysis/blob/b3a67378443dc35cd788b02dc384a5f3a4949935/theories/normedtype.v#L1258) definitions should be done directly one the hierarchy of topological structures.\r\n> \r\n> I'm not sure if I understood what you say, but is it the same as the following one?:\r\n> \r\n> > I would be especially happy to have your opinion on [these](https://github.com/math-comp/analysis/blob/b3a67378443dc35cd788b02dc384a5f3a4949935/theories/normedtype.v#L1258) new definitions : should normedModType structures on `rcfType`, `realType` and others be defined this way ? Shoud we define them without a clone of the structure using `_^o` ?\r\n> \r\n> OK, I actually did not answer this. I think we should define a `regular` instance for each topological structure (pointed, filtered, topological, normed modules, etc.), but not for each numeric field structure (`rcfType`, `realType`, etc.), and then define instances for non-forgetful inheritance based on them. These `regular` instances solve unification problems of the form `Pointed.sort ?1 = regular ?2`, `Filtered.sort ?1 = regular ?2`, and so on, and then force `?2` to be canonically a `numFieldType`. Since other numeric field structures are canonically `numFieldType`, we do not need `regular` instances for them. Also, if we define such `regular` instances, they will be redundant with ones for `numFieldType`.\r\n> \r\nIndeed, it was the same question. Thanks for your explanations. So we are ok for now, and  wait for PR#275 to be merged to rebase.\r\n\r\n> > Do you want to merge already the cleanup you did in your fork of the PR ?\r\n> \r\n> No (I mean, not now). I'd like to wait for #275.\r\n"},{"author":"pi8027","date":"2020-12-21T07:12:57Z","comment":"I'm working on a fix for this PR. I suggest not to touch this branch until further notice so that we do not duplicate our efforts."},{"author":"pi8027","date":"2020-12-22T13:27:47Z","comment":"I still have to fix canonical declarations, but I do not see any serious unfixable issues. Here is the inheritance diagram excluding `countalg` and `finalg` structures:\r\n![hierarchy](https://user-images.githubusercontent.com/111003/102892903-f1adf680-44a3-11eb-9a31-68c93a43ba7c.png)\r\n"},{"author":"pi8027","date":"2020-12-25T22:13:31Z","comment":"I made some progress. See: https://github.com/pi8027/analysis/tree/numfield_topology.\r\n\r\nHere is the list of remaining issues I discovered:\r\n- Currently, the smallest `ssralg`/`ssrnum` structure that inherits from `pointedType` is `numFieldType` as in the above diagram, and the following `R_pointedType` (which improperly make `numDomainType` inheriting from `pointedType`) has been removed. https://github.com/math-comp/analysis/blob/823ad8d21b4305b111152e59c3fe036d49a8d960/theories/topology.v#L3902 As a consequence of the removal, I had to put `^o` back in the following two places: https://github.com/math-comp/analysis/blob/e954498980cca73b34f32b5ca86c92b6973479ec/theories/normedtype.v#L301 https://github.com/math-comp/analysis/blob/e954498980cca73b34f32b5ca86c92b6973479ec/theories/normedtype.v#L322 I'd like to hear @CohenCyril's opinion on whether we should make `numDomainType` inheriting from `pointedType` properly to fix this or not. I think that downsides to doing so are that,\r\n  1. `normedZmodType` has also to inherit from `pointedType` to avoid ambiguous join (if we simply add an edge from `pointedType` to `numDomainType`, `pointedType` and `zmodType` have two joins: `numDomainType` and `pseudoMetricNormedZmodType`),\r\n  2. then `pseudoMetricNormedZmodType` has also to inherit from `pointedType` *by non-forgetful inheritance* to avoid ambiguous coercion paths (I mean, in the definition of the `pseudoMetricNormedZmodType`, the `pointedType` mixin has to be removed from the class record and derived from the `zmodType` mixin instead), and\r\n  3. we have to be really careful not to introduce conversion issues of `pointedType` instances.\r\n- I had to patch the proof of `cvg_norm` but do not understand why. https://github.com/math-comp/analysis/commit/e954498980cca73b34f32b5ca86c92b6973479ec#diff-ec3855f35a085739515162cb2620b5daea6488b737c11df25d618370adc5e240R2595-R2596\r\n- There is only one remaining explicit application of `harmonic`. I think this is unfixable. https://github.com/math-comp/analysis/blob/e954498980cca73b34f32b5ca86c92b6973479ec/theories/sequences.v#L693"},{"author":"mkerjean","date":"2021-01-04T09:53:57Z","comment":"> I made some progress. See: https://github.com/pi8027/analysis/tree/numfield_topology.\r\n\r\nCould you describe the changes you made to `normedtype.v` in this branch, in particular concerning the module `nonforgetful_inheritance` ? Is it mainly a reordering of the deleted canonical definitions, or are they new structures at stakes ?\r\n\r\n"},{"author":"pi8027","date":"2021-01-04T11:01:49Z","comment":"> > I made some progress. See: https://github.com/pi8027/analysis/tree/numfield_topology.\r\n> \r\n> Could you describe the changes you made to `normedtype.v` in this branch, in particular concerning the module `nonforgetful_inheritance` ? Is it mainly a reordering of the deleted canonical definitions, or are they new structures at stakes ?\r\n\r\n@mkerjean Since Coq gives precedence to the oldest coercion path between two coercion classes, the coercion from `realType` (and other structures that inherit from `numFieldType`) to `normedModType` (and `pseudoMetricNormedZmodType`) has to be declared before one from `numFieldType` to `normedModType`. So I reordered them upside down (from `realType` to `numFieldType` ordering). A bunch of missing (non-trivial) joins have also been added, e.g., the join of `numDomainType` and `normedModType` should be `numFieldType`."},{"author":"pi8027","date":"2021-01-13T18:51:04Z","comment":"I will unlikely be able to make more progress until Feb 2. Also, I need feedback from Cyril to make more progress anyway. (No pressure intended.)"},{"author":"mkerjean","date":"2021-01-13T18:58:22Z","comment":"> I will unlikely be able to make more progress until Feb 2. Also, I need feedback from Cyril to make more progress anyway. (No pressure intended.)\r\n\r\nThe status of this PR could be discussed in the next Analysis meeting. I am waiting for it to be merged to rebase the PRs related to Hahn Banach, Banach Steinhauss and holomorpy on it. "},{"author":"CohenCyril","date":"2021-01-14T00:02:02Z","comment":"Ah sorry, I've been kind of busy...\r\nThe problem is that forgetful inheritance from mathcomp analysis to mathcomp (core) is not possible in the current state of affairs, and altering mathcomp with anything that might lead to to blowup in Galois is risky, so I'm afraid we cannot do a proper inheritance between `numDomainType` and `pointedType` and we'll have to go to the non forgetful one, unless I missed something...\r\n"},{"author":"mkerjean","date":"2021-02-17T15:40:48Z","comment":"Did you had a chance to merge your fork of the PR @pi8027  ? Should this branch be merged with master afterwards @CohenCyril  ? See the [todos](https://github.com/math-comp/analysis/wiki/2021-01-26-Meeting) from the last meeting."},{"author":"affeldt-aist","date":"2021-03-11T15:23:57Z","comment":"small questions about this PR:\r\n- should `default.nix` be changed? (l.49 mentions `numfield_topology` which is this very branch) @CohenCyril \r\n- in `ereal.v`, `lee_fin`, `lte_fin`, `lee_tofin`, `lte_tofin` should use `%O` or` %R`? @pi8027 \r\n"},{"author":"affeldt-aist","date":"2021-03-11T15:40:51Z","comment":"I tried to reflect the changes in the changelog but I am not sure it is good enough. You may want to take a look at it."},{"author":"affeldt-aist","date":"2021-03-12T04:22:02Z","comment":"@pi8027 maybe we should put a date to the diagram to avoid any confusion, or do you have a more recent one?"},{"author":"pi8027","date":"2021-03-12T05:13:42Z","comment":"> in `ereal.v`, `lee_fin`, `lte_fin`, `lee_tofin`, `lte_tofin` should use `%O` or` %R`? @pi8027\r\n\r\nThe LHS and RHS of `lee_fin` are inequations of extended reals and a numeric domain, and should use `ereal_scope` and `ring_scope`, respectively. However, the latter one should be `order_scope` if we generalize it to `porderType`.\r\n\r\n> @pi8027 maybe we should put a date to the diagram to avoid any confusion, or do you have a more recent one?\r\n\r\nhttps://github.com/math-comp/analysis/pull/205#issuecomment-749539719 is up to date."},{"author":"pi8027","date":"2021-03-12T05:23:16Z","comment":"In the case you need the dot file, here it is: [hierarchy.dot](https://github.com/math-comp/analysis/files/6127770/hierarchy.txt).\r\n"},{"author":"affeldt-aist","date":"2021-03-18T08:20:23Z","comment":"> The LHS and RHS of `lee_fin` are inequations of extended reals and a numeric domain, and should use `ereal_scope` and `ring_scope`, respectively. However, the latter one should be `order_scope` if we generalize it to `porderType`.\r\n\r\nI propose to create an issue for that and to merge this PR now. What do you think? @CohenCyril @pi8027 @mkerjean "},{"author":"pi8027","date":"2021-03-18T19:16:02Z","comment":"@affeldt-aist The module `nonforgetful_inheritance` has to be renamed to `numFieldTopology` according to the last meeting."}],"review_discussion":[{"author":"CohenCyril","file":"theories/normedtype.v","date":"2020-05-25T20:59:00Z","comment":"This section looks dangerous to me. Is it necessary to make things work?"},{"author":"mkerjean","file":"theories/normedtype.v","date":"2020-05-26T15:53:50Z","comment":"Nope, corrected."},{"author":"pi8027","file":"theories/normedtype.v","date":"2020-07-08T18:49:01Z","comment":"This is wrong. `pseudoMetric_of_normedDomain` produces a mixin, not a structure instance."},{"author":"pi8027","file":"theories/normedtype.v","date":"2020-07-08T19:01:09Z","comment":"This `Canonical` declaration makes `numFieldType` inheriting from `pointedType`, but by construction rather than inclusion. Actually, this can be generalized to make `zmodType` inheriting from `pointedType`, and then you have to declare unification hints between `Pointed.sort` and all the subclasses of `zmodType`. Even if you do not generalize it, similar unification hints for `numClosedFieldType`, `realFieldType`, `archiFieldType`, `rcfType`, and `realType` have to be declared."},{"author":"pi8027","file":"theories/normedtype.v","date":"2020-07-08T19:08:11Z","comment":"I guess similar issues appear almost everywhere, and it is too painful to fix."},{"author":"pi8027","file":"theories/normedtype.v","date":"2020-07-08T19:30:36Z","comment":"There is an easier way to do this by relying on the regular (^o) instances.\r\n```suggestion\r\nCanonical numfield_lmodType := [lmodType K of K for [lmodType K of K^o]].\r\nCanonical numfield_lalgType := [lalgType K of K for [lalgType K of K^o]].\r\nCanonical numfield_algType := [algType K of K for [algType K of K^o]].\r\n```"},{"author":"mkerjean","file":"theories/normedtype.v","date":"2020-07-08T19:54:07Z","comment":"I would like not to rely on the canonical ^o instances, as I'm afraid this will introduce the usual confusion on the lmodType structure of K^o."},{"author":"mkerjean","file":"theories/normedtype.v","date":"2020-07-08T19:56:01Z","comment":"Indeed, thanks."},{"author":"mkerjean","file":"theories/normedtype.v","date":"2020-07-08T20:10:25Z","comment":"By almost everywhere, do you mean unification hints between `numfieldType` (and its restructions) and pointed/filtered/etc ? "},{"author":"pi8027","file":"theories/normedtype.v","date":"2020-07-08T20:35:30Z","comment":"The above `numfield_lmodType` is constructed using `regular_lmodType`, but the unification hint synthesized from it is `Num.NumField.sort <- GRing.Lmodule.sort`. So it makes `numFieldType` inheriting from `lmodType` by construction."},{"author":"pi8027","file":"theories/normedtype.v","date":"2020-07-08T20:38:26Z","comment":"I meant almost every new canonical declarations (but actually they are not that many). For example, `numfield_lmodType` below has the same issue."},{"author":"pi8027","file":"theories/normedtype.v","date":"2020-07-08T20:48:00Z","comment":"As in Cyril's [comment](https://github.com/math-comp/analysis/pull/205#issuecomment-634182427) above, `numFieldType` should inherit from `fieldExtType` (by construction) after this PR. By transitivity, the structures (A) should inherit from all the structures (B) below.\r\n- (A): `numFieldType`, `numClosedFieldType`, `realFieldType`, `archiFieldType`, `rcfType`, and `realType`,\r\n- (B): `lmodType`, `lalgType`, `algType`, `comAlgType`, `unitAlgType`, `comUnitAlgType`, `vectType`, `falgType`, and `fieldExtType`.\r\n\r\nSo, actually we need the following 6 × 9 = 54 unification hints for them.\r\n```coq\r\nCanonical numField_lmodType (K : numFieldType) :=\r\n  [lmodType K of K for [lmodType K of K^o]].\r\nCanonical numField_lalgType (K : numFieldType) :=\r\n  [lalgType K of K for [lalgType K of K^o]].\r\nCanonical numField_algType (K : numFieldType) :=\r\n  [algType K of K for [algType K of K^o]].\r\nCanonical numField_comAlgType (K : numFieldType) := [comAlgType K of K].\r\nCanonical numField_unitAlgType (K : numFieldType) := [unitAlgType K of K].\r\nCanonical numField_comUnitAlgType (K : numFieldType) := [comUnitAlgType K of K].\r\nCanonical numField_vectType (K : numFieldType) :=\r\n  [vectType K of K for [vectType K of K^o]].\r\nCanonical numField_falgType (K : numFieldType) := [FalgType K of K].\r\nCanonical numField_fieldExtType (K : numFieldType) :=\r\n  [fieldExtType K of K for regular_fieldExtType K].\r\n\r\nCanonical numClosedField_lmodType (K : numClosedFieldType) :=\r\n  [lmodType K of K for [lmodType K of K^o]].\r\nCanonical numClosedField_lalgType (K : numClosedFieldType) :=\r\n  [lalgType K of K for [lalgType K of K^o]].\r\nCanonical numClosedField_algType (K : numClosedFieldType) :=\r\n  [algType K of K for [algType K of K^o]].\r\nCanonical numClosedField_comAlgType (K : numClosedFieldType) :=\r\n  [comAlgType K of K].\r\nCanonical numClosedField_unitAlgType (K : numClosedFieldType) :=\r\n  [unitAlgType K of K].\r\nCanonical numClosedField_comUnitAlgType (K : numClosedFieldType) :=\r\n  [comUnitAlgType K of K].\r\nCanonical numClosedField_vectType (K : numClosedFieldType) :=\r\n  [vectType K of K for [vectType K of K^o]].\r\nCanonical numClosedField_falgType (K : numClosedFieldType) := [FalgType K of K].\r\nCanonical numClosedField_fieldExtType (K : numClosedFieldType) :=\r\n  [fieldExtType K of K for regular_fieldExtType K].\r\n\r\nCanonical realField_lmodType (K : realFieldType) :=\r\n  [lmodType K of K for [lmodType K of K^o]].\r\nCanonical realField_lalgType (K : realFieldType) :=\r\n  [lalgType K of K for [lalgType K of K^o]].\r\nCanonical realField_algType (K : realFieldType) :=\r\n  [algType K of K for [algType K of K^o]].\r\nCanonical realField_comAlgType (K : realFieldType) := [comAlgType K of K].\r\nCanonical realField_unitAlgType (K : realFieldType) := [unitAlgType K of K].\r\nCanonical realField_comUnitAlgType (K : realFieldType) :=\r\n  [comUnitAlgType K of K].\r\nCanonical realField_vectType (K : realFieldType) :=\r\n  [vectType K of K for [vectType K of K^o]].\r\nCanonical realField_falgType (K : realFieldType) := [FalgType K of K].\r\nCanonical realField_fieldExtType (K : realFieldType) :=\r\n  [fieldExtType K of K for regular_fieldExtType K].\r\n\r\nCanonical archiField_lmodType (K : archiFieldType) :=\r\n  [lmodType K of K for [lmodType K of K^o]].\r\nCanonical archiField_lalgType (K : archiFieldType) :=\r\n  [lalgType K of K for [lalgType K of K^o]].\r\nCanonical archiField_algType (K : archiFieldType) :=\r\n  [algType K of K for [algType K of K^o]].\r\nCanonical archiField_comAlgType (K : archiFieldType) := [comAlgType K of K].\r\nCanonical archiField_unitAlgType (K : archiFieldType) := [unitAlgType K of K].\r\nCanonical archiField_comUnitAlgType (K : archiFieldType) :=\r\n  [comUnitAlgType K of K].\r\nCanonical archiField_vectType (K : archiFieldType) :=\r\n  [vectType K of K for [vectType K of K^o]].\r\nCanonical archiField_falgType (K : archiFieldType) := [FalgType K of K].\r\nCanonical archiField_fieldExtType (K : archiFieldType) :=\r\n  [fieldExtType K of K for regular_fieldExtType K].\r\n\r\nCanonical rcf_lmodType (K : rcfType) :=\r\n  [lmodType K of K for [lmodType K of K^o]].\r\nCanonical rcf_lalgType (K : rcfType) :=\r\n  [lalgType K of K for [lalgType K of K^o]].\r\nCanonical rcf_algType (K : rcfType) := [algType K of K for [algType K of K^o]].\r\nCanonical rcf_comAlgType (K : rcfType) := [comAlgType K of K].\r\nCanonical rcf_unitAlgType (K : rcfType) := [unitAlgType K of K].\r\nCanonical rcf_comUnitAlgType (K : rcfType) := [comUnitAlgType K of K].\r\nCanonical rcf_vectType (K : rcfType) :=\r\n  [vectType K of K for [vectType K of K^o]].\r\nCanonical rcf_falgType (K : rcfType) := [FalgType K of K].\r\nCanonical rcf_fieldExtType (K : rcfType) :=\r\n  [fieldExtType K of K for regular_fieldExtType K].\r\n\r\nCanonical real_lmodType (K : realType) :=\r\n  [lmodType K of K for [lmodType K of K^o]].\r\nCanonical real_lalgType (K : realType) :=\r\n  [lalgType K of K for [lalgType K of K^o]].\r\nCanonical real_algType (K : realType) :=\r\n  [algType K of K for [algType K of K^o]].\r\nCanonical real_comAlgType (K : realType) := [comAlgType K of K].\r\nCanonical real_unitAlgType (K : realType) := [unitAlgType K of K].\r\nCanonical real_comUnitAlgType (K : realType) := [comUnitAlgType K of K].\r\nCanonical real_vectType (K : realType) :=\r\n  [vectType K of K for [vectType K of K^o]].\r\nCanonical real_falgType (K : realType) := [FalgType K of K].\r\nCanonical real_fieldExtType (K : realType) :=\r\n  [fieldExtType K of K for regular_fieldExtType K].\r\n```"},{"author":"pi8027","file":"theories/normedtype.v","date":"2020-07-08T20:59:14Z","comment":"I think it would be better to declare these canonicals also as implicit coercions, and if Coq reports \"ambiguous paths\", we should stop coding and discuss."},{"author":"CohenCyril","file":"theories/normedtype.v","date":"2020-07-08T21:06:46Z","comment":"@pi8027 spot on!"},{"author":"CohenCyril","file":"theories/normedtype.v","date":"2020-07-08T21:08:38Z","comment":"> I would like not to rely on the canonical ^o instances, as I'm afraid this will introduce the usual confusion on the lmodType structure of K^o.\r\n\r\nIn the sentence `[lmodType K of X for Y]`, `Y` is only used to get the mixin and the canonical structure is put on `X`. So using `^o` in `Y` leverages what we already know about `^o` to endow `X` with it."},{"author":"CohenCyril","file":"theories/normedtype.v","date":"2020-07-08T21:16:36Z","comment":"@pi8027 \r\n> ```coq\r\n> Canonical numField_fieldExtType (K : numFieldType) :=\r\n>   [fieldExtType K of K for regular_fieldExtType K].\r\n> ```\r\n\r\nI would rather not rely on the name of a canonical definition, doesn't `[fieldExtType K of K^o]` work? (i.e. isn't `regular_fieldExtType K` canonical?)\r\n"},{"author":"pi8027","file":"theories/normedtype.v","date":"2020-07-08T21:21:04Z","comment":"> I would rather not rely on the name of a canonical definition, doesn't `[fieldExtType K of K^o]` work? (i.e. isn't `regular_fieldExtType K` canonical?)\r\n\r\nNo, it doesn't work. I think it is broken on the MathComp side. Let me check."},{"author":"mkerjean","file":"theories/normedtype.v","date":"2020-07-09T07:07:39Z","comment":"> > I would like not to rely on the canonical ^o instances, as I'm afraid this will introduce the usual confusion on the lmodType structure of K^o.\r\n> \r\n> In the sentence `[lmodType K of X for Y]`, `Y` is only used to get the mixin and the canonical structure is put on `X`. So using `^o` in `Y` leverages what we already know about `^o` to endow `X` with it.\r\n\r\nMy goal i this PR was to suppress any use of `K^o` as a topological object. Is there any advantage in using `K^o` as an intermediate object ? "},{"author":"mkerjean","file":"theories/normedtype.v","date":"2020-07-09T07:53:14Z","comment":"> I think it would be better to declare these canonicals also as implicit coercions, and if Coq reports \"ambiguous paths\", we should stop coding and discuss.\r\n\r\nWon't this happen if we keep the constructions on `K^o` as they are ? "},{"author":"CohenCyril","file":"theories/normedtype.v","date":"2020-07-09T12:37:43Z","comment":"> > > I would like not to rely on the canonical ^o instances, as I'm afraid this will introduce the usual confusion on the lmodType structure of K^o.\r\n> > \r\n> > \r\n> > In the sentence `[lmodType K of X for Y]`, `Y` is only used to get the mixin and the canonical structure is put on `X`. So using `^o` in `Y` leverages what we already know about `^o` to endow `X` with it.\r\n> \r\n> My goal i this PR was to suppress any use of `K^o` as a topological object. Is there any advantage in using `K^o` as an intermediate object ?\r\n\r\nYes, as @pi8027  demonstrated, most of the work is already done for `^o` so using it as an intermediate object saves time and proofs."},{"author":"mkerjean","file":"theories/normedtype.v","date":"2020-07-09T12:43:44Z","comment":"Except from time, of course. It seems to me that using `K^o` as an intermediate object makes the file less readable and accessible to new users. I would be willing to rewrite everything on numFields directly."},{"author":"CohenCyril","file":"theories/normedtype.v","date":"2020-07-09T12:50:59Z","comment":"> Except from time, of course. It seems to me that using `K^o` as an intermediate object makes the file less readable and accessible to new users. I would be willing to rewrite everything on numFields directly.\r\n\r\nNot only time but also maintainability (= robustness to change + number of loc to update). One should not write twice the same piece of code.\r\nInstead I advocate for a comment that explains what these lines are doing."},{"author":"mkerjean","file":"theories/normedtype.v","date":"2020-07-09T12:58:50Z","comment":"Indeed, and this is why my intention was to remove anything related to `^o` in the mathcomp/analysis setting. Would you be against that ?"},{"author":"CohenCyril","file":"theories/normedtype.v","date":"2020-07-09T16:32:50Z","comment":"We cannot really remove `^o` since it is defined in core mathcomp and useful there. Actually, all the results about `^o` from @pi8027's snippet come from mathcomp core. There is nothing we can do in mathcomp/analysis to get rid of them, so we'd rather reuse them (for free)."},{"author":"pi8027","file":"theories/normedtype.v","date":"2020-07-09T17:32:56Z","comment":"Using `^o` as an intermediate object to declare these canonicals ensures that they are convertible with the \"regular\" instances, and, FYI, with PR math-comp/math-comp#545, we can write:\r\n``` coq\r\nCanonical numField_fieldExtType (K : numFieldType) := [fieldExtType K of K].\r\n```"},{"author":"pi8027","file":"theories/normedtype.v","date":"2020-07-10T20:41:08Z","comment":"So we have the following ambiguous paths here:\r\n```\r\nNew coercion path [numField_comAlgType; GRing.ComAlgebra.comRingType] : Num.NumField.type >-> GRing.ComRing.type is ambiguous with existing \r\n[Num.NumField.comRingType] : Num.NumField.type >-> GRing.ComRing.type. [ambiguous-paths,typechecker]\r\n```\r\nThe problem is that, since `comAlgType` do not take `comRingType` as its base structure, a record eta expansion appears in the former path."},{"author":"pi8027","file":"theories/normedtype.v","date":"2020-07-12T15:40:54Z","comment":"FYI, I'm working on a fix of this issue on the MathComp side, which subsumes math-comp/math-comp#545 and math-comp/math-comp#546."},{"author":"pi8027","file":"theories/normedtype.v","date":"2020-07-12T23:19:17Z","comment":"Now math-comp/math-comp#546 solves this issue. Adding 54 implicit coercions from `numFieldType` and its subclasses to `fieldExtType` and its superclasses does not introduce any ambiguous path. I think it is safe to use my PR 546 to work on this PR, but I intend to rework my PR using primitive records."},{"author":"mkerjean","file":"theories/normedtype.v","date":"2020-10-12T13:10:23Z","comment":"> PR [math-comp/math-comp#591](https://github.com/math-comp/math-comp/pull/591) reimplements the solution to the issue of ambiguous paths ([math-comp/math-comp#546](https://github.com/math-comp/math-comp/pull/546)) using primitive class records. I suggest using the new one to work on this PR. If there is a problem, please let me know.\r\n\r\nSince PR591 has been merged, I am trying to use the master branch of mathcomp to work on the present PR205, but real-closed doesn't seem to compile over mathcomp-master. Do you have any idea why ? \r\n\r\n```\r\nFile \"./theories/polyrcf.v\", line 228, characters 0-63:\r\nError: The LHS of leNgt\r\n    (_ <= _)%O\r\ndoes not match any subterm of the goal\r\n```\r\n"},{"author":"pi8027","file":"theories/normedtype.v","date":"2020-10-12T13:19:04Z","comment":"math-comp/real-closed#28 is compatible with the master branch of MathComp."},{"author":"mkerjean","file":"theories/normedtype.v","date":"2020-10-12T14:48:38Z","comment":"Is the master branch of analysis supposed to be compatible to be compatible with the master branch of mathcomp ? I'm having trouble rebasing section [numfiled_topological](https://github.com/math-comp/analysis/blob/0ab9e13f9ce156aea29ebc48b1f66103bb1d54e2/theories/normedtype.v#L391) but I'm also stumbling on issues like that : \r\n\r\n```\r\nFile \"./theories/normedtype.v\", line 525, characters 2-76:\r\nError: The LHS of ler_paddr\r\n    (_ <= _ + _)\r\ndoes not match any subterm of the goal\r\n```\r\n\r\n"},{"author":"mkerjean","file":"theories/normedtype.v","date":"2020-11-09T13:27:42Z","comment":"@pi8027 Since the rebasing of analysis on the master branch of math-comp is failing at the moment, I would like to rebase directly the present PR on your local solutions, but the branch merged in [math-comp/math-comp#591](https://github.com/math-comp/math-comp/pull/591) doesn't seems to be available anymore. Where can I find it ? "},{"author":"pi8027","file":"theories/topology.v","date":"2020-12-17T07:42:10Z","comment":"With MathComp 1.12, I do not observe this issue of ambiguous paths. See https://github.com/pi8027/analysis/tree/numfield_topology"},{"author":"pi8027","file":"theories/normedtype.v","date":"2020-12-17T07:50:18Z","comment":"They seem redundant with canonical declarations in topology.v, and can be removed if I'm not mistaken. (Also, those declarations in topology.v can probably be removed.)"},{"author":"mkerjean","file":"theories/normedtype.v","date":"2020-12-17T11:36:10Z","comment":"I misunderstood your comment: you are right, these lines should be removed both from `topology.v` and `normedtype.v`. However, these is still an issue in  `sequence.v` concerning `harmonic` on which I am working, and for now the `Canonical numFieldType_regular_topologicalType ` is needed to make sequence.v compile."},{"author":"mkerjean","file":"theories/sequences.v","date":"2020-12-18T11:13:03Z","comment":"Do you understand why the argument of harmonic needs to be explicit now @pi8027 @affeldt-aist ? How would the new topological definitions affect this ?"},{"author":"pi8027","file":"theories/sequences.v","date":"2020-12-18T13:48:13Z","comment":"Because a `fieldType` is not canonically a `filteredType`? The error message seems to make sense, but I don't get how to fix this.\r\n```coq\r\nError:\r\nIn environment\r\nR : Num.ArchimedeanField.type\r\nThe term \"Phantom (sequence (GRing.Field.sort ?R)) (@harmonic ?R)\" has type\r\n \"phantom (sequence (GRing.Field.sort ?R)) (@harmonic ?R)\" while it is expected to have type\r\n \"phantom (@Filtered.sort ?X ?fX) ?x\".\r\n```"},{"author":"pi8027","file":"theories/sequences.v","date":"2020-12-18T14:01:38Z","comment":"By annotating the type of `harmonic` by `^o`, we were able to specialize its argument `R` to a `numFieldType` when it gets unified with a `filteredType`. So keeping `^o` for `harmonic` may make sense. Specializing `harmonic` to `R : numFieldType` also solves this inference issue, but it may break something else."},{"author":"pi8027","file":"theories/normedtype.v","date":"2020-12-18T14:09:55Z","comment":"If I remember/understand correctly what @CohenCyril suggested in the last analysis call, we should actually keep them somewhere to allow users to choose the inference style: annotating things with `^o`, or using \"non-forgetful inheritance\" which this PR provides."},{"author":"mkerjean","file":"theories/sequences.v","date":"2020-12-18T14:17:34Z","comment":"Specializing `harmonic` to numFieldType has the consequence that one must make explicit `R` when applying `cvg_harmonic` later."},{"author":"pi8027","file":"theories/sequences.v","date":"2020-12-18T14:20:40Z","comment":"So, I guess it is better not to change the definition of `harmonic`, at least for now."},{"author":"pi8027","file":"theories/sequences.v","date":"2020-12-18T15:16:31Z","comment":"Now I think this is an issue of missing join: `numFieldType` should be the join of `fieldType` and `filteredType`, in other words, a unification problem `GRing.Field.sort ?1 = Filtered.sort ?2` has to be solved by instantiating `?1` and `?2` with a fresh `?3 : numFieldType`."},{"author":"mkerjean","file":"theories/sequences.v","date":"2020-12-18T20:20:38Z","comment":"This should resolve harmonic problem right ? I still struggle with joins, would it be something like that : \r\n```\r\nDefinition filtered_fieldType  (R : numFieldType)\r\n  := @GRing.Field.Pack (numFieldType_filteredType R) (Num.NumField.class R).\r\n```"},{"author":"pi8027","file":"theories/sequences.v","date":"2020-12-19T08:06:51Z","comment":"@mkerjean Yes, but we have to be really careful to fix it. If you leave this part as is, I will take care of this issue."},{"author":"mkerjean","file":"theories/sequences.v","date":"2020-12-21T08:54:59Z","comment":"I  won't work on this PR for at least two weeks, and not until you tell me it is safe to do so."}],"tags":[],"commits":[{"author":"mkerjean","committer":"affeldt-aist","hash":"0f83012374290ae671affdd22f01555b939ce19d","message":"normedType on numFieldType\n\n- Issue with harmonic\n\nCo-authored-by: Kazuhiko Sakaguchi <pi8027@gmail.com>\n\nCo-authored-by: Reynald Affeldt <reynald.affeldt@aist.go.jp>","date":"2021-03-19T00:46:43Z"},{"author":"mkerjean","committer":"affeldt-aist","hash":"52cd42e15aa40d39434b779e6561ff1caeb98fdd","message":"module for canonical topological structure on regular","date":"2021-03-19T00:46:58Z"},{"author":"pi8027","committer":"affeldt-aist","hash":"6a7cc1829940278c21e60bbcd65d9a1b95c36af0","message":"Fix non-forgetful inheritance","date":"2021-03-19T00:46:58Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"b60e93d29b4e34d3028d8618cf141efe5313eb58","message":"changelog, meta\n\n- add inheritance diagram to readme","date":"2021-03-19T00:46:58Z"}]},{"author":"mkerjean","number":204,"diff_summary":[{"file":".travis.yml","status":"A","additions":754,"deletions":7},{"file":"_CoqProject","status":"A","additions":754,"deletions":7},{"file":"config.nix","status":"A","additions":754,"deletions":7},{"file":"default.nix","status":"A","additions":754,"deletions":7},{"file":"opam","status":"A","additions":754,"deletions":7},{"file":"theories/holomorphy.v","status":"A","additions":754,"deletions":7},{"file":"theories/landau.v","status":"A","additions":754,"deletions":7}],"state":"open","open_date":"2020-05-14T13:39:36Z","update_date":"2022-04-21T00:26:37Z","discussion":[{"author":"CohenCyril","date":"2020-05-21T17:04:24Z","comment":"@mkerjean @mkerjean CI fixed (cf https://github.com/math-comp/math-comp-nix/blob/e4d6c84698822d395832a6bc2c6d308356e2b08f/default.nix#L40)"},{"author":"mkerjean","date":"2020-07-12T22:48:37Z","comment":"FYI, for the proof of (Differentiable /\\ Cauchy-Riemann => Holomorphic), I tried to reintroduce two normed structure on `R[i]`, in order to use the theory of differentiability already developed. However, it is still difficult to handle, as basic computations do not  perform easily https://github.com/math-comp/analysis/blob/e2bab6f145d62cde3c15472175983733989e6e14/theories/holomorphy.v#L547. Would that be something which could be solved by [this](https://github.com/math-comp/real-closed/blob/complex_both_modules/theories/complex.v) branch of real-closed  @CohenCyril  ? "}],"review_discussion":[{"author":"CohenCyril","file":"theories/holomorphy.v","date":"2020-10-25T12:14:04Z","comment":"`apply: fmorphV` did not work?"}],"tags":[],"commits":[{"author":"CohenCyril","hash":"1d5e6af675eebb04107ab4e1edb52b7be58a841f","message":"Mathcomp analysis now depends on real-closed\n\n- fixed opam\n- fixed nix\n\nco-authored-by: Reynald Affeldt <reynald.affeldt@aist.go.jp>","date":"2021-03-22T08:38:36Z"},{"author":"mkerjean","hash":"22f9c817a666aa016d598e551de19010d918a634","message":"holomorphic\n\nCo-Authored-By : Reynald Affeldt\nCo-Authored-By : Cyril Cohen","date":"2021-03-22T08:42:04Z"},{"hash":"6bfc8be239028167a756ef448327b5bd1f7462dc","message":"ComplexNumfieldtype","date":"2021-03-22T10:07:53Z"}]},{"author":"affeldt-aist","number":203,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":638,"deletions":501},{"file":"theories/Rstruct.v","status":"M","additions":638,"deletions":501},{"file":"theories/altreals/distr.v","status":"M","additions":638,"deletions":501},{"file":"theories/altreals/realseq.v","status":"M","additions":638,"deletions":501},{"file":"theories/altreals/realsum.v","status":"M","additions":638,"deletions":501},{"file":"theories/boolp.v","status":"M","additions":638,"deletions":501},{"file":"theories/classical_sets.v","status":"M","additions":638,"deletions":501},{"file":"theories/derive.v","status":"M","additions":638,"deletions":501},{"file":"theories/ereal.v","status":"M","additions":638,"deletions":501},{"file":"theories/normedtype.v","status":"M","additions":638,"deletions":501},{"file":"theories/reals.v","status":"M","additions":638,"deletions":501},{"file":"theories/sequences.v","status":"M","additions":638,"deletions":501}],"state":"merged","open_date":"2020-05-11T20:41:45Z","update_date":"2020-06-03T10:41:24Z","discussion":[{"author":"affeldt-aist","date":"2020-05-12T14:04:37Z","comment":"@amahboubi @strub do you have an opinion about replacing `pred` with `set` has done in this commit https://github.com/math-comp/analysis/pull/203/commits/48661cc903ff48df35739e5df60df6ba93db049c ? It looked a bit more comfortable to me."},{"author":"affeldt-aist","date":"2020-05-14T16:53:51Z","comment":"@CohenCyril do you mean this commit https://github.com/math-comp/analysis/commit/f8d361a93db5906a73327d4fcf1fe9070e1960b8 when you refer to the the new `inE`?"},{"author":"affeldt-aist","date":"2020-05-15T11:15:23Z","comment":"@CohenCyril so your opinion is to stick to `pred`-based defnitions?"},{"author":"affeldt-aist","date":"2020-05-16T10:31:51Z","comment":"(Trying to summarize.) `pred`-based predicates and the `\\in` notation might be viable thanks to \r\n- https://github.com/math-comp/analysis/pull/202 (already merged)\r\n- https://github.com/math-comp/math-comp/pull/501 (to be merged)\r\n\r\nFor the time being, this PR sticks to `set`-based predicates, avoids the `\\in` notation, and\r\ntries not to unfold `lb`. `ub`, etc. That does not reduce the size of proofs much, but makes\r\nappear a few factorizations and enables some generalizations.\r\n"},{"author":"affeldt-aist","date":"2020-05-25T10:04:25Z","comment":"As an additional piece of information about `pred` vs. `set`, the commit https://github.com/math-comp/analysis/pull/203/commits/31f83c25912286ac73822b68b690df356807ae1b replays `sequences.v` with `set`-based predicates."},{"author":"affeldt-aist","date":"2020-05-29T13:41:36Z","comment":"We agreed on merging this PR during the last meeting but it seems that it incidentally implements one aspect of PR #117 (this was observed by @mkerjean ).\r\n\r\n@amahboubi Are you also ok with merging?\r\n\r\n"},{"author":"amahboubi","date":"2020-06-03T09:29:38Z","comment":"No objection."},{"author":"CohenCyril","date":"2020-06-03T10:40:47Z","comment":"> No objection.\r\n\r\nThanks @amahboubi, I will merge then."}],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"8dd160b6ba5ac2b2465c76841aeed7a04881d226","message":"generalize ub, lb, etc. from `reals.v`\n\n- replace `pred` with `set` in `reals.v` and propagate\n- replace `-' E` by `-%R @' E`","date":"2020-05-29T14:14:24Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"d72641758a7264cb613a2c1029f49285db9de9fd","message":"Sets of supremums of extended reals are not empty\n\n- move Section ArchiBound from `reals.v` to `classical_sets.v`\n  + could factorize the two definitions of `nonempty`\n- new lemmas `lee_ninfty_eq` and `lee_ninfty_eq`\n- new lemma `image_set0` in `classical_sets.v`\n- move `Section ERealOrderTheory` from `reals.v` to `ereal.v`\n- new `Section ereal_supremum` in `ereal.v`\n  + Lemma `ereal_supremums_neq0` (sets of supremums of extended reals are not empty)","date":"2020-05-29T14:14:24Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"15a5a707c85123965e0aae6abbbb1059115dea14","message":"trying to control the unfolding of ub\n\n- replace `case`s of `pselect` with `have`s of `pselect`\n- replace expressions such as `(forall y, X y -> (x <= y)%O)`\n  by `ub X` (resp. `lb`)\n- avoid implicit unfolding of `ub`, `lb`, `down` by enforcing\n  usage of `ubP`, `lbP`, `downP`\n  + in particular, change the definition of supremum to\n    `ub E `&` lb (ub E)`\n- replace usage of `nonempty` by `!=set0`\n- removed redundant `has_inP`, `has_supP`, `has_ubP`, `has_lbP`,\n  `nonemptyPn`","date":"2020-05-29T14:14:24Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"2eef8b5670541cc6dd4f105a6de10a2ea1183d6d","message":"rebase sequences.v","date":"2020-05-29T14:14:24Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"413e0c32b4c44409b93406eee07529bb2f90a2ee","message":"add doc and lemmas about supremum","date":"2020-05-29T14:14:24Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"fb9adc720483018e31f1d07a3260fcc8944833a5","message":"add changelog information","date":"2020-06-02T11:53:43Z"}]},{"author":"CohenCyril","number":202,"diff_summary":[{"file":"theories/classical_sets.v","status":"M","additions":57,"deletions":55},{"file":"theories/derive.v","status":"M","additions":57,"deletions":55},{"file":"theories/normedtype.v","status":"M","additions":57,"deletions":55},{"file":"theories/topology.v","status":"M","additions":57,"deletions":55}],"state":"merged","open_date":"2020-05-08T15:12:12Z","update_date":"2020-05-08T16:50:47Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"CohenCyril","committer":"CohenCyril","hash":"fe37a388b92a101c7e79dc5f433a39b8e5c2f1ec","message":"in_setE/in_fsetE -> inE","date":"2020-05-08T16:09:05Z"}]},{"author":"CohenCyril","number":201,"diff_summary":[{"file":".travis.yml","status":"M","additions":4,"deletions":0}],"state":"merged","open_date":"2020-05-07T23:11:12Z","update_date":"2020-05-08T02:36:24Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"CohenCyril","committer":"CohenCyril","hash":"1d128ee13fb14db96ea4fef62fffa1d904ada6dd","message":"make travis not run twice!","date":"2020-05-07T23:10:43Z"}]},{"author":"CohenCyril","number":200,"diff_summary":[{"file":"theories/normedtype.v","status":"M","additions":22,"deletions":11},{"file":"theories/topology.v","status":"M","additions":22,"deletions":11}],"state":"merged","open_date":"2020-05-07T23:09:34Z","update_date":"2020-05-07T23:28:27Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"CohenCyril","hash":"33e384aa8eed7abe2742e305c0798fe76abc7900","message":"Various renamings\n\nCo-Authored-By: Reynald Affeldt <reynald.affeldt@aist.go.jp>","date":"2020-05-07T23:08:49Z"}]},{"author":"CohenCyril","number":199,"diff_summary":[{"file":"theories/derive.v","status":"M","additions":484,"deletions":219},{"file":"theories/landau.v","status":"M","additions":484,"deletions":219},{"file":"theories/normedtype.v","status":"M","additions":484,"deletions":219},{"file":"theories/topology.v","status":"M","additions":484,"deletions":219}],"state":"merged","open_date":"2020-05-07T20:25:33Z","update_date":"2020-05-07T23:05:17Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"CohenCyril","committer":"CohenCyril","hash":"bba89c97ee65f1d0a0d720ed947b237e0f7d5c30","message":"Big refactoring about naming conventions\n\n- complete the theory of `cvg_`, `is_cvg_` and `lim_` in normedtype.v\n  with consistent naming schemes\n- fixed differential of `inv` which was defined on `1 / x` instead of `x^-1`\n- two versions of lemmas on inverse exist\n  + one in realType (`Rinv_` lemmas), for which we have differential\n  + one in numClosedFieldType (no differential so far, just continuity)\n- renamed `cvg_norm` to `cvg_dist` to reuse the name `cvg_norm` for convergence under the norm","date":"2020-05-07T21:51:34Z"}]},{"author":"affeldt-aist","number":198,"diff_summary":[{"file":"theories/derive.v","status":"M","additions":11,"deletions":24},{"file":"theories/normedtype.v","status":"M","additions":11,"deletions":24},{"file":"theories/topology.v","status":"M","additions":11,"deletions":24}],"state":"closed","open_date":"2020-05-07T19:49:47Z","update_date":"2020-05-07T23:05:17Z","discussion":[{"author":"CohenCyril","date":"2020-05-07T20:17:32Z","comment":"This PR is going to screw up https://github.com/math-comp/analysis/pull/187/commits/724b76f1df900c3d13b1687886879f49e20e3250#diff-f3e38d654b6f90f27bae5d8e2632fd7fR1468 from #187 "},{"author":"CohenCyril","date":"2020-05-07T20:19:43Z","comment":"I am actually going to extract from #187 all the changes to topology and normedtype. A side effect is to fix #155 "},{"author":"affeldt-aist","date":"2020-05-07T20:20:12Z","comment":"> This PR is going to screw up ...\r\n\r\nMaybe add\r\nfixes #155 to PR #187 ?\r\n"},{"author":"affeldt-aist","date":"2020-05-07T20:21:38Z","comment":"> I am actually going to extract from #187 ...\r\n\r\n:+1: \r\n"}],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"3b963a907891f6d8d03d8ab61b49113e70736baf","message":"fixes #155","date":"2020-05-07T19:41:26Z"}]},{"author":"affeldt-aist","number":197,"diff_summary":[{"file":"CONTRIBUTING.md","status":"A","additions":82,"deletions":2},{"file":"README.md","status":"A","additions":82,"deletions":2}],"state":"merged","open_date":"2020-05-06T22:35:49Z","update_date":"2020-08-07T22:24:31Z","discussion":[],"review_discussion":[{"author":"CohenCyril","file":"CONTRIBUTING.md","date":"2020-08-07T22:03:40Z","comment":"```suggestion\r\nThe purpose of this file is to document coding styles to be\r\n```"},{"author":"CohenCyril","file":"CONTRIBUTING.md","date":"2020-08-07T22:04:46Z","comment":"```suggestion\r\nphrasing, as in\r\n```"},{"author":"CohenCyril","file":"CONTRIBUTING.md","date":"2020-08-07T22:05:08Z","comment":"```suggestion\r\n\\forall x \\near \\oo, P x.\r\n```"},{"author":"CohenCyril","file":"CONTRIBUTING.md","date":"2020-08-07T22:05:33Z","comment":"```suggestion\r\nis might be worth using filter combinators, i.e. lemmas such as\r\n```"},{"author":"CohenCyril","file":"CONTRIBUTING.md","date":"2020-08-07T22:07:47Z","comment":"````suggestion\r\n(for `homo`) or the head of the LHS of the equality (for `mono`), as in\r\n```coq\r\nLemma le_contract : {mono contract : x y / (x <= y)%O}.\r\n```\r\n````"},{"author":"CohenCyril","file":"CONTRIBUTING.md","date":"2020-08-07T22:15:51Z","comment":"```suggestion\r\nLandau notations can be written in four shapes:\r\n- `f =o_F e` (i.e. functional with a simple right member, thus a binary notation)\r\n- `f = g +o_F e` (i.e. functional with an additive right member, thus ternary)\r\n- `f x =o_(x \\near F) (e x)` (i.e. pointwise with a simple right member, thus binary)\r\n- `f x = g x +o_(x \\near F) (e x)` (i.e. pointwise with an additive right member, thus ternary)\r\n\r\nThe outcome is an expression with the normal Leibniz equality `=` and term `'o_F` which is not parsable. See [this paper](https://doi.org/10.6092/issn.1972-5787/8124) for more explanation and the header of the file [landau.v](https://github.com/math-comp/analysis/blob/master/theories/landau.v).\r\n```"},{"author":"CohenCyril","file":"CONTRIBUTING.md","date":"2020-08-07T22:16:05Z","comment":"```suggestion\r\n## `-->` vs. `cvg` vs. `lim`\r\n```"},{"author":"CohenCyril","file":"CONTRIBUTING.md","date":"2020-08-07T22:22:54Z","comment":"```suggestion\r\n- `F --> x` means `F` tends to `x`. _This is the preferred way of stating a convergence._ **Lemmas about it use the string `cvg`.**\r\n- `lim F` is the limit of `F`, it makes sense only when `F` converges and defaults to a distinguished point otherwise. _It should only be used when there is no other expression for the limit._ **Lemmas about it use the string `lim`.**\r\n- `cvg F` is defined as `F --> lim F`, and is equivalent through `cvgP` and `cvg_ex` to the existence of some `x` such that `F --> x`. _When the limit is known, `F --> x` should be preferred._ **Lemmas about it use the string `is_cvg`.**```"}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"eee738a6848e926dd9852067c1192920b36909a0","message":"start a contributing file (wip)","date":"2020-06-11T15:40:56Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"3678ba235f8351c4cd44f8eb17779d398734dea1","message":"add link to mathcomp's contribution guide","date":"2020-06-11T15:40:56Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"a4a7d008b959cc7ef031e956a7296b30cf778e8d","message":"add a comment about near tactics vs. filter lemmas","date":"2020-06-11T15:40:56Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"df6a1406e0cf199a9f0930cab5e4dc85e198f39b","message":"move comment about PR from readme.md to contributing.md","date":"2020-06-11T15:40:56Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"01e58b895e66015ffa5f53b547fb045f241fffd2","message":"naming convention about homo/mono lemmas","date":"2020-06-17T19:00:04Z"},{"author":"CohenCyril","committer":"web-flow","hash":"3ea8a270d7380ae4c4c252c07a68fc2c04769a44","message":"Minor fixes","date":"2020-08-07T22:09:06Z"},{"author":"CohenCyril","committer":"web-flow","hash":"b74dce4e008958cecd772ec165fa7821fed03b5d","message":"a short description for cvg and landau","date":"2020-08-07T22:23:49Z"}]},{"author":"CohenCyril","number":196,"diff_summary":[{"file":"theories/derive.v","status":"M","additions":329,"deletions":95},{"file":"theories/normedtype.v","status":"M","additions":329,"deletions":95},{"file":"theories/topology.v","status":"M","additions":329,"deletions":95}],"state":"merged","open_date":"2020-05-06T13:09:05Z","update_date":"2020-05-08T15:11:08Z","discussion":[{"author":"CohenCyril","date":"2020-05-07T03:44:09Z","comment":"@mkerjean @affeldt-aist I implemented the generic boundedness and lipshitz notations in an ever more general way than described here: https://github.com/math-comp/analysis/pull/183#discussion_r408341345\r\nIndeed `[locally G]` is a combinator that can be used either on boundedness or lipshitz predicates to make them local instead of global."},{"author":"CohenCyril","date":"2020-05-08T14:21:14Z","comment":"@affeldt-aist can I merge?"},{"author":"affeldt-aist","date":"2020-05-08T15:09:42Z","comment":"> @affeldt-aist can I merge?\r\n\r\nYes."}],"review_discussion":[],"tags":[],"commits":[{"author":"CohenCyril","committer":"CohenCyril","hash":"c2cea9a11cebb92b1c23f36b91e09bef142c2a94","message":"Generic domination, boundedness and lipschitz\n\n- See header for the notations and their localization.\n- Added a bunch of combinator to extract existential witnesses.\n- Added `filter_forall`, (commutation between a filter and finite forall).","date":"2020-05-08T13:59:31Z"}]},{"author":"affeldt-aist","number":195,"diff_summary":[{"file":"theories/classical_sets.v","status":"M","additions":14,"deletions":14},{"file":"theories/normedtype.v","status":"M","additions":14,"deletions":14}],"state":"merged","open_date":"2020-05-05T09:23:13Z","update_date":"2020-05-05T11:53:46Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"35611395d077afd4ac71402ab81993f69802a4ff","message":"renaming: is_prop -> is_subset1 (issue 24)","date":"2020-05-05T09:21:12Z"}]},{"author":"affeldt-aist","number":194,"diff_summary":[{"file":"theories/normedtype.v","status":"M","additions":32,"deletions":0}],"state":"merged","open_date":"2020-05-04T14:42:26Z","update_date":"2020-05-04T14:59:22Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"53317c011151ea153379dcde2d51ecbcdb584b72","message":"lemmas about bigmaxr and argmaxr\n\n- \\big[max/x]_P F = F [arg max_P F]\n- similar lemma for bigmin","date":"2020-05-04T14:36:39Z"}]},{"author":"CohenCyril","number":193,"diff_summary":[{"file":"etc/pr193.sed","status":"A","additions":284,"deletions":259},{"file":"theories/derive.v","status":"A","additions":284,"deletions":259},{"file":"theories/landau.v","status":"A","additions":284,"deletions":259},{"file":"theories/normedtype.v","status":"A","additions":284,"deletions":259},{"file":"theories/topology.v","status":"A","additions":284,"deletions":259}],"state":"merged","open_date":"2020-05-01T19:01:53Z","update_date":"2020-05-04T15:00:44Z","discussion":[{"author":"affeldt-aist","date":"2020-05-02T00:33:57Z","comment":"Wouldn't `appr` be more natural as a prefix?"},{"author":"mkerjean","date":"2020-05-03T10:30:40Z","comment":"Do you have an example of simplifying allowed by this renaming ?"},{"author":"CohenCyril","date":"2020-05-03T11:13:25Z","comment":"@affeldt-aist \r\n> Wouldn't `appr` be more natural as a prefix?\r\n\r\nMaybe, I don't know, `appr` makes me think of `app` as in `oapp`, buut maybe it is not that bad...\r\n\r\n@mkerjean \r\n> Do you have an example of simplifying allowed by this renaming ?\r\n\r\nThe main simplification is documentation and consistency of notations. Right now `lim_add`, `lim_opp`... should be named `flim_add`, `flim_opp` instead. But the visual distinction between `lim` and `flim` is not clear enough in my opinion, and explaining `flim` goes through the history of coquelicot, where it was called `filterlim`, and since `f @ x --> y` is supposed to be handled without the explicit use of filters in most cases, it seems unnatural to rely on a name which contains the word `filter` in it, hence the switch to `approaches` or rather an abbreviation of it.\r\n"},{"author":"affeldt-aist","date":"2020-05-03T13:18:27Z","comment":"What about using \"tends to\" instead of \"approaches\" and abbreviate it as \"tto\"?"},{"author":"CohenCyril","date":"2020-05-04T12:52:53Z","comment":"I made a poll https://framadate.org/GQURpf2DYTSKJeJd\r\nand my preference has changed, ... I strongly prefer to have `cvg` as a name :laughing: \r\nbecause as of now, `cvg` named lemma are scarse and for each `cvg` named lemma we could come up with, I suspect there is a lemma slightly more precise lemma which explicits the actual limit... and `cvg F := F --> lim F` is in fact a base, default case for `_ --> _`..."},{"author":"CohenCyril","date":"2020-05-04T13:12:54Z","comment":"I force pushed to show how it would look with `cvg`"},{"author":"affeldt-aist","date":"2020-05-04T13:28:03Z","comment":"But then shouldn't, e.g., `lim_scale` become `cvgZ`?"},{"author":"CohenCyril","date":"2020-05-04T13:28:50Z","comment":"If it's too confusing, `cvg F := F --> lim F` could be renamed `is_cvg F := F --> lim F`."},{"author":"CohenCyril","date":"2020-05-04T13:29:26Z","comment":"> But then shouldn't, e.g., `lim_scale` become `cvgZ`?\r\n\r\nI did several mistakes in the sed script, they should be fixed now. Can you refresh and tell me it you see a problem?"},{"author":"CohenCyril","date":"2020-05-04T14:18:09Z","comment":"The checks finally pass, and I am happy with the result. @mkerjean what do you think?"},{"author":"mkerjean","date":"2020-05-04T14:32:13Z","comment":"`cvg` seems great (sorry, I've been busy with job applications).  "},{"author":"CohenCyril","date":"2020-05-04T14:43:56Z","comment":"> `cvg` seems great\r\n\r\nThanks for your input :smiley: \r\n\r\n> (sorry, I've been busy with job applications).\r\n\r\ngood luck!!"}],"review_discussion":[],"tags":[],"commits":[{"author":"CohenCyril","committer":"CohenCyril","hash":"c1a111bdb0135ed94953aa700407c7d9347ef70c","message":"Renaming flim to cvg\n\n- `cvg` corresponds to `_ --> _`\n- `lim` corresponds to `lim _`\n- `continuous`  corresponds to continuity\n- some suffixes _opp, _add ... renamed to N, D, ...\n\nApply this substitution **before** rebasing on top of this commit:\n```bash\nsed -i -f etc/pr193.sed **/*.v\n```","date":"2020-05-04T14:50:48Z"}]},{"author":"affeldt-aist","number":192,"diff_summary":[{"file":".travis.yml","status":"A","additions":2045,"deletions":8},{"file":"_CoqProject","status":"A","additions":2045,"deletions":8},{"file":"default.nix","status":"A","additions":2045,"deletions":8},{"file":"opam","status":"A","additions":2045,"deletions":8},{"file":"theories/complex_holomorphy.v","status":"A","additions":2045,"deletions":8},{"file":"theories/newcomplex.v","status":"A","additions":2045,"deletions":8}],"state":"closed","open_date":"2020-04-29T17:05:33Z","update_date":"2020-05-14T13:24:51Z","discussion":[{"author":"mkerjean","date":"2020-05-04T20:13:07Z","comment":"You've been updating complex with respect to PR#270 ? For information I tested another formalism for the real structure on `C` (basically, nothing of the previous `Rcomplex` is canonical anymore), and I used `within R` to speak about real differentiation. Here it is : [https://github.com/mkerjean/analysis/blob/mathcomp_master_topologicalring/theories/holomorphy.v](https://github.com/mkerjean/analysis/blob/mathcomp_master_topologicalring/theories/holomorphy.v). \r\nIt does shorten the proofs. In another branch I tried to take out the `R^o` notation to ease the proof of `CauhyRiemann -> holomorphic`."},{"author":"CohenCyril","date":"2020-05-04T20:18:19Z","comment":"> You've been updating complex with respect to PR#270 ?\r\n\r\nYes, complex has been updated wrt mathcomp 1.11.0+beta1 ... Apparently, I forgot to withdraw the module structure, though :-/"},{"author":"CohenCyril","date":"2020-05-04T20:19:05Z","comment":"> and I used `within R` to speak about real differentiation.\r\n\r\nI think that's really nice :)"}],"review_discussion":[],"tags":[],"commits":[{"author":"CohenCyril","committer":"affeldt-aist","hash":"d1ed227a829591d431449d96ddc492a9d0012902","message":"Mathcomp analysis now depends on real-closed\n\n- fixed opam\n- fixed nix\n\nco-authored-by: Reynald Affeldt <reynald.affeldt@aist.go.jp>","date":"2020-05-14T11:52:25Z"},{"author":"mkerjean","committer":"affeldt-aist","hash":"7fba627792b9f41bab642beb70b7fc76eb0888a0","message":"proof of Cauchy thm; derivx, derivy","date":"2020-05-14T11:52:25Z"},{"author":"mkerjean","committer":"affeldt-aist","hash":"e3289d549168fefcbf4a04c1801fe9a46ae88d0e","message":"holomorphic is derivable, holomorphic implies Cauchy-Riemann","date":"2020-05-14T11:52:25Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"1f0898f4766d26bbef18f95a09f2f898d0bfd6ee","message":"update cauchyetoile.v wrt PR#270","date":"2020-05-14T11:52:25Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"3010cdca2768c97ea16afba0925cd1a3617d9064","message":"update cauchyetoile.v wrt PR#270","date":"2020-05-14T11:52:25Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"e70d20114f9e418dd2edf90b3fa0e2442422b91e","message":"renaming: Uniform -> PseudoMetric","date":"2020-05-14T11:52:25Z"},{"author":"mkerjean","committer":"affeldt-aist","hash":"f47b4974bc35370af8bbb8eb09b3b4b7519614e2","message":"wip\n\nCo-Authored-By: Georges Gonthier <georges.gonthier@inria.fr>","date":"2020-05-14T11:52:25Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"7f431b8e7f82d5a2ea6fa458c4fe4f92f1ba0478","message":"update cauchyetoile.v","date":"2020-05-14T11:52:25Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"cfaf5e7650da51e3531368279ebe4cc6e6b04d47","message":"fix to compile","date":"2020-05-14T11:52:25Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"7be3df2bfa2ba791df782ee31965460b566c9b30","message":"update wrt master","date":"2020-05-14T11:59:55Z"},{"author":"mkerjean","committer":"mkerjean","hash":"e09c8a2684f21a3a85d0936a809aa887087243f9","message":"name change","date":"2020-05-14T13:15:29Z"}]},{"author":"CohenCyril","number":191,"diff_summary":[{"file":".github/workflows/nix.yml","status":"M","additions":7,"deletions":4}],"state":"merged","open_date":"2020-04-29T12:01:48Z","update_date":"2020-04-29T12:45:19Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"CohenCyril","committer":"CohenCyril","hash":"14dc1c8c8aadddb4ab083e4307b08d6565b7a653","message":"Update nix.yml","date":"2020-04-29T12:32:31Z"}]},{"author":"CohenCyril","number":190,"diff_summary":[{"file":"theories/topology.v","status":"M","additions":15,"deletions":0}],"state":"merged","open_date":"2020-04-28T13:38:17Z","update_date":"2020-04-28T16:36:24Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"mkerjean","committer":"CohenCyril","hash":"c5fcea7c17bdb9590b7e49042afad3512afe4220","message":"lemmas for within\n\nCo-authored-by: Reynald Affeldt <reynald.affeldt@aist.go.jp>","date":"2020-04-28T13:31:09Z"}]},{"author":"affeldt-aist","number":189,"diff_summary":[{"file":"_CoqProject","status":"A","additions":542,"deletions":0},{"file":"theories/ereal.v","status":"A","additions":542,"deletions":0},{"file":"theories/integral.v","status":"A","additions":542,"deletions":0},{"file":"theories/measure.v","status":"A","additions":542,"deletions":0}],"state":"closed","open_date":"2020-04-24T21:41:50Z","update_date":"2020-06-10T13:27:43Z","discussion":[{"author":"CohenCyril","date":"2020-04-28T13:39:23Z","comment":"should be reopened on top of master"},{"author":"affeldt-aist","date":"2020-06-09T23:36:52Z","comment":"Is it ok to close this PR? Contents have been moved to PR #223 and PR #224 ."},{"author":"CohenCyril","date":"2020-06-10T13:27:43Z","comment":"The diff confirms it is indeed subsumed!"}],"review_discussion":[{"author":"CohenCyril","file":"theories/integral.v","date":"2020-06-05T21:21:15Z","comment":"@affeldt-aist you need to allow countable unions (or intersection)."},{"author":"CohenCyril","file":"theories/integral.v","date":"2020-06-05T21:22:24Z","comment":"This is redundant because stability by union, complement and setT => stability by intersection"}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"dfe5877d43c98029ce7c7151369ad74887ea4ed6","message":"add integral.v file","date":"2020-06-09T00:50:36Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"98b7694452f4fcab2e306e10744c660ce95526be","message":"minor progress in integral.v\n\nCo-authored-by: Cyril Cohen <cohen@crans.org>","date":"2020-06-09T00:53:24Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"8de8cb77a6a62deb66ed27d13432c7d3c98eb809","message":"add measure.v file","date":"2020-06-09T00:53:24Z"}]},{"author":"affeldt-aist","number":188,"diff_summary":[{"file":"theories/normedtype.v","status":"M","additions":14,"deletions":11}],"state":"closed","open_date":"2020-04-24T20:36:01Z","update_date":"2020-12-07T15:06:26Z","discussion":[{"author":"CohenCyril","date":"2020-04-25T22:31:08Z","comment":"> Is this change of canonical structures correct?\r\n\r\nnop, there should be a structure merge between numDomainType and pointedType"},{"author":"affeldt-aist","date":"2020-05-04T15:56:55Z","comment":"> But it's too heavy with HB...\r\n\r\nYou mean *without*?\r\n"},{"author":"CohenCyril","date":"2020-05-04T15:59:14Z","comment":"> > But it's too heavy with HB...\r\n> \r\n> You mean _without_?\r\n\r\nyes, **without**"},{"author":"CohenCyril","date":"2020-05-07T23:30:20Z","comment":"So in the end, with @mkerjean suggestion, this will happen... but as part of a bigger commit making all `numFieldType` canonically `normedModType`\r\n(EDIT: replaced `numDomainType` by `numFieldType`)"},{"author":"affeldt-aist","date":"2020-05-12T22:05:32Z","comment":"> there should be a \"pointedNumDomain\" Structure :-/\r\n> But it's too heavy with HB...\r\n\r\nSomething like that?\r\n```\r\nModule PointedNumDomain.\r\nSection ClassDef.\r\nRecord class_of T := Class {\r\n  base : Num.NumDomain.class_of T ;\r\n  pointed_mixin : Pointed.point_of T }.\r\nLocal Coercion base : class_of >-> Num.NumDomain.class_of.\r\nLocal Coercion pointed_base T (class_of_T : class_of T) :=\r\n  @Pointed.Class _ class_of_T (pointed_mixin class_of_T).\r\n\r\nStructure type := Pack { sort ; _ : class_of sort }.\r\nLocal Coercion sort : type >-> Sortclass.\r\nVariables (T : Type) (cT : type).\r\nDefinition class := let: Pack _ c as cT' := cT return class_of cT' in c.\r\nLet xT := let: Pack T _ := cT in T.\r\nNotation xclass := (class : class_of xT).\r\nDefinition clone c of phant_id class c := @Pack T c.\r\nDefinition pack (b0 : Num.NumDomain.class_of T) (pm0 : @Pointed.point_of T) :=\r\n  fun bT (b : Num.NumDomain.class_of T)\r\n    & phant_id (@Num.NumDomain.class bT) b =>\r\n  fun pm & phant_id pm0 pm => @Pack T (@Class T b pm).\r\n\r\nDefinition eqType := @Equality.Pack cT xclass.\r\nDefinition choiceType := @Choice.Pack cT xclass.\r\nDefinition zmodType := @GRing.Zmodule.Pack cT xclass.\r\nDefinition ringType := @GRing.Ring.Pack cT xclass.\r\nDefinition comRingType := @GRing.ComRing.Pack cT xclass.\r\nDefinition unitRingType := @GRing.UnitRing.Pack cT xclass.\r\nDefinition comUnitRingType := @GRing.ComUnitRing.Pack cT xclass.\r\nDefinition idomainType := @GRing.IntegralDomain.Pack cT xclass.\r\nDefinition numDomainType := @Num.NumDomain.Pack cT xclass.\r\nDefinition pointedType := @Pointed.Pack cT xclass.\r\nEnd ClassDef.\r\n\r\nModule Exports.\r\nCoercion sort : type >-> Sortclass.\r\nBind Scope ring_scope with sort.\r\nCoercion base  : class_of >-> Num.NumDomain.class_of.\r\nCoercion pointed_base : class_of >-> Pointed.class_of.\r\nCoercion eqType : type >-> Equality.type.\r\nCanonical eqType.\r\nCoercion choiceType : type >-> Choice.type.\r\nCanonical choiceType.\r\nCoercion zmodType : type >-> GRing.Zmodule.type.\r\nCanonical zmodType.\r\nCoercion ringType : type >-> GRing.Ring.type.\r\nCanonical ringType.\r\nCoercion comRingType : type >-> GRing.ComRing.type.\r\nCanonical comRingType.\r\nCoercion unitRingType : type >-> GRing.UnitRing.type.\r\nCanonical unitRingType.\r\nCoercion comUnitRingType : type >-> GRing.ComUnitRing.type.\r\nCanonical comUnitRingType.\r\nCoercion idomainType : type >-> GRing.IntegralDomain.type.\r\nCanonical idomainType.\r\nCoercion numDomainType : type >-> Num.NumDomain.type.\r\nCanonical numDomainType.\r\nCoercion pointedType : type >-> Pointed.type.\r\nCanonical pointedType.\r\nNotation pointedNumDomainType := type.\r\nNotation PointedNumDomainType T m := (@pack T m _ id _ id _).\r\nNotation \"[ 'pointedNumDomainType' 'of' T 'for' cT ]\" := (@clone T cT _ idfun)\r\n  (at level 0, format \"[ 'pointedNumDomainType'  'of'  T  'for'  cT ]\") : form_scope.\r\nNotation \"[ 'pointedNumDomainType' 'of' T ]\" := (@clone T _ _ id)\r\n  (at level 0, format \"[ 'pointedNumDomainType'  'of'  T ]\") : form_scope.\r\nEnd Exports.\r\nEnd PointedNumDomain.\r\nImport PointedNumDomain.Exports.\r\n```"},{"author":"CohenCyril","date":"2020-05-12T22:49:16Z","comment":"Hum, no, I meant, with @mkerjean's suggestion, we do not have dedicated structures, but we indeed do what your PR originally did, but on a larger scale (every structure above num **field** should have coercions and canonicals to pointed, filtered, topological, pseudometric and normed types...)\r\n(EDIT: I replaced num domain by num field)"},{"author":"mkerjean","date":"2020-05-14T11:42:16Z","comment":"> Hum, no, I meant, with @mkerjean's suggestion, we do not have dedicated structures, but we indeed do what your PR originally did, but on a larger scale (every structure above num domains should have coercions and canonicals to pointed, filtered, topological, pseudometric and normed types...)\r\n\r\nI'll be updating this PR today (AoE maybe)."},{"author":"affeldt-aist","date":"2020-07-20T13:29:55Z","comment":"(to be closed, see https://github.com/math-comp/analysis/pull/205)"},{"author":"CohenCyril","date":"2020-12-07T15:06:26Z","comment":"Subsumed by #205 "}],"review_discussion":[],"tags":[{"tag":"question :question:","description":"There is an unanswered question here"}],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"1a8fa850e208c1582ee7d47adaeb6e93ca9ad7e9","message":"small generalizations of locallyN and cvg_cst","date":"2020-05-04T16:24:22Z"}]},{"author":"affeldt-aist","number":187,"diff_summary":[{"file":"_CoqProject","status":"A","additions":712,"deletions":0},{"file":"theories/classical_sets.v","status":"A","additions":712,"deletions":0},{"file":"theories/reals.v","status":"A","additions":712,"deletions":0},{"file":"theories/sequences.v","status":"A","additions":712,"deletions":0}],"state":"merged","open_date":"2020-04-23T16:26:38Z","update_date":"2020-05-23T02:17:47Z","discussion":[{"author":"CohenCyril","date":"2020-05-07T18:37:06Z","comment":"I will start rebasing this branch"},{"author":"affeldt-aist","date":"2020-05-14T09:15:29Z","comment":"@ybertot : it is not yet up to mathcomp standards but here is a tentative proof for your information"},{"author":"affeldt-aist","date":"2020-05-14T09:39:24Z","comment":"TODO: Hardy's theorem (the true converse of Cesaro)..."}],"review_discussion":[{"author":"CohenCyril","file":"theories/sequences.v","date":"2020-04-27T21:01:45Z","comment":"Please do not define increasing and decreasing as above: it is not very useful as a hypothesis. The one below `{homo u_ : n m / (n <= m)%nat >-> n <= m}` is way more suitable, so if you really feel the need, you may introduce `increasing_seq u_` as a notation for it, with the variants with decreasing `{homo u_ : n m / (n <= m)%nat >-> n >= m}`  (no negation). In this case the \"strict\" versions with `mono` instead of `homo` should also have notations. It still makes sens to have the lemma `(forall n, u_ n <= u_ n.+1) -> increasing u_` (with variants for decreasing and strict, and also near `+oo`)"},{"author":"CohenCyril","file":"theories/normedtype.v","date":"2020-05-07T13:39:16Z","comment":"replace by `solve[]`"},{"author":"CohenCyril","file":"theories/normedtype.v","date":"2020-05-07T13:39:55Z","comment":"rename `_LR` to `E`"},{"author":"CohenCyril","file":"theories/sequences.v","date":"2020-05-09T21:51:58Z","comment":"use `sum_nat_const`"}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"6aa1b429e4606b5b9a45e68a1163c50d3b22f4a9","message":"Main theorems about sequences and series and examples\n\nDefinitions:\n- `[sequence E]_n` is a special notation for `fun n => E`\n- `series u_` is the sequence of partial sums\n- `[normed S]` is the series of absolute values, if S is a series\n- `harmonic` is the name of a sequence, apply `series` to them to get the series.\n\nExample: `cvg [normed series (geometric a z)]`\n  states the absolute convergence of the series \\sum_(n > 0) |a z^n|.\n\nTheorems:\n- lots of helper lemmas to prove convergence of sequences\n- convergence of harmonic sequence\n- convergence of a series implies convergence of a sequence\n- absolute convergence implies convergence of series\n\nCo-Authored-By: Cyril Cohen <cyril.cohen@inria.fr>","date":"2020-05-21T00:23:31Z"}]},{"author":"vlj","number":186,"diff_summary":[{"file":"theories/classical_sets.v","status":"M","additions":6,"deletions":0}],"state":"merged","open_date":"2020-04-20T21:20:01Z","update_date":"2020-04-21T22:43:24Z","discussion":[{"author":"affeldt-aist","date":"2020-04-21T09:54:03Z","comment":"We can save one line!\r\n```\r\nrewrite predeqE => z.\r\nby apply: asbool_eq_equiv; rewrite asbool_and !asbool_neg asbool_or negb_or.\r\n```\r\n:-)"},{"author":"vlj","date":"2020-04-21T20:53:02Z","comment":"I updated the PR following affeldt-aist advice, I didn't see the negb_or lemma."}],"review_discussion":[],"tags":[],"commits":[{"author":"vlj","committer":"vlj","hash":"e0726e51ff4558ade60e71c6e417b3336a11c5e1","message":"Add setCU (complement of union is intersection of complements) lemma.","date":"2020-04-21T20:50:29Z"}]},{"author":"affeldt-aist","number":185,"diff_summary":[{"file":"theories/classical_sets.v","status":"M","additions":20,"deletions":0}],"state":"merged","open_date":"2020-04-17T19:12:39Z","update_date":"2020-04-18T12:00:02Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"ddefeea38e2579c9d11cc54f256585ab43267dc2","message":"four lemmas about image that we found useful in the context of the infotheo project","date":"2020-04-17T20:33:04Z"}]},{"author":"vlj","number":184,"diff_summary":[{"file":"theories/topology.v","status":"M","additions":8,"deletions":0}],"state":"merged","open_date":"2020-04-16T17:56:08Z","update_date":"2020-04-24T08:26:39Z","discussion":[{"author":"affeldt-aist","date":"2020-04-16T22:09:33Z","comment":"Fine with me, except that I would try to write the script more compactly, something like\r\n```\r\nrewrite /interior predeqE => //= x; rewrite locallyE; split => [[B0 [?]] | []].\r\n- by rewrite subsetI => -[? ?]; split; rewrite locallyE; exists B0.\r\n- rewrite locallyE => -[B0 [? ?]] [B1 [? ?]]; exists (B0 `&` B1); split;\r\n  [exact: neighI | by rewrite subsetI; split; apply: subIset; [left|right]].\r\n```"},{"author":"vlj","date":"2020-04-18T18:55:45Z","comment":"I changed the proof to follow yours."},{"author":"vlj","date":"2020-04-23T18:30:24Z","comment":"Force pushed a version with naming/whitespace fixes."}],"review_discussion":[{"author":"CohenCyril","file":"theories/topology.v","date":"2020-04-21T22:44:24Z","comment":"```suggestion\r\n- rewrite locallyE => -[B0 [? ?]] [B1 [? ?]]; exists (B0 `&` B1); split;\r\n```"},{"author":"CohenCyril","file":"theories/topology.v","date":"2020-04-21T22:44:47Z","comment":"```suggestion\r\n  [exact: neighI | by rewrite subsetI; split; apply: subIset; [left|right]].\r\n```"},{"author":"vlj","file":"theories/topology.v","date":"2020-04-23T18:30:06Z","comment":"fixed extra space"}],"tags":[],"commits":[{"author":"vlj","committer":"vlj","hash":"d2f280b92bd951164f4b868600e642841ed04e4b","message":"Add interiorI.","date":"2020-04-23T18:29:05Z"}]},{"author":"mkerjean","number":183,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":117,"deletions":1},{"file":"theories/normedtype.v","status":"M","additions":117,"deletions":1}],"state":"merged","open_date":"2020-04-14T16:21:42Z","update_date":"2021-02-18T21:47:15Z","discussion":[{"author":"CohenCyril","date":"2020-04-28T13:41:00Z","comment":"Should be reopened on top of master (please add a reference to this PR so that we can continue the discussions)"},{"author":"mkerjean","date":"2020-10-09T06:59:35Z","comment":"Should I open a new PR for `closed_ball` ? "},{"author":"affeldt-aist","date":"2020-10-09T07:02:26Z","comment":"> Should I open a new PR for `closed_ball` ?\r\n\r\nI think that that was one of the conclusions of the last meeting (the minutes seem to say so).\r\n"},{"author":"affeldt-aist","date":"2021-01-27T02:50:48Z","comment":"(I just rebased to get rid of conflicts and fix the changelog so that we can merge.) @CohenCyril "},{"author":"mkerjean","date":"2021-02-18T21:25:36Z","comment":"Should this be merged ? "}],"review_discussion":[{"author":"CohenCyril","file":"theories/normedtype.v","date":"2020-04-14T16:30:27Z","comment":"`continuous_at x f` should be perhaps rephrased `{for x, continuous f}`"},{"author":"CohenCyril","file":"theories/normedtype.v","date":"2020-04-14T16:33:44Z","comment":"I think some inspiration in statements and proofs can be found here: https://github.com/math-comp/analysis/blob/ea6729f9474056d6fd51489bde3a36d24a6214e0/theories/derive.v#L166-L177"},{"author":"CohenCyril","file":"theories/normedtype.v","date":"2020-04-14T16:35:29Z","comment":"and maybe better here:\r\nhttps://github.com/math-comp/analysis/blob/ea6729f9474056d6fd51489bde3a36d24a6214e0/theories/landau.v#L1149-L1175"},{"author":"mkerjean","file":"theories/normedtype.v","date":"2020-04-14T17:41:45Z","comment":"> I think some inspiration in statements and proofs can be found here: https://github.com/math-comp/analysis/blob/master/theories/derive.v#L152-L166\r\n\r\nThis is stated to be proof that the identity is locally bounded. Is it something else ?"},{"author":"mkerjean","file":"theories/normedtype.v","date":"2020-04-14T17:47:27Z","comment":"> and maybe better here:\r\n> https://github.com/math-comp/analysis/blob/master/theories/landau.v#L1061-L1092\r\n\r\nIndeed, this lemma implies bounded_continuous0. I was unable to find it at the time. Could the name of the lemma contain \"bounded\" to help ? \r\nI have tried several times to use landau notations unsuccessfully, do you strongly prefer these lemmas to be using landau notations ?"},{"author":"mkerjean","file":"theories/normedtype.v","date":"2020-04-14T17:52:03Z","comment":"Will do. Where is this notation defined ? Could it be added to the header ? "},{"author":"mkerjean","file":"theories/normedtype.v","date":"2020-04-14T18:01:53Z","comment":"If you would prefer these lemmas to rewritten using landau notations and the lemma `linear_for_continuous`, it means that they should be part of `landau.v` instead of  `normedtype.v`. Should I do that anyway ?"},{"author":"CohenCyril","file":"theories/normedtype.v","date":"2020-04-14T18:03:28Z","comment":"It comes from mathcomp https://github.com/coq/coq/blob/master/theories/ssr/ssrbool.v#L251"},{"author":"CohenCyril","file":"theories/normedtype.v","date":"2020-04-14T18:18:19Z","comment":"> This is stated to be proof that the identity is locally bounded. Is it something else ?\r\n\r\nNo it is stated that it contains such a proof, inside the proof script.\r\n\r\n> Indeed, this lemma implies bounded_continuous0. I was unable to find it at the time.\r\n\r\nMore interestingly the proof contains some of the steps mentioned in the comment. Splitting it amounts to stating the implications independently and extracting their proof from lemma `linear_for_continuous`.\r\n\r\n> Could the name of the lemma contain \"bounded\" to help ?\r\n> I have tried several times to use landau notations unsuccessfully, do you strongly prefer these lemmas to be using landau notations ?\r\n\r\nI think it should be eventually restated as an equivalence between `continuous` and `{for 0, locally_bounded f}` for linear maps where\r\n```coq\r\nlocally_bounded f := forall x, \\forall A \\near +oo, \\forall y \\near x, `|f y| <= A.\r\n```\r\nThat way I prefer to keep the name `linear_continuous` (without the \"for\") and `locally_bounded` will appear in the statement and will be accessible through search.\r\n\r\nAdditionally, we should have a (trivial) equivalence lemma stating `{for x, locally_bounded f} <-> (f : _ -> _) =O_x (cst 1)` because I suspect many things will be easier to prove with landau."},{"author":"mkerjean","file":"theories/normedtype.v","date":"2020-04-14T18:31:07Z","comment":"Could it be added to the header ? "},{"author":"mkerjean","file":"theories/normedtype.v","date":"2020-04-14T18:41:09Z","comment":"I am still not sure the lemma should not contains `bounded` in its name - as it is is suggests that all linear maps are continuous. I have repeatedly been unable to use landau notations so they don't always make proofs easier for their authors ."},{"author":"CohenCyril","file":"theories/normedtype.v","date":"2020-04-14T19:03:26Z","comment":"> I am still not sure the lemma should not contains bounded in its name - as it is is suggests that all linear maps are continuous.\r\n\r\nIf we keep the current shape of statement, it should be named `linear_locally_bounded_continuous`, however, if we turn it into the equivalence `continuous f = {for 0, locally_bounded f}` then the convention is that only the LHS of the equation should appear in the name, as it will most of the time be used from left to right, to reduce continuity of linear maps to locally bounding in 0.\r\n\r\n> I have repeatedly been unable to use landau notations so they don't always make proofs easier for their authors.\r\n\r\n@mkerjean I'd be happy to see where you tried and what failed, in order to improve on the documentation."},{"author":"CohenCyril","file":"theories/normedtype.v","date":"2020-04-14T19:06:12Z","comment":"isn't it `exact: flim_ballP`?"},{"author":"CohenCyril","file":"theories/normedtype.v","date":"2020-04-17T11:44:21Z","comment":"You would prefer `have [->|x0] := eqVneq x 0`, which does not explicitly rely on excluded middle (`R` could very well have \"true\" decidable equality).\r\n```suggestion\r\nhave [->|x0] := eqVneq x 0; first by rewrite linear0 !normr0 mul0r.\r\n```"},{"author":"CohenCyril","file":"theories/normedtype.v","date":"2020-04-17T11:45:28Z","comment":"since it is exacly `flim_ballP`, I am wondering if we should have this lemma at all..."},{"author":"CohenCyril","file":"theories/normedtype.v","date":"2020-04-17T11:50:34Z","comment":"I personally prefer ``\\forall r \\near +oo, forall x, `|f x| <= `|x| * r.`` because then, one can extract an `r` as big as they want, not necessarily only greater than `0` (there might still be missing theorems to handle it, but it is worth adding them), and to prove it, one could either choose between the ``exists r, forall x, `|f x| <= `|x| * r`` presentation (no constraint needed on `r`), or using `near=> r` which can lead to huge simplifications in some cases."},{"author":"mkerjean","file":"theories/normedtype.v","date":"2020-04-23T19:32:13Z","comment":"Indeed, I will rewrite that."},{"author":"mkerjean","file":"theories/normedtype.v","date":"2020-04-23T19:33:25Z","comment":"For the accessibility of the code ? It would maybe allow to handle basic continuity notions without handling filter."},{"author":"mkerjean","file":"theories/normedtype.v","date":"2020-04-23T19:34:09Z","comment":"Indeed, thanks for the remark."},{"author":"mkerjean","file":"theories/normedtype.v","date":"2020-04-23T19:48:43Z","comment":"I still find the notation near uneasy to use, but I guess I can see the interest now. thanks for the explanation."},{"author":"CohenCyril","file":"theories/normedtype.v","date":"2020-04-28T13:40:13Z","comment":"ok"},{"author":"CohenCyril","file":"theories/normedtype.v","date":"2020-04-28T13:40:31Z","comment":"You could just click on \"commit suggestion\""},{"author":"pi8027","file":"theories/normedtype.v","date":"2020-10-09T04:27:14Z","comment":"`rewrite le_eqVlt eq_sym.` ?"},{"author":"pi8027","file":"theories/normedtype.v","date":"2020-10-09T04:28:09Z","comment":"Doesn't `case: (leP s e)` work?"},{"author":"mkerjean","file":"theories/normedtype.v","date":"2020-10-09T06:49:31Z","comment":"It does thanks. It did not find it through `Search` tough."},{"author":"mkerjean","file":"theories/normedtype.v","date":"2020-10-09T06:50:31Z","comment":"thanks ! What does `eqVlt` stands for ?"},{"author":"pi8027","file":"theories/normedtype.v","date":"2020-10-09T06:52:16Z","comment":"`V` means \"or\"."},{"author":"mkerjean","file":"theories/normedtype.v","date":"2021-01-15T11:16:53Z","comment":"Should this proof be rewritten with near tactics ? I tried for one hour and gave up."}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"db9f023f1db6757dbe91cc52deb51dae65981825","message":"LinearContinuousBounded\n\nCo-authored-by: Théo Vignon <>","date":"2021-01-27T02:47:59Z"},{"author":"mkerjean","committer":"affeldt-aist","hash":"969e5081d7d0dbefae0347696fc5ea50c3478545","message":"clean","date":"2021-01-27T02:47:59Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"89d179ef2060fe0456c90be99eb00efe9c45a240","message":"linear_continuous0 with near","date":"2021-01-27T02:47:59Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"fb44712fa877ce95b9a5542e4a15e73f986fff9c","message":"fix linear_bounded0","date":"2021-01-27T02:47:59Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"d2148c4e4f0ba8a8bbaf268706f4d70c9f756620","message":"fix continuousfor0_continuous and bounded_funP\n\n- fix changelog","date":"2021-01-27T02:47:59Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"a6f244e6409d9495791cd7a192110c1b35fcda27","message":"nitpicking","date":"2021-01-27T02:47:59Z"},{"author":"mkerjean","committer":"affeldt-aist","hash":"975430ca98b9a0015af46648ba7d56456aa60eca","message":"field lemmas","date":"2021-01-27T08:23:53Z"}]},{"author":"mkerjean","number":182,"diff_summary":[{"file":"theories/topology.v","status":"M","additions":15,"deletions":0}],"state":"merged","open_date":"2020-04-14T15:38:10Z","update_date":"2020-04-25T22:29:21Z","discussion":[],"review_discussion":[{"author":"affeldt-aist","file":"theories/topology.v","date":"2020-04-14T17:20:16Z","comment":"This lemma may be written as follows (it actually appears in PR #177 as a copy of a lemma that was in PR #174)\r\n\r\nLemma flim_incl (T U : Type) (f : T -> U) (F G : set (set T)) :\r\n  G `=>` F -> f @ G `=>` f @ F.\r\nProof. move=> GF ? ?; exact: GF. Qed."},{"author":"affeldt-aist","file":"theories/topology.v","date":"2020-04-14T17:26:55Z","comment":"This lemma also can be expressed at the level of `Type` (and proved `by move=> ?; exact: (flim_trans (flim_incl (flim_within _))).`)."},{"author":"affeldt-aist","file":"theories/topology.v","date":"2020-04-14T17:28:58Z","comment":"Can't `T` be generalized to `Type`?"},{"author":"affeldt-aist","file":"theories/topology.v","date":"2020-04-14T17:30:29Z","comment":"We can remove parentheses around in the `=>` expression."},{"author":"mkerjean","file":"theories/topology.v","date":"2020-04-14T18:13:54Z","comment":"If it appears in PR #177 I should delete it then ?"},{"author":"affeldt-aist","file":"theories/topology.v","date":"2020-04-14T18:19:47Z","comment":"No, I remove it from PR #177 because it is not used there."},{"author":"CohenCyril","file":"theories/topology.v","date":"2020-04-14T18:23:02Z","comment":"Why is it named `flimS`? `S` is generally used for \"subset\" but `flim` is actually an inclusion of filter. This one should rather be named `flim_map` or `subset_filtermap`."},{"author":"mkerjean","file":"theories/topology.v","date":"2020-04-14T18:27:33Z","comment":"ok"},{"author":"mkerjean","file":"theories/topology.v","date":"2020-04-14T18:27:44Z","comment":"ok"},{"author":"mkerjean","file":"theories/topology.v","date":"2020-04-14T18:27:58Z","comment":"done"}],"tags":[],"commits":[{"author":"mkerjean","committer":"affeldt-aist","hash":"ecaf1ea20bf587aca17f1bf18cc60c4ba127b241","message":"lemmas for within\n\nCo-authored-by: Reynald Affeldt <reynald.affeldt@aist.go.jp>","date":"2020-04-23T12:46:51Z"}]},{"author":"mkerjean","number":181,"diff_summary":[{"file":"theories/normedtype.v","status":"M","additions":86,"deletions":20},{"file":"theories/topology.v","status":"M","additions":86,"deletions":20}],"state":"closed","open_date":"2020-04-14T15:28:26Z","update_date":"2020-04-14T15:28:35Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"mkerjean","committer":"mkerjean","hash":"c332e34a49a022727b1110d6a0b059bd0bca21c4","message":"PseudoNormedZmod_numDomainType","date":"2020-04-14T09:00:44Z"},{"author":"mkerjean","committer":"mkerjean","hash":"821f0a98ca2c2bda744078d9df8dba42e6ac2374","message":"NormedModule_numFieldType","date":"2020-04-14T09:05:08Z"},{"author":"mkerjean","committer":"mkerjean","hash":"ab274994bbfb1d4ccf0364bc957d99933f76fe35","message":"pseudoMetricNormedZModType_hausdorff","date":"2020-04-14T09:06:14Z"},{"author":"mkerjean","committer":"mkerjean","hash":"0c3bf4e416e256709e7fff9afdd44d4b0eb241c1","message":"continuous_flim_norm","date":"2020-04-14T09:09:50Z"},{"author":"mkerjean","committer":"mkerjean","hash":"a7ead879d03e33cb6cbd48fad70c0bebed6486c0","message":"NVS_continuity","date":"2020-04-14T09:17:22Z"},{"author":"mkerjean","committer":"mkerjean","hash":"6a5f54af4d9ffd42ae5dbd9be71c952cba07e9b2","message":"NVS_continuity1","date":"2020-04-14T09:18:18Z"},{"author":"mkerjean","committer":"mkerjean","hash":"0eb77159595dc65f63f4e5ce955303eb74d88a14","message":"limit_composition","date":"2020-04-14T09:26:50Z"},{"author":"mkerjean","committer":"mkerjean","hash":"31fd388ef94f7ce26ce5549ff68b084c42e51e45","message":"lemmas for within","date":"2020-04-14T15:23:46Z"},{"author":"mkerjean","committer":"mkerjean","hash":"ac49637d514b4b922cb788e4032e58571e7a6ba0","message":"lemmas for within","date":"2020-04-14T15:25:55Z"}]},{"author":"mkerjean","number":180,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":197,"deletions":95},{"file":"theories/derive.v","status":"M","additions":197,"deletions":95},{"file":"theories/nngnum.v","status":"M","additions":197,"deletions":95},{"file":"theories/normedtype.v","status":"M","additions":197,"deletions":95},{"file":"theories/reals.v","status":"M","additions":197,"deletions":95},{"file":"theories/sequences.v","status":"M","additions":197,"deletions":95}],"state":"merged","open_date":"2020-04-14T09:45:15Z","update_date":"2021-07-27T22:22:55Z","discussion":[{"author":"mkerjean","date":"2020-04-14T09:58:37Z","comment":"Issue: Sometimes one needs to explicitly mention the pseudoMetricNormedZmodType on which lemmas are applied while it was not necessary with NormedModTypes. It also makes (at least) `derive.v` fail ([here](https://github.com/math-comp/analysis/blob/3085f787d0d16b08db4a151b711382de9fabe87e/theories/derive.v#L786) view locally_le_locally_norm can't be applied). What's missing ? "},{"author":"mkerjean","date":"2020-04-14T12:48:52Z","comment":"Issue: Some further generalizations should be possible but `lim` does not seem to work on `PseudoMetricNormedZmodule`. See  [here](https://github.com/math-comp/analysis/blob/0eb77159595dc65f63f4e5ce955303eb74d88a14/theories/normedtype.v#L789)."},{"author":"affeldt-aist","date":"2020-04-23T15:55:47Z","comment":"This branch/PR has been rebased on PR #177 that lifts several lemmas about limits to the level of topological spaces, thus the issues about `flim_lim` and `flim_unique` have disappeared. But similar inference problems seem to occur later, e.g., here https://github.com/math-comp/analysis/blob/b8c628cb71191eeb9e5d600c0ea9c10dcedf2241/theories/derive.v#L786 .\r\n"},{"author":"affeldt-aist","date":"2020-05-21T13:14:28Z","comment":"There are still notation issues with lemmas [`norm_lim_id`](https://github.com/math-comp/analysis/blob/55b94bdc2d7ae32f61ff031ab9267ce9c2c63dbe/theories/normedtype.v#L1208) and [`norm_cvg_lim`](https://github.com/math-comp/analysis/blob/55b94bdc2d7ae32f61ff031ab9267ce9c2c63dbe/theories/normedtype.v#L1210).\r\n\r\nThere are still generalizations to do, at least about the lemmas related to the new `bounded_on` predicate, but also some generalizations for which I might have screwed up when rebasing. :-/"},{"author":"affeldt-aist","date":"2020-06-17T21:51:22Z","comment":"FYI, I rebased on top of a recent master (with PR #230) and at first sight the behavior seems unchanged, i.e.:\r\n- in `normedtype.v`:\r\n  + `norm_cvg_eq` -> still requires explicit type\r\n  + `norm_lim_id` -> still requires `[lim ... in ...]` notation\r\n  + `norm_cvg_lim` -> still requires explicit type and `[lim ... in ...]` notation\r\n  + `continuous_cvg_dist` -> still requires explicit type\r\n- in `derive.v`:\r\n  + `bilinear_eqo` -> still requires explicit `[pseudoMetricNormedZmodType R of _]`\r\n  + `dinv` -> still requires explicit `[pseudoMetricNormedZmodType R of _]`\r\n\r\n"},{"author":"mkerjean","date":"2021-03-26T14:34:52Z","comment":"> FYI, I rebased on top of a recent master (with PR #230) and at first sight the behavior seems unchanged, i.e.:\r\n> \r\n>     * in `normedtype.v`:\r\n>       \r\n>       * `norm_cvg_eq` -> still requires explicit type\r\n>       * `norm_lim_id` -> still requires `[lim ... in ...]` notation\r\n>       * `norm_cvg_lim` -> still requires explicit type and `[lim ... in ...]` notation\r\n>       * `continuous_cvg_dist` -> still requires explicit type\r\n> \r\n>     * in `derive.v`:\r\n>       \r\n>       * `bilinear_eqo` -> still requires explicit `[pseudoMetricNormedZmodType R of _]`\r\n>       * `dinv` -> still requires explicit `[pseudoMetricNormedZmodType R of _]`\r\n\r\nIn `normedtype.v`:\r\n* explicit argument [l.1793](https://github.com/math-comp/analysis/blob/1c5946eec37e3ab923fb60de41b5f84e1f435a3a/theories/normedtype.v#L1793) explicit argument needed for `cvg_ball` (not needed in the case of `V : normedType R`). "},{"author":"affeldt-aist","date":"2021-05-29T09:10:07Z","comment":"Does https://github.com/math-comp/analysis/pull/180/commits/c3abdc48907cd5610a9e024d997fa432d5d0c8c1\r\nreally fix the inference problem derive.v? Or does it just narrow it?\r\n"},{"author":"affeldt-aist","date":"2021-07-26T06:59:03Z","comment":"> Ready to merge after my comments have been taken into account.\r\n> Also, I would rather have TODO/NBs turned into issues, they are less prone to bitrot.\r\n\r\nNBs that were marking issues caused by this PR has been resolved (I think).\r\nThere are still TODOs but I think that they predates this PR.\r\nOk to merge and chase TODOs later?\r\n"}],"review_discussion":[{"author":"affeldt-aist","file":"theories/normedtype.v","date":"2020-04-14T20:32:36Z","comment":"I observe that `apply: flim_close` concludes the proof provided `F` is declared as `F : set (set V)`. Also `flim_unique` is generalized at the level of topological spaces by PR #177 so that the problem should disappear after a rebase. "},{"author":"affeldt-aist","file":"theories/normedtype.v","date":"2020-04-14T20:33:13Z","comment":"Here also the problem should disappear with PR #177 that generalized `locally_flim_unique`."},{"author":"affeldt-aist","file":"theories/normedtype.v","date":"2020-04-14T20:33:42Z","comment":"Here also the problem should disappear with PR #177 that generalized `flim_lim`."},{"author":"affeldt-aist","file":"theories/normedtype.v","date":"2020-04-14T20:34:07Z","comment":"Naturally `Proof. exact: pseudoMetricNormedZModType_hausdorff. Qed.`"},{"author":"mkerjean","file":"theories/normedtype.v","date":"2020-04-15T07:31:39Z","comment":"Would that solve also the generalization to [Section NormedModule_numFieldType](https://github.com/math-comp/analysis/blob/0eb77159595dc65f63f4e5ce955303eb74d88a14/theories/normedtype.v#L786), mentioned previously ? "},{"author":"mkerjean","file":"theories/normedtype.v","date":"2020-04-15T08:05:48Z","comment":"It seems rather related to PR #90. "},{"author":"affeldt-aist","file":"theories/normedtype.v","date":"2021-05-29T14:24:06Z","comment":"What does this comment mean?"},{"author":"affeldt-aist","file":"theories/normedtype.v","date":"2021-05-29T14:33:15Z","comment":"I guess this is now the main concern of this PR. This notation is properly documented, so this is acceptable to me as long as we keep the comment. @CohenCyril Is this acceptable for you too? Does the modification made to `nbhs_le_nbhs_norm` ring any bell by any chance?"},{"author":"mkerjean","file":"theories/normedtype.v","date":"2021-06-01T07:28:14Z","comment":"No idea ... I guess it can be deleted."},{"author":"CohenCyril","file":"theories/normedtype.v","date":"2021-07-22T08:08:25Z","comment":"```suggestion\r\n  \\forall M \\near +oo, \\forall y' \\near F, `|y'| < M.\r\n```\r\nIndeed `\\forall M \\near +oo, M \\is Num.real` is always true and could be added after `nbhs_pinfty_ge` and proved using it."},{"author":"CohenCyril","file":"theories/normedtype.v","date":"2021-07-22T08:08:59Z","comment":"do not use the `_ := _` syntax, it is too unstable."},{"author":"affeldt-aist","file":"theories/normedtype.v","date":"2021-07-26T05:54:01Z","comment":"It looks like this actually revealed a wrong definition: https://github.com/math-comp/analysis/pull/180/commits/13e50e4d44025ed09686f97ea1f2bb0286ad15d8"},{"author":"affeldt-aist","file":"theories/normedtype.v","date":"2021-07-26T07:07:25Z","comment":"solved by https://github.com/math-comp/analysis/pull/180/commits/8443585e56a0cfcb0173b9ff4ea32681b66c4ecc actually..."}],"tags":[],"commits":[{"author":"mkerjean","committer":"affeldt-aist","hash":"d4f02d2ab8faf09c71468f0cb1489ad114e14945","message":"generalizations of several lemmas\n\nfrom normedModType to pseudoMetricNormedZModType\n\nCo-authored-by: Reynald Affeldt <reynald.affeldt@aist.go.jp>\n\nrebase in progress, admits inside","date":"2021-07-22T07:15:53Z"},{"committer":"affeldt-aist","hash":"71a870efbaad1d930ab9f88209aa5e2d94cddab9","message":"issue with product PseudoNormedZmodType","date":"2021-07-22T07:15:53Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"aab5f2f5cf792e86d3634259724226bb507b7830","message":"remove useless code\n\n- use `filter_predI` instead of the new `filter_andb` (removed)\n- `Module BigmaxBigminr` was duplicated","date":"2021-07-22T07:15:53Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"b62ac50a057f0d4f46be50e33308e044fe96bf38","message":"fix the type of `normedtype.v:nbhs_le_nbhs_norm`\n\n- enforce the type of `nbhs` in `normedtype.v:nbhs_le_nbhs_norm`\n  so that the type of implicit arguments look more as expected\n  + this solves an inference problem in `derive.v:bilinear_eqo`\n- nitpicking about spaces","date":"2021-07-22T07:15:53Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"79dd6b56a21a03cd51a17fc608d51490e3f1ae8a","message":"add changelog\n\n- also remove spurious comment","date":"2021-07-22T07:15:53Z"},{"author":"mkerjean","hash":"6cbe24e9a1ccfe589ff7f9f6cd7476043c79dfa1","message":"review by @CohenCyril\n\nCo-authored-by: Cyril Cohen <CohenCyril@users.noreply.github.com>","date":"2021-07-22T11:28:28Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"13e50e4d44025ed09686f97ea1f2bb0286ad15d8","message":"fix filteredType definition\n\n- this solves at least one inference problem","date":"2021-07-26T05:52:30Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"8443585e56a0cfcb0173b9ff4ea32681b66c4ecc","message":"get rid of NB's and some TODOs","date":"2021-07-26T06:55:39Z"}]},{"author":"mkerjean","number":179,"diff_summary":[{"file":".gitattributes","status":"A","additions":8384,"deletions":2100},{"file":".github/workflows/nix.yml","status":"A","additions":8384,"deletions":2100},{"file":".travis.yml","status":"A","additions":8384,"deletions":2100},{"file":"AUTHORS.md","status":"A","additions":8384,"deletions":2100},{"file":"CHANGELOG.md","status":"A","additions":8384,"deletions":2100},{"file":"CHANGELOG_UNRELEASED.md","status":"A","additions":8384,"deletions":2100},{"file":"CONTRIBUTING.md","status":"A","additions":8384,"deletions":2100},{"file":"INSTALL.md","status":"A","additions":8384,"deletions":2100},{"file":"README.md","status":"A","additions":8384,"deletions":2100},{"file":"_CoqProject","status":"A","additions":8384,"deletions":2100},{"file":"config.nix","status":"A","additions":8384,"deletions":2100},{"file":"default.nix","status":"A","additions":8384,"deletions":2100},{"file":"opam","status":"A","additions":8384,"deletions":2100},{"file":"package.nix","status":"A","additions":8384,"deletions":2100},{"file":"theories/Rbar.v","status":"A","additions":8384,"deletions":2100},{"file":"theories/Rstruct.v","status":"A","additions":8384,"deletions":2100},{"file":"theories/altreals/distr.v","status":"A","additions":8384,"deletions":2100},{"file":"theories/altreals/realseq.v","status":"A","additions":8384,"deletions":2100},{"file":"theories/altreals/realsum.v","status":"A","additions":8384,"deletions":2100},{"file":"theories/altreals/xfinmap.v","status":"A","additions":8384,"deletions":2100},{"file":"theories/boolp.v","status":"A","additions":8384,"deletions":2100},{"file":"theories/classical_sets.v","status":"A","additions":8384,"deletions":2100},{"file":"theories/derive.v","status":"A","additions":8384,"deletions":2100},{"file":"theories/ereal.v","status":"A","additions":8384,"deletions":2100},{"file":"theories/hahn_banach.v","status":"A","additions":8384,"deletions":2100},{"file":"theories/hahn_banach_applications.v","status":"A","additions":8384,"deletions":2100},{"file":"theories/landau.v","status":"A","additions":8384,"deletions":2100},{"file":"theories/measure.v","status":"A","additions":8384,"deletions":2100},{"file":"theories/misc/uniform_bigO.v","status":"A","additions":8384,"deletions":2100},{"file":"theories/normedtype.v","status":"A","additions":8384,"deletions":2100},{"file":"theories/posnum.v","status":"A","additions":8384,"deletions":2100},{"file":"theories/prodnormedzmodule.v","status":"A","additions":8384,"deletions":2100},{"file":"theories/reals.v","status":"A","additions":8384,"deletions":2100},{"file":"theories/sequences.v","status":"A","additions":8384,"deletions":2100},{"file":"theories/summability.v","status":"A","additions":8384,"deletions":2100},{"file":"theories/topology.v","status":"A","additions":8384,"deletions":2100}],"state":"closed","open_date":"2020-04-14T08:46:31Z","update_date":"2021-02-19T15:22:44Z","discussion":[{"author":"affeldt-aist","date":"2020-04-23T16:02:54Z","comment":"When rebasing this PR / branch on PR #175, we have but back `theories/hahn_banach_applications.v` back in the `_CoqProject` and this has revealed a compilation problem apparently simply due to a misuse of `sup`. "},{"author":"CohenCyril","date":"2020-04-28T13:42:41Z","comment":"Should be reopened on top of master"}],"review_discussion":[],"tags":[],"commits":[{"author":"mkerjean","committer":"affeldt-aist","hash":"024ce1cb1442b1a449d9f618a842280ce0143d13","message":"LinearContinuousBounded","date":"2020-05-04T16:28:59Z"},{"author":"mkerjean","committer":"affeldt-aist","hash":"ef1ab981aa08ccd52535fdb2672eb3ad333320d5","message":"continuous_at -> for _, continuous","date":"2020-05-04T16:28:59Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"a584b4ea6c6b662009c48269645a718085ae7933","message":"format lemmas in section LinearContinuousBounded","date":"2020-05-04T16:28:59Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"559e0eeec5a8815972ce5e39d2b9009152a9b301","message":"Update theories/normedtype.v\n\nuse eqVneq instead of boolp.EM\n\nCo-Authored-By: Cyril Cohen <CohenCyril@users.noreply.github.com>","date":"2020-05-04T16:28:59Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"382699dc709bc67443592d5cfb8c81c720400db8","message":"fix","date":"2020-05-04T16:59:11Z"},{"author":"affeldt-aist","committer":"mkerjean","hash":"ebf92438faa62a4f89d6c354a70093eb9b05fa38","message":"renaming: is_prop -> is_subset1 (issue 24)","date":"2020-09-22T12:25:16Z"},{"author":"affeldt-aist","committer":"mkerjean","hash":"12e87801e94fb8c28d7d71ed20e9883d190d28fa","message":"tentative definitions of T2separated and closeness","date":"2020-09-22T12:25:16Z"},{"author":"CohenCyril","committer":"mkerjean","hash":"45bdd2fba72d6c017787916994f10c703802a6ea","message":"ported closness to topological spaces and link with hausdorff","date":"2020-09-22T12:25:16Z"},{"author":"affeldt-aist","committer":"mkerjean","hash":"4bd41af487b51222b1dacb23dacb34f98ca60f3d","message":"topological type mixin for ereal","date":"2020-09-22T12:25:16Z"},{"author":"affeldt-aist","committer":"mkerjean","hash":"00bc11b3b811bdb07dee7938164d980b3c733088","message":"add lemmas and perform generalizations\n\nso that this branch becomes a superset of PR#174\n\nCo-authored-by: Marie Kerjean <kerjean@irif.fr>","date":"2020-09-22T12:25:16Z"},{"author":"affeldt-aist","committer":"mkerjean","hash":"33274cf1ddd2bad411449774c1f228d9692a4f78","message":"fix the definition of le_ereal, lt_ereal\n\n- equip extended reals with a structure of topological space\n- show that extended reals are hausdorff\n- fix documentation of topology.v\n- add a few more lemmas\n\nCo-authored-by: Cyril Cohen <cohen@crans.org>","date":"2020-09-22T12:25:16Z"},{"author":"affeldt-aist","committer":"mkerjean","hash":"c5f1bf343334d6483a134775c3d8faa7cc73aee6","message":"cleanup (wip)","date":"2020-09-22T12:25:16Z"},{"author":"affeldt-aist","committer":"mkerjean","hash":"8cb51a150e82c0ef10b05abbff84f83e23491a9f","message":"fix lee_pinfty and lee_ninfty","date":"2020-09-22T12:25:16Z"},{"author":"CohenCyril","committer":"mkerjean","hash":"cad3226bf451a8d0f59bdb0e1a719159430616f0","message":"small renamings and left a comment for later on","date":"2020-09-22T12:25:16Z"},{"author":"CohenCyril","committer":"mkerjean","hash":"a475f37164d3e12b75654eff11fcecc621405432","message":"Big refactoring about naming conventions\n\n- complete the theory of `cvg_`, `is_cvg_` and `lim_` in normedtype.v\n  with consistent naming schemes\n- fixed differential of `inv` which was defined on `1 / x` instead of `x^-1`\n- two versions of lemmas on inverse exist\n  + one in realType (`Rinv_` lemmas), for which we have differential\n  + one in numClosedFieldType (no differential so far, just continuity)\n- renamed `cvg_norm` to `cvg_dist` to reuse the name `cvg_norm` for convergence under the norm","date":"2020-09-22T12:25:16Z"},{"author":"affeldt-aist","committer":"mkerjean","hash":"4090b4d1f34fbea59bdd78ce8247c5fef23d7184","message":"Various renamings\n\nCo-Authored-By: Reynald Affeldt <reynald.affeldt@aist.go.jp>","date":"2020-09-22T12:25:16Z"},{"author":"CohenCyril","committer":"mkerjean","hash":"80d83c8e26a2108e511d431c239421d7b6acff8e","message":"make travis not run twice!","date":"2020-09-22T12:25:16Z"},{"author":"CohenCyril","committer":"mkerjean","hash":"325e74ae49b5338edcffa7292c7e24a2a2615fae","message":"Generic domination, boundedness and lipschitz\n\n- See header for the notations and their localization.\n- Added a bunch of combinator to extract existential witnesses.\n- Added `filter_forall`, (commutation between a filter and finite forall).","date":"2020-09-22T12:25:16Z"},{"author":"CohenCyril","committer":"mkerjean","hash":"3a4ec1132dcb9b78ef97a1367b8c0633a5391fbe","message":"in_setE/in_fsetE -> inE","date":"2020-09-22T12:25:16Z"},{"author":"affeldt-aist","committer":"mkerjean","hash":"d6aa203b98f0c00da1bb38812b6c7044f13eedb6","message":"use mathcomp's subrKA instead of sub_trans","date":"2020-09-22T12:25:16Z"},{"author":"affeldt-aist","committer":"mkerjean","hash":"0d0578cb59a898dc89442419b1edacd6c95a67e2","message":"a few lemmas about extended reals' arithmetic","date":"2020-09-22T12:25:16Z"},{"author":"CohenCyril","committer":"mkerjean","hash":"2e86224a7e562f7bc4241d6737e8b4a5b3293974","message":"upgrading default.nix","date":"2020-09-22T12:25:16Z"},{"author":"affeldt-aist","committer":"mkerjean","hash":"5b7504ecf606d0a5d94409c5f7e8376c8f2178e4","message":"Main theorems about sequences and series and examples\n\nDefinitions:\n- `[sequence E]_n` is a special notation for `fun n => E`\n- `series u_` is the sequence of partial sums\n- `[normed S]` is the series of absolute values, if S is a series\n- `harmonic` is the name of a sequence, apply `series` to them to get the series.\n\nExample: `cvg [normed series (geometric a z)]`\n  states the absolute convergence of the series \\sum_(n > 0) |a z^n|.\n\nTheorems:\n- lots of helper lemmas to prove convergence of sequences\n- convergence of harmonic sequence\n- convergence of a series implies convergence of a sequence\n- absolute convergence implies convergence of series\n\nCo-Authored-By: Cyril Cohen <cyril.cohen@inria.fr>","date":"2020-09-22T12:25:16Z"},{"author":"CohenCyril","committer":"mkerjean","hash":"60cfecb47e14ed92bd7ea0c38e30f8049fc5d0f3","message":"Update README.md","date":"2020-09-22T12:25:16Z"},{"author":"CohenCyril","committer":"mkerjean","hash":"64ad8385bb3ecc84dc17d5bb9e9754b230170785","message":"Update README.md","date":"2020-09-22T12:25:16Z"},{"author":"CohenCyril","committer":"mkerjean","hash":"2317a9712e23761691975ba4028f0ed4e990ce4d","message":"updating config.nix","date":"2020-09-22T12:25:16Z"},{"author":"affeldt-aist","committer":"mkerjean","hash":"e0363c6bb4f05b40d0b0a18a5843d654f022b47d","message":"tentative definition of bigmaxr with bigop","date":"2020-09-22T12:25:16Z"},{"author":"affeldt-aist","committer":"mkerjean","hash":"e6592ab4ad4915030514684d23a923b051f728a3","message":"tentative changelog (#212)\n\n* tentative changelog\r\n\r\n* Update CHANGELOG_UNRELEASED.md\r\n\r\n* swapping stuff\r\n\r\nCo-authored-by: Cyril Cohen <CohenCyril@users.noreply.github.com>","date":"2020-09-22T12:25:16Z"},{"author":"affeldt-aist","committer":"mkerjean","hash":"1cb0ba59ef25fb1137918b1465994399a0db72ee","message":"changelog for version 0.3.0","date":"2020-09-22T12:25:16Z"},{"author":"affeldt-aist","committer":"mkerjean","hash":"97944ea1308ac202be5020439656d4602e571a4a","message":"fixes\n\n- update opam file\n- fix changelog","date":"2020-09-22T12:25:16Z"},{"author":"affeldt-aist","committer":"mkerjean","hash":"c36ac47597251942a4a937a9c337001e5e422c7b","message":"generalize ub, lb, etc. from `reals.v`\n\n- replace `pred` with `set` in `reals.v` and propagate\n- replace `-' E` by `-%R @' E`","date":"2020-09-22T12:25:16Z"},{"author":"affeldt-aist","committer":"mkerjean","hash":"af0c1a9a28017f8b75bcce382e558687501dc990","message":"Sets of supremums of extended reals are not empty\n\n- move Section ArchiBound from `reals.v` to `classical_sets.v`\n  + could factorize the two definitions of `nonempty`\n- new lemmas `lee_ninfty_eq` and `lee_ninfty_eq`\n- new lemma `image_set0` in `classical_sets.v`\n- move `Section ERealOrderTheory` from `reals.v` to `ereal.v`\n- new `Section ereal_supremum` in `ereal.v`\n  + Lemma `ereal_supremums_neq0` (sets of supremums of extended reals are not empty)","date":"2020-09-22T12:25:17Z"},{"author":"affeldt-aist","committer":"mkerjean","hash":"c73a781f15b8cca5b2a46c491fa783201b550443","message":"trying to control the unfolding of ub\n\n- replace `case`s of `pselect` with `have`s of `pselect`\n- replace expressions such as `(forall y, X y -> (x <= y)%O)`\n  by `ub X` (resp. `lb`)\n- avoid implicit unfolding of `ub`, `lb`, `down` by enforcing\n  usage of `ubP`, `lbP`, `downP`\n  + in particular, change the definition of supremum to\n    `ub E `&` lb (ub E)`\n- replace usage of `nonempty` by `!=set0`\n- removed redundant `has_inP`, `has_supP`, `has_ubP`, `has_lbP`,\n  `nonemptyPn`","date":"2020-09-22T12:25:17Z"},{"author":"affeldt-aist","committer":"mkerjean","hash":"07bfcad9c0880366318189443bd49dd870a881b7","message":"rebase sequences.v","date":"2020-09-22T12:25:17Z"},{"author":"affeldt-aist","committer":"mkerjean","hash":"d57f718052963e2751664118745727de96962621","message":"add doc and lemmas about supremum","date":"2020-09-22T12:25:17Z"},{"author":"affeldt-aist","committer":"mkerjean","hash":"8ff09e4b299c9f29579377491de23d9305c0182b","message":"add changelog information","date":"2020-09-22T12:25:17Z"},{"author":"affeldt-aist","committer":"mkerjean","hash":"e018bf8a3424aa90f38e2279e7b884a629039826","message":"rename lemmas for classical reasoning to avoid clash with fintype","date":"2020-09-22T12:25:17Z"},{"author":"affeldt-aist","committer":"mkerjean","hash":"40b874c8c7eb3dd1bd8e7732905e920ef4ce83fa","message":"update to last version","date":"2020-09-22T12:25:17Z"},{"author":"affeldt-aist","committer":"mkerjean","hash":"9e3cd5fbd4ab8325692e2f5b1b981817694a4a10","message":"ereals from a pseudometric type","date":"2020-09-22T12:25:17Z"},{"author":"affeldt-aist","committer":"mkerjean","hash":"06b238eaf5a97fe0760d7b1742d9cb5fc13281b3","message":"divergence in R is convergence to +oo in {ereal R}","date":"2020-09-22T12:25:17Z"},{"author":"affeldt-aist","committer":"mkerjean","hash":"af24e6a7f840759228a0310139a65779ff0b0e4a","message":"a non-decreasing sequence of ereals converges to its sup","date":"2020-09-22T12:25:17Z"},{"author":"CohenCyril","committer":"mkerjean","hash":"e1d2fa9e6e383e4587a8ca131840f8483330ece9","message":"exploiting fully the monotonicity of contract and expand","date":"2020-09-22T12:25:17Z"},{"author":"affeldt-aist","committer":"mkerjean","hash":"be278b47e3581d0b631301bebac8941b56ef71b1","message":"sup (resp. inf) of contract is contract of sup (resp. inf)","date":"2020-09-22T12:25:17Z"},{"author":"affeldt-aist","committer":"mkerjean","hash":"4f9812d2a9669a5eb66e8dadc26b0de41dcb69fe","message":"minor fixes","date":"2020-09-22T12:25:17Z"},{"author":"affeldt-aist","committer":"mkerjean","hash":"d0bc7bade4eb356b23e9696f95cb30cc59485d08","message":"update INSTALL.md now that 1.11.0 has been released","date":"2020-09-22T12:25:17Z"},{"author":"CohenCyril","committer":"mkerjean","hash":"70ddded559b58d4c92a0ee711df8900e232dc253","message":"Small renamings about expand.\n\n- partial strict monotonicity `le_expand` is renamed `le_expand_in`\n- reattribute `le_expand` to total large monotonicity (and simplify proof)\n- remove `(le|lt)_contract(LR|RL)` which were redundant with the symmetric of `(le|lt)_expand(LR|RL)`","date":"2020-09-22T12:25:17Z"},{"author":"affeldt-aist","committer":"mkerjean","hash":"f1a1ee5e7e00f01f45791439774a6c1921802a3f","message":"remove technical explanations about betas","date":"2020-09-22T12:25:17Z"},{"author":"CohenCyril","committer":"mkerjean","hash":"2ffac48732e2c1da1aed30a4a73e7bffbe25c211","message":"Adapting to new Order.max","date":"2020-09-22T12:25:17Z"},{"author":"CohenCyril","committer":"mkerjean","hash":"4c5a1d1f5f94e54424317bba4d8f4d0afa090014","message":"Update INSTALL.md","date":"2020-09-22T12:25:17Z"},{"author":"CohenCyril","committer":"mkerjean","hash":"bad9cf4553acd69f456b221d5c0d751ae7cf0783","message":"preparing changelog (#227)","date":"2020-09-22T12:25:17Z"},{"author":"affeldt-aist","committer":"mkerjean","hash":"ed3ef7d21694e0fa425c8b1a368bc6e0dd4d1b31","message":"two lemmas about arithmetic with ninfty + typos in the documentation","date":"2020-09-22T12:25:17Z"},{"author":"affeldt-aist","committer":"mkerjean","hash":"4de97a597c8173c797c55f71ae124c763d516cba","message":"rename the short `ub` and `lb` to `ubound` and `lbound`","date":"2020-09-22T12:25:17Z"},{"author":"affeldt-aist","committer":"mkerjean","hash":"e66b9f77b6046fcc6d7fdb7b87b58225a6c38fd7","message":"start a contributing file (wip)","date":"2020-09-22T12:25:17Z"},{"author":"affeldt-aist","committer":"mkerjean","hash":"c9875e4ae389d9028f85d034bd82a102a75c4812","message":"add link to mathcomp's contribution guide","date":"2020-09-22T12:25:17Z"},{"author":"affeldt-aist","committer":"mkerjean","hash":"758008c97486f02ddf5e97c8e9448a9d6446004d","message":"add a comment about near tactics vs. filter lemmas","date":"2020-09-22T12:25:17Z"},{"author":"affeldt-aist","committer":"mkerjean","hash":"4c5c5df4a6edcea0deb4bd3b8b83ded6fc44758b","message":"move comment about PR from readme.md to contributing.md","date":"2020-09-22T12:25:17Z"},{"author":"affeldt-aist","committer":"mkerjean","hash":"9b14992d7671318dd61ee75d01e8dd4fd18d1ec3","message":"tentative proof of Boole's inequality\n\nCo-authored-by: Cyril Cohen <cohen@crans.org>","date":"2020-09-22T12:25:17Z"},{"author":"affeldt-aist","committer":"mkerjean","hash":"b2d8e6b0bee35ff6c68c753d4c065b9405d59e26","message":"technical lemmas about ereal and minor generalization","date":"2020-09-22T12:25:17Z"},{"author":"affeldt-aist","committer":"mkerjean","hash":"51b0626c6584f52e88ba6197fe2fe82f1cb4dd71","message":"naming convention about homo/mono lemmas","date":"2020-09-22T12:25:17Z"},{"author":"pi8027","committer":"mkerjean","hash":"debf22cee03a7fd9f6898a66bf74ad6c89c5696e","message":"Fix inheritance from pseudoMetricNormedZmodType to completeNormedModType","date":"2020-09-22T12:25:17Z"},{"author":"affeldt-aist","committer":"mkerjean","hash":"8059ec7a003751a19a0ead0b02214669f868b7f0","message":"improved presentation\n\n- check naming convention\n- minor cosmetics changes\n- minimal doc\n\nCo-authored-by: Cohen Cyril <cyril.cohen@inria.fr>","date":"2020-09-22T12:25:17Z"},{"author":"pi8027","committer":"mkerjean","hash":"77adf26c55728dedcf21b5ccb43ada9a178f9ea7","message":"Generalize prod_pseudoMetricNormedZmodType","date":"2020-09-22T12:25:17Z"},{"author":"pi8027","committer":"mkerjean","hash":"fee589cbbcca7847002fa327607608fe731e95d9","message":"Get rid of deprecated lemmas filter_index_enum, uniq_perm_eq, and perm_eq_small","date":"2020-09-22T12:25:17Z"},{"author":"Zimmi48","committer":"mkerjean","hash":"45e4ce7c971e82f803b3282a61936e1bb6a7ee67","message":"Fix links of projects moved to coq-community.","date":"2020-09-22T12:25:17Z"},{"author":"affeldt-aist","committer":"mkerjean","hash":"5fd283962e9f3469e8bedd4164069639f384d844","message":"addition to the documentation of landau.v","date":"2020-09-22T12:25:17Z"},{"author":"affeldt-aist","committer":"mkerjean","hash":"22f66a18f5102b7c71fbfa58b1b0d8e897db9ad4","message":"renaming of lemmas for classical reasoning","date":"2020-09-22T12:25:17Z"},{"author":"affeldt-aist","committer":"mkerjean","hash":"1198c49acf60c1ea2f564b5bb57c30918e7a66cd","message":"move lemmas from measure.v to classical_sets.v","date":"2020-09-22T12:25:17Z"},{"author":"affeldt-aist","committer":"mkerjean","hash":"d00076cab407215a8fb91a1bbf4c3c189d93d560","message":"rename \"locally\" to \"nbhs\" and propagate","date":"2020-09-22T12:25:17Z"},{"author":"affeldt-aist","committer":"mkerjean","hash":"661ef7758f98e1da4c43c142368682114cb72df1","message":"address comments by Cyril","date":"2020-09-22T12:25:17Z"},{"author":"affeldt-aist","committer":"mkerjean","hash":"905db9ccdb2a79dc09b33f526f20dd47050771ad","message":"lemma open_nbhsE","date":"2020-09-22T12:25:17Z"},{"author":"affeldt-aist","committer":"mkerjean","hash":"967d45c6cd1d821745b6370d220676e6b91f35e7","message":"more lemmas about classical sets (following the naming convention of\nfinset)","date":"2020-09-22T12:25:17Z"},{"author":"affeldt-aist","committer":"mkerjean","hash":"f4016d496e92b392e063ef9cbfbc587e940d9fbc","message":"compatibility with coq 8.12","date":"2020-09-22T12:25:17Z"},{"author":"affeldt-aist","committer":"mkerjean","hash":"c3aeeedd6103dbe214e4a3830ced29bab3e6d79f","message":"restrict to Coq 8.10 and add Coq 8.12 to travis","date":"2020-09-22T12:25:17Z"},{"author":"affeldt-aist","committer":"mkerjean","hash":"dc1a0f6903473e85d0ffd1529dc3ceda7b835cf1","message":"more technical lemmas about extended numbers' arithmetic","date":"2020-09-22T12:25:17Z"},{"author":"affeldt-aist","committer":"mkerjean","hash":"05f3ac6b3becd185080dfaf5f24fb2d6f61e205e","message":"even more lemmas about extended real numbers' arithmetic","date":"2020-09-22T12:25:17Z"},{"author":"affeldt-aist","committer":"mkerjean","hash":"d8e1c8db28597dd6b55a1dafb8950a40eb26dc80","message":"small theory about arithmetic and geometric sequences","date":"2020-09-22T12:25:17Z"},{"author":"CohenCyril","committer":"mkerjean","hash":"90dd5808035ca9416b86b58914ae7d2a2928fdc0","message":"simplifications, extensions, generalizations, fixups, renamings","date":"2020-09-22T12:25:17Z"},{"author":"drouhling","committer":"mkerjean","hash":"109fb452070a46f4c0577d6e88783e6a4486b8eb","message":"Insert a structure of uniform space","date":"2020-09-22T12:25:17Z"},{"author":"drouhling","committer":"mkerjean","hash":"3ba23a1bbe142b43819aee16cbb1e231659adbf4","message":"Update documentation","date":"2020-09-22T12:25:17Z"},{"author":"drouhling","committer":"mkerjean","hash":"1209600bd03992a712a4a8077fe32a32248cf1a3","message":"Update changelog","date":"2020-09-22T12:25:17Z"},{"author":"drouhling","committer":"mkerjean","hash":"24ea6a817bd5142d4b121ce8fad5ca4326fcc64e","message":"Follow naming convention","date":"2020-09-22T12:25:17Z"},{"author":"drouhling","committer":"mkerjean","hash":"34e3e35c9b770898d037cc86e870f2ec7aa1e23c","message":"Add missing joins","date":"2020-09-22T12:25:17Z"},{"author":"drouhling","committer":"mkerjean","hash":"afbc439911b3a5271d2c158bdf490e984819c668","message":"Update uniform_bigO.v","date":"2020-09-22T12:25:17Z"},{"author":"drouhling","committer":"mkerjean","hash":"0d12c379d4ca72535ef7f1ce26d593479e7422ca","message":"Replace flim with cvg","date":"2020-09-22T12:25:17Z"},{"author":"affeldt-aist","committer":"mkerjean","hash":"fa7c3c623e8a7a2bfce676eb201d95c4b244feb8","message":"minor change to ereal\n\n- renaming\n- remove useless uses of notation scopes\n- remove lemma subsumed by mathcomp 1.11","date":"2020-09-22T12:25:17Z"},{"author":"drouhling","committer":"mkerjean","hash":"13289f698733bbb3521fc81434e59582121b8c42","message":"Move stdlib-related code to Rbar/Rstruct","date":"2020-09-22T12:26:34Z"},{"author":"drouhling","committer":"mkerjean","hash":"2a9c3170fc23e52f5a79dcdd5f4893ead3ef7b58","message":"Generalise closeness properties to uniform spaces","date":"2020-09-22T12:26:34Z"},{"author":"drouhling","committer":"mkerjean","hash":"825a28b156f6acf1349fb2eacdad19d33e98cb86","message":"Generalise continuous_withinNx","date":"2020-09-22T12:26:34Z"},{"author":"affeldt-aist","committer":"mkerjean","hash":"4ffb830ebd98981c5e36ae61b0cbf62d660ac67b","message":"minor fix, generalizations, cleaning","date":"2020-09-22T12:26:34Z"},{"author":"affeldt-aist","committer":"mkerjean","hash":"594aa9f1cd2bb091a8eaab9260b595a8e69bad18","message":"update changelog","date":"2020-09-22T12:26:34Z"},{"author":"CohenCyril","committer":"mkerjean","hash":"c8ed26cfdb472c39ff366716e33d483ed55bede5","message":"Minor fixes","date":"2020-09-22T12:26:34Z"},{"author":"CohenCyril","committer":"mkerjean","hash":"a12cc43684820f1d24b2f16dee47380ea2e01820","message":"a short description for cvg and landau","date":"2020-09-22T12:26:34Z"},{"author":"affeldt-aist","committer":"mkerjean","hash":"c0dfbe33dfeb6c07d2830306092012f1efa4d124","message":"changelog for version 0.3.2","date":"2020-09-22T12:26:34Z"},{"author":"affeldt-aist","committer":"mkerjean","hash":"e5fb09d0d67164500f3eae37d3be7bd8817e0c1d","message":"update opam file","date":"2020-09-22T12:26:34Z"},{"author":"CohenCyril","committer":"mkerjean","hash":"809277184fb0f14bfa9bfe0d8c66c3bbb221eab1","message":"fix changelog (#247)\n\n* fix/update changelog","date":"2020-09-22T12:26:34Z"},{"author":"affeldt-aist","committer":"mkerjean","hash":"f86a6353d62b6f5afeeb785bc4bc1396aad83d76","message":"update/fix INSTALL.md","date":"2020-09-22T12:26:34Z"},{"author":"affeldt-aist","committer":"mkerjean","hash":"7c5a18f24a58dcd9d9fb60e2d9fbd6efcae924f3","message":"minor generalization","date":"2020-09-22T12:26:34Z"},{"author":"CohenCyril","committer":"mkerjean","hash":"0bc9c3cb5e3dcc9382c9248626ea93e8d2ce62ee","message":"merging changelog unreleased with \"union\" merge driver.","date":"2020-09-22T12:26:34Z"},{"author":"affeldt-aist","committer":"mkerjean","hash":"fba448ca84742f75a24bf80f64adcfdd83b80741","message":"removing a few warnings\n\n- duplicate-clear, implicit-core-hint-db, and non-recursive","date":"2020-09-22T12:26:34Z"},{"author":"affeldt-aist","committer":"mkerjean","hash":"16204708891682f72f8ead813c92f55348356f6c","message":"addition of technical lemmas","date":"2020-09-22T12:26:34Z"},{"author":"affeldt-aist","committer":"mkerjean","hash":"1b32bb5f9f87c9c61b66cbccda22db3e5c85f68c","message":"two lemmas about closed sets of extended reals","date":"2020-09-22T12:26:34Z"},{"author":"mkerjean","committer":"mkerjean","hash":"0dc270fff68b99a1b6d16c8e7e275d3bd2b29049","message":"Hahn-Banach adapted to PR#270","date":"2020-09-22T12:26:34Z"},{"author":"mkerjean","committer":"mkerjean","hash":"a7fe484c90cb6d2b831beb7cf53b2d7f888f1bf6","message":"various generalizations\n\n- generalized to numField\n- scalar function V -> R^o\n- continuous bounded between normedspaces\n- continuous_restricted implies bounded","date":"2020-09-22T12:26:34Z"},{"author":"affeldt-aist","committer":"mkerjean","hash":"f7207ce80e7bdf148e05ce56b5b7187a4153eae5","message":"fix wrt PR193","date":"2020-09-22T12:26:34Z"},{"author":"mkerjean","committer":"mkerjean","hash":"f0e25a3fda7fa2c7b437f518cb0946ac3f2f827b","message":"renaming locally to nbhs","date":"2020-09-22T12:26:34Z"},{"author":"mkerjean","committer":"mkerjean","hash":"3d276515bf00ddf04ca2df3943fc68cc1a1f4982","message":"using ubound and lbound in prop","date":"2020-09-22T12:26:34Z"},{"author":"mkerjean","committer":"mkerjean","hash":"9e4593de52326ba9c674476d30fc510cb53619ab","message":"wip, to integrate to linearcontinuousbounded","date":"2020-09-22T12:26:34Z"},{"author":"mkerjean","committer":"mkerjean","hash":"4c1d6052385ec5b93b4cc27afc7b535aede90b9e","message":"wip entourage","date":"2020-09-22T12:26:34Z"},{"author":"mkerjean","committer":"mkerjean","hash":"cbe2e2db23e7856744f3fbeb6d836b4fc1304284","message":"wip entourage","date":"2020-09-22T12:26:34Z"},{"author":"mkerjean","committer":"mkerjean","hash":"ddfcbf0807f506f8d80e6c32a6fec7a1d0f2a7ff","message":"wip bounded","date":"2020-09-22T12:26:34Z"},{"author":"mkerjean","committer":"mkerjean","hash":"bc025a0f9018896935953ba7b742bdea08dfa3fc","message":"lincont bounded","date":"2020-09-22T12:26:34Z"},{"author":"mkerjean","committer":"mkerjean","hash":"53bbb1d6fd64019a4ca3e3a2c17082aee18daf26","message":"rebase on mathcomp_master_linearcontinuousbounded","date":"2020-09-22T12:29:48Z"},{"author":"mkerjean","committer":"mkerjean","hash":"a7c05196db5594e5ac59f6c04e38720185612e9f","message":"rebase on mathcomp_master_linearcontinuousbounded","date":"2020-09-22T12:29:58Z"},{"author":"mkerjean","committer":"mkerjean","hash":"02a41de55a4ec1be3bdae3d05367d30d84392cd4","message":"fix","date":"2020-09-22T14:36:12Z"}]},{"author":"affeldt-aist","number":178,"diff_summary":[{"file":"theories/classical_sets.v","status":"M","additions":8,"deletions":0}],"state":"merged","open_date":"2020-04-13T17:25:52Z","update_date":"2020-04-14T13:25:16Z","discussion":[],"review_discussion":[{"author":"CohenCyril","file":"theories/classical_sets.v","date":"2020-04-13T20:06:11Z","comment":"```suggestion\r\nProof. by rewrite predeqE; split => ?. Qed.\r\n```"}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"2f7aac66c86d16ff105d114a7d4b72fec151ae1c","message":"add setC0, setCK, setCT following remark by @vlj on gitter\n\nsetCK can also be found in PR#173","date":"2020-04-13T20:13:31Z"}]},{"author":"affeldt-aist","number":177,"diff_summary":[{"file":"theories/altreals/distr.v","status":"M","additions":761,"deletions":185},{"file":"theories/altreals/realseq.v","status":"M","additions":761,"deletions":185},{"file":"theories/altreals/realsum.v","status":"M","additions":761,"deletions":185},{"file":"theories/classical_sets.v","status":"M","additions":761,"deletions":185},{"file":"theories/derive.v","status":"M","additions":761,"deletions":185},{"file":"theories/ereal.v","status":"M","additions":761,"deletions":185},{"file":"theories/landau.v","status":"M","additions":761,"deletions":185},{"file":"theories/normedtype.v","status":"M","additions":761,"deletions":185},{"file":"theories/reals.v","status":"M","additions":761,"deletions":185},{"file":"theories/summability.v","status":"M","additions":761,"deletions":185},{"file":"theories/topology.v","status":"M","additions":761,"deletions":185}],"state":"merged","open_date":"2020-04-13T16:40:00Z","update_date":"2020-05-06T19:33:31Z","discussion":[{"author":"CohenCyril","date":"2020-04-28T13:41:45Z","comment":"Is it ready for review?"},{"author":"affeldt-aist","date":"2020-04-28T14:54:50Z","comment":"> Is it ready for review?\r\n\r\nI would say yet (provided we do the squash just before an eventual merge)."}],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"CohenCyril","hash":"27a8fc94e9bd0242be7949885fa219acd2d9f237","message":"tentative definitions of T2separated and closeness","date":"2020-05-06T17:45:34Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"5a61fa930eed810347973367f0227dde1d52d409","message":"ported closness to topological spaces and link with hausdorff","date":"2020-05-06T17:48:00Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"0639e162a494301f02e92bca3d91ccb39bfa270f","message":"topological type mixin for ereal","date":"2020-05-06T17:48:02Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"b085a9acf5284d1edf981d6388f5d50b85b50ecd","message":"add lemmas and perform generalizations\n\nso that this branch becomes a superset of PR#174\n\nCo-authored-by: Marie Kerjean <kerjean@irif.fr>","date":"2020-05-06T17:48:02Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"ef2487640c6e5d4cdbc95e939caf5c56b5b87250","message":"fix the definition of le_ereal, lt_ereal\n\n- equip extended reals with a structure of topological space\n- show that extended reals are hausdorff\n- fix documentation of topology.v\n- add a few more lemmas\n\nCo-authored-by: Cyril Cohen <cohen@crans.org>","date":"2020-05-06T17:49:31Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"5475ebebb07ad815c7e40eebc373b29763ee37dd","message":"cleanup (wip)","date":"2020-05-06T17:49:32Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"827adb1a29f403bb6ef233dec747d43ed7f6d837","message":"fix lee_pinfty and lee_ninfty","date":"2020-05-06T17:49:32Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"7d1689b499c9a0d09d1cfbfa94cf3236172c986e","message":"small renamings and left a comment for later on","date":"2020-05-06T18:19:47Z"}]},{"author":"affeldt-aist","number":176,"diff_summary":[{"file":".travis.yml","status":"A","additions":5604,"deletions":2326},{"file":"_CoqProject","status":"A","additions":5604,"deletions":2326},{"file":"default.nix","status":"A","additions":5604,"deletions":2326},{"file":"shell.nix","status":"A","additions":5604,"deletions":2326},{"file":"theories/Rbar.v","status":"A","additions":5604,"deletions":2326},{"file":"theories/Rstruct.v","status":"A","additions":5604,"deletions":2326},{"file":"theories/altreals/discrete.v","status":"A","additions":5604,"deletions":2326},{"file":"theories/altreals/distr.v","status":"A","additions":5604,"deletions":2326},{"file":"theories/altreals/realseq.v","status":"A","additions":5604,"deletions":2326},{"file":"theories/altreals/realsum.v","status":"A","additions":5604,"deletions":2326},{"file":"theories/altreals/xfinmap.v","status":"A","additions":5604,"deletions":2326},{"file":"theories/boolp.v","status":"A","additions":5604,"deletions":2326},{"file":"theories/classical_sets.v","status":"A","additions":5604,"deletions":2326},{"file":"theories/derive.v","status":"A","additions":5604,"deletions":2326},{"file":"theories/ereal.v","status":"A","additions":5604,"deletions":2326},{"file":"theories/forms.v","status":"A","additions":5604,"deletions":2326},{"file":"theories/landau.v","status":"A","additions":5604,"deletions":2326},{"file":"theories/normedtype.v","status":"A","additions":5604,"deletions":2326},{"file":"theories/posnum.v","status":"A","additions":5604,"deletions":2326},{"file":"theories/prodnormedzmodule.v","status":"A","additions":5604,"deletions":2326},{"file":"theories/reals.v","status":"A","additions":5604,"deletions":2326},{"file":"theories/summability.v","status":"A","additions":5604,"deletions":2326},{"file":"theories/test_suite.v","status":"A","additions":5604,"deletions":2326},{"file":"theories/topology.v","status":"A","additions":5604,"deletions":2326}],"state":"closed","open_date":"2020-04-13T16:36:46Z","update_date":"2020-04-13T16:38:20Z","discussion":[{"author":"affeldt-aist","date":"2020-04-13T16:38:20Z","comment":"My mistake: should be based on `mathcomp_master`."}],"review_discussion":[],"tags":[],"commits":[{"author":"CohenCyril","committer":"CohenCyril","hash":"798823ff8a39717f539d2f99fa09ac74636e6a9d","message":"updating nix-shell to use math-comp/math-comp#270","date":"2019-10-02T12:00:18Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"c8ae19bc6bb906026d246898cca824749e8f97e7","message":"travis on nix","date":"2019-10-02T12:39:04Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"8f9b2a744d3a968666fc680cd1aded59f456b4fe","message":"rebase on top of #152; aiming at redefining NormedModule using order.v\n\nCo-Authored-By: Kazuhiko Sakaguchi <pi8027@gmail.com>","date":"2020-02-14T22:27:53Z"},{"author":"pi8027","committer":"affeldt-aist","hash":"4f0e88d534d8e8142c5296c6948bc91f69fb4aea","message":"Order type instances of {ereal R}","date":"2020-02-14T22:28:52Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"7507fa8f99dc4d245ddb8524ac2bea4a67204bb9","message":"fixed normed module type","date":"2020-02-14T22:28:52Z"},{"author":"pi8027","committer":"affeldt-aist","hash":"f13dc3f27aed7ae664aaf0cb3d990c0982ec14bc","message":"Fix packagers, remove trailing `_ : Type` from `type` records","date":"2020-02-14T22:28:52Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"862fe27cbed49634843b8ac64c0f52963f945b43","message":"progress in replaying normedtype.v with PR 270;\nmatrix_normedModType made canonical;\nadd the Uniform.ball m = ball norm axiom to uniformNormedZmoduleType,\nprod_norm done;\ncomplete the translation from the old to the new structure definitions\nbut still struggling with the inference of filters;\ngeneralization for normedModType_hausdorff:\nglobal instance declarations\n\nCo-Authored-By: Kazuhiko Sakaguchi <pi8027@gmail.com>","date":"2020-02-14T22:28:52Z"},{"author":"pi8027","committer":"affeldt-aist","hash":"c435b31429fbe2daf91167f1fc6bc52d89bf13d0","message":"Add test suite for joins and several fixes\n\n- NormedZModuleType -> NormedZ*m*oduleType\n- Remove prod_normedZModuleType (declared in ssrnum)\n- Add some missing joins","date":"2020-02-14T22:28:52Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"41d38e967f719fd8c61fe3f37f497b42fc648411","message":"normedtype.v 66% (remainder broken down into Qeded and Admitted lemmas)","date":"2020-02-14T22:28:52Z"},{"author":"pi8027","committer":"affeldt-aist","hash":"d4e2c1bc28e0bf5b1c9669f5457116a36dc86a36","message":"Fix `[completeNormedModType K of T]` notation","date":"2020-02-14T22:28:52Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"09c0a50903770bd2c87394d79945825eb2b42140","message":"normedtype.v now uses numDomainType et al. in lieu of AbsRingType and\nmany definitions have been generalized from Redefinitions.R;\nlandau.v 43%","date":"2020-02-14T22:28:52Z"},{"author":"pi8027","committer":"affeldt-aist","hash":"8f6523a681bd15ae2ea45568ab6152812d18aac4","message":"cleaning","date":"2020-02-14T22:28:52Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"1b479f827e935e09e3bbaa52b8a9c4722f6d84be","message":"mathcomp-analysis compiles with PR 270;\nderive.v does not Require Reals anymore;\nrenaming: UniformNormed -> Topological, Rbar -> ereal, \\-inf, \\+int -> -oo, +oo;\ngeneralize extended reals (in a new file ereal.v) to relax types landau.v;\ngeneralizations: IVT Rdefinitions.R -> realType; various w.r.t.\nnumDomainType's;\nRbar not used in most files anymore,\nno more Require Import Order.Syntax and Order.Def,\navoid Importing Num.Def (so that some minr became Num.min),\nfix the lemma ball_center (it is now a working Hint)","date":"2020-02-14T22:28:52Z"},{"author":"CohenCyril","committer":"affeldt-aist","hash":"00e8e0dc3452dbaa54eefd55e0012c19a4b05e61","message":"weakening to numFieldType up to the begining of normedtype","date":"2020-02-14T22:28:52Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"b06d2ee12bebba409f029c9bf355f4f937da77b9","message":"generalizations: a few more types in normedtype.v;\ntypes in landau.v, in derive.v, hausdorff type, ler0_addgt0P, ler_addgt0Pr;\nremove Rstruct (in derive.v in particular);\n\nCo-Authored-By: Cyril Cohen <cohen@crans.org>","date":"2020-02-14T22:28:52Z"},{"author":"mkerjean","committer":"affeldt-aist","hash":"61dbc16c2b1b67a21c6dadfbae94ccbf6fc66cfa","message":"Rename: (l|L)attice -> (d|D)istrLattice; flim_bounded.","date":"2020-02-14T22:28:52Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"1f1f5be8c89b27f80d3872cf7400dd7a5e40051d","message":"generalizaton of Global Instance ereal_locally'_filter,\nof cvg_seq_bounded;\npropagate the effects of previous generalizations","date":"2020-02-14T22:28:52Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"4a4419882030b0f29056014132ccac896c0cd294","message":"bring bigmaxr/bigminr lemmas from uniform-entourages branch (wip)\n\nCo-Authored-By: damien rouhling <damien.rouhling@inria.fr>","date":"2020-02-14T22:28:52Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"bff23d0593e8fd3b34550f30ddfcc3137190dce2","message":"remove last instance of old fashioned bigmaxr from normedtype.v;\ntentative definition of mx_norm using numDomainType;\navoid using the module mc_1_9;\ntentative generalization of ler_mx_norm_add","date":"2020-02-14T22:28:52Z"},{"author":"mkerjean","committer":"affeldt-aist","hash":"8b7479ff9caad39bf4dd93d554cff49992de2fc0","message":"WIP, tentative generalization of mx_norm_eq0","date":"2020-02-14T22:28:52Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"7c99af768496ac4a6be41a95d37308a77405c06b","message":"get rid of admits in Section mx_norm';\nuse generic lemmas in Section mx_norm","date":"2020-02-14T22:28:52Z"},{"author":"mkerjean","committer":"affeldt-aist","hash":"f9adf63aa6c8e665430c1bd028c8e97d47a81723","message":"improve mx_norm, lemmas with K-valued mx_norm;\nwip in Section Matrix_NormedModule'","date":"2020-02-14T22:28:52Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"1fc1989648acfc65fb9599e717d635b3b5de9d0f","message":"various generalizations: mx_norm -> numDomainType, matrix_NormedModule\n-> numFieldType, various numFieldType -> numDomainType in topology.v;\nthe types in prod_NormedModule_* sections; the types of le_real and lt_real,\nadd non-negative numbers to generalize the type of ProdNormedZmodule\ngot rid of the intermediate definition of mx_norm, quarantine for bigmaxr/bigminr","date":"2020-02-14T22:28:52Z"},{"author":"mkerjean","committer":"affeldt-aist","hash":"d02bc4ef2c71e6271c7d0335ab556a9c2cd3f9ca","message":"rules_of_product for numClosedField; work on bigO, limit, differential","date":"2020-02-14T22:28:52Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"4c4474af29c0611900eb65bdda96a922b73c5b9b","message":"renaming one occurrence of Zmodule to Zmod;\ngeneralizations: a part of Section Differential to use numDomainType,\nin ERealOrderTheory Variable realType generalized to realDomainType;\nuse %O instead of %E for comparison operators,\nuse (_ < _)%O instead of lt_ereal in normedtype.v","date":"2020-02-14T22:28:52Z"},{"author":"pi8027","committer":"affeldt-aist","hash":"414857bb2158508998a79cd355f78dc7d648bfc6","message":"Fix notation and scope usage and generalize ereals","date":"2020-02-14T22:28:52Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"17e0243799ac355d2d0e43af9fd97d3253bb010f","message":"compatibility with mathcomp 1.9.0","date":"2020-02-14T22:28:52Z"},{"author":"pi8027","committer":"affeldt-aist","hash":"eaa4a0e71d6f28af2d5960d036c2ee584153fb58","message":"Fix CI; Revise the use of scopes\n- getting rid of the use of order_scope,\n- removing unnecessary `Open Scope`s, `Close Scope`s, and scope delimiters.","date":"2020-02-14T22:28:52Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"2db45523e7bffe1feb85241911f969edd91bc1d2","message":"rename Uniform -> PseudoMetric; minor generalization and fixes","date":"2020-02-14T22:28:52Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"3085f787d0d16b08db4a151b711382de9fabe87e","message":"update w.r.t. mathcomp master (distinction latticeType /\ndistrLatticeType)","date":"2020-04-13T11:20:46Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"c3b75ecd25e970bfbee9851734083a12964e23a1","message":"filter on ereals","date":"2020-04-13T15:16:43Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"22252bdbe8be5e3bc948f47b3c1620d07bd43eb5","message":"tentative definitions of T2separated and closeness","date":"2020-04-13T15:31:22Z"},{"author":"CohenCyril","committer":"affeldt-aist","hash":"57a8f6d40cbbcf2ea812574fd5f76332b1bcbced","message":"ported closness to topological spaces and link with hausdorff","date":"2020-04-13T15:32:41Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"cc6da04c03204abaee0d70fc206a0ef212729a0c","message":"topological type mixin for ereal","date":"2020-04-13T16:25:11Z"}]},{"author":"affeldt-aist","number":175,"diff_summary":[{"file":".gitignore","status":"A","additions":3309,"deletions":2319},{"file":".travis.yml","status":"A","additions":3309,"deletions":2319},{"file":"_CoqProject","status":"A","additions":3309,"deletions":2319},{"file":"default.nix","status":"A","additions":3309,"deletions":2319},{"file":"opam","status":"A","additions":3309,"deletions":2319},{"file":"shell.nix","status":"A","additions":3309,"deletions":2319},{"file":"theories/Rbar.v","status":"A","additions":3309,"deletions":2319},{"file":"theories/Rstruct.v","status":"A","additions":3309,"deletions":2319},{"file":"theories/altreals/distr.v","status":"A","additions":3309,"deletions":2319},{"file":"theories/altreals/realseq.v","status":"A","additions":3309,"deletions":2319},{"file":"theories/altreals/realsum.v","status":"A","additions":3309,"deletions":2319},{"file":"theories/altreals/xfinmap.v","status":"A","additions":3309,"deletions":2319},{"file":"theories/boolp.v","status":"A","additions":3309,"deletions":2319},{"file":"theories/classical_sets.v","status":"A","additions":3309,"deletions":2319},{"file":"theories/derive.v","status":"A","additions":3309,"deletions":2319},{"file":"theories/ereal.v","status":"A","additions":3309,"deletions":2319},{"file":"theories/forms.v","status":"A","additions":3309,"deletions":2319},{"file":"theories/landau.v","status":"A","additions":3309,"deletions":2319},{"file":"theories/normedtype.v","status":"A","additions":3309,"deletions":2319},{"file":"theories/posnum.v","status":"A","additions":3309,"deletions":2319},{"file":"theories/prodnormedzmodule.v","status":"A","additions":3309,"deletions":2319},{"file":"theories/reals.v","status":"A","additions":3309,"deletions":2319},{"file":"theories/summability.v","status":"A","additions":3309,"deletions":2319},{"file":"theories/topology.v","status":"A","additions":3309,"deletions":2319}],"state":"merged","open_date":"2020-04-13T13:42:39Z","update_date":"2020-04-24T15:46:13Z","discussion":[{"author":"CohenCyril","date":"2020-04-21T22:47:09Z","comment":"can you rewrite the history to squash the last two commits (ebdbe9f and f474275), put them first and remove mine about nix?"},{"author":"affeldt-aist","date":"2020-04-21T23:18:46Z","comment":"> can you rewrite the history to squash the last two commits ([ebdbe9f](https://github.com/math-comp/analysis/commit/ebdbe9ffe87bac817b329f29092280abda434c98) and [f474275](https://github.com/math-comp/analysis/commit/f4742757d9b586ec9d6e65eb5d3198e16a345918)), put them first and remove mine about nix?\r\n\r\nI don't think I did exactly what you wanted. :-("},{"author":"CohenCyril","date":"2020-04-21T23:35:42Z","comment":"It looks like you rewrote the wrong history :-/ what did you do?"},{"author":"affeldt-aist","date":"2020-04-22T20:08:50Z","comment":"> It looks like you rewrote the wrong history :-/ what did you do?\r\n\r\nIt should be fixed now. Thanks a lot."},{"author":"CohenCyril","date":"2020-04-22T21:07:43Z","comment":"There are conflicts again... I do not know what you did, but it is un-fixed"},{"author":"affeldt-aist","date":"2020-04-22T21:22:45Z","comment":"> There are conflicts again... I do not know what you did, but it is un-fixed\r\n\r\nI didn't do the last rebase on master.\r\n(And there is still the manual install of finmap.1.0.5 to get rid of.)"},{"author":"affeldt-aist","date":"2020-04-24T15:23:31Z","comment":"> I would like to merge as such and patch/fix after the fact. Do you agree?\r\n\r\nI think it is a good idea.\r\n"}],"review_discussion":[{"author":"CohenCyril","file":"theories/test_suite.v","date":"2020-04-24T08:29:58Z","comment":"I believe this file should not be committed... but generated at compilation time..."}],"tags":[],"commits":[{"author":"CohenCyril","committer":"affeldt-aist","hash":"d6864b60c8cde7bffc14fbd303675249226cbe10","message":"Update opam, _CoqProject and .travis.yml to mathcomp-1.11","date":"2020-04-22T21:09:26Z"},{"author":"CohenCyril","committer":"affeldt-aist","hash":"d707b765426d75733e86cd69159ebb79dfc32f6b","message":"updating nix-shell","date":"2020-04-22T21:09:26Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"805ffaa8e71606d30fa605aec1e851a4d4e34996","message":"rebase on top of #152; aiming at redefining NormedModule using order.v\n\nCo-Authored-By: Kazuhiko Sakaguchi <pi8027@gmail.com>","date":"2020-04-22T21:09:26Z"},{"author":"pi8027","committer":"affeldt-aist","hash":"299a3af23da9d4b2091c8f778d18a39ccd4f1995","message":"Order type instances of {ereal R}","date":"2020-04-22T21:09:26Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"f1ee2bc728cb6a18fbee4ddd897a64261edfb409","message":"fixed normed module type","date":"2020-04-22T21:09:26Z"},{"author":"pi8027","committer":"affeldt-aist","hash":"2ae541597eb4121e4bce60400809cb9979f35134","message":"Fix packagers, remove trailing `_ : Type` from `type` records","date":"2020-04-22T21:09:26Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"6646c8600d170067a9ae63fa5171ecba16379c28","message":"progress in replaying normedtype.v with PR 270\n\nmatrix_normedModType made canonical;\nadd the Uniform.ball m = ball norm axiom to uniformNormedZmoduleType,\nprod_norm done;\ncomplete the translation from the old to the new structure definitions\nbut still struggling with the inference of filters;\ngeneralization for normedModType_hausdorff:\nglobal instance declarations\n\nCo-Authored-By: Kazuhiko Sakaguchi <pi8027@gmail.com>","date":"2020-04-22T21:09:26Z"},{"author":"pi8027","committer":"affeldt-aist","hash":"eecfc2b9216909988ebeaf9bdbead4bc9aa7557b","message":"Add test suite for joins and several fixes\n\n- NormedZModuleType -> NormedZ*m*oduleType\n- Remove prod_normedZModuleType (declared in ssrnum)\n- Add some missing joins","date":"2020-04-22T21:09:26Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"9021fd1cafb97c49e978358f6efbdcf8ca1c18b3","message":"normedtype.v 66% (remainder broken down into Qeded and Admitted lemmas)","date":"2020-04-22T21:09:26Z"},{"author":"pi8027","committer":"affeldt-aist","hash":"1af95a4d8eee61b488f5e07829de40ae3290f2f9","message":"Fix `[completeNormedModType K of T]` notation","date":"2020-04-22T21:09:26Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"a15475c5bb6ad02405227ff7cf0cbebae83d15de","message":"Using numDomainType and realType\n\nnormedtype.v now uses numDomainType et al. in lieu of AbsRingType and\nmany definitions have been generalized from Redefinitions.R;\nlandau.v 43%","date":"2020-04-22T21:09:26Z"},{"author":"pi8027","committer":"affeldt-aist","hash":"6406c64146be3775fa2759cf5845f049c8b4129c","message":"cleaning","date":"2020-04-22T21:09:26Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"ac1f60480c99980f664a0834ef1f01865a1c1bf0","message":"mathcomp-analysis compiles with PR 270\n\nadditionally:\n- derive.v does not Require Reals anymore;\n- renaming: UniformNormed -> Topological, Rbar -> ereal, \\-inf, \\+int -> -oo, +oo;\n- generalize extended reals (in a new file ereal.v) to relax types landau.v;\n- generalizations: IVT Rdefinitions.R -> realType; various w.r.t.\n- numDomainType's;\n- Rbar not used in most files anymore,\n- no more Require Import Order.Syntax and Order.Def,\n- avoid Importing Num.Def (so that some minr became Num.min),\n- fix the lemma ball_center (it is now a working Hint)","date":"2020-04-22T21:09:27Z"},{"author":"CohenCyril","committer":"affeldt-aist","hash":"2fc7ef4fece680b1d3673fd1f9d1cb20595dbb41","message":"weakening to numFieldType up to the begining of normedtype","date":"2020-04-22T21:09:27Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"2cdf90a2a278c13ce47c174a3ff14196cb0f76cb","message":"generalizations: a few more types in normedtype.v\n\ntypes in landau.v, in derive.v, hausdorff type, ler0_addgt0P, ler_addgt0Pr;\nremove Rstruct (in derive.v in particular);\n\nCo-Authored-By: Cyril Cohen <cohen@crans.org>","date":"2020-04-22T21:09:27Z"},{"author":"mkerjean","committer":"affeldt-aist","hash":"99aeb3a2b8a24043312b947ab78b0075cbdaa760","message":"Rename: (l|L)attice -> (d|D)istrLattice; flim_bounded.","date":"2020-04-22T21:09:27Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"aabee017d127eb3c374bfb02e3e8f36812b79b54","message":"generalizaton of Global Instance ereal_locally'_filter and of cvg_seq_bounded\n\npropagate the effects of previous generalizations","date":"2020-04-22T21:09:27Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"5e74dd45b2d1df338888ed125ff2ee4c0437953c","message":"bring bigmaxr/bigminr lemmas from uniform-entourages branch (wip)\n\nCo-Authored-By: damien rouhling <damien.rouhling@inria.fr>","date":"2020-04-22T21:09:27Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"5506963b293ff3083f11dbf7e7493f9e8c9d1640","message":"remove last instance of old fashioned bigmaxr from normedtype.v\n\ntentative definition of mx_norm using numDomainType;\navoid using the module mc_1_9;\ntentative generalization of ler_mx_norm_add","date":"2020-04-22T21:09:27Z"},{"author":"mkerjean","committer":"affeldt-aist","hash":"16975871fb0d546ad961b20d04a464a09faa9b0e","message":"WIP, tentative generalization of mx_norm_eq0","date":"2020-04-22T21:09:27Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"583b512d9ac81f2daead6779ecefb3a31df9a112","message":"get rid of admits in Section mx_norm';\nuse generic lemmas in Section mx_norm","date":"2020-04-22T21:09:27Z"},{"author":"mkerjean","committer":"affeldt-aist","hash":"7c13ad49d0c4df70e3695b97febc52114833ce40","message":"improve mx_norm, lemmas with K-valued mx_norm;\nwip in Section Matrix_NormedModule'","date":"2020-04-22T21:09:27Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"b75489c06ffa1fbdc2ee2f6b8aca0966047891c2","message":"Various generalizations\n\nmx_norm -> numDomainType, matrix_NormedModule -> numFieldType,\nvarious numFieldType -> numDomainType in topology.v;\nthe types in prod_NormedModule_* sections; the types of le_real and lt_real,\nadd non-negative numbers to generalize the type of ProdNormedZmodule\ngot rid of the intermediate definition of mx_norm, quarantine for bigmaxr/bigminr","date":"2020-04-22T21:09:27Z"},{"author":"mkerjean","committer":"affeldt-aist","hash":"54b6703372d4c31c8a0b7b952da67527947b653f","message":"rules_of_product for numClosedField; work on bigO, limit, differential","date":"2020-04-22T21:09:27Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"1f037191b1fdf9f868a1bbca0d260cf08e171603","message":"generalizations and renamings\n\nrenaming one occurrence of Zmodule to Zmod\ngeneralizations: a part of Section Differential to use numDomainType,\nin ERealOrderTheory Variable realType generalized to realDomainType;\nuse %O instead of %E for comparison operators,\nuse (_ < _)%O instead of lt_ereal in normedtype.v","date":"2020-04-22T21:09:27Z"},{"author":"pi8027","committer":"affeldt-aist","hash":"78efc893e735035bd2ccbfa659563acffa97f895","message":"Fix notation and scope usage and generalize ereals","date":"2020-04-22T21:09:27Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"ccbeacb5a79024888e7baaba2445476f0bdde251","message":"compatibility with mathcomp 1.9.0","date":"2020-04-22T21:09:27Z"},{"author":"pi8027","committer":"affeldt-aist","hash":"c1f732078e7dac4b5f7b5bc7d7cabb7f7b397dfc","message":"Revise the use of scopes\n\n- getting rid of the use of order_scope,\n- removing unnecessary `Open Scope`s, `Close Scope`s, and scope delimiters.","date":"2020-04-22T21:09:27Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"ecb0fdae4046fa6baf335aa062f4aa4a16fe7492","message":"rename Uniform -> PseudoMetric; minor generalization and fixes","date":"2020-04-22T21:09:27Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"4905f3c09a7ce10e81c317265c20a75c7cf0c9a7","message":"update w.r.t. mathcomp master (distinction latticeType /\ndistrLatticeType)","date":"2020-04-22T21:09:27Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"a45e3b94e69f8104e76de270d669b7dea01e19a2","message":"file maintenance\n\n- removed automatically generated file\n- augment .gitignore","date":"2020-04-24T09:03:38Z"}]},{"author":"mkerjean","number":174,"diff_summary":[{"file":".travis.yml","status":"A","additions":5463,"deletions":2304},{"file":"_CoqProject","status":"A","additions":5463,"deletions":2304},{"file":"default.nix","status":"A","additions":5463,"deletions":2304},{"file":"shell.nix","status":"A","additions":5463,"deletions":2304},{"file":"theories/Rbar.v","status":"A","additions":5463,"deletions":2304},{"file":"theories/Rstruct.v","status":"A","additions":5463,"deletions":2304},{"file":"theories/altreals/discrete.v","status":"A","additions":5463,"deletions":2304},{"file":"theories/altreals/distr.v","status":"A","additions":5463,"deletions":2304},{"file":"theories/altreals/realseq.v","status":"A","additions":5463,"deletions":2304},{"file":"theories/altreals/realsum.v","status":"A","additions":5463,"deletions":2304},{"file":"theories/altreals/xfinmap.v","status":"A","additions":5463,"deletions":2304},{"file":"theories/boolp.v","status":"A","additions":5463,"deletions":2304},{"file":"theories/classical_sets.v","status":"A","additions":5463,"deletions":2304},{"file":"theories/derive.v","status":"A","additions":5463,"deletions":2304},{"file":"theories/ereal.v","status":"A","additions":5463,"deletions":2304},{"file":"theories/forms.v","status":"A","additions":5463,"deletions":2304},{"file":"theories/landau.v","status":"A","additions":5463,"deletions":2304},{"file":"theories/normedtype.v","status":"A","additions":5463,"deletions":2304},{"file":"theories/posnum.v","status":"A","additions":5463,"deletions":2304},{"file":"theories/prodnormedzmodule.v","status":"A","additions":5463,"deletions":2304},{"file":"theories/reals.v","status":"A","additions":5463,"deletions":2304},{"file":"theories/summability.v","status":"A","additions":5463,"deletions":2304},{"file":"theories/test_suite.v","status":"A","additions":5463,"deletions":2304},{"file":"theories/topology.v","status":"A","additions":5463,"deletions":2304}],"state":"closed","open_date":"2020-04-13T07:43:29Z","update_date":"2020-04-24T19:12:06Z","discussion":[{"author":"mkerjean","date":"2020-04-14T07:40:02Z","comment":"The main content of this PR is going to be merged into PR#177. What remains are few lemmas dealing with within (section within) which were useful in other developments. Should they be added to topology.v ? "},{"author":"CohenCyril","date":"2020-04-14T16:41:39Z","comment":"> The main content of this PR is going to be merged into PR#177. What remains are few lemmas dealing with within (section within) which were useful in other developments. Should they be added to topology.v ?\r\n\r\nyes sure"},{"author":"affeldt-aist","date":"2020-04-21T19:16:09Z","comment":"What about closing this PR now that is has been split between PR #177 and PR #182 ? "},{"author":"mkerjean","date":"2020-04-24T19:12:06Z","comment":"PR closed since it has split between PR #177 and PR #182."}],"review_discussion":[],"tags":[],"commits":[{"author":"CohenCyril","committer":"CohenCyril","hash":"798823ff8a39717f539d2f99fa09ac74636e6a9d","message":"updating nix-shell to use math-comp/math-comp#270","date":"2019-10-02T12:00:18Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"c8ae19bc6bb906026d246898cca824749e8f97e7","message":"travis on nix","date":"2019-10-02T12:39:04Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"8f9b2a744d3a968666fc680cd1aded59f456b4fe","message":"rebase on top of #152; aiming at redefining NormedModule using order.v\n\nCo-Authored-By: Kazuhiko Sakaguchi <pi8027@gmail.com>","date":"2020-02-14T22:27:53Z"},{"author":"pi8027","committer":"affeldt-aist","hash":"4f0e88d534d8e8142c5296c6948bc91f69fb4aea","message":"Order type instances of {ereal R}","date":"2020-02-14T22:28:52Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"7507fa8f99dc4d245ddb8524ac2bea4a67204bb9","message":"fixed normed module type","date":"2020-02-14T22:28:52Z"},{"author":"pi8027","committer":"affeldt-aist","hash":"f13dc3f27aed7ae664aaf0cb3d990c0982ec14bc","message":"Fix packagers, remove trailing `_ : Type` from `type` records","date":"2020-02-14T22:28:52Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"862fe27cbed49634843b8ac64c0f52963f945b43","message":"progress in replaying normedtype.v with PR 270;\nmatrix_normedModType made canonical;\nadd the Uniform.ball m = ball norm axiom to uniformNormedZmoduleType,\nprod_norm done;\ncomplete the translation from the old to the new structure definitions\nbut still struggling with the inference of filters;\ngeneralization for normedModType_hausdorff:\nglobal instance declarations\n\nCo-Authored-By: Kazuhiko Sakaguchi <pi8027@gmail.com>","date":"2020-02-14T22:28:52Z"},{"author":"pi8027","committer":"affeldt-aist","hash":"c435b31429fbe2daf91167f1fc6bc52d89bf13d0","message":"Add test suite for joins and several fixes\n\n- NormedZModuleType -> NormedZ*m*oduleType\n- Remove prod_normedZModuleType (declared in ssrnum)\n- Add some missing joins","date":"2020-02-14T22:28:52Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"41d38e967f719fd8c61fe3f37f497b42fc648411","message":"normedtype.v 66% (remainder broken down into Qeded and Admitted lemmas)","date":"2020-02-14T22:28:52Z"},{"author":"pi8027","committer":"affeldt-aist","hash":"d4e2c1bc28e0bf5b1c9669f5457116a36dc86a36","message":"Fix `[completeNormedModType K of T]` notation","date":"2020-02-14T22:28:52Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"09c0a50903770bd2c87394d79945825eb2b42140","message":"normedtype.v now uses numDomainType et al. in lieu of AbsRingType and\nmany definitions have been generalized from Redefinitions.R;\nlandau.v 43%","date":"2020-02-14T22:28:52Z"},{"author":"pi8027","committer":"affeldt-aist","hash":"8f6523a681bd15ae2ea45568ab6152812d18aac4","message":"cleaning","date":"2020-02-14T22:28:52Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"1b479f827e935e09e3bbaa52b8a9c4722f6d84be","message":"mathcomp-analysis compiles with PR 270;\nderive.v does not Require Reals anymore;\nrenaming: UniformNormed -> Topological, Rbar -> ereal, \\-inf, \\+int -> -oo, +oo;\ngeneralize extended reals (in a new file ereal.v) to relax types landau.v;\ngeneralizations: IVT Rdefinitions.R -> realType; various w.r.t.\nnumDomainType's;\nRbar not used in most files anymore,\nno more Require Import Order.Syntax and Order.Def,\navoid Importing Num.Def (so that some minr became Num.min),\nfix the lemma ball_center (it is now a working Hint)","date":"2020-02-14T22:28:52Z"},{"author":"CohenCyril","committer":"affeldt-aist","hash":"00e8e0dc3452dbaa54eefd55e0012c19a4b05e61","message":"weakening to numFieldType up to the begining of normedtype","date":"2020-02-14T22:28:52Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"b06d2ee12bebba409f029c9bf355f4f937da77b9","message":"generalizations: a few more types in normedtype.v;\ntypes in landau.v, in derive.v, hausdorff type, ler0_addgt0P, ler_addgt0Pr;\nremove Rstruct (in derive.v in particular);\n\nCo-Authored-By: Cyril Cohen <cohen@crans.org>","date":"2020-02-14T22:28:52Z"},{"author":"mkerjean","committer":"affeldt-aist","hash":"61dbc16c2b1b67a21c6dadfbae94ccbf6fc66cfa","message":"Rename: (l|L)attice -> (d|D)istrLattice; flim_bounded.","date":"2020-02-14T22:28:52Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"1f1f5be8c89b27f80d3872cf7400dd7a5e40051d","message":"generalizaton of Global Instance ereal_locally'_filter,\nof cvg_seq_bounded;\npropagate the effects of previous generalizations","date":"2020-02-14T22:28:52Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"4a4419882030b0f29056014132ccac896c0cd294","message":"bring bigmaxr/bigminr lemmas from uniform-entourages branch (wip)\n\nCo-Authored-By: damien rouhling <damien.rouhling@inria.fr>","date":"2020-02-14T22:28:52Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"bff23d0593e8fd3b34550f30ddfcc3137190dce2","message":"remove last instance of old fashioned bigmaxr from normedtype.v;\ntentative definition of mx_norm using numDomainType;\navoid using the module mc_1_9;\ntentative generalization of ler_mx_norm_add","date":"2020-02-14T22:28:52Z"},{"author":"mkerjean","committer":"affeldt-aist","hash":"8b7479ff9caad39bf4dd93d554cff49992de2fc0","message":"WIP, tentative generalization of mx_norm_eq0","date":"2020-02-14T22:28:52Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"7c99af768496ac4a6be41a95d37308a77405c06b","message":"get rid of admits in Section mx_norm';\nuse generic lemmas in Section mx_norm","date":"2020-02-14T22:28:52Z"},{"author":"mkerjean","committer":"affeldt-aist","hash":"f9adf63aa6c8e665430c1bd028c8e97d47a81723","message":"improve mx_norm, lemmas with K-valued mx_norm;\nwip in Section Matrix_NormedModule'","date":"2020-02-14T22:28:52Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"1fc1989648acfc65fb9599e717d635b3b5de9d0f","message":"various generalizations: mx_norm -> numDomainType, matrix_NormedModule\n-> numFieldType, various numFieldType -> numDomainType in topology.v;\nthe types in prod_NormedModule_* sections; the types of le_real and lt_real,\nadd non-negative numbers to generalize the type of ProdNormedZmodule\ngot rid of the intermediate definition of mx_norm, quarantine for bigmaxr/bigminr","date":"2020-02-14T22:28:52Z"},{"author":"mkerjean","committer":"affeldt-aist","hash":"d02bc4ef2c71e6271c7d0335ab556a9c2cd3f9ca","message":"rules_of_product for numClosedField; work on bigO, limit, differential","date":"2020-02-14T22:28:52Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"4c4474af29c0611900eb65bdda96a922b73c5b9b","message":"renaming one occurrence of Zmodule to Zmod;\ngeneralizations: a part of Section Differential to use numDomainType,\nin ERealOrderTheory Variable realType generalized to realDomainType;\nuse %O instead of %E for comparison operators,\nuse (_ < _)%O instead of lt_ereal in normedtype.v","date":"2020-02-14T22:28:52Z"},{"author":"pi8027","committer":"affeldt-aist","hash":"414857bb2158508998a79cd355f78dc7d648bfc6","message":"Fix notation and scope usage and generalize ereals","date":"2020-02-14T22:28:52Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"17e0243799ac355d2d0e43af9fd97d3253bb010f","message":"compatibility with mathcomp 1.9.0","date":"2020-02-14T22:28:52Z"},{"author":"pi8027","committer":"affeldt-aist","hash":"eaa4a0e71d6f28af2d5960d036c2ee584153fb58","message":"Fix CI; Revise the use of scopes\n- getting rid of the use of order_scope,\n- removing unnecessary `Open Scope`s, `Close Scope`s, and scope delimiters.","date":"2020-02-14T22:28:52Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"2db45523e7bffe1feb85241911f969edd91bc1d2","message":"rename Uniform -> PseudoMetric; minor generalization and fixes","date":"2020-02-14T22:28:52Z"},{"author":"mkerjean","committer":"mkerjean","hash":"4eadc1a4452bf1efc09b6647e54df35965fda707","message":"new lemmas for hausdorff\n\nwip","date":"2020-04-13T07:55:04Z"},{"author":"mkerjean","committer":"mkerjean","hash":"0cd42813cfb36e5dea4f894f8f8529e99ba965ad","message":"lemmas within","date":"2020-04-14T07:36:59Z"}]},{"author":"vlj","number":173,"diff_summary":[{"file":"theories/classical_sets.v","status":"M","additions":6,"deletions":0}],"state":"merged","open_date":"2020-04-11T17:06:50Z","update_date":"2020-04-28T14:04:01Z","discussion":[{"author":"affeldt-aist","date":"2020-04-11T22:02:36Z","comment":"You can maybe look at `finset.v` for the naming convention (`setCK` and `setICr`)."},{"author":"vlj","date":"2020-04-13T17:32:34Z","comment":"Renamed setCK and setICr, and added another lemma (setC0)."},{"author":"affeldt-aist","date":"2020-04-13T17:36:18Z","comment":"`setICr` should maybe be `setICl` because the complement operation is on the left-hand. These conventions are documented in [CONTRIBUTING.md](https://github.com/math-comp/math-comp/blob/master/CONTRIBUTING.md).\r\n\r\nAlso you may want to squash your commits into one commit. @vlj \r\n"},{"author":"vlj","date":"2020-04-16T17:21:23Z","comment":"Renamed to setICl, removed setCC, setC0 and setCK since they are already in master, and fixed -[] and the extra space. Everything is squashed into a single commit now."}],"review_discussion":[{"author":"affeldt-aist","file":"theories/classical_sets.v","date":"2020-04-13T20:27:48Z","comment":"Proof. by rewrite predeqE => ?; split => // -[]. Qed."},{"author":"affeldt-aist","file":"theories/classical_sets.v","date":"2020-04-13T20:29:23Z","comment":"Proof. by rewrite predeqE => ?; split => // _ []. Qed."},{"author":"affeldt-aist","file":"theories/classical_sets.v","date":"2020-04-13T20:30:21Z","comment":"Only one space before `=>`."}],"tags":[],"commits":[{"author":"vlj","committer":"vlj","hash":"47b6e5d92cf815c4d3ff9c40653550c69bb0cd32","message":"Add setICl and nonsubset.","date":"2020-04-16T17:23:32Z"}]},{"author":"mkerjean","number":172,"diff_summary":[{"file":".travis.yml","status":"A","additions":5466,"deletions":2304},{"file":"_CoqProject","status":"A","additions":5466,"deletions":2304},{"file":"default.nix","status":"A","additions":5466,"deletions":2304},{"file":"shell.nix","status":"A","additions":5466,"deletions":2304},{"file":"theories/Rbar.v","status":"A","additions":5466,"deletions":2304},{"file":"theories/Rstruct.v","status":"A","additions":5466,"deletions":2304},{"file":"theories/altreals/discrete.v","status":"A","additions":5466,"deletions":2304},{"file":"theories/altreals/distr.v","status":"A","additions":5466,"deletions":2304},{"file":"theories/altreals/realseq.v","status":"A","additions":5466,"deletions":2304},{"file":"theories/altreals/realsum.v","status":"A","additions":5466,"deletions":2304},{"file":"theories/altreals/xfinmap.v","status":"A","additions":5466,"deletions":2304},{"file":"theories/boolp.v","status":"A","additions":5466,"deletions":2304},{"file":"theories/classical_sets.v","status":"A","additions":5466,"deletions":2304},{"file":"theories/derive.v","status":"A","additions":5466,"deletions":2304},{"file":"theories/ereal.v","status":"A","additions":5466,"deletions":2304},{"file":"theories/forms.v","status":"A","additions":5466,"deletions":2304},{"file":"theories/landau.v","status":"A","additions":5466,"deletions":2304},{"file":"theories/normedtype.v","status":"A","additions":5466,"deletions":2304},{"file":"theories/posnum.v","status":"A","additions":5466,"deletions":2304},{"file":"theories/prodnormedzmodule.v","status":"A","additions":5466,"deletions":2304},{"file":"theories/reals.v","status":"A","additions":5466,"deletions":2304},{"file":"theories/summability.v","status":"A","additions":5466,"deletions":2304},{"file":"theories/test_suite.v","status":"A","additions":5466,"deletions":2304},{"file":"theories/topology.v","status":"A","additions":5466,"deletions":2304}],"state":"closed","open_date":"2020-04-08T11:21:40Z","update_date":"2020-04-13T07:42:34Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"CohenCyril","committer":"CohenCyril","hash":"798823ff8a39717f539d2f99fa09ac74636e6a9d","message":"updating nix-shell to use math-comp/math-comp#270","date":"2019-10-02T12:00:18Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"c8ae19bc6bb906026d246898cca824749e8f97e7","message":"travis on nix","date":"2019-10-02T12:39:04Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"8f9b2a744d3a968666fc680cd1aded59f456b4fe","message":"rebase on top of #152; aiming at redefining NormedModule using order.v\n\nCo-Authored-By: Kazuhiko Sakaguchi <pi8027@gmail.com>","date":"2020-02-14T22:27:53Z"},{"author":"pi8027","committer":"affeldt-aist","hash":"4f0e88d534d8e8142c5296c6948bc91f69fb4aea","message":"Order type instances of {ereal R}","date":"2020-02-14T22:28:52Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"7507fa8f99dc4d245ddb8524ac2bea4a67204bb9","message":"fixed normed module type","date":"2020-02-14T22:28:52Z"},{"author":"pi8027","committer":"affeldt-aist","hash":"f13dc3f27aed7ae664aaf0cb3d990c0982ec14bc","message":"Fix packagers, remove trailing `_ : Type` from `type` records","date":"2020-02-14T22:28:52Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"862fe27cbed49634843b8ac64c0f52963f945b43","message":"progress in replaying normedtype.v with PR 270;\nmatrix_normedModType made canonical;\nadd the Uniform.ball m = ball norm axiom to uniformNormedZmoduleType,\nprod_norm done;\ncomplete the translation from the old to the new structure definitions\nbut still struggling with the inference of filters;\ngeneralization for normedModType_hausdorff:\nglobal instance declarations\n\nCo-Authored-By: Kazuhiko Sakaguchi <pi8027@gmail.com>","date":"2020-02-14T22:28:52Z"},{"author":"pi8027","committer":"affeldt-aist","hash":"c435b31429fbe2daf91167f1fc6bc52d89bf13d0","message":"Add test suite for joins and several fixes\n\n- NormedZModuleType -> NormedZ*m*oduleType\n- Remove prod_normedZModuleType (declared in ssrnum)\n- Add some missing joins","date":"2020-02-14T22:28:52Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"41d38e967f719fd8c61fe3f37f497b42fc648411","message":"normedtype.v 66% (remainder broken down into Qeded and Admitted lemmas)","date":"2020-02-14T22:28:52Z"},{"author":"pi8027","committer":"affeldt-aist","hash":"d4e2c1bc28e0bf5b1c9669f5457116a36dc86a36","message":"Fix `[completeNormedModType K of T]` notation","date":"2020-02-14T22:28:52Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"09c0a50903770bd2c87394d79945825eb2b42140","message":"normedtype.v now uses numDomainType et al. in lieu of AbsRingType and\nmany definitions have been generalized from Redefinitions.R;\nlandau.v 43%","date":"2020-02-14T22:28:52Z"},{"author":"pi8027","committer":"affeldt-aist","hash":"8f6523a681bd15ae2ea45568ab6152812d18aac4","message":"cleaning","date":"2020-02-14T22:28:52Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"1b479f827e935e09e3bbaa52b8a9c4722f6d84be","message":"mathcomp-analysis compiles with PR 270;\nderive.v does not Require Reals anymore;\nrenaming: UniformNormed -> Topological, Rbar -> ereal, \\-inf, \\+int -> -oo, +oo;\ngeneralize extended reals (in a new file ereal.v) to relax types landau.v;\ngeneralizations: IVT Rdefinitions.R -> realType; various w.r.t.\nnumDomainType's;\nRbar not used in most files anymore,\nno more Require Import Order.Syntax and Order.Def,\navoid Importing Num.Def (so that some minr became Num.min),\nfix the lemma ball_center (it is now a working Hint)","date":"2020-02-14T22:28:52Z"},{"author":"CohenCyril","committer":"affeldt-aist","hash":"00e8e0dc3452dbaa54eefd55e0012c19a4b05e61","message":"weakening to numFieldType up to the begining of normedtype","date":"2020-02-14T22:28:52Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"b06d2ee12bebba409f029c9bf355f4f937da77b9","message":"generalizations: a few more types in normedtype.v;\ntypes in landau.v, in derive.v, hausdorff type, ler0_addgt0P, ler_addgt0Pr;\nremove Rstruct (in derive.v in particular);\n\nCo-Authored-By: Cyril Cohen <cohen@crans.org>","date":"2020-02-14T22:28:52Z"},{"author":"mkerjean","committer":"affeldt-aist","hash":"61dbc16c2b1b67a21c6dadfbae94ccbf6fc66cfa","message":"Rename: (l|L)attice -> (d|D)istrLattice; flim_bounded.","date":"2020-02-14T22:28:52Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"1f1f5be8c89b27f80d3872cf7400dd7a5e40051d","message":"generalizaton of Global Instance ereal_locally'_filter,\nof cvg_seq_bounded;\npropagate the effects of previous generalizations","date":"2020-02-14T22:28:52Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"4a4419882030b0f29056014132ccac896c0cd294","message":"bring bigmaxr/bigminr lemmas from uniform-entourages branch (wip)\n\nCo-Authored-By: damien rouhling <damien.rouhling@inria.fr>","date":"2020-02-14T22:28:52Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"bff23d0593e8fd3b34550f30ddfcc3137190dce2","message":"remove last instance of old fashioned bigmaxr from normedtype.v;\ntentative definition of mx_norm using numDomainType;\navoid using the module mc_1_9;\ntentative generalization of ler_mx_norm_add","date":"2020-02-14T22:28:52Z"},{"author":"mkerjean","committer":"affeldt-aist","hash":"8b7479ff9caad39bf4dd93d554cff49992de2fc0","message":"WIP, tentative generalization of mx_norm_eq0","date":"2020-02-14T22:28:52Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"7c99af768496ac4a6be41a95d37308a77405c06b","message":"get rid of admits in Section mx_norm';\nuse generic lemmas in Section mx_norm","date":"2020-02-14T22:28:52Z"},{"author":"mkerjean","committer":"affeldt-aist","hash":"f9adf63aa6c8e665430c1bd028c8e97d47a81723","message":"improve mx_norm, lemmas with K-valued mx_norm;\nwip in Section Matrix_NormedModule'","date":"2020-02-14T22:28:52Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"1fc1989648acfc65fb9599e717d635b3b5de9d0f","message":"various generalizations: mx_norm -> numDomainType, matrix_NormedModule\n-> numFieldType, various numFieldType -> numDomainType in topology.v;\nthe types in prod_NormedModule_* sections; the types of le_real and lt_real,\nadd non-negative numbers to generalize the type of ProdNormedZmodule\ngot rid of the intermediate definition of mx_norm, quarantine for bigmaxr/bigminr","date":"2020-02-14T22:28:52Z"},{"author":"mkerjean","committer":"affeldt-aist","hash":"d02bc4ef2c71e6271c7d0335ab556a9c2cd3f9ca","message":"rules_of_product for numClosedField; work on bigO, limit, differential","date":"2020-02-14T22:28:52Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"4c4474af29c0611900eb65bdda96a922b73c5b9b","message":"renaming one occurrence of Zmodule to Zmod;\ngeneralizations: a part of Section Differential to use numDomainType,\nin ERealOrderTheory Variable realType generalized to realDomainType;\nuse %O instead of %E for comparison operators,\nuse (_ < _)%O instead of lt_ereal in normedtype.v","date":"2020-02-14T22:28:52Z"},{"author":"pi8027","committer":"affeldt-aist","hash":"414857bb2158508998a79cd355f78dc7d648bfc6","message":"Fix notation and scope usage and generalize ereals","date":"2020-02-14T22:28:52Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"17e0243799ac355d2d0e43af9fd97d3253bb010f","message":"compatibility with mathcomp 1.9.0","date":"2020-02-14T22:28:52Z"},{"author":"pi8027","committer":"affeldt-aist","hash":"eaa4a0e71d6f28af2d5960d036c2ee584153fb58","message":"Fix CI; Revise the use of scopes\n- getting rid of the use of order_scope,\n- removing unnecessary `Open Scope`s, `Close Scope`s, and scope delimiters.","date":"2020-02-14T22:28:52Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"2db45523e7bffe1feb85241911f969edd91bc1d2","message":"rename Uniform -> PseudoMetric; minor generalization and fixes","date":"2020-02-14T22:28:52Z"},{"author":"mkerjean","committer":"mkerjean","hash":"3dc1ee8ef487c533c8d301d3c0c15305ed09fdb6","message":"new lemmas for hausdorff","date":"2020-04-08T11:20:41Z"},{"author":"mkerjean","committer":"mkerjean","hash":"e9ee9ea5a010031b2f0bfcbe43cfebe57ee22a6b","message":"wip","date":"2020-04-08T20:09:50Z"}]},{"author":"mkerjean","number":171,"diff_summary":[{"file":".travis.yml","status":"A","additions":5422,"deletions":2303},{"file":"_CoqProject","status":"A","additions":5422,"deletions":2303},{"file":"default.nix","status":"A","additions":5422,"deletions":2303},{"file":"shell.nix","status":"A","additions":5422,"deletions":2303},{"file":"theories/Rbar.v","status":"A","additions":5422,"deletions":2303},{"file":"theories/Rstruct.v","status":"A","additions":5422,"deletions":2303},{"file":"theories/altreals/discrete.v","status":"A","additions":5422,"deletions":2303},{"file":"theories/altreals/distr.v","status":"A","additions":5422,"deletions":2303},{"file":"theories/altreals/realseq.v","status":"A","additions":5422,"deletions":2303},{"file":"theories/altreals/realsum.v","status":"A","additions":5422,"deletions":2303},{"file":"theories/altreals/xfinmap.v","status":"A","additions":5422,"deletions":2303},{"file":"theories/boolp.v","status":"A","additions":5422,"deletions":2303},{"file":"theories/classical_sets.v","status":"A","additions":5422,"deletions":2303},{"file":"theories/derive.v","status":"A","additions":5422,"deletions":2303},{"file":"theories/ereal.v","status":"A","additions":5422,"deletions":2303},{"file":"theories/forms.v","status":"A","additions":5422,"deletions":2303},{"file":"theories/landau.v","status":"A","additions":5422,"deletions":2303},{"file":"theories/normedtype.v","status":"A","additions":5422,"deletions":2303},{"file":"theories/posnum.v","status":"A","additions":5422,"deletions":2303},{"file":"theories/prodnormedzmodule.v","status":"A","additions":5422,"deletions":2303},{"file":"theories/reals.v","status":"A","additions":5422,"deletions":2303},{"file":"theories/summability.v","status":"A","additions":5422,"deletions":2303},{"file":"theories/test_suite.v","status":"A","additions":5422,"deletions":2303},{"file":"theories/topology.v","status":"A","additions":5422,"deletions":2303}],"state":"closed","open_date":"2020-04-08T10:03:07Z","update_date":"2020-04-08T11:15:57Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"CohenCyril","committer":"CohenCyril","hash":"798823ff8a39717f539d2f99fa09ac74636e6a9d","message":"updating nix-shell to use math-comp/math-comp#270","date":"2019-10-02T12:00:18Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"c8ae19bc6bb906026d246898cca824749e8f97e7","message":"travis on nix","date":"2019-10-02T12:39:04Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"8f9b2a744d3a968666fc680cd1aded59f456b4fe","message":"rebase on top of #152; aiming at redefining NormedModule using order.v\n\nCo-Authored-By: Kazuhiko Sakaguchi <pi8027@gmail.com>","date":"2020-02-14T22:27:53Z"},{"author":"pi8027","committer":"affeldt-aist","hash":"4f0e88d534d8e8142c5296c6948bc91f69fb4aea","message":"Order type instances of {ereal R}","date":"2020-02-14T22:28:52Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"7507fa8f99dc4d245ddb8524ac2bea4a67204bb9","message":"fixed normed module type","date":"2020-02-14T22:28:52Z"},{"author":"pi8027","committer":"affeldt-aist","hash":"f13dc3f27aed7ae664aaf0cb3d990c0982ec14bc","message":"Fix packagers, remove trailing `_ : Type` from `type` records","date":"2020-02-14T22:28:52Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"862fe27cbed49634843b8ac64c0f52963f945b43","message":"progress in replaying normedtype.v with PR 270;\nmatrix_normedModType made canonical;\nadd the Uniform.ball m = ball norm axiom to uniformNormedZmoduleType,\nprod_norm done;\ncomplete the translation from the old to the new structure definitions\nbut still struggling with the inference of filters;\ngeneralization for normedModType_hausdorff:\nglobal instance declarations\n\nCo-Authored-By: Kazuhiko Sakaguchi <pi8027@gmail.com>","date":"2020-02-14T22:28:52Z"},{"author":"pi8027","committer":"affeldt-aist","hash":"c435b31429fbe2daf91167f1fc6bc52d89bf13d0","message":"Add test suite for joins and several fixes\n\n- NormedZModuleType -> NormedZ*m*oduleType\n- Remove prod_normedZModuleType (declared in ssrnum)\n- Add some missing joins","date":"2020-02-14T22:28:52Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"41d38e967f719fd8c61fe3f37f497b42fc648411","message":"normedtype.v 66% (remainder broken down into Qeded and Admitted lemmas)","date":"2020-02-14T22:28:52Z"},{"author":"pi8027","committer":"affeldt-aist","hash":"d4e2c1bc28e0bf5b1c9669f5457116a36dc86a36","message":"Fix `[completeNormedModType K of T]` notation","date":"2020-02-14T22:28:52Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"09c0a50903770bd2c87394d79945825eb2b42140","message":"normedtype.v now uses numDomainType et al. in lieu of AbsRingType and\nmany definitions have been generalized from Redefinitions.R;\nlandau.v 43%","date":"2020-02-14T22:28:52Z"},{"author":"pi8027","committer":"affeldt-aist","hash":"8f6523a681bd15ae2ea45568ab6152812d18aac4","message":"cleaning","date":"2020-02-14T22:28:52Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"1b479f827e935e09e3bbaa52b8a9c4722f6d84be","message":"mathcomp-analysis compiles with PR 270;\nderive.v does not Require Reals anymore;\nrenaming: UniformNormed -> Topological, Rbar -> ereal, \\-inf, \\+int -> -oo, +oo;\ngeneralize extended reals (in a new file ereal.v) to relax types landau.v;\ngeneralizations: IVT Rdefinitions.R -> realType; various w.r.t.\nnumDomainType's;\nRbar not used in most files anymore,\nno more Require Import Order.Syntax and Order.Def,\navoid Importing Num.Def (so that some minr became Num.min),\nfix the lemma ball_center (it is now a working Hint)","date":"2020-02-14T22:28:52Z"},{"author":"CohenCyril","committer":"affeldt-aist","hash":"00e8e0dc3452dbaa54eefd55e0012c19a4b05e61","message":"weakening to numFieldType up to the begining of normedtype","date":"2020-02-14T22:28:52Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"b06d2ee12bebba409f029c9bf355f4f937da77b9","message":"generalizations: a few more types in normedtype.v;\ntypes in landau.v, in derive.v, hausdorff type, ler0_addgt0P, ler_addgt0Pr;\nremove Rstruct (in derive.v in particular);\n\nCo-Authored-By: Cyril Cohen <cohen@crans.org>","date":"2020-02-14T22:28:52Z"},{"author":"mkerjean","committer":"affeldt-aist","hash":"61dbc16c2b1b67a21c6dadfbae94ccbf6fc66cfa","message":"Rename: (l|L)attice -> (d|D)istrLattice; flim_bounded.","date":"2020-02-14T22:28:52Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"1f1f5be8c89b27f80d3872cf7400dd7a5e40051d","message":"generalizaton of Global Instance ereal_locally'_filter,\nof cvg_seq_bounded;\npropagate the effects of previous generalizations","date":"2020-02-14T22:28:52Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"4a4419882030b0f29056014132ccac896c0cd294","message":"bring bigmaxr/bigminr lemmas from uniform-entourages branch (wip)\n\nCo-Authored-By: damien rouhling <damien.rouhling@inria.fr>","date":"2020-02-14T22:28:52Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"bff23d0593e8fd3b34550f30ddfcc3137190dce2","message":"remove last instance of old fashioned bigmaxr from normedtype.v;\ntentative definition of mx_norm using numDomainType;\navoid using the module mc_1_9;\ntentative generalization of ler_mx_norm_add","date":"2020-02-14T22:28:52Z"},{"author":"mkerjean","committer":"affeldt-aist","hash":"8b7479ff9caad39bf4dd93d554cff49992de2fc0","message":"WIP, tentative generalization of mx_norm_eq0","date":"2020-02-14T22:28:52Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"7c99af768496ac4a6be41a95d37308a77405c06b","message":"get rid of admits in Section mx_norm';\nuse generic lemmas in Section mx_norm","date":"2020-02-14T22:28:52Z"},{"author":"mkerjean","committer":"affeldt-aist","hash":"f9adf63aa6c8e665430c1bd028c8e97d47a81723","message":"improve mx_norm, lemmas with K-valued mx_norm;\nwip in Section Matrix_NormedModule'","date":"2020-02-14T22:28:52Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"1fc1989648acfc65fb9599e717d635b3b5de9d0f","message":"various generalizations: mx_norm -> numDomainType, matrix_NormedModule\n-> numFieldType, various numFieldType -> numDomainType in topology.v;\nthe types in prod_NormedModule_* sections; the types of le_real and lt_real,\nadd non-negative numbers to generalize the type of ProdNormedZmodule\ngot rid of the intermediate definition of mx_norm, quarantine for bigmaxr/bigminr","date":"2020-02-14T22:28:52Z"},{"author":"mkerjean","committer":"affeldt-aist","hash":"d02bc4ef2c71e6271c7d0335ab556a9c2cd3f9ca","message":"rules_of_product for numClosedField; work on bigO, limit, differential","date":"2020-02-14T22:28:52Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"4c4474af29c0611900eb65bdda96a922b73c5b9b","message":"renaming one occurrence of Zmodule to Zmod;\ngeneralizations: a part of Section Differential to use numDomainType,\nin ERealOrderTheory Variable realType generalized to realDomainType;\nuse %O instead of %E for comparison operators,\nuse (_ < _)%O instead of lt_ereal in normedtype.v","date":"2020-02-14T22:28:52Z"},{"author":"pi8027","committer":"affeldt-aist","hash":"414857bb2158508998a79cd355f78dc7d648bfc6","message":"Fix notation and scope usage and generalize ereals","date":"2020-02-14T22:28:52Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"17e0243799ac355d2d0e43af9fd97d3253bb010f","message":"compatibility with mathcomp 1.9.0","date":"2020-02-14T22:28:52Z"},{"author":"pi8027","committer":"affeldt-aist","hash":"eaa4a0e71d6f28af2d5960d036c2ee584153fb58","message":"Fix CI; Revise the use of scopes\n- getting rid of the use of order_scope,\n- removing unnecessary `Open Scope`s, `Close Scope`s, and scope delimiters.","date":"2020-02-14T22:28:52Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"2db45523e7bffe1feb85241911f969edd91bc1d2","message":"rename Uniform -> PseudoMetric; minor generalization and fixes","date":"2020-02-14T22:28:52Z"},{"author":"mkerjean","committer":"mkerjean","hash":"b98f3734a8119a6f090707c6af51970f501bb6ec","message":"using cluster and hausdorff for lemmas on limits","date":"2020-04-08T09:58:59Z"},{"author":"mkerjean","committer":"mkerjean","hash":"df64adc3e8d43056de8039cc174927904079eee3","message":"typo","date":"2020-04-08T11:12:18Z"}]},{"author":"mkerjean","number":170,"diff_summary":[{"file":".travis.yml","status":"A","additions":6720,"deletions":2304},{"file":"_CoqProject","status":"A","additions":6720,"deletions":2304},{"file":"default.nix","status":"A","additions":6720,"deletions":2304},{"file":"shell.nix","status":"A","additions":6720,"deletions":2304},{"file":"theories/Rbar.v","status":"A","additions":6720,"deletions":2304},{"file":"theories/Rstruct.v","status":"A","additions":6720,"deletions":2304},{"file":"theories/altreals/discrete.v","status":"A","additions":6720,"deletions":2304},{"file":"theories/altreals/distr.v","status":"A","additions":6720,"deletions":2304},{"file":"theories/altreals/realseq.v","status":"A","additions":6720,"deletions":2304},{"file":"theories/altreals/realsum.v","status":"A","additions":6720,"deletions":2304},{"file":"theories/altreals/xfinmap.v","status":"A","additions":6720,"deletions":2304},{"file":"theories/boolp.v","status":"A","additions":6720,"deletions":2304},{"file":"theories/classical_sets.v","status":"A","additions":6720,"deletions":2304},{"file":"theories/derive.v","status":"A","additions":6720,"deletions":2304},{"file":"theories/ereal.v","status":"A","additions":6720,"deletions":2304},{"file":"theories/forms.v","status":"A","additions":6720,"deletions":2304},{"file":"theories/hahn_banach.v","status":"A","additions":6720,"deletions":2304},{"file":"theories/hahn_banach_applications.v","status":"A","additions":6720,"deletions":2304},{"file":"theories/landau.v","status":"A","additions":6720,"deletions":2304},{"file":"theories/normedtype.v","status":"A","additions":6720,"deletions":2304},{"file":"theories/posnum.v","status":"A","additions":6720,"deletions":2304},{"file":"theories/prodnormedzmodule.v","status":"A","additions":6720,"deletions":2304},{"file":"theories/reals.v","status":"A","additions":6720,"deletions":2304},{"file":"theories/summability.v","status":"A","additions":6720,"deletions":2304},{"file":"theories/test_suite.v","status":"A","additions":6720,"deletions":2304},{"file":"theories/topology.v","status":"A","additions":6720,"deletions":2304}],"state":"closed","open_date":"2020-02-13T09:30:09Z","update_date":"2020-04-13T16:59:32Z","discussion":[{"author":"affeldt-aist","date":"2020-04-13T16:59:32Z","comment":"This PR has been subsumed by the branch `mathcomp_master_hahnbanach`."}],"review_discussion":[],"tags":[],"commits":[{"author":"CohenCyril","committer":"CohenCyril","hash":"798823ff8a39717f539d2f99fa09ac74636e6a9d","message":"updating nix-shell to use math-comp/math-comp#270","date":"2019-10-02T12:00:18Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"c8ae19bc6bb906026d246898cca824749e8f97e7","message":"travis on nix","date":"2019-10-02T12:39:04Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"cb49a8a3963b0139956be4f00bbb057de3c2d822","message":"analysis repo on top of PR#270 of mathcomp (wip done with Kazuhiko)","date":"2019-10-02T14:33:11Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"d84a939d32b2365f35e0dd88f1c743ccdd9ac9fd","message":"rebase on top of #152","date":"2019-10-02T17:15:18Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"85cd5b63d394ccf690a7f0dc99f460a873e74850","message":"analysis repo on top of PR#270 (cont'd)","date":"2019-10-03T18:33:34Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"139583287ecff05738ab1b4c5b3a44c05b547336","message":"aiming at redefining NormedModule using order.v (wip)","date":"2019-10-07T05:51:01Z"},{"author":"pi8027","committer":"affeldt-aist","hash":"05aaad00ce593f166009824c59e0e28f49d06a5c","message":"Order type instances of {ereal R}","date":"2019-10-11T11:32:08Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"6cc4f8687a0a60b1b880431503cd9a94231411ad","message":"fixed normed module type","date":"2019-10-11T13:58:42Z"},{"author":"pi8027","committer":"affeldt-aist","hash":"fd0bf5aa590fdda4aaae4008d5c03cebf872ceae","message":"Fix packagers, remove trailing `_ : Type` from `type` records","date":"2019-10-12T07:20:39Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"02b174de80af5f72ca0c41b7977a855daeb136bf","message":"minor progress on replayin normedtype.v with order.v","date":"2019-10-12T08:20:32Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"774fa83c8ba436dbbcbe2f84e6c659424ed85261","message":"minor progress in replaying normedtype.v with PR 270","date":"2019-10-15T05:58:24Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"003417baf21010f3896a6d6d865d66e7c4dd4fc5","message":"matrix_normedModType made canonical","date":"2019-10-15T11:52:21Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"8fd2db02693e263fcf8966c3971505f2ae1e8f44","message":"add the Uniform.ball m = ball norm axiom to uniformNormedZmoduleType,\nnormedtype.v still wip","date":"2019-10-15T13:37:43Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"ced8a2778f7afb9120d9af2305f49674f55f2f94","message":"still rebasing (prod_norm done)","date":"2019-10-15T21:09:40Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"daef5ecfcc362aebe13062932c13d9e8f315ff66","message":"sakaguchi-checked (fix uniform notations, fix packagers, clean rei's\nmess, now dealing with continuous notation)","date":"2019-10-16T13:42:46Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"f62b8351b5e6180cb04d75bc55bb0ddedf009593","message":"complete the translation from the old to the new structure definitions\nbut still struggling with the inference of filters","date":"2019-10-16T14:32:18Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"063ed33cbe69c2bea70823ebc70d9110d335cc96","message":"minor generalization and global instance to make minor progress","date":"2019-10-16T20:30:50Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"31f501575194d66ad055ccc929c31a0a4c3f5a8a","message":"minor generalization to make normedModType_hausdorff go through","date":"2019-10-16T20:42:59Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"932746f39d5a8bb95c04446a499a1d92844d9b37","message":"update with last commit of PR 270","date":"2019-10-17T08:07:41Z"},{"author":"pi8027","committer":"affeldt-aist","hash":"8b9a729bb0b062d50f8b7d9de396212d57e32a5e","message":"Add test suite for joins and several fixes\n\n- NormedZModuleType -> NormedZ*m*oduleType\n- Remove prod_normedZModuleType (declared in ssrnum)\n- Add some missing joins","date":"2019-10-17T10:59:44Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"0dbf97bb97db657531614a7e7b7e2831773f1e83","message":"normedtype.v to 66% (modulo one posnum automation issue)","date":"2019-10-17T11:46:12Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"fe89c1435a04f27350385445a880e88ac0b6c503","message":"broke down the remainder of normedtype.v into Qeded and Admitted lemmas,\nminor progress otherwise","date":"2019-10-17T15:54:29Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"30855f00e5f98f2e289776c8363135d17e2afe36","message":"minor progress","date":"2019-10-17T18:54:22Z"},{"author":"pi8027","committer":"affeldt-aist","hash":"0c86f724833aa0231800193cdced52fc00bce91d","message":"Fix `[completeNormedModType K of T]` notation","date":"2019-10-17T19:25:14Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"6db5cd4939f11f98daafb2f6e4148051a1439e5e","message":"minor progress","date":"2019-10-17T19:58:54Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"b80d2323f0c0780b872b45ac5efbb6b0246f8d0d","message":"normedtype.v now uses numDomainType et al. in lieu of AbsRingType and\nmany definitions have been generalized from Redefinitions.R, there is\nstill a lot to do in terms of cleaning and some pending issues","date":"2019-10-17T21:06:54Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"4dc500d1d8541cf86c5116fabeb0c23b48295b73","message":"trying to make landau.v go through (43%)","date":"2019-10-18T07:59:47Z"},{"author":"pi8027","committer":"affeldt-aist","hash":"100ec6ab86cb7cfae4d831dcd799689b334a5104","message":"cleaning","date":"2019-10-18T08:25:29Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"ed11e344ac3c2b3daf01c543abab80e695c59fe4","message":"derive.v compiles with PR 270","date":"2019-10-18T12:24:33Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"efc1b6527b5c9eae5f668134d338a7e66e5f5016","message":"mathcomp-analysis compiles with PR 270 and derive.v does not Require\nReals anymore","date":"2019-10-18T12:31:16Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"c1c97c560f0a1af53bc6dd35207b222c265f0bfc","message":"renamed UniformNormed to Topological","date":"2019-10-18T13:10:28Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"fe613330889d049bb1cbe867904512449b22c760","message":"minor cleaning, documentation wip, remove unnecessary comments","date":"2019-10-18T14:39:47Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"bdca26243b40f71b14d789e7b9b5adbedf8c87a1","message":"generalize extended reals (in a new file ereal.v) so as to relax the\ntype in landau.v (wip)","date":"2019-10-18T18:26:39Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"9108c9779c03dcd3a98511f462110f5389bbec74","message":"IVT from Rdefinitions.R to realType, remove duplicate lemmas","date":"2019-10-18T21:24:20Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"ceba1b091e4de27d7b79fe16454f5bd66e2a3a7c","message":"replace \\-inf, \\+int with -oo, +oo, Rbar not used in\nnormedtype.v/landau.v/derive.v and other files anymore, update doc in normedtype.v,\nminor generalizations w.r.t. numDomainType's, minor renaming (Rbar ->\nereal), remove a few useless lemmas","date":"2019-10-19T15:06:53Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"529bae461e09937da953e144989626c1cd7540f0","message":"minor fixes","date":"2019-10-19T17:52:17Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"34b32161cac5a953fc85f452574837600c185145","message":"a less un-portable _CoqProject","date":"2019-10-20T11:40:18Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"198d4b2114333b1310738ec0d72e0a4f743117a1","message":"simplify bigmax lemma, remove duplicated lemmas, avoid sections with the\nsame name","date":"2019-10-20T22:20:29Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"3de5a67b304096fce729e7911fad789e0c83658e","message":"update w.r.t. last PR#270, no more Require Import Order.Syntax and\nOrder.Def, avoid Importing Num.Def (so that some minr became Num.min),\nfix the lemma ball_center (it is now a working Hint)","date":"2019-10-24T14:05:08Z"},{"author":"CohenCyril","committer":"affeldt-aist","hash":"e2824e9d177e0426efcd3e7bcb5f45eaa135c081","message":"weakening to numFieldType up to the begining of normedtype","date":"2019-10-26T09:40:04Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"d4cef0ab1f373ed8f34c9b75e4bda69c8c540b90","message":"insert \"TODO: generalize to\" comments for results that ought to be\ngeneralized","date":"2019-10-26T11:05:20Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"59f8e4e958bed7577ce9f6872ff67a4fa40fc471","message":"generalization of a few more types in normedtype.v","date":"2019-10-26T11:51:35Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"6e9a988b7d27714f13f67807291eb6d7dd54419d","message":"generalization of types in landau.v, remove Require Import Rstruct","date":"2019-10-26T11:59:12Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"47a9dccd0be3a9305bfcf979a18e6793781ff6fb","message":"easy generalizations in derive.v, removed Rstruct from derive.v","date":"2019-10-26T13:20:52Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"89919d57b6fbdafef24ba3884bc7c449f6232247","message":"generalize hausdorff type, fixes","date":"2019-11-14T13:09:13Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"60285440523f2b9f4e7eecdd61a09c95bcca4e24","message":"ler_addgt0Pr generalized by Cyril","date":"2019-11-14T13:09:21Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"0c689e8f2bc1f9866515e91e8c4bfdf3907625a7","message":"generalize ler0_addgt0P","date":"2019-11-14T13:09:21Z"},{"author":"mkerjean","committer":"affeldt-aist","hash":"ea91bc0b5e5349889f8a3660fe885bca80256aac","message":"Rename: (l|L)attice -> (d|D)istrLattice","date":"2019-11-14T13:09:21Z"},{"author":"mkerjean","committer":"affeldt-aist","hash":"0c0648e862b56e08f3500dbe5e25be94038bffbe","message":"flim_bounded.","date":"2019-11-14T13:09:21Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"b02d311178fdb3bc823312ce5fd53605efa19067","message":"generalizaton of Global Instance ereal_locally'_filter (wip)","date":"2019-11-14T13:09:21Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"dd9e63e4fc04edb5ca7b10a598d3635001752644","message":"propagate the effects of previous generalization","date":"2019-11-14T13:09:21Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"d7d3a3707d8b3fdcf9943c33317438fbc6ab0761","message":"generalization of cvg_seq_bounded (wip)","date":"2019-11-14T13:09:21Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"d702505953f8c74b2ef600038cf0a7020f452dca","message":"bring bigmaxr/bigminr lemmas from uniform-entourages branch (wip)\n\nCo-Authored-By: damien rouhling <damien.rouhling@inria.fr>","date":"2019-11-14T13:09:21Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"f77e418b58f81d9ba7aa50686b33e513abafa9d3","message":"remove last instance of old fashioned bigmaxr from normedtype.v","date":"2019-11-14T13:09:21Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"83b4f13b47ab9c704b008b1f8cc3b872bae6093c","message":"tentative definition of mx_norm using numDomainType (wip)","date":"2019-11-14T13:09:21Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"99edffe2cb7f535d68493968a54f8c9594505793","message":"avoid using the module mc_1_9","date":"2019-11-14T13:09:21Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"162dba7f539a50898c045202989fb116ffdd35ba","message":"tentative generalization of ler_mx_norm_add (wip)","date":"2019-11-14T13:09:21Z"},{"author":"mkerjean","committer":"affeldt-aist","hash":"b4fb1dceb8722053228aa26e236b3855c6f76565","message":"WIP, tentative generalization of mx_norm_eq0","date":"2019-11-14T13:09:21Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"d94179981f3b3e898d68e30d4de2f97b0c860140","message":"get rid of admits in Section mx_norm'","date":"2019-11-14T13:09:21Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"7e8a530d8046e3afac44f7944c596ecef860d3b6","message":"use generic lemmas in Section mx_norm","date":"2019-11-14T13:09:21Z"},{"author":"mkerjean","committer":"affeldt-aist","hash":"02f14039cf4d5492695ec0d00f25761ef0c86142","message":"improve mx_norm, lemmas with K-valued mx_norm","date":"2019-11-14T13:09:21Z"},{"author":"mkerjean","committer":"affeldt-aist","hash":"5f353734115dd4e128c12eaf6073dfbccd99d7fd","message":"WIP Section Matrix_NormedModule'","date":"2019-11-14T13:09:21Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"8141d45cbaf3ccd610efa1727b8002ed97b959a2","message":"mx_norm generalized to numDomainType and matrix_NormedModule generalized\nto numFieldType","date":"2019-11-14T13:09:21Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"576815ff8c7c6049c25c9398b651ed47c869cc70","message":"various generalizations from numFieldType to numDomainType in\ntopology.v","date":"2019-11-14T13:09:21Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"09d05ec7f33fa0a4b83e4b7fcd2d25f10dd188cb","message":"generalize the types in prod_NormedModule_* sections","date":"2019-11-14T13:09:21Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"de750fca4a73247a863a1b1a72d603189080e547","message":"generalize the types of le_real and lt_real, minor fixes, minor cleaning","date":"2019-11-14T13:09:21Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"812a84415638bb1ff588e2cd90761f42c2b56642","message":"add non-negative numbers to generalize the type of ProdNormedZmodule\n(this was a PR to mathcomp/experiment/order)","date":"2019-11-14T13:09:21Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"d42590e83ea3d6e130d5b8c2b4200421be04ae38","message":"got rid of the intermediate definition of mx_norm, quarantine for\nbigmaxr/bigminr","date":"2019-11-14T21:11:03Z"},{"author":"mkerjean","committer":"mkerjean","hash":"a923a9d237d749a36976568c013ffb9deaebe760","message":"Done bigOexp TODO Limit","date":"2019-11-15T15:01:01Z"},{"author":"mkerjean","committer":"mkerjean","hash":"b7f7ac27e33665b78fef5ce0906fe6ac1644f73c","message":"Limit","date":"2019-11-15T19:54:58Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"e2adf246b415853116dceec0afa2668ac2656d8a","message":"minor fix","date":"2019-11-18T14:53:15Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"59eb18904b754e749da9223cd88f27e03de9d69e","message":"minor cleaning","date":"2019-11-18T19:11:12Z"},{"author":"mkerjean","committer":"mkerjean","hash":"337cbd7d4cf4521bfeaccf35f2b3715f73fdcd97","message":"wip","date":"2019-11-18T21:53:52Z"},{"author":"mkerjean","committer":"mkerjean","hash":"6d81c9e19c253cc4d7f960ccb3877edfcf6bba51","message":"rules_of_product for numClosedField","date":"2019-11-19T11:50:54Z"},{"author":"mkerjean","committer":"mkerjean","hash":"4dc8c062d920c55d4338cc88268835a40f140b24","message":"rules_of_product for numClosedField","date":"2019-11-19T11:54:37Z"},{"author":"mkerjean","committer":"affeldt-aist","hash":"4ac60d7b96ab392940a8c4989a738138b6a92e3e","message":"clean, differential","date":"2019-11-20T10:43:07Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"3c491829fd290e6d3941bc5b1241d021cc57a546","message":"minor fix and generalizations","date":"2019-11-20T10:43:16Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"b0f22e550594518bf60263bb6458d6e373fc8fa9","message":"generalize a part of Section Differential to use numDomainType","date":"2019-11-25T17:48:00Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"b438e87a2579ac5601f96d1e4110aa3daa4973f4","message":"renaming (one occurrence of Zmodule turned into Zmod)","date":"2019-11-26T10:08:33Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"73ba2b937cf461b4c7aee25bfe012f6831f9766a","message":"use %O instead of %E for comparison operators,\nuse (_ < _)%O instead of lt_ereal in normedtype.v,\nERealOrderTheory: Variable realType generalized to realDomainType but\nthe theory is barely used","date":"2019-12-02T17:46:07Z"},{"author":"pi8027","committer":"affeldt-aist","hash":"2a98d6479fbd1499d870bc37ffd7be9b16f3723f","message":"Fix notation and scope usage and generalize ereals","date":"2019-12-03T14:47:20Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"06d73d2d3feaa7c15b1377fba59e7967304dafe1","message":"compatibility with mathcomp 1.9.0","date":"2019-12-06T14:41:42Z"},{"author":"pi8027","committer":"affeldt-aist","hash":"6b1e4bd96e813ff4834b2008d5b325240f2d09d2","message":"Fix CI","date":"2020-01-14T20:01:37Z"},{"author":"pi8027","committer":"affeldt-aist","hash":"1016d3b9de823bfc0fc31613a08084a9048deba2","message":"Revise the use of scopes\n\n- getting rid of the use of order_scope,\n- removing unnecessary `Open Scope`s, `Close Scope`s, and scope delimiters.","date":"2020-01-14T20:01:37Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"e455b7e597168ecd924f244e8916beac1aab96a3","message":"minor fixes","date":"2020-01-14T20:08:08Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"bf7f2a4423b9ef7c0f218fe8e77b3fbc56de212b","message":"minor generalization","date":"2020-01-23T10:59:23Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"e2f80681998810a4dd22caacff3e7d1ef44d813e","message":"rename Uniform -> PseudoMetric","date":"2020-01-26T13:21:57Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"1b49137d86e0c482ae23686b8594d4f068146036","message":"fix doc in header","date":"2020-02-06T12:13:11Z"},{"author":"mkerjean","committer":"affeldt-aist","hash":"8023f443e8b94c953f15478e446b0d920e49256b","message":"rebasing branch hb on analysis_270","date":"2020-02-06T12:32:02Z"},{"author":"mkerjean","committer":"affeldt-aist","hash":"c4097af980b9d69c367ae764e8ad97408cd93d43","message":"Hahn Banach adapted to 270","date":"2020-02-06T12:32:02Z"},{"author":"mkerjean","committer":"affeldt-aist","hash":"c6a04b13588b2165ce58562bec97ffae81a25b6a","message":"generalized to numField","date":"2020-02-06T12:32:02Z"},{"author":"mkerjean","committer":"affeldt-aist","hash":"73d9a9b3f90846467f091be4b03df69ba319ebea","message":"scalar function V -> R^o","date":"2020-02-06T12:32:02Z"},{"author":"mkerjean","committer":"affeldt-aist","hash":"b106a89b96b210f8c244935c37949ff0737a16e2","message":"continuous bounded between normedspaces","date":"2020-02-06T12:32:02Z"},{"author":"mkerjean","committer":"affeldt-aist","hash":"1296f0bd31a2bbc157f2c80c892585ef7c9cd61d","message":"continuous_restricted implies bouded","date":"2020-02-06T12:32:02Z"}]},{"author":"mkerjean","number":169,"diff_summary":[{"file":".travis.yml","status":"A","additions":5857,"deletions":2303},{"file":"_CoqProject","status":"A","additions":5857,"deletions":2303},{"file":"default.nix","status":"A","additions":5857,"deletions":2303},{"file":"shell.nix","status":"A","additions":5857,"deletions":2303},{"file":"theories/Rbar.v","status":"A","additions":5857,"deletions":2303},{"file":"theories/Rstruct.v","status":"A","additions":5857,"deletions":2303},{"file":"theories/altreals/discrete.v","status":"A","additions":5857,"deletions":2303},{"file":"theories/altreals/distr.v","status":"A","additions":5857,"deletions":2303},{"file":"theories/altreals/realseq.v","status":"A","additions":5857,"deletions":2303},{"file":"theories/altreals/realsum.v","status":"A","additions":5857,"deletions":2303},{"file":"theories/altreals/xfinmap.v","status":"A","additions":5857,"deletions":2303},{"file":"theories/boolp.v","status":"A","additions":5857,"deletions":2303},{"file":"theories/classical_sets.v","status":"A","additions":5857,"deletions":2303},{"file":"theories/derive.v","status":"A","additions":5857,"deletions":2303},{"file":"theories/ereal.v","status":"A","additions":5857,"deletions":2303},{"file":"theories/forms.v","status":"A","additions":5857,"deletions":2303},{"file":"theories/holomorphy.v","status":"A","additions":5857,"deletions":2303},{"file":"theories/landau.v","status":"A","additions":5857,"deletions":2303},{"file":"theories/normedtype.v","status":"A","additions":5857,"deletions":2303},{"file":"theories/posnum.v","status":"A","additions":5857,"deletions":2303},{"file":"theories/prodnormedzmodule.v","status":"A","additions":5857,"deletions":2303},{"file":"theories/reals.v","status":"A","additions":5857,"deletions":2303},{"file":"theories/summability.v","status":"A","additions":5857,"deletions":2303},{"file":"theories/test_suite.v","status":"A","additions":5857,"deletions":2303},{"file":"theories/topology.v","status":"A","additions":5857,"deletions":2303}],"state":"closed","open_date":"2020-02-11T12:41:27Z","update_date":"2020-04-14T09:59:07Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"CohenCyril","committer":"CohenCyril","hash":"798823ff8a39717f539d2f99fa09ac74636e6a9d","message":"updating nix-shell to use math-comp/math-comp#270","date":"2019-10-02T12:00:18Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"c8ae19bc6bb906026d246898cca824749e8f97e7","message":"travis on nix","date":"2019-10-02T12:39:04Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"cb49a8a3963b0139956be4f00bbb057de3c2d822","message":"analysis repo on top of PR#270 of mathcomp (wip done with Kazuhiko)","date":"2019-10-02T14:33:11Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"d84a939d32b2365f35e0dd88f1c743ccdd9ac9fd","message":"rebase on top of #152","date":"2019-10-02T17:15:18Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"85cd5b63d394ccf690a7f0dc99f460a873e74850","message":"analysis repo on top of PR#270 (cont'd)","date":"2019-10-03T18:33:34Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"139583287ecff05738ab1b4c5b3a44c05b547336","message":"aiming at redefining NormedModule using order.v (wip)","date":"2019-10-07T05:51:01Z"},{"author":"pi8027","committer":"affeldt-aist","hash":"05aaad00ce593f166009824c59e0e28f49d06a5c","message":"Order type instances of {ereal R}","date":"2019-10-11T11:32:08Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"6cc4f8687a0a60b1b880431503cd9a94231411ad","message":"fixed normed module type","date":"2019-10-11T13:58:42Z"},{"author":"pi8027","committer":"affeldt-aist","hash":"fd0bf5aa590fdda4aaae4008d5c03cebf872ceae","message":"Fix packagers, remove trailing `_ : Type` from `type` records","date":"2019-10-12T07:20:39Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"02b174de80af5f72ca0c41b7977a855daeb136bf","message":"minor progress on replayin normedtype.v with order.v","date":"2019-10-12T08:20:32Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"774fa83c8ba436dbbcbe2f84e6c659424ed85261","message":"minor progress in replaying normedtype.v with PR 270","date":"2019-10-15T05:58:24Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"003417baf21010f3896a6d6d865d66e7c4dd4fc5","message":"matrix_normedModType made canonical","date":"2019-10-15T11:52:21Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"8fd2db02693e263fcf8966c3971505f2ae1e8f44","message":"add the Uniform.ball m = ball norm axiom to uniformNormedZmoduleType,\nnormedtype.v still wip","date":"2019-10-15T13:37:43Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"ced8a2778f7afb9120d9af2305f49674f55f2f94","message":"still rebasing (prod_norm done)","date":"2019-10-15T21:09:40Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"daef5ecfcc362aebe13062932c13d9e8f315ff66","message":"sakaguchi-checked (fix uniform notations, fix packagers, clean rei's\nmess, now dealing with continuous notation)","date":"2019-10-16T13:42:46Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"f62b8351b5e6180cb04d75bc55bb0ddedf009593","message":"complete the translation from the old to the new structure definitions\nbut still struggling with the inference of filters","date":"2019-10-16T14:32:18Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"063ed33cbe69c2bea70823ebc70d9110d335cc96","message":"minor generalization and global instance to make minor progress","date":"2019-10-16T20:30:50Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"31f501575194d66ad055ccc929c31a0a4c3f5a8a","message":"minor generalization to make normedModType_hausdorff go through","date":"2019-10-16T20:42:59Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"932746f39d5a8bb95c04446a499a1d92844d9b37","message":"update with last commit of PR 270","date":"2019-10-17T08:07:41Z"},{"author":"pi8027","committer":"affeldt-aist","hash":"8b9a729bb0b062d50f8b7d9de396212d57e32a5e","message":"Add test suite for joins and several fixes\n\n- NormedZModuleType -> NormedZ*m*oduleType\n- Remove prod_normedZModuleType (declared in ssrnum)\n- Add some missing joins","date":"2019-10-17T10:59:44Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"0dbf97bb97db657531614a7e7b7e2831773f1e83","message":"normedtype.v to 66% (modulo one posnum automation issue)","date":"2019-10-17T11:46:12Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"fe89c1435a04f27350385445a880e88ac0b6c503","message":"broke down the remainder of normedtype.v into Qeded and Admitted lemmas,\nminor progress otherwise","date":"2019-10-17T15:54:29Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"30855f00e5f98f2e289776c8363135d17e2afe36","message":"minor progress","date":"2019-10-17T18:54:22Z"},{"author":"pi8027","committer":"affeldt-aist","hash":"0c86f724833aa0231800193cdced52fc00bce91d","message":"Fix `[completeNormedModType K of T]` notation","date":"2019-10-17T19:25:14Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"6db5cd4939f11f98daafb2f6e4148051a1439e5e","message":"minor progress","date":"2019-10-17T19:58:54Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"b80d2323f0c0780b872b45ac5efbb6b0246f8d0d","message":"normedtype.v now uses numDomainType et al. in lieu of AbsRingType and\nmany definitions have been generalized from Redefinitions.R, there is\nstill a lot to do in terms of cleaning and some pending issues","date":"2019-10-17T21:06:54Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"4dc500d1d8541cf86c5116fabeb0c23b48295b73","message":"trying to make landau.v go through (43%)","date":"2019-10-18T07:59:47Z"},{"author":"pi8027","committer":"affeldt-aist","hash":"100ec6ab86cb7cfae4d831dcd799689b334a5104","message":"cleaning","date":"2019-10-18T08:25:29Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"ed11e344ac3c2b3daf01c543abab80e695c59fe4","message":"derive.v compiles with PR 270","date":"2019-10-18T12:24:33Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"efc1b6527b5c9eae5f668134d338a7e66e5f5016","message":"mathcomp-analysis compiles with PR 270 and derive.v does not Require\nReals anymore","date":"2019-10-18T12:31:16Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"c1c97c560f0a1af53bc6dd35207b222c265f0bfc","message":"renamed UniformNormed to Topological","date":"2019-10-18T13:10:28Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"fe613330889d049bb1cbe867904512449b22c760","message":"minor cleaning, documentation wip, remove unnecessary comments","date":"2019-10-18T14:39:47Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"bdca26243b40f71b14d789e7b9b5adbedf8c87a1","message":"generalize extended reals (in a new file ereal.v) so as to relax the\ntype in landau.v (wip)","date":"2019-10-18T18:26:39Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"9108c9779c03dcd3a98511f462110f5389bbec74","message":"IVT from Rdefinitions.R to realType, remove duplicate lemmas","date":"2019-10-18T21:24:20Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"ceba1b091e4de27d7b79fe16454f5bd66e2a3a7c","message":"replace \\-inf, \\+int with -oo, +oo, Rbar not used in\nnormedtype.v/landau.v/derive.v and other files anymore, update doc in normedtype.v,\nminor generalizations w.r.t. numDomainType's, minor renaming (Rbar ->\nereal), remove a few useless lemmas","date":"2019-10-19T15:06:53Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"529bae461e09937da953e144989626c1cd7540f0","message":"minor fixes","date":"2019-10-19T17:52:17Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"34b32161cac5a953fc85f452574837600c185145","message":"a less un-portable _CoqProject","date":"2019-10-20T11:40:18Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"198d4b2114333b1310738ec0d72e0a4f743117a1","message":"simplify bigmax lemma, remove duplicated lemmas, avoid sections with the\nsame name","date":"2019-10-20T22:20:29Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"3de5a67b304096fce729e7911fad789e0c83658e","message":"update w.r.t. last PR#270, no more Require Import Order.Syntax and\nOrder.Def, avoid Importing Num.Def (so that some minr became Num.min),\nfix the lemma ball_center (it is now a working Hint)","date":"2019-10-24T14:05:08Z"},{"author":"CohenCyril","committer":"affeldt-aist","hash":"e2824e9d177e0426efcd3e7bcb5f45eaa135c081","message":"weakening to numFieldType up to the begining of normedtype","date":"2019-10-26T09:40:04Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"d4cef0ab1f373ed8f34c9b75e4bda69c8c540b90","message":"insert \"TODO: generalize to\" comments for results that ought to be\ngeneralized","date":"2019-10-26T11:05:20Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"59f8e4e958bed7577ce9f6872ff67a4fa40fc471","message":"generalization of a few more types in normedtype.v","date":"2019-10-26T11:51:35Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"6e9a988b7d27714f13f67807291eb6d7dd54419d","message":"generalization of types in landau.v, remove Require Import Rstruct","date":"2019-10-26T11:59:12Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"47a9dccd0be3a9305bfcf979a18e6793781ff6fb","message":"easy generalizations in derive.v, removed Rstruct from derive.v","date":"2019-10-26T13:20:52Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"89919d57b6fbdafef24ba3884bc7c449f6232247","message":"generalize hausdorff type, fixes","date":"2019-11-14T13:09:13Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"60285440523f2b9f4e7eecdd61a09c95bcca4e24","message":"ler_addgt0Pr generalized by Cyril","date":"2019-11-14T13:09:21Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"0c689e8f2bc1f9866515e91e8c4bfdf3907625a7","message":"generalize ler0_addgt0P","date":"2019-11-14T13:09:21Z"},{"author":"mkerjean","committer":"affeldt-aist","hash":"ea91bc0b5e5349889f8a3660fe885bca80256aac","message":"Rename: (l|L)attice -> (d|D)istrLattice","date":"2019-11-14T13:09:21Z"},{"author":"mkerjean","committer":"affeldt-aist","hash":"0c0648e862b56e08f3500dbe5e25be94038bffbe","message":"flim_bounded.","date":"2019-11-14T13:09:21Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"b02d311178fdb3bc823312ce5fd53605efa19067","message":"generalizaton of Global Instance ereal_locally'_filter (wip)","date":"2019-11-14T13:09:21Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"dd9e63e4fc04edb5ca7b10a598d3635001752644","message":"propagate the effects of previous generalization","date":"2019-11-14T13:09:21Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"d7d3a3707d8b3fdcf9943c33317438fbc6ab0761","message":"generalization of cvg_seq_bounded (wip)","date":"2019-11-14T13:09:21Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"d702505953f8c74b2ef600038cf0a7020f452dca","message":"bring bigmaxr/bigminr lemmas from uniform-entourages branch (wip)\n\nCo-Authored-By: damien rouhling <damien.rouhling@inria.fr>","date":"2019-11-14T13:09:21Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"f77e418b58f81d9ba7aa50686b33e513abafa9d3","message":"remove last instance of old fashioned bigmaxr from normedtype.v","date":"2019-11-14T13:09:21Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"83b4f13b47ab9c704b008b1f8cc3b872bae6093c","message":"tentative definition of mx_norm using numDomainType (wip)","date":"2019-11-14T13:09:21Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"99edffe2cb7f535d68493968a54f8c9594505793","message":"avoid using the module mc_1_9","date":"2019-11-14T13:09:21Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"162dba7f539a50898c045202989fb116ffdd35ba","message":"tentative generalization of ler_mx_norm_add (wip)","date":"2019-11-14T13:09:21Z"},{"author":"mkerjean","committer":"affeldt-aist","hash":"b4fb1dceb8722053228aa26e236b3855c6f76565","message":"WIP, tentative generalization of mx_norm_eq0","date":"2019-11-14T13:09:21Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"d94179981f3b3e898d68e30d4de2f97b0c860140","message":"get rid of admits in Section mx_norm'","date":"2019-11-14T13:09:21Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"7e8a530d8046e3afac44f7944c596ecef860d3b6","message":"use generic lemmas in Section mx_norm","date":"2019-11-14T13:09:21Z"},{"author":"mkerjean","committer":"affeldt-aist","hash":"02f14039cf4d5492695ec0d00f25761ef0c86142","message":"improve mx_norm, lemmas with K-valued mx_norm","date":"2019-11-14T13:09:21Z"},{"author":"mkerjean","committer":"affeldt-aist","hash":"5f353734115dd4e128c12eaf6073dfbccd99d7fd","message":"WIP Section Matrix_NormedModule'","date":"2019-11-14T13:09:21Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"8141d45cbaf3ccd610efa1727b8002ed97b959a2","message":"mx_norm generalized to numDomainType and matrix_NormedModule generalized\nto numFieldType","date":"2019-11-14T13:09:21Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"576815ff8c7c6049c25c9398b651ed47c869cc70","message":"various generalizations from numFieldType to numDomainType in\ntopology.v","date":"2019-11-14T13:09:21Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"09d05ec7f33fa0a4b83e4b7fcd2d25f10dd188cb","message":"generalize the types in prod_NormedModule_* sections","date":"2019-11-14T13:09:21Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"de750fca4a73247a863a1b1a72d603189080e547","message":"generalize the types of le_real and lt_real, minor fixes, minor cleaning","date":"2019-11-14T13:09:21Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"812a84415638bb1ff588e2cd90761f42c2b56642","message":"add non-negative numbers to generalize the type of ProdNormedZmodule\n(this was a PR to mathcomp/experiment/order)","date":"2019-11-14T13:09:21Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"d42590e83ea3d6e130d5b8c2b4200421be04ae38","message":"got rid of the intermediate definition of mx_norm, quarantine for\nbigmaxr/bigminr","date":"2019-11-14T21:11:03Z"},{"author":"mkerjean","committer":"mkerjean","hash":"a923a9d237d749a36976568c013ffb9deaebe760","message":"Done bigOexp TODO Limit","date":"2019-11-15T15:01:01Z"},{"author":"mkerjean","committer":"mkerjean","hash":"b7f7ac27e33665b78fef5ce0906fe6ac1644f73c","message":"Limit","date":"2019-11-15T19:54:58Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"e2adf246b415853116dceec0afa2668ac2656d8a","message":"minor fix","date":"2019-11-18T14:53:15Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"59eb18904b754e749da9223cd88f27e03de9d69e","message":"minor cleaning","date":"2019-11-18T19:11:12Z"},{"author":"mkerjean","committer":"mkerjean","hash":"337cbd7d4cf4521bfeaccf35f2b3715f73fdcd97","message":"wip","date":"2019-11-18T21:53:52Z"},{"author":"mkerjean","committer":"mkerjean","hash":"6d81c9e19c253cc4d7f960ccb3877edfcf6bba51","message":"rules_of_product for numClosedField","date":"2019-11-19T11:50:54Z"},{"author":"mkerjean","committer":"mkerjean","hash":"4dc8c062d920c55d4338cc88268835a40f140b24","message":"rules_of_product for numClosedField","date":"2019-11-19T11:54:37Z"},{"author":"mkerjean","committer":"affeldt-aist","hash":"4ac60d7b96ab392940a8c4989a738138b6a92e3e","message":"clean, differential","date":"2019-11-20T10:43:07Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"3c491829fd290e6d3941bc5b1241d021cc57a546","message":"minor fix and generalizations","date":"2019-11-20T10:43:16Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"b0f22e550594518bf60263bb6458d6e373fc8fa9","message":"generalize a part of Section Differential to use numDomainType","date":"2019-11-25T17:48:00Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"b438e87a2579ac5601f96d1e4110aa3daa4973f4","message":"renaming (one occurrence of Zmodule turned into Zmod)","date":"2019-11-26T10:08:33Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"73ba2b937cf461b4c7aee25bfe012f6831f9766a","message":"use %O instead of %E for comparison operators,\nuse (_ < _)%O instead of lt_ereal in normedtype.v,\nERealOrderTheory: Variable realType generalized to realDomainType but\nthe theory is barely used","date":"2019-12-02T17:46:07Z"},{"author":"pi8027","committer":"affeldt-aist","hash":"2a98d6479fbd1499d870bc37ffd7be9b16f3723f","message":"Fix notation and scope usage and generalize ereals","date":"2019-12-03T14:47:20Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"06d73d2d3feaa7c15b1377fba59e7967304dafe1","message":"compatibility with mathcomp 1.9.0","date":"2019-12-06T14:41:42Z"},{"author":"pi8027","committer":"affeldt-aist","hash":"6b1e4bd96e813ff4834b2008d5b325240f2d09d2","message":"Fix CI","date":"2020-01-14T20:01:37Z"},{"author":"pi8027","committer":"affeldt-aist","hash":"1016d3b9de823bfc0fc31613a08084a9048deba2","message":"Revise the use of scopes\n\n- getting rid of the use of order_scope,\n- removing unnecessary `Open Scope`s, `Close Scope`s, and scope delimiters.","date":"2020-01-14T20:01:37Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"e455b7e597168ecd924f244e8916beac1aab96a3","message":"minor fixes","date":"2020-01-14T20:08:08Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"bf7f2a4423b9ef7c0f218fe8e77b3fbc56de212b","message":"minor generalization","date":"2020-01-23T10:59:23Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"e2f80681998810a4dd22caacff3e7d1ef44d813e","message":"rename Uniform -> PseudoMetric","date":"2020-01-26T13:21:57Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"1b49137d86e0c482ae23686b8594d4f068146036","message":"fix doc in header","date":"2020-02-06T12:13:11Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"a25168cf28b61dce200b090bb502bf9f3b30c123","message":"minor generalization","date":"2020-02-08T21:18:42Z"},{"author":"mkerjean","committer":"mkerjean","hash":"6def6c38afb4a5b089acfeb323518a9c70f0fcad","message":"canonical pseudometric","date":"2020-02-11T14:33:19Z"},{"author":"mkerjean","committer":"mkerjean","hash":"f109ac31da57ddca818d282a9cfb9b7baa240253","message":"wip","date":"2020-02-11T15:52:13Z"},{"author":"mkerjean","committer":"mkerjean","hash":"3d2ddab96d7a9b6c6899d141ee8bfeda256ba3cc","message":"wip","date":"2020-02-11T21:00:40Z"},{"author":"mkerjean","committer":"mkerjean","hash":"b2639e84e855dfcae783bbd9fd6b24f15516197d","message":"canonical structures on numField","date":"2020-02-14T14:40:54Z"},{"author":"mkerjean","committer":"mkerjean","hash":"be3e26b1058b9eebaf7fdbfa7cf49051094aac91","message":"canonical structures on numField^o","date":"2020-02-14T14:54:58Z"},{"author":"mkerjean","committer":"mkerjean","hash":"b5dbe947ff3c163f2028f389456aa166f53fdb74","message":"renaming cauchyetoile.v from branch integral","date":"2020-02-14T14:57:02Z"},{"author":"mkerjean","committer":"mkerjean","hash":"4c7f134b6dc197fedbd1e1f7c6ba40ec4bd576a8","message":"Taking canonical out of Rcomplex","date":"2020-02-14T15:37:22Z"}]},{"author":"pi8027","number":168,"diff_summary":[{"file":"default.nix","status":"M","additions":69,"deletions":84},{"file":"shell.nix","status":"M","additions":69,"deletions":84},{"file":"theories/Rbar.v","status":"M","additions":69,"deletions":84},{"file":"theories/altreals/realseq.v","status":"M","additions":69,"deletions":84},{"file":"theories/altreals/realsum.v","status":"M","additions":69,"deletions":84},{"file":"theories/altreals/xfinmap.v","status":"M","additions":69,"deletions":84},{"file":"theories/ereal.v","status":"M","additions":69,"deletions":84},{"file":"theories/forms.v","status":"M","additions":69,"deletions":84},{"file":"theories/landau.v","status":"M","additions":69,"deletions":84},{"file":"theories/normedtype.v","status":"M","additions":69,"deletions":84},{"file":"theories/posnum.v","status":"M","additions":69,"deletions":84},{"file":"theories/prodnormedzmodule.v","status":"M","additions":69,"deletions":84},{"file":"theories/reals.v","status":"M","additions":69,"deletions":84},{"file":"theories/topology.v","status":"M","additions":69,"deletions":84}],"state":"merged","open_date":"2020-01-10T01:42:41Z","update_date":"2020-01-14T20:01:38Z","discussion":[{"author":"pi8027","date":"2020-01-10T02:42:33Z","comment":"`real_scope` is declared and opened in several files but actually never be used. What is this?"},{"author":"affeldt-aist","date":"2020-01-10T06:57:56Z","comment":"> What is this?\r\n\r\nIt's wip ^_^. I look at that on Monday, today's hospital day :-(."},{"author":"affeldt-aist","date":"2020-01-14T08:29:49Z","comment":"> it is better to do not use `order_scope`.\r\n\r\nIt is not obvious to me why as a user I should avoid the most generic notation\r\noffered by order_scope. Since ereals have been declared as an ordered type,\r\nisn't it for them in particular to enjoy the notation?\r\n  \r\n\r\n"},{"author":"pi8027","date":"2020-01-14T09:03:48Z","comment":"@affeldt-aist\r\n```coq\r\nFrom mathcomp Require Import all_ssreflect all_algebra.\r\n\r\n(*\r\nAt least, using `order_scope` to reason about rings is a potential pitfall:\r\n*)\r\nFail Check (fun (R : numDomainType) (x : R) => 0 <= x)%O.\r\n(*\r\nThe command has indeed failed with message:\r\nIn environment\r\nR : numDomainType\r\nx : R\r\nThe term \"x\" has type \"Num.NumDomain.sort R\" while it is expected to have type \"Order.POrder.sort ?t\".\r\n*)\r\n```"},{"author":"pi8027","date":"2020-01-14T09:05:09Z","comment":"Also, I think that simultaneously opening both `order_scope` and `ring_scope` makes printing ambiguous. I will try to produce an example if needed."},{"author":"affeldt-aist","date":"2020-01-14T20:01:16Z","comment":"@CohenCyril lectured me on `*_display`'s (in particular the usage of `%R`) and on the benefit of using `%E` when explicitly dealing with ereals. "}],"review_discussion":[],"tags":[],"commits":[{"author":"pi8027","committer":"pi8027","hash":"ed503d985c7f11d3d834b6396980474f6747e16c","message":"Fix CI","date":"2020-01-10T02:28:37Z"},{"author":"pi8027","committer":"pi8027","hash":"b25736b27962f2e5c89984fe3bc5a520b0b782ef","message":"Revise the use of scopes\n\n- getting rid of the use of order_scope,\n- removing unnecessary `Open Scope`s, `Close Scope`s, and scope delimiters.","date":"2020-01-10T02:36:47Z"}]},{"author":"gitter-badger","number":167,"diff_summary":[{"file":"README.md","status":"M","additions":6,"deletions":0}],"state":"closed","open_date":"2019-12-04T13:20:40Z","update_date":"2020-04-23T16:09:45Z","discussion":[{"author":"affeldt-aist","date":"2020-04-13T13:58:02Z","comment":"What about closing this PR since the badge is already here?"}],"review_discussion":[],"tags":[],"commits":[{"author":"gitter-badger","committer":"gitter-badger","hash":"f79e213f0fc17b2a2358f86a4c60ef5fafac1cc9","message":"Add Gitter badge","date":"2019-12-04T13:20:39Z"}]},{"author":"affeldt-aist","number":166,"diff_summary":[{"file":".travis.yml","status":"M","additions":19,"deletions":15},{"file":"opam","status":"M","additions":19,"deletions":15},{"file":"theories/altreals/discrete.v","status":"M","additions":19,"deletions":15},{"file":"theories/topology.v","status":"M","additions":19,"deletions":15}],"state":"merged","open_date":"2019-12-03T20:11:30Z","update_date":"2019-12-05T11:42:38Z","discussion":[{"author":"affeldt-aist","date":"2019-12-03T22:16:15Z","comment":"I haven't figured out how to compile it also with mathcomp.1.9.0 because of L2161 of topology.v."},{"author":"affeldt-aist","date":"2019-12-04T09:22:18Z","comment":"> I haven't figured out how to compile it also with mathcomp.1.9.0 because of L2161 of topology.v.\r\n\r\nThanks @pi8027!\r\n\r\n"}],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"23f501dd2d30bbbe3381a007b8bb9ba77b666ab8","message":"compatibility with mathcomp 1.10.0","date":"2019-12-04T11:10:17Z"}]},{"author":"pi8027","number":164,"diff_summary":[{"file":"theories/Rstruct.v","status":"M","additions":114,"deletions":46},{"file":"theories/altreals/distr.v","status":"M","additions":114,"deletions":46},{"file":"theories/boolp.v","status":"M","additions":114,"deletions":46},{"file":"theories/ereal.v","status":"M","additions":114,"deletions":46},{"file":"theories/normedtype.v","status":"M","additions":114,"deletions":46},{"file":"theories/reals.v","status":"M","additions":114,"deletions":46},{"file":"theories/summability.v","status":"M","additions":114,"deletions":46},{"file":"theories/topology.v","status":"M","additions":114,"deletions":46}],"state":"merged","open_date":"2019-12-03T14:43:48Z","update_date":"2019-12-03T14:47:21Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"pi8027","committer":"pi8027","hash":"905d1df5b0a64ddc4d4e1ae64d33600d6bd71a48","message":"Fix notation and scope usage and generalize ereals","date":"2019-12-03T14:41:10Z"}]},{"author":"pi8027","number":163,"diff_summary":[{"file":"theories/Rstruct.v","status":"M","additions":115,"deletions":47},{"file":"theories/altreals/distr.v","status":"M","additions":115,"deletions":47},{"file":"theories/boolp.v","status":"M","additions":115,"deletions":47},{"file":"theories/ereal.v","status":"M","additions":115,"deletions":47},{"file":"theories/integral.v","status":"M","additions":115,"deletions":47},{"file":"theories/normedtype.v","status":"M","additions":115,"deletions":47},{"file":"theories/reals.v","status":"M","additions":115,"deletions":47},{"file":"theories/summability.v","status":"M","additions":115,"deletions":47},{"file":"theories/topology.v","status":"M","additions":115,"deletions":47}],"state":"closed","open_date":"2019-12-03T13:53:33Z","update_date":"2019-12-03T14:41:38Z","discussion":[{"author":"affeldt-aist","date":"2019-12-03T14:07:39Z","comment":"Why not PR on branch analysis_270? (analysis_270_integration is regularly rebased on anslysis_270)"},{"author":"affeldt-aist","date":"2019-12-03T14:10:26Z","comment":"Also, is it important to redefine the comparison operators in scope ereal_scope? Why not use order_scope (or %O) when one needs them?"},{"author":"pi8027","date":"2019-12-03T14:18:09Z","comment":"@affeldt-aist \r\n\r\n> Why not PR on branch analysis_270? (analysis_270_integration is regularly rebased on anslysis_270)\r\n\r\nThere are 3 branches including `270` and this was so confusing to me (I still don't understand the difference between them), but I can reopen this for `analysis_270`.\r\n\r\n> Also, is it important to redefine the comparison operators in scope ereal_scope? Why not use order_scope (or %O) when one needs them?\r\n\r\n`order_scope` defines the `0` and `1` notations which mean the bottom and top of lattices. It's better to do not use `order_scope` to reason about ereals."},{"author":"affeldt-aist","date":"2019-12-03T14:26:19Z","comment":"> There are 3 branches including `270` and this was so confusing to me (I still don't understand the difference between them), but I can reopen this for `analysis_270`.\r\n\r\nSorry about that. `analysis_270_*` are branches that build upon `analysis_270`, each working on a different aspect but the common basis is `analysis_270`. (We could at least delete `analysis_270_integral`). \r\n \r\n> > Also, is it important to redefine the comparison operators in scope ereal_scope? Why not use order_scope (or %O) when one needs them?\r\n> \r\n> `order_scope` defines the `0` and `1` notations which mean the bottom and top of lattices. It's better to do not use `order_scope` to reason about ereals.\r\n\r\nOk, I see. I was happy enough using 0%R and 1%R here and there, since so far the need for order_scope was limited.\r\n\r\n"},{"author":"pi8027","date":"2019-12-03T14:32:35Z","comment":"> Ok, I see. I was happy enough using 0%R and 1%R here and there, since so far the need for order_scope was limited.\r\n\r\nIMO, error messages produced by `(0 < x)%O` where `x : (R : numDomainType)` is difficult enough to let us lose time a lot. Those specialized notations save our time."},{"author":"affeldt-aist","date":"2019-12-03T14:38:57Z","comment":"> IMO, error messages produced by `(0 < x)%O` where `x : (R : numDomainType)` is difficult enough to let us lose time a lot. Those specialized notations save our time.\r\n\r\nOk. Otesudesuga, is it ok to PR on analysis_270?\r\n"},{"author":"pi8027","date":"2019-12-03T14:40:42Z","comment":"Yes."}],"review_discussion":[],"tags":[],"commits":[{"author":"pi8027","committer":"pi8027","hash":"596746ccfa6464b08edfe57e9c67c416e3e3824a","message":"Fix notation and scope usage and generalize ereals","date":"2019-12-03T13:51:07Z"}]},{"author":"vlj","number":162,"diff_summary":[{"file":"theories/classical_sets.v","status":"M","additions":8,"deletions":0}],"state":"merged","open_date":"2019-11-09T18:12:27Z","update_date":"2020-01-10T13:10:46Z","discussion":[],"review_discussion":[{"author":"CohenCyril","file":"theories/classical_sets.v","date":"2019-11-10T10:48:43Z","comment":"Hi! Thanks for contributing. My blind guess is `by rewrite predeqE.` would close the goal..."},{"author":"vlj","file":"theories/classical_sets.v","date":"2019-11-11T15:27:04Z","comment":"you're right, thanks for the tip !"}],"tags":[],"commits":[{"author":"vlj","committer":"vlj","hash":"4cf1747f1bafb8caeee98ffacc243be2427f12ae","message":"Add preimage_setI/U lemmas.","date":"2019-11-09T18:08:54Z"},{"author":"vlj","committer":"vlj","hash":"0445efe01a689fc722c11b6448a9a291b10b8d47","message":"Simplied the proof of preimage_lemmas.","date":"2019-11-11T14:49:04Z"}]},{"author":"pi8027","number":161,"diff_summary":[{"file":"theories/normedtype.v","status":"M","additions":23,"deletions":24}],"state":"merged","open_date":"2019-10-18T08:21:18Z","update_date":"2019-10-18T08:25:30Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"pi8027","committer":"pi8027","hash":"4cf1c21f6ed6d0f7c210be4ef3bbbe93d83ce6b8","message":"cleaning","date":"2019-10-18T08:20:16Z"}]},{"author":"pi8027","number":160,"diff_summary":[{"file":"theories/normedtype.v","status":"M","additions":3,"deletions":3}],"state":"merged","open_date":"2019-10-17T19:10:09Z","update_date":"2019-10-17T19:25:15Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"pi8027","committer":"pi8027","hash":"830f3327280bbb83532185bc349d1987c16a615c","message":"Fix `[completeNormedModType K of T]` notation","date":"2019-10-17T19:09:22Z"}]},{"author":"pi8027","number":159,"diff_summary":[{"file":"theories/normedtype.v","status":"A","additions":2027,"deletions":67},{"file":"theories/test_suite.v","status":"A","additions":2027,"deletions":67}],"state":"merged","open_date":"2019-10-16T20:56:15Z","update_date":"2019-10-17T10:59:45Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"pi8027","committer":"pi8027","hash":"942dd80e0a456cc4ec89d6aff614417215e7bd74","message":"Add test suite for joins and several fixes\n\n- NormedZModuleType -> NormedZ*m*oduleType\n- Remove prod_normedZModuleType (declared in ssrnum)\n- Add some missing joins","date":"2019-10-17T09:22:41Z"}]},{"author":"pi8027","number":158,"diff_summary":[{"file":"theories/classical_sets.v","status":"M","additions":74,"deletions":90},{"file":"theories/normedtype.v","status":"M","additions":74,"deletions":90},{"file":"theories/topology.v","status":"M","additions":74,"deletions":90}],"state":"merged","open_date":"2019-10-11T21:42:33Z","update_date":"2019-10-12T07:20:40Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"pi8027","committer":"pi8027","hash":"b26b2529b1683c426c4528d703db76e6c8ab9e61","message":"Fix packagers, remove trailing `_ : Type` from `type` records","date":"2019-10-11T21:37:46Z"}]},{"author":"pi8027","number":153,"diff_summary":[{"file":"theories/reals.v","status":"M","additions":50,"deletions":21}],"state":"merged","open_date":"2019-10-04T16:43:22Z","update_date":"2019-10-11T11:32:09Z","discussion":[{"author":"pi8027","date":"2019-10-04T16:43:49Z","comment":"Ping @affeldt-aist"}],"review_discussion":[],"tags":[],"commits":[{"author":"pi8027","committer":"pi8027","hash":"816ae5cfd511946b0dc0360f94c8abc8cd960861","message":"Order type instances of {ereal R}","date":"2019-10-04T16:40:15Z"}]},{"author":"CohenCyril","number":152,"diff_summary":[{"file":".travis.yml","status":"A","additions":84,"deletions":71},{"file":"default.nix","status":"A","additions":84,"deletions":71},{"file":"shell.nix","status":"A","additions":84,"deletions":71}],"state":"closed","open_date":"2019-10-02T12:05:46Z","update_date":"2020-04-24T23:32:51Z","discussion":[{"author":"affeldt-aist","date":"2020-04-24T22:02:15Z","comment":"This PR is maybe not useful anymore now that `mathcomp_master` has been merged into `master`?"}],"review_discussion":[],"tags":[],"commits":[{"author":"CohenCyril","committer":"CohenCyril","hash":"798823ff8a39717f539d2f99fa09ac74636e6a9d","message":"updating nix-shell to use math-comp/math-comp#270","date":"2019-10-02T12:00:18Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"c8ae19bc6bb906026d246898cca824749e8f97e7","message":"travis on nix","date":"2019-10-02T12:39:04Z"}]},{"author":"hivert","number":150,"diff_summary":[{"file":"INSTALL.md","status":"M","additions":1,"deletions":1}],"state":"closed","open_date":"2019-07-10T15:03:37Z","update_date":"2019-07-18T08:49:48Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"hivert","committer":"web-flow","hash":"29277b92e8915715160e2a6b68a1771cedf78eb2","message":"Installation procedure point to the dev version.\n\ninstalling from https://coq.inria.fr/opam/extra-dev is currently broken. See discussion on https://gitter.im/math-comp/analysis","date":"2019-07-10T15:03:21Z"}]},{"author":"affeldt-aist","number":149,"diff_summary":[{"file":".travis.yml","status":"M","additions":25,"deletions":26},{"file":"INSTALL.md","status":"M","additions":25,"deletions":26},{"file":"opam","status":"M","additions":25,"deletions":26}],"state":"merged","open_date":"2019-07-08T00:34:12Z","update_date":"2019-07-18T08:49:48Z","discussion":[{"author":"affeldt-aist","date":"2019-07-10T15:28:05Z","comment":"I updated INSTALL.md according to the opam file and following #150.\r\nI removed the suggestion to install opam using apt-get on Debian systems because it may not be up-to-date."}],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"e21aadc517c751ad86bf76f858f323b8f34223a3","message":"remove: line not necessary with opam 2;\nloosen up restriction about mathcomp's version","date":"2019-07-08T00:31:36Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"d6299f0cd33ce327271b7836a034d0f7cf184421","message":"update INSTALL.md","date":"2019-07-10T15:25:37Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"e652ce26e65827009fae4de833dbb56a9dbdc691","message":"updating travis","date":"2019-07-18T08:34:18Z"},{"author":"CohenCyril","committer":"web-flow","hash":"4a3fd6440ce8a33cf2e5ef14081c3b5d1bd00fd8","message":"update finmap","date":"2019-07-18T08:41:40Z"}]},{"author":"CohenCyril","number":148,"diff_summary":[{"file":".travis.yml","status":"M","additions":9,"deletions":5},{"file":"opam","status":"M","additions":9,"deletions":5}],"state":"closed","open_date":"2019-07-03T10:12:14Z","update_date":"2019-07-18T08:49:48Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"CohenCyril","committer":"CohenCyril","hash":"825dec057df157250eaa31bdfe4c27060485ca46","message":"updating travis","date":"2019-07-03T22:06:57Z"}]},{"author":"CohenCyril","number":147,"diff_summary":[{"file":"shell.nix","status":"M","additions":4,"deletions":3}],"state":"merged","open_date":"2019-07-02T21:47:08Z","update_date":"2019-09-17T17:32:14Z","discussion":[{"author":"amahboubi","date":"2019-07-03T07:53:41Z","comment":"What is the upgrade about?"},{"author":"CohenCyril","date":"2019-07-03T09:45:36Z","comment":"This is the equivalent of `opam upgrade` except it does so for all users. Be prepared to recompile mathcomp if we merge this."},{"author":"amahboubi","date":"2019-07-03T10:25:50Z","comment":"How do we know the nature of the upgrade (which package is upgraded, from which version to which other)?"},{"author":"CohenCyril","date":"2019-07-03T10:32:20Z","comment":"> How do we know the nature of the upgrade (from which version to which other)?\r\n\r\nI know no other way than running nix-shell and observing the computed set of packages to install. (Note that this does not uninstall the previous versions, which remain available if you change the commit back to the previous one)"},{"author":"amahboubi","date":"2019-07-03T12:02:04Z","comment":"I meant, for the present commit log, and for analysis, which version of the dependencies are supported by this new config. E.g. real-closed is now available, etc."},{"author":"CohenCyril","date":"2019-07-03T12:35:48Z","comment":"> I meant, for the present commit log, and for analysis, which version of the dependencies are supported by this new config. E.g. real-closed is now available, etc.\r\n\r\ncf https://github.com/NixOS/nixpkgs/blob/73392e79aa62e406683d6a732eb4f4101f4732be/pkgs/development/coq-modules/mathcomp/extra.nix#L46-L61"},{"author":"amahboubi","date":"2019-07-03T13:20:05Z","comment":"Could you rephrase your commit log to reflect the upgrades it allows?"},{"author":"amahboubi","date":"2019-07-03T13:25:54Z","comment":"> cf https://github.com/NixOS/nixpkgs/blob/73392e79aa62e406683d6a732eb4f4101f4732be/pkgs/development/coq-modules/mathcomp/extra.nix#L46-L61\r\n\r\nCould we have a nix upgrade documentation somewhere? E..g. what is the role of this file? Who should edit it and when?"},{"author":"CohenCyril","date":"2019-07-03T13:35:41Z","comment":"> Could we have a nix upgrade documentation somewhere? E..g. what is the role of this file? Who should edit it and when?\r\n\r\na doc on\r\n- upgrading the local nix shell (shell.nix) on analysis?\r\n- or upgrading the package definitions (mathcomp/extra.nix) on nixpkgs?"},{"author":"amahboubi","date":"2019-07-03T13:37:28Z","comment":"Both. "},{"author":"amahboubi","date":"2019-09-17T16:07:19Z","comment":"@CohenCyril , again a description would have been really helpful here, listing the **coq** packages and/or versions made available via this update. I.e. what you put in the commit log of your contribution to the nix repo.\r\nAlso, such a PR should not say un-merged that long (without a reason)."}],"review_discussion":[],"tags":[],"commits":[{"author":"CohenCyril","committer":"CohenCyril","hash":"7087c5d2185883f1b7b21401b632cb6cf6d2abd3","message":"add dependencies","date":"2019-09-17T17:03:19Z"}]},{"author":"affeldt-aist","number":146,"diff_summary":[{"file":"opam","status":"M","additions":1,"deletions":2}],"state":"merged","open_date":"2019-06-11T00:39:32Z","update_date":"2019-07-08T00:28:06Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"3042e791a6fbbbc1c01a43dbb271fc76d6815e13","message":"remove: line not necessary with opam 2","date":"2019-06-11T00:38:09Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"c99401f86d8455646c3173de4d4eef96523dfdc9","message":"loosen up restriction about mathcomp's version","date":"2019-06-11T01:37:05Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"f70f02ea2c3aa5f6d46207ea03ea1a4b5b3e2b22","message":"fix","date":"2019-06-11T06:02:03Z"}]},{"author":"affeldt-aist","number":145,"diff_summary":[{"file":"theories/landau.v","status":"M","additions":12,"deletions":12},{"file":"theories/topology.v","status":"M","additions":12,"deletions":12}],"state":"merged","open_date":"2019-06-02T09:14:52Z","update_date":"2019-06-03T11:26:36Z","discussion":[{"author":"CohenCyril","date":"2019-06-03T09:13:21Z","comment":"@affeldt-aist please rebase :)"},{"author":"affeldt-aist","date":"2019-06-03T10:00:26Z","comment":"rebase w.r.t. master"}],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"bcf425a2bedd6a6643a252ab1e5560a9803ddbd1","message":"linear better off with Section function_space since not used in landau.v","date":"2019-06-03T09:24:30Z"}]},{"author":"affeldt-aist","number":144,"diff_summary":[{"file":"NIX.md","status":"M","additions":50,"deletions":5}],"state":"merged","open_date":"2019-05-30T16:12:05Z","update_date":"2019-06-04T11:36:57Z","discussion":[],"review_discussion":[{"author":"CohenCyril","file":"NIX.md","date":"2019-06-03T07:59:30Z","comment":"I'd rather have the \"troubleshooting\" in a separate .md file."},{"author":"CohenCyril","file":"NIX.md","date":"2019-06-03T08:00:17Z","comment":"I wanted to spare the user from a temporary procedure, which would not replace a \"log out and in again\" anyway, so I'd rather remove this line."},{"author":"CohenCyril","file":"NIX.md","date":"2019-06-03T08:44:20Z","comment":"```suggestion\r\nIf set, do:\r\n> export COQBIN=$(which coqtop)\r\n```"},{"author":"CohenCyril","file":"NIX.md","date":"2019-06-03T08:46:29Z","comment":"Also, let's put it in a trouble shooting section."},{"author":"amahboubi","file":"NIX.md","date":"2019-06-03T10:03:39Z","comment":"Or may be a later section in the same file? At least for the time being, I think it's best to have nix-related stuff in a same file."},{"author":"CohenCyril","file":"NIX.md","date":"2019-06-03T11:27:28Z","comment":"ok then, @affeldt-aist  could you use a markdown hyperlink to a subsequent section in the same file?"},{"author":"affeldt-aist","file":"NIX.md","date":"2019-06-03T14:50:28Z","comment":"DONE"},{"author":"CohenCyril","file":"NIX.md","date":"2019-06-03T14:52:19Z","comment":"I'd rather drop this... and invite the user to always log out and in again."},{"author":"affeldt-aist","file":"NIX.md","date":"2019-06-03T14:52:45Z","comment":"On the other hand, the result of the previous command does invite the user to source the nix.sh file and indeed if you do so log out/log in does not seem necessary. "},{"author":"CohenCyril","file":"NIX.md","date":"2019-06-03T14:54:31Z","comment":"it is necessary everytime you change terminal, so the only permanent solution is to log out and in"},{"author":"affeldt-aist","file":"NIX.md","date":"2019-06-03T14:58:03Z","comment":"DONE"}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"731fb652e9a8c1d0f69666a790df00e753c55080","message":"test nix installation on Debian","date":"2019-05-30T16:10:20Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"39dad886e247d1dc9767ee04f3cb3decb14c9064","message":"add troubleshooting section to NIX.md, fix COQBIN with which/dirname","date":"2019-06-03T14:57:16Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"4f97ba07aca765839ab98ad9b342eb3845958a56","message":"add sourcing w.o. logging out to troubleshooting section","date":"2019-06-04T08:39:21Z"}]},{"author":"CohenCyril","number":143,"diff_summary":[{"file":"Makefile","status":"M","additions":84,"deletions":65},{"file":"Makefile.common","status":"M","additions":84,"deletions":65},{"file":"_CoqProject","status":"M","additions":84,"deletions":65},{"file":"Rbar.v","status":"M","additions":84,"deletions":65},{"file":"Rstruct.v","status":"M","additions":84,"deletions":65},{"file":"altreals/LICENSE","status":"M","additions":84,"deletions":65},{"file":"altreals/dedekind.v","status":"M","additions":84,"deletions":65},{"file":"altreals/discrete.v","status":"M","additions":84,"deletions":65},{"file":"altreals/distr.v","status":"M","additions":84,"deletions":65},{"file":"altreals/realseq.v","status":"M","additions":84,"deletions":65},{"file":"altreals/realsum.v","status":"M","additions":84,"deletions":65},{"file":"altreals/xfinmap.v","status":"M","additions":84,"deletions":65},{"file":"boolp.v","status":"M","additions":84,"deletions":65},{"file":"classical_sets.v","status":"M","additions":84,"deletions":65},{"file":"derive.v","status":"M","additions":84,"deletions":65},{"file":"forms.v","status":"M","additions":84,"deletions":65},{"file":"landau.v","status":"M","additions":84,"deletions":65},{"file":"misc/uniform_bigO.v","status":"M","additions":84,"deletions":65},{"file":"normedtype.v","status":"M","additions":84,"deletions":65},{"file":"posnum.v","status":"M","additions":84,"deletions":65},{"file":"reals.v","status":"M","additions":84,"deletions":65},{"file":"summability.v","status":"M","additions":84,"deletions":65},{"file":"topology.v","status":"M","additions":84,"deletions":65}],"state":"merged","open_date":"2019-05-29T12:02:22Z","update_date":"2019-06-03T09:12:58Z","discussion":[{"author":"CohenCyril","date":"2019-05-29T12:07:57Z","comment":"@math-comp/analysis please acknowledge"},{"author":"drouhling","date":"2019-05-29T12:11:10Z","comment":"Fine with me."},{"author":"mkerjean","date":"2019-05-29T14:02:23Z","comment":"fine with me oc"},{"author":"affeldt-aist","date":"2019-05-29T16:02:40Z","comment":"I'm ok (tested with mathcomp 1.8.0 and 1.9.0)."},{"author":"CohenCyril","date":"2019-05-30T18:58:15Z","comment":"@affeldt-aist what did you change ?"},{"author":"affeldt-aist","date":"2019-05-30T23:45:17Z","comment":"@CohenCyril I just reset a wrong commit"}],"review_discussion":[],"tags":[],"commits":[{"author":"CohenCyril","committer":"CohenCyril","hash":"b05fe91f14971278623a97b48cfe64a4d63bb2af","message":"Moving theory files to theories/ directory, and updating makefiles","date":"2019-05-29T12:03:20Z"}]},{"author":"CohenCyril","number":142,"diff_summary":[{"file":"classical_sets.v","status":"M","additions":14,"deletions":14},{"file":"derive.v","status":"M","additions":14,"deletions":14},{"file":"normedtype.v","status":"M","additions":14,"deletions":14},{"file":"topology.v","status":"M","additions":14,"deletions":14}],"state":"merged","open_date":"2019-05-23T17:55:34Z","update_date":"2019-05-23T18:20:25Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"CohenCyril","committer":"CohenCyril","hash":"2702ada8a63b69b6f37283215b8df2eb8d62b6cd","message":"compat with mathcomp 1.9.0","date":"2019-05-23T17:55:21Z"}]},{"author":"CohenCyril","number":141,"diff_summary":[{"file":"altreals/distr.v","status":"M","additions":24,"deletions":16},{"file":"boolp.v","status":"M","additions":24,"deletions":16},{"file":"normedtype.v","status":"M","additions":24,"deletions":16}],"state":"merged","open_date":"2019-05-23T17:15:24Z","update_date":"2019-05-23T17:23:41Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"CohenCyril","committer":"CohenCyril","hash":"1138cbe8e494b1dca1e797bfbf4530fd38cadf6a","message":"compatibility with mathcomp-1.9.0","date":"2019-05-23T17:12:59Z"}]},{"author":"affeldt-aist","number":139,"diff_summary":[{"file":"landau.v","status":"M","additions":48,"deletions":48},{"file":"topology.v","status":"M","additions":48,"deletions":48}],"state":"merged","open_date":"2019-05-16T02:37:23Z","update_date":"2019-05-16T14:32:57Z","discussion":[{"author":"CohenCyril","date":"2019-05-16T14:32:51Z","comment":"I am not sure this is the best place yet, but at least it is better than landau"}],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"094029b4c4caf9a6b014d83d1b4b74968201c176","message":"move structures about functions from landau.v to topology.v","date":"2019-05-16T02:34:51Z"}]},{"author":"affeldt-aist","number":137,"diff_summary":[{"file":"_CoqProject","status":"A","additions":2738,"deletions":3},{"file":"shell.nix","status":"A","additions":2738,"deletions":3},{"file":"theories/cauchyetoile.v","status":"A","additions":2738,"deletions":3},{"file":"theories/complex_holomorphy.v","status":"A","additions":2738,"deletions":3},{"file":"theories/integral.v","status":"A","additions":2738,"deletions":3},{"file":"theories/newcomplex.v","status":"A","additions":2738,"deletions":3}],"state":"closed","open_date":"2019-05-09T10:32:38Z","update_date":"2020-06-17T21:53:04Z","discussion":[{"author":"CohenCyril","date":"2019-06-03T09:17:15Z","comment":"~~TODO: move to theories/ directory~~"},{"author":"affeldt-aist","date":"2019-06-03T10:12:11Z","comment":"rebased and integral.v went to theories/"},{"author":"affeldt-aist","date":"2020-04-24T21:43:19Z","comment":"Is is ok to close this PR? ~~PR #189 ~~ PR #224 (with PR #223  )provides an updated version. "}],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"amahboubi","hash":"4f389e628acffd58c7b7785f31c0f7b25e807184","message":"integral.v draft","date":"2019-09-16T08:57:21Z"},{"author":"affeldt-aist","committer":"amahboubi","hash":"d7544fce82f5077670b21b9480e80baa7094beb5","message":"fenglishation of comments","date":"2019-09-16T08:57:21Z"},{"author":"affeldt-aist","committer":"amahboubi","hash":"488b718d21109fd807c2d055ee4ab146b67ae291","message":"tentative statement of the dominated convergence theorem","date":"2019-09-16T08:57:21Z"},{"author":"affeldt-aist","committer":"amahboubi","hash":"b5336fe7425cc5ec2a905969e581e028f9789905","message":"fixes and tentative statement of fubini-tonelli","date":"2019-09-16T08:57:21Z"},{"author":"affeldt-aist","committer":"amahboubi","hash":"df2251e5832422e0ea1d0fa5fab0bd39a756008d","message":"minor comment addressed by new master","date":"2019-09-16T08:57:21Z"},{"author":"affeldt-aist","committer":"amahboubi","hash":"ab843885e190f7dab7d626060c401ff1665dc066","message":"move integral_draft to theories","date":"2019-09-16T08:57:21Z"},{"author":"mkerjean","committer":"amahboubi","hash":"0bf0686dee5d94e9918910e379205ae992a2f091","message":"proof of Cauchy thm","date":"2019-09-16T08:57:21Z"},{"author":"mkerjean","committer":"amahboubi","hash":"1543d0a436ed1092c69b4bdf3bcfc5dec5e222dc","message":"more","date":"2019-09-16T08:57:21Z"},{"author":"mkerjean","committer":"amahboubi","hash":"f09ef11b23abb89a189ddd7adb7b30354b9909f5","message":"more","date":"2019-09-16T08:57:21Z"},{"author":"mkerjean","committer":"amahboubi","hash":"40599f02b646835287af482ffc747783a6e12583","message":"more","date":"2019-09-16T08:57:21Z"},{"author":"mkerjean","committer":"amahboubi","hash":"54835a4b1aacfdb79a73ea089d851990259759d6","message":"more","date":"2019-09-16T08:57:21Z"},{"author":"mkerjean","committer":"amahboubi","hash":"7e90816b684087e539c5698e0a7380059a1c5907","message":"more","date":"2019-09-16T08:57:21Z"},{"author":"mkerjean","committer":"amahboubi","hash":"85df9fb8645b6484dde79318d5c1b1262ffc01b0","message":"WIP","date":"2019-09-16T08:57:21Z"},{"author":"mkerjean","committer":"amahboubi","hash":"41a27d48c0b6922599456cd1bc8f794d9cf22179","message":"more","date":"2019-09-16T08:57:21Z"},{"author":"mkerjean","committer":"amahboubi","hash":"005825e8d2cb91882aed67858b03a53a7ff646b6","message":"derivx","date":"2019-09-16T08:57:21Z"},{"author":"mkerjean","committer":"amahboubi","hash":"21295f26ae9ad5c2ae9db06e16c2c5d6b9620d4d","message":"derivy","date":"2019-09-16T08:57:21Z"},{"author":"mkerjean","committer":"amahboubi","hash":"665ae5c760541096d51933da1f93c0ea5ab8d5ae","message":"WIP","date":"2019-09-16T08:57:21Z"},{"author":"mkerjean","committer":"amahboubi","hash":"5e6d1db955b80541f48f9c321bf88931fd788553","message":"WIP","date":"2019-09-16T08:57:21Z"},{"author":"mkerjean","committer":"mkerjean","hash":"23c432a026d064a1bf7a1b2db05ffcced15a22c6","message":"wip","date":"2019-09-17T14:22:02Z"},{"author":"mkerjean","committer":"mkerjean","hash":"2386b3629f9b6e771d15ed31cce5864f9b67af68","message":"wip","date":"2019-09-17T14:22:20Z"},{"author":"mkerjean","committer":"mkerjean","hash":"6c76915ff7995de19a0182bc7d725554123c1f99","message":"wip","date":"2019-09-17T14:25:37Z"},{"author":"amahboubi","committer":"amahboubi","hash":"528cdad8c40d3712ebb4a5550e8bc1bfc6af6523","message":"added dependency in real-closed for nix-shell","date":"2019-09-17T15:37:02Z"},{"author":"amahboubi","committer":"amahboubi","hash":"fd753e493eb521adb4772b5fe7d04f8167e478d1","message":"Updating Coq Project","date":"2019-09-17T15:37:02Z"},{"author":"mkerjean","committer":"mkerjean","hash":"7afb5bda1b2c93c17b46d9f236601ecc6e921328","message":"WIP complex","date":"2019-09-18T14:50:13Z"},{"author":"mkerjean","committer":"mkerjean","hash":"28c2640a8bb516dd2a111c33718d6bd1bf56eecb","message":"wip complex","date":"2019-09-18T19:16:34Z"},{"author":"mkerjean","committer":"mkerjean","hash":"a946d67fae16e4f7dd7a68b449f8a93223b12488","message":"wip complex","date":"2019-09-20T13:26:14Z"},{"author":"mkerjean","committer":"mkerjean","hash":"4e17b718da01e9821f0581c5e01262c001569fc7","message":"WIP","date":"2019-09-25T15:15:25Z"},{"author":"mkerjean","committer":"mkerjean","hash":"b9ed6d9df20b9f595bf1321faac958e19c8a9f25","message":"holo->CR","date":"2019-09-26T09:58:50Z"},{"author":"mkerjean","committer":"mkerjean","hash":"13706921afb2d1c8c22a6a1861faa9200b57b407","message":"wip","date":"2019-09-26T14:23:57Z"},{"author":"mkerjean","committer":"mkerjean","hash":"b8c9a493969e2f7a481c7ae0f1379581519e3984","message":"holo is derive","date":"2019-09-26T17:57:34Z"},{"author":"mkerjean","committer":"mkerjean","hash":"78b86ebb61f95dee55a4c6022ebc470e3da9d634","message":"more","date":"2019-09-26T19:17:55Z"},{"author":"mkerjean","committer":"mkerjean","hash":"c68b4a47d7b74a5cfaaa04ae12b2142475f344fe","message":"wip","date":"2019-10-02T17:24:49Z"},{"author":"mkerjean","committer":"mkerjean","hash":"ba7281da3f4e5dd52ed56a581fe4c48d1fe2daca","message":"wip","date":"2019-10-02T19:55:56Z"},{"author":"mkerjean","committer":"mkerjean","hash":"e4c3564abd59160e70745bc969bf3f0bdd5f5ea5","message":"wip","date":"2019-10-02T21:34:41Z"},{"author":"mkerjean","committer":"mkerjean","hash":"ed511083ddc85f4f6291453bd5840106a2672457","message":"complex detached from realclosed","date":"2019-10-04T16:52:29Z"},{"author":"mkerjean","committer":"mkerjean","hash":"3edd010fa7b101f449c6f364e0dfacb51b546496","message":"imaginaryC","date":"2019-10-04T17:19:25Z"}]},{"author":"affeldt-aist","number":136,"diff_summary":[{"file":".travis.yml","status":"A","additions":6647,"deletions":2312},{"file":"_CoqProject","status":"A","additions":6647,"deletions":2312},{"file":"default.nix","status":"A","additions":6647,"deletions":2312},{"file":"shell.nix","status":"A","additions":6647,"deletions":2312},{"file":"theories/Rbar.v","status":"A","additions":6647,"deletions":2312},{"file":"theories/Rstruct.v","status":"A","additions":6647,"deletions":2312},{"file":"theories/altreals/discrete.v","status":"A","additions":6647,"deletions":2312},{"file":"theories/altreals/distr.v","status":"A","additions":6647,"deletions":2312},{"file":"theories/altreals/realseq.v","status":"A","additions":6647,"deletions":2312},{"file":"theories/altreals/realsum.v","status":"A","additions":6647,"deletions":2312},{"file":"theories/altreals/xfinmap.v","status":"A","additions":6647,"deletions":2312},{"file":"theories/boolp.v","status":"A","additions":6647,"deletions":2312},{"file":"theories/classical_sets.v","status":"A","additions":6647,"deletions":2312},{"file":"theories/derive.v","status":"A","additions":6647,"deletions":2312},{"file":"theories/ereal.v","status":"A","additions":6647,"deletions":2312},{"file":"theories/forms.v","status":"A","additions":6647,"deletions":2312},{"file":"theories/landau.v","status":"A","additions":6647,"deletions":2312},{"file":"theories/normedtype.v","status":"A","additions":6647,"deletions":2312},{"file":"theories/posnum.v","status":"A","additions":6647,"deletions":2312},{"file":"theories/prodnormedzmodule.v","status":"A","additions":6647,"deletions":2312},{"file":"theories/reals.v","status":"A","additions":6647,"deletions":2312},{"file":"theories/sequences.v","status":"A","additions":6647,"deletions":2312},{"file":"theories/summability.v","status":"A","additions":6647,"deletions":2312},{"file":"theories/test_suite.v","status":"A","additions":6647,"deletions":2312},{"file":"theories/topology.v","status":"A","additions":6647,"deletions":2312}],"state":"closed","open_date":"2019-05-08T07:57:37Z","update_date":"2020-04-13T13:41:07Z","discussion":[],"review_discussion":[{"author":"CohenCyril","file":"sequences.v","date":"2019-05-16T12:40:26Z","comment":"remove, the proof is `exact: asboolP`"},{"author":"affeldt-aist","file":"sequences.v","date":"2019-05-16T14:50:00Z","comment":"Indeed, thanks."}],"tags":[],"commits":[{"author":"CohenCyril","committer":"CohenCyril","hash":"798823ff8a39717f539d2f99fa09ac74636e6a9d","message":"updating nix-shell to use math-comp/math-comp#270","date":"2019-10-02T12:00:18Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"c8ae19bc6bb906026d246898cca824749e8f97e7","message":"travis on nix","date":"2019-10-02T12:39:04Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"8f9b2a744d3a968666fc680cd1aded59f456b4fe","message":"rebase on top of #152; aiming at redefining NormedModule using order.v\n\nCo-Authored-By: Kazuhiko Sakaguchi <pi8027@gmail.com>","date":"2020-02-14T22:27:53Z"},{"author":"pi8027","committer":"affeldt-aist","hash":"4f0e88d534d8e8142c5296c6948bc91f69fb4aea","message":"Order type instances of {ereal R}","date":"2020-02-14T22:28:52Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"7507fa8f99dc4d245ddb8524ac2bea4a67204bb9","message":"fixed normed module type","date":"2020-02-14T22:28:52Z"},{"author":"pi8027","committer":"affeldt-aist","hash":"f13dc3f27aed7ae664aaf0cb3d990c0982ec14bc","message":"Fix packagers, remove trailing `_ : Type` from `type` records","date":"2020-02-14T22:28:52Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"862fe27cbed49634843b8ac64c0f52963f945b43","message":"progress in replaying normedtype.v with PR 270;\nmatrix_normedModType made canonical;\nadd the Uniform.ball m = ball norm axiom to uniformNormedZmoduleType,\nprod_norm done;\ncomplete the translation from the old to the new structure definitions\nbut still struggling with the inference of filters;\ngeneralization for normedModType_hausdorff:\nglobal instance declarations\n\nCo-Authored-By: Kazuhiko Sakaguchi <pi8027@gmail.com>","date":"2020-02-14T22:28:52Z"},{"author":"pi8027","committer":"affeldt-aist","hash":"c435b31429fbe2daf91167f1fc6bc52d89bf13d0","message":"Add test suite for joins and several fixes\n\n- NormedZModuleType -> NormedZ*m*oduleType\n- Remove prod_normedZModuleType (declared in ssrnum)\n- Add some missing joins","date":"2020-02-14T22:28:52Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"41d38e967f719fd8c61fe3f37f497b42fc648411","message":"normedtype.v 66% (remainder broken down into Qeded and Admitted lemmas)","date":"2020-02-14T22:28:52Z"},{"author":"pi8027","committer":"affeldt-aist","hash":"d4e2c1bc28e0bf5b1c9669f5457116a36dc86a36","message":"Fix `[completeNormedModType K of T]` notation","date":"2020-02-14T22:28:52Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"09c0a50903770bd2c87394d79945825eb2b42140","message":"normedtype.v now uses numDomainType et al. in lieu of AbsRingType and\nmany definitions have been generalized from Redefinitions.R;\nlandau.v 43%","date":"2020-02-14T22:28:52Z"},{"author":"pi8027","committer":"affeldt-aist","hash":"8f6523a681bd15ae2ea45568ab6152812d18aac4","message":"cleaning","date":"2020-02-14T22:28:52Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"1b479f827e935e09e3bbaa52b8a9c4722f6d84be","message":"mathcomp-analysis compiles with PR 270;\nderive.v does not Require Reals anymore;\nrenaming: UniformNormed -> Topological, Rbar -> ereal, \\-inf, \\+int -> -oo, +oo;\ngeneralize extended reals (in a new file ereal.v) to relax types landau.v;\ngeneralizations: IVT Rdefinitions.R -> realType; various w.r.t.\nnumDomainType's;\nRbar not used in most files anymore,\nno more Require Import Order.Syntax and Order.Def,\navoid Importing Num.Def (so that some minr became Num.min),\nfix the lemma ball_center (it is now a working Hint)","date":"2020-02-14T22:28:52Z"},{"author":"CohenCyril","committer":"affeldt-aist","hash":"00e8e0dc3452dbaa54eefd55e0012c19a4b05e61","message":"weakening to numFieldType up to the begining of normedtype","date":"2020-02-14T22:28:52Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"b06d2ee12bebba409f029c9bf355f4f937da77b9","message":"generalizations: a few more types in normedtype.v;\ntypes in landau.v, in derive.v, hausdorff type, ler0_addgt0P, ler_addgt0Pr;\nremove Rstruct (in derive.v in particular);\n\nCo-Authored-By: Cyril Cohen <cohen@crans.org>","date":"2020-02-14T22:28:52Z"},{"author":"mkerjean","committer":"affeldt-aist","hash":"61dbc16c2b1b67a21c6dadfbae94ccbf6fc66cfa","message":"Rename: (l|L)attice -> (d|D)istrLattice; flim_bounded.","date":"2020-02-14T22:28:52Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"1f1f5be8c89b27f80d3872cf7400dd7a5e40051d","message":"generalizaton of Global Instance ereal_locally'_filter,\nof cvg_seq_bounded;\npropagate the effects of previous generalizations","date":"2020-02-14T22:28:52Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"4a4419882030b0f29056014132ccac896c0cd294","message":"bring bigmaxr/bigminr lemmas from uniform-entourages branch (wip)\n\nCo-Authored-By: damien rouhling <damien.rouhling@inria.fr>","date":"2020-02-14T22:28:52Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"bff23d0593e8fd3b34550f30ddfcc3137190dce2","message":"remove last instance of old fashioned bigmaxr from normedtype.v;\ntentative definition of mx_norm using numDomainType;\navoid using the module mc_1_9;\ntentative generalization of ler_mx_norm_add","date":"2020-02-14T22:28:52Z"},{"author":"mkerjean","committer":"affeldt-aist","hash":"8b7479ff9caad39bf4dd93d554cff49992de2fc0","message":"WIP, tentative generalization of mx_norm_eq0","date":"2020-02-14T22:28:52Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"7c99af768496ac4a6be41a95d37308a77405c06b","message":"get rid of admits in Section mx_norm';\nuse generic lemmas in Section mx_norm","date":"2020-02-14T22:28:52Z"},{"author":"mkerjean","committer":"affeldt-aist","hash":"f9adf63aa6c8e665430c1bd028c8e97d47a81723","message":"improve mx_norm, lemmas with K-valued mx_norm;\nwip in Section Matrix_NormedModule'","date":"2020-02-14T22:28:52Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"1fc1989648acfc65fb9599e717d635b3b5de9d0f","message":"various generalizations: mx_norm -> numDomainType, matrix_NormedModule\n-> numFieldType, various numFieldType -> numDomainType in topology.v;\nthe types in prod_NormedModule_* sections; the types of le_real and lt_real,\nadd non-negative numbers to generalize the type of ProdNormedZmodule\ngot rid of the intermediate definition of mx_norm, quarantine for bigmaxr/bigminr","date":"2020-02-14T22:28:52Z"},{"author":"mkerjean","committer":"affeldt-aist","hash":"d02bc4ef2c71e6271c7d0335ab556a9c2cd3f9ca","message":"rules_of_product for numClosedField; work on bigO, limit, differential","date":"2020-02-14T22:28:52Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"4c4474af29c0611900eb65bdda96a922b73c5b9b","message":"renaming one occurrence of Zmodule to Zmod;\ngeneralizations: a part of Section Differential to use numDomainType,\nin ERealOrderTheory Variable realType generalized to realDomainType;\nuse %O instead of %E for comparison operators,\nuse (_ < _)%O instead of lt_ereal in normedtype.v","date":"2020-02-14T22:28:52Z"},{"author":"pi8027","committer":"affeldt-aist","hash":"414857bb2158508998a79cd355f78dc7d648bfc6","message":"Fix notation and scope usage and generalize ereals","date":"2020-02-14T22:28:52Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"17e0243799ac355d2d0e43af9fd97d3253bb010f","message":"compatibility with mathcomp 1.9.0","date":"2020-02-14T22:28:52Z"},{"author":"pi8027","committer":"affeldt-aist","hash":"eaa4a0e71d6f28af2d5960d036c2ee584153fb58","message":"Fix CI; Revise the use of scopes\n- getting rid of the use of order_scope,\n- removing unnecessary `Open Scope`s, `Close Scope`s, and scope delimiters.","date":"2020-02-14T22:28:52Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"2db45523e7bffe1feb85241911f969edd91bc1d2","message":"rename Uniform -> PseudoMetric; minor generalization and fixes","date":"2020-02-14T22:28:52Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"3085f787d0d16b08db4a151b711382de9fabe87e","message":"update w.r.t. mathcomp master (distinction latticeType /\ndistrLatticeType)","date":"2020-04-13T11:20:46Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"6c5252808f26dc9d848a06eee1b667385600a7d2","message":"a few results about sequences","date":"2020-04-13T11:26:16Z"}]},{"author":"affeldt-aist","number":135,"diff_summary":[{"file":".travis.yml","status":"M","additions":105,"deletions":98},{"file":"Rstruct.v","status":"M","additions":105,"deletions":98},{"file":"altreals/distr.v","status":"M","additions":105,"deletions":98},{"file":"altreals/realseq.v","status":"M","additions":105,"deletions":98},{"file":"altreals/realsum.v","status":"M","additions":105,"deletions":98},{"file":"classical_sets.v","status":"M","additions":105,"deletions":98},{"file":"derive.v","status":"M","additions":105,"deletions":98},{"file":"normedtype.v","status":"M","additions":105,"deletions":98},{"file":"opam","status":"M","additions":105,"deletions":98},{"file":"reals.v","status":"M","additions":105,"deletions":98},{"file":"topology.v","status":"M","additions":105,"deletions":98}],"state":"merged","open_date":"2019-04-09T07:07:06Z","update_date":"2019-04-09T17:06:23Z","discussion":[],"review_discussion":[{"author":"CohenCyril","file":"normedtype.v","date":"2019-04-09T16:15:15Z","comment":"@affeldt-aist please use ``rewrite -/(y \\in `[x, x])`` instead"},{"author":"CohenCyril","file":"derive.v","date":"2019-04-09T16:15:57Z","comment":"please use `inE/=` everywhere (no space needed)"},{"author":"affeldt-aist","file":"normedtype.v","date":"2019-04-09T17:01:02Z","comment":"I needed to be more precise (i.e., rewrite -[_ && _]/(y \\in `[x, x]))."},{"author":"affeldt-aist","file":"derive.v","date":"2019-04-09T17:01:08Z","comment":"Done."},{"author":"CohenCyril","file":"normedtype.v","date":"2019-04-09T17:04:49Z","comment":"I changed my mind and preferred explicit arguments for `in_segment_addgt0`, I will just undo your commit if you do not mind..."}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"52d426c8f2d2ba7efa6b84606dd238ca673c40ac","message":"test with mathcomp-1.8.0","date":"2019-04-09T07:05:36Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"203092683200ae27465a77bb6be7eae607dd5a47","message":"feeding the right docker image","date":"2019-04-09T16:09:07Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"81792b9ed49eb8c9579b4302ade632017de2ed09","message":"update opam","date":"2019-04-09T16:12:24Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"e1225a7a028027f2e9891a0a5999e79d07e54190","message":"some cleaning","date":"2019-04-09T16:54:43Z"}]},{"author":"drouhling","number":132,"diff_summary":[{"file":"AUTHORS.md","status":"M","additions":823,"deletions":851},{"file":"FILES.md","status":"M","additions":823,"deletions":851},{"file":"_CoqProject","status":"M","additions":823,"deletions":851},{"file":"derive.v","status":"M","additions":823,"deletions":851},{"file":"landau.v","status":"M","additions":823,"deletions":851},{"file":"misc/uniform_bigO.v","status":"M","additions":823,"deletions":851},{"file":"hierarchy.v","status":"M","additions":823,"deletions":851},{"file":"summability.v","status":"M","additions":823,"deletions":851},{"file":"topology.v","status":"M","additions":823,"deletions":851}],"state":"merged","open_date":"2019-02-22T10:05:16Z","update_date":"2019-03-19T13:40:18Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"drouhling","committer":"drouhling","hash":"8e2bf25f404173834aff87f452dafa0f0c65b92f","message":"Isolate normed structures from topological structures","date":"2019-02-22T10:00:22Z"}]},{"author":"CohenCyril","number":131,"diff_summary":[{"file":".travis.yml","status":"M","additions":64,"deletions":58},{"file":"_CoqProject","status":"M","additions":64,"deletions":58},{"file":"altreals/distr.v","status":"M","additions":64,"deletions":58},{"file":"altreals/realseq.v","status":"M","additions":64,"deletions":58},{"file":"altreals/xfinmap.v","status":"M","additions":64,"deletions":58},{"file":"derive.v","status":"M","additions":64,"deletions":58},{"file":"hierarchy.v","status":"M","additions":64,"deletions":58},{"file":"landau.v","status":"M","additions":64,"deletions":58},{"file":"opam","status":"M","additions":64,"deletions":58},{"file":"posnum.v","status":"M","additions":64,"deletions":58},{"file":"reals.v","status":"M","additions":64,"deletions":58},{"file":"topology.v","status":"M","additions":64,"deletions":58}],"state":"merged","open_date":"2019-02-10T19:06:06Z","update_date":"2019-02-10T21:01:33Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"CohenCyril","committer":"CohenCyril","hash":"188becc7b50f12ff303624aff96bc8e3b228af4a","message":"compiles with coq dev\n\n- fixing hints, scopes and wrong canonical\n- silencing duplicate clears for now\n- not fixing forms for now\n- travis update","date":"2019-02-10T19:24:28Z"}]},{"author":"CohenCyril","number":130,"diff_summary":[{"file":".travis.yml","status":"M","additions":2,"deletions":1}],"state":"merged","open_date":"2019-02-10T17:24:00Z","update_date":"2019-02-10T18:41:30Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"CohenCyril","committer":"CohenCyril","hash":"a6bae306cd92d20bdadeca4e741445e15b47ee2a","message":"putting back eval opam env","date":"2019-02-10T17:23:40Z"}]},{"author":"CohenCyril","number":129,"diff_summary":[{"file":".travis.yml","status":"M","additions":2,"deletions":2},{"file":"opam","status":"M","additions":2,"deletions":2}],"state":"closed","open_date":"2019-02-08T09:37:47Z","update_date":"2019-02-10T21:01:33Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"CohenCyril","committer":"CohenCyril","hash":"4b918513ff6762fff1fe86afe244a2838d0eda1e","message":"testing with coq dev","date":"2019-02-08T09:47:45Z"}]},{"author":"CohenCyril","number":128,"diff_summary":[{"file":".circleci/config.yml","status":"A","additions":55,"deletions":117},{"file":".travis.yml","status":"A","additions":55,"deletions":117},{"file":"opam","status":"A","additions":55,"deletions":117}],"state":"merged","open_date":"2019-02-07T19:41:20Z","update_date":"2019-02-08T09:05:16Z","discussion":[],"review_discussion":[{"author":"erikmd","file":".travis.yml","date":"2019-02-07T22:41:05Z","comment":"As the default switch in the images is 4.05.0 (without flambda), you may want to add this command here:\r\n\r\n```\r\nopam switch \\$COMPILER_EDGE\r\n```\r\n\r\n- the backslash is required as this is not an (outer) Travis CI variable, but an (inner) env. variable in the Docker image\r\n- the current value of this variable is 4.07.0+flambda"},{"author":"erikmd","file":".travis.yml","date":"2019-02-07T22:46:50Z","comment":"`eval $(opam env)` is not needed anymore:\r\n\r\n- in the beginning (thanks to the `--login` flag of `docker exec ... bash` that automatically loads OPAM variables in the shell)\r\n- nor after `opam switch \\$COMPILER_EDGE` since the `opam switch ...` command (global switch change) is self-contained in OPAM 2.0"},{"author":"erikmd","file":".travis.yml","date":"2019-02-07T22:51:16Z","comment":"you might want to move this `sudo chown` command in the `install:` part, before `opam pin add ...`, which already acts on − reads − the `/home/coq/analysis` directory (but this is not mandatory)"},{"author":"erikmd","file":".travis.yml","date":"2019-02-07T22:57:28Z","comment":"BTW as you have an `opam` committed in the repo, and you already did `opam install -y -vvv --deps-only coq-mathcomp-analysis`, you could just as well replace `make -j \"$NJOBS\"; make install` with\r\n```\r\nopam install -y -v -j \"$NJOBS\" coq-mathcomp-analysis\r\n```\r\n(but this would amount to the same in this end, so this remark is mostly a detail and YMMV…)"}],"tags":[],"commits":[{"author":"CohenCyril","committer":"CohenCyril","hash":"1b85710d11cd9703d055e517689fdd1da5987456","message":"restoring travis based on docker image","date":"2019-02-07T20:00:38Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"3593dabe1e3c0d5c0371cd00da3b221a8503759c","message":"noop","date":"2019-02-07T20:15:30Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"e3682beaa80a3634f960a4235adfc25826b503d6","message":"fixing according to @erikmd advises + restricting coq versions","date":"2019-02-08T07:45:59Z"}]},{"author":"affeldt-aist","number":127,"diff_summary":[{"file":"classical_sets.v","status":"M","additions":58,"deletions":58},{"file":"hierarchy.v","status":"M","additions":58,"deletions":58},{"file":"reals.v","status":"M","additions":58,"deletions":58},{"file":"topology.v","status":"M","additions":58,"deletions":58}],"state":"closed","open_date":"2019-01-29T00:41:53Z","update_date":"2019-02-21T10:15:24Z","discussion":[{"author":"CohenCyril","date":"2019-02-21T10:15:24Z","comment":"fixed by #131 "}],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"d3ec2ae0a17b2fb38fd3495a4870778347e1ec5c","message":"compilation with mathcomp (Mon Jan 28 commit) and coq 8.9","date":"2019-01-29T00:40:37Z"}]},{"author":"mkerjean","number":126,"diff_summary":[{"file":"_CoqProject","status":"A","additions":16,"deletions":2},{"file":"complex.v","status":"A","additions":16,"deletions":2}],"state":"closed","open_date":"2019-01-09T13:24:40Z","update_date":"2019-07-02T08:08:07Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"mkerjean","committer":"mkerjean","hash":"8d71d4c3301ab0fdd7b051bef92873ff3807053d","message":"init","date":"2018-12-21T10:54:22Z"},{"author":"mkerjean","committer":"mkerjean","hash":"6c4348fd379d7476b226176589d6e225f14eff87","message":"added hb to coqproject","date":"2018-12-21T11:15:49Z"},{"author":"mkerjean","committer":"mkerjean","hash":"37b34145a4d40666a4d017aadd9ad8649d1b8b94","message":"init, added complex","date":"2019-01-09T13:15:59Z"},{"author":"mkerjean","committer":"mkerjean","hash":"532198669a34744b37ed354cacf4edbd6b75c32c","message":"rm hb.v from branch complex","date":"2019-01-09T13:23:59Z"}]},{"author":"mkerjean","number":125,"diff_summary":[{"file":"_CoqProject","status":"A","additions":1336,"deletions":0},{"file":"hahn_banach.v","status":"A","additions":1336,"deletions":0},{"file":"hahn_banach_applications.v","status":"A","additions":1336,"deletions":0}],"state":"closed","open_date":"2018-12-21T11:09:55Z","update_date":"2020-04-14T08:34:34Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"mkerjean","committer":"amahboubi","hash":"49f7b3a857d00a9cca507d081c6c652d9a8be4bc","message":"init","date":"2019-03-06T08:47:03Z"},{"author":"mkerjean","committer":"amahboubi","hash":"729cc1956b3c6d659622482d98123539ecd5b8c8","message":"added hb to coqproject","date":"2019-03-06T08:47:28Z"},{"author":"amahboubi","committer":"amahboubi","hash":"c90ab805532d3edf0e7e5e50de89f67687c6cd33","message":"more","date":"2019-03-06T08:47:28Z"},{"author":"mkerjean","committer":"amahboubi","hash":"897b8ef4c2ada23e1c0e84de1f046d437c66e3ba","message":"added hb to coqproject","date":"2019-03-06T08:47:28Z"},{"author":"amahboubi","committer":"amahboubi","hash":"e5efe50946ed5cff7e32f5dffce7e538edc4c426","message":"more","date":"2019-03-06T08:47:28Z"},{"author":"amahboubi","committer":"amahboubi","hash":"cafe9825be7c2f89cf5381f8c2305b08ed568c71","message":"Marie's proof","date":"2019-03-06T08:47:28Z"},{"author":"amahboubi","committer":"amahboubi","hash":"c1472f52121cda175a7583fa5ab06f0e80c22dcf","message":"polish","date":"2019-03-06T09:24:01Z"},{"author":"amahboubi","committer":"amahboubi","hash":"3fb7a26b069705a885c05f8b9278db6cfb274066","message":"cleanup","date":"2019-03-06T11:38:25Z"},{"author":"amahboubi","committer":"amahboubi","hash":"35da9d4c95b20b3d754a06b6b226e09b4b6aa5ed","message":"more cleanup","date":"2019-03-06T11:45:18Z"},{"author":"amahboubi","committer":"amahboubi","hash":"8d14b283ae12c2c2c2d24b52bfa4f33ac1683383","message":"Final statement of analytic Hahn-Banach.\n\nTODO: more clean-up and taming of axioms.","date":"2019-03-06T15:59:04Z"},{"author":"amahboubi","committer":"amahboubi","hash":"cdd0b84ee612ef7d13d2c9046e879ef28f301c5a","message":"typo","date":"2019-03-06T16:00:57Z"},{"author":"amahboubi","committer":"amahboubi","hash":"1038e7885bf0b24125b42120850f3d8292712470","message":"more","date":"2019-03-06T16:03:25Z"},{"author":"mkerjean","committer":"mkerjean","hash":"cb85a4d7741a702c528f21c8ea2aa0dccd562a03","message":"linrel_add","date":"2019-03-11T15:54:29Z"},{"author":"mkerjean","committer":"mkerjean","hash":"6ef548ae969541f8a39291b93562ec6216a6e503","message":"Zorn with choice in Prop, missing details and proof of fixpoint thm","date":"2019-04-02T19:44:08Z"},{"author":"mkerjean","committer":"mkerjean","hash":"26c0025b0fbebc0c07dc9bab5471e8e90a13304d","message":"lemmas , missing cleaning and fixpoint thm","date":"2019-04-04T21:48:22Z"},{"author":"mkerjean","committer":"mkerjean","hash":"bdbece939e0359dbf16af3a2e0799aa0e6b3bf32","message":"lemmas","date":"2019-04-05T15:24:37Z"},{"author":"mkerjean","committer":"mkerjean","hash":"ee4636fc5d8606068a7c30e2a30ea63721fc95e3","message":"lemmas for fixpoint thm.","date":"2019-04-11T14:44:53Z"},{"author":"mkerjean","committer":"mkerjean","hash":"9aa76f4f20d5230a0b8057abbd25a2f9c6960b00","message":"lemma for fixpoint thm.","date":"2019-04-11T16:16:55Z"},{"author":"mkerjean","committer":"mkerjean","hash":"2c0c2d148f9f3595efc8ebde8f12c7d7a910bbe2","message":"constructive fixpoint thm - to be cleaned.","date":"2019-04-15T21:57:24Z"},{"author":"mkerjean","committer":"mkerjean","hash":"df7ccc5f682405c4dbd212a39a36a684b78ed582","message":"classical","date":"2019-04-16T09:17:16Z"},{"author":"mkerjean","committer":"mkerjean","hash":"66cf4e9d55c0f17b3bdca9896a4f9a3753b2a52e","message":"more","date":"2019-04-16T10:11:32Z"},{"author":"mkerjean","committer":"mkerjean","hash":"91f62f9862c37370ed458492037ba5359bac4613","message":"Zorn and Hahn-Banach with choice in Prop","date":"2019-04-16T20:04:24Z"},{"author":"mkerjean","committer":"mkerjean","hash":"21d846b71766b8a43472ff8c8a7ebfa5866ba6fb","message":"Diaconescu in Prop from coq.stlib","date":"2019-05-03T10:58:35Z"},{"author":"mkerjean","committer":"mkerjean","hash":"d8e81744ade543567e9e469d4f1da9569d87abdf","message":"Merge branch 'master' into hb","date":"2019-05-09T11:25:55Z"},{"author":"mkerjean","committer":"mkerjean","hash":"df874be66d322239e5962f3cc98badb9fca7ca87","message":"application to normed spaces DRAFT","date":"2019-05-23T10:10:38Z"},{"author":"mkerjean","committer":"mkerjean","hash":"515a9ef24c07e1c4709d6b2bdce579488fdd6dc2","message":"more","date":"2019-05-23T19:44:13Z"},{"author":"mkerjean","committer":"mkerjean","hash":"13023f3c6370d24ab3ce236d7adda8487d9c523f","message":"more","date":"2019-05-24T12:28:28Z"},{"author":"mkerjean","committer":"mkerjean","hash":"44b66749ff4e3e7ef4b978fb28308d1db5044e7d","message":"_Coqproject","date":"2019-05-24T13:02:16Z"},{"author":"mkerjean","committer":"mkerjean","hash":"3d012c252b2270b9be4a6cee8bdbbaa32556349b","message":"more","date":"2019-05-25T20:26:39Z"},{"author":"mkerjean","committer":"mkerjean","hash":"ec8160db19ccb88de2adf87f9d05bab37471e705","message":"continuous -> bounded - missing 2 is a Gring.unit","date":"2019-05-27T19:26:38Z"},{"author":"mkerjean","committer":"mkerjean","hash":"56580d056d6211bc8cc5d3916252e94e28651b98","message":"more","date":"2019-05-27T22:38:22Z"},{"author":"mkerjean","committer":"mkerjean","hash":"4dc7331bbc7dfa05c00b1008e87088c95b8436dc","message":"proving locally with exists","date":"2019-05-28T02:12:49Z"},{"author":"mkerjean","committer":"mkerjean","hash":"bed0d5cc907e3fc8a83dc2b7edf5bccf285f9e10","message":"more","date":"2019-05-28T11:46:21Z"},{"author":"mkerjean","committer":"mkerjean","hash":"7b08af2e37e0dd28a8f295334c1c7c12d2f9ef34","message":"convex correction","date":"2019-05-28T13:30:54Z"},{"author":"mkerjean","committer":"mkerjean","hash":"0b7779b2710add7ff2a64d82315004aa6efb1bc2","message":"convex correction","date":"2019-05-28T14:17:20Z"},{"author":"mkerjean","committer":"mkerjean","hash":"56c317fa885bd3edceec6e087cd47739fbab6a56","message":"more","date":"2019-05-28T14:18:13Z"},{"author":"mkerjean","committer":"mkerjean","hash":"3834b70486f9278edc8b707eb50a3ab57e7e4d6d","message":"more","date":"2019-05-28T16:22:35Z"},{"author":"mkerjean","committer":"mkerjean","hash":"4754b85564ffa394e6e5a3f1be906b16b642d8a9","message":"G correction","date":"2019-05-28T18:33:05Z"},{"author":"mkerjean","committer":"mkerjean","hash":"ea41bfa7ba9eaaad6e2db2994ded100b11db3189","message":"more","date":"2019-05-28T21:48:25Z"},{"author":"mkerjean","committer":"mkerjean","hash":"b0e9d47064523982692e9a047f01689cdc977dc9","message":"ok execpt linear0linear","date":"2019-05-29T21:58:26Z"},{"author":"mkerjean","committer":"mkerjean","hash":"e953910c2fbd64b1a9c2eea6afcb6d75d5c3aba0","message":"clean","date":"2019-05-30T21:48:42Z"},{"author":"mkerjean","committer":"mkerjean","hash":"3383546ad638fe910585a245a62767b2901ab8ba","message":"normed vector topology","date":"2019-06-04T19:27:54Z"},{"author":"mkerjean","committer":"mkerjean","hash":"1afad1c5b26de5c6183a744c5d9f88027258452b","message":"wip","date":"2019-06-04T20:04:58Z"},{"author":"mkerjean","committer":"mkerjean","hash":"e15d0cebaaec3ac31deeb1a77a3878c0ca9c1965","message":"end proof - to clean","date":"2019-06-04T21:34:39Z"},{"author":"mkerjean","committer":"mkerjean","hash":"58332aaaa9b171a6ddf5ad9a1b52adcdac97621f","message":"clean","date":"2019-06-05T07:32:25Z"},{"author":"amahboubi","committer":"amahboubi","hash":"c5c2cfdef78aee5b85dfc9e7ba576573afbdf0a9","message":"Linearity can be assumed only on the initial space.\n\nThanks P. Massot for the remark.","date":"2019-06-06T19:57:54Z"},{"author":"mkerjean","committer":"mkerjean","hash":"59ccfe69e3864d1242951f3aa5705a2562557629","message":"clean","date":"2019-06-09T20:51:34Z"},{"author":"mkerjean","committer":"mkerjean","hash":"5de039f522b7fbbaf9eb277bddeedc8315834335","message":"WIP induced topolgies","date":"2019-06-09T20:52:08Z"},{"author":"mkerjean","committer":"mkerjean","hash":"2e12c2d4470ab433dcb1f85502488a42954cd446","message":"WIP induced topolgies","date":"2019-06-11T12:15:39Z"},{"author":"mkerjean","committer":"mkerjean","hash":"9862294119d9d2baf4911d8aa56a120bc0092178","message":"WIP within HBnormed","date":"2019-06-12T15:22:47Z"},{"author":"mkerjean","committer":"mkerjean","hash":"c2d030630ef67264abc9db3c81338bd936e940ba","message":"WIP","date":"2019-06-12T23:28:43Z"},{"author":"mkerjean","committer":"mkerjean","hash":"bb34255ebd22adbb45511bb99890aff3fd93699b","message":"clean","date":"2019-06-13T08:18:08Z"},{"author":"mkerjean","committer":"mkerjean","hash":"f8817c9d9b92afb12f41bee6083d83073e3e9f9a","message":"clean","date":"2019-06-13T09:29:21Z"},{"author":"mkerjean","committer":"mkerjean","hash":"f05abcaeea784fcf1af35401ab2120084a39a367","message":"clean","date":"2019-06-13T09:38:20Z"},{"author":"mkerjean","committer":"mkerjean","hash":"74e10346bfaa0b5334f284ef182f70f17367c617","message":"wip","date":"2019-06-13T09:50:44Z"},{"author":"amahboubi","committer":"amahboubi","hash":"a4642a063a788d2e780c77b9d313431932677d81","message":"wip","date":"2019-06-13T10:03:59Z"},{"author":"mkerjean","committer":"mkerjean","hash":"9f92b4d8816ef09b7ef640718323825d61744dea","message":"qed","date":"2019-06-13T10:05:18Z"}]},{"author":"affeldt-aist","number":124,"diff_summary":[{"file":"classical_sets.v","status":"M","additions":27,"deletions":0}],"state":"merged","open_date":"2018-12-18T03:44:19Z","update_date":"2019-04-09T20:11:49Z","discussion":[{"author":"CohenCyril","date":"2019-02-22T16:53:52Z","comment":"Unless I am mistaken @amahboubi has a lock on this file for now. If I am right, @amahboubi can you PR your changes even if they are not complete?"}],"review_discussion":[{"author":"drouhling","file":"classical_sets.v","date":"2019-02-22T13:40:34Z","comment":"This lemma has a shorter proof.\r\n\r\nFor instance:\r\n```\r\nLemma set0P T (X : set T) : (X != set0) <-> (X !=set0).\r\nProof.\r\nsplit=> [/negP X_neq0|[t tX]]; last by apply/negP => /eqP X0; rewrite X0 in tX.\r\nby apply: contrapT => /asboolPn/forallp_asboolPn X0; apply/X_neq0/eqP/eqEsubset.\r\nQed.\r\n```"},{"author":"drouhling","file":"classical_sets.v","date":"2019-02-22T14:04:57Z","comment":"As we discussed yesterday, @amahboubi is removing the use of mathcomp's boolean `_ \\in _` notation.\r\n\r\nIf you remove those from this statement, this lemma is almost void: the `@` notation already unfolds to the left part, up to the symmetry of equality.\r\n\r\nI agree however that the `_ \\in _` notation makes the statements closer to pen-and-paper ones.\r\n\r\n@amahboubi, you are introducing a propositional `_ \\in _` notation in #117, aren't you? Is it meant to be used everywhere where membership appears?"},{"author":"drouhling","file":"classical_sets.v","date":"2019-02-22T14:09:30Z","comment":"`H` is not a very informative name. Why not `sYZ_X`?\r\n\r\n`split=> [H|H]` is the same as `split=> H`. The second `H` could be broken in two parts however in order to avoid the use of `proj1` and `proj2` on next line."},{"author":"drouhling","file":"classical_sets.v","date":"2019-02-22T14:17:42Z","comment":"The same remark about `_ \\in _` applies here.\r\n\r\nThis statement is also almost void: it just replaces the propositional or with the boolean one."},{"author":"drouhling","file":"classical_sets.v","date":"2019-02-22T14:18:31Z","comment":"`by` should go right after `Proof.`"},{"author":"drouhling","file":"classical_sets.v","date":"2019-02-22T14:18:48Z","comment":"Same here."},{"author":"amahboubi","file":"classical_sets.v","date":"2019-02-22T14:24:05Z","comment":"HI @drouhling and @affeldt-aist. Yes, @drouhling , you are right. But I have nothing against merging such lemmas while I am working: if they are used for real in the library, this provides additional benchmarks."},{"author":"affeldt-aist","file":"classical_sets.v","date":"2019-02-22T14:56:30Z","comment":"applied"},{"author":"affeldt-aist","file":"classical_sets.v","date":"2019-02-22T14:57:57Z","comment":"I was insisting on using \\in so as to get more readable statements but I will do without for a while waiting for a better \\in notation. I therefore remove the offending lemmas."},{"author":"affeldt-aist","file":"classical_sets.v","date":"2019-02-22T14:58:04Z","comment":"applied"},{"author":"affeldt-aist","file":"classical_sets.v","date":"2019-02-22T14:58:18Z","comment":"applied (see comment above about the \\in notation)"},{"author":"affeldt-aist","file":"classical_sets.v","date":"2019-02-22T14:58:25Z","comment":"applied"},{"author":"affeldt-aist","file":"classical_sets.v","date":"2019-02-22T14:58:31Z","comment":"applied"}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"2d84fe0fe0939ff47475d19d8491b3243ae28235","message":"more lemmas about classical sets","date":"2019-04-09T17:58:03Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"5b58d277f4527f2a52ec264f9b29deb21c00f4a0","message":"fix PR according to comments","date":"2019-04-09T17:58:03Z"}]},{"author":"gitter-badger","number":123,"diff_summary":[{"file":"README.md","status":"M","additions":2,"deletions":0}],"state":"merged","open_date":"2018-12-11T18:19:59Z","update_date":"2018-12-12T08:40:56Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"gitter-badger","committer":"gitter-badger","hash":"8a9ce67a63fc6bb47060e5203097e519c57c7909","message":"Add Gitter badge","date":"2018-12-11T18:19:57Z"}]},{"author":"CohenCyril","number":122,"diff_summary":[{"file":"derive.v","status":"M","additions":61,"deletions":42},{"file":"hierarchy.v","status":"M","additions":61,"deletions":42},{"file":"landau.v","status":"M","additions":61,"deletions":42}],"state":"open","open_date":"2018-12-10T17:46:47Z","update_date":"2023-02-09T07:32:07Z","discussion":[{"author":"affeldt-aist","date":"2020-07-29T10:19:53Z","comment":"What it is the status of this PR?"},{"author":"CohenCyril","date":"2020-07-29T10:31:34Z","comment":"@affeldt-aist forgotten but I think would be a great improvment"},{"author":"CohenCyril","date":"2020-07-29T10:32:10Z","comment":"Actually, I always think I merged it and often am disappointed I didn't :-("},{"author":"affeldt-aist","date":"2020-07-29T10:40:06Z","comment":"So I guess we should update the PR. Since things have changed in two years, I wonder whether it would not be better to do a new PR."}],"review_discussion":[],"tags":[],"commits":[{"author":"CohenCyril","committer":"CohenCyril","hash":"6edde6a6ce84b06f1069447ebf390cbb9f5daddd","message":"replacing strict inequality by a large one in locally_Rbar","date":"2018-12-10T17:45:42Z"}]},{"author":"CohenCyril","number":121,"diff_summary":[{"file":"topology.v","status":"M","additions":6,"deletions":4}],"state":"merged","open_date":"2018-12-10T17:45:52Z","update_date":"2019-02-08T09:36:13Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"CohenCyril","committer":"CohenCyril","hash":"56798e2d6253293883484c60f3fc09ab4c7c9dd3","message":"fixing \"near:\"\n\nwhich used to loop on nearW by replacing the \"[move]\" hack by a proper test","date":"2019-02-08T09:16:49Z"}]},{"author":"affeldt-aist","number":120,"diff_summary":[{"file":"classical_sets.v","status":"M","additions":9,"deletions":0}],"state":"merged","open_date":"2018-11-30T02:31:46Z","update_date":"2018-12-10T17:38:29Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"01eced96ab283f04df98a4c9651ebe24be31b0ef","message":"setU lemmas","date":"2018-11-30T02:22:30Z"}]},{"author":"drouhling","number":119,"diff_summary":[{"file":"classical_sets.v","status":"M","additions":1534,"deletions":1126},{"file":"derive.v","status":"M","additions":1534,"deletions":1126},{"file":"misc/uniform_bigO.v","status":"M","additions":1534,"deletions":1126},{"file":"normedtype.v","status":"M","additions":1534,"deletions":1126},{"file":"topology.v","status":"M","additions":1534,"deletions":1126}],"state":"closed","open_date":"2018-11-05T10:30:00Z","update_date":"2020-07-28T12:49:49Z","discussion":[{"author":"drouhling","date":"2019-02-22T10:34:21Z","comment":"This now depends on #132."},{"author":"drouhling","date":"2020-07-28T12:49:49Z","comment":"This is now superseded by #242."}],"review_discussion":[],"tags":[],"commits":[{"author":"drouhling","committer":"drouhling","hash":"a9fb691a6781aa6fd2213ecd653989428c490a4e","message":"Replace balls with entourages","date":"2019-02-22T10:32:04Z"},{"author":"drouhling","committer":"drouhling","hash":"19d922d0616264fa801b9db0ce42462ae80990bc","message":"Fix for coq dev","date":"2019-02-25T16:02:03Z"}]},{"author":"amahboubi","number":117,"diff_summary":[{"file":"_CoqProject","status":"A","additions":1175,"deletions":799},{"file":"theories/Rstruct.v","status":"A","additions":1175,"deletions":799},{"file":"theories/altreals/realseq.v","status":"A","additions":1175,"deletions":799},{"file":"theories/boolp.v","status":"A","additions":1175,"deletions":799},{"file":"theories/classical_preds.v","status":"A","additions":1175,"deletions":799},{"file":"theories/classical_sets.v","status":"A","additions":1175,"deletions":799},{"file":"theories/reals.v","status":"A","additions":1175,"deletions":799},{"file":"theories/topology.v","status":"A","additions":1175,"deletions":799}],"state":"open","open_date":"2018-10-26T15:02:32Z","update_date":"2022-04-21T00:26:37Z","discussion":[{"author":"amahboubi","date":"2018-10-26T21:10:44Z","comment":"@CohenCyril , @strub : Require Import from std lib or 3 axiom prelude? I vote for the first."},{"author":"amahboubi","date":"2018-10-26T21:15:23Z","comment":"@CohenCyril corollary question: if we import axioms from std lib, is it important to keep your proof script for Diaconescu or shall we use the one from ClassicalEpsilon and have only one-liners here?"},{"author":"CohenCyril","date":"2018-10-29T12:05:56Z","comment":"> Require Import from std lib or 3 axiom prelude? I vote for the first.\r\n\r\nI vote for the second, because it makes it clear which axioms we use exactly. Historically I opted for importing from stdlib, and I changed just before the Coq Workshop presentation, when I realized the previous instantiation of that I did `mclassic` did not rely on the axioms I thought I used...\r\n\r\nAdditional argument: when we switch to stdlib2, our independence from stdlib1 will be in our favor. :smile: "},{"author":"amahboubi","date":"2018-10-29T12:28:10Z","comment":"> Additional argument: when we switch to stdlib2, our independence from stdlib1 will be in our favor. smile\r\n\r\nThis is clearly not our hardest dependency on stdlib1... and I bet that one will be one of the easiest to resolve.\r\nBut can you elaborate on the problem you encountered?\r\nSide note, this WIP branch also remove `mclassic` and `mextentionality` which are mostly scars from our past experiments. "},{"author":"CohenCyril","date":"2018-10-29T12:52:03Z","comment":"@amahboubi I did not realize immediately that I depended on *proof irrelevance* rather than *diaconescu theorem + the axioms we already had.*\r\n\r\nSure, it is an easy dependency to remove indeed, but why restoring it and wait rather than keeping as few dependencies as possible? Especially since it consists in less than 20 loc anyway. We can keep a reference to the stdlib in comments.\r\n\r\nBTW, @drouhling is currently chasing the dependency in stdlib R if I am correct."},{"author":"amahboubi","date":"2018-10-29T13:14:25Z","comment":"May be for a communication issue: it is the first time I read that analysis wants to keep as few dependencies as possible on stlib1. \r\nI am not yet 100% convinced and I do not believe in references by comments. But this specific issue is rather mundane and I think it does not worth spending much energy on it. My main ultimate goal here is to recover from the massive de-synchronization, in an efficient way.\r\nI was not thinking of the dependency on R, although it is really great that Damien is addressing this. E.g. mathcomp is requiring a few libraries from stdlib1."},{"author":"CohenCyril","date":"2018-10-29T13:40:38Z","comment":"@amahboubi I did not say that analysis (as a project) wants anything. I think we should wait for the meeting to decide such strategies for this repo.\r\nI was merely giving you my motivations for my \"vote\", I am sorry if that was unclear.\r\n\r\nAnd wrt the dependency of mathcomp in stdlib1, this a distinct issue, which Maxime is already adressing."}],"review_discussion":[],"tags":[],"commits":[{"author":"amahboubi","committer":"amahboubi","hash":"b3cc7db384240f9a55a50c6fedce95eac529a3bd","message":"cleaning boolp and port up to reals","date":"2019-06-06T12:15:04Z"},{"author":"amahboubi","committer":"amahboubi","hash":"7398f28d8203eb87310d3172d09fec8a8ffb826f","message":"fixed Rstruct","date":"2019-06-06T12:38:24Z"},{"author":"amahboubi","committer":"amahboubi","hash":"241013b0e97a8db235848b2f5def98c9870218a3","message":"missing cs","date":"2019-06-07T15:30:06Z"},{"author":"amahboubi","committer":"amahboubi","hash":"445177489a2f7bff0af0b39fccb53eddedd8f5d3","message":"wip","date":"2019-10-24T07:38:22Z"}]},{"author":"strub","number":116,"diff_summary":[{"file":"_CoqProject","status":"A","additions":1222,"deletions":0},{"file":"theories/eudoxus.v","status":"A","additions":1222,"deletions":0}],"state":"open","open_date":"2018-10-17T09:33:29Z","update_date":"2023-03-15T15:06:30Z","discussion":[{"author":"affeldt-aist","date":"2021-01-27T00:42:35Z","comment":"We should maybe merge this one. @strub Do you want to squash some of the last commits which do not look informative? (\"merge remote-tracking...\", commit without commit message, \"merge branch 'master'...)"},{"author":"affeldt-aist","date":"2021-03-12T04:18:31Z","comment":"> We should maybe merge this one.\r\n\r\nSorry, I didn't realize it was not yet completed. Or are the Admitted's irrelevant?"},{"author":"affeldt-aist","date":"2022-07-03T09:32:21Z","comment":"Any progress?"}],"review_discussion":[],"tags":[{"tag":"enhancement :sparkles:","description":"This issue/PR is about adding new features enhancing the library"}],"commits":[{"author":"strub","committer":"strub","hash":"b4f975c9095b354e7f85cc30ec597fccce06f87e","message":"WIP: eudoxus reals","date":"2018-10-17T09:33:07Z"},{"author":"strub","committer":"strub","hash":"6eabce0de0f7357b266315e7e41d6aefd845c58b","message":"Def. of the eudoxus reals + zmod structure + mul def + basic properties on mul","date":"2018-10-17T16:15:28Z"},{"author":"strub","committer":"strub","hash":"a1a5f586d2ea14be203b8a7a941839faa00de941","message":"Eudoxus reals: ring structure + refactoring","date":"2018-10-18T12:35:50Z"},{"author":"strub","committer":"strub","hash":"c184a930adfeb226ca9d75364338348c793edde2","message":"_CoqProject","date":"2018-10-18T12:36:09Z"},{"author":"strub","committer":"strub","hash":"5e0684f94b0fef9002576990b2ef83ebf3fddb43","message":"NumMixin from a \"being positive\" predicate","date":"2018-10-18T19:44:27Z"},{"author":"strub","committer":"strub","hash":"f61be6687119dde837c793f381ce49f219b14e36","message":"core lemma for eudoxus reals classification wrt 0","date":"2018-10-23T17:20:03Z"},{"author":"strub","committer":"strub","hash":"57da9d76a1175fbf101859d7c86019deb0e6aef8","message":"Completed proof that eudoxus reals form an ordered num domain","date":"2018-10-23T19:53:12Z"},{"author":"strub","committer":"strub","hash":"956ed96a37da71e029cde74a954a667a9fe87a8d","message":"eudoxus reals: prove the Archimedean property","date":"2018-10-25T10:37:58Z"},{"author":"strub","committer":"strub","hash":"d85ff0d4959fcc1de4ade43c99999f1847a28f89","message":"nits","date":"2018-10-25T10:40:53Z"},{"author":"strub","committer":"strub","hash":"96c66403deb0791d0490ac2ca105381d3af48df3","message":"qzendo from qzendo on nat","date":"2018-10-25T14:01:29Z"},{"author":"strub","committer":"strub","hash":"604f8e100949dd814a21d5119be458f219ab794b","message":"Merge branch 'master' into eudoxus-reals","date":"2019-10-25T06:57:28Z"},{"author":"strub","committer":"strub","hash":"a99930294d832b8e482396b1687249c062f1338e","message":"Draft","date":"2019-10-25T07:01:23Z"},{"author":"strub","committer":"strub","hash":"f2bc26031dbc415c000d67f6b2fda4a9245fc8d0","message":"Merge remote-tracking branch 'origin/master' into eudoxus-reals","date":"2020-01-24T20:36:23Z"},{"author":"strub","committer":"strub","hash":"9d20d85f8639c7ffdd900e0d55ab63edfa7b96d2","message":"","date":"2020-11-06T18:03:19Z"},{"author":"strub","committer":"strub","hash":"d86c8725fc44d40b8486c8e25a951612c0a35e66","message":"Merge remote-tracking branch 'origin/master' into eudoxus-reals","date":"2020-11-06T18:08:03Z"},{"author":"strub","committer":"strub","hash":"de2a47b4511b11d90c00706ec6e022c337bc7eb7","message":"make things compiling again","date":"2020-11-06T19:33:36Z"},{"author":"strub","committer":"strub","hash":"3404e59b0b014544d4473d26059394b97464b81b","message":"Merge branch 'master' into eudoxus-reals","date":"2021-06-09T09:14:43Z"}]},{"author":"affeldt-aist","number":115,"diff_summary":[{"file":"hierarchy.v","status":"M","additions":178,"deletions":3}],"state":"closed","open_date":"2018-10-10T03:48:25Z","update_date":"2020-05-04T15:01:21Z","discussion":[{"author":"affeldt-aist","date":"2020-05-04T15:01:21Z","comment":"The lemmas proposed by this PR have been implemented by PR #194 that has been merged."}],"review_discussion":[{"author":"drouhling","file":"hierarchy.v","date":"2018-10-10T12:39:11Z","comment":"Here you can prove that `h \\in [seq k <- enum I | P k]` using `mem_sort` and then conclude using `mem_filter`.\r\n\r\nSo you don't need `all_sort`."},{"author":"drouhling","file":"hierarchy.v","date":"2018-10-10T12:46:11Z","comment":"Here you can prove `all (ord (head j s)) s` for `s := sort ord [seq k <- enum I | P k]` using `order_path_min` and `sort_sorted` and then conclude using `mem_sort` and `mem_filter`.\r\n\r\nSo you don't need `in_sort`, `in_sorted`, `sorted_of_nth` and `map_nth_iota_id`."},{"author":"drouhling","file":"hierarchy.v","date":"2018-10-10T12:50:01Z","comment":"Maybe `arg_maxr`, to be consistent with the `bigmaxr` lemmas and with `arg_maxord`?"},{"author":"drouhling","file":"hierarchy.v","date":"2018-10-10T12:51:17Z","comment":"Here again: `arg_maxrP`."},{"author":"drouhling","file":"hierarchy.v","date":"2018-10-10T13:02:29Z","comment":"That's a lot of code duplication w.r.t. mathcomp but you could insert here the other notations on `arg_max`.\r\n\r\nAlso, it would be nice to have everything both for `max` and `min`. Most of the work is actually done: only `arg_minr`, `arg_minrP`, `bigminr_eq_arg` and `bigminr_mem` are missing."},{"author":"drouhling","file":"hierarchy.v","date":"2018-10-10T13:05:36Z","comment":"Is there any reason not to use `sig`, as in `eq_bigmax_cond` and `eq_bigmax`?"},{"author":"CohenCyril","file":"hierarchy.v","date":"2018-10-10T14:29:52Z","comment":"Did you see this https://github.com/math-comp/math-comp/pull/201 ?"},{"author":"affeldt-aist","file":"hierarchy.v","date":"2018-10-11T06:16:14Z","comment":"No. In fact, I recycled the arg_maxr things from infotheo."}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"51b3e5ea930f9ece1c65f039c14f710e8b95d080","message":"tentative proof of a variant of bigmaxr_mem","date":"2018-10-10T03:39:29Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"768156b11e66f3d095b3cacb71fe08777cae9b16","message":"improve the formalization of argmaxr and bigmaxr lemmas following\nDamien's comments","date":"2018-10-11T06:00:43Z"}]},{"author":"affeldt-aist","number":114,"diff_summary":[{"file":"theories/Rstruct.v","status":"M","additions":45,"deletions":32}],"state":"merged","open_date":"2018-10-05T06:38:04Z","update_date":"2020-05-25T14:38:59Z","discussion":[{"author":"drouhling","date":"2018-10-08T13:26:56Z","comment":"Another experiment with `bigop` and `maxr` is in the `bigmaxr` branch."},{"author":"drouhling","date":"2018-10-09T12:01:24Z","comment":"I'll merge `bigmaxr` in `entourages`, since it is sufficient for the purpose of #112.\r\n\r\nHowever it would be nice to extend it with something similar to `bigmaxr_mem` (replacing `head r s` with any default value `x` smaller than all the elements of the family), maybe reusing parts of your work. But this should not be in `Rstruct.v`, since this has nothing to do with `R`."},{"author":"affeldt-aist","date":"2020-05-04T19:51:39Z","comment":"A replacement for `bigmaxr_mem` (as mentioned by @drouhling ) has already been merged into `master` (in `normedtype.v`). The commit of this PR is about `Rstruct.v`, at a time when we were still relying on it. We can forget about it. We can also merge it to keep `Rstruct.v` as up-to-date as possible (I know at least one project that is using `Rstruct.v` through mathcomp-analysis)."}],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"05201af6a828fb08393fc7459fe484f394e1f012","message":"tentative definition of bigmaxr with bigop","date":"2020-05-04T19:39:52Z"}]},{"author":"anton-trunov","number":113,"diff_summary":[{"file":"opam","status":"M","additions":1,"deletions":0}],"state":"merged","open_date":"2018-10-03T10:15:08Z","update_date":"2018-10-03T11:41:56Z","discussion":[{"author":"strub","date":"2018-10-03T11:20:07Z","comment":"`git+https` is a valid scheme ? Because `git` is bugging on it."},{"author":"anton-trunov","date":"2018-10-03T11:28:09Z","comment":"@strub Oh, shoot, you are right! I copied it from here: https://github.com/coq/opam-coq-archive/blob/30ca50d426ab4e54a5c496774483eb58debb1b7e/extra-dev/packages/coq-mathcomp-multinomials/coq-mathcomp-multinomials.dev/opam#L5"},{"author":"anton-trunov","date":"2018-10-03T11:29:36Z","comment":"And Coq does not have this `git+` prefix: https://github.com/coq/coq/blob/016f4a302090bcbb4ad47197dda2c60d6f598f6a/coq.opam#L6\r\n\r\nSorry for the noise and let me quickly force-push a correction."},{"author":"strub","date":"2018-10-03T11:41:47Z","comment":"That's unfair to point my own mistakes :)"},{"author":"anton-trunov","date":"2018-10-03T11:43:43Z","comment":"Thanks for merging! I'm gonna go and fix the packages in the coq-opam archive :)"}],"review_discussion":[],"tags":[],"commits":[{"author":"anton-trunov","committer":"anton-trunov","hash":"ab1f5a125da5e6c19d69f096503d9d57a01e5a9f","message":"[opam]: add dev-repo","date":"2018-10-03T11:30:36Z"}]},{"author":"drouhling","number":112,"diff_summary":[{"file":"_CoqProject","status":"A","additions":2439,"deletions":2100},{"file":"altreals/distr.v","status":"A","additions":2439,"deletions":2100},{"file":"altreals/realseq.v","status":"A","additions":2439,"deletions":2100},{"file":"altreals/realsum.v","status":"A","additions":2439,"deletions":2100},{"file":"classical_sets.v","status":"A","additions":2439,"deletions":2100},{"file":"derive.v","status":"A","additions":2439,"deletions":2100},{"file":"hierarchy.v","status":"A","additions":2439,"deletions":2100},{"file":"landau.v","status":"A","additions":2439,"deletions":2100},{"file":"misc/Rcompatibility.v","status":"A","additions":2439,"deletions":2100},{"file":"Rstruct.v","status":"A","additions":2439,"deletions":2100},{"file":"misc/uniform_bigO.v","status":"A","additions":2439,"deletions":2100},{"file":"posnum.v","status":"A","additions":2439,"deletions":2100},{"file":"reals.v","status":"A","additions":2439,"deletions":2100},{"file":"summability.v","status":"A","additions":2439,"deletions":2100},{"file":"topology.v","status":"A","additions":2439,"deletions":2100}],"state":"closed","open_date":"2018-10-03T08:50:20Z","update_date":"2020-08-08T11:00:22Z","discussion":[{"author":"affeldt-aist","date":"2018-10-05T06:35:19Z","comment":"A theory of bigrmax is definitely needed (e.g., https://github.com/affeldt-aist/infotheo/blob/master/Rbigop.v). (Warning: that's old code.)"},{"author":"drouhling","date":"2018-10-31T08:45:44Z","comment":"Summary of a discussion with @CohenCyril:\r\n- I'll split this PR in two parts: one introducing the use of entourages and the other removing the dependency on standard R.\r\n- the compilation issue in `derive.v` seems to be related to unification and should be fixed once #118 is resolved.\r\n- some lemmas in the `Bigmaxr` section can be generalised and might belong to mathcomp.\r\n- once the PRs are merged, a `Rmodels` directory should be created and should contain `Rstruct.v`, `exodus.v` from #116 and maybe one day the model of reals using rational Cauchy filters we discussed while preparing our submission to the Coq workshop."},{"author":"CohenCyril","date":"2020-08-07T15:00:33Z","comment":"@drouhling I think this issue was completely solved after the merge of #246, am I right?"},{"author":"drouhling","date":"2020-08-08T11:00:21Z","comment":"> @drouhling I think this issue was completely solved after the merge of #246, am I right?\r\n\r\nIndeed, this PR had no purpose any more."}],"review_discussion":[{"author":"CohenCyril","file":"classical_sets.v","date":"2018-10-30T12:14:16Z","comment":"Having a pointed type structure over something that is stable by product (and matrix) introduces a risk of inconsistency of the `point` operator. Indeed there would be two ways of getting it: as a pointed type of a product of as the product of two pointed type.\r\nIt would be ok to start with a `realField` (or `realDomain`? even though unnecessary), because the product of two `realDomain`s cannot be a `realDomain` again."}],"tags":[],"commits":[{"author":"drouhling","committer":"drouhling","hash":"3f961407936f02cf6b9cce99ac49a6f59d5b0527","message":"Remove ball and absRingType","date":"2018-10-03T07:14:00Z"},{"author":"drouhling","committer":"drouhling","hash":"334a32b5a8770bbba5a10e75ad396da8d5e874af","message":"Shorten proofs","date":"2018-10-03T07:14:00Z"},{"author":"drouhling","committer":"drouhling","hash":"22d8bac9448597d9ac954138ee3ec2ccd684e557","message":"Use {ereal R} in hierarchy","date":"2018-10-03T12:42:26Z"},{"author":"drouhling","committer":"drouhling","hash":"dc99671d4d898cf766e7dbca7d4948def17bb6ed","message":"Reintroduce lemmas about R that were commented out\n+ translate compatibility lemmas about derivative from Coquelicot","date":"2018-10-04T11:53:44Z"},{"author":"drouhling","committer":"drouhling","hash":"b644833418ef36d63354c44111b5f62cb521a61f","message":"Add and use a theory of max using bigop","date":"2018-10-08T13:24:22Z"},{"author":"drouhling","committer":"drouhling","hash":"893bf8856e482939cb3f049af2fdbd0d8ab1666a","message":"Add min using bigop and simplify proofs","date":"2018-10-09T08:50:53Z"},{"author":"drouhling","committer":"drouhling","hash":"a1834b287f26bc4fd14c278666642563d8867f22","message":"Move and extend Rstruct.v","date":"2018-10-09T13:50:27Z"},{"author":"drouhling","committer":"drouhling","hash":"cb4ca5f5cffea73ad67420778fe498239006e885","message":"Clean up","date":"2018-10-10T08:35:22Z"},{"author":"drouhling","committer":"drouhling","hash":"091772f83078d850bd993f6f281ebced0816f728","message":"More clean up","date":"2018-10-12T08:08:33Z"},{"author":"drouhling","committer":"drouhling","hash":"3aaf321b7b885c26824db1444ce1fe07a18b121a","message":"Rework documentation and mark missing lemmas","date":"2018-10-12T11:58:18Z"},{"author":"drouhling","committer":"drouhling","hash":"909029df85097c95307922976f6aba213ae6f397","message":"Reintroduce missing lemmas + more clean up","date":"2018-10-12T14:18:55Z"}]},{"author":"affeldt-aist","number":111,"diff_summary":[{"file":"classical_sets.v","status":"M","additions":151,"deletions":130},{"file":"derive.v","status":"M","additions":151,"deletions":130},{"file":"forms.v","status":"M","additions":151,"deletions":130},{"file":"landau.v","status":"M","additions":151,"deletions":130},{"file":"posnum.v","status":"M","additions":151,"deletions":130},{"file":"topology.v","status":"M","additions":151,"deletions":130}],"state":"merged","open_date":"2018-10-03T08:43:54Z","update_date":"2018-12-10T17:38:12Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"3b234bae69e3b0bd35275012a408258fc55f3e2c","message":"factor out formats and levels for notations\nfixes #23","date":"2018-10-03T08:26:55Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"f6ce54bdbfb6bdae99746dd357f64c910bff0fc2","message":"move most \"format\" and \"at level\" notations on top of files","date":"2018-10-04T05:32:41Z"}]},{"author":"affeldt-aist","number":108,"diff_summary":[{"file":"derive.v","status":"M","additions":202,"deletions":148}],"state":"merged","open_date":"2018-10-02T14:04:12Z","update_date":"2018-10-02T16:48:42Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"95ae8be0b171ff81de342fb6c4878377ca8a2ca5","message":"addresses issue #34 and one part of issue #68\ncomes as a replacement for PR #80 (whose merge/rebase I am afraid is\nlikely to mess up git log)","date":"2018-10-02T13:59:16Z"}]},{"author":"CohenCyril","number":107,"diff_summary":[{"file":"derive.v","status":"M","additions":109,"deletions":83},{"file":"landau.v","status":"M","additions":109,"deletions":83}],"state":"merged","open_date":"2018-09-28T23:15:23Z","update_date":"2018-10-01T09:31:42Z","discussion":[{"author":"CohenCyril","date":"2018-09-28T23:35:56Z","comment":"@drouhling and @affeldt-aist I changed my mind again, I'd like to keep `littleo` and `bigO` for the spec lemmas as in this commit. Indeed it is a shame to \"reserve\" such short and explicit names just for local definition... What do you think?"},{"author":"CohenCyril","date":"2018-10-01T07:29:08Z","comment":"> The result depends on how the goal is parsed, since the first occurrence is matched, and the proof script is harder to read in my opinion.\r\n\r\nI agree, but it is generally the case with spec lemmas (`leqP`, `ltngtP`, `altP eqP`, ...) we only add arguments when there is an ambiguity. Here in most (all?) cases, there are exactly as many bigOs as there are `have :=` and hence I am fine with it."},{"author":"drouhling","date":"2018-10-01T07:59:47Z","comment":"> > The result depends on how the goal is parsed, since the first occurrence is matched, and the proof script is harder to read in my opinion.\r\n> \r\n> I agree, but it is generally the case with spec lemmas (`leqP`, `ltngtP`, `altP eqP`, ...) we only add arguments when there is an ambiguity. Here in most (all?) cases, there are exactly as many bigOs as there are `have :=` and hence I am fine with it.\r\n\r\nI'm also fine with it, then.\r\n\r\nYou should rebase on master: there is a conflict between `Let littleo ...` from master and `Lemma littleo ...` from this branch."}],"review_discussion":[],"tags":[],"commits":[{"author":"CohenCyril","committer":"CohenCyril","hash":"7e340ea78b6f45248886881c357626ca2a874bfe","message":"\"Spec theorems\" for littleo, bigO, bigOmega and bigTheta","date":"2018-10-01T08:58:14Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"d317a90cd38eb8fbddb43845049ed9d70d028895","message":"same proof script as in the paper","date":"2018-10-01T08:58:14Z"}]},{"author":"drouhling","number":106,"diff_summary":[{"file":"derive.v","status":"M","additions":82,"deletions":75},{"file":"hierarchy.v","status":"M","additions":82,"deletions":75},{"file":"landau.v","status":"M","additions":82,"deletions":75}],"state":"merged","open_date":"2018-09-27T12:25:15Z","update_date":"2018-09-27T15:23:08Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"drouhling","committer":"drouhling","hash":"11289ac4046ef7884e34ffb7c18df6a99cca44f5","message":"Replace inequality with equality in absrM and normmZ","date":"2018-09-27T12:21:37Z"}]},{"author":"strub","number":105,"diff_summary":[{"file":"opam","status":"M","additions":2,"deletions":0}],"state":"merged","open_date":"2018-09-26T10:30:25Z","update_date":"2018-09-26T10:40:15Z","discussion":[{"author":"strub","date":"2018-09-26T10:55:54Z","comment":"Maybe waiting the CI to complete before merging is a good baseline :)"},{"author":"CohenCyril","date":"2018-09-26T10:57:29Z","comment":"> Maybe waiting the CI to complete before merging is a good baseline :)\r\n\r\nI did..."},{"author":"strub","date":"2018-09-26T10:59:17Z","comment":"I had a mail telling me that the CI failed on my side... I won't try to understand."},{"author":"CohenCyril","date":"2018-09-26T11:02:49Z","comment":"Commit 5480a961218a4a4868bbf37d21257c44e85a972b was a success: https://circleci.com/gh/math-comp/analysis/358\r\n\r\nCommit b1c8355fe0d1ee04f170264a41bbd7c6c745d66c was not: https://circleci.com/gh/math-comp/analysis/357, but I do not understand what this commit refers to..."}],"review_discussion":[],"tags":[],"commits":[{"author":"strub","committer":"strub","hash":"5480a961218a4a4868bbf37d21257c44e85a972b","message":"`opam` file is now compatible with opam2 sandboxing.","date":"2018-09-26T10:28:30Z"}]},{"author":"drouhling","number":101,"diff_summary":[{"file":"derive.v","status":"M","additions":128,"deletions":159},{"file":"landau.v","status":"M","additions":128,"deletions":159},{"file":"topology.v","status":"M","additions":128,"deletions":159}],"state":"merged","open_date":"2018-09-13T11:49:13Z","update_date":"2018-09-14T07:12:30Z","discussion":[{"author":"CohenCyril","date":"2018-09-13T14:15:09Z","comment":"> There is something I don't truly understand: I had to add occurrences of `is_true` in the definitions of `littleo`, `bigO`, etc, in order for the hints related to `littleoP`, `bigOP`, etc, to work\r\n\r\nIn the hint patterns, it is mandatory to explicitly add `is_true` at the head, because since any term can be provided, the system has no way to know it should be coerced to `Prop`. For the uses I made comments about, I do not understand the reason..."},{"author":"drouhling","date":"2018-09-13T14:31:22Z","comment":"Notations are local to sections, so the `Local` keyword is not mandatory here. I can still add it for safety."},{"author":"CohenCyril","date":"2018-09-13T14:32:50Z","comment":"> Notations are local to sections, so the `Local` keyword is not mandatory here. I can still add it for safety.\r\n\r\nsure :)"},{"author":"drouhling","date":"2018-09-13T14:36:03Z","comment":"> In the hint patterns, it is mandatory to explicitly add `is_true` at the head, because since any term can be provided, the system has no way to know it should be coerced to `Prop`. For the uses I made comments about, I do not understand the reason...\r\n\r\nI put those `is_true` because otherwise the hints inside the sections, which use the notations as in\r\n```Hint Extern 0 (bigOmega _ _ _) => solve[apply: bigOmegaP] : core.```\r\nwon't work.\r\n\r\n"}],"review_discussion":[{"author":"CohenCyril","file":"landau.v","date":"2018-09-13T14:05:05Z","comment":"`Local` notation please"},{"author":"CohenCyril","file":"landau.v","date":"2018-09-13T14:05:23Z","comment":"`Local`"},{"author":"CohenCyril","file":"landau.v","date":"2018-09-13T14:05:28Z","comment":"`Local`"},{"author":"CohenCyril","file":"landau.v","date":"2018-09-13T14:06:46Z","comment":"`apply: bigOP`"},{"author":"CohenCyril","file":"landau.v","date":"2018-09-13T14:07:47Z","comment":"rename `bigO_ex_def` please"},{"author":"CohenCyril","file":"landau.v","date":"2018-09-13T14:08:03Z","comment":"Name `littlleo_def`"},{"author":"CohenCyril","file":"landau.v","date":"2018-09-13T14:08:12Z","comment":"`bigO_def`"},{"author":"CohenCyril","file":"landau.v","date":"2018-09-13T14:10:29Z","comment":"And `Lemma bigO_ex (F : set (set T)) (g : T -> W) (f : {O_F g}) : bigO_ex_def F f g.` is missing, right?"},{"author":"CohenCyril","file":"landau.v","date":"2018-09-13T14:10:56Z","comment":"Why an explicit `is_true`?"},{"author":"CohenCyril","file":"landau.v","date":"2018-09-13T14:11:11Z","comment":"Why explicit `is_true`?"}],"tags":[],"commits":[{"author":"drouhling","committer":"drouhling","hash":"66b12517f5e272eb5600415a04389a666f0cc2a6","message":"Remove bigOW + use bigOFI for hypotheses","date":"2018-09-13T11:34:45Z"},{"author":"drouhling","committer":"drouhling","hash":"d8aea9d27bbd31bd8d66ebcac0ead9f42510d993","message":"Put littleo/bigO/bigOmega/bigTheta as notations","date":"2018-09-13T11:34:45Z"},{"author":"drouhling","committer":"drouhling","hash":"5f9669403820f977660ceb0f170781a25b476712","message":"Renaming","date":"2018-09-14T06:28:14Z"}]},{"author":"drouhling","number":100,"diff_summary":[{"file":"hierarchy.v","status":"M","additions":4,"deletions":5}],"state":"merged","open_date":"2018-09-12T12:36:27Z","update_date":"2018-09-12T13:14:13Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"drouhling","committer":"drouhling","hash":"c2d125cae1936ba1d49b5600f1ddc4708b483c15","message":"Use entourages to prove the equivalence between different definitions of cauchy","date":"2018-09-12T12:08:06Z"}]},{"author":"affeldt-aist","number":99,"diff_summary":[{"file":"Rbar.v","status":"M","additions":15,"deletions":12},{"file":"Rstruct.v","status":"M","additions":15,"deletions":12}],"state":"merged","open_date":"2018-09-12T07:04:13Z","update_date":"2018-09-12T09:26:22Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"f4b2f961a10c82e8fd5a4c718e59bcd1608d0320","message":"just to get rid of warnings from Rstruct and Rbar","date":"2018-09-12T00:25:03Z"}]},{"author":"drouhling","number":98,"diff_summary":[{"file":"misc/uniform_bigO.v","status":"A","additions":121,"deletions":0},{"file":"topology.v","status":"A","additions":121,"deletions":0}],"state":"merged","open_date":"2018-09-10T13:17:09Z","update_date":"2018-09-11T11:29:40Z","discussion":[{"author":"drouhling","date":"2018-09-10T14:19:27Z","comment":"Indeed. I thought this was rather the purpose of #90 but since this example file is not compiled with make there is a chance we forget about it.\r\n\r\nI'll move these pieces of code and let you resolve the conflicts with #90 :-)"},{"author":"CohenCyril","date":"2018-09-10T14:38:50Z","comment":"Also I rather would name the directory `misc` and the file `uniform_bigO`."}],"review_discussion":[{"author":"CohenCyril","file":"examples/misc.v","date":"2018-09-10T13:56:31Z","comment":"This looks like it should be backported to `topology.v`"},{"author":"CohenCyril","file":"examples/misc.v","date":"2018-09-10T13:56:38Z","comment":"same here"},{"author":"CohenCyril","file":"examples/misc.v","date":"2018-09-10T13:56:48Z","comment":"same here"}],"tags":[],"commits":[{"author":"drouhling","committer":"drouhling","hash":"40eb395b81d788485ac34cd2dab2c4357a70f3df","message":"Add uniform bigO from ANR FOST as an example","date":"2018-09-10T13:14:22Z"},{"author":"drouhling","committer":"drouhling","hash":"ea8cb0a9111f948e65b5d7cc6de1a84b5f72bf33","message":"Move filter_on instances to topology.v","date":"2018-09-10T14:26:14Z"},{"author":"drouhling","committer":"drouhling","hash":"297a536db848fa4087043bb3932d17a44ee10096","message":"Rename example file/directory","date":"2018-09-10T14:50:57Z"}]},{"author":"affeldt-aist","number":96,"diff_summary":[{"file":".circleci/config.yml","status":"M","additions":15,"deletions":14},{"file":"INSTALL.md","status":"M","additions":15,"deletions":14},{"file":"opam","status":"M","additions":15,"deletions":14}],"state":"merged","open_date":"2018-09-03T13:41:26Z","update_date":"2018-09-12T09:27:59Z","discussion":[],"review_discussion":[{"author":"CohenCyril","file":"opam","date":"2018-09-03T15:28:42Z","comment":"If we really do not depend on real-closed but jsut big-enough, then this could theoretically be replaced too..."},{"author":"affeldt-aist","file":"opam","date":"2018-09-12T07:01:06Z","comment":"The commit 7fe9511 of branch issue_94 does not mention real-closed anymore."}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"a6e84f32a6e9192164d804f3810ace5d79bdf34e","message":"update INSTALL.md to reflect the version changes of\nsome of the libraries used in mathcomp-analysis","date":"2018-09-03T13:36:17Z"},{"author":"strub","committer":"strub","hash":"0a9c25d90d7880af4aa43f7ecee9ade9101a1efd","message":"Fix `opam` configuration files regarding finmap version","date":"2018-09-03T13:52:33Z"},{"author":"strub","committer":"strub","hash":"63489973a60ec57ba8fad51870548ae1e2d90b9f","message":"lower deps (opam)","date":"2018-09-06T08:34:57Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"3e3a911eac88e6ad42a91805e834112d8d8ad186","message":"removed references to real-closed in config.yml","date":"2018-09-12T05:11:57Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"7fe9511b7c175ab0071ca695e08d462f129b6304","message":"forget bigenough in config.yml","date":"2018-09-12T06:08:43Z"}]},{"author":"drouhling","number":93,"diff_summary":[{"file":".circleci/config.yml","status":"M","additions":26,"deletions":28},{"file":"INSTALL.md","status":"M","additions":26,"deletions":28},{"file":"altreals/realsum.v","status":"M","additions":26,"deletions":28},{"file":"altreals/xfinmap.v","status":"M","additions":26,"deletions":28},{"file":"hierarchy.v","status":"M","additions":26,"deletions":28},{"file":"opam","status":"M","additions":26,"deletions":28}],"state":"merged","open_date":"2018-08-20T09:22:41Z","update_date":"2018-09-12T13:12:12Z","discussion":[{"author":"strub","date":"2018-09-06T09:39:15Z","comment":"Which version of finmap this PR is targeting?"},{"author":"drouhling","date":"2018-09-06T12:40:18Z","comment":"This was done with the dev version but since it also works with v1.1.0 we might as well lower the deps as in #96."}],"review_discussion":[{"author":"CohenCyril","file":"altreals/realsum.v","date":"2018-09-12T09:29:41Z","comment":"I am a bit suspicious about this, why would there be an explicit key here?"},{"author":"CohenCyril","file":"hierarchy.v","date":"2018-09-12T09:30:28Z","comment":"Is the `%fset` scope annotation mandatory? If so, would do you know why?"},{"author":"drouhling","file":"altreals/realsum.v","date":"2018-09-12T11:18:03Z","comment":"I tried to follow the original proof: the replacement for `seq_fsetE` is `in_fset` but rewriting `in_fset` from right to left means providing a key. I'm reworking the proof to remove the key."},{"author":"drouhling","file":"hierarchy.v","date":"2018-09-12T11:21:20Z","comment":"The `fset_scope` is not open in this file, since there are conflicts with the `classical_set` notations."}],"tags":[],"commits":[{"author":"drouhling","committer":"drouhling","hash":"a4869bf163aff252028e70a049e488b567cab612","message":"Switch to finmap v1.1.0","date":"2018-09-12T11:50:01Z"}]},{"author":"drouhling","number":92,"diff_summary":[{"file":".circleci/config.yml","status":"M","additions":101,"deletions":84},{"file":"derive.v","status":"M","additions":101,"deletions":84},{"file":"hierarchy.v","status":"M","additions":101,"deletions":84},{"file":"landau.v","status":"M","additions":101,"deletions":84},{"file":"topology.v","status":"M","additions":101,"deletions":84}],"state":"merged","open_date":"2018-08-17T14:28:22Z","update_date":"2018-08-21T05:57:57Z","discussion":[{"author":"CohenCyril","date":"2018-08-17T15:09:17Z","comment":"Thanks @drouhling. The right fix for finmap would be to depend on the released version 1.0.0, the dev version is now aligned with 1.1.0 which deprecated `seq_fset` in favour of `[fset x in s]`. Could you please split your pr in two? (One that depends on finmap 1.0.0 and does not fix related changes, and a second one that compiles with 1.1.0 but which will need `seq_fset` related stuff removed/replaced?)"},{"author":"drouhling","date":"2018-08-20T09:24:38Z","comment":"Thanks for the tip on how to use the new finmap. The changes related to this are now in #93."}],"review_discussion":[],"tags":[],"commits":[{"author":"drouhling","committer":"drouhling","hash":"004221af29b41bc3cdba9b4ec18c93fc861c774e","message":"Fix near tactics + swap bigO definitions","date":"2018-08-20T09:12:18Z"},{"author":"CohenCyril","committer":"web-flow","hash":"faa85fe200423a919d18e4a5a0d402fc2a0dcbc5","message":"Setting finmap to version 1.0.0","date":"2018-08-20T23:24:04Z"}]},{"author":"CohenCyril","number":91,"diff_summary":[{"file":"topology.v","status":"M","additions":28,"deletions":52}],"state":"merged","open_date":"2018-07-11T11:06:52Z","update_date":"2018-07-19T14:23:51Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"CohenCyril","committer":"CohenCyril","hash":"9bfd5a1971c6989f51d9c44341bb71b2fd5e3c76","message":"removing unused layer for filters","date":"2018-07-09T15:27:38Z"}]},{"author":"CohenCyril","number":90,"diff_summary":[{"file":"topology.v","status":"M","additions":218,"deletions":226}],"state":"closed","open_date":"2018-07-09T17:03:46Z","update_date":"2020-11-16T10:54:59Z","discussion":[{"author":"CohenCyril","date":"2020-11-16T10:54:59Z","comment":"Subsumed by #282 "}],"review_discussion":[],"tags":[],"commits":[{"author":"CohenCyril","committer":"CohenCyril","hash":"7839afafd41f2e78da3abe77f9bd548239e5f53c","message":"WIP Filter : TC -> CS","date":"2018-07-09T17:01:40Z"}]},{"author":"CohenCyril","number":89,"diff_summary":[{"file":"_CoqProject","status":"M","additions":2,"deletions":1},{"file":"summability.v","status":"M","additions":2,"deletions":1}],"state":"merged","open_date":"2018-07-09T14:20:36Z","update_date":"2018-07-09T15:01:09Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"CohenCyril","committer":"CohenCyril","hash":"83ed84640c0452861a61aa900380aa12cbccd6eb","message":"adding this file to the _CoqProject","date":"2018-07-09T14:17:08Z"}]},{"author":"CohenCyril","number":88,"diff_summary":[{"file":"topology.v","status":"M","additions":24,"deletions":21}],"state":"merged","open_date":"2018-07-09T14:12:23Z","update_date":"2018-07-09T15:01:00Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"CohenCyril","committer":"CohenCyril","hash":"871122a314ca0e2acc4df412d8075cdef844c3dd","message":"update documentation + error messages on near usage","date":"2018-07-09T14:07:51Z"}]},{"author":"CohenCyril","number":87,"diff_summary":[{"file":"boolp.v","status":"M","additions":47,"deletions":15},{"file":"set.v","status":"M","additions":47,"deletions":15}],"state":"merged","open_date":"2018-07-08T08:01:50Z","update_date":"2018-07-08T09:04:37Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"CohenCyril","committer":"CohenCyril","hash":"f737717863489302e9b8b5ea8bc6dca7b6c23233","message":"Making sure we only use the 3 axioms.\n\n- removing require import from std lib which used more axioms than necessary\n- proving EM from CID and prop and fun ext using Diaconescu theorem","date":"2018-07-08T08:08:03Z"}]},{"author":"CohenCyril","number":86,"diff_summary":[{"file":"_CoqProject","status":"M","additions":197,"deletions":155},{"file":"set.v","status":"M","additions":197,"deletions":155},{"file":"derive.v","status":"M","additions":197,"deletions":155},{"file":"hierarchy.v","status":"M","additions":197,"deletions":155},{"file":"landau.v","status":"M","additions":197,"deletions":155},{"file":"topology.v","status":"M","additions":197,"deletions":155}],"state":"merged","open_date":"2018-07-06T14:56:50Z","update_date":"2018-07-08T16:36:13Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"CohenCyril","committer":"CohenCyril","hash":"21c79aaaa7afea1b1193edce40ae6b8ffa8b1fe3","message":"no need to tag using near_enough anymore\n\nIndeed `prop_of` plays this role now!","date":"2018-07-08T09:50:19Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"32915f4cba5dc15d3a27cf2c23c33700b67c7062","message":"small renaming and tentative in_prod_filter","date":"2018-07-08T09:50:19Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"918bb5c659c937babdb922eb898090279c4d8bbf","message":"moving set.v to classical_sets.v to avoid conflicts with finmap","date":"2018-07-08T09:50:19Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"fbc949ccafab00ff4c5aadcce54a1d1f58c95387","message":"better flim_bounded + dist split lemmas","date":"2018-07-08T09:50:19Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"94ee37cb02897f5bd05b14d45799fa59cc6c8bc1","message":"generic lim_cont and lim_cont2 lemmas","date":"2018-07-08T09:50:19Z"}]},{"author":"CohenCyril","number":85,"diff_summary":[{"file":"derive.v","status":"M","additions":350,"deletions":361},{"file":"hierarchy.v","status":"M","additions":350,"deletions":361},{"file":"landau.v","status":"M","additions":350,"deletions":361},{"file":"topology.v","status":"M","additions":350,"deletions":361}],"state":"merged","open_date":"2018-07-06T03:17:33Z","update_date":"2018-07-06T09:10:42Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"CohenCyril","committer":"CohenCyril","hash":"d5c04ad118339cb7d68c003c29b639c9fcc95899","message":"New near tactics + typeclasses speedup!\n\n- near tactics proof flow is more natural.\n  + near=> x behaves like an intro for \\forall x \\near F, P x\n  + and near: x like a discharge, so that the proof obligation related to it immediately follows the tactic call (it used to be delayed to after end_near)\n  + Need to replace \"Qed.\" by \"Grab Existential Variables. all: end_near. Qed.\" until a feature request is made in Coq\n- speedup of typeclasses inference using some opacity","date":"2018-07-06T03:16:04Z"}]},{"author":"CohenCyril","number":84,"diff_summary":[{"file":".circleci/config.yml","status":"M","additions":20,"deletions":11}],"state":"merged","open_date":"2018-06-08T07:49:48Z","update_date":"2018-06-12T10:28:13Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"CohenCyril","committer":"CohenCyril","hash":"3eae2e41728788caae11664bdf69008a68e09e13","message":"Update circleci to mathcomp 1.7.0 deps","date":"2018-06-08T07:51:21Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"7fb84d80171a93d4f7a408399949920d1ec01a65","message":"change cache naming conventions","date":"2018-06-08T09:39:00Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"339aa01eedc33c1efbaa80c37b0c9691bf7a1f34","message":"fix?","date":"2018-06-08T10:45:35Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"464ea547008c4e1030d4060020159af1e71392b9","message":"add default remote","date":"2018-06-11T09:01:11Z"}]},{"author":"CohenCyril","number":83,"diff_summary":[{"file":"altreals/discrete.v","status":"M","additions":105,"deletions":130}],"state":"open","open_date":"2018-04-25T21:34:05Z","update_date":"2023-03-15T14:37:19Z","discussion":[{"author":"affeldt-aist","date":"2021-05-12T02:04:20Z","comment":"memo: mentioned in PR #294 "},{"author":"affeldt-aist","date":"2021-10-04T03:04:28Z","comment":"partially handed by PR #435?"}],"review_discussion":[],"tags":[{"tag":"experiment :test_tube:","description":"This issue/PR is very experimental"},{"tag":"renaming/refactoring","description":"This is about a renaming or refactoring in the library"}],"commits":[{"author":"CohenCyril","committer":"CohenCyril","hash":"f5e466ccd9d4cf284a1a1227ccb0cb1bdfa24348","message":"WIP: Rewriting countability and finiteness\n\ncountability and finiteness now share the interface of countType and finType through the coercions countable >-> Sortclass and finite >-> Sortclass\ne.g. rpickle c is replaced by @pickle [countType of c] where c : countable E.\nAdditionally, sketching lemmas about combining infinite, finite and cofinite sets.","date":"2018-04-25T21:39:15Z"}]},{"author":"affeldt-aist","number":82,"diff_summary":[{"file":"derive.v","status":"M","additions":15,"deletions":0},{"file":"hierarchy.v","status":"M","additions":15,"deletions":0}],"state":"merged","open_date":"2018-04-25T06:24:00Z","update_date":"2018-04-25T08:36:08Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"bfe86630a951c46ed29407169633e64abae7da29","message":"continuous and differentiable lemmas for matrix coordinates","date":"2018-04-25T06:20:26Z"}]},{"author":"CohenCyril","number":81,"diff_summary":[{"file":"INSTALL.md","status":"M","additions":15,"deletions":14},{"file":"opam","status":"M","additions":15,"deletions":14}],"state":"merged","open_date":"2018-04-24T16:55:06Z","update_date":"2018-06-08T07:50:34Z","discussion":[{"author":"CohenCyril","date":"2018-04-26T14:47:11Z","comment":"@strub can you investigate please?"},{"author":"strub","date":"2018-05-20T12:05:23Z","comment":"This is certainly a caching issue. Try to merge master into your branch to get the new CI file.\r\n\r\nAnyway, CI caching system is broken-by-design (TM)."},{"author":"CohenCyril","date":"2018-06-08T07:50:05Z","comment":"Things specific to CI are now moved to issue #84"}],"review_discussion":[],"tags":[],"commits":[{"author":"CohenCyril","committer":"CohenCyril","hash":"14c30b61b3269d97228df9ebf27e229e49ea4983","message":"Updating dependencies and instructions","date":"2018-06-08T07:47:34Z"}]},{"author":"affeldt-aist","number":80,"diff_summary":[{"file":"derive.v","status":"M","additions":202,"deletions":148}],"state":"closed","open_date":"2018-04-24T09:15:34Z","update_date":"2018-10-02T16:48:42Z","discussion":[],"review_discussion":[{"author":"CohenCyril","file":"derive.v","date":"2018-04-24T09:36:29Z","comment":"I changed my mind, I think I'd prefer the notation to be `'d f x h` (with the x after the f), because it corresponds better to the mathematical practice and because a differential is supposed to be a vector field. Same for `differentiable` and `'J`.\r\nAlso I do not think there should be brackets for `'J` and `'D` (and the order of arguments is good for 'D, so we should keep it)"},{"author":"affeldt-aist","file":"derive.v","date":"2018-10-02T13:28:03Z","comment":"That indeed looks more natural."},{"author":"CohenCyril","file":"derive.v","date":"2018-10-02T13:42:18Z","comment":"Do not forget to rebase on master btw"}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"b493331ff5c40270cb22e35bb91df26645c2a35a","message":"Experiment notations for the directional derivative ('D_v[f]) and\nfor the derivative on R (f^`(), f^`(n) for the nth derivative---same\nnotations as in poly.v). The theory of nth derivatives is not\nyet developed. Put notations at the top of the file and add a\nminimal documentation. Used \"Local Notation\" instead of\n\"Notation\" inside sections so that one can grasp more easily the\nnumber of implicit arguments.","date":"2018-04-24T08:59:22Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"d65be557261347adf723e14958c358b6e3fd9892","message":"minor fix and a few trivial lemmas about iterated derivation","date":"2018-04-24T08:59:22Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"8bb1d10f1f12a26c93bafaf116d1f18a4a3fc2f6","message":"differentiable x (fun y => k y *: f)","date":"2018-10-02T13:10:25Z"},{"author":"CohenCyril","committer":"affeldt-aist","hash":"56d5a0937116358a1a6c01a0ad297470dead157b","message":"moving summability to a new file","date":"2018-10-02T13:10:25Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"850a5122a18c768cb77f97135f6f1309e1989832","message":"continuous and differentiable lemmas for matrix coordinates","date":"2018-10-02T13:10:25Z"},{"author":"strub","committer":"affeldt-aist","hash":"b22398b0df82345775a802df44250ead341a1e6d","message":"CI","date":"2018-10-02T13:10:25Z"},{"author":"CohenCyril","committer":"affeldt-aist","hash":"fa597230a48de8fb4505f435c9feca35b6acb19d","message":"reals do not rely on bigenough","date":"2018-10-02T13:10:25Z"},{"author":"CohenCyril","committer":"affeldt-aist","hash":"2297dfdb3ec52e74be4964cf5d56addb7890839e","message":"tag_near -> near_enough","date":"2018-10-02T13:10:25Z"},{"author":"CohenCyril","committer":"affeldt-aist","hash":"8c6bdff0343954076a04207a66820716486c407e","message":"woops","date":"2018-10-02T13:10:25Z"},{"author":"drouhling","committer":"affeldt-aist","hash":"66eebf4684501088a0fa357b4bc798852d9ccd31","message":"discrete.v does not depend on bigenough","date":"2018-10-02T13:10:25Z"},{"author":"drouhling","committer":"affeldt-aist","hash":"09a5be5cd51a1d8f4166c79cc45025a4ab59810b","message":"Fix the name of the real-closed package","date":"2018-10-02T13:10:25Z"},{"author":"CohenCyril","committer":"affeldt-aist","hash":"ade36cf6d5f75f584f26956e6227180a626efcf7","message":"removing useless lim_combinator since `(x --> l) -> (x = l)` (so they are trivial)","date":"2018-10-02T13:10:25Z"},{"author":"CohenCyril","committer":"affeldt-aist","hash":"2b624ef29973156ddab7cac064a89d088f4788a6","message":"shorten proof of flim_switch*","date":"2018-10-02T13:10:25Z"},{"author":"CohenCyril","committer":"affeldt-aist","hash":"99a1e957e65da75cf1d7397d29336ff69e6c0dd3","message":"Updating dependencies and instructions","date":"2018-10-02T13:10:25Z"},{"author":"CohenCyril","committer":"affeldt-aist","hash":"f9e29dbc4cf43092d760f69f2590591c1b1f90ab","message":"Ci mathcomp.1.7.0 (#84)","date":"2018-10-02T13:10:25Z"},{"author":"CohenCyril","committer":"affeldt-aist","hash":"7ef96dcfe2101b9d5898f499a420154060d225a8","message":"replacing tactic \"have F near x\" by lemma near_have and normal near=>","date":"2018-10-02T13:10:25Z"},{"author":"CohenCyril","committer":"affeldt-aist","hash":"89aea8503c870360a0d1f564732f16a5b45b27ea","message":"Reintroduced a tactic to abbrev have_near, also shorten previous tactics","date":"2018-10-02T13:10:25Z"},{"author":"CohenCyril","committer":"affeldt-aist","hash":"1f1840bb4bede07ece0be4f121f49d564a0eac5b","message":"removing repearted tactic notation","date":"2018-10-02T13:10:25Z"},{"author":"CohenCyril","committer":"affeldt-aist","hash":"d188c2f161cfc8f68edba4408a0c3d65c19e9b29","message":"contraction of flim_ballP and posnumP","date":"2018-10-02T13:10:25Z"},{"author":"CohenCyril","committer":"affeldt-aist","hash":"904cadebc130d5fd1b832b4ddf231579007abce2","message":"proof compressions","date":"2018-10-02T13:12:07Z"},{"author":"CohenCyril","committer":"affeldt-aist","hash":"68702ecb4b0f84867961a6a6ed8a5d01d2293afa","message":"small renaming","date":"2018-10-02T13:12:07Z"},{"author":"CohenCyril","committer":"affeldt-aist","hash":"888ae8906371277ba69693eb1a490589f254b77c","message":"New near tactics + typeclasses speedup!\n\n- near tactics proof flow is more natural.\n  + near=> x behaves like an intro for \\forall x \\near F, P x\n  + and near: x like a discharge, so that the proof obligation related to it immediately follows the tactic call (it used to be delayed to after end_near)\n  + Need to replace \"Qed.\" by \"Grab Existential Variables. all: end_near. Qed.\" until a feature request is made in Coq\n- speedup of typeclasses inference using some opacity","date":"2018-10-02T13:12:07Z"},{"author":"CohenCyril","committer":"affeldt-aist","hash":"69516afe6d414451e389331642ac7e799b11c04f","message":"Making sure we only use the 3 axioms.\n\n- removing require import from std lib which used more axioms than necessary\n- proving EM from CID and prop and fun ext using Diaconescu theorem","date":"2018-10-02T13:12:07Z"},{"author":"CohenCyril","committer":"affeldt-aist","hash":"ca0d52465ec64e5cdcb455c379397369626e49ba","message":"no need to tag using near_enough anymore\n\nIndeed `prop_of` plays this role now!","date":"2018-10-02T13:12:07Z"},{"author":"CohenCyril","committer":"affeldt-aist","hash":"094cfd0349872ab64d9b86068bdc8a566fc154b3","message":"small renaming and tentative in_prod_filter","date":"2018-10-02T13:12:07Z"},{"author":"CohenCyril","committer":"affeldt-aist","hash":"63dea7c4621665ce58d6de2caeb77e6f219c504c","message":"moving set.v to classical_sets.v to avoid conflicts with finmap","date":"2018-10-02T13:12:07Z"},{"author":"CohenCyril","committer":"affeldt-aist","hash":"32c8c8a216c942f4e4f57e134712b0a52ec795ca","message":"better flim_bounded + dist split lemmas","date":"2018-10-02T13:12:07Z"},{"author":"CohenCyril","committer":"affeldt-aist","hash":"8cd62ea961ad63a0126bd00b9469e8cb64aee490","message":"generic lim_cont and lim_cont2 lemmas","date":"2018-10-02T13:12:07Z"},{"author":"CohenCyril","committer":"affeldt-aist","hash":"f282d184d9cb9d9d4c28b95cea7c80429826e078","message":"update documentation + error messages on near usage","date":"2018-10-02T13:12:07Z"},{"author":"CohenCyril","committer":"affeldt-aist","hash":"af8f1f2e990634f91176e990fbe83bf9f61c1b7f","message":"adding this file to the _CoqProject","date":"2018-10-02T13:12:07Z"},{"author":"CohenCyril","committer":"affeldt-aist","hash":"27c6e536066d522f55ec76dea84c8e1d77bdc9b4","message":"removing unused layer for filters","date":"2018-10-02T13:12:07Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"04f9f23a09f82e03efb69b98e25353740dca0101","message":"typos in doc","date":"2018-10-02T13:12:07Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"968c647f60405fd5b9a0cb7c912b536f1b20d11a","message":"typo in doc","date":"2018-10-02T13:12:07Z"},{"author":"drouhling","committer":"affeldt-aist","hash":"47e8f7f0e76164d62c8d6aa4d88bfc11f363ba79","message":"Fix near tactics + swap bigO definitions","date":"2018-10-02T13:12:07Z"},{"author":"CohenCyril","committer":"affeldt-aist","hash":"cb1ddeb9e2bc8adeb08202576d9da7c5980b2975","message":"Setting finmap to version 1.0.0","date":"2018-10-02T13:12:07Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"722c3c6ee14126292d5643e4e6a71c22ae3bd18f","message":"update INSTALL.md to reflect the version changes of\nsome of the libraries used in mathcomp-analysis","date":"2018-10-02T13:12:07Z"},{"author":"strub","committer":"affeldt-aist","hash":"4b811583d3299fbbcb3ab2ebb8984cc8abcaf891","message":"Fix `opam` configuration files regarding finmap version","date":"2018-10-02T13:12:07Z"},{"author":"strub","committer":"affeldt-aist","hash":"60d80c10489efed36505def0d6fc60c45d62b44f","message":"lower deps (opam)","date":"2018-10-02T13:12:07Z"},{"author":"drouhling","committer":"affeldt-aist","hash":"c1a547600e2ffc93f9628bb4bd8ecf61cc117a1a","message":"Add uniform bigO from ANR FOST as an example","date":"2018-10-02T13:12:07Z"},{"author":"drouhling","committer":"affeldt-aist","hash":"137104448e06e28ab03ccd32101b9ee0eaee7ec8","message":"Move filter_on instances to topology.v","date":"2018-10-02T13:12:07Z"},{"author":"drouhling","committer":"affeldt-aist","hash":"0eccbe6b0086f2c18857130da5c1c3f6f63c67ce","message":"Rename example file/directory","date":"2018-10-02T13:12:07Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"3c2dc52b54d112045b9d2a0b3b41f9e88537ffbc","message":"just to get rid of warnings from Rstruct and Rbar","date":"2018-10-02T13:12:07Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"53a6aaef0b60f34b2113d14d43c8047ff5587bbe","message":"removed references to real-closed in config.yml","date":"2018-10-02T13:12:07Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"c27a5b231cb4b17983cd61237e1d754af340b745","message":"forget bigenough in config.yml","date":"2018-10-02T13:12:07Z"},{"author":"drouhling","committer":"affeldt-aist","hash":"8476fa7ef381e95156a0f459ebfee34975319d06","message":"Switch to finmap v1.1.0","date":"2018-10-02T13:12:07Z"},{"author":"drouhling","committer":"affeldt-aist","hash":"a62ff0085536df610b0d33cc6fcef260eb247f2e","message":"Use entourages to prove the equivalence between different definitions of cauchy","date":"2018-10-02T13:12:07Z"},{"author":"drouhling","committer":"affeldt-aist","hash":"06e3331c8d597a65240442d7de8bc85d6e352f7b","message":"Remove bigOW + use bigOFI for hypotheses","date":"2018-10-02T13:12:07Z"},{"author":"drouhling","committer":"affeldt-aist","hash":"d5ae268e5b029ded5fec7b187084779fad395228","message":"Put littleo/bigO/bigOmega/bigTheta as notations","date":"2018-10-02T13:12:07Z"},{"author":"drouhling","committer":"affeldt-aist","hash":"7cbf7c466fc9f1f66bfed965e7b7ff819f477940","message":"Renaming","date":"2018-10-02T13:12:07Z"},{"author":"strub","committer":"affeldt-aist","hash":"5f191fde476628941d1755537f17567716c67b8a","message":"`opam` file is now compatible with opam2 sandboxing.","date":"2018-10-02T13:12:07Z"},{"author":"drouhling","committer":"affeldt-aist","hash":"9c3f030711e9ba6c735cb5cdb45c4687e60fc2ab","message":"Replace inequality with equality in absrM and normmZ","date":"2018-10-02T13:12:07Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"4ac9565f3f24e29f9e1286a05d15cd28c18829c3","message":"typo and filename","date":"2018-10-02T13:12:07Z"},{"author":"drouhling","committer":"affeldt-aist","hash":"6ed035338ad754ce271920062c20d4e13e55a2bf","message":"Rename littleo/bigO/… and replace local notations with lets","date":"2018-10-02T13:12:07Z"},{"author":"CohenCyril","committer":"affeldt-aist","hash":"7117f9f2c9dad5e1993f912abacda280ebff29a0","message":"Update README.md","date":"2018-10-02T13:12:07Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"47eada5587122b4ddbce878d7a5b89db18e4e8e8","message":"fixes #104","date":"2018-10-02T13:12:07Z"},{"author":"CohenCyril","committer":"affeldt-aist","hash":"504299728f66f35dce1acfe71060414047d28785","message":"Update README.md","date":"2018-10-02T13:12:07Z"},{"author":"CohenCyril","committer":"affeldt-aist","hash":"e9631cddb1bf0455d470a750c720f0432c5a1bef","message":"\"Spec theorems\" for littleo, bigO, bigOmega and bigTheta","date":"2018-10-02T13:12:07Z"},{"author":"CohenCyril","committer":"affeldt-aist","hash":"c9ebc0fef02c275a3111ff0929b706c647adc81a","message":"same proof script as in the paper","date":"2018-10-02T13:12:07Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"2e66a83e39e90dbf6dbc6f69d860f3086dd1cc7d","message":"Experiment notations for the directional derivative ('D_v[f]) and\nfor the derivative on R (f^`(), f^`(n) for the nth derivative---same\nnotations as in poly.v). The theory of nth derivatives is not\nyet developed. Put notations at the top of the file and add a\nminimal documentation. Used \"Local Notation\" instead of\n\"Notation\" inside sections so that one can grasp more easily the\nnumber of implicit arguments.","date":"2018-10-02T13:13:02Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"f5fa28ffde3935850f99416e0a7cace7d7c64c25","message":"minor fix and a few trivial lemmas about iterated derivation","date":"2018-10-02T13:13:02Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"75eea64abf0cfab76ea096eec604a209a0847d7e","message":"minor addition to documentation","date":"2018-10-02T13:13:02Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"2d388c7973b41d317b5df1cde7b690c88691775b","message":"notation change for derivatives","date":"2018-10-02T13:16:21Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"b18d30f90b8e2b3be01e6c52922b8463afec13ac","message":"Merge branch 'master' into issue68","date":"2018-10-02T13:37:06Z"}]},{"author":"CohenCyril","number":79,"diff_summary":[{"file":"hierarchy.v","status":"A","additions":50,"deletions":31},{"file":"summability.v","status":"A","additions":50,"deletions":31}],"state":"merged","open_date":"2018-04-24T09:11:12Z","update_date":"2018-04-24T16:05:35Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"CohenCyril","committer":"CohenCyril","hash":"29922439e6abc4da03d53d54cd1f86bcce9104a1","message":"moving summability to a new file","date":"2018-04-24T09:08:19Z"}]},{"author":"affeldt-aist","number":78,"diff_summary":[{"file":"derive.v","status":"M","additions":59,"deletions":1},{"file":"hierarchy.v","status":"M","additions":59,"deletions":1},{"file":"landau.v","status":"M","additions":59,"deletions":1}],"state":"merged","open_date":"2018-04-24T08:58:14Z","update_date":"2018-04-24T16:06:34Z","discussion":[{"author":"CohenCyril","date":"2018-04-24T09:42:53Z","comment":"The failure comes from the fact we just moved real_closed out of math-comp/ but did not modify the opam-coq-archive package yet... I'm on it..."}],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"134298c8d9259ea433a53e4b0e0bf42802ffaa1a","message":"differentiable x (fun y => k y *: f)","date":"2018-04-24T08:49:41Z"}]},{"author":"affeldt-aist","number":77,"diff_summary":[{"file":"altreals/xfinmap.v","status":"M","additions":61,"deletions":3},{"file":"derive.v","status":"M","additions":61,"deletions":3},{"file":"hierarchy.v","status":"M","additions":61,"deletions":3},{"file":"landau.v","status":"M","additions":61,"deletions":3}],"state":"closed","open_date":"2018-04-24T08:17:35Z","update_date":"2018-04-24T08:48:27Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"fbaf2b60a9952ddd589ae6d0d8d4efdd4d7c981f","message":"differentiable x (fun y => k y *: f)","date":"2018-04-24T05:55:51Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"c3d79dc508245f56435febf3992696a9b98cd7a8","message":"Local now necessarily prefix with coq-8.8.0","date":"2018-04-24T08:15:46Z"}]},{"author":"affeldt-aist","number":76,"diff_summary":[{"file":"derive.v","status":"M","additions":59,"deletions":1},{"file":"hierarchy.v","status":"M","additions":59,"deletions":1},{"file":"landau.v","status":"M","additions":59,"deletions":1}],"state":"closed","open_date":"2018-04-24T08:13:00Z","update_date":"2018-04-24T08:13:18Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"fbaf2b60a9952ddd589ae6d0d8d4efdd4d7c981f","message":"differentiable x (fun y => k y *: f)","date":"2018-04-24T05:55:51Z"}]},{"author":"affeldt-aist","number":75,"diff_summary":[{"file":"derive.v","status":"M","additions":15,"deletions":29}],"state":"merged","open_date":"2018-04-19T01:04:07Z","update_date":"2018-04-19T01:13:05Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"3c7cab8956cff219fbebf7a4a7bcb9506baf2b7f","message":"change the statement of littleo_linear0\nget rid of littleo_center and littleo_linear_id","date":"2018-04-18T08:00:17Z"}]},{"author":"CohenCyril","number":74,"diff_summary":[{"file":"Rstruct.v","status":"M","additions":2,"deletions":6}],"state":"merged","open_date":"2018-04-17T11:54:39Z","update_date":"2018-04-17T14:01:48Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"larsr","committer":"web-flow","hash":"2f24cbfe05a7cbe5c8cbbf494b440c323b27bfd9","message":"Smaller proof of R_idomainMixin","date":"2018-04-17T10:07:35Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"fb6c4fb4d307e2473a69fd289c1159175832d9e8","message":"even more simplified","date":"2018-04-17T11:50:55Z"}]},{"author":"larsr","number":73,"diff_summary":[{"file":"Rstruct.v","status":"M","additions":2,"deletions":2}],"state":"closed","open_date":"2018-04-17T10:08:23Z","update_date":"2018-04-17T14:01:48Z","discussion":[{"author":"CohenCyril","date":"2018-04-17T14:15:27Z","comment":"Thanks for your PR, I took the liberty to simplify even more."}],"review_discussion":[],"tags":[],"commits":[{"author":"larsr","committer":"web-flow","hash":"2f24cbfe05a7cbe5c8cbbf494b440c323b27bfd9","message":"Smaller proof of R_idomainMixin","date":"2018-04-17T10:07:35Z"}]},{"author":"affeldt-aist","number":69,"diff_summary":[{"file":"derive.v","status":"M","additions":39,"deletions":39}],"state":"merged","open_date":"2018-04-16T07:56:54Z","update_date":"2018-04-17T09:36:06Z","discussion":[],"review_discussion":[{"author":"CohenCyril","file":"derive.v","date":"2018-04-16T12:06:48Z","comment":"According to CI, this fails, I guess it is supposed to be `ler0_addgt0P`"},{"author":"CohenCyril","file":"derive.v","date":"2018-04-16T12:11:15Z","comment":"Explicit `[o_x f of e]` where `e` is not a variable are not \"ready to rewrite\". I think it is better to put a shift in the RHS instead."},{"author":"affeldt-aist","file":"derive.v","date":"2018-04-16T13:45:09Z","comment":"> it is supposed to be ler0_addgt0P\r\n> it is better to put a shift in the RHS instead\r\nIndeed (x2). Fixed."},{"author":"CohenCyril","file":"derive.v","date":"2018-04-17T09:14:27Z","comment":"I do not think this lemma is necessary, it looks subsumed by `littleo_center0`"},{"author":"CohenCyril","file":"derive.v","date":"2018-04-17T09:25:25Z","comment":"I am afraid this is difficult to use too... Maybe `f =o id -> f = cst 0` is better?"}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"33ac64b5bd1987247fa27a508b35e28314ab48ce","message":"split the generic littleo_linear0 into three lemmas,\none of them being littleo_linear0 specialized to 0","date":"2018-04-16T07:53:07Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"a83ac690023c1a388254f3c21ac6354611949096","message":"fix","date":"2018-04-16T13:27:42Z"}]},{"author":"drouhling","number":66,"diff_summary":[{"file":"hierarchy.v","status":"M","additions":71,"deletions":21},{"file":"set.v","status":"M","additions":71,"deletions":21},{"file":"topology.v","status":"M","additions":71,"deletions":21}],"state":"merged","open_date":"2018-04-03T09:20:48Z","update_date":"2018-04-11T12:26:36Z","discussion":[],"review_discussion":[{"author":"CohenCyril","file":"topology.v","date":"2018-04-09T11:27:21Z","comment":"`open_interior` instead?"},{"author":"CohenCyril","file":"set.v","date":"2018-04-09T11:28:32Z","comment":"head symbol is setI, so `setI_bigcapl` might be a better naming."},{"author":"CohenCyril","file":"set.v","date":"2018-04-09T11:31:27Z","comment":"ssreflect lemma is: `setD_eq0 A B : (A :\\: B == set0) = (A \\subset B).` let's have the same naming and statement conventions."},{"author":"CohenCyril","file":"set.v","date":"2018-04-09T11:32:55Z","comment":"Why not `setIl0 {A} (Y : set A) : set0 `&` Y = set0` instead?"},{"author":"drouhling","file":"topology.v","date":"2018-04-09T12:33:53Z","comment":"That's what I had before, but then I noticed that `interior` totally disappeared from the code.\r\n\r\nI chose `locally` to mimic `locally_locally`, which could have been named `locally_interior`."},{"author":"drouhling","file":"set.v","date":"2018-04-09T12:42:24Z","comment":"For some reason I found it more convenient for the manipulation of hypotheses in a proof I had to do. Presently I am not sure any more.\r\n\r\nI would not add your suggestion to the library. There is already `setI0` and `setIC` for this."},{"author":"CohenCyril","file":"set.v","date":"2018-04-09T12:46:42Z","comment":"I indeed meant `set0I {A} (Y : set A) : set0 & Y = set0` (the commuted version of `setI0`), it is convenient not to have `setIC` to do, and it follows the scheme from mathcomp to have them both (and we also have all the variants `setTI` ...)"}],"tags":[],"commits":[{"author":"drouhling","committer":"drouhling","hash":"21652737bf282947b63ab84124c421c383e60ee7","message":"Import a few theorems on sets","date":"2018-04-03T09:19:12Z"},{"author":"drouhling","committer":"drouhling","hash":"153eae592b7dfd12b23dd16152e1ca33f721c826","message":"Fix naming","date":"2018-04-10T14:09:48Z"},{"author":"drouhling","committer":"drouhling","hash":"3841d464358de84f931ece292a1a12550535bae4","message":"Import a few proofs about interior","date":"2018-04-10T14:49:37Z"}]},{"author":"drouhling","number":65,"diff_summary":[{"file":"derive.v","status":"M","additions":74,"deletions":28},{"file":"hierarchy.v","status":"M","additions":74,"deletions":28},{"file":"topology.v","status":"M","additions":74,"deletions":28}],"state":"merged","open_date":"2018-03-30T14:14:11Z","update_date":"2018-04-11T14:55:32Z","discussion":[],"review_discussion":[{"author":"CohenCyril","file":"hierarchy.v","date":"2018-04-09T11:34:48Z","comment":"`normedModType_hausdorff` (indeed `haussdorff` is a uniary predicate)"},{"author":"CohenCyril","file":"hierarchy.v","date":"2018-04-09T11:35:29Z","comment":"Maybe we should have a convention for this kind of lemma?\r\nLike `lerP_epsilon`?\r\n"},{"author":"CohenCyril","file":"hierarchy.v","date":"2018-04-09T11:35:51Z","comment":"`in_segmentPepsilon`?"},{"author":"drouhling","file":"hierarchy.v","date":"2018-04-09T12:28:28Z","comment":"I am not very fond of the names containing \"epsilon\". Using the name of a bound variable to describe a statement seems to be a bad practice IMHO.\r\n\r\nI could use \"banana\" instead of \"epsilon\" and still have the same statement. To my great distaste, History preferred \"epsilon\"…"},{"author":"CohenCyril","file":"hierarchy.v","date":"2018-04-09T12:51:53Z","comment":"I meant there is a pattern here, and `in_segmentP` does not conform. I would rather have a **documented** (almost) arbitrary name, than two lemmas with the same pattern but nothing in common in their name. If \"epsilon\" is not to your liking, I can understand, maybe me can find another, and that would be my question: \"pos\", \"close\", \"small\", \"around\"... ?"},{"author":"drouhling","file":"hierarchy.v","date":"2018-04-09T13:04:54Z","comment":"I understood your question but I have no \"good\" solution.\r\n\r\nMaybe something in the same vein as what we chose before with `ler_gt0P`?\r\nSay, `ler0_gt0P` for `ler_gt0P`, `ler_gt0P` for `ler_addgt0P` and `in_segment_gt0P` for `in_segmentP`?\r\n\r\nAt least the common pattern is explicit and compact and we can easily search and replace when a \"good\" convention is found."},{"author":"CohenCyril","file":"hierarchy.v","date":"2018-04-09T13:15:58Z","comment":"Ok, ... maybe for now we can pick `addgt0P` as an idiomatic suffix?"},{"author":"affeldt-aist","file":"hierarchy.v","date":"2018-04-09T23:38:55Z","comment":"It looks like ltn_addr/ltn_addl in ssrnat and ler_addr/ler_addl in ssrnum,\r\nso I was wondering if a \"r/l\" suffix was not in order?"},{"author":"CohenCyril","file":"hierarchy.v","date":"2018-04-11T12:28:35Z","comment":"The convention would be to put the \"r\" (or \"l\") after the \"P\", as in `maxn_idPr`"}],"tags":[],"commits":[{"author":"drouhling","committer":"drouhling","hash":"63dae50835c9c88c221bfcdba12a0af3fa6331a1","message":"Import proofs about Hausdorff spaces","date":"2018-04-11T13:00:36Z"}]},{"author":"drouhling","number":64,"diff_summary":[{"file":"derive.v","status":"M","additions":40,"deletions":48},{"file":"hierarchy.v","status":"M","additions":40,"deletions":48},{"file":"topology.v","status":"M","additions":40,"deletions":48}],"state":"merged","open_date":"2018-03-30T09:17:09Z","update_date":"2018-04-09T11:38:55Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"drouhling","committer":"drouhling","hash":"2a9524b526075284c6b29351d055fb676e736bca","message":"Add relation between locally and locally'\n\nUse it to simplify proofs on derivative","date":"2018-03-30T08:32:55Z"},{"author":"drouhling","committer":"drouhling","hash":"0c3066e0224d1a9c9d1a210ede6c27667f882462","message":"Use eq_op in the definition of locally'","date":"2018-03-30T09:11:13Z"}]},{"author":"affeldt-aist","number":62,"diff_summary":[{"file":"landau.v","status":"M","additions":112,"deletions":107},{"file":"set.v","status":"M","additions":112,"deletions":107}],"state":"merged","open_date":"2018-03-23T06:29:55Z","update_date":"2018-03-23T09:07:52Z","discussion":[{"author":"CohenCyril","date":"2018-03-23T08:50:36Z","comment":"> There is sill one Reserved Notation in the middle of hierarchy.v:\r\n> Reserved Notation \"|[ x ]|\" (at level 0, x at level 99, format \"|[ x ]|\").\r\n> \r\n> Putting it at the top of the file reveals that it conflicts with the tactical\r\n> => [[...]|[...]]\r\n\r\nYes, this conflict is an issue I know, and it is supposed to be fixed by #4 "}],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"8eb7cf6c86b6d9a8caa42db49aa352152efff73f","message":"just moved Reserved Notation's on top of landau.v and set.v","date":"2018-03-23T01:29:44Z"}]},{"author":"drouhling","number":59,"diff_summary":[{"file":"hierarchy.v","status":"M","additions":118,"deletions":3}],"state":"merged","open_date":"2018-03-22T12:18:19Z","update_date":"2018-03-22T13:53:05Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"drouhling","committer":"drouhling","hash":"e52f1ba00ffaff386e609fd3b792eb6c898f1699","message":"Document hierarchy","date":"2018-03-22T12:17:02Z"}]},{"author":"affeldt-aist","number":58,"diff_summary":[{"file":"landau.v","status":"M","additions":312,"deletions":176}],"state":"merged","open_date":"2018-03-22T06:43:14Z","update_date":"2018-03-22T15:52:48Z","discussion":[{"author":"drouhling","date":"2018-03-22T08:44:25Z","comment":"I also have a question which is unrelated to the changes brought by this PR. Why is the `_ \\is _` construction used, while it is not used for `littleo` and `bigO`?"},{"author":"affeldt-aist","date":"2018-03-22T09:34:38Z","comment":"> Why is the _ \\is _ construction used, while it is not used for littleo and bigO?\r\n\r\nThe usefulness of rewriting was more obvious for littleo and bigO than for big-Omega and big-Theta,\r\nthis is why we started with the simpler \\is construct only. Since then, the boilerplate of littleo and bigO\r\nhas been adapted and \\is remains only because it is slightly more general than =Omega_ and =Theta_\r\n(it allows for functions with different codomains). These are not strong reasons to keep it."},{"author":"drouhling","date":"2018-03-22T10:33:45Z","comment":"OK thanks for the clarification."}],"review_discussion":[{"author":"drouhling","file":"landau.v","date":"2018-03-22T08:16:33Z","comment":"You should use a simple quote instead of a backquote."},{"author":"drouhling","file":"landau.v","date":"2018-03-22T08:22:34Z","comment":"Shouldn't all reserved notations be put at the beginning?"},{"author":"drouhling","file":"landau.v","date":"2018-03-22T08:35:29Z","comment":"Maybe use an equality here?"},{"author":"drouhling","file":"landau.v","date":"2018-03-22T08:40:55Z","comment":"Same remark about simple quotes and reserved notations."},{"author":"affeldt-aist","file":"landau.v","date":"2018-03-22T09:13:20Z","comment":"Indeed."},{"author":"affeldt-aist","file":"landau.v","date":"2018-03-22T09:16:13Z","comment":"Indeed."},{"author":"affeldt-aist","file":"landau.v","date":"2018-03-22T09:20:08Z","comment":"OK."},{"author":"affeldt-aist","file":"landau.v","date":"2018-03-22T09:39:13Z","comment":"I was wondering. There are some many. At the beginning of the relevant section seems also a good place to me."},{"author":"drouhling","file":"landau.v","date":"2018-03-22T10:30:14Z","comment":"Both possibilities are fine to me. In both cases a few lines have to be moved."}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"d2069ba6a4c6651d72f8c98048d6dfc4232107a0","message":"complete the theory of big-Omega/Theta\nclean the formalization (uniform naming,\nall formats now in Reserved Notations first,\ncomplete the documentation).","date":"2018-03-22T06:39:37Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"4044aff047b73bc44629c99f9b0f403e8116c342","message":"address comments about the PR","date":"2018-03-22T13:01:59Z"}]},{"author":"drouhling","number":57,"diff_summary":[{"file":"derive.v","status":"M","additions":79,"deletions":92}],"state":"merged","open_date":"2018-03-21T15:19:35Z","update_date":"2018-03-22T09:46:54Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"drouhling","committer":"drouhling","hash":"8852aee33cdf808ea7b0c7a462ab79ba8362874d","message":"Remove min and max from statements","date":"2018-03-21T15:16:32Z"}]},{"author":"affeldt-aist","number":55,"diff_summary":[{"file":"landau.v","status":"M","additions":8,"deletions":1}],"state":"merged","open_date":"2018-03-21T09:47:25Z","update_date":"2018-03-21T13:59:47Z","discussion":[],"review_discussion":[{"author":"CohenCyril","file":"landau.v","date":"2018-03-21T12:37:43Z","comment":"Hi @affeldt-aist, is there a reason why this theorem is not stated for any bigop?\r\n\r\n"},{"author":"CohenCyril","file":"landau.v","date":"2018-03-21T13:59:05Z","comment":"Never mind"}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"1438cb142c8077f283f6aae225350a0d9a091826","message":"lemma : (\\sum_i f i) x = \\sum_i f i x\n(when the symbol + is explicit, folding can be achieved using tactics)","date":"2018-03-21T09:25:36Z"}]},{"author":"drouhling","number":54,"diff_summary":[{"file":"derive.v","status":"M","additions":69,"deletions":11},{"file":"hierarchy.v","status":"M","additions":69,"deletions":11}],"state":"merged","open_date":"2018-03-20T15:10:59Z","update_date":"2018-03-21T12:34:50Z","discussion":[],"review_discussion":[{"author":"CohenCyril","file":"hierarchy.v","date":"2018-03-20T16:03:41Z","comment":"This name is not very good. How `about ler_gt0P` ?"},{"author":"CohenCyril","file":"hierarchy.v","date":"2018-03-20T16:05:08Z","comment":"I'm not sure about this min an max stuff for `a` and `b` that make things less easy to instantiate.\r\nMaybe have `a <= b` and make sure the user can prove `minr a b <= maxr a b` in one go."},{"author":"drouhling","file":"hierarchy.v","date":"2018-03-21T09:03:14Z","comment":"It might be interesting to open an issue for the other occurrences (e.g. in `MVT`)."}],"tags":[],"commits":[{"author":"drouhling","committer":"drouhling","hash":"bb1c5e051346cc1ba943724cdc67df039253d3a7","message":"Add the Intermediate Value Theorem","date":"2018-03-20T15:08:25Z"},{"author":"drouhling","committer":"drouhling","hash":"54b9bafff6566960bb47522b88f45403997b9819","message":"Fix naming and statement","date":"2018-03-21T08:58:18Z"}]},{"author":"drouhling","number":53,"diff_summary":[{"file":"hierarchy.v","status":"M","additions":75,"deletions":1}],"state":"merged","open_date":"2018-03-20T14:53:25Z","update_date":"2018-03-21T12:37:57Z","discussion":[],"review_discussion":[{"author":"CohenCyril","file":"hierarchy.v","date":"2018-03-20T16:07:36Z","comment":"Not sure about the name... maybe `rV_compact` ?"}],"tags":[],"commits":[{"author":"drouhling","committer":"drouhling","hash":"15b12e5fbc8cf02a390b339f81ec4d7256ea0547","message":"Prove the Heine-Borel Theorem","date":"2018-03-20T14:51:00Z"},{"author":"drouhling","committer":"drouhling","hash":"729edbc338c91cfafcd551ce6829791943d8a51d","message":"Fix naming","date":"2018-03-21T09:10:43Z"}]},{"author":"drouhling","number":52,"diff_summary":[{"file":"derive.v","status":"M","additions":219,"deletions":106}],"state":"merged","open_date":"2018-03-20T14:31:41Z","update_date":"2018-03-21T12:36:15Z","discussion":[],"review_discussion":[{"author":"CohenCyril","file":"derive.v","date":"2018-03-20T16:10:15Z","comment":"Did you try making these two projections coercions ? It may be useful to shorten some proofs..."}],"tags":[],"commits":[{"author":"drouhling","committer":"drouhling","hash":"bb361c9c5be2ba7cb29e41b6e9ba285d799006e0","message":"Add type classes for automatic differentiation/derivation","date":"2018-03-20T14:25:14Z"}]},{"author":"affeldt-aist","number":51,"diff_summary":[{"file":"derive.v","status":"M","additions":18,"deletions":1}],"state":"merged","open_date":"2018-03-15T06:44:00Z","update_date":"2018-03-15T16:55:50Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"4a87dbd86a05143233af109cb65f95fa9bb2c291","message":"easy generalization of deriveD","date":"2018-03-15T06:40:43Z"}]},{"author":"affeldt-aist","number":50,"diff_summary":[{"file":"derive.v","status":"M","additions":86,"deletions":2},{"file":"hierarchy.v","status":"M","additions":86,"deletions":2},{"file":"topology.v","status":"M","additions":86,"deletions":2}],"state":"merged","open_date":"2018-03-08T01:44:05Z","update_date":"2018-03-20T17:24:10Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"e37443f43ba73d5b9036894462708785d289610f","message":"tentative proof for deriveE\nadd lemma lim_cst to Section limit_composition","date":"2018-03-08T00:56:56Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"e824192db94a809929d68e39d613e99c51fb8013","message":"combinators for continuity","date":"2018-03-12T03:12:42Z"}]},{"author":"affeldt-aist","number":49,"diff_summary":[{"file":"derive.v","status":"M","additions":104,"deletions":2},{"file":"hierarchy.v","status":"M","additions":104,"deletions":2}],"state":"closed","open_date":"2018-03-07T15:23:38Z","update_date":"2018-03-21T01:16:03Z","discussion":[{"author":"CohenCyril","date":"2018-03-07T15:45:18Z","comment":"@affeldt-aist hi! Can you please rebase on top of master? (It looks like you did a merge instead of a rebase)"},{"author":"affeldt-aist","date":"2018-03-08T01:03:15Z","comment":"Similar PR in branch issue7b (with no merge-commit).\r\n"},{"author":"CohenCyril","date":"2018-03-20T17:24:52Z","comment":"Since #50 has been merged, should this one be closed?"},{"author":"affeldt-aist","date":"2018-03-21T01:16:02Z","comment":"Yes."}],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"8f83849b67892a7d47beb81e2c794f2b1d24acfe","message":"wip","date":"2018-02-06T09:23:33Z"},{"author":"CohenCyril","committer":"affeldt-aist","hash":"b07f95f67f07eed89a9d59d218534fdf99f9a6dc","message":"shortening proof (please do not use insubd on littleo)","date":"2018-02-27T06:50:19Z"},{"author":"CohenCyril","committer":"affeldt-aist","hash":"003241647462b6e3a0374a4188f7e98265ca46ce","message":"uniformizing derivative definitions","date":"2018-02-27T06:50:19Z"},{"author":"drouhling","committer":"affeldt-aist","hash":"f951d066410b7ecdea4285ed7d40354a30cd445f","message":"Add documentation to topology.v","date":"2018-02-27T06:50:19Z"},{"author":"drouhling","committer":"affeldt-aist","hash":"874eccb0861c25a0acc5ae2553037a0d69a6616c","message":"Add documentation to set.v and posnum.v","date":"2018-02-27T06:50:19Z"},{"author":"drouhling","committer":"affeldt-aist","hash":"1a17ae8ba4761c130f265335a25d48a16838c043","message":"Improve the documentation, remove duplicate notation, fix acknowledgements","date":"2018-02-27T06:50:19Z"},{"author":"CohenCyril","committer":"affeldt-aist","hash":"c1b6e94fccbf893c73bea3326d1af78f9d19d33b","message":"Update set.v\n\nchange a `<->` to a `:=`","date":"2018-02-27T06:50:19Z"},{"author":"CohenCyril","committer":"affeldt-aist","hash":"48dc6f4992d46126e3f6fe06183745fc737acc11","message":"removing depency in ClassicalFacts","date":"2018-02-27T06:50:19Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"fbcfbb4f5e342f65716810b05932aaf82d9d376c","message":"subsetI (with =), subIset","date":"2018-02-27T06:50:19Z"},{"author":"drouhling","committer":"affeldt-aist","hash":"158f6565506ee0e084a50f5f18070c7a2db8146d","message":"Implement infimum","date":"2018-02-27T06:50:19Z"},{"author":"strub","committer":"affeldt-aist","hash":"1b70a4f2aa151bbd7ff8a361bb2751b9bd78714d","message":"Remove administrative files from coq-alternate-reals + add headers","date":"2018-02-27T06:50:19Z"},{"author":"strub","committer":"affeldt-aist","hash":"2f5af8949a9d24fa9e11ba0e8f1ff12b4dc4685c","message":"remove draft files from coq-alternate-reals","date":"2018-02-27T06:50:19Z"},{"author":"strub","committer":"affeldt-aist","hash":"7543b0378629726f7fdcf066ce5bbfc60547cf96","message":"move coq-alternate-reals core files to root","date":"2018-02-27T06:50:19Z"},{"author":"strub","committer":"affeldt-aist","hash":"72ee9d3e8af0f7d8eaece3aeccca288aae4880e8","message":".gitignore","date":"2018-02-27T06:50:19Z"},{"author":"strub","committer":"affeldt-aist","hash":"84929082caa13f66b79949ef1f101f7f3dff80d1","message":"Makefile: cleaning / packing / counting","date":"2018-02-27T06:50:19Z"},{"author":"strub","committer":"affeldt-aist","hash":"25b690c6955157dec43832f0695bb80b8062b5f4","message":"Disable Coq parsing warnings","date":"2018-02-27T06:50:19Z"},{"author":"strub","committer":"affeldt-aist","hash":"8b68690b126a5fd84e4ae17fafe738018b5c71e5","message":"CircleCI integration","date":"2018-02-27T06:50:19Z"},{"author":"drouhling","committer":"affeldt-aist","hash":"08cb3f3edeece2c982e3cb0206a7a29e49c7e50f","message":"Prove that segments in R are connected, closed and compact.","date":"2018-02-27T06:50:19Z"},{"author":"drouhling","committer":"affeldt-aist","hash":"c012c7e1f3744200f1b410b33ef802359428bb50","message":"Use interval + rename with proper suffixes","date":"2018-02-27T06:50:19Z"},{"author":"strub","committer":"affeldt-aist","hash":"2dbd0205e6077f4f82241849f041f2d7fb525b21","message":"Adding previously non-committed results of coq-alternate-reals","date":"2018-02-27T06:50:19Z"},{"author":"strub","committer":"affeldt-aist","hash":"30c3dd47dce5bf6684460f83d5e93b537f84e1c8","message":"Remove coq-alternate-reals/xsets\n\nThis file contains no real development","date":"2018-02-27T06:50:19Z"},{"author":"strub","committer":"affeldt-aist","hash":"728fd9c7f1ed3c3c15141b32841f8b451365956d","message":"Add coq-alternate-reals (renamed to altreals) extra files to _CoqProject\n\nThis allows to use the 'discrete probabilities theory' before its\nintegration in the top-level theories.","date":"2018-02-27T06:50:19Z"},{"author":"strub","committer":"affeldt-aist","hash":"0a7db8261ad0401507146244acba84cd0bcf813a","message":"opam description file","date":"2018-02-27T06:50:19Z"},{"author":"strub","committer":"affeldt-aist","hash":"788819414f822a52f50936bbfb723cde9feaa693","message":"Import more results in altreals","date":"2018-02-27T06:50:19Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"dd7eacc429729fcb530a6effbffc51e6f9f726e3","message":"move contents of equiv.v to landau.v and document","date":"2018-02-27T06:50:19Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"aa2d6a0eec3b033e0389f8d0df903eed9877dc9b","message":"start adding documentation about big-Omega notation\nmarked work about big-Omega and big-Theta notations as work-in-progress","date":"2018-02-27T06:50:19Z"},{"author":"CohenCyril","committer":"affeldt-aist","hash":"e31d173baddae6d448f5a0a4e668e12160593648","message":"fixing horrible mistake","date":"2018-02-27T06:50:19Z"},{"author":"strub","committer":"affeldt-aist","hash":"b3d860cf0462598e61a4fee5aff2829c3915cbd7","message":"psum over products wr.t. double summation","date":"2018-02-27T06:50:19Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"cf852a2f1017727d2b1bf5f9f1ea446af6876451","message":"just rebased master in issue7 to get the new definition of derive with locally'","date":"2018-02-27T06:50:19Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"69cad07578b4edf4816f0d2c7f3467287252dbcf","message":"proof of deriveE\nlemma lim_cst","date":"2018-03-07T15:12:26Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"ccd7d26576f7eb842945f01a25a4d788dafa53bd","message":"Merge branch 'issue7' of https://github.com/math-comp/analysis into issue7","date":"2018-03-07T15:16:48Z"}]},{"author":"drouhling","number":48,"diff_summary":[{"file":"FILES.md","status":"A","additions":1949,"deletions":28},{"file":"_CoqProject","status":"A","additions":1949,"deletions":28},{"file":"derive.v","status":"A","additions":1949,"deletions":28},{"file":"forms.v","status":"A","additions":1949,"deletions":28},{"file":"hierarchy.v","status":"A","additions":1949,"deletions":28},{"file":"landau.v","status":"A","additions":1949,"deletions":28},{"file":"topology.v","status":"A","additions":1949,"deletions":28}],"state":"merged","open_date":"2018-03-01T17:07:13Z","update_date":"2018-03-02T00:01:28Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"drouhling","committer":"drouhling","hash":"793934b6d3f7923979744b7bddd631c574215d2b","message":"Compatibility theorems about continuity","date":"2018-02-27T12:52:58Z"},{"author":"drouhling","committer":"drouhling","hash":"e4bd619e617497421af72354dfb3c2579471c5f8","message":"Fix the definition of differential + compatibility theorems","date":"2018-02-27T12:52:58Z"},{"author":"drouhling","committer":"drouhling","hash":"6b36593f4a6a612212163b25c6bad3522c7fa679","message":"Prove more properties on the differential","date":"2018-02-27T12:57:44Z"},{"author":"drouhling","committer":"drouhling","hash":"234bf69215dfca544518c5ff642948082a9ec9ba","message":"Prove properties on directional derivatives","date":"2018-03-01T10:49:06Z"},{"author":"drouhling","committer":"drouhling","hash":"3be43412e44c2d7264fa7d404a613b6761db2221","message":"Import forms.v + additions on the derivative + clean up","date":"2018-03-01T16:40:24Z"}]},{"author":"amahboubi","number":47,"diff_summary":[{"file":"README.md","status":"A","additions":652,"deletions":2},{"file":"forms.v","status":"A","additions":652,"deletions":2}],"state":"closed","open_date":"2018-03-01T10:46:35Z","update_date":"2018-03-01T13:24:35Z","discussion":[{"author":"CohenCyril","date":"2018-03-01T10:48:40Z","comment":"You are right! And indeed this is very specfic to Damien working branch `diff`. I guess he plans to make a PR at somepoint and we have to solve issues related to #46 before merging into `master`..."},{"author":"CohenCyril","date":"2018-03-01T11:23:05Z","comment":"Making a PR on a branch that will ultimately also be a PR is not a good practice. The reason it is not a PR yet is that @drouhling did not judge it was ready yet for integration, so the best practice is to interact with @drouhling instead, and when it is a PR, we can start reviewing/discussing and amending.\r\n\r\nI think most of the confusion here comes from the fact that I showed you a work in progress that I could see @drouhling was working on, but that even I did not have many opportunities to discuss with him yet... We are basically looking over his shoulder right now ;)"},{"author":"amahboubi","date":"2018-03-01T13:24:35Z","comment":"Ok. I am closing the PR."}],"review_discussion":[],"tags":[],"commits":[{"author":"amahboubi","committer":"amahboubi","hash":"f32ca880e8a39aa20dae09c62287f70e3a22ab94","message":"Analysis depends on a specific branch of math-comp...","date":"2018-03-01T10:45:03Z"},{"author":"amahboubi","committer":"amahboubi","hash":"5a7ec671581ab6ec71fa09341ab64371a5339f18","message":"Added the forms library, used e.g. in derive.","date":"2018-03-01T11:17:57Z"}]},{"author":"strub","number":44,"diff_summary":[{"file":"opam","status":"A","additions":25,"deletions":0}],"state":"merged","open_date":"2018-02-14T16:11:56Z","update_date":"2018-02-21T14:37:43Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"strub","committer":"strub","hash":"d39e99b873e4700925c5fbf75302cbec2a4a066b","message":"opam description file","date":"2018-02-14T16:11:08Z"}]},{"author":"strub","number":43,"diff_summary":[{"file":"MANIFEST","status":"D","additions":35,"deletions":188},{"file":"_CoqProject","status":"D","additions":35,"deletions":188},{"file":"coq-alternate-reals/LICENSE","status":"D","additions":35,"deletions":188},{"file":"coq-alternate-reals/dedekind.v","status":"D","additions":35,"deletions":188},{"file":"coq-alternate-reals/discrete.v","status":"D","additions":35,"deletions":188},{"file":"coq-alternate-reals/distr.v","status":"D","additions":35,"deletions":188},{"file":"coq-alternate-reals/realseq.v","status":"D","additions":35,"deletions":188},{"file":"coq-alternate-reals/realsum.v","status":"D","additions":35,"deletions":188},{"file":"coq-alternate-reals/xfinmap.v","status":"D","additions":35,"deletions":188},{"file":"coq-alternate-reals/xsets.v","status":"D","additions":35,"deletions":188}],"state":"merged","open_date":"2018-02-14T13:38:50Z","update_date":"2018-02-14T13:57:01Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"strub","committer":"strub","hash":"caf2609b68ef97b40720a77497ca6de9963e8997","message":"Adding previously non-committed results of coq-alternate-reals","date":"2018-02-14T13:28:39Z"},{"author":"strub","committer":"strub","hash":"7e054e018b73dd5b495e4ddc1ad9b6b1a15e4a62","message":"Remove coq-alternate-reals/xsets\n\nThis file contains no real development","date":"2018-02-14T13:31:28Z"},{"author":"strub","committer":"strub","hash":"13b0e89b350051c1887f5054ba31d0900d8b216a","message":"Add coq-alternate-reals (renamed to altreals) extra files to _CoqProject\n\nThis allows to use the 'discrete probabilities theory' before its\nintegration in the top-level theories.","date":"2018-02-14T13:49:56Z"}]},{"author":"strub","number":42,"diff_summary":[{"file":".circleci/config.yml","status":"A","additions":100,"deletions":0}],"state":"merged","open_date":"2018-02-10T10:03:04Z","update_date":"2018-02-10T10:48:47Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"strub","committer":"strub","hash":"2839567050e979d9303279d44ea653581752d2d5","message":"CircleCI integration","date":"2018-02-10T10:02:10Z"}]},{"author":"strub","number":41,"diff_summary":[{"file":"_CoqProject","status":"M","additions":3,"deletions":0}],"state":"merged","open_date":"2018-02-09T17:21:59Z","update_date":"2018-02-09T17:22:11Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"strub","committer":"strub","hash":"d849ebf36c34b94d8a879a6f0c37d1b06308dcdb","message":"Disable Coq parsing warnings","date":"2018-02-09T17:21:20Z"}]},{"author":"drouhling","number":39,"diff_summary":[{"file":"hierarchy.v","status":"M","additions":218,"deletions":34},{"file":"reals.v","status":"M","additions":218,"deletions":34},{"file":"set.v","status":"M","additions":218,"deletions":34},{"file":"topology.v","status":"M","additions":218,"deletions":34}],"state":"merged","open_date":"2018-02-09T14:16:24Z","update_date":"2018-02-21T14:36:36Z","discussion":[],"review_discussion":[{"author":"CohenCyril","file":"hierarchy.v","date":"2018-02-09T14:40:58Z","comment":"Why suffix `Z`? It is about a negation, so it should be `N` instead."},{"author":"drouhling","file":"hierarchy.v","date":"2018-02-09T14:43:48Z","comment":"I wasn't quite sure about that… I did the same mistake about infimum. I'm fixing this."},{"author":"CohenCyril","file":"hierarchy.v","date":"2018-02-09T14:43:58Z","comment":"Maybe you could use the development library math-comp/algebra/interval.v to write `` `[a ,b]`` instead?"},{"author":"CohenCyril","file":"hierarchy.v","date":"2018-02-09T14:46:38Z","comment":"Oh and the abbreviation `seg` is not used that much since we are not developing the theory of segments, so maybe we should use the full name `segment` instead."},{"author":"drouhling","file":"hierarchy.v","date":"2018-02-09T14:57:36Z","comment":"`N` is conflicting with a few lemmas about complement. Is `Nr` (for the ring negation, hence `opp`) ok?"},{"author":"CohenCyril","file":"hierarchy.v","date":"2018-02-09T15:02:52Z","comment":"The abbreviation for complement in mathcomp is `C`, where are the conflicts?"},{"author":"CohenCyril","file":"hierarchy.v","date":"2018-02-09T15:04:12Z","comment":"https://github.com/math-comp/math-comp/blob/d6bc72cd477ed6fe8b95782b26a2e0fc92711395/mathcomp/ssreflect/finset.v#L89"},{"author":"drouhling","file":"hierarchy.v","date":"2018-02-09T15:07:49Z","comment":"`openN`, `closedN`, `locallyN`…\r\nI am renaming them with `C` then, and using `N` for this PR."}],"tags":[],"commits":[{"author":"drouhling","committer":"drouhling","hash":"b2951d51f900b9e55bf3ce7f0c39fe15b9d80df2","message":"Prove that segments in R are connected, closed and compact.","date":"2018-02-12T08:20:42Z"},{"author":"drouhling","committer":"drouhling","hash":"a14a41b81eb0c5210fca5ff319ba72e9dd12a701","message":"Use interval + rename with proper suffixes","date":"2018-02-12T08:20:42Z"}]},{"author":"strub","number":38,"diff_summary":[{"file":"FILES.md","status":"D","additions":78,"deletions":1168},{"file":"README.md","status":"D","additions":78,"deletions":1168},{"file":"Rstruct.v","status":"D","additions":78,"deletions":1168},{"file":"_CoqProject","status":"D","additions":78,"deletions":1168},{"file":"coq-alternate-reals/src/boolp.v","status":"D","additions":78,"deletions":1168},{"file":"coq-alternate-reals/.gitignore","status":"D","additions":78,"deletions":1168},{"file":"coq-alternate-reals/MANIFEST","status":"D","additions":78,"deletions":1168},{"file":"coq-alternate-reals/Makefile","status":"D","additions":78,"deletions":1168},{"file":"coq-alternate-reals/Makefile.common","status":"D","additions":78,"deletions":1168},{"file":"coq-alternate-reals/README.md","status":"D","additions":78,"deletions":1168},{"file":"coq-alternate-reals/SHOPPING.md","status":"D","additions":78,"deletions":1168},{"file":"coq-alternate-reals/src/dedekind.v","status":"D","additions":78,"deletions":1168},{"file":"coq-alternate-reals/src/discrete.v","status":"D","additions":78,"deletions":1168},{"file":"coq-alternate-reals/src/distr.v","status":"D","additions":78,"deletions":1168},{"file":"coq-alternate-reals/opam","status":"D","additions":78,"deletions":1168},{"file":"coq-alternate-reals/src/realseq.v","status":"D","additions":78,"deletions":1168},{"file":"coq-alternate-reals/src/realsum.v","status":"D","additions":78,"deletions":1168},{"file":"coq-alternate-reals/scripts/distribution.py","status":"D","additions":78,"deletions":1168},{"file":"coq-alternate-reals/scripts/install-sh","status":"D","additions":78,"deletions":1168},{"file":"coq-alternate-reals/src/.dir-locals.el","status":"D","additions":78,"deletions":1168},{"file":"coq-alternate-reals/src/coupling.v","status":"D","additions":78,"deletions":1168},{"file":"coq-alternate-reals/src/filters.v","status":"D","additions":78,"deletions":1168},{"file":"coq-alternate-reals/src/sandbox.v","status":"D","additions":78,"deletions":1168},{"file":"coq-alternate-reals/src/xfinmap.v","status":"D","additions":78,"deletions":1168},{"file":"coq-alternate-reals/src/xsets.v","status":"D","additions":78,"deletions":1168},{"file":"derive.v","status":"D","additions":78,"deletions":1168},{"file":"equiv.v","status":"D","additions":78,"deletions":1168},{"file":"hierarchy.v","status":"D","additions":78,"deletions":1168},{"file":"landau.v","status":"D","additions":78,"deletions":1168},{"file":"posnum.v","status":"D","additions":78,"deletions":1168},{"file":"coq-alternate-reals/src/reals.v","status":"D","additions":78,"deletions":1168},{"file":"set.v","status":"D","additions":78,"deletions":1168},{"file":"topology.v","status":"D","additions":78,"deletions":1168}],"state":"merged","open_date":"2018-02-09T12:15:17Z","update_date":"2018-02-09T12:57:00Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"strub","committer":"strub","hash":"8173c42c99b1a9c387461b4dd3b4bbf7046aac19","message":"Remove administrative files from coq-alternate-reals + add headers","date":"2018-02-09T12:04:28Z"},{"author":"strub","committer":"strub","hash":"23659ce982de1bafb840ccb4d3861934a4e9d6c2","message":"remove draft files from coq-alternate-reals","date":"2018-02-09T12:07:00Z"},{"author":"strub","committer":"strub","hash":"fea4af72d15143603acade7ac5a7523e33365f31","message":"move coq-alternate-reals core files to root","date":"2018-02-09T12:11:23Z"}]},{"author":"affeldt-aist","number":36,"diff_summary":[{"file":"FILES.md","status":"D","additions":200,"deletions":119},{"file":"_CoqProject","status":"D","additions":200,"deletions":119},{"file":"equiv.v","status":"D","additions":200,"deletions":119},{"file":"landau.v","status":"D","additions":200,"deletions":119}],"state":"merged","open_date":"2018-02-09T07:59:03Z","update_date":"2018-02-22T08:59:57Z","discussion":[{"author":"affeldt-aist","date":"2018-02-09T08:51:33Z","comment":"You are right. How about I open a new issue about Omega and Theta? I would like to prove a few more properties about them and I may not be able to do it soon. Yet, since this PR involves file deletion, it is maybe better to merge it now."},{"author":"drouhling","date":"2018-02-09T09:04:18Z","comment":"Agreed.\r\n\r\nI suggest:\r\n1. adding a very short documentation for Omega and Theta, saying explicitly that it is WIP, so that their existence is at least mentioned;\r\n2. merging this PR after this addition and open an issue for the missing properties;\r\n3. writing a more precise documentation once these properties are proven."},{"author":"affeldt-aist","date":"2018-02-22T02:06:42Z","comment":"Following drouhling's comment, I have added a few words about the existence of Omega and Theta and their wip status, update the file with wip, and rebased the issse33 branch on top of the current master branch. Issue33 to be kept opened until work on Omega and Theta is completed. Can maybe be merged to get rid of equiv.v.\r\n\r\n"},{"author":"drouhling","date":"2018-02-22T08:59:34Z","comment":"Cleaned up the history, ready to merge."}],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"drouhling","hash":"dcec376eb7d09cb234deab8b0b66d7814ca037d9","message":"move contents of equiv.v to landau.v and document","date":"2018-02-22T08:16:30Z"},{"author":"affeldt-aist","committer":"drouhling","hash":"9cfee5d6f22bf489836428e064b4f71382b3d930","message":"start adding documentation about big-Omega notation\nmarked work about big-Omega and big-Theta notations as work-in-progress","date":"2018-02-22T08:28:24Z"}]},{"author":"affeldt-aist","number":35,"diff_summary":[{"file":"hierarchy.v","status":"M","additions":35,"deletions":16}],"state":"merged","open_date":"2018-02-09T06:26:16Z","update_date":"2018-02-27T12:36:10Z","discussion":[{"author":"CohenCyril","date":"2018-02-09T08:33:45Z","comment":"I am not happy with `limD`: it is more appropriate for `lim (F + G) = lim F + lim G` (under the right convergence hypotheses). That's why I added the `f` prefix. But I was not happy with it too (and it's a bit of Coquelicots heritage too). Let's bring this discussion to #29 before merging."},{"author":"CohenCyril","date":"2018-02-09T09:29:15Z","comment":"Also, continuous being a unary predicate, it should be a suffix as in `add_continuous` etc..."},{"author":"drouhling","date":"2018-02-15T09:11:42Z","comment":"I agree with `add_continuous`; `continuousD` is more appropriate for\r\n`{for x, continuous f} -> {for x, continuous g} -> {for x, continuous (f + g)}`, which is a consequence of\r\n`add_continuous` and `continuous_comp` (still to be proven)."},{"author":"CohenCyril","date":"2018-02-22T10:09:08Z","comment":"@affeldt-aist thanks for the update, but can you rebase your branch against the current master?"},{"author":"CohenCyril","date":"2018-02-23T13:50:44Z","comment":"I did the rebase. Waiting for CI to check then merge"}],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"CohenCyril","hash":"d6235af44e135acfeb717abc064ea0bd92eeb432","message":"renaming:\nflim_add -> continuousD\nflim_scale -> continuousZ\nflim_scalr -> continuousZr\nflim_scall -> continuousZl\nflim_opp -> continuousN\nflim_mult -> limM\n\ncreated a section for limM and put together\nlimD and limZl lemmas as corollaries of continuous* lemmas","date":"2018-02-23T12:01:03Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"3cc3f9df9345bf5b70f32be2ac6c8c349dd5e7f6","message":"continuousD -> add_continuous\ncontinuousZ -> scale_continuous\ncontinuousZr -> scaler_continuous\ncontinuousZl -> scalel_continuous\ncontinuousN -> opp_continuous\nlimD -> lim_add\nlimZl -> lim_scalel\nlimM -> lim_mult","date":"2018-02-23T12:01:03Z"}]},{"author":"drouhling","number":30,"diff_summary":[{"file":"coq-alternate-reals/src/reals.v","status":"M","additions":149,"deletions":2}],"state":"merged","open_date":"2018-02-08T13:07:11Z","update_date":"2018-02-08T16:05:09Z","discussion":[{"author":"CohenCyril","date":"2018-02-08T13:18:26Z","comment":"Yes we should."},{"author":"CohenCyril","date":"2018-02-08T14:30:18Z","comment":"> Shouldn’t we move this file at the root level ?\r\n\r\n@strub I created issue #31 for this purpose.\r\n"}],"review_discussion":[{"author":"CohenCyril","file":"coq-alternate-reals/src/reals.v","date":"2018-02-08T14:29:14Z","comment":"This notation should be made local, or should be in the company of many similar definitions. "},{"author":"CohenCyril","file":"coq-alternate-reals/src/reals.v","date":"2018-02-08T14:31:01Z","comment":"(And if not local, moved to an extra_bool section)"}],"tags":[],"commits":[{"author":"drouhling","committer":"drouhling","hash":"02f94619133b672c2f4167b80b3d165358166a9b","message":"Implement infimum","date":"2018-02-08T14:37:20Z"}]},{"author":"affeldt-aist","number":28,"diff_summary":[{"file":"set.v","status":"M","additions":8,"deletions":0}],"state":"merged","open_date":"2018-02-08T06:33:36Z","update_date":"2018-02-08T16:07:34Z","discussion":[{"author":"CohenCyril","date":"2018-02-08T08:10:52Z","comment":"Lets's have the equational formulations as in mathcomp."},{"author":"CohenCyril","date":"2018-02-08T16:07:26Z","comment":"I did not see you updated your PR :+1:"}],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"e43526db4a5596354d3e7fbd20920cb35d1afcf0","message":"subsetI (with =), subIset","date":"2018-02-08T08:44:35Z"}]},{"author":"CohenCyril","number":26,"diff_summary":[{"file":"set.v","status":"M","additions":5,"deletions":7}],"state":"merged","open_date":"2018-02-07T19:32:52Z","update_date":"2018-02-08T08:31:04Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"CohenCyril","committer":"CohenCyril","hash":"b651d1f33d54b2d099045a59e06e3bfca6f9d025","message":"removing depency in ClassicalFacts","date":"2018-02-07T19:31:54Z"}]},{"author":"drouhling","number":21,"diff_summary":[{"file":"AUTHORS.md","status":"M","additions":297,"deletions":4},{"file":"posnum.v","status":"M","additions":297,"deletions":4},{"file":"set.v","status":"M","additions":297,"deletions":4},{"file":"topology.v","status":"M","additions":297,"deletions":4}],"state":"merged","open_date":"2018-02-07T09:49:41Z","update_date":"2018-02-07T18:44:02Z","discussion":[{"author":"CohenCyril","date":"2018-02-07T10:14:47Z","comment":"> in posnum.v:\r\n> \r\n> my understanding of the !! x notation is not perfect (in particular how exactly should it be used?) so I would like help for its documentation.\r\n\r\nThe notation `!! t` by Enrico Tassi (cf issue coq or mathcomp to be found... @gares would you know quickly which one?) triggers pretyping, to fill the holes of the term `t`. The main purpose is to trigger typeclass inference in the `body` of a ssreflect `have := !! body` tactic use case.\r\n(Ultimately this should be backported to coq/ssreflect cf issue #5)\r\n\r\n> the [gt0 of x] notation is defined twice, is there any reason?\r\n\r\nYes, once inside a section (so it disappears in its end) and once outside for exporting.\r\nIdeally the format should be factored out by a `Reserved Notation` at the beginning of the file, but this is independent from this PR about doc. We should open an issue for that (regrouping all problems of the same nature).\r\n\r\n> in topology.v:\r\n> \r\n> Filtered.Source is used several times to define canonical instances of Filtered.source. It would seem reasonable to export it to get rid of the Filtered prefix.\r\n\r\nMaybe maybe not, I do not know what's best. It's good it's been identified by documenting, but we should open an issue for that as it is independent from the doc PR.\r\n\r\n> I haven't documented in_filter since it seems to be only a tool for the near tactics, should I?\r\n\r\nIndeed, it's an internal construction, do not document.\r\n\r\n> I haven't documented filter_on and pfilter_on because I think something should be done about them. Sometimes we use these structures, sometimes we use the type classes Filter and ProperFilter (we also have UltraFilter). Shouldn't we choose one mechanism once and for all instead of mixing them, or do I miss the point of these structures?\r\n\r\nActually, Coquelicot's Hierarchy was designed using typeclasses for filters and we kept that. It would be a major review of the code to replace them by their canonical structure counterpart, and we should definitely try, as I suspect it would shorten some proof searchs (and fix the few ones that are broken). But it might introduce other problems that I did not assess yet. So let's open an issue.\r\n\r\nOn the other hand, in the current status of the code, the canonical structures `filter_on` and `pfilter_on` are the only way to make Landau work. TypeClass resolution can call Canonical Structure inference by unification, by CS has no mean to invoke TC resolution in the current state of this code. In other words, once you go CS, you cannot rely on TC anymore to do a complementary job.\r\n"},{"author":"drouhling","date":"2018-02-07T10:39:21Z","comment":"> > the [gt0 of x] notation is defined twice, is there any reason?\r\n>\r\n> Yes, once inside a section (so it disappears in its end) and once outside for exporting.\r\nIdeally the format should be factored out by a Reserved Notation at the beginning of the file, but this is independent from this PR about doc. We should open an issue for that (regrouping all problems of the same nature).\r\n\r\nIn fact, both are outside, hence my question."},{"author":"CohenCyril","date":"2018-02-07T15:03:17Z","comment":"> > > the [gt0 of x] notation is defined twice, is there any reason?\r\n>  >\r\n> > Yes, once inside a section (so it disappears in its end) and once outside for exporting.\r\n> > Ideally the format should be factored out by a Reserved Notation at the beginning of the file, but this is independent from this PR about doc. We should open an issue for that (regrouping all problems of the same nature).\r\n> \r\n> In fact, both are outside, hence my question.\r\n\r\nWoops, I guess its redundant then..."}],"review_discussion":[{"author":"CohenCyril","file":"posnum.v","date":"2018-02-07T10:30:33Z","comment":"- Add that goals of the form `x > 0` where `x` is canonically a posnum are solved automatically.\r\n- Add that posnum are canonically stable by addition, multiplication, inverse, min, sqrt, and all manifest positive natural numbers (i.e. (n.+1)%:R) are canonically positive"},{"author":"CohenCyril","file":"set.v","date":"2018-02-07T10:33:49Z","comment":"Explain we chose the option to have generic mixins over global canonical structures because we must let the user keep control over the definition he wants for equality. e.g. providing any type in Type with an equality canonical structure is dangerous because for example `nat := nat` equality could be inferred in two different ways (the generic uncomputable one by direct inference, and the `eqn` by delta-reduction first)"},{"author":"CohenCyril","file":"set.v","date":"2018-02-07T10:36:13Z","comment":"generic **boolean** membership predicate (from `ssrbool`)"},{"author":"CohenCyril","file":"set.v","date":"2018-02-07T10:38:14Z","comment":"\"non empty\" is too ambiguous, put the explicit definition in terms of sigma"},{"author":"CohenCyril","file":"set.v","date":"2018-02-07T10:38:53Z","comment":"`is_prop` was a bad choice of name, we should open an issue to rename it to `is_singleton`"},{"author":"CohenCyril","file":"topology.v","date":"2018-02-07T10:43:10Z","comment":"`ProperFilter'` is deprecated"},{"author":"CohenCyril","file":"topology.v","date":"2018-02-07T10:44:24Z","comment":"make the `x` apparent in `P`: `\\forall x \\near F, P x <-> F (fun x => P x).`"},{"author":"CohenCyril","file":"topology.v","date":"2018-02-07T10:45:15Z","comment":"`\\near x, P x == same as \\forall y \\near x, P y.` (this was wrong without explicit `x`)\r\n"},{"author":"CohenCyril","file":"topology.v","date":"2018-02-07T10:45:34Z","comment":"explicit `x` and `y`"},{"author":"CohenCyril","file":"topology.v","date":"2018-02-07T10:45:55Z","comment":"here too"},{"author":"CohenCyril","file":"topology.v","date":"2018-02-07T10:46:02Z","comment":"here too"},{"author":"CohenCyril","file":"topology.v","date":"2018-02-07T10:47:25Z","comment":"finite familiy"},{"author":"CohenCyril","file":"topology.v","date":"2018-02-07T10:51:49Z","comment":"Highlight Zorn's Lemma and Tychonof Theorem."},{"author":"CohenCyril","file":"topology.v","date":"2018-02-07T15:00:02Z","comment":"no need to put both `==` and `same as`, you can use `:=` instead"}],"tags":[],"commits":[{"author":"drouhling","committer":"drouhling","hash":"28328cec4087339d4504f76f5f49ef5149590c4a","message":"Add documentation to topology.v","date":"2018-02-07T09:18:02Z"},{"author":"drouhling","committer":"drouhling","hash":"f6096fccfcf40d0819f1ab46175e33e0ff5fd2bf","message":"Add documentation to set.v and posnum.v","date":"2018-02-07T09:18:02Z"},{"author":"drouhling","committer":"drouhling","hash":"8bd573c10c9221db91b04e47b21309bbe8e8014a","message":"Improve the documentation, remove duplicate notation, fix acknowledgements","date":"2018-02-07T15:51:12Z"}]},{"author":"affeldt-aist","number":20,"diff_summary":[{"file":"derive.v","status":"M","additions":23,"deletions":9}],"state":"merged","open_date":"2018-02-05T08:00:35Z","update_date":"2018-02-06T14:38:26Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"ff1a3cb585654b81b47a772af9f59d47fa110b63","message":"generalized littleo_id0 to littleo_lim0","date":"2018-02-05T07:56:30Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"f35b8bc90c1202243690b4de8e11c1cdaf61b626","message":"small generalization","date":"2018-02-06T05:21:06Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"61387ae98a1d2371c037c9c92646dcf587c7d13a","message":"shortening proof (please do not use insubd on littleo)","date":"2018-02-06T14:14:11Z"}]},{"author":"CohenCyril","number":18,"diff_summary":[{"file":"hierarchy.v","status":"M","additions":13,"deletions":0}],"state":"merged","open_date":"2018-01-26T14:48:25Z","update_date":"2018-01-26T15:39:46Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"CohenCyril","committer":"CohenCyril","hash":"28981b63fee523f0395387b749c17bb315efd97b","message":"Cauchy filter is equivalent to: (F,F) --> entourages","date":"2018-01-26T15:38:52Z"}]},{"author":"CohenCyril","number":17,"diff_summary":[{"file":"derive.v","status":"M","additions":81,"deletions":74},{"file":"equiv.v","status":"M","additions":81,"deletions":74},{"file":"hierarchy.v","status":"M","additions":81,"deletions":74},{"file":"landau.v","status":"M","additions":81,"deletions":74},{"file":"topology.v","status":"M","additions":81,"deletions":74}],"state":"merged","open_date":"2018-01-24T14:10:35Z","update_date":"2018-01-26T15:37:25Z","discussion":[{"author":"CohenCyril","date":"2018-01-26T15:37:20Z","comment":"Actually, I'm merging, it makes proof more \"ssreflect\"-like despite the discrepancy with => and : of ssreflect (hopefully, one day we can have ssr intro patterns in Tactic Notations)"}],"review_discussion":[],"tags":[],"commits":[{"author":"CohenCyril","committer":"CohenCyril","hash":"0caf507b15be1eaeaeae7037b0303a557e5dd856","message":"Notations near=> and near:\n\n- begin_near x becomes near=> x\n- begin_near2 x y becomes near=> x y\n- near becomes near:\n- have near F x becomes near F have x\n- disclaimers:\n  + near=> is *not* followed by an intro pattern but just one or two variables\n  + near: is *not* followed by a \"revert\" parttern but just one variable.","date":"2018-01-24T14:09:19Z"}]},{"author":"strub","number":16,"diff_summary":[{"file":"coq-alternate-reals/.gitignore","status":"A","additions":6579,"deletions":0},{"file":"coq-alternate-reals/LICENSE","status":"A","additions":6579,"deletions":0},{"file":"coq-alternate-reals/MANIFEST","status":"A","additions":6579,"deletions":0},{"file":"coq-alternate-reals/Makefile","status":"A","additions":6579,"deletions":0},{"file":"coq-alternate-reals/Makefile.common","status":"A","additions":6579,"deletions":0},{"file":"coq-alternate-reals/README.md","status":"A","additions":6579,"deletions":0},{"file":"coq-alternate-reals/SHOPPING.md","status":"A","additions":6579,"deletions":0},{"file":"coq-alternate-reals/opam","status":"A","additions":6579,"deletions":0},{"file":"coq-alternate-reals/scripts/distribution.py","status":"A","additions":6579,"deletions":0},{"file":"coq-alternate-reals/scripts/install-sh","status":"A","additions":6579,"deletions":0},{"file":"coq-alternate-reals/src/.dir-locals.el","status":"A","additions":6579,"deletions":0},{"file":"coq-alternate-reals/src/boolp.v","status":"A","additions":6579,"deletions":0},{"file":"coq-alternate-reals/src/coupling.v","status":"A","additions":6579,"deletions":0},{"file":"coq-alternate-reals/src/dedekind.v","status":"A","additions":6579,"deletions":0},{"file":"coq-alternate-reals/src/discrete.v","status":"A","additions":6579,"deletions":0},{"file":"coq-alternate-reals/src/distr.v","status":"A","additions":6579,"deletions":0},{"file":"coq-alternate-reals/src/filters.v","status":"A","additions":6579,"deletions":0},{"file":"coq-alternate-reals/src/reals.v","status":"A","additions":6579,"deletions":0},{"file":"coq-alternate-reals/src/realseq.v","status":"A","additions":6579,"deletions":0},{"file":"coq-alternate-reals/src/realsum.v","status":"A","additions":6579,"deletions":0},{"file":"coq-alternate-reals/src/sandbox.v","status":"A","additions":6579,"deletions":0},{"file":"coq-alternate-reals/src/xfinmap.v","status":"A","additions":6579,"deletions":0},{"file":"coq-alternate-reals/src/xsets.v","status":"A","additions":6579,"deletions":0}],"state":"merged","open_date":"2018-01-24T11:55:55Z","update_date":"2018-01-26T14:46:13Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"strub","committer":"strub","hash":"89c3a95049df6a547924fd3b139db30ee0b70cf7","message":"initial revision","date":"2015-03-25T16:22:40Z"},{"author":"strub","committer":"strub","hash":"a2cde0c8855ee82b724da24279e320c8d6e35bc2","message":"Import empty coq-dev layout.","date":"2015-03-25T16:32:52Z"},{"author":"amahboubi","committer":"amahboubi","hash":"507436368c56fcab3b572f41fd8f0021f4661b7c","message":"First attempt of axiomatization.","date":"2015-03-26T13:37:32Z"},{"author":"strub","committer":"strub","hash":"a26577dffae1162409b4fbd158bd5c4a41e9a594","message":"Recovering sup_total from axioms.","date":"2015-03-26T17:07:48Z"},{"author":"strub","committer":"strub","hash":"c28375a5c936f2827e6a5b6b76c9e6e26b7f34cd","message":"Refactor + split into multiple files\n\nTrash proofs (yet to be done) are now in attic.v","date":"2015-03-26T20:36:31Z"},{"author":"strub","committer":"strub","hash":"e0800e4d8fd4635560cc93ad805374ce786b58bf","message":"Primitive equivalence (i.e. not defined in terms of -> && /\\)\n\nNot yet used. Some morphisms are missing.","date":"2015-03-26T20:59:15Z"},{"author":"amahboubi","committer":"amahboubi","hash":"fd1002fd44f5af4b40793a84244bcd9677657257","message":"New attempt, with a really classical-flavoured axiomatization.\n\nWe model this axiomatization as a new structure, on top of the ones\nof ssrnum. Not sure this is the best device though. And this version\nhas a bug somewhere by the way (see the Admitted lemma, a failing\nprojection of the corresponding anonymous field in the record).","date":"2015-04-23T18:52:29Z"},{"author":"amahboubi","committer":"amahboubi","hash":"4fc92386ce7f7acac2b7f42bf6ff690eebfb62ee","message":"Wrong comment in previous commit.","date":"2015-04-23T19:04:00Z"},{"author":"strub","committer":"strub","hash":"f33722fbaf72529586a7923fc7f6a028389876ab","message":"Some reflection lemmas for base defs. + fix admits about sup/ub.","date":"2015-04-27T11:15:31Z"},{"author":"strub","committer":"strub","hash":"9a8a954431b443dc54741aed05a05b5019bfc657","message":"Commit current status (R -> Prop ==> collection)","date":"2015-05-14T12:56:32Z"},{"author":"strub","committer":"strub","hash":"6a546d6c3c1340611e1e816465253d4f1d625c35","message":"Export reals notations.","date":"2015-05-14T12:58:33Z"},{"author":"strub","committer":"strub","hash":"bdad5edb470294723eb89539ed666fdfb8fa090f","message":"Import construction of R[i] where R is a real field.\n\n(c) Copyright Microsoft Corporation and Inria - CeCILL-B","date":"2015-05-14T13:17:02Z"},{"author":"strub","committer":"strub","hash":"b737cd60ee618ae7f4387eb9b22c0c1b9f7903f7","message":"Playing a bit with complex.v\n\nEquipping R[i] with a 2 dimensional R vector space.","date":"2015-05-14T13:57:47Z"},{"author":"strub","committer":"strub","hash":"a78080b362f303ca5279c6b690590b5a3f514c6c","message":"Remove committed attic.v","date":"2015-05-14T14:24:31Z"},{"author":"strub","committer":"strub","hash":"c7e6caffe123778c04316b5eaa90b69f53539acf","message":"Definition of Dedekind cut.\n\nAssuming LPO && dec. of predicates, cuts are equipped with an eqType.","date":"2015-06-05T11:12:03Z"},{"author":"strub","committer":"strub","hash":"29b56658bb8d2bcdae367173d0f3799d97a8277c","message":"Equip dedekind cut with a choiceMixin structure.","date":"2015-06-05T13:06:06Z"},{"author":"strub","committer":"strub","hash":"ae41e43781e13f7c43705c8e90e16011ba1b2263","message":"Some facts about cut/rat comparison + embedding of Q in cuts.","date":"2015-06-05T15:32:59Z"},{"author":"strub","committer":"strub","hash":"54f766a67b0a28ac475addbd9ee91f5085bd6503","message":"Def. of the supremum.","date":"2015-06-05T15:48:10Z"},{"author":"strub","committer":"strub","hash":"de3472716201d70511066d215f623049d094d64c","message":"Merge commit '2dbf12bbb21932c2fac613ccbfc5a478ecefd2be' as 'collections'","date":"2015-07-07T09:38:36Z"},{"author":"strub","committer":"strub","hash":"2dbf12bbb21932c2fac613ccbfc5a478ecefd2be","message":"Squashed 'collections/' content from commit 4cbad15\n\ngit-subtree-dir: collections\ngit-subtree-split: 4cbad159fa50cc2ca72ea292d171c49eeb4044ce","date":"2015-07-07T09:38:36Z"},{"author":"strub","committer":"strub","hash":"092c959fc7248d3a639210af2095dbd73f47f6e1","message":"Move to external collections library.","date":"2015-07-07T09:48:02Z"},{"author":"strub","committer":"strub","hash":"14cc0f1dbba1bb5454c447c7751e50650b8861ed","message":"neiborhood.","date":"2015-07-07T10:15:53Z"},{"author":"strub","committer":"strub","hash":"ea998d2b312406905f35d54712909ffad2f73d48","message":"Def. of the limit of a sequence.","date":"2015-07-07T10:17:07Z"},{"author":"strub","committer":"strub","hash":"81049515a552b1b7c41699e0d2eda4f12b5525b8","message":"Makefile","date":"2015-09-30T09:56:26Z"},{"author":"strub","committer":"strub","hash":"1644375a76fe537056ceb0cf67d8935beff36e81","message":"Squashed 'collections/' changes from 4cbad15..2da9e77\n\n2da9e77 relations: more on the relations seq.\nccab748 relations: basic facts.\n4ba821b Import back results on rel. sym. + API cleanup.\n7a1d411 relations: transivity of intersection.\nd7933f4 ssrprop: orXp / andXp\n\ngit-subtree-dir: collections\ngit-subtree-split: 2da9e7784ff3c425ef25a9b9bea529d0aaf0e9cd","date":"2015-10-09T10:01:25Z"},{"author":"strub","committer":"strub","hash":"a984a75c2c6a1cd3c2f8818936b80d1d352332a5","message":"Merge commit '1644375a76fe537056ceb0cf67d8935beff36e81' into temp","date":"2015-10-09T10:01:25Z"},{"author":"strub","committer":"strub","hash":"b3f4f292910e199831481a64ba7fdffb79b95104","message":"rimset def. + reflection lemma.","date":"2015-10-09T10:01:32Z"},{"author":"strub","committer":"strub","hash":"78f74fa4ca17bc8bd34c177fbb9f7e346c9a090d","message":"Manual import of finmap.","date":"2015-10-09T10:01:38Z"},{"author":"strub","committer":"strub","hash":"781b0b121ace70a17421b19b6a796998048b20b7","message":"Some thoughts on countable families.","date":"2015-10-11T17:35:34Z"},{"author":"strub","committer":"strub","hash":"d0d5f8083e9ca006520ebd56faf058bfc97ec072","message":"Makefile","date":"2015-10-11T19:16:40Z"},{"author":"strub","committer":"strub","hash":"c2bba85852e98040ddbfd9f859bd3f096bd59d53","message":"Phant & al.","date":"2015-10-12T08:01:38Z"},{"author":"strub","committer":"strub","hash":"5213611317fbd0971047194e85b9acf38c4aa9d0","message":"Use prop. degen. for defining the `countable` predicate.","date":"2015-10-21T16:09:04Z"},{"author":"strub","committer":"strub","hash":"a17671d56377fc98b9f7754241c2b7564c241cbd","message":"Denumerable union of countable sets is countable.","date":"2015-10-23T09:59:04Z"},{"author":"strub","committer":"strub","hash":"8202e367208d859e7bb57bd9f07c798fd07c4c93","message":"Playing with notations.","date":"2015-11-13T11:37:20Z"},{"author":"amahboubi","committer":"amahboubi","hash":"d2218e80a2a0533da40f1117a9cf03d77c12b173","message":"Stub of theory & notations for asbool.","date":"2015-11-30T14:32:01Z"},{"author":"amahboubi","committer":"amahboubi","hash":"e7956a8f493c697d17cf57124992eeab42f23c1f","message":"More experiments with squashing Prop in bool.\n\nRemoved rsets and introduced a constant predp for Prop valued predicates.\nNot sure that reflect is useful anymore but I kept it as such for the moment.","date":"2015-11-30T15:49:54Z"},{"author":"amahboubi","committer":"amahboubi","hash":"49685d32ccc85cd7fdd7be1dde07ffe2d9e3c6ee","message":"Adapted discrete to boolp.\n\nWarning: as such, l.143 raises an error in the {fset T} notation. Why?","date":"2015-11-30T15:56:21Z"},{"author":"strub","committer":"strub","hash":"c3c4e72f61bd889012932c7928a31fa699f786af","message":"`\\is a Rint` predicate + relative th. + proof that `floor \\is a Rint`\n\nThe script of `isint_floor` seems a bit long at this point.","date":"2015-12-04T20:50:08Z"},{"author":"strub","committer":"strub","hash":"98e58783989dd2e0952560d69022f3bea8bab09f","message":"reals.v do not use rset anymore.\n\n - discrete && realanalysis have still to be adapted.\n - min/max/pick do not make sense anymore since everything\n   is now boolean. Remove them.\n\nIt is still unclear to me if predp should be used instead of pred.","date":"2015-12-05T19:53:46Z"},{"author":"strub","committer":"strub","hash":"8050cbd3fcd3f203112278a1435bca03c659be64","message":"Remove `collections` subtree.","date":"2015-12-05T19:58:59Z"},{"author":"strub","committer":"strub","hash":"c7fa3fc2de2b41168f5d5d3cf89fadc833773eb2","message":"Stop using ssrprop.","date":"2015-12-05T20:03:18Z"},{"author":"strub","committer":"strub","hash":"c3134566f51e07b597eebb6b677366a6ee3788da","message":"Adapt discrete.v to the new library.","date":"2015-12-06T13:54:44Z"},{"author":"strub","committer":"strub","hash":"b2ee303ee6759cc7006cb7a53831dce09226b46f","message":"A bit more on countable sets.","date":"2015-12-10T17:26:12Z"},{"author":"strub","committer":"strub","hash":"2a67d86dfac66a035dc3be20340c3815fd100087","message":"End proof of `summable => countable support`\n\nIn addition:\n - more reflection lemmas in boolp. This is drafty and a naming convention has to be found.\n - ppts about `floor/ifloor` and the relevant orderings.","date":"2015-12-21T12:53:07Z"},{"author":"strub","committer":"strub","hash":"a61fd13af83f2b42e8f99b65b9311a49c00643a3","message":"Nits in proof scripts.","date":"2015-12-21T12:55:28Z"},{"author":"strub","committer":"strub","hash":"7ff932281fa99d159e7fa89dd319f897c6e18888","message":"remove unused theories","date":"2016-01-05T16:42:19Z"},{"author":"strub","committer":"strub","hash":"1a3c10f7230a4309e1f4c472115f5d6f39f680c8","message":"Realanalysis is done. Can go to beach.","date":"2016-01-05T17:00:05Z"},{"author":"amahboubi","committer":"amahboubi","hash":"fe53085ab1b74f1b7a446298471a1025994a9de8","message":"Typo","date":"2016-01-15T14:33:46Z"},{"author":"amahboubi","committer":"amahboubi","hash":"fd0b71434f11e3c0571a81427f4c8253e0d61435","message":"Small clean-up experiment.","date":"2016-01-15T17:54:43Z"},{"author":"amahboubi","committer":"amahboubi","hash":"b0bf79be2758cf54fabbbd199ddf7ceec578eec8","message":"Example of missing stuff for choice.","date":"2016-01-26T09:08:12Z"},{"author":"amahboubi","committer":"amahboubi","hash":"1873286e915844d939f7ecb5d27c770e7614d0a3","message":"Clean up.\n\nSome infrastrcture lemmas on classical logic are still missing.\nIdeally we shouldn't see much fiddling with conversions under squashing\nat the level of proofs on finiteness for instance.","date":"2016-01-26T12:25:13Z"},{"author":"strub","committer":"strub","hash":"fc30ad2cdad7115fde4c999df7c028d901298eb9","message":"coq 8.5 (makefile)","date":"2016-03-21T10:39:00Z"},{"author":"strub","committer":"strub","hash":"d8a0f6a416bd015b3b02695ec20411b9c5a4917c","message":"Moving to Coq 8.5 + ssr-dev","date":"2016-03-25T09:06:12Z"},{"author":"amahboubi","committer":"amahboubi","hash":"816963b72dc7328bdb714e41d4d2738de12e21cd","message":"Shorter proof of neg_or.\n\nI must have been very tired on that day...","date":"2016-04-06T10:37:49Z"},{"author":"strub","committer":"strub","hash":"c6740019ef2b56a83026c54051bb4755c78c32f7","message":"Pull out distribution def.","date":"2016-04-13T08:38:43Z"},{"author":"strub","committer":"strub","hash":"20076d8081791231bf17464a109d6f9c1ff4f982","message":"Summation of non-positive functions.","date":"2016-04-13T08:42:59Z"},{"author":"strub","committer":"strub","hash":"8a9002fb3c3b66a626ae5b5732c4ffe5e9ff367d","message":"Specify `sup` for sets without a sup (= 0).","date":"2016-04-13T08:47:27Z"},{"author":"strub","committer":"strub","hash":"cb01716c075b867eb592855e95a31339b9abc4c0","message":"Remove unused 3rdparty libs.","date":"2016-04-14T14:47:01Z"},{"author":"strub","committer":"strub","hash":"7160a898159cc107bd6ce1f9db08837c1d2f2995","message":"Define extended reals + ordering (and basic ppties)","date":"2016-04-14T14:52:16Z"},{"author":"strub","committer":"strub","hash":"dae5b2c96bc5e82e3377ddf99515e3bc6d9169d7","message":"Lim. of a sequence + basic algebraic ppties.","date":"2016-04-14T14:54:55Z"},{"author":"strub","committer":"strub","hash":"1f7f8919c9e5202b83a5f0f64e53680736c19689","message":"Factor out summation from discrete to its own module.","date":"2016-04-14T14:56:30Z"},{"author":"strub","committer":"strub","hash":"3838c354e0d47505f61b610b8b68a9d9d1b631c5","message":"More results on sup/ub.","date":"2016-04-14T14:58:27Z"},{"author":"strub","committer":"strub","hash":"b05067a9ee1ca720516fdf55949a438ab9e96932","message":"Extending finmap with basic results on bigops.","date":"2016-04-14T15:01:51Z"},{"author":"strub","committer":"strub","hash":"1931fdfc6944b638d3669258ea06ffec43e5e6d2","message":"Starting proving properties on summations.","date":"2016-04-14T15:02:20Z"},{"author":"strub","committer":"strub","hash":"c997df9859c05b828442bfbbc397a6d9ddb0a9df","message":"Import distr. def.","date":"2016-04-14T15:04:00Z"},{"author":"strub","committer":"strub","hash":"c9eabc074f2d171fa7fb5cd541533893919ddfdf","message":"Misc. on bool/Prop and sup/ub.","date":"2016-04-15T11:02:27Z"},{"author":"strub","committer":"strub","hash":"8d1e9cb0716e84e12b9d9847d57c978a76d95379","message":"Convergence of monotonous seq.","date":"2016-04-15T12:43:45Z"},{"author":"strub","committer":"strub","hash":"e6f9ab98429f9b42964b8b39d65bda63bcaba171","message":"unset SsrOldRewriteGoalsOrder + dead code elim.","date":"2016-04-15T12:52:13Z"},{"author":"strub","committer":"strub","hash":"3e35f1e073f07cae34f39fbef7ee1b05704d2e21","message":"Progressing on cnv <-> sum.","date":"2016-04-15T15:00:13Z"},{"author":"strub","committer":"strub","hash":"53d8c3f20d21e2217f1fc900cc6892f4e7f944b6","message":"Nits.","date":"2016-04-16T21:02:43Z"},{"author":"strub","committer":"strub","hash":"8e1ad799ae9ae80d3c1d97d0a5f5b6d772eb6e01","message":"Push needed distr defs for phl.","date":"2016-04-17T08:56:55Z"},{"author":"strub","committer":"strub","hash":"0f2ce3fcc15569205446f15b916089610b5e8ff4","message":"Starting defining some basic distributions.","date":"2016-04-17T19:47:20Z"},{"author":"strub","committer":"strub","hash":"3bfb45a3312f74ab8670b2babcbf212854c4a821","message":"WIP (distr)","date":"2016-04-18T09:54:34Z"},{"author":"strub","committer":"strub","hash":"a574b026e5acd3bcc4717130e3ad1dffd8871424","message":"WIP (results needed by ubhl)","date":"2016-04-18T10:57:19Z"},{"author":"strub","committer":"strub","hash":"68979c47a63a5513e1d9d5627f20576a42c59cdd","message":"move needed results on pr","date":"2016-04-18T14:12:03Z"},{"author":"strub","committer":"strub","hash":"3880945b11286423273c8c528856dc4a39b1889d","message":"Defining conditional prob/esp + admitted results.","date":"2016-04-19T14:19:46Z"},{"author":"strub","committer":"strub","hash":"3bdd8376194af0626ee28dcbc3a8f97e85c7d02b","message":"an example to play with: path coupling lemma","date":"2016-04-22T20:06:00Z"},{"author":"strub","committer":"strub","hash":"80477ec8e39c2340fb08bc01a48c70ae0f32de25","message":"construct \\hat{F}^k","date":"2016-04-23T21:33:32Z"},{"author":"strub","committer":"strub","hash":"6c97153031de760b30f4c9bb8df553f9463a83c8","message":"Better construction of \\hat{F}^k.","date":"2016-04-24T10:14:46Z"},{"author":"strub","committer":"strub","hash":"b290fa7450584c08d64f1c630feefd87da2aa042","message":"Pruning some admits about sumations.","date":"2016-04-25T14:43:06Z"},{"author":"strub","committer":"strub","hash":"12366b13934702c93928df6673b5418719366678","message":"Kill some admits in sumation/distr.","date":"2016-04-25T19:32:17Z"},{"author":"strub","committer":"strub","hash":"5cf2c5de4db62e64b01227f1dc8d0d4c841082ee","message":"Some ereal arith. (up to monoid + opposite)\n\n+ some related ordering lemmas.","date":"2016-04-26T13:37:09Z"},{"author":"strub","committer":"strub","hash":"b85d154f472c5111a4eb7086e8e3b105eb9e1277","message":"More on limits + ordering. Def. op limit operator.","date":"2016-04-26T13:37:31Z"},{"author":"strub","committer":"strub","hash":"77cd907819e29e2e76f89e7f69f8c31e8445171a","message":"Done with (0 <= S) -> (partial sum of S --> sum S).","date":"2016-04-26T13:38:00Z"},{"author":"strub","committer":"strub","hash":"9d3d940700c02387dc36f2ce1da88a21422e4b8c","message":"More on bigop / fset / ordering.","date":"2016-04-26T16:48:59Z"},{"author":"strub","committer":"strub","hash":"795e4263a409cc1694c862fbc926283fbaabff33","message":"Proof simplification.","date":"2016-04-26T16:49:07Z"},{"author":"strub","committer":"strub","hash":"79d049f10574c87709605ce9f55064e86ebf988d","message":"A bit more on bigop & fset + psum over a finite type.","date":"2016-04-27T08:29:17Z"},{"author":"strub","committer":"strub","hash":"eb6c73893951c1cb12bdf6a2430a4847572b008f","message":"Admitting some needed lemmas in coqsec\n\nSome of them clearly miss side conditions.","date":"2016-05-05T11:12:55Z"},{"author":"strub","committer":"strub","hash":"9223f1d419f772f74e3a139034c2af9dc4dce052","message":"Limit of a distr. sequence is a distr.","date":"2016-05-09T13:11:03Z"},{"author":"strub","committer":"strub","hash":"75d262cc6e141cb47d10513a9e8620d6b282048d","message":"Killing some admits about distributions.","date":"2016-05-09T15:03:06Z"},{"author":"strub","committer":"strub","hash":"2f455b3b2dcd45b3c266d4011b9816577fd628f7","message":"Nits.","date":"2016-05-09T19:44:25Z"},{"author":"strub","committer":"strub","hash":"5110356de02ed930ba343cd07d8fcb5c42c46123","message":"More needed (& admitted) facts on proba.","date":"2016-05-09T19:58:04Z"},{"author":"strub","committer":"strub","hash":"9d3d731907c94c8c9f1785156003b243f653c12e","message":"dlet_null","date":"2016-05-09T20:03:09Z"},{"author":"strub","committer":"strub","hash":"823aa2f7fa4581e5cfec34821b0af2723b1d3f0e","message":"Nits.","date":"2016-05-10T14:06:24Z"},{"author":"strub","committer":"strub","hash":"e66d50bcd7bac6c266185eea117bdc75f11b1ac2","message":"Nits.","date":"2016-05-11T14:10:10Z"},{"author":"strub","committer":"strub","hash":"bbf4ed7c9b4ed2a2291df7b52ef10619949434d0","message":"Fix some admits","date":"2016-05-12T17:49:38Z"},{"author":"strub","committer":"strub","hash":"210a7fbb3c6481c5dcb7ccc0d5489db5f5900c16","message":"dfst, dsnd -> notations.","date":"2016-05-12T17:52:38Z"},{"author":"strub","committer":"strub","hash":"d3cee8bf76fc934e8d72f775abe53560691fd5f2","message":"Nits on marginals.","date":"2016-05-12T20:13:14Z"},{"author":"strub","committer":"strub","hash":"1616651a89f30b0a4627c70544968981b42d5662","message":"Some base properties on distr.","date":"2016-05-23T11:47:40Z"},{"author":"strub","committer":"strub","hash":"0bc6063ea5f89ca01fbce3967a9cbfed4fdaddce","message":"More needed results.","date":"2016-05-23T13:23:18Z"},{"author":"strub","committer":"strub","hash":"794a6d0ebba3b1636d2e011a392c5772046c6d85","message":"Swapping distr. on pairs.","date":"2016-05-24T09:27:35Z"},{"author":"strub","committer":"strub","hash":"8ff73fddd743bd241be02f435f641a7c73bcb006","message":"Prove that mrat is a distribution.","date":"2016-05-25T08:13:07Z"},{"author":"strub","committer":"strub","hash":"e2d4857628587593bc0ffcf477e9f6d17f102ac8","message":"Fixing some admits, adding more (on distr).","date":"2016-05-30T10:39:43Z"},{"author":"strub","committer":"strub","hash":"f43ef0818e6097abb0b8c576dd0d53f4a6b5d6d5","message":"nits","date":"2016-06-14T10:04:34Z"},{"author":"strub","committer":"strub","hash":"c900291555755655ecabeab86abd36b77792946c","message":"nits","date":"2016-07-06T22:17:20Z"},{"author":"strub","committer":"strub","hash":"226dba471492507c839da70533c89fe2da3095d5","message":"bits","date":"2016-07-06T22:34:16Z"},{"author":"strub","committer":"strub","hash":"b925f3411863788e85b4fad2ddf9e9c6abb90fec","message":"added needed facts (admitted)","date":"2016-07-13T14:54:04Z"},{"author":"strub","committer":"strub","hash":"fb638306eb1d6c917419f5eca849c8486958c002","message":"more basic facts on distribtutions","date":"2016-07-21T10:50:09Z"},{"author":"strub","committer":"strub","hash":"1dcfcfcbe45d888806c1605714c96a9e7d131e83","message":"nits on eq. of pr.","date":"2016-07-25T22:13:28Z"},{"author":"strub","committer":"strub","hash":"4e5d1a494b6225104180ebb9331d53dae5b4cf60","message":"fix a bunch of admits","date":"2016-07-29T21:57:27Z"},{"author":"strub","committer":"strub","hash":"95661f782066f9c6823fce39a7a3aa6e26a0ff0c","message":"fix a bunch of admits","date":"2016-07-30T20:43:29Z"},{"author":"strub","committer":"strub","hash":"2acdfdc1a43fd020574df8442487af4237434dea","message":"fix some admits","date":"2016-08-03T08:02:37Z"},{"author":"strub","committer":"strub","hash":"efd30e2ced5440e3926a98d62e65d512cbfa92ae","message":"import results on distr. from phl","date":"2016-08-03T09:57:40Z"},{"author":"strub","committer":"strub","hash":"2ae52ab80600e643da6fa29614880efec05046b1","message":"import results on distr. from phl","date":"2016-08-03T11:00:30Z"},{"author":"strub","committer":"strub","hash":"7e1e7798356d8d877227bcfd7c4549c2a264ca00","message":"killing admits","date":"2016-08-03T22:22:21Z"},{"author":"strub","committer":"strub","hash":"c5bce0b0f04dc45daee15a7c91d4b4026bab4754","message":"killing more admits","date":"2016-08-04T09:15:30Z"},{"author":"strub","committer":"strub","hash":"b614dcd24ae1fb8305326ff052cc129b5f594467","message":"a bit more on summation + fixing admits","date":"2016-08-04T10:17:20Z"},{"author":"strub","committer":"strub","hash":"a66151e450efed03393451eab385439d7d614f41","message":"Nearly killed all admits in `distr`","date":"2016-08-04T14:23:48Z"},{"author":"strub","committer":"strub","hash":"4bc9e920bceaf9bafcbcb1fa26f5c71cac0a38ff","message":"`count` target (Makefile)","date":"2016-08-04T20:33:27Z"},{"author":"strub","committer":"strub","hash":"8d400e24b8d01ca0a88631aaa582cb4d21437dde","message":"Killing admits on summations (reindexing)","date":"2016-08-04T20:33:48Z"},{"author":"strub","committer":"strub","hash":"3e9d6c818f248085f96c187005af8a9e41706b9b","message":"partitioning lemma for psum (the proof script is far too long...)","date":"2016-08-06T21:38:08Z"},{"author":"strub","committer":"strub","hash":"25abde19ccd827b21b926a4437b8b2634b74a020","message":"add axiom for real closed field into realType","date":"2016-08-23T16:50:52Z"},{"author":"strub","committer":"strub","hash":"2c42ea2db39d3d971c9d8e39a33e78462b491cb1","message":"Linearity of summation.","date":"2016-09-01T10:11:23Z"},{"author":"strub","committer":"strub","hash":"50f472522cbf10b8f48725c9856928de7af1d358","message":"`psum` as the limit of partial sums, regardless of the enumeration order.","date":"2016-09-28T11:01:25Z"},{"author":"strub","committer":"strub","hash":"4158f5f09604bd005e9dc28c8f88b2fb0ad30379","message":"More facts on expectation.","date":"2016-10-06T18:52:58Z"},{"author":"strub","committer":"strub","hash":"051b7ec52c722a8d08b4ea4d3162b678a541dd21","message":"Jensen's inequality (finite case).","date":"2016-10-14T10:50:07Z"},{"author":"strub","committer":"strub","hash":"f30daafe3c3af73c6e89f96a00160579cd6fa0d2","message":"pre-metric spaces def","date":"2016-11-16T11:55:20Z"},{"author":"strub","committer":"strub","hash":"e1ce1f9b2c92d9c993d1be678781f842016f8573","message":"SHOPPING","date":"2017-02-01T15:53:50Z"},{"author":"strub","committer":"strub","hash":"48495b83e41e87b8bb274749abb54ee269ecce1a","message":"remove local copy of finmap","date":"2017-02-02T16:17:55Z"},{"author":"strub","committer":"strub","hash":"bea7624a55943e11cbb19be39330854b8fd3fbd6","message":"up to date with finmap","date":"2017-02-02T17:09:22Z"},{"author":"strub","committer":"strub","hash":"dcdee5dbb34d11c5d00b94c06e7dbd4211147500","message":"equip (pred T) with a porderType","date":"2017-02-02T18:10:54Z"},{"author":"strub","committer":"strub","hash":"ec10c0448200171d3073ae93cd73b3bf317b900c","message":"equip (pred _) with a TCB-lattice","date":"2017-02-03T13:02:07Z"},{"author":"strub","committer":"strub","hash":"b5ebf63dc32fd737fd23b1fbbf40ba2ff1513a26","message":"restriction of a distribution","date":"2017-02-15T23:12:27Z"},{"author":"strub","committer":"strub","hash":"b70ebcd94df97e8cabfffdd681f8cab85facfd7d","message":"fix local compilation","date":"2017-02-15T23:27:26Z"},{"author":"strub","committer":"strub","hash":"f4c79ce477b8acf4b3f33b7ee2468cb0b2717e74","message":"[reals] Fix MANIFEST","date":"2017-02-17T23:34:57Z"},{"author":"strub","committer":"strub","hash":"6f364cc316e20b5394ad2cb9298003152290eb18","message":"some results on dlet","date":"2017-02-21T23:01:13Z"},{"author":"strub","committer":"strub","hash":"92ace8e56009c52b613ef65c488b83afead46568","message":"Use external finmap","date":"2017-03-15T06:35:31Z"},{"author":"strub","committer":"strub","hash":"1808ac7f48bfe3ccf6a04cc1d644bf4bee7557c5","message":"opam","date":"2017-03-15T06:35:31Z"},{"author":"strub","committer":"strub","hash":"50256a9bd6419e51c9b39bdebb9cf9a2d37771d6","message":"ringType -> realType in notation","date":"2017-03-17T15:13:56Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"8e3e86d0062cc9e1bc01b0b826ddf038523166e6","message":"Fixing RealType in an ad-hoc way","date":"2017-11-09T12:14:00Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"6e80951485d5d19da17c4dba4d96901310073f44","message":"Generalizing nonempty, ub, down, has_ub and has_sup","date":"2017-11-09T12:25:15Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"f51ed5f8ac9f897c2420d6aff451848d5d27d1e9","message":"Generalizing upper bound theory","date":"2017-11-09T12:39:55Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"aa3a5b3fefb72b970a91c1a7e08c98d9412145cd","message":"deriving propositional extensionality from the axioms of boolp","date":"2017-11-09T13:56:35Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"7b012190f6699b6750ae1a073d4783d8ec1815c9","message":"fixing asboolE -> asboolW","date":"2017-11-09T13:58:42Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"acc577eed31985cb92d9d3c5cf06e28a11502dd6","message":"added lemmas to handle forall and exists in a better way.","date":"2017-11-09T15:42:53Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"aa61c4221f57a75b48dee544b867bcd70241fadd","message":"adding a few extensionality theorems","date":"2017-11-28T17:49:57Z"},{"author":"strub","committer":"strub","hash":"536bfcd67ef19cfeeefe12ddc669c69e19d6a3c5","message":"Add 'coq-alternate-reals/' from commit 'aa61c4221f57a75b48dee544b867bcd70241fadd'\n\ngit-subtree-dir: coq-alternate-reals\ngit-subtree-mainline: 9c7a6ddbb7a938fb2af0deade318d9869215544b\ngit-subtree-split: aa61c4221f57a75b48dee544b867bcd70241fadd","date":"2018-01-24T11:52:13Z"}]},{"author":"drouhling","number":15,"diff_summary":[{"file":"FILES.md","status":"A","additions":1935,"deletions":1924},{"file":"_CoqProject","status":"A","additions":1935,"deletions":1924},{"file":"derive.v","status":"A","additions":1935,"deletions":1924},{"file":"equiv.v","status":"A","additions":1935,"deletions":1924},{"file":"hierarchy.v","status":"A","additions":1935,"deletions":1924},{"file":"landau.v","status":"A","additions":1935,"deletions":1924},{"file":"topology.v","status":"A","additions":1935,"deletions":1924}],"state":"merged","open_date":"2018-01-19T15:45:33Z","update_date":"2018-01-23T15:41:02Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"drouhling","committer":"drouhling","hash":"3a242334af18c93991bccc8ad78e709b64d46347","message":"Separate topological spaces from the hierarchy\n\n- move filteredType and topologicalType to a new file topology.v\n- move filters-related definitions and theorems (Filter structure, limits,\n  particular filters, near) to topology.v\n- move topological notions (closed sets, different compact set notions,\n  tychonoff) to topology.v","date":"2018-01-22T08:45:44Z"}]},{"author":"drouhling","number":14,"diff_summary":[{"file":"Rstruct.v","status":"M","additions":206,"deletions":64},{"file":"derive.v","status":"M","additions":206,"deletions":64},{"file":"hierarchy.v","status":"M","additions":206,"deletions":64},{"file":"set.v","status":"M","additions":206,"deletions":64}],"state":"merged","open_date":"2018-01-18T09:14:00Z","update_date":"2018-01-19T14:25:09Z","discussion":[{"author":"drouhling","date":"2018-01-18T12:25:37Z","comment":"The generalization to matrices shouldn't take much time.\r\n\r\nI am not sure however to understand your second point. Vectors inherit the structure of the type of the coordinates so if I have only a `uniformType` I won't be able to build this partial `normedModType` mixin."}],"review_discussion":[{"author":"CohenCyril","file":"hierarchy.v","date":"2018-01-18T10:16:59Z","comment":"`matrix_lmodMixin` is already defined in mathcomp/algebra/matrix https://github.com/math-comp/math-comp/blob/d4bd8f6a29a225cf7418c54008b6493501c62bd3/mathcomp/algebra/matrix.v#L1277 isn't it the same?"},{"author":"CohenCyril","file":"hierarchy.v","date":"2018-01-18T10:22:34Z","comment":"I am a bit surprised that you need to use the internal `Pack` here. Is there a problem (bug?) using `NormedModType` instead?\r\n(Additionally, using Pack directly is dangerous because it might mean the intermediate structures from the hierarchy have not been declared as canonical first...)"},{"author":"drouhling","file":"hierarchy.v","date":"2018-01-18T10:44:26Z","comment":"It isn't. The mixin from mathcomp is defined for matrices over a `ringType`, while I need a `lmodType` structure for matrices over a `lmodType`.\r\n\r\nThe fact that matrices over a `ringType` have a `lmodType` structure can be derived from this and the fact that a `ringType` is a `lmodType` over itself. Maybe this should be an addition to mathcomp."},{"author":"drouhling","file":"hierarchy.v","date":"2018-01-18T12:18:15Z","comment":"This is related to your other comment. Since I am using a non canonical `lmodType` structure, the inference fails using `NormedModType` and I have to give the structure explicitely."},{"author":"drouhling","file":"hierarchy.v","date":"2018-01-18T12:41:30Z","comment":"Unfolding the notation and filling in the holes proves that indeed every structure but the `lmodType` one is inferred. Coq accepts the following lines:\r\n```\r\nCanonical rV_NormedType :=\r\n  @NormedModule.pack _ (Phant K) 'rV[V]_n.+1 _ _ _\r\n  rV_NormedModMixin (LmodType _ _ (matrix_LModMixin _ _ _))\r\n  (GRing.Lmodule.Class (matrix_LModMixin _ _ _)) id _ _ id _ id.\r\n```"},{"author":"CohenCyril","file":"hierarchy.v","date":"2018-01-18T21:39:24Z","comment":"Yes, maybe this is worth opening an issue in mathcomp. I'm still not sure how to solve this problem yet..."}],"tags":[],"commits":[{"author":"drouhling","committer":"drouhling","hash":"5a0b6b3dd76eb2fd6407eb3c2456d955476cedd0","message":"Instantiate the hierarchy on matrices","date":"2018-01-19T14:12:13Z"}]},{"author":"drouhling","number":11,"diff_summary":[{"file":"hierarchy.v","status":"M","additions":266,"deletions":265},{"file":"set.v","status":"M","additions":266,"deletions":265}],"state":"merged","open_date":"2018-01-16T09:56:12Z","update_date":"2018-01-17T09:39:19Z","discussion":[],"review_discussion":[],"tags":[],"commits":[{"author":"drouhling","committer":"drouhling","hash":"ed1103b849b4b80dc2dc2d4ab427bdb83abd2d2a","message":"Move pointedType and Zorn's Lemma to set.v","date":"2018-01-16T09:47:32Z"}]}]