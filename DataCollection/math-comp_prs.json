[
  {
    "author": "shiranaiyo",
    "number": 990,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 55,
        "deletions": 1
      },
      {
        "file": "mathcomp/ssreflect/fintype.v",
        "status": "M",
        "additions": 55,
        "deletions": 1
      }
    ],
    "state": "open",
    "open_date": "2023-04-06T16:58:00Z",
    "update_date": "2023-04-06T16:58:11Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "shiranaiyo",
        "committer": "shiranaiyo",
        "hash": "a85581adeac76ffdd6417c8c07c9dced5a939ee1",
        "message": "add subset lemmas",
        "date": "2023-04-06T16:45:35Z"
      },
      {
        "author": "shiranaiyo",
        "committer": "shiranaiyo",
        "hash": "b8a7b08bf76c73554ab9c6fde9a943cdee935292",
        "message": "add changelog and adequate style",
        "date": "2023-04-06T16:55:19Z"
      }
    ]
  },
  {
    "author": "jouvelot",
    "number": 989,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 8,
        "deletions": 0
      },
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 8,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2023-04-04T16:32:55Z",
    "update_date": "2023-04-06T06:21:55Z",
    "discussion": [
      {
        "author": "proux01",
        "date": "2023-04-06T06:21:43Z",
        "comment": "I don't know why the CI is not running (the `pull_request_target` jobs are the master branch without the PR, there should be some `pull_request` jobs with the PR) but this looks innocuous enough so let's merge."
      }
    ],
    "review_discussion": [
      {
        "author": "thery",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2023-04-05T15:54:51Z",
        "comment": "is this normal ? `subset_mapP`, `take_min`, `take_taker`"
      }
    ],
    "tags": [
      {
        "tag": "TODO: HB port",
        "description": ""
      }
    ],
    "commits": [
      {
        "author": "jouvelot",
        "committer": "proux01",
        "hash": "79481669609dae95dacd27ddd16c606a085c9154",
        "message": "Adding find_pred0 and find_predT to seq.v.",
        "date": "2023-04-05T20:38:31Z"
      }
    ]
  },
  {
    "author": "proux01",
    "number": 988,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 6,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2023-04-04T14:56:37Z",
    "update_date": "2023-04-04T14:58:37Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [
      {
        "tag": "TODO: HB port",
        "description": ""
      }
    ],
    "commits": [
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "7fd3759d46a7f4b2d8d3f98b713b48b6909621a5",
        "message": "Forgotten changelog in #981",
        "date": "2023-04-04T14:55:22Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 987,
    "diff_summary": [
      {
        "file": ".github/pull_request_template.md",
        "status": "M",
        "additions": 25,
        "deletions": 4
      }
    ],
    "state": "open",
    "open_date": "2023-03-31T09:42:27Z",
    "update_date": "2023-04-06T01:31:16Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2023-04-05T09:38:37Z",
        "comment": "> I fixed a typo and copy-pasted forgotten files from MathComp-Analysis\r\n\r\nI created https://github.com/math-comp/tools to avoid duplication of code. I think we should remove the ad-hoc copies in both math-comp and analysis repositories"
      }
    ],
    "review_discussion": [],
    "tags": [
      {
        "tag": "needs: rebase",
        "description": "PR which is not rebased: check the target is appropriate (generally master) and rebase on top of it."
      }
    ],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "web-flow",
        "hash": "7e640f4353b0b15731b064fb5213211afdffe122",
        "message": "Adding recommendations about mathcomp 2 to the pull request template",
        "date": "2023-03-31T09:41:52Z"
      },
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "5457b53e76e4f9d96cf63fdc0fec7b6435336c20",
        "message": "typo, add changes.* files\n\nCo-authored-by: Cyril Cohen <cohen@crans.org>",
        "date": "2023-04-05T05:53:45Z"
      },
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "abca7c878099bae505d0e4520395ba7467d8afd0",
        "message": "redirect to tools",
        "date": "2023-04-06T01:31:09Z"
      }
    ]
  },
  {
    "author": "proux01",
    "number": 986,
    "diff_summary": [
      {
        "file": ".github/workflows/nix-action-coq-8.13.yml",
        "status": "M",
        "additions": 393,
        "deletions": 136
      },
      {
        "file": ".github/workflows/nix-action-coq-8.14.yml",
        "status": "M",
        "additions": 393,
        "deletions": 136
      },
      {
        "file": ".github/workflows/nix-action-coq-8.16.yml",
        "status": "M",
        "additions": 393,
        "deletions": 136
      },
      {
        "file": ".github/workflows/nix-action-coq-8.17.yml",
        "status": "M",
        "additions": 393,
        "deletions": 136
      },
      {
        "file": ".github/workflows/nix-action-coq-master.yml",
        "status": "M",
        "additions": 393,
        "deletions": 136
      },
      {
        "file": ".nix/config.nix",
        "status": "M",
        "additions": 393,
        "deletions": 136
      },
      {
        "file": ".nix/coq-nix-toolbox.nix",
        "status": "M",
        "additions": 393,
        "deletions": 136
      },
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 393,
        "deletions": 136
      },
      {
        "file": "mathcomp/algebra/ssrnum.v",
        "status": "M",
        "additions": 393,
        "deletions": 136
      }
    ],
    "state": "open",
    "open_date": "2023-03-28T15:38:03Z",
    "update_date": "2023-04-05T11:36:29Z",
    "discussion": [
      {
        "author": "thery",
        "date": "2023-03-28T15:58:14Z",
        "comment": "Should we also generalize ler_psqrt?\r\n````coq\r\nLemma ler_psqrt : {in @Num.nneg R &, {mono sqrt : a b / a <= b}}.\r\nProof.\r\napply: le_mono_in => x y x_gt0 y_gt0.\r\nrewrite !lt_neqAle => /andP[neq_xy le_xy].\r\nby rewrite ler_wsqrtr // eqr_sqrt // neq_xy.\r\nQed. \r\n\r\nLemma ler_sqrt a b : 0 <= b -> (sqrt a <= sqrt b) = (a <= b).\r\nProof.\r\nmove=> b_ge0; have [a_le0|a_gt0] := ler0P a; last first.\r\n  by rewrite ler_psqrt // nnegrE ltW.\r\nby rewrite ler0_sqrtr // sqrtr_ge0 (le_trans a_le0).\r\nQed.\r\n````"
      },
      {
        "author": "pi8027",
        "date": "2023-03-28T16:33:29Z",
        "comment": "Do we have apery (which uses this lemma) in CI? I couldn't find it."
      },
      {
        "author": "proux01",
        "date": "2023-03-28T16:43:53Z",
        "comment": "No, there seems to be no Nix derivation for apery. Should I add one based on the OPAM package (is it up to date ?)."
      },
      {
        "author": "pi8027",
        "date": "2023-03-28T16:51:43Z",
        "comment": "@proux01 Yes please."
      },
      {
        "author": "proux01",
        "date": "2023-04-05T11:36:29Z",
        "comment": "@pi8027 I added algebra-tactics and apery in the CI and apery is indeed the only thing to break. Would you welcome an overlay that make apery depend on MC >= 1.17 or do you need backward compatibility?"
      }
    ],
    "review_discussion": [],
    "tags": [
      {
        "tag": "TODO: HB port",
        "description": ""
      }
    ],
    "commits": [
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "a377b2b9eb94c1ae6137702148e938853d1f378e",
        "message": "Generalize ler_sqrt\n\nCo-authored-by: thery <Laurent.Thery@inria.fr>",
        "date": "2023-04-04T15:00:29Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "1def22e719646579bed742185ba0ffb65f2e345b",
        "message": "[CI] Add algebra-tactics and apery",
        "date": "2023-04-04T15:01:54Z"
      }
    ]
  },
  {
    "author": "proux01",
    "number": 985,
    "diff_summary": [
      {
        "file": ".nix/config.nix",
        "status": "M",
        "additions": 2,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2023-03-28T11:18:22Z",
    "update_date": "2023-03-29T08:22:30Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "10e7828ff501e3252542cfa8b66356716bc19669",
        "message": "CoqEAL dropped support for Coq 8.13 and 8.14",
        "date": "2023-03-28T11:16:55Z"
      }
    ]
  },
  {
    "author": "KimayaBedarkar",
    "number": 984,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 5,
        "deletions": 2
      },
      {
        "file": "mathcomp/ssreflect/ssrnat.v",
        "status": "M",
        "additions": 5,
        "deletions": 2
      }
    ],
    "state": "merged",
    "open_date": "2023-03-20T15:47:16Z",
    "update_date": "2023-03-20T17:54:34Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2023-03-20T17:54:05Z",
        "comment": "Thanks for your contribution.\r\nThe only failure is in Coqeal and seems unrelated.\r\nLet's merge."
      }
    ],
    "review_discussion": [],
    "tags": [
      {
        "tag": "TODO: HB port",
        "description": ""
      }
    ],
    "commits": [
      {
        "author": "KimayaBedarkar",
        "committer": "KimayaBedarkar",
        "hash": "8b68b27918eea4905dedf9a6f05c4ec8ce08aa89",
        "message": "Add left associativity for doubling and halving operators",
        "date": "2023-03-20T15:12:19Z"
      },
      {
        "author": "KimayaBedarkar",
        "committer": "KimayaBedarkar",
        "hash": "4db79f33769c5447d11f3cfd0be5e3107f113d1e",
        "message": "add entry in CHANGELOG_UNRELEASED",
        "date": "2023-03-20T16:08:05Z"
      }
    ]
  },
  {
    "author": "affeldt-aist",
    "number": 983,
    "diff_summary": [
      {
        "file": ".github/pull_request_template.md",
        "status": "M",
        "additions": 2,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2023-03-12T08:13:35Z",
    "update_date": "2023-03-31T09:44:23Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "2048538da72787943bf18bdf4770183c7e326ca9",
        "message": "add ptr to contributing guide",
        "date": "2023-03-12T08:15:20Z"
      },
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "142f93f3e31dc362e543529015c81ccf62cbf119",
        "message": "upd page name",
        "date": "2023-03-14T10:16:48Z"
      }
    ]
  },
  {
    "author": "affeldt-aist",
    "number": 982,
    "diff_summary": [],
    "state": "closed",
    "open_date": "2023-03-12T08:06:05Z",
    "update_date": "2023-03-12T08:10:31Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": []
  },
  {
    "author": "marinalopezchamosa",
    "number": 981,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/ssrnat.v",
        "status": "M",
        "additions": 51,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2023-03-10T11:34:07Z",
    "update_date": "2023-04-04T12:33:13Z",
    "discussion": [
      {
        "author": "proux01",
        "date": "2023-03-13T08:57:03Z",
        "comment": "Thanks for your contribution! Some of these lemmas may indeed be useful. However, I wonder whether we really want to add all of them. Indeed, some rewritings can be obtained with patterns or the mechanism in [ssrAC](https://github.com/math-comp/math-comp/blob/master/mathcomp/ssreflect/ssrAC.v) as examplified below. Could you remove those lemmas from your pull request? (I guess the remaining lemmas should be the `___lemma` in https://github.com/math-comp/math-comp/issues/643 but I haven't thoroughly checked)\r\n\r\n```Coq\r\nFrom mathcomp Require Import ssreflect ssrfun ssrbool ssrnat bigop ssrAC.\r\n\r\nLemma ex1 m n p : (m + n) + p = (n + m) + p.\r\nProof. by rewrite [X in X + _]addnC. Qed.\r\n\r\nLemma ex2 m n p : (m + n) + p = (n + p) + m.\r\nProof. by rewrite (ACl (2*3*1))/=. Qed.\r\n\r\nLemma ex3 m n p : m + (n + p) = p + (m + n).\r\nProof. by rewrite (AC (1*2) (3*(1*2)))/=. Qed.\r\n```"
      },
      {
        "author": "marinalopezchamosa",
        "date": "2023-03-22T15:38:04Z",
        "comment": "Please let us know if any more changes are needed!"
      },
      {
        "author": "proux01",
        "date": "2023-04-04T12:34:47Z",
        "comment": "Thanks @marinalopezchamosa for your contribution and your patience with the reviewing process (as you can see, this issue #643 was particularly tricky)."
      }
    ],
    "review_discussion": [
      {
        "author": "proux01",
        "file": "mathcomp/ssreflect/ssrnat.v",
        "date": "2023-03-23T08:28:47Z",
        "comment": "What's the motivation for this renaming? I have no opinion about it, but in any case it should come with a deprecation notation to help users adapt to the change:\r\n```suggestion\r\nLemma addnCAl m n p: m + n + p = n + (p + m).\r\nProof. by rewrite (addnC m) addnC addnCA. Qed.\r\n\r\n#[deprecated(since=\"mathcomp 1.17.0, note=\"use addnCAl instead\"\")]\r\nNotation addnACl := addnCAl.\r\n```\r\n"
      },
      {
        "author": "proux01",
        "file": "mathcomp/ssreflect/ssrnat.v",
        "date": "2023-03-23T08:37:09Z",
        "comment": "The `=>` can be directly used on `rewrite`, removing the need for `move`\r\n```suggestion\r\nProof. by rewrite -subn_eq0 => /eqP->; rewrite addn0. Qed.\r\n```"
      },
      {
        "author": "proux01",
        "file": "mathcomp/ssreflect/ssrnat.v",
        "date": "2023-03-23T08:40:02Z",
        "comment": "For the sake of completeness, I would expect in addition\r\n```Coq\r\nLemma addnBl_leq m n p : m <= n -> (m - n) + p = p.\r\n```\r\nOk, it's below, please move it up here"
      },
      {
        "author": "proux01",
        "file": "mathcomp/ssreflect/ssrnat.v",
        "date": "2023-03-23T08:41:38Z",
        "comment": "Maybe the order of arguments could be\r\n```suggestion\r\nLemma addnBr_leq n p m : n <= p -> m + (n - p) = m.\r\n```\r\nso that if someone ever wants to rewrite from right to left, it is somewhat easier to provide the missing `n` and `p`"
      },
      {
        "author": "proux01",
        "file": "mathcomp/ssreflect/ssrnat.v",
        "date": "2023-03-23T08:44:51Z",
        "comment": "```suggestion\r\nLemma subnDAC m n p : m - (n + p) = (m - p) - n.\r\n```\r\nass the Commutation rather happens on the right"
      },
      {
        "author": "proux01",
        "file": "mathcomp/ssreflect/ssrnat.v",
        "date": "2023-03-23T08:47:22Z",
        "comment": "```suggestion\r\nLemma subnCDA m n p : m - (n + p) = m - p - n.\r\n```"
      },
      {
        "author": "proux01",
        "file": "mathcomp/ssreflect/ssrnat.v",
        "date": "2023-03-23T08:47:46Z",
        "comment": "```suggestion\r\nLemma addnCBA m n p : p <= n -> m + (n - p) = n + m - p.\r\n```"
      },
      {
        "author": "proux01",
        "file": "mathcomp/ssreflect/ssrnat.v",
        "date": "2023-03-23T08:53:35Z",
        "comment": "```suggestion\r\nLemma subnCBA m n p : p <= n ->\tm - (n - p) = p + m - n.\r\n```"
      },
      {
        "author": "proux01",
        "file": "mathcomp/ssreflect/ssrnat.v",
        "date": "2023-03-23T08:54:46Z",
        "comment": "```suggestion\r\nProof. by rewrite -subn_eq0 => /eqP->; rewrite subn0. Qed.\r\n```"
      },
      {
        "author": "proux01",
        "file": "mathcomp/ssreflect/ssrnat.v",
        "date": "2023-03-23T08:55:24Z",
        "comment": "maybe\r\n```suggestion\r\nLemma subnBr_leq n p m : n <= p -> m - (n - p) = m.\r\n```\r\nin case someone want to use it right to left"
      },
      {
        "author": "proux01",
        "file": "mathcomp/ssreflect/ssrnat.v",
        "date": "2023-03-23T08:58:51Z",
        "comment": "Maybe add\r\n```Coq\r\nLemma subnBl_leq m n p : n <= m -> (m - n) - p = 0.\r\n```\r\nfor completeness"
      },
      {
        "author": "proux01",
        "file": "mathcomp/ssreflect/ssrnat.v",
        "date": "2023-03-23T09:06:11Z",
        "comment": "maybe\r\n```suggestion\r\nLemma subDnAC m n p : p <= n -> m + n - p = n - p + m.\r\n```"
      },
      {
        "author": "proux01",
        "file": "mathcomp/ssreflect/ssrnat.v",
        "date": "2023-03-23T09:10:21Z",
        "comment": "```suggestion\r\nLemma subDnCA m n p : p <= m -> m + n - p = n + (m - p).\r\n```"
      },
      {
        "author": "proux01",
        "file": "mathcomp/ssreflect/ssrnat.v",
        "date": "2023-03-23T09:14:31Z",
        "comment": "```suggestion\r\nLemma subDnCAC m n p : m <= p -> m + n - p = n - (p - m).\r\n```"
      },
      {
        "author": "proux01",
        "file": "mathcomp/ssreflect/ssrnat.v",
        "date": "2023-03-23T09:23:17Z",
        "comment": "```suggestion\r\nLemma addnBC m n : m - n + n = n - m + m.\r\n```"
      },
      {
        "author": "proux01",
        "file": "mathcomp/ssreflect/ssrnat.v",
        "date": "2023-03-23T09:24:01Z",
        "comment": "```suggestion\r\nLemma addnCB m n : m - n + n = m + (n - m).\r\n```"
      },
      {
        "author": "proux01",
        "file": "mathcomp/ssreflect/ssrnat.v",
        "date": "2023-03-23T09:26:37Z",
        "comment": "```suggestion\r\nLemma addBnAC m n p : n <= m -> m - n + p = p + m - n.\r\n```"
      },
      {
        "author": "proux01",
        "file": "mathcomp/ssreflect/ssrnat.v",
        "date": "2023-03-23T09:28:22Z",
        "comment": "```suggestion\r\nLemma addBnA m n p : n <= m -> p <= n -> m - n + p = m - (n - p).\r\n```"
      },
      {
        "author": "proux01",
        "file": "mathcomp/ssreflect/ssrnat.v",
        "date": "2023-03-23T09:33:20Z",
        "comment": "```suggestion\r\nLemma addBnCAC m n p : n <= m -> n <= p -> m - n + p = p - n + m.\r\n```"
      },
      {
        "author": "proux01",
        "file": "mathcomp/ssreflect/ssrnat.v",
        "date": "2023-03-23T09:37:02Z",
        "comment": "Move below `addnBr_leq`"
      },
      {
        "author": "proux01",
        "file": "mathcomp/ssreflect/ssrnat.v",
        "date": "2023-03-23T09:37:51Z",
        "comment": "```suggestion\r\nLemma subBnAC m n p : m - n - p = m - (p + n).\r\n```"
      },
      {
        "author": "marinalopezchamosa",
        "file": "mathcomp/ssreflect/ssrnat.v",
        "date": "2023-04-03T13:56:33Z",
        "comment": "This renaming was an accident. It's now back to addnACl"
      },
      {
        "author": "marinalopezchamosa",
        "file": "mathcomp/ssreflect/ssrnat.v",
        "date": "2023-04-03T13:57:31Z",
        "comment": "Did you mean something else? I think this lemma is not true"
      },
      {
        "author": "ybertot",
        "file": "mathcomp/ssreflect/ssrnat.v",
        "date": "2023-04-03T14:12:44Z",
        "comment": "Maybe it is just a matter of replacing `n <= m` with `m <= n`. "
      }
    ],
    "tags": [
      {
        "tag": "TODO: HB port",
        "description": ""
      }
    ],
    "commits": [
      {
        "author": "marinalopezchamosa",
        "hash": "fa9fb1b0bf06797ba04e5e94e7cf54bc823500dd",
        "message": "Contribution issue-643",
        "date": "2023-03-22T15:33:12Z"
      },
      {
        "hash": "7536c519355a7120557f3870f767fb8587df48e7",
        "message": "Requested changes",
        "date": "2023-03-22T15:33:12Z"
      },
      {
        "author": "marinalopezchamosa",
        "hash": "5d2de0334bbbec18e20dda846b5ac6c6ffaafa42",
        "message": "Update mathcomp/ssreflect/ssrnat.v\n\nCo-authored-by: Pierre Roux <pierre.roux@onera.fr>",
        "date": "2023-04-03T13:53:36Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "86a65812e51cfe0b8feb01ad815d5e2024eb6846",
        "message": "Add subnBl_leq",
        "date": "2023-04-04T09:16:39Z"
      }
    ]
  },
  {
    "author": "proux01",
    "number": 980,
    "diff_summary": [
      {
        "file": ".github/workflows/nix-action-coq-8.13.yml",
        "status": "D",
        "additions": 218,
        "deletions": 4052
      },
      {
        "file": ".github/workflows/nix-action-coq-8.14.yml",
        "status": "D",
        "additions": 218,
        "deletions": 4052
      },
      {
        "file": ".gitlab-ci.yml",
        "status": "D",
        "additions": 218,
        "deletions": 4052
      },
      {
        "file": ".nix/config.nix",
        "status": "D",
        "additions": 218,
        "deletions": 4052
      },
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "D",
        "additions": 218,
        "deletions": 4052
      },
      {
        "file": "coq-mathcomp-ssreflect.opam",
        "status": "D",
        "additions": 218,
        "deletions": 4052
      },
      {
        "file": "mathcomp/ssreflect/order.v",
        "status": "D",
        "additions": 218,
        "deletions": 4052
      },
      {
        "file": "mathcomp/ssreflect/ssrbool.v",
        "status": "D",
        "additions": 218,
        "deletions": 4052
      }
    ],
    "state": "open",
    "open_date": "2023-03-09T14:15:51Z",
    "update_date": "2023-03-31T09:43:09Z",
    "discussion": [
      {
        "author": "pi8027",
        "date": "2023-03-09T14:31:34Z",
        "comment": "While this change seems useful in practice, I have two remarks:\r\n- I think that `order_scope` should not be opened unless you are reasoning about abstract order instances.\r\n- Opening `ring_scope` after `order_scope` seems better in general since it should give precedence to the notations in `ring_scope` in parsing:\r\n  > If a notation is defined in multiple scopes, Coq uses the interpretation from the most recently opened notation scope or declared lonely notation."
      },
      {
        "author": "proux01",
        "date": "2023-03-09T14:50:37Z",
        "comment": ">     * I think that `order_scope` should not be opened unless you are reasoning about abstract order instances.\r\n> \r\n>     * Opening `ring_scope` after `order_scope` seems better in general since it should give precedence to the notations in `ring_scope` in parsing:\r\n>       > If a notation is defined in multiple scopes, Coq uses the interpretation from the most recently opened notation scope or declared lonely notation.\r\n\r\nBut then , how would you handle two concrete orders, one being on some numDomainType but not the other?\r\n"
      },
      {
        "author": "pi8027",
        "date": "2023-03-09T15:38:07Z",
        "comment": "> But then, how would you handle two concrete orders, one being on some numDomainType but not the other?\r\n\r\nIn that case, I would open only `ring_scope` and explicitly write `%O` (or another scope delimiter if applicable) for the other."
      },
      {
        "author": "proux01",
        "date": "2023-03-09T15:44:00Z",
        "comment": "That sounds pretty inconvenient, why shouldn't we open `order_scope`? Is there something bad with having a generic `_ <= _` notation for all porder types? or some other reason?"
      },
      {
        "author": "proux01",
        "date": "2023-03-17T09:53:51Z",
        "comment": "@pi8027 I have given a bit more though to this and I realize maybe I'm just messing something up with my displays. Here is my use case:\r\n* orders on `numDomainType` have a notation on `ring_display` that  parses and prints as `(_ <= _)%R`\r\n* in Analysis (c.f. [constructive_ereal.v](https://github.com/math-comp/analysis/blob/master/theories/constructive_ereal.v)), the extended reals have a notation on `ereal_display` that also parses and prints as `(_ <= _)%E`\r\n\r\nMaybe we should just reuse `ring_display` in `constructive_ereal.v` as we don't really want the display to differ from the one of `ring_display` after all? Doing this, I wouldn't have to open `order_scope` (or put `%E` scope annotations everywhere) but only `ring_scope` in my usecase."
      },
      {
        "author": "pi8027",
        "date": "2023-03-17T10:44:41Z",
        "comment": "@proux01 From my superficial understanding, it is safer to have both `ring_display` (resp. `ring_scope`) and `ereal_display` (resp. `ereal_scope`). But `constructive_ereal.v` seems to lack specialized notations for `bottom` and `top` (and thus both `bottom` and `GRing.zero` are printed as `0`?). What about redefining `+oo` and `-oo` as such?"
      },
      {
        "author": "proux01",
        "date": "2023-03-17T10:55:18Z",
        "comment": "> `constructive_ereal.v` seems to lack specialized notations for `bottom` and `top` (and thus both `bottom` and `GRing.zero` are printed as `0`?). What about redefining `+oo` and `-oo` as such?\r\n\r\nI agree, thanks for pointing this out.\r\n\r\n> @proux01 From my superficial understanding, it is safer to have both ring_display (resp. ring_scope) and ereal_display (resp. ereal_scope).\r\n\r\nWell, what's the point of having two different displays with the same... display? When writing pen and paper proofs I write `_ <= _` both for reals and extended reals, I would find it nice if I didn't need to change one to `(_ <= _)%R` or `(_ <= _)%E` when formalizing.\r\n"
      },
      {
        "author": "pi8027",
        "date": "2023-03-17T11:17:57Z",
        "comment": "> > @proux01 From my superficial understanding, it is safer to have both ring_display (resp. ring_scope) and ereal_display (resp. ereal_scope).\r\n> \r\n> Well, what's the point of having two different displays with the same... display? When writing pen and paper proofs I write `_ <= _` both for reals and extended reals, I would find it nice if I didn't need to change one to `(_ <= _)%R` or `(_ <= _)%E` when formalizing.\r\n\r\nI think that mixing `(_ <= _)%R` and `(_ <= _)%E` in printing is potential pitfall, although I don't have any concrete example."
      },
      {
        "author": "proux01",
        "date": "2023-03-17T12:02:51Z",
        "comment": "Could you elaborate on your idea? I just don't grasp it unfortunately."
      },
      {
        "author": "pi8027",
        "date": "2023-03-17T12:51:47Z",
        "comment": "Sure. `(x%:E <= y%:E)%E` should be convertible with `(x <= y)%R`, but we have to unfold `Order.le` in the first term to see this fact. IIUC, keyed matching does not unfold the head symbol to see this kind of fact (it checks whether the arguments are respectively convertible after finding a candidate subterm based on the head symbol). So it seems that ssr tactics may not find the right subterm you expect, unless we have a clear distinction between these two things."
      },
      {
        "author": "pi8027",
        "date": "2023-03-17T12:54:36Z",
        "comment": "To be clear, I'm not against the changes introduced by this PR, but saying that there is a discipline in the use of displays, notation scopes, etc. We can open an issue on the analysis repo and continue the discussion."
      },
      {
        "author": "CohenCyril",
        "date": "2023-03-20T12:16:11Z",
        "comment": "@pi8027 I agree we should have a more general discussion, but I also think the notations `0` and `1` were particularly bad in the first place :sweat_smile: \r\n\r\n@proux01 wow you went a long way to preserve backward compatiblity, but I'm not sure it's desirable, and it's definitely error prone since, unless I'm mistaken, you missed a few rescoping in the notations you added (e.g. ``x `&` y`` in `orderBT_scope` does not rescope `x` and `y` properly and it's not the only the only place).\r\nI would be more aggressive and add `\\bot` and `\\top` and remove `0` and  `1` from `order_scope`, and risk breaking compat and add declarations in the few (I expect) places where it's really necessary.\r\nWe could also add unscoped `0%O` and `1%O` parsing only notations, maybe we can even hack the display to trigger a deprecation warning?\r\n\r\n"
      },
      {
        "author": "proux01",
        "date": "2023-03-20T19:48:17Z",
        "comment": "> @pi8027 I agree we should have a more general discussion\r\n\r\nI added the point to the agenda of the next Analysis meeting (extended reals are still there currently)\r\n\r\n> I would be more aggressive and add `\\bot` and `\\top` and remove `0` and `1` from `order_scope`, and risk breaking compat and add declarations in the few (I expect) places where it's really necessary.\r\n\r\nIndeed, done that\r\n\r\n> We could also add unscoped `0%O` and `1%O` parsing only notations,\r\n\r\nDone, this doesn't work with Coq 8.13 and 8.14 (apparently something got fixed/improved in 8.15), so I think this is a good time to drop support for 8.13 and 8.14, if we agree CI is now green.\r\n\r\n> maybe we can even hack the display to trigger a deprecation warning?\r\n\r\nDidn't manage to get anything along this line but since the notation is parsing only, the printing should already be an indice that something changed (beside it doesn't seem to be much used (apparently only mczify in the CI)).\r\n"
      },
      {
        "author": "pi8027",
        "date": "2023-03-21T14:49:57Z",
        "comment": "Just in case, I opened a PR to fix mczify math-comp/mczify#46."
      },
      {
        "author": "proux01",
        "date": "2023-03-22T12:40:58Z",
        "comment": "Thanks, no hurry, that'll only be actually required when we'll remove the new deprecated `0%O` and `1%O` notations."
      }
    ],
    "review_discussion": [],
    "tags": [
      {
        "tag": "needs: rebase",
        "description": "PR which is not rebased: check the target is appropriate (generally master) and rebase on top of it."
      },
      {
        "tag": "TODO: HB port",
        "description": ""
      }
    ],
    "commits": [
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "8ea00d190d87ecfc61efaf356a0ecff669988f3e",
        "message": "Drop support for Coq 8.13 and 8.14\n\nThe 0%O notation doesn't work on them.",
        "date": "2023-03-29T15:17:27Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "400ba6e6bd879c54c6838a272cbbdf18e378d1ef",
        "message": "Add notation `0%O` and `1%O` in order.v\n\nIn order to remove `0` and `1` (for bottom and top of lattices)\nthat are conflicting with neutral elements of rings.",
        "date": "2023-03-29T15:17:27Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "1d93ebf63ebe1317af24185c98b7bb13440e6d5e",
        "message": "Add notations \\bot and \\top",
        "date": "2023-03-29T15:17:27Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "49d3cced3171037940a977c3eab12ae39aa1bce0",
        "message": "Replace O / 1 with \\bot / \\top",
        "date": "2023-03-29T15:17:27Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "c002db59760666959d263f7cea2af8a846745863",
        "message": "Remove notations `0` and `1` in order_scope",
        "date": "2023-03-29T15:17:27Z"
      }
    ]
  },
  {
    "author": "proux01",
    "number": 979,
    "diff_summary": [
      {
        "file": ".github/workflows/nix-action-coq-8.17.yml",
        "status": "D",
        "additions": 72,
        "deletions": 133
      },
      {
        "file": ".nix/coq-nix-toolbox.nix",
        "status": "D",
        "additions": 72,
        "deletions": 133
      },
      {
        "file": ".nix/coq-overlays/extructures/default.nix",
        "status": "D",
        "additions": 72,
        "deletions": 133
      },
      {
        "file": ".nix/coq-overlays/graph-theory/default.nix",
        "status": "D",
        "additions": 72,
        "deletions": 133
      },
      {
        "file": ".nix/coq-overlays/mathcomp-analysis/default.nix",
        "status": "D",
        "additions": 72,
        "deletions": 133
      }
    ],
    "state": "merged",
    "open_date": "2023-03-09T13:56:36Z",
    "update_date": "2023-03-09T18:09:10Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "8012fce583eee33a051e828e935dc8d0e40b113c",
        "message": "[CI] Update Nix toolbox\n\nFollowing the merge of\nhttps://github.com/coq-community/coq-nix-toolbox/pull/137",
        "date": "2023-03-09T15:04:28Z"
      }
    ]
  },
  {
    "author": "proux01",
    "number": 977,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 6,
        "deletions": 1
      },
      {
        "file": "mathcomp/ssreflect/order.v",
        "status": "M",
        "additions": 6,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2023-03-06T17:11:15Z",
    "update_date": "2023-03-08T09:41:41Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "082c28dc6562c3d947d52b74bd2a6bb592941562",
        "message": "Fix the \\max notation",
        "date": "2023-03-06T17:03:34Z"
      }
    ]
  },
  {
    "author": "thery",
    "number": 976,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 3,
        "deletions": 1
      },
      {
        "file": "mathcomp/algebra/intdiv.v",
        "status": "M",
        "additions": 3,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2023-03-02T16:05:59Z",
    "update_date": "2023-03-03T07:27:30Z",
    "discussion": [
      {
        "author": "proux01",
        "date": "2023-03-03T07:27:38Z",
        "comment": "Thanks"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "thery",
        "committer": "thery",
        "hash": "1675197159ce54f0447c668d20ede27074364ad6",
        "message": "simpler type for zcontents",
        "date": "2023-03-02T16:07:31Z"
      }
    ]
  },
  {
    "author": "thery",
    "number": 975,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 3,
        "deletions": 2
      },
      {
        "file": "mathcomp/algebra/intdiv.v",
        "status": "M",
        "additions": 3,
        "deletions": 2
      }
    ],
    "state": "merged",
    "open_date": "2023-03-02T15:55:57Z",
    "update_date": "2023-03-03T08:37:44Z",
    "discussion": [
      {
        "author": "proux01",
        "date": "2023-03-03T08:37:51Z",
        "comment": "Thanks"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "thery",
        "committer": "proux01",
        "hash": "96b498c33e94c41607357271071f14369a527fb5",
        "message": "clean type for divz",
        "date": "2023-03-03T07:31:41Z"
      }
    ]
  },
  {
    "author": "t6s",
    "number": 974,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 11,
        "deletions": 4
      },
      {
        "file": "mathcomp/ssreflect/order.v",
        "status": "M",
        "additions": 11,
        "deletions": 4
      }
    ],
    "state": "merged",
    "open_date": "2023-03-02T11:44:39Z",
    "update_date": "2023-03-03T08:39:48Z",
    "discussion": [
      {
        "author": "thery",
        "date": "2023-03-02T13:33:02Z",
        "comment": "> I wonder wether we should go through a deprecation phase?\r\n\r\nThese theorems have not be released no?"
      },
      {
        "author": "proux01",
        "date": "2023-03-02T13:41:28Z",
        "comment": "> These theorems have not be released no?\r\n\r\nWell, they appeared in 1.16.0 we just released last month.\r\nBut CI is green, so I hope we wouldn't hurt too many users with the change.\r\n"
      },
      {
        "author": "proux01",
        "date": "2023-03-03T08:39:34Z",
        "comment": "Thanks @t6s for the backport"
      }
    ],
    "review_discussion": [
      {
        "author": "proux01",
        "file": "mathcomp/ssreflect/order.v",
        "date": "2023-03-02T12:02:31Z",
        "comment": "nitpicking\r\n```suggestion\r\nby move=> Pi0 Hx; rewrite (bigmin_eq_arg Pi0) //; eexists=> //; case: arg_minP.\r\n```"
      },
      {
        "author": "proux01",
        "file": "mathcomp/ssreflect/order.v",
        "date": "2023-03-02T12:02:47Z",
        "comment": "```suggestion\r\nby move=> Pi0 Hx; rewrite (bigmax_eq_arg Pi0) //; eexists=> //; case: arg_maxP.\r\n```"
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "t6s",
        "committer": "t6s",
        "hash": "1a5d743fb39bedb3498fae2bd555ab1aeb2ecbe0",
        "message": "fix and strengthen eq_bigmax and eq_bigmin in order.v",
        "date": "2023-03-02T11:42:56Z"
      },
      {
        "author": "t6s",
        "committer": "t6s",
        "hash": "9d493dd8b1431055a7ac94fa831e622b46da3e78",
        "message": "style",
        "date": "2023-03-02T19:11:46Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 973,
    "diff_summary": [
      {
        "file": ".github/workflows/nix-action-coq-8.13.yml",
        "status": "M",
        "additions": 383,
        "deletions": 383
      },
      {
        "file": ".github/workflows/nix-action-coq-8.14.yml",
        "status": "M",
        "additions": 383,
        "deletions": 383
      },
      {
        "file": ".github/workflows/nix-action-coq-8.15.yml",
        "status": "M",
        "additions": 383,
        "deletions": 383
      },
      {
        "file": ".github/workflows/nix-action-coq-8.16.yml",
        "status": "M",
        "additions": 383,
        "deletions": 383
      },
      {
        "file": ".github/workflows/nix-action-coq-8.17.yml",
        "status": "M",
        "additions": 383,
        "deletions": 383
      },
      {
        "file": ".github/workflows/nix-action-coq-master.yml",
        "status": "M",
        "additions": 383,
        "deletions": 383
      },
      {
        "file": ".nix/coq-nix-toolbox.nix",
        "status": "M",
        "additions": 383,
        "deletions": 383
      }
    ],
    "state": "merged",
    "open_date": "2023-03-01T14:24:19Z",
    "update_date": "2023-03-01T14:26:06Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "95763685e5a6755c74df1d24317259705f7fe45b",
        "message": "update to the latest nix toolbox",
        "date": "2023-03-01T14:22:34Z"
      }
    ]
  },
  {
    "author": "thery",
    "number": 972,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 49,
        "deletions": 0
      },
      {
        "file": "mathcomp/algebra/finalg.v",
        "status": "M",
        "additions": 49,
        "deletions": 0
      },
      {
        "file": "mathcomp/algebra/ssralg.v",
        "status": "M",
        "additions": 49,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2023-02-28T15:38:43Z",
    "update_date": "2023-04-01T15:28:53Z",
    "discussion": [
      {
        "author": "thery",
        "date": "2023-03-28T10:46:33Z",
        "comment": "the `coqeal` errors seem unrelated\r\n"
      },
      {
        "author": "proux01",
        "date": "2023-03-28T11:18:39Z",
        "comment": "Indeed: https://github.com/math-comp/math-comp/pull/985"
      },
      {
        "author": "CohenCyril",
        "date": "2023-03-28T11:43:44Z",
        "comment": "Still the changelog should mention the existence of the new instances :\r\n- in `ssralg.v`, the type `bool` is canonically a `fieldType` with additive law `addb` and multiplicative law `andb`\r\n- in `finalg.v`, the type `bool` is canonically a `finFieldType` and a `decFieldType`."
      },
      {
        "author": "thery",
        "date": "2023-03-28T15:37:46Z",
        "comment": ":sweat: \r\nThanks :wink: "
      },
      {
        "author": "thery",
        "date": "2023-03-29T14:28:09Z",
        "comment": "Don't understand why there is still the one change asked by a review. I have marked it was resolved. Should I dismiss the review?"
      },
      {
        "author": "CohenCyril",
        "date": "2023-04-01T15:28:47Z",
        "comment": "> Don't understand why there is still the one change asked by a review. I have marked it was resolved. Should I dismiss the review?\r\n\r\nNo you should ping me for reviewing my review."
      }
    ],
    "review_discussion": [
      {
        "author": "affeldt-aist",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2023-02-28T16:27:19Z",
        "comment": "```suggestion\r\n- in `ssralg.v`\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2023-03-01T17:09:57Z",
        "comment": "This does not look resolved. Please do not click \"resolve\" until the fix is pushed. If you push a commit fixing it, it will resolve itself automatically."
      },
      {
        "author": "CohenCyril",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2023-03-27T15:45:51Z",
        "comment": "Actually this changelog is irrelevant, specific names of canonical structures should not be mentioned (only their existence) and private lemmas (justifying structure instanciation) should be omitted."
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "thery",
        "committer": "thery",
        "hash": "7b0f282452b0e49ce8035d3971f38fe05cf473a6",
        "message": "Algebraic structures for bool",
        "date": "2023-03-28T15:36:11Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 969,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 15,
        "deletions": 4
      },
      {
        "file": "mathcomp/ssreflect/order.v",
        "status": "M",
        "additions": 15,
        "deletions": 4
      }
    ],
    "state": "merged",
    "open_date": "2023-02-24T23:26:52Z",
    "update_date": "2023-02-25T10:49:20Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "b26abe87b46af2417f0fb798e77853951dc571a3",
        "message": "Fix `\\meet^p` and `\\join^p` notations and the scope of n.-tuplelexi notation",
        "date": "2023-02-24T23:10:49Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "f5595ac13b2ee37f90472e653a4075380fbf9b46",
        "message": "CHANGELOG",
        "date": "2023-02-24T23:27:04Z"
      }
    ]
  },
  {
    "author": "affeldt-aist",
    "number": 968,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/eqtype.v",
        "status": "M",
        "additions": 8,
        "deletions": 20
      },
      {
        "file": "mathcomp/ssreflect/ssrfun.v",
        "status": "M",
        "additions": 8,
        "deletions": 20
      }
    ],
    "state": "merged",
    "open_date": "2023-02-10T05:29:12Z",
    "update_date": "2023-02-10T17:39:33Z",
    "discussion": [
      {
        "author": "affeldt-aist",
        "date": "2023-02-10T05:53:40Z",
        "comment": "This should be fixed in Coq : https://github.com/coq/coq/pull/17249"
      },
      {
        "author": "affeldt-aist",
        "date": "2023-02-10T05:53:57Z",
        "comment": "Related problem: PR #968 "
      },
      {
        "author": "affeldt-aist",
        "date": "2023-02-10T05:55:07Z",
        "comment": "TODO: close this if PR #968 and https://github.com/coq/coq/pull/17249 go through"
      },
      {
        "author": "proux01",
        "date": "2023-02-10T12:44:28Z",
        "comment": "@affeldt-aist even if https://github.com/coq/coq/pull/17249 goes through, you should add the switched notations in `mathcomp/ssreflect/ssrfun.v` below a `(* 8.18 additions *)` comment (that will be removed once mathcomp requires COq >= 8.18). Otheriwse, merging this as is will reintroduce the printing bug for sval."
      },
      {
        "author": "affeldt-aist",
        "date": "2023-02-10T13:56:38Z",
        "comment": "@proux01 Thank you!"
      },
      {
        "author": "proux01",
        "date": "2023-02-10T15:14:00Z",
        "comment": "According to CI, Coquelicot requires a patch, I sent a fix to Guillaume."
      },
      {
        "author": "proux01",
        "date": "2023-02-10T17:39:18Z",
        "comment": "Fixed, let's merge"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "06410c15cc14b51f994a46c208fddf1f9cb19d67",
        "message": "fixes #967",
        "date": "2023-02-10T13:55:20Z"
      }
    ]
  },
  {
    "author": "affeldt-aist",
    "number": 966,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/eqtype.v",
        "status": "M",
        "additions": 1,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2023-02-10T05:08:46Z",
    "update_date": "2023-02-10T12:16:32Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "29efc3cbeb76af21111ad6be715d9b463e434581",
        "message": "fix sval notation",
        "date": "2023-02-10T05:07:01Z"
      }
    ]
  },
  {
    "author": "Tragicus",
    "number": 965,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 96,
        "deletions": 1
      },
      {
        "file": "mathcomp/algebra/poly.v",
        "status": "M",
        "additions": 96,
        "deletions": 1
      },
      {
        "file": "mathcomp/ssreflect/bigop.v",
        "status": "M",
        "additions": 96,
        "deletions": 1
      },
      {
        "file": "mathcomp/ssreflect/finset.v",
        "status": "M",
        "additions": 96,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2023-02-07T13:59:02Z",
    "update_date": "2023-02-14T14:43:40Z",
    "discussion": [],
    "review_discussion": [
      {
        "author": "proux01",
        "file": "mathcomp/algebra/poly.v",
        "date": "2023-02-08T16:50:01Z",
        "comment": "```suggestion\r\nFrom mathcomp Require Import fintype bigop finset tuple.\r\nFrom mathcomp Require Import div ssralg countalg binomial.\r\n```\r\n(to enforce the 80 chars limit)"
      },
      {
        "author": "proux01",
        "file": "mathcomp/algebra/poly.v",
        "date": "2023-02-08T16:50:17Z",
        "comment": "Spurious newlines (please remove them)"
      },
      {
        "author": "proux01",
        "file": "mathcomp/algebra/poly.v",
        "date": "2023-02-08T16:51:52Z",
        "comment": "```suggestion\r\nunder eq_bigr => i _ do rewrite addrC -raddfN/=.\r\nrewrite -{1}(in_tupleE ps) -(map_tnth_enum (_ ps)) big_map.\r\nrewrite enumT bigA_distr_bigA2 /= coef_sum.\r\ntransitivity (\\sum_(I in {set 'I_(size ps)}) if #|I| == (size ps - n)%N then\r\n                  \\prod_(i < size ps | i \\in I) - ps`_i else 0).\r\n  apply eq_bigr => I _.\r\n  rewrite big_if/= big_const iter_mulr_1 -rmorph_prod/= coefCM coefXn.\r\n  under eq_bigr => i _ do rewrite (tnth_nth 0)/=.\r\n  rewrite -[#|I| == _](eqn_add2r n) subnK//.\r\n  rewrite -[X in (_ + _)%N == X]card_ord -(cardC I) eqn_add2l.\r\n  by case: ifP; rewrite ?mulr1 ?mulr0.\r\nby rewrite -big_mkcond mulr_sumr/=; apply: eq_bigr => I /eqP <-; rewrite prodrN.\r\n```"
      },
      {
        "author": "proux01",
        "file": "mathcomp/algebra/poly.v",
        "date": "2023-02-08T16:53:01Z",
        "comment": "```suggestion\r\nrewrite coef_prod_XsubC ?leq_pred// => ps0.\r\nhave -> : (size ps - (size ps).-1 = 1)%N.\r\n  by move: ps0; case: (size ps) => // n _; exact: subSnn.\r\nrewrite expr1 mulN1r; congr GRing.opp.\r\nset f : 'I_(size ps) -> {set 'I_(size ps)} := fun a => [set a].\r\ntransitivity (\\sum_(I in imset f (mem setT)) \\prod_(i in I) ps`_i).\r\n  apply: congr_big => // I /=.\r\n  by apply/cards1P/imsetP => [[a ->] | [a _ ->]]; exists a.\r\nrewrite big_imset/=; last first.\r\n  by move=> i j _ _ ij; apply/set1P; rewrite -/(f j) -ij set11.\r\nrewrite -[in RHS](in_tupleE ps) -(map_tnth_enum (_ ps)) big_map enumT.\r\napply: congr_big => // i; first exact: in_setT.\r\nby rewrite big_set1 (tnth_nth 0).\r\n```"
      },
      {
        "author": "proux01",
        "file": "mathcomp/algebra/poly.v",
        "date": "2023-02-08T16:53:47Z",
        "comment": "```suggestion\r\nrewrite coef_prod_XsubC// subn0; congr GRing.mul.\r\ntransitivity (\\sum_(I in [set setT : {set 'I_(size ps)}]) \\prod_(i in I) ps`_i).\r\n  apply: congr_big =>// i/=.\r\n  apply/idP/set1P => [/eqP cardE | ->]; last by rewrite cardsT card_ord.\r\n  by apply/eqP; rewrite eqEcard subsetT cardsT card_ord cardE leqnn.\r\nrewrite big_set1 -[in RHS](in_tupleE ps) -(map_tnth_enum (_ ps)) big_map enumT.\r\napply: congr_big => // i; first exact: in_setT.\r\nby rewrite (tnth_nth 0).\r\n```"
      },
      {
        "author": "proux01",
        "file": "mathcomp/ssreflect/bigop.v",
        "date": "2023-02-08T16:54:31Z",
        "comment": "```suggestion\r\nLemma big_if I r (P Q : pred I) F G :\r\n  \\big[*%M/1]_(i <- r | P i) (if Q i then F i else G i) =\r\n    \\big[*%M/1]_(i <- r | P i && Q i) F i *\r\n    \\big[*%M/1]_(i <- r | P i && ~~ Q i) G i.\r\nProof.\r\nrewrite (bigID Q); congr (_ * _); apply: eq_bigr => i /andP[_].\r\n  by move=> ->.\r\nby move=> /negPf ->.\r\nQed.\r\n```"
      },
      {
        "author": "proux01",
        "file": "mathcomp/ssreflect/finset.v",
        "date": "2023-02-08T16:57:23Z",
        "comment": "```suggestion\r\nLemma bigA_distr (R : Type) (zero one : R) (mul : Monoid.mul_law zero)\r\n  (add : Monoid.add_law zero mul) (I : finType) (F G : I -> R) :\r\n  \\big[mul/one]_i add (F i) (G i) =\r\n  \\big[add/zero]_(J in {set I}) \\big[mul/one]_i (if i \\in J then F i else G i).\r\nProof.\r\nunder eq_bigr => i _ do rewrite -(big_bool _ (fun b => if b then F i else G i)).\r\nrewrite bigA_distr_bigA.\r\nset f := fun J : {set I} => val J.\r\ntransitivity (\\big[add/zero]_(f0 in (imset f (mem setT)))\r\n                \\big[mul/one]_i (if f0 i then F i else G i)).\r\n  suff <-: setT = imset f (mem setT) by apply: congr_big=>// i; rewrite in_setT.\r\n  apply/esym/eqP; rewrite -subTset; apply/subsetP => b _.\r\n  by apply/imsetP; exists (FinSet b).\r\nrewrite big_imset; last by case=> g; case=> h _ _; rewrite /f => /= ->.\r\napply: congr_big => //; case=> g; first exact: in_setT.\r\nmove=> _; apply: eq_bigr => i _; congr (if _ then _ else _).\r\nby rewrite SetDef.pred_of_setE.\r\nQed.\r\n```"
      },
      {
        "author": "proux01",
        "file": "mathcomp/ssreflect/finset.v",
        "date": "2023-02-08T16:57:36Z",
        "comment": "Spurious newline"
      }
    ],
    "tags": [],
    "commits": [
      {
        "committer": "proux01",
        "hash": "c46553e7bbf7a56920a90bfdcfe442f031ead55b",
        "message": "bigop lemmas\n\nCo-authored-by: Tragicus <96025499+Tragicus@users.noreply.github.com>",
        "date": "2023-02-14T14:13:13Z"
      },
      {
        "committer": "proux01",
        "hash": "880caf5046c0c752ba1a7e16a4bbf0aadecabe17",
        "message": "root-coefficients relations\n\nCo-authored-by: Tragicus <96025499+Tragicus@users.noreply.github.com>",
        "date": "2023-02-14T14:13:41Z"
      },
      {
        "committer": "proux01",
        "hash": "122ad2b1c8f07ee793b794b868a455cdf06849c7",
        "message": "changelog\n\nCo-authored-by: Tragicus <96025499+Tragicus@users.noreply.github.com>",
        "date": "2023-02-14T14:13:49Z"
      }
    ]
  },
  {
    "author": "affeldt-aist",
    "number": 964,
    "diff_summary": [],
    "state": "closed",
    "open_date": "2023-02-07T06:46:48Z",
    "update_date": "2023-02-10T03:37:51Z",
    "discussion": [
      {
        "author": "affeldt-aist",
        "date": "2023-02-07T07:11:21Z",
        "comment": "NB: the `sval` theory is duplicated in `ssrfun.v`."
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": []
  },
  {
    "author": "clayrat",
    "number": 963,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 33,
        "deletions": 0
      },
      {
        "file": "mathcomp/fingroup/perm.v",
        "status": "M",
        "additions": 33,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2023-02-06T16:35:11Z",
    "update_date": "2023-02-10T17:40:02Z",
    "discussion": [
      {
        "author": "proux01",
        "date": "2023-02-10T17:40:21Z",
        "comment": "Thanks @clayrat for your contribution!"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "clayrat",
        "committer": "proux01",
        "hash": "d11f4507774d40380cf4b9da75e479714e783964",
        "message": "add perm_on lemmas",
        "date": "2023-02-10T14:34:46Z"
      },
      {
        "author": "clayrat",
        "committer": "proux01",
        "hash": "511cbb1a9da6607ca970699ccb3b5b16319356da",
        "message": "update changelog",
        "date": "2023-02-10T14:34:46Z"
      },
      {
        "author": "clayrat",
        "committer": "proux01",
        "hash": "10015d243852597e8b11cb3541de25abd463ef8d",
        "message": "add tperm_on",
        "date": "2023-02-10T14:34:46Z"
      }
    ]
  },
  {
    "author": "affeldt-aist",
    "number": 962,
    "diff_summary": [
      {
        "file": ".mailmap",
        "status": "M",
        "additions": 219,
        "deletions": 213
      },
      {
        "file": "CHANGELOG.md",
        "status": "M",
        "additions": 219,
        "deletions": 213
      },
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 219,
        "deletions": 213
      }
    ],
    "state": "merged",
    "open_date": "2023-01-31T06:33:41Z",
    "update_date": "2023-02-01T14:12:49Z",
    "discussion": [],
    "review_discussion": [
      {
        "author": "proux01",
        "file": "CHANGELOG.md",
        "date": "2023-01-31T06:41:29Z",
        "comment": "```suggestion\r\n## [1.16.0] - 2023-01-31\r\n```"
      },
      {
        "author": "proux01",
        "file": "CHANGELOG.md",
        "date": "2023-01-31T06:44:32Z",
        "comment": "```suggestion\r\nMireia G. Bedmar, Pierre-Marie Pédrot, Pierre Roux, Pierre Pomeret, Quentin Vermande,\r\n```\r\n(for the sake of uniformity)\r\nBTW, @pPomCo do you prefer \"Pierre Pommeret\" or \"Pierre Pommeret-Coquot\"?"
      },
      {
        "author": "proux01",
        "file": "CHANGELOG.md",
        "date": "2023-01-31T06:47:06Z",
        "comment": "maybe?\r\n```suggestion\r\n  + definitions `Vandermonde`, `map2_mx`\r\n```"
      },
      {
        "author": "proux01",
        "file": "CHANGELOG.md",
        "date": "2023-01-31T06:47:46Z",
        "comment": "```suggestion\r\n- Regressions: now redundant instances of `inE` rewriting `mem A x` to\r\n```"
      },
      {
        "author": "affeldt-aist",
        "file": "CHANGELOG.md",
        "date": "2023-01-31T10:03:04Z",
        "comment": "I changed to \"Pomeret-Coquot\". (I chose \"Pomeret\" at first based on the email address.)"
      },
      {
        "author": "CohenCyril",
        "file": "CHANGELOG.md",
        "date": "2023-01-31T18:49:27Z",
        "comment": "```suggestion\r\nMireia G. Bedmar, Pierre-Marie Pédrot, Pierre Roux, Pierre Pomeret-Coquot, Quentin Vermande,\r\nReynald Affeldt, Takafumi Saikawa, Yoshihiro Imai\r\n```\r\nQuentin Vermande and @Tragicus are the same person. We should alias them in the mailmap."
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "0112ad1b3269ffd5b91145d6cb1a0f60c2c58060",
        "message": "changelog for 1.16.0",
        "date": "2023-02-01T04:05:40Z"
      },
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "21c94d1804cbbeac612dcd60f3343af1a21bf4db",
        "message": "upd mailmap",
        "date": "2023-02-01T09:46:38Z"
      }
    ]
  },
  {
    "author": "proux01",
    "number": 961,
    "diff_summary": [
      {
        "file": ".nix/config.nix",
        "status": "M",
        "additions": 0,
        "deletions": 6
      }
    ],
    "state": "merged",
    "open_date": "2023-01-24T15:47:44Z",
    "update_date": "2023-01-24T16:39:51Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "febbdd8eaaa9a5866791e32730f193ff88711b39",
        "message": "[CI] Remove merged overlay\n\nNow that https://github.com/math-comp/multinomials/pull/68 is merged.",
        "date": "2023-01-24T15:46:10Z"
      }
    ]
  },
  {
    "author": "erikmd",
    "number": 960,
    "diff_summary": [
      {
        "file": "coq-mathcomp-ssreflect.opam",
        "status": "M",
        "additions": 1,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2023-01-21T00:17:42Z",
    "update_date": "2023-01-21T13:53:48Z",
    "discussion": [
      {
        "author": "proux01",
        "date": "2023-01-21T13:53:42Z",
        "comment": "Maybe we should consider removing that upper bound in this dev package, it doesn't make much sense to me.\r\nBut CI green, let's merge."
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "erikmd",
        "committer": "erikmd",
        "hash": "e24f8612ddde6f2ad2db27a45abbb59b959526e4",
        "message": "fix(*.opam): coq constraint\n\nFollows-up: 14613e48d13a93a88f15df435de8663cc34799c2",
        "date": "2023-01-21T00:16:19Z"
      }
    ]
  },
  {
    "author": "thery",
    "number": 959,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "A",
        "additions": 1324,
        "deletions": 0
      },
      {
        "file": "mathcomp/Make",
        "status": "A",
        "additions": 1324,
        "deletions": 0
      },
      {
        "file": "mathcomp/algebra/Make",
        "status": "A",
        "additions": 1324,
        "deletions": 0
      },
      {
        "file": "mathcomp/algebra/all_algebra.v",
        "status": "A",
        "additions": 1324,
        "deletions": 0
      },
      {
        "file": "mathcomp/algebra/poly.v",
        "status": "A",
        "additions": 1324,
        "deletions": 0
      },
      {
        "file": "mathcomp/algebra/polydiv.v",
        "status": "A",
        "additions": 1324,
        "deletions": 0
      },
      {
        "file": "mathcomp/algebra/qpoly.v",
        "status": "A",
        "additions": 1324,
        "deletions": 0
      },
      {
        "file": "mathcomp/field/Make",
        "status": "A",
        "additions": 1324,
        "deletions": 0
      },
      {
        "file": "mathcomp/field/all_field.v",
        "status": "A",
        "additions": 1324,
        "deletions": 0
      },
      {
        "file": "mathcomp/field/qfpoly.v",
        "status": "A",
        "additions": 1324,
        "deletions": 0
      }
    ],
    "state": "open",
    "open_date": "2023-01-19T15:56:10Z",
    "update_date": "2023-03-31T09:43:25Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2023-01-20T22:23:27Z",
        "comment": "BTW we should also add the structures of algebra, field algebra, field extension and normal field extension when it makes sense. (So as to provide the missing ingredients for the zulip topic [Explicit construction of F256](https://coq.zulipchat.com/#narrow/stream/237664-math-comp-users/topic/Explicit.20construction.20of.20F256))\r\n"
      },
      {
        "author": "thery",
        "date": "2023-01-21T00:10:04Z",
        "comment": "For algebra I can do it, for the other structures I am less familiar (but I will have a look) but this indicates that we should split qpoly.v  moving the construction of qfpoly to field in a file qfpoly.v."
      },
      {
        "author": "thery",
        "date": "2023-01-21T16:09:39Z",
        "comment": "@CohenCyril ok I am stuck in the galois thing. I still have to understand what I actually need to prove."
      },
      {
        "author": "thery",
        "date": "2023-01-21T21:22:17Z",
        "comment": "@CohenCyril  ok I have done somehing but  with no control as  I don't understand the comments about the problems with finType and canonical structure in `finfield.v`."
      },
      {
        "author": "CohenCyril",
        "date": "2023-01-22T17:11:54Z",
        "comment": "> @CohenCyril ok I have done somehing but with no control as I don't understand the comments about the problems with finType and canonical structure in `finfield.v`.\r\n\r\nI'll take a look"
      },
      {
        "author": "thery",
        "date": "2023-01-23T13:36:31Z",
        "comment": "@CohenCyril what I don't understand is why once you are a finite field you don't have automatically all the good properties and you still have to do something. "
      },
      {
        "author": "thery",
        "date": "2023-01-27T09:48:03Z",
        "comment": "We have checked the compatibility with #879 and  [Verified-FEC](https://github.com/thery/Verified-FEC/tree/qpoly)."
      }
    ],
    "review_discussion": [
      {
        "author": "Alizter",
        "file": "mathcomp/algebra/qpoly.v",
        "date": "2023-01-19T17:39:09Z",
        "comment": "```suggestion\r\n(* This file mimics the zmod file for polynomials                             *)\r\n```"
      },
      {
        "author": "thery",
        "file": "mathcomp/algebra/qpoly.v",
        "date": "2023-01-19T19:04:41Z",
        "comment": "thanks"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/qpoly.v",
        "date": "2023-01-20T14:13:53Z",
        "comment": "```suggestion\r\n(* This file mimic the zmod file for polynomial                               *)\r\n```\r\nI'm not sure this is the most explicative introducing sentence for the file.\r\nMaybe something like this would be more appropriate:\r\n```suggestion\r\n(* This file defines the algebras R[X]/<p> and their theory.                  *)\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/qpoly.v",
        "date": "2023-01-20T14:19:21Z",
        "comment": "I think in mathcomp we capitalize proper names, maybe we should?"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/qpoly.v",
        "date": "2023-01-20T14:19:53Z",
        "comment": "```suggestion\r\n(*                   if p is monic and of size > 1 it is p otherwise 'X       *)\r\n```\r\nShould we expose this?"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/qpoly.v",
        "date": "2023-01-20T14:20:45Z",
        "comment": "```suggestion\r\n(*     in_qpoly q == turn the polynomial q into an element of {qpoly p} by    *)\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/qpoly.v",
        "date": "2023-01-20T14:23:00Z",
        "comment": "```suggestion\r\n(*    primitive_poly p == p is a primitive polynomial                         *)\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/qpoly.v",
        "date": "2023-01-20T14:23:44Z",
        "comment": "Why `qlog` and not `qlogp` (to mimic `logn` and `logp`) ?"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/qpoly.v",
        "date": "2023-01-20T14:26:25Z",
        "comment": "There should be a `Reserved Notation` at te beginning of the file."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/qpoly.v",
        "date": "2023-01-20T14:27:02Z",
        "comment": "We could write\r\n```suggestion\r\nLocal Notation \"'{poly_' n R }\" := (@npoly_of (Phant R) n).\r\n```\r\nfor the sake of uniformity."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/qpoly.v",
        "date": "2023-01-20T14:33:22Z",
        "comment": "There should be a `Reserved Notation` and probably some quotes as in the `'{poly_' n }` notation."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/qpoly.v",
        "date": "2023-01-20T14:34:22Z",
        "comment": "Wouldn't it look nicer as : `{poly R %/ p}` to denote the quotient?\r\n(and why not where `R` could be omitted but printed back)"
      },
      {
        "author": "thery",
        "file": "mathcomp/algebra/qpoly.v",
        "date": "2023-01-20T15:21:52Z",
        "comment": "horner?"
      },
      {
        "author": "thery",
        "file": "mathcomp/algebra/qpoly.v",
        "date": "2023-01-20T16:29:03Z",
        "comment": "I have always problem with this.\r\nAs it is now R is a ringType, my worry is to get ugly prettyprint when the ringType has been inferred from p."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/qpoly.v",
        "date": "2023-01-20T22:18:23Z",
        "comment": "ok... then how about printing `{poly %/ q}` ?"
      },
      {
        "author": "thery",
        "file": "mathcomp/algebra/qpoly.v",
        "date": "2023-01-21T00:17:42Z",
        "comment": "ok but `{qfpoly mi}`  stays like this or we go  `{poly %f/  mi}`?"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/qpoly.v",
        "date": "2023-01-22T16:58:25Z",
        "comment": "Sure... but [`Gauss`](https://github.com/math-comp/math-comp/blob/547ab317ade3ae546dc4e49c698108d58891c373/mathcomp/ssreflect/div.v#L909) and [`Lagrange`](https://github.com/math-comp/math-comp/blob/4d5fe7603d53482012734011c70f508e6726959a/mathcomp/fingroup/fingroup.v#L1932)\r\n\r\nI think in the long run none of these theorems should carry a proper name (since there is a huge overloading, Gauss, Lagrange, Cauchy, etc theorems are legion), but that there should be an annotation/docstring/attribute to give the common name of the theorem.\r\n\r\nHence, matters little until this is done, and let's keep it as such for now...\r\n"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/qpoly.v",
        "date": "2023-01-22T17:11:46Z",
        "comment": "Or `{poly %/ q given mi}`, `{poly %/ q using mi}` or something else that would be less \"symbolic\" ?\r\n"
      },
      {
        "author": "thery",
        "file": "mathcomp/algebra/qpoly.v",
        "date": "2023-01-23T16:04:13Z",
        "comment": "done"
      }
    ],
    "tags": [
      {
        "tag": "kind: enhancement",
        "description": "Issue or PR about addition of features."
      },
      {
        "tag": "TODO: HB port",
        "description": ""
      }
    ],
    "commits": [
      {
        "author": "thery",
        "committer": "thery",
        "hash": "15bd5612d654e76b05efbebb9cfd9d4263fb2120",
        "message": "Adding some constructions on top of polynomials : polynomials of a given size, finite field and discrete logarithm\n\nCo-Authored-By: Cyril Cohen <cyril.cohen@inria.fr>\nCo-Authored-By: josh <joshcohen98@gmail.com>",
        "date": "2023-01-30T09:20:42Z"
      },
      {
        "author": "thery",
        "committer": "thery",
        "hash": "c70e853672ebe3df78a4a33dad57f7b14586d251",
        "message": "adding changelog",
        "date": "2023-01-30T10:08:54Z"
      }
    ]
  },
  {
    "author": "thery",
    "number": 958,
    "diff_summary": [
      {
        "file": "mathcomp/algebra/poly.v",
        "status": "M",
        "additions": 1,
        "deletions": 5
      }
    ],
    "state": "merged",
    "open_date": "2023-01-12T16:52:08Z",
    "update_date": "2023-01-12T20:42:10Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "thery",
        "committer": "thery",
        "hash": "0cbc0318c1d35f6be391ef63d78ff250b3f4850e",
        "message": "improved proof",
        "date": "2023-01-12T16:48:59Z"
      }
    ]
  },
  {
    "author": "proux01",
    "number": 956,
    "diff_summary": [
      {
        "file": ".github/workflows/nix-action-coq-8.13.yml",
        "status": "A",
        "additions": 243,
        "deletions": 150
      },
      {
        "file": ".github/workflows/nix-action-coq-8.14.yml",
        "status": "A",
        "additions": 243,
        "deletions": 150
      },
      {
        "file": ".github/workflows/nix-action-coq-8.15.yml",
        "status": "A",
        "additions": 243,
        "deletions": 150
      },
      {
        "file": ".github/workflows/nix-action-coq-8.16.yml",
        "status": "A",
        "additions": 243,
        "deletions": 150
      },
      {
        "file": ".github/workflows/nix-action-coq-8.17.yml",
        "status": "A",
        "additions": 243,
        "deletions": 150
      },
      {
        "file": ".github/workflows/nix-action-coq-master.yml",
        "status": "A",
        "additions": 243,
        "deletions": 150
      },
      {
        "file": ".nix/config.nix",
        "status": "A",
        "additions": 243,
        "deletions": 150
      },
      {
        "file": ".nix/coq-overlays/graph-theory/default.nix",
        "status": "A",
        "additions": 243,
        "deletions": 150
      },
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "A",
        "additions": 243,
        "deletions": 150
      },
      {
        "file": "mathcomp/algebra/matrix.v",
        "status": "A",
        "additions": 243,
        "deletions": 150
      },
      {
        "file": "mathcomp/algebra/rat.v",
        "status": "A",
        "additions": 243,
        "deletions": 150
      },
      {
        "file": "mathcomp/algebra/ssralg.v",
        "status": "A",
        "additions": 243,
        "deletions": 150
      },
      {
        "file": "mathcomp/ssreflect/bigop.v",
        "status": "A",
        "additions": 243,
        "deletions": 150
      },
      {
        "file": "mathcomp/ssreflect/finset.v",
        "status": "A",
        "additions": 243,
        "deletions": 150
      },
      {
        "file": "mathcomp/ssreflect/order.v",
        "status": "A",
        "additions": 243,
        "deletions": 150
      },
      {
        "file": "mathcomp/ssreflect/path.v",
        "status": "A",
        "additions": 243,
        "deletions": 150
      },
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "A",
        "additions": 243,
        "deletions": 150
      },
      {
        "file": "mathcomp/ssreflect/ssreflect.v",
        "status": "A",
        "additions": 243,
        "deletions": 150
      },
      {
        "file": "mathcomp/ssreflect/ssrnat.v",
        "status": "A",
        "additions": 243,
        "deletions": 150
      }
    ],
    "state": "merged",
    "open_date": "2023-01-11T12:01:26Z",
    "update_date": "2023-01-12T17:06:14Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "cf4590c3bf1cadf12f41c176727fa900342b54c4",
        "message": "Remove 1.13.0 deprecations",
        "date": "2023-01-12T09:39:38Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "49df68ed3bd7218bcd2e9be42d151ecb57b015ba",
        "message": "[CI] Update Nix CI",
        "date": "2023-01-12T15:15:51Z"
      }
    ]
  },
  {
    "author": "proux01",
    "number": 955,
    "diff_summary": [
      {
        "file": "mathcomp/algebra/ssralg.v",
        "status": "M",
        "additions": 2,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2023-01-11T10:52:35Z",
    "update_date": "2023-01-11T16:11:37Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "124c707b3237b4f42c4658cc77b7b56773b83095",
        "message": "Forgotten export of divrNN and divrN\n\nThse export were forgotten when merging\nhttps://github.com/math-comp/math-comp/pull/943\n\nIssue detected before release thanks to\nhttps://github.com/math-comp/math-comp/issues/440",
        "date": "2023-01-11T10:50:42Z"
      }
    ]
  },
  {
    "author": "proux01",
    "number": 954,
    "diff_summary": [
      {
        "file": ".github/workflows/nix-action-coq-8.14.yml",
        "status": "A",
        "additions": 2146,
        "deletions": 120
      },
      {
        "file": ".github/workflows/nix-action-coq-8.15.yml",
        "status": "A",
        "additions": 2146,
        "deletions": 120
      },
      {
        "file": ".github/workflows/nix-action-coq-8.16.yml",
        "status": "A",
        "additions": 2146,
        "deletions": 120
      },
      {
        "file": ".github/workflows/nix-action-coq-8.17.yml",
        "status": "A",
        "additions": 2146,
        "deletions": 120
      },
      {
        "file": ".github/workflows/nix-action-coq-master.yml",
        "status": "A",
        "additions": 2146,
        "deletions": 120
      },
      {
        "file": ".gitlab-ci.yml",
        "status": "A",
        "additions": 2146,
        "deletions": 120
      },
      {
        "file": ".nix/config.nix",
        "status": "A",
        "additions": 2146,
        "deletions": 120
      },
      {
        "file": ".nix/coq-nix-toolbox.nix",
        "status": "A",
        "additions": 2146,
        "deletions": 120
      },
      {
        "file": ".nix/coq-overlays/mathcomp-analysis/default.nix",
        "status": "A",
        "additions": 2146,
        "deletions": 120
      }
    ],
    "state": "merged",
    "open_date": "2023-01-11T10:30:32Z",
    "update_date": "2023-01-12T09:36:14Z",
    "discussion": [
      {
        "author": "proux01",
        "date": "2023-01-11T17:25:36Z",
        "comment": "I made a stupid error in the Nix derivation (`repo = \"math-comp\"` instead of `repo = \"analysis\"`), so this is waiting for https://github.com/NixOS/nixpkgs/pull/210234"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "14613e48d13a93a88f15df435de8663cc34799c2",
        "message": "[CI] Add Coq 8.17 to .gitlab-ci.yml",
        "date": "2023-01-09T08:14:58Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "e210e70e8b01b0038eb51bde3f266c1d6eadf287",
        "message": "[CI] Update coq-nix-toolbox",
        "date": "2023-01-11T18:02:56Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "2f47f096dfaab77cd534255b0d08b093287c0cb5",
        "message": "[CI] Add Coq 8.17 to Nix CI",
        "date": "2023-01-12T07:40:18Z"
      }
    ]
  },
  {
    "author": "thery",
    "number": 953,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 32,
        "deletions": 2
      },
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 32,
        "deletions": 2
      }
    ],
    "state": "merged",
    "open_date": "2023-01-03T16:23:16Z",
    "update_date": "2023-01-04T09:39:06Z",
    "discussion": [
      {
        "author": "thery",
        "date": "2023-01-04T08:50:00Z",
        "comment": "@CohenCyril  only coqeal fails but I guess it is not my fault"
      }
    ],
    "review_discussion": [
      {
        "author": "proux01",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2023-01-04T09:43:17Z",
        "comment": "maybe (nitpicking)\r\n```suggestion\r\nexact: perm_trans perm_s4 (perm_to_rem _).\r\n```"
      },
      {
        "author": "thery",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2023-01-04T09:44:17Z",
        "comment": "too late ;-)"
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "thery",
        "committer": "thery",
        "hash": "48d102e86dc9e7f2a6e619cf9008211f24c7906d",
        "message": "add theorems about perm_eq and allpairs",
        "date": "2023-01-03T16:22:22Z"
      }
    ]
  },
  {
    "author": "proux01",
    "number": 952,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 498,
        "deletions": 0
      },
      {
        "file": "mathcomp/ssreflect/bigop.v",
        "status": "M",
        "additions": 498,
        "deletions": 0
      },
      {
        "file": "mathcomp/ssreflect/finset.v",
        "status": "M",
        "additions": 498,
        "deletions": 0
      },
      {
        "file": "mathcomp/ssreflect/order.v",
        "status": "M",
        "additions": 498,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2022-12-16T16:10:19Z",
    "update_date": "2023-01-20T12:59:25Z",
    "discussion": [
      {
        "author": "proux01",
        "date": "2023-01-04T08:56:29Z",
        "comment": "> PS: BTW @proux01 maybe there should be a Co-Authored-By crediting me, @affeldt-aist and IshiguroYoshihiro and Takafumi Saikawa ?\r\n\r\nIndeed, done"
      },
      {
        "author": "proux01",
        "date": "2023-01-10T16:18:06Z",
        "comment": "> I found that some lemmas have very short names such as `subset_big`. When looking for this lemma for example I could have been tempted to include the substring `le` in my `Search` command. Would it make sense to have a bit longer but more informative name?\r\n\r\n@affeldt-aist  I tend to agree, I added `le_` in bigop lemmas were it was absent. Does that feel better?\r\n\r\n"
      },
      {
        "author": "proux01",
        "date": "2023-01-11T08:55:58Z",
        "comment": "> There are two pending comments, but they are probably the same. The UI does not let me see them.\r\n\r\nHere, I can click on \"show resolved\" on the right to expand them."
      },
      {
        "author": "ybertot",
        "date": "2023-01-11T10:16:09Z",
        "comment": "After discussion in a developer meeting, we chose to support a name with suffix \"_mk_monoid\", so the best name seems to be `big_AC_mk_monoid`"
      },
      {
        "author": "proux01",
        "date": "2023-01-11T10:44:57Z",
        "comment": "Thanks, done"
      },
      {
        "author": "proux01",
        "date": "2023-01-17T15:50:37Z",
        "comment": "@ybertot is that mergeable?"
      },
      {
        "author": "affeldt-aist",
        "date": "2023-01-18T09:41:20Z",
        "comment": "> > I found that some lemmas have very short names such as `subset_big`. When looking for this lemma for example I could have been tempted to include the substring `le` in my `Search` command. Would it make sense to have a bit longer but more informative name?\r\n> \r\n> @affeldt-aist I tend to agree, I added `le_` in bigop lemmas were it was absent. Does that feel better?\r\n\r\nYes, I think it is better this way."
      },
      {
        "author": "thery",
        "date": "2023-01-18T14:36:44Z",
        "comment": "I have a naive question : why big is not defined in such a way that \r\n`big[+%/0]_(i <-  [::x1, .... xn]) f i` is simply ` (f x1 + (f x2 + .. f xn)) `  and \r\n`big[+%/0]_(i <-  [::]) f i` is `0.` \r\nIt would make all this trick about `big_max` not necessary."
      },
      {
        "author": "CohenCyril",
        "date": "2023-01-18T16:23:03Z",
        "comment": "> I have a naive question : why big is not defined in such a way that\r\n> `big[+%/0]_(i <- [::x1, .... xn]) f i` is simply `(f x1 + (f x2 + .. f xn))` and\r\n> `big[+%/0]_(i <- [::]) f i` is `0.`\r\n> It would make all this trick about `big_max` not necessary.\r\n\r\nIt might change lots of other behaviours in the non semi-group case ... We should try though."
      },
      {
        "author": "proux01",
        "date": "2023-01-18T16:36:11Z",
        "comment": "> It might change lots of other behaviours in the non semi-group case ... We should try though.\r\n\r\nEven in the non monoid case? But since many lemmas address the monoid case, this might be bearable, I agree we should try.\r\n\r\nIsn't this point relatively orthogonal to that PR though?\r\n"
      },
      {
        "author": "CohenCyril",
        "date": "2023-01-18T16:45:36Z",
        "comment": "@thery we tested briefely with @affeldt-aist, the new definition would invalidate `big_rec2` and `big_rec3` which have many occurrences, we did not push the experiment forward. AFAIU this changes too much the behaviour of bigop for non-monoids.\r\nCC @ggonthier "
      },
      {
        "author": "thery",
        "date": "2023-01-18T18:07:35Z",
        "comment": "The only drawback I see is that we don ´t have `big[+%/0]_(i <-  x :: l)  f i = f x + big[+%/0]_(i <- l) f i` anymore."
      },
      {
        "author": "proux01",
        "date": "2023-01-18T19:12:54Z",
        "comment": "It also seem we would loose `big_rec`."
      },
      {
        "author": "thery",
        "date": "2023-01-18T19:18:40Z",
        "comment": "So it was a bad idea, I have learned something today"
      }
    ],
    "review_discussion": [
      {
        "author": "affeldt-aist",
        "file": "mathcomp/ssreflect/bigop.v",
        "date": "2023-01-10T09:01:04Z",
        "comment": "Shouldn't this be `idem_sub_big` following the pattern of `uniq_sub_big`?"
      },
      {
        "author": "affeldt-aist",
        "file": "mathcomp/ssreflect/bigop.v",
        "date": "2023-01-10T09:01:26Z",
        "comment": "Same comment as for `idem_sub_big`."
      },
      {
        "author": "ybertot",
        "file": "mathcomp/ssreflect/bigop.v",
        "date": "2023-01-10T16:13:32Z",
        "comment": "First instance of // here is useless and can be removed."
      },
      {
        "author": "ybertot",
        "file": "mathcomp/ssreflect/bigop.v",
        "date": "2023-01-10T16:19:28Z",
        "comment": "The first instance of // on this line has no effect and can be removed."
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "0061dc2fe100f0882c749cef5418e67cdff6b310",
        "message": "Add oAC to turn any AC operator into a commutative monoid\n\nCo-authored-by: Cyril Cohen <cohen@crans.org>",
        "date": "2023-01-11T10:43:07Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "e74c67c1885e85d9a1953b7e35ecb4d813fb57b1",
        "message": "Add theory of increasing semigroups\n\nCo-authored-by: Cyril Cohen <cohen@crans.org>",
        "date": "2023-01-11T10:43:07Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "1b4a138cd30722be991fa08760175c236dc73f37",
        "message": "Adding bigmin/max theory\n\nCo-authored-by: Cyril Cohen <cohen@crans.org>\nCo-authored-by: IshiguroYoshihiro\nCo-authored-by: Takafumi Saikawa <tscompor@gmail.com>\nCo-authored-by: Reynald Affeldt <reynald.affeldt@aist.go.jp>",
        "date": "2023-01-11T10:43:07Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 951,
    "diff_summary": [
      {
        "file": "mathcomp/fingroup/fingroup.v",
        "status": "M",
        "additions": 1,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2022-12-16T09:41:32Z",
    "update_date": "2022-12-16T15:47:35Z",
    "discussion": [],
    "review_discussion": [
      {
        "author": "proux01",
        "file": "mathcomp/fingroup/fingroup.v",
        "date": "2022-12-16T12:19:34Z",
        "comment": "I don't think this one was a typo: https://en.wiktionary.org/wiki/alas#English"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/fingroup/fingroup.v",
        "date": "2022-12-16T15:29:47Z",
        "comment": "Thanks! After rereading it, it makes sense to me."
      },
      {
        "author": "proux01",
        "file": "mathcomp/fingroup/fingroup.v",
        "date": "2022-12-16T15:47:18Z",
        "comment": "I must admit this one certainly comes from some French guy ;)"
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "737aa1f9ee1694bde301172911de0b4c078b350b",
        "message": "Fix doc in fingroup.v",
        "date": "2022-12-16T15:28:15Z"
      }
    ]
  },
  {
    "author": "Tragicus",
    "number": 949,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 413,
        "deletions": 152
      },
      {
        "file": "mathcomp/algebra/matrix.v",
        "status": "M",
        "additions": 413,
        "deletions": 152
      },
      {
        "file": "mathcomp/algebra/mxpoly.v",
        "status": "M",
        "additions": 413,
        "deletions": 152
      }
    ],
    "state": "merged",
    "open_date": "2022-12-12T16:16:07Z",
    "update_date": "2022-12-23T11:26:15Z",
    "discussion": [
      {
        "author": "Tragicus",
        "date": "2022-12-19T15:54:14Z",
        "comment": "Except for the new line that I do not find, it should be ok."
      }
    ],
    "review_discussion": [
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2022-12-15T14:19:40Z",
        "comment": "Spurious new line"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2022-12-15T14:20:05Z",
        "comment": "```suggestion\r\nDefinition map2_mx m n (A : 'M_(m, n)) (B : 'M_(m, n)) :=\r\n  \\matrix[map2_mx_key]_(i, j) f (A i j) (B i j).\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2022-12-15T14:21:47Z",
        "comment": "```suggestion\r\nLemma eq_in_map2_mx (f g : R -> S -> T)\r\n    (M : 'M[R]_(m, n)) (M' : 'M[S]_(m, n)) :\r\n    (forall i j, f (M i j) (M' i j) = g (M i j) (M' i j)) ->\r\n   map2_mx f M M' = map2_mx g M M'.\r\n```"
      },
      {
        "author": "ybertot",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2022-12-20T16:05:22Z",
        "comment": "I don't understand the explanation here.  Shouldn't it be\r\n\"the matrix ABf congruent with A with ABf i j = f (A i j) (B i j) for all i and j\"? \r\n"
      },
      {
        "author": "Tragicus",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2022-12-20T16:19:06Z",
        "comment": "Many thanks."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2022-12-21T09:12:12Z",
        "comment": "```suggestion\r\nLemma map2_mx_right (f : R -> R -> R) : f =2 (fun _ x => x) ->\r\n```\r\notherwise it will be rather difficult to instanciate without funext.\r\nAlternatively\r\n```suggestion\r\nLemma map2_mx_right (f : R -> R -> R) : (forall x y, f x y = y) ->\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2022-12-21T09:12:49Z",
        "comment": "```suggestion\r\nLemma map2_mx_left (f : R -> R -> R) : f =2 (fun x _ => x) ->\r\n```\r\notherwise it will be rather difficult to instanciate without funext.\r\nAlternatively\r\n```suggestion\r\nLemma map2_mx_left (f : R -> R -> R) : (forall x y, f x y = x) ->\r\n```\r\n"
      },
      {
        "author": "Tragicus",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2022-12-21T12:10:59Z",
        "comment": "Right, thanks."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2022-12-21T13:47:54Z",
        "comment": "```suggestion\r\n```"
      }
    ],
    "tags": [],
    "commits": [
      {
        "hash": "4411a43b68d67b087e35d94f918add9a348c3763",
        "message": "map2 for matrices",
        "date": "2022-12-10T09:52:07Z"
      },
      {
        "hash": "9250346ac9a605b87785f0ef23912c287fce358d",
        "message": "lifting laws on matrices",
        "date": "2022-12-10T10:42:22Z"
      },
      {
        "hash": "fe7831641ef83cd1d58c829611c8602f32f80d02",
        "message": "update zmodType structure for matrices",
        "date": "2022-12-10T10:53:22Z"
      },
      {
        "hash": "209030a9fabfff9ef018ff66d8f89ea836a2788d",
        "message": "generalize diag_mx scalar_mx and mxtrace to matrices on zmodType",
        "date": "2022-12-10T15:47:22Z"
      },
      {
        "hash": "cdc07ddbb6831ee8bca493faef9575bd8d4d737a",
        "message": "update suggested changes",
        "date": "2022-12-19T15:47:33Z"
      },
      {
        "hash": "7d50989770ac7a1d48cfce8b5afa15e95c4ea3ff",
        "message": "correct typo",
        "date": "2022-12-20T16:15:37Z"
      },
      {
        "hash": "f0efa8ecad44ac0ad53fb04ae0dd96d982ed0097",
        "message": "update map2_mx_right/left",
        "date": "2022-12-21T12:08:42Z"
      },
      {
        "author": "CohenCyril",
        "committer": "web-flow",
        "hash": "6dada5b8f119a479ff1291ca80ef54d0f108736e",
        "message": "Removing spurious newline",
        "date": "2022-12-21T13:48:10Z"
      }
    ]
  },
  {
    "author": "Tragicus",
    "number": 948,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 4,
        "deletions": 1
      },
      {
        "file": "mathcomp/algebra/poly.v",
        "status": "M",
        "additions": 4,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2022-12-08T21:07:04Z",
    "update_date": "2022-12-09T09:25:36Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2022-12-09T07:46:30Z",
        "comment": "@Tragicus thank you for your contribution, your change will be merged after the suggestions above are addressed."
      }
    ],
    "review_discussion": [
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/poly.v",
        "date": "2022-12-09T07:40:44Z",
        "comment": "The name `polyCZ` suggested the head symbol of the LHS of the equation was `polyC`, but it's not, the head symbol is `GRing.scale`, hence the renaming suggestion. (I also added whitespaces as per mathcomp conventions).\r\n```suggestion\r\nLemma scale_polyC a b : a *: b%:P = (a * b)%:P.\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2022-12-09T07:43:08Z",
        "comment": "```suggestion\r\n    `drop_polyDMXn`, `poly_take_drop`, `eqp_take_drop`, `scale_polyC`\r\n```"
      },
      {
        "author": "Tragicus",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2022-12-09T08:02:32Z",
        "comment": "Done @CohenCyril "
      }
    ],
    "tags": [],
    "commits": [
      {
        "hash": "4b0c1b37b38eebc1c04d48e34fa4127d42087a84",
        "message": "add polyCZ",
        "date": "2022-12-08T20:49:14Z"
      },
      {
        "hash": "dccc4c4dce4e33955e8e9c615aaba62b6860909d",
        "message": "renaming (scale_polyC)",
        "date": "2022-12-09T07:59:30Z"
      }
    ]
  },
  {
    "author": "jouvelot",
    "number": 947,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 33,
        "deletions": 1
      },
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 33,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2022-12-04T18:07:39Z",
    "update_date": "2023-02-21T10:10:34Z",
    "discussion": [
      {
        "author": "jouvelot",
        "date": "2022-12-11T19:36:36Z",
        "comment": "If these lemmas are considered useful, I could also add to this PR the following ones, which I proved, for completeness, even though I didn't need them:\r\n```\r\nNotation prodn s := (\\prod_(i <- s) i).\r\n\r\nLemma prodn_nconsE s n0 n : prodn (ncons n n0 s) = n0 ^ n * prodn s.\r\n\r\nLemma prodn_set_nthE s n0 n m : \r\n  0 < nth n0 s n ->\r\n  let m' := m * (if size s <= n then nth n0 s n * n0 ^ (n - size s) else 1) in \r\n  prodn (set_nth n0 s n m) = prodn s * m' %/ (nth n0 s n).\r\n```\r\n"
      },
      {
        "author": "proux01",
        "date": "2023-02-21T09:18:30Z",
        "comment": "@jouvelot sorry for the dramatically delayed review.\r\nI simplified your proofs a bit (taking inspiration from similar lemmas about `count` and `set_nth`).\r\nIf that's good for you, I'll merge."
      },
      {
        "author": "jouvelot",
        "date": "2023-02-21T09:30:03Z",
        "comment": "@proux01 No problem for the delay, and these proofs look quite nice, thanks :) Merge is fine for me, yes.  "
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "jouvelot",
        "committer": "proux01",
        "hash": "81ef54a29de039be473c68404fbefcda60bafb8b",
        "message": "Adding lemmas about sumn and set_nth in seq.v\n\nCo-authored-by: Pierre Roux <pierre.roux@onera.fr>",
        "date": "2023-02-21T09:12:59Z"
      }
    ]
  },
  {
    "author": "jouvelot",
    "number": 946,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 32,
        "deletions": 1
      },
      {
        "file": "mathcomp/ssreflect/bigop.v",
        "status": "M",
        "additions": 32,
        "deletions": 1
      }
    ],
    "state": "closed",
    "open_date": "2022-12-04T15:53:33Z",
    "update_date": "2022-12-04T15:54:24Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "jouvelot",
        "committer": "jouvelot",
        "hash": "6875bb7d79eeca70dc8fbcbed103bca0ef61f79e",
        "message": "Adding sumn_set_nthE and sumn_nconsE to bigop.v.",
        "date": "2022-11-29T19:32:32Z"
      },
      {
        "author": "jouvelot",
        "committer": "web-flow",
        "hash": "8cbbcb2a57cfad62d42772aca29e69c636dedfae",
        "message": "Update bigop.v",
        "date": "2022-11-29T19:38:29Z"
      },
      {
        "author": "jouvelot",
        "committer": "jouvelot",
        "hash": "12b6b4a3c969415d929769c6f2f43cd51479a29d",
        "message": "Updated CHANGEDLOG_UNRELEASED.",
        "date": "2022-11-29T19:43:03Z"
      },
      {
        "author": "jouvelot",
        "committer": "jouvelot",
        "hash": "a6d7d260cc2e0714d33fd0a004c0e20bb06df32d",
        "message": "Merge branch 'master' of github.com:jouvelot/math-comp",
        "date": "2022-11-29T19:43:46Z"
      },
      {
        "author": "jouvelot",
        "committer": "jouvelot",
        "hash": "72f5597b0df2a3d797e52d73a7bf7a863552be3a",
        "message": "Adding sumn_nconsE and sumn_set_nthE to bigop.v.",
        "date": "2022-12-04T15:38:39Z"
      },
      {
        "author": "jouvelot",
        "committer": "jouvelot",
        "hash": "2efb26491fcf6bcd466349202128d178d6aab938",
        "message": "Typo.",
        "date": "2022-12-04T15:41:45Z"
      }
    ]
  },
  {
    "author": "jouvelot",
    "number": 945,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 32,
        "deletions": 1
      },
      {
        "file": "mathcomp/ssreflect/bigop.v",
        "status": "M",
        "additions": 32,
        "deletions": 1
      }
    ],
    "state": "closed",
    "open_date": "2022-11-29T19:51:08Z",
    "update_date": "2022-12-04T15:43:33Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2022-12-04T14:57:43Z",
        "comment": "Hi @jouvelot, thank you for your contribution.\r\nI didn't have the time to look at the substance of your PR yet, but on the form:\r\n1. please never merge anything in your PR branches, use only rebase (e.g. use`git pull -r upstream master`)\r\n2. please never use your own master branch to make PR (one reason being it often triggers unwanted occurences of 1.)"
      },
      {
        "author": "jouvelot",
        "date": "2022-12-04T15:03:17Z",
        "comment": "Thanks for the advice, @CohenCyril. Should I submit a cleaner PR?"
      },
      {
        "author": "CohenCyril",
        "date": "2022-12-04T15:05:29Z",
        "comment": "> Thanks for the advice, @CohenCyril. Should I submit a cleaner PR?\r\n\r\nYes please :pray: "
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "jouvelot",
        "committer": "jouvelot",
        "hash": "6875bb7d79eeca70dc8fbcbed103bca0ef61f79e",
        "message": "Adding sumn_set_nthE and sumn_nconsE to bigop.v.",
        "date": "2022-11-29T19:32:32Z"
      },
      {
        "author": "jouvelot",
        "committer": "web-flow",
        "hash": "8cbbcb2a57cfad62d42772aca29e69c636dedfae",
        "message": "Update bigop.v",
        "date": "2022-11-29T19:38:29Z"
      },
      {
        "author": "jouvelot",
        "committer": "jouvelot",
        "hash": "12b6b4a3c969415d929769c6f2f43cd51479a29d",
        "message": "Updated CHANGEDLOG_UNRELEASED.",
        "date": "2022-11-29T19:43:03Z"
      },
      {
        "author": "jouvelot",
        "committer": "jouvelot",
        "hash": "a6d7d260cc2e0714d33fd0a004c0e20bb06df32d",
        "message": "Merge branch 'master' of github.com:jouvelot/math-comp",
        "date": "2022-11-29T19:43:46Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 944,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 2227,
        "deletions": 572
      },
      {
        "file": "mathcomp/algebra/intdiv.v",
        "status": "M",
        "additions": 2227,
        "deletions": 572
      },
      {
        "file": "mathcomp/algebra/mxalgebra.v",
        "status": "M",
        "additions": 2227,
        "deletions": 572
      },
      {
        "file": "mathcomp/algebra/poly.v",
        "status": "M",
        "additions": 2227,
        "deletions": 572
      },
      {
        "file": "mathcomp/algebra/polydiv.v",
        "status": "M",
        "additions": 2227,
        "deletions": 572
      },
      {
        "file": "mathcomp/algebra/ssralg.v",
        "status": "M",
        "additions": 2227,
        "deletions": 572
      },
      {
        "file": "mathcomp/algebra/vector.v",
        "status": "M",
        "additions": 2227,
        "deletions": 572
      },
      {
        "file": "mathcomp/algebra/zmodp.v",
        "status": "M",
        "additions": 2227,
        "deletions": 572
      },
      {
        "file": "mathcomp/field/algC.v",
        "status": "M",
        "additions": 2227,
        "deletions": 572
      },
      {
        "file": "mathcomp/field/cyclotomic.v",
        "status": "M",
        "additions": 2227,
        "deletions": 572
      },
      {
        "file": "mathcomp/field/falgebra.v",
        "status": "M",
        "additions": 2227,
        "deletions": 572
      },
      {
        "file": "mathcomp/field/fieldext.v",
        "status": "M",
        "additions": 2227,
        "deletions": 572
      },
      {
        "file": "mathcomp/field/galois.v",
        "status": "M",
        "additions": 2227,
        "deletions": 572
      },
      {
        "file": "mathcomp/field/separable.v",
        "status": "M",
        "additions": 2227,
        "deletions": 572
      },
      {
        "file": "mathcomp/fingroup/action.v",
        "status": "M",
        "additions": 2227,
        "deletions": 572
      },
      {
        "file": "mathcomp/fingroup/fingroup.v",
        "status": "M",
        "additions": 2227,
        "deletions": 572
      },
      {
        "file": "mathcomp/fingroup/gproduct.v",
        "status": "M",
        "additions": 2227,
        "deletions": 572
      },
      {
        "file": "mathcomp/fingroup/perm.v",
        "status": "M",
        "additions": 2227,
        "deletions": 572
      },
      {
        "file": "mathcomp/solvable/all_solvable.v",
        "status": "M",
        "additions": 2227,
        "deletions": 572
      },
      {
        "file": "mathcomp/solvable/alt.v",
        "status": "M",
        "additions": 2227,
        "deletions": 572
      },
      {
        "file": "mathcomp/solvable/nilpotent.v",
        "status": "M",
        "additions": 2227,
        "deletions": 572
      },
      {
        "file": "mathcomp/ssreflect/bigop.v",
        "status": "M",
        "additions": 2227,
        "deletions": 572
      },
      {
        "file": "mathcomp/ssreflect/eqtype.v",
        "status": "M",
        "additions": 2227,
        "deletions": 572
      },
      {
        "file": "mathcomp/ssreflect/finset.v",
        "status": "M",
        "additions": 2227,
        "deletions": 572
      },
      {
        "file": "mathcomp/ssreflect/prime.v",
        "status": "M",
        "additions": 2227,
        "deletions": 572
      },
      {
        "file": "mathcomp/ssreflect/tuple.v",
        "status": "M",
        "additions": 2227,
        "deletions": 572
      }
    ],
    "state": "open",
    "open_date": "2022-11-29T08:58:45Z",
    "update_date": "2023-02-27T23:11:31Z",
    "discussion": [
      {
        "author": "thery",
        "date": "2023-01-13T10:37:24Z",
        "comment": "maybe to make this PR less scary to review, it would be good to split it in 5 digestible chunks : \r\nalgebra,  field,  fingroup,  solvable,  ssreflect\r\n"
      },
      {
        "author": "amahboubi",
        "date": "2023-01-16T17:00:45Z",
        "comment": "I agree with @thery  that this PR is too monolithic. \r\n"
      },
      {
        "author": "amahboubi",
        "date": "2023-01-16T17:03:09Z",
        "comment": "Splitting package-wise might not be the most relevant / easy thing to do. For instance, the changes in ssreflect are of quite different nature. But any way to make the reviewing more incremental would be great.\r\n"
      },
      {
        "author": "amahboubi",
        "date": "2023-01-16T17:06:29Z",
        "comment": "This would allow to accept little controversial additions (e.g., `eisenstein`) rapidly. Other contributions (e.g., the `^^` notation for `map_poly`) might deserve a bit more discussion."
      },
      {
        "author": "amahboubi",
        "date": "2023-01-16T17:08:40Z",
        "comment": "Also, I offered offline to help with finalizing the PR, in particular with the documentation, but a few sketchy comments in the code would nonetheless be much appreciated."
      },
      {
        "author": "amahboubi",
        "date": "2023-01-16T17:13:14Z",
        "comment": "E.g., the intended usage of `dfwith`, the expected caveats of novel notations if any, etc.\r\n"
      },
      {
        "author": "affeldt-aist",
        "date": "2023-02-22T13:06:58Z",
        "comment": "I have just reported a few comments that were made during today's meeting + alpha but maybe I should have addressed most of them myself directly. I'll try to do that a bit later."
      },
      {
        "author": "affeldt-aist",
        "date": "2023-02-22T13:20:20Z",
        "comment": "Compilation fails in `galois.v`. I am afraid I am missing something."
      }
    ],
    "review_discussion": [
      {
        "author": "affeldt-aist",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2023-02-22T09:47:37Z",
        "comment": "Duplicate of line 20."
      },
      {
        "author": "affeldt-aist",
        "file": "mathcomp/algebra/poly.v",
        "date": "2023-02-22T12:42:42Z",
        "comment": "4 spaces"
      },
      {
        "author": "affeldt-aist",
        "file": "mathcomp/field/galois.v",
        "date": "2023-02-22T12:45:15Z",
        "comment": "Maybe avoid the `do [suff ...] in p *` in favor of something more standard using `have`?"
      },
      {
        "author": "affeldt-aist",
        "file": "mathcomp/field/galois.v",
        "date": "2023-02-22T12:45:42Z",
        "comment": "Remove double space line 97"
      },
      {
        "author": "affeldt-aist",
        "file": "mathcomp/field/galois.v",
        "date": "2023-02-22T12:46:55Z",
        "comment": "Maybe give a readable name to the hypotheses introduced using `?`."
      },
      {
        "author": "affeldt-aist",
        "file": "mathcomp/field/galois.v",
        "date": "2023-02-22T12:47:59Z",
        "comment": "Check whether the `-` is really needed, it may reveal a bug."
      },
      {
        "author": "affeldt-aist",
        "file": "mathcomp/algebra/intdiv.v",
        "date": "2023-02-22T12:48:50Z",
        "comment": "3 spaces indent"
      },
      {
        "author": "affeldt-aist",
        "file": "mathcomp/algebra/polydiv.v",
        "date": "2023-02-22T12:50:00Z",
        "comment": "3 spaces indent"
      },
      {
        "author": "affeldt-aist",
        "file": "mathcomp/algebra/polydiv.v",
        "date": "2023-02-22T12:50:21Z",
        "comment": "3 spaces indent"
      },
      {
        "author": "affeldt-aist",
        "file": "mathcomp/ssreflect/finset.v",
        "date": "2023-02-22T12:52:11Z",
        "comment": "Should be documented in the header."
      },
      {
        "author": "affeldt-aist",
        "file": "mathcomp/ssreflect/eqtype.v",
        "date": "2023-02-22T12:54:18Z",
        "comment": "Should be documented in the header. Just copy-paste the documentation from MathComp-Analysis:\r\n```\r\n(*             dfwith f x == fun j => x if j = i, and f j otherwise           *)\r\n(*                           given x : T i                                    *)\r\n```"
      },
      {
        "author": "affeldt-aist",
        "file": "mathcomp/ssreflect/bigop.v",
        "date": "2023-02-22T12:54:58Z",
        "comment": "3 spaces indent"
      },
      {
        "author": "affeldt-aist",
        "file": "mathcomp/ssreflect/bigop.v",
        "date": "2023-02-22T12:55:10Z",
        "comment": "Lacking a blank line"
      },
      {
        "author": "affeldt-aist",
        "file": "mathcomp/fingroup/gproduct.v",
        "date": "2023-02-22T12:56:38Z",
        "comment": "Maybe this should not be merged."
      },
      {
        "author": "affeldt-aist",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2023-02-22T12:57:09Z",
        "comment": "`setXn_dprod` is actually an admitted lemma. Remove?"
      },
      {
        "author": "affeldt-aist",
        "file": "mathcomp/fingroup/gproduct.v",
        "date": "2023-02-22T12:58:36Z",
        "comment": "Need to be documented in the header."
      },
      {
        "author": "affeldt-aist",
        "file": "mathcomp/fingroup/gproduct.v",
        "date": "2023-02-22T13:00:02Z",
        "comment": "Document in the header?"
      },
      {
        "author": "affeldt-aist",
        "file": "mathcomp/field/fieldext.v",
        "date": "2023-02-22T13:00:35Z",
        "comment": "Need to be documented"
      },
      {
        "author": "affeldt-aist",
        "file": "mathcomp/field/falgebra.v",
        "date": "2023-02-22T13:01:18Z",
        "comment": "Notation need to be documented."
      },
      {
        "author": "affeldt-aist",
        "file": "mathcomp/field/cyclotomic.v",
        "date": "2023-02-22T13:01:57Z",
        "comment": "3 spaced indent"
      },
      {
        "author": "affeldt-aist",
        "file": "mathcomp/field/algC.v",
        "date": "2023-02-22T13:02:52Z",
        "comment": "Is there a reason why it is a definition and not a lemma?"
      },
      {
        "author": "affeldt-aist",
        "file": "mathcomp/algebra/polydiv.v",
        "date": "2023-02-22T13:13:00Z",
        "comment": "Shouldn't this name be `mup_prod_XsubC`?"
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "e03c0238b772350242e4fb3fefa5c6a569c4f05a",
        "message": "various additions",
        "date": "2023-02-25T21:08:34Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "7406cc63272aee3f22222d9000f67ad023010c7d",
        "message": "wip",
        "date": "2023-02-25T21:08:54Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "a1de01a8008aa6adee1eb129358b2bf6689f50c9",
        "message": "wip",
        "date": "2023-02-25T21:08:56Z"
      },
      {
        "author": "affeldt-aist",
        "committer": "CohenCyril",
        "hash": "76b89854d5f5448a0a79f828404bc47d90e397ab",
        "message": "minor fixes",
        "date": "2023-02-25T21:10:25Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "b9bbfb826075faf45df3d68628894b1b0853e216",
        "message": "fixing unfinished proof",
        "date": "2023-02-27T22:14:25Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "48973f0338d61c31e827548d1a15b22de4675ddf",
        "message": "fix compilation",
        "date": "2023-02-27T23:10:05Z"
      }
    ]
  },
  {
    "author": "yoshihiro503",
    "number": 943,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 9,
        "deletions": 0
      },
      {
        "file": "mathcomp/algebra/ssralg.v",
        "status": "M",
        "additions": 9,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2022-11-18T01:36:14Z",
    "update_date": "2022-11-22T12:22:54Z",
    "discussion": [
      {
        "author": "proux01",
        "date": "2022-11-22T12:23:12Z",
        "comment": "Thanks!"
      }
    ],
    "review_discussion": [
      {
        "author": "proux01",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2022-11-18T07:51:57Z",
        "comment": "```suggestion\r\nLemma divrNN x y : (- x) / (- y) = x / y.\r\n```\r\n(as everywhere else in the code of the library)"
      },
      {
        "author": "proux01",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2022-11-18T07:52:12Z",
        "comment": "```suggestion\r\nLemma divrN x y : x / (- y) = - (x / y).\r\n```"
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "yoshihiro503",
        "committer": "yoshihiro503",
        "hash": "edea6e2f80cb6c48d1bea57d92d8500ee0150c83",
        "message": "introduce divrN and divrNN\nCo-authored-by: Reynald Affeldt <reynald.affeldt@aist.go.jp>",
        "date": "2022-11-18T01:25:09Z"
      },
      {
        "author": "yoshihiro503",
        "committer": "yoshihiro503",
        "hash": "aec72cdc84d9f37364c6c58cb87cded4f6bfb44b",
        "message": "changelogs",
        "date": "2022-11-18T02:04:29Z"
      },
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "c96a70be35d9d70fc3c2d53db5dccc379e73cfb2",
        "message": "fix",
        "date": "2022-11-21T00:30:45Z"
      },
      {
        "author": "yoshihiro503",
        "committer": "web-flow",
        "hash": "8ad63c7f3c2817e9bfea468f9d04babe4bf61417",
        "message": "Merge pull request #1 from affeldt-aist/yoshihiro503@divrNN\n\nfix",
        "date": "2022-11-22T02:17:08Z"
      }
    ]
  },
  {
    "author": "SnarkBoojum",
    "number": 942,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 33,
        "deletions": 1
      },
      {
        "file": "mathcomp/algebra/ssralg.v",
        "status": "M",
        "additions": 33,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2022-11-17T06:52:26Z",
    "update_date": "2022-12-12T13:02:40Z",
    "discussion": [
      {
        "author": "SnarkBoojum",
        "date": "2022-11-17T06:53:44Z",
        "comment": "This is about issue #928."
      },
      {
        "author": "SnarkBoojum",
        "date": "2022-11-17T14:52:36Z",
        "comment": "Ah, I had missed the part about moving the Arguments away ; I'll work on it probably tomorrow afternoon."
      },
      {
        "author": "proux01",
        "date": "2022-12-12T13:01:39Z",
        "comment": "I fixed the last remaining issues, let's merge.\r\n\r\n@SnarkBoojum when a point is addressed, feel free to click on \"Resolve conversation\" so that it's easier to see what remains to be done."
      }
    ],
    "review_discussion": [
      {
        "author": "proux01",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2022-11-17T08:58:49Z",
        "comment": "Looking around in the codebase, it seems the most common indentation style is something like\r\n```suggestion\r\nLemma telescope_sumr_eq (a b : nat) (f u : nat -> V) : (a <= b)%N ->\r\n    (forall k, (a <= k < b)%N -> u k = f k.+1 - f k) ->\r\n  \\sum_(a <= k < b) u k = f b - f a.\r\n```\r\nAlso: please name the nat `n` and `m` as in `telescope_sumr` above."
      },
      {
        "author": "proux01",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2022-11-17T09:01:43Z",
        "comment": "Given that `k` and `kab` are not explicitly mentionned and only used on this line you can also use question marks\r\n```suggestion\r\nunder eq_big_nat => ? ? do rewrite diffexpr //=.\r\n```\r\n(if you want, the current code is also fine), c.f. https://github.com/math-comp/math-comp/blob/master/CONTRIBUTING.md#naming-of-variables"
      },
      {
        "author": "proux01",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2022-11-17T09:01:59Z",
        "comment": "```suggestion\r\nexact: telescope_sumr.\r\n```"
      },
      {
        "author": "proux01",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2022-11-17T09:06:06Z",
        "comment": "```suggestion\r\nLemma telescope_prodr_eq (a b : nat) (f u : nat -> R) : (a < b)%N ->\r\n    (forall k, (a < k < b)%N -> f k \\is a unit) ->\r\n    (forall k, (a <= k < b)%N -> u k = f k.+1 / f k) ->\r\n  \\prod_(a <= k < b) u k = f b / f a.\r\n```\r\n\r\nAnd renames naturals to `n` and `m` as in `telescope_prodr`.\r\n\r\nIn `telescope_prodr`, the unit ring is not assumed to be commutative, please do the same here.\r\n\r\nLast: it may be worth adding a `telescope_prodf_eq` on fields?\r\n"
      },
      {
        "author": "proux01",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2022-11-17T09:15:20Z",
        "comment": "Spurious new line"
      },
      {
        "author": "proux01",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2022-11-17T09:16:35Z",
        "comment": "Please put the `Arguments` command at the end of the section (by consistency with the remaining of the file and so that it already applies in this file)."
      },
      {
        "author": "proux01",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2022-11-17T09:16:42Z",
        "comment": "Same"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2022-11-21T15:40:40Z",
        "comment": "you probably do not need `=> ? ?`\r\n```suggestion\r\nby move=> lenm uE; under eq_big_nat do rewrite uE //=; apply: telescope_sumr.\r\n```"
      },
      {
        "author": "SnarkBoojum",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2022-11-21T16:13:42Z",
        "comment": "Indeed `=> ? ?` can be removed, but I find putting the whole proof on a single line a bit too much: it prevents stepping to see what's done."
      },
      {
        "author": "CohenCyril",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2022-11-22T15:34:03Z",
        "comment": "I think you missed one."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2022-11-22T15:36:07Z",
        "comment": "I understand, and that would make sense for a complicated proof and/or for educational purpose. Here, inside the core math-comp library, one can safely put everything on a single line without compromising much. In case someone needs to step through it, they can put `.` instead of `;` and that's it."
      },
      {
        "author": "SnarkBoojum",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2022-11-23T08:40:22Z",
        "comment": "I do have an educational purpose in mind: these results will be directly used by students when working on exercises, so it really makes sense to make the effort.\r\n\r\nNotice that a student will already have a hard time grasping the idea that they can modify something that is given, and will just freak out when after doing so anyway the editor will complain it can't autosave (I just tried with coqide), so I'd rather have a readily readable proof. Newlines are inexpensive and it's worth it."
      },
      {
        "author": "proux01",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2022-11-23T09:00:36Z",
        "comment": "We all agree with that in the context of teaching material. The point of Cyril (which I share) is that the code of mathcomp itself is just not that level of teaching material."
      },
      {
        "author": "SnarkBoojum",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2022-11-23T10:32:55Z",
        "comment": "Real numbers are used at low level, but their construction is hard -- so if it's not readable at low level, it's not a problem: most students never see a construction anyway.\r\n\r\nBut these results are to be used at low level and their proofs are low level. That is something budding students do see very early on the blackboard, so it really should be readable in MC.\r\n\r\nI can just fold now and patch my code, but then I'm pretty sure that will make three more places where proofs will need to be amended for the liber abaci project..."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2022-11-23T16:45:36Z",
        "comment": "The liber abaci project and mathcomp 1 (and 2 for what matters) are two distinct entities with two different purposes.\r\n- The liber abaci project will certainly need to provide a way to provide both a short version and an extended version of the same proof for the purposes you have in mind. And both proofs will eventually make sense. Indeed, knowing how to write compact proof has an educational purpose albeit different than the one from a beginners perspective\r\n- Now for the sake of homogeneity of the current library, I'd up for the shortest script for trivial theorems (for experts).\r\n\r\nPlease do not mix the two projects, we can discuss the differences but I'm not sure this is the place."
      },
      {
        "author": "SnarkBoojum",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2022-11-24T10:13:51Z",
        "comment": "Yes, some discussion will be needed at some point."
      }
    ],
    "tags": [],
    "commits": [
      {
        "committer": "proux01",
        "hash": "fe092fd6f18493afb584b1e388cfd885c73e6c5c",
        "message": "Add telescope_sumr_eq, telescope_prodr_eq and telescope_prodf_eq",
        "date": "2022-12-12T09:56:07Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 941,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 11,
        "deletions": 0
      },
      {
        "file": "mathcomp/ssreflect/fintype.v",
        "status": "M",
        "additions": 11,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2022-11-03T16:38:02Z",
    "update_date": "2022-11-04T08:41:41Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "79fdaf9a1ba3cc80109f11e1e36ae40af03d42d4",
        "message": "Adding existsb and exists_inb",
        "date": "2022-11-03T16:36:56Z"
      }
    ]
  },
  {
    "author": "affeldt-aist",
    "number": 940,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/fintype.v",
        "status": "M",
        "additions": 2,
        "deletions": 2
      },
      {
        "file": "mathcomp/ssreflect/order.v",
        "status": "M",
        "additions": 2,
        "deletions": 2
      }
    ],
    "state": "merged",
    "open_date": "2022-10-25T05:50:24Z",
    "update_date": "2022-10-25T08:16:18Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "bc252319084baebda2285bbb7b880c47e27e9311",
        "message": "fixes #939",
        "date": "2022-10-25T05:49:40Z"
      }
    ]
  },
  {
    "author": "gares",
    "number": 938,
    "diff_summary": [
      {
        "file": ".mailmap",
        "status": "M",
        "additions": 29,
        "deletions": 2
      }
    ],
    "state": "merged",
    "open_date": "2022-10-21T14:56:04Z",
    "update_date": "2022-10-29T16:08:56Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "gares",
        "committer": "gares",
        "hash": "055478f30bc128926c793f5b88a25a3b7257b33d",
        "message": "update mailmap",
        "date": "2022-10-21T14:55:48Z"
      }
    ]
  },
  {
    "author": "yoshihiro503",
    "number": 937,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 44,
        "deletions": 0
      },
      {
        "file": "mathcomp/algebra/matrix.v",
        "status": "M",
        "additions": 44,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2022-10-21T02:27:35Z",
    "update_date": "2022-11-20T22:11:24Z",
    "discussion": [
      {
        "author": "proux01",
        "date": "2022-10-23T16:29:57Z",
        "comment": "According to WP: https://en.wikipedia.org/wiki/Vandermonde_matrix the Vandermonde matrix seems to be the transpose, but they also say \"Some authors define the Vandermonde matrix as the [transpose](https://en.wikipedia.org/wiki/Transpose) of the above matrix\". I don't know which one we want here?"
      },
      {
        "author": "CohenCyril",
        "date": "2022-10-24T00:33:09Z",
        "comment": "> According to WP: https://en.wikipedia.org/wiki/Vandermonde_matrix the Vandermonde matrix seems to be the transpose, but they also say \"Some authors define the Vandermonde matrix as the [transpose](https://en.wikipedia.org/wiki/Transpose) of the above matrix\". I don't know which one we want here?\r\n\r\nWe do want the transpose of the \"normal one\" (i.e. the one that is defined here) due to the specific conventions of the mathcomp library wrt that."
      },
      {
        "author": "proux01",
        "date": "2022-10-24T08:05:40Z",
        "comment": "I don't get those specific conventions but I definitely trust you."
      },
      {
        "author": "CohenCyril",
        "date": "2022-10-27T12:04:29Z",
        "comment": "@yoshihiro503 @affeldt-aist also `Vandermonde` must be added to the header of the file (I chose to capitalize and keep the name full because it's a proper name).\r\nPS: is it clear how to proceed to get this PR merged?"
      },
      {
        "author": "CohenCyril",
        "date": "2022-11-21T15:12:54Z",
        "comment": "Thank you @yoshihiro503 "
      }
    ],
    "review_discussion": [
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2022-10-21T16:59:39Z",
        "comment": "I suggest the following proof instead.\r\n```suggestion\r\n\r\nDefinition Vandermonde (R : ringType) (m n : nat) (a : 'rV[R]_n) :=\r\n  \\matrix_(i < m, j < n) a 0 j ^+ i.\r\n\r\nLemma det_Vandermonde (R : comRingType) (n : nat) (a : 'rV[R]_n) :\r\n  \\det (Vandermonde n a) = \\prod_(i < n) \\prod_(j < n | i < j) (a 0 j - a 0 i).\r\nProof.\r\nset V := @Vandermonde R.\r\nelim: n => [|n IHn] in a *; first by rewrite det_mx00 big1// => -[] [].\r\npose b : 'rV_n := \\row_i a 0 (lift 0 i).\r\npose C : 'M_n := diag_mx (\\row_(i < n) (b 0 i - a 0 0)).\r\npose D : 'M_n.+1 := 1 - a 0 0 *: \\matrix_(i, j) (i == j.+1 :> nat)%:R. \r\nhave detD : \\det D = 1.\r\n  rewrite det_trig ?big_ord_recl ?mxE ?mulr0 ?subr0 ?eqxx.\r\n    by rewrite ?big1 ?mulr1// => i; rewrite !mxE eqxx ltn_eqF// mulr0 subr0.\r\n  by apply/is_trig_mxP => *; rewrite !mxE ![_ == _]ltn_eqF ?mulr0 ?subr0 ?leqW.\r\nsuff: D * V _ _ a = block_mx 1 (const_mx 1) 0 (V _ _ b *m C) :> 'M_(1 + n).\r\n  move=> /(congr1 determinant); rewrite detM detD mul1r => ->.\r\n  rewrite det_ublock det1 mul1r det_mulmx IHn big_ord_recl mulrC; congr (_ * _).\r\n    rewrite big_mkcond big_ord_recl/= mul1r det_diag.\r\n    by under eq_bigr do rewrite !mxE.\r\n  apply: eq_bigr => i _; under eq_bigr do rewrite !mxE.\r\n  by rewrite big_mkcond [RHS]big_mkcond big_ord_recl/= mul1r.\r\nrewrite mulrBl mul1r -scalerAl; apply/matrixP => i j; rewrite !mxE.\r\nunder eq_bigr do rewrite !mxE; case: splitP => [{i}_ -> /[!ord1]|{}i ->].\r\n  rewrite !expr0 big1; last by move=> ?; rewrite mul0r.\r\n  by rewrite ?mulr0 ?subr0 ?mxE; case: splitP => k; rewrite ?ord1 mxE//.\r\nunder eq_bigr do rewrite eqSS mulr_natl mulrb eq_sym.\r\nrewrite -big_mkcond/= big_ord1_eq exprS ifT// ?leqW// -mulrBl !mxE/=.\r\ncase: split_ordP => [{j}_ -> /[!ord1]|{}j ->]; rewrite ?lshift0 ?rshift1 ?mxE.\r\n   by rewrite ?subrr ?mul0r//.\r\nunder eq_bigr do rewrite !mxE mulrnAr mulrb.\r\nby rewrite -big_mkcond big_pred1_eq /= mulrC.\r\nQed.\r\n```\r\nWas there a particular reason why the dimensions were not the same?"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2022-10-24T16:15:34Z",
        "comment": "> Was there a particular reason why the dimensions were not the same?\r\n\r\n@affeldt-aist ?"
      },
      {
        "author": "affeldt-aist",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2022-10-25T00:01:19Z",
        "comment": "It looks like infotheo is using a non-square version of the Vandermonde matrix to define generalized Reed-Solomon codes but I do not have the reference material at hand right now."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2022-10-26T00:27:49Z",
        "comment": "I restored the non-square definition"
      },
      {
        "author": "CohenCyril",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2022-10-28T16:22:52Z",
        "comment": "```suggestion\r\n  + definition `Vandermonde`\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2022-10-28T17:30:54Z",
        "comment": "```suggestion\r\n(* Vandermonde m a == the 'M[R]_(m, n) Vandermonde matrix, given a : 'rV_n    *)\r\n(*                    /         1          ...           1              \\     *)\r\n(*                    |      (a 0 0)       ...      (a 0 (n - 1))       |     *)\r\n(*                    |    (a 0 0 ^+ 2)    ...    (a 0 (n - 1) ^+ 2)    |     *)\r\n(*                    |        ...                      ...             |     *)\r\n(*                    \\ (a 0 0 ^+ (m - 1)) ... (a 0 (n - 1) ^+ (m - 1)) /     *)\r\n(*                 := \\matrix_(i < m, j < n) a 0 j ^+ i.                      *)\r\n```"
      },
      {
        "author": "yoshihiro503",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2022-11-04T07:34:34Z",
        "comment": "Thank you for the correction.  I have imported the commits and organized the history."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2022-11-07T14:21:32Z",
        "comment": "It seems that the documentation header went missing ..."
      },
      {
        "author": "yoshihiro503",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2022-11-11T02:34:59Z",
        "comment": "I had erased it by mistake. It is okay now."
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "yoshihiro503",
        "committer": "yoshihiro503",
        "hash": "4f9b09b4272189c32f14bab7a6d5f6e76380e755",
        "message": "vandermode matrix from infotheo project: https://github.com/affeldt-aist/infotheo\n\nCo-authored-by: Reynald Affeldt <reynald.affeldt@aist.go.jp>",
        "date": "2022-11-18T01:28:25Z"
      },
      {
        "author": "yoshihiro503",
        "committer": "yoshihiro503",
        "hash": "7449fdb560aa5bda8cbf4fe91b49a445d9353e7a",
        "message": "Update mathcomp/algebra/matrix.v\n\nCo-authored-by: Cyril Cohen <CohenCyril@users.noreply.github.com>",
        "date": "2022-11-18T01:28:25Z"
      },
      {
        "author": "yoshihiro503",
        "committer": "yoshihiro503",
        "hash": "5a6fcb2169fc08ff9cb5b878da2a7ffb5ebf4930",
        "message": "changelog and Documentation for vandermonde matrix\n\nCo-authored-by: Cyril Cohen <CohenCyril@users.noreply.github.com>",
        "date": "2022-11-18T01:28:25Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 936,
    "diff_summary": [
      {
        "file": ".github/workflows/nix-action-coq-8.16.yml",
        "status": "M",
        "additions": 102,
        "deletions": 7
      },
      {
        "file": ".github/workflows/nix-action-coq-master.yml",
        "status": "M",
        "additions": 102,
        "deletions": 7
      },
      {
        "file": ".nix/config.nix",
        "status": "M",
        "additions": 102,
        "deletions": 7
      },
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 102,
        "deletions": 7
      },
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 102,
        "deletions": 7
      }
    ],
    "state": "merged",
    "open_date": "2022-10-16T10:55:35Z",
    "update_date": "2022-10-16T18:30:21Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2022-10-16T10:59:57Z",
        "comment": "Actually `take_min` might be a better choice than `take_take`... what do you think @thery?\r\nShould we add commit 10f5a1cbb5f77020bfa3d0b3afff8387828c7116 or not?"
      },
      {
        "author": "thery",
        "date": "2022-10-16T11:40:36Z",
        "comment": "do you want to deprecate take_take and only lieave take_taker and take_takel?"
      },
      {
        "author": "thery",
        "date": "2022-10-16T11:43:37Z",
        "comment": "ok this is what you did :+1: "
      },
      {
        "author": "CohenCyril",
        "date": "2022-10-16T11:46:46Z",
        "comment": "> do you want to deprecate take_take and only lieave take_taker and take_takel?\r\n\r\nActually I was considering deprecating nothing (i.e. excluding commit https://github.com/math-comp/math-comp/commit/10f5a1cbb5f77020bfa3d0b3afff8387828c7116) and keeping exactly `take_min`, `take_take` (as it was in 1.15) and `take_taker`, since actually `take_min` seems at least as natural to me than the \"new\" `take_take` (from the current `master` branch)...\r\nWhat do you think @thery?"
      },
      {
        "author": "thery",
        "date": "2022-10-16T12:03:48Z",
        "comment": "I find a bit strange to have `take_taker` and not `take_takel` but  there are other places in the library where it is like this, for example  `comp_polyXr`"
      },
      {
        "author": "thery",
        "date": "2022-10-16T12:05:21Z",
        "comment": "maybe it makes sense to have `take_takel` since there is no reason to priviledge `i<=j` to `j<=i`"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "d5b992a1cbcbb41980379a1cc0beb3413f90bcd4",
        "message": "Avoid changing names",
        "date": "2022-10-16T10:53:19Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "10f5a1cbb5f77020bfa3d0b3afff8387828c7116",
        "message": "With plans to reattribute take_take later on.",
        "date": "2022-10-16T10:57:57Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "d6a26a939def236506c2a1f547fad90e9bb41842",
        "message": "testing reglang master",
        "date": "2022-10-16T11:41:21Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "88f78ef3966f659c061a4a9a947e7ffb3173a0b5",
        "message": "fixup",
        "date": "2022-10-16T13:44:07Z"
      }
    ]
  },
  {
    "author": "thery",
    "number": 935,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 449,
        "deletions": 12
      },
      {
        "file": "mathcomp/algebra/poly.v",
        "status": "M",
        "additions": 449,
        "deletions": 12
      },
      {
        "file": "mathcomp/algebra/polydiv.v",
        "status": "M",
        "additions": 449,
        "deletions": 12
      },
      {
        "file": "mathcomp/ssreflect/bigop.v",
        "status": "M",
        "additions": 449,
        "deletions": 12
      },
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 449,
        "deletions": 12
      },
      {
        "file": "mathcomp/ssreflect/ssrbool.v",
        "status": "M",
        "additions": 449,
        "deletions": 12
      },
      {
        "file": "mathcomp/ssreflect/ssrnat.v",
        "status": "M",
        "additions": 449,
        "deletions": 12
      }
    ],
    "state": "merged",
    "open_date": "2022-10-05T15:39:57Z",
    "update_date": "2022-10-14T14:12:10Z",
    "discussion": [
      {
        "author": "proux01",
        "date": "2022-10-07T11:58:11Z",
        "comment": "I would also have expected a lemma like `drop_poly_id : drop_poly 0 p = p`"
      },
      {
        "author": "proux01",
        "date": "2022-10-07T12:13:37Z",
        "comment": "It could also be worth adding a lemma in polydiv.v linking `drop_poly` with division?"
      },
      {
        "author": "thery",
        "date": "2022-10-07T14:25:43Z",
        "comment": "\r\n> It could also be worth adding a lemma in polydiv.v linking `drop_poly` with division?\r\n\r\nYes I thought about it. My problem is that polydiv proposes some weak form of division. So I think it would be nice \r\nto have the theorem with (%/ ) but the definition is so intricate that I am quickly lost in the proof. I see if I have more energy in the weekend\r\n"
      },
      {
        "author": "thery",
        "date": "2022-10-07T19:04:35Z",
        "comment": "@proux01  ok I think I have adressed all your issues. Thanks a lot. It was a bit shaky!"
      },
      {
        "author": "thery",
        "date": "2022-10-10T12:22:08Z",
        "comment": "@proux01 thanks for your review, very helpful!"
      },
      {
        "author": "CohenCyril",
        "date": "2022-10-10T12:38:57Z",
        "comment": "I also have a series of corrections to make (if @proux01 didn't take care of them already ^^')"
      },
      {
        "author": "proux01",
        "date": "2022-10-10T13:02:17Z",
        "comment": "@CohenCyril the last point I'm not entirely sure about is the general rule \"put most complicated term on left of equality\", that's not really satisfied by `odd_even_polyE` and `take_drop_polyE`"
      },
      {
        "author": "thery",
        "date": "2022-10-10T15:16:27Z",
        "comment": "@CohenCyril Thanks. Just one remark about `comp_polyXn`and `comp_polyXnr` I was trying to mimic `comp_polyX` and `comp_polyXr`"
      },
      {
        "author": "CohenCyril",
        "date": "2022-10-10T15:30:50Z",
        "comment": "Woops I did not see your message in time...\r\n\r\n> @CohenCyril Thanks. Just one remark about `comp_polyXn`and `comp_polyXnr` I was trying to mimic `comp_polyX` and `comp_polyXr`\r\n\r\nOh I see... I think `Xnr` is confusing because `n` is for natural and `r` right...so it is a weird mixture of type abbreviation and position :-/... I prefer to have is the way I changed it, using the positions of the words `Xn` and `poly` to understand which is on which side..."
      },
      {
        "author": "thery",
        "date": "2022-10-12T14:31:16Z",
        "comment": "@CohenCyril  looks good to me. The only thing I am puzzled about is that I am not sure that  `sum_even_poly` and `sum_odd_poly` are \"useful\" theorems, they seem there only to ease the proof of  `poly_even_odd`.\r\n\r\nI've found a direct  proof of `poly_even_odd` without bigop surgery (using induction). Maybe it is better?\r\n```\r\nLemma poly_even_odd p : even_poly p \\Po 'X^2 + (odd_poly p \\Po 'X^2) * 'X = p.\r\nProof.\r\nelim/poly_ind: p => [|n IH nE]; first by rewrite !linear0 mul0r add0r.\r\nrewrite !linearD /= even_polyMX odd_polyMX.\r\nrewrite even_polyC odd_polyC linear0 addr0 comp_polyC.\r\nrewrite -[in RHS]nE addrAC mulrDl [_ * _ + _]addrC -mulrA -expr2.\r\nby rewrite /comp_poly rmorphM hornerM_comm /comm_poly /= map_polyX hornerX.\r\nQed.\r\n```"
      },
      {
        "author": "proux01",
        "date": "2022-10-12T14:38:50Z",
        "comment": "I do prefer the current proof, the intermediate lemmas `sum_even_poly` and `sum_odd_poly` can be of interest (I guess, I haven't used them)."
      },
      {
        "author": "thery",
        "date": "2022-10-12T14:53:33Z",
        "comment": "They look very technical to me \r\nFor example I am not sure I would want \r\n```\\sum_(n <= i < size p) p`_i *: 'X^i = drop_poly n p * 'X^n``` \r\nbut if you think they are useful no problem to have them."
      },
      {
        "author": "CohenCyril",
        "date": "2022-10-12T15:21:44Z",
        "comment": "> . The only thing I am puzzled about is that I am not sure that `sum_even_poly` and `sum_odd_poly` are \"useful\" theorems, they seem there only to ease the proof of `poly_even_odd`.\r\n\r\nYes I saw your previous proof. The reason why I suggested to add `sum_even_poly` and `sum_odd_poly` is because I thought they were informative and were good test-benches for the more generic additions to the library. I'm not entirely sure if they are useful though, you are right... Are you ok with keeping them?"
      },
      {
        "author": "CohenCyril",
        "date": "2022-10-12T15:39:21Z",
        "comment": "> For example I am not sure I would want\r\n> `` \\sum_(n <= i < size p) p`_i *: 'X^i = drop_poly n p * 'X^n ``\r\n> but if you think they are useful no problem to have them.\r\n\r\nGood idea! I'm quite fond of it actually :)"
      },
      {
        "author": "thery",
        "date": "2022-10-12T17:10:38Z",
        "comment": "> Good idea! I'm quite fond of it actually :)\r\n\r\n@CohenCyril  maybe you could use it to shorten the proof of `poly_take_drop` :smile: \r\n\r\nwould be interested to have a vscode extrensionl that annotates each theorem of the library with  the number of times it is  used in the CI database.\r\n\r\n\r\n\r\n\r\n\r\n"
      },
      {
        "author": "thery",
        "date": "2022-10-14T07:33:13Z",
        "comment": "I could not improve the proof `poly_take_drop`. So I am fine with the current state of the PR"
      },
      {
        "author": "proux01",
        "date": "2022-10-14T07:37:45Z",
        "comment": "Ok, let's merge"
      }
    ],
    "review_discussion": [
      {
        "author": "proux01",
        "file": "mathcomp/algebra/poly.v",
        "date": "2022-10-07T11:16:42Z",
        "comment": "```suggestion\r\nProof. exact: size_poly. Qed.\r\n```"
      },
      {
        "author": "proux01",
        "file": "mathcomp/algebra/poly.v",
        "date": "2022-10-07T11:22:23Z",
        "comment": "```suggestion\r\n  (size p <= s.*2.+1)%N -> odd_poly p = \\poly_(i < s) p`_i.*2.+1.\r\n```"
      },
      {
        "author": "proux01",
        "file": "mathcomp/algebra/poly.v",
        "date": "2022-10-07T11:24:21Z",
        "comment": "```suggestion\r\nProof. by apply/polyP => i; rewrite !(coef_odd_poly, coefD). Qed.\r\n```"
      },
      {
        "author": "proux01",
        "file": "mathcomp/algebra/poly.v",
        "date": "2022-10-07T11:30:33Z",
        "comment": "I would have expected something like:\r\n```suggestion\r\nDefinition drop_poly m (p : {poly R}) := \\poly_(i < (size p - m)%N) p`_(i + m).\r\n```\r\n"
      },
      {
        "author": "proux01",
        "file": "mathcomp/algebra/poly.v",
        "date": "2022-10-07T11:35:13Z",
        "comment": "I would have expected\r\n```suggestion\r\nLemma coef_drop_poly m p i : \r\n  (drop_poly m p)`_ i = if (i < size p - m)%N then p`_ (i + m) else 0.\r\n```"
      },
      {
        "author": "proux01",
        "file": "mathcomp/algebra/poly.v",
        "date": "2022-10-07T11:38:11Z",
        "comment": "Maybe something more generic like\r\n```suggestion\r\nLemma take_polyMXn m n p : take_poly m (p * 'X^ n) = take_poly (m - n) p.\r\n```\r\nand something like `take_poly0` to handle the cases `m <= n`"
      },
      {
        "author": "proux01",
        "file": "mathcomp/algebra/poly.v",
        "date": "2022-10-07T11:40:07Z",
        "comment": "If we have a `take_poly0 : take_poly 0 p = 0`, maybe name them `take_poly0l` and `take_poly0r`?"
      },
      {
        "author": "proux01",
        "file": "mathcomp/algebra/poly.v",
        "date": "2022-10-07T11:41:26Z",
        "comment": "Maybe make it more generic with sum on a sequence and condition?\r\n```Coq\r\n  take_poly m (\\sum_(i <- r | P i) p i) = \\sum_(i <- r | P i) (take_poly m (p i)).\r\n```"
      },
      {
        "author": "proux01",
        "file": "mathcomp/algebra/poly.v",
        "date": "2022-10-07T11:44:47Z",
        "comment": "Maybe more generic, something like\r\n```suggestion\r\nLemma drop_polyMXn m n p : drop_poly m (p * 'X^ n) = drop_poly (m - n) p * `X^(n - m).\r\n```"
      },
      {
        "author": "proux01",
        "file": "mathcomp/algebra/poly.v",
        "date": "2022-10-07T11:46:21Z",
        "comment": "```suggestion\r\n  drop_poly m (\\sum_(i <- r | P i) p i) = \\sum_(i <- r | P i) (drop_poly m (p i)).\r\n```"
      },
      {
        "author": "proux01",
        "file": "mathcomp/algebra/poly.v",
        "date": "2022-10-07T11:50:31Z",
        "comment": "I would have expected\r\n```suggestion\r\n  p = take_poly m p + drop_poly m p * 'X^m.\r\n```\r\nthe name `left_drop_polyE` feels a bit strange, maybe `take_drop_poly`?"
      },
      {
        "author": "proux01",
        "file": "mathcomp/algebra/poly.v",
        "date": "2022-10-07T11:51:14Z",
        "comment": "```suggestion\r\n```"
      },
      {
        "author": "proux01",
        "file": "mathcomp/algebra/poly.v",
        "date": "2022-10-07T11:52:25Z",
        "comment": "```suggestion\r\n(*      odd_poly p    == monomials of odd degree of p                         *)\r\n```"
      },
      {
        "author": "proux01",
        "file": "mathcomp/algebra/poly.v",
        "date": "2022-10-07T11:52:59Z",
        "comment": "```suggestion\r\n(*      even_poly p   == monomials of even degree of p                        *)\r\n```"
      },
      {
        "author": "proux01",
        "file": "mathcomp/algebra/poly.v",
        "date": "2022-10-07T11:54:42Z",
        "comment": "```suggestion\r\n(*      take_poly n p == polynomial p without its monomials of degree >= n    *)\r\n```"
      },
      {
        "author": "proux01",
        "file": "mathcomp/algebra/poly.v",
        "date": "2022-10-07T11:55:52Z",
        "comment": "```suggestion\r\n(*      drop_poly n p == polynomial p divided by X^n                          *)\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/poly.v",
        "date": "2022-10-10T15:16:07Z",
        "comment": "@proux01 sure! I'm tempted to rename it  `poly_even_odd` and swap sides."
      },
      {
        "author": "thery",
        "file": "mathcomp/algebra/poly.v",
        "date": "2022-10-10T15:20:15Z",
        "comment": "maybe `even_odd_poly_eq` like in `divn_eq`"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/poly.v",
        "date": "2022-10-10T15:31:49Z",
        "comment": "For `take_poly` and `drop_poly` I adopted `poly_take_drop` (to mimic `cat_take_drop`), so I was tempted to reuse this shape here too."
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "thery",
        "committer": "proux01",
        "hash": "2088ee343bad11d020f8cf2eff253c03d494d318",
        "message": "Add some surgery operations on polynomial\n\nCo-authored-by: Cyril Cohen <cohen@crans.org>\nCo-authored-by: Pierre Roux <pierre.roux@onera.fr>",
        "date": "2022-10-14T08:56:15Z"
      }
    ]
  },
  {
    "author": "affeldt-aist",
    "number": 934,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 1823,
        "deletions": 959
      },
      {
        "file": "CONTRIBUTING.md",
        "status": "M",
        "additions": 1823,
        "deletions": 959
      },
      {
        "file": "mathcomp/algebra/fraction.v",
        "status": "M",
        "additions": 1823,
        "deletions": 959
      },
      {
        "file": "mathcomp/algebra/intdiv.v",
        "status": "M",
        "additions": 1823,
        "deletions": 959
      },
      {
        "file": "mathcomp/algebra/interval.v",
        "status": "M",
        "additions": 1823,
        "deletions": 959
      },
      {
        "file": "mathcomp/algebra/mxpoly.v",
        "status": "M",
        "additions": 1823,
        "deletions": 959
      },
      {
        "file": "mathcomp/algebra/poly.v",
        "status": "M",
        "additions": 1823,
        "deletions": 959
      },
      {
        "file": "mathcomp/algebra/polyXY.v",
        "status": "M",
        "additions": 1823,
        "deletions": 959
      },
      {
        "file": "mathcomp/algebra/polydiv.v",
        "status": "M",
        "additions": 1823,
        "deletions": 959
      },
      {
        "file": "mathcomp/algebra/rat.v",
        "status": "M",
        "additions": 1823,
        "deletions": 959
      },
      {
        "file": "mathcomp/algebra/ssralg.v",
        "status": "M",
        "additions": 1823,
        "deletions": 959
      },
      {
        "file": "mathcomp/algebra/ssrint.v",
        "status": "M",
        "additions": 1823,
        "deletions": 959
      },
      {
        "file": "mathcomp/algebra/ssrnum.v",
        "status": "M",
        "additions": 1823,
        "deletions": 959
      },
      {
        "file": "mathcomp/character/character.v",
        "status": "M",
        "additions": 1823,
        "deletions": 959
      },
      {
        "file": "mathcomp/character/classfun.v",
        "status": "M",
        "additions": 1823,
        "deletions": 959
      },
      {
        "file": "mathcomp/character/inertia.v",
        "status": "M",
        "additions": 1823,
        "deletions": 959
      },
      {
        "file": "mathcomp/character/integral_char.v",
        "status": "M",
        "additions": 1823,
        "deletions": 959
      },
      {
        "file": "mathcomp/character/mxrepresentation.v",
        "status": "M",
        "additions": 1823,
        "deletions": 959
      },
      {
        "file": "mathcomp/character/vcharacter.v",
        "status": "M",
        "additions": 1823,
        "deletions": 959
      },
      {
        "file": "mathcomp/field/algC.v",
        "status": "M",
        "additions": 1823,
        "deletions": 959
      },
      {
        "file": "mathcomp/field/algebraics_fundamentals.v",
        "status": "M",
        "additions": 1823,
        "deletions": 959
      },
      {
        "file": "mathcomp/field/algnum.v",
        "status": "M",
        "additions": 1823,
        "deletions": 959
      },
      {
        "file": "mathcomp/field/cyclotomic.v",
        "status": "M",
        "additions": 1823,
        "deletions": 959
      },
      {
        "file": "mathcomp/field/finfield.v",
        "status": "M",
        "additions": 1823,
        "deletions": 959
      }
    ],
    "state": "open",
    "open_date": "2022-10-04T10:33:42Z",
    "update_date": "2023-04-06T07:02:52Z",
    "discussion": [
      {
        "author": "proux01",
        "date": "2022-10-13T09:35:34Z",
        "comment": "@CohenCyril @affeldt-aist I had a look at `_add` and `_sub`, this would give the following renamings:\r\n```\r\n`ler_add2l` -> `lerD2`\r\n`ler_add2r` -> `leD2r`\r\n`ltr_add2l` -> `ltrD2`\r\n`ltr_add2r` -> `ltD2r`\r\n`ler_add2` -> `lerD2r`\r\n`ltr_add2` -> `ltrD2r`\r\n`lter_add2` -> `lterD2r`\r\n`ler_add` -> `lerD`\r\n`ler_lt_add` -> `ler_ltD`\r\n`ltr_le_add` -> `ltr_leD`\r\n`ltr_add` -> `ltrD`\r\n`ler_sub` -> `lerB`\r\n`ler_lt_sub` -> `ler_ltB`\r\n`ltr_le_sub` -> `ltr_leB`\r\n`ltr_sub` -> `ltrB`\r\n`ler_subl_addr` -> `lerBDr`\r\n`ltr_subl_addr` -> `ltrBDr`\r\n`ler_subr_addr` -> `leBrDr`\r\n`ltr_subr_addr` -> `ltBrDr`\r\n`ler_sub_addr` -> `lerBDr`\r\n`ltr_sub_addr` -> `ltrBDr`\r\n`lter_sub_addr` -> `lterBDr`\r\n`ler_subl_addl` -> `lerBrD`\r\n`ltr_subl_addl` -> `ltrBrD`\r\n`ler_subr_addl` -> `leBrrD`\r\n`ltr_subr_addl` -> `ltBrrD`\r\n`ler_sub_addl` -> `leBrD`\r\n`ltr_sub_addl` -> `ltBrD`\r\n`lter_sub_addl` -> `lteBrD`\r\n`ler_addl` -> `lerD`\r\n`ltr_addl` -> `ltrD`\r\n`ler_addr` -> `leDr`\r\n`ltr_addr` -> `ltDr`\r\n`ger_addl` -> `gerD`\r\n`gtr_addl` -> `gtrD`\r\n`ger_addr` -> `geDr`\r\n`gtr_addr` -> `gtDr`\r\n`cpr_add` -> `cprD`\r\n```\r\nFor lemmas like `ltr_paddl` or `ltr_spaddl` I guess we shouln't change anything?\r\n\r\nWhat do you think? (I'd rather not do all the painful work before we reach a consensus)"
      },
      {
        "author": "affeldt-aist",
        "date": "2022-10-16T05:40:21Z",
        "comment": "> For lemmas like ltr_paddl or ltr_spaddl I guess we shouln't change anything?\r\n\r\nIn case of doubt I wouldn't do anything for the time being.\r\n\r\n> What do you think? (I'd rather not do all the painful work before we reach a consensus)\r\n\r\nI think that the last commits address the renamings in Pierre's list (modulo a few typos).\r\n\r\nOther potential candidates for renaming:\r\n- ler_norm_add -> ler_normD\r\n- ler_norm_sub -> ler_normB\r\n- leif_add -> leifD\r\n- gtr_opp -> gtrN\r\n- lteif_oppl -> lteifNl\r\n- lteif_oppr -> lteifNr\r\n\r\nI am not sure about lemmas that involve `dist` (we don't have a one-letter equivalent for it, right?).\r\nAlso when there many caps such as in `leif_subLR` -> `leifBLR`.\r\n\r\n\r\n"
      },
      {
        "author": "proux01",
        "date": "2022-10-18T08:59:52Z",
        "comment": "> I think that the last commits address the renamings in Pierre's list (modulo a few typos).\r\n\r\nWell, this looks to me like much more than typos. You kept the `l` and `r` suffixes for left and right, which differs from what is done for `opp` at the beginning of the PR. Also, aren't those suffixes reserved to long identifiers, in contrast to one letters `B`, `D`, `N` and the like (well maybe not, there are `mulrDl` and `mulrDr` for distributivity).\r\nLooks like we are unfortunately not settled yet :-(."
      },
      {
        "author": "affeldt-aist",
        "date": "2022-10-18T10:37:27Z",
        "comment": "> > I think that the last commits address the renamings in Pierre's list (modulo a few typos).\r\n> \r\n> Well, this looks to me like much more than typos. You kept the `l` and `r` suffixes for left and right, which differs from what is done for `opp` at the beginning of the PR. Also, aren't those suffixes reserved to long identifiers, in contrast to one letters `B`, `D`, `N` and the like (well maybe not, there are `mulrDl` and `mulrDr` for distributivity). Looks like we are unfortunately not settled yet :-(.\r\n\r\nOh, sorry, I thought I saw collisions. I will go back to it asap and will happily try to be more uniform (get rid of superfluous `l` and `r` suffixes that I have difficult to remember anyway ^_^)."
      },
      {
        "author": "affeldt-aist",
        "date": "2022-10-19T04:46:57Z",
        "comment": "`ler_subl_addr` -> `lerBDr` and `ler_sub_addr` -> `lerBDr`\r\nso I guess `ler_sub_addr` should be `leBDr`\r\n(same for `ltr_sub{l,}_addr`)\r\n(and thus `lter_sub_addr` -> `lteBDr` instead of `lterBDr`?)\r\n\r\nI chose 3 letters suffix to follow `ler_sub_addl` that comes after\r\nbut then this does not really agree with `ler_add2` and `ltr_add2` that became `lerD2r` and `ltrD2r`...\r\n\r\n`ler_add` and `ler_addl` also collide (so the second part of the changelog is really wip)\r\n"
      },
      {
        "author": "proux01",
        "date": "2022-10-19T06:54:42Z",
        "comment": "> `ler_subl_addr` -> `lerBDr` and `ler_sub_addr` -> `lerBDr` so I guess `ler_sub_addr` should be `leBDr` (same for `ltr_sub{l,}_addr`) (and thus `lter_sub_addr` -> `lteBDr` instead of `lterBDr`?)\r\n\r\nSounds good (those were indeed typos from me ;-) )\r\n\r\n> I chose 3 letters suffix to follow `ler_sub_addl` that comes after but then this does not really agree with `ler_add2` and `ltr_add2` that became `lerD2r` and `ltrD2r`...\r\n\r\nNot perfect indeed but sounds a reasonable way to solve the name collision.\r\n\r\n> `ler_add` and `ler_addl` also collide (so the second part of the changelog is really wip)\r\n\r\nThis looks worse, maybe `lerD` and `le_rD`?\r\n"
      },
      {
        "author": "thery",
        "date": "2022-10-19T08:31:53Z",
        "comment": "`lez_addr1` -> `lezD1`?"
      },
      {
        "author": "affeldt-aist",
        "date": "2022-10-20T01:08:23Z",
        "comment": "This PR triggered many renamings. Given the release schedule, the\r\ntiming is right but much care seems to be needed to achieve\r\nconsensus while avoiding name clashes and too cryptic\r\nidentifiers. See for example\r\nhttps://github.com/math-comp/math-comp/wiki/Minutes-October-19-2022.\r\nFor the sake of discussion, it is maybe better to be incremental\r\nin this PR, hence this intermediate summary.\r\n\r\nIntermediate summary:\r\n\r\nScope of this PR (a priori):\r\n- `_add/D`, `_sub/B`, `_opp/N`, `_mul/M`, `_inv/V`, `_exp/X`\r\n- `dist` out of scope\r\n\r\nRenaming so far:\r\n- see the changelog of this PR\r\n\r\nCandidates renamings in the queue:\r\n- `lteif_oppl` -> `lteifNl`\r\n- `lteif_oppr` -> `lteifNr`\r\n\r\nNot sure:\r\n- `leif_subLR` -> `leifBLR` (too many caps)\r\n- `ltr_paddl`, `ltr_spaddl` -> no change\r\n"
      },
      {
        "author": "proux01",
        "date": "2022-10-20T08:30:53Z",
        "comment": "> Renaming so far:\r\n> \r\n>     * see the changelog of this PR\r\n> \r\n> \r\n> Candidates renamings in the queue:\r\n> \r\n>     * `lteif_oppl` -> `lteifNl`\r\n> \r\n>     * `lteif_oppr` -> `lteifNr`\r\n\r\nSo, if I understand correctly, this is all going for `l` and `r` suffixes for left and right? While I found them fine after long identifiers, I do prefer one letters like `r` and `n`, for ring and nat, after one letter abbreviations (see `realMr`, `realrM`, `realrMn` for instance).\r\nHowever there are already a few uses like `mulrDl`, `mulrDr` for distributivity, so I guess it's ok, even if I dislike it."
      },
      {
        "author": "affeldt-aist",
        "date": "2022-10-20T09:21:51Z",
        "comment": "> So, if I understand correctly, this is all going for `l` and `r` suffixes for left and right? While I found them fine after long identifiers, I do prefer one letters like `r` and `n`, for ring and nat, after one letter abbreviations (see `realMr`, `realrM`, `realrMn` for instance). However there are already a few uses like `mulrDl`, `mulrDr` for distributivity, so I guess it's ok, even if I dislike it.\r\n\r\nI think that everybody felt the same: positional notation should be preferred and `l`, `r` suffixes aren't great.\r\nBut in the presence of name clashes, a compromise might be necessary, at least for a while. \r\n\r\n"
      },
      {
        "author": "affeldt-aist",
        "date": "2022-10-25T09:14:14Z",
        "comment": "Intermediate summary:\r\n\r\nScope of this PR (a priori):\r\n- `_add/D`, `_sub/B`, `_opp/N`, `_mul/M`, `_inv/V`, `_exp/X`\r\n- `dist` out of scope\r\n\r\nRenaming so far:\r\n- see the changelog of this PR\r\n\r\nCandidates renamings in the queue:\r\n- ler_sub_norm_add -> lerB_normD\r\n- ler_sub_dist -> lerB_dist\r\n- ler_dist_norm_add -> ler_dist_normD\r\n- ler_sub_real -> lerB_real\r\n- leq_add_dist -> leqD_dist\r\n- ltr_expn2r -> ltrX2r\r\n- ler_expn2r -> lerX2r\r\n- ler_pmul -> lerpM\r\n\r\nNot sure:\r\n- `leif_subLR` -> `leifBLR` (too many caps)\r\n - `eqr_oppLR` -> `eqrNLR` (too many caps)\r\n- `ltr_paddl`, `ltr_spaddl` -> no change\r\n\r\nClashes\r\n- `lteif_oppE` should be `lteifNE` but this conflicts with \r\nhttps://github.com/math-comp/math-comp/blob/4a1ed8d219c6a928ce7fa66c15deea5443d616ae/mathcomp/ssreflect/order.v#L4151\r\nWhat should we do here?\r\n\r\n\r\n"
      },
      {
        "author": "affeldt-aist",
        "date": "2022-10-26T01:10:22Z",
        "comment": "> Clashes\r\n> - `lteif_oppE` should be `lteifNE` but this conflicts with \r\n> https://github.com/math-comp/math-comp/blob/4a1ed8d219c6a928ce7fa66c15deea5443d616ae/mathcomp/ssreflect/order.v#L4151\r\n> What should we do here?\r\n\r\nShould the existing `lteifNE` become `neg_lteifE`?"
      },
      {
        "author": "CohenCyril",
        "date": "2022-10-26T09:44:28Z",
        "comment": "> Should the existing `lteifNE` become `neg_lteifE`?\r\n\r\nI don't think so. Maybe multi-rules can keep long names?"
      },
      {
        "author": "affeldt-aist",
        "date": "2022-10-27T01:44:36Z",
        "comment": "Intermediate summary:\r\n\r\nScope of this PR (a priori):\r\n- `_add/D`, `_sub/B`, `_opp/N`, `_mul/M`, `_inv/V`, `_exp/X`\r\n- `dist` out of scope\r\n- span: ssrnum.v, ssrint.v\r\n\r\nRenaming so far:\r\n- see the changelog of this PR\r\n\r\nCandidate renamings in the queue:\r\n- `ler_pmul2l` -> `lerpM2l`\r\n- `lef_pinv` -> `lefpV2`\r\n- `minr_pmull` -> `minrpMl`\r\n- `ler_pexpn2r` ->` lerpX2r`\r\n\r\nNot sure:\r\n- `ltr_wpexpn2r` -> `ltrwpX2r` (not too cryptic?)\r\n- `ler_pdivl_mulr` -> `ler_pdivMr` (it might seem weird to change `_mul` but not `div`)\r\n- `leif_subLR` -> `leifBLR` (too many caps?)\r\n- `eqr_oppLR` -> `eqrNLR` (too many caps?)\r\n\r\nNo change:\r\n- `ltr_paddl`, `ltr_spaddl`\r\n- `lteif_oppE` should have been `lteifNE` but this conflicts with \r\nhttps://github.com/math-comp/math-comp/blob/4a1ed8d219c6a928ce7fa66c15deea5443d616ae/mathcomp/ssreflect/order.v#L4151\r\nso we'll keep the long suffixes for multi-rules\r\n"
      },
      {
        "author": "proux01",
        "date": "2022-10-27T07:36:36Z",
        "comment": ">     * `ltr_wpexpn2r` -> `ltrwpX2r` (not too cryptic?)\r\n\r\nWe probably don't want to loose the `n`?"
      },
      {
        "author": "affeldt-aist",
        "date": "2022-10-27T07:41:42Z",
        "comment": "> > ```\r\n> > * `ltr_wpexpn2r` -> `ltrwpX2r` (not too cryptic?)\r\n> > ```\r\n> \r\n> We probably don't want to loose the `n`?\r\n\r\nReally?\r\nBecause I changed `ltr_expn2r` to `ltrX2r`.\r\nI got rid of the `n` after looking at `realX`, `normrX`.\r\n(But I haven't changed much about `_expn` because I was also wondering.)"
      },
      {
        "author": "proux01",
        "date": "2022-10-27T07:53:58Z",
        "comment": "Maybe it's ok then (but I fear we would have conflicts if one day we want to add similar lemmas for some `exp``somewhere)"
      },
      {
        "author": "affeldt-aist",
        "date": "2022-10-27T14:27:20Z",
        "comment": "> Maybe it's ok then (but I fear we would have conflicts if one day we want to add similar lemmas for some `exp``somewhere)\r\n\r\nYes, I also thought of that, but maybe this other `exp` will then deserve a long identifier."
      },
      {
        "author": "affeldt-aist",
        "date": "2022-11-01T12:21:23Z",
        "comment": "Intermediate summary:\r\n\r\nScope of this PR (a priori):\r\n- `_add/D`, `_sub/B`, `_opp/N`, `_mul/M`, `_inv/V`, `_exp/X` (see remarks)\r\n  `_muln/Mn`, `_mulz/Mz`\r\n  (by extension, `_pmul` -> `_pM`, `_wpmul` -> `_wpM`, `_iexpn` -> `_iXn`)\r\n- `dist`, `min`, `max`, `div` out of scope\r\n- span: `ssrnum.v`, `ssrint.v`, `ssralg.v`, `interval.v`\r\n- \r\nRenaming so far:\r\n- see the changelog of this PR\r\n\r\nNot applied:\r\n- use `MV` for division so that, e.g., `ler_pdivl_mulr` -> `ler_pMVlMr`?\r\n  + may not be readable, postoned\r\n\r\nRemarks:\r\n- `lteif_oppE` should have been `lteifNE` but this conflicts with \r\nhttps://github.com/math-comp/math-comp/blob/4a1ed8d219c6a928ce7fa66c15deea5443d616ae/mathcomp/ssreflect/order.v#L4151\r\nso we'll keep the long suffixes for multi-rules\r\n- `_expn` becomes `Xn`, note that `Xn` is also used in `poly.v` with a different meaning\r\n  `_expz` becomes `Xz`\r\n- `real_oppr_max` -x-> `realNr_max` because `real` is not the head symbol of the RHS but a prefix,\r\n  `oppr` is the head symbol to say that the domain of validity of the lemma is `Num.real`\r\n- strings of 8 short identifiers should be exceptional (and the use of long identifiers considered instead)\r\n- p is also the notation for poly\r\n"
      },
      {
        "author": "affeldt-aist",
        "date": "2023-04-06T06:56:53Z",
        "comment": "> Modulo the addition of deprecation notations to help users transition\r\n\r\nDid you spot any missing deprecation notation?\r\nI tried to be careful to add them incrementally.\r\n"
      },
      {
        "author": "proux01",
        "date": "2023-04-06T07:02:52Z",
        "comment": "My bad, I just missed all of them 😢, please ignore my comment.\r\nSo I let @CohenCyril update his review and merge."
      }
    ],
    "review_discussion": [
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2022-11-07T11:43:42Z",
        "comment": "No I do not think this is an acceptable renaming, since here `real` is not the head symbol of the RHS but a prefix (to say that the domain of validity of the lemma is `Num.real`). Here, `oppr` is the head symbol and should be written in full IMO."
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "7dc6a5425655fc65558d89fb64310df4472372f5",
        "message": "fixes #933",
        "date": "2023-03-10T09:25:57Z"
      },
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "37ffa5fac24404b7735daae9191b2d35febbc792",
        "message": "ler_oppr -> lerN and so on",
        "date": "2023-03-10T09:25:57Z"
      },
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "cddf56cd49603116a9691fa02856178d44f4cc81",
        "message": "upd changelog",
        "date": "2023-03-10T09:25:57Z"
      },
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "82709a30d3b459ccef3bbe94feb4a99aec0f9f1b",
        "message": "_sub, _add renamings (wip)",
        "date": "2023-03-10T09:25:57Z"
      },
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "0f15e010c757ee24e437ed9916f544d5fcf68c67",
        "message": "just replace long suffixes by short ones\n\n- instead of coming up with new conventions",
        "date": "2023-03-10T09:25:57Z"
      },
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "ae760cc323e0961ba796c0f1eced00641e21171b",
        "message": "lez_addr1, etc.",
        "date": "2023-03-10T09:25:57Z"
      },
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "784e5dc954f3db9998f6f68a01887445881f94d5",
        "message": "ler_norm_{add,sub}, etc.",
        "date": "2023-03-10T09:25:57Z"
      },
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "08e120436e2dd52dc855f62a7d78e9ae8d667c7f",
        "message": "more lteif_opp",
        "date": "2023-03-10T09:25:57Z"
      },
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "bc241821d13e5b2f9e0777d355d5332320d0a32b",
        "message": "fix",
        "date": "2023-03-10T09:25:57Z"
      },
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "893cec0d68edd6fd9865bd1a16cae85dec0b68c7",
        "message": "lerpM, lerpV2, lerB_dist, etc.",
        "date": "2023-03-10T09:25:57Z"
      },
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "4c9ff2044d33f2733b3c9c5be5d439116ab949c9",
        "message": "ler_pmul2l, lef_pinv",
        "date": "2023-03-10T09:34:06Z"
      },
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "62ba924332f39d501c37a6c3c37ada709bf2097b",
        "message": "minr_pmulr, ger_pmull",
        "date": "2023-03-10T09:34:08Z"
      },
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "8d5ad41058b55865facc72501fe0af57c2032d24",
        "message": "fix",
        "date": "2023-03-10T09:34:08Z"
      },
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "ca8037e9f65df4fc8d5199cf702023f87691e0d4",
        "message": "eqr_expn2, real_maxr_nmulr",
        "date": "2023-03-10T09:34:08Z"
      },
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "ca5275e44563cdbfee4070ba1b933eea25f9d992",
        "message": "ler_iexpn2l, ler_pemull, etc.",
        "date": "2023-03-10T09:34:08Z"
      },
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "047218295b07d0acc84f8cb3b3351aa0506e6fca",
        "message": "ler_pimull, ler_wpiexpz2l",
        "date": "2023-03-10T09:34:08Z"
      },
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "7f0821fb2f0fd8324e42981426c91bb502668e7d",
        "message": "leqif_add_distz, real_oppr_max",
        "date": "2023-03-10T09:34:08Z"
      },
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "981ab8aa2f4b059ef1335634706f412a23b2a98f",
        "message": "revert real_oppr_max; lteif_pdivl_mulr, etc.",
        "date": "2023-03-10T09:34:08Z"
      },
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "31220cc8f83cbe89eae2c6e97cc9321bebe4f9e7",
        "message": "ler_addgt0Pr, ler_pdivl_mulr, etc.",
        "date": "2023-03-10T09:34:08Z"
      },
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "4a5c6d375290338e1b0e525f75abfb14c5c80cfd",
        "message": "progress and fixes\n\n- l{e,t}r_pmuln2r\n- revert `ler_wnexpz2r` -> `lerwnXz2r`\n- revert `ler_wpexpz2r` -> `lerwpXz2r`\n- revert `ltr_eexpz2l` -> `ltreXz2l`\n- revert `ler_eexpz2l` -> `lereXz2l`\n- revert `ltr_niexpz2l` -> `ltrniXz2l`\n- revert `ler_niexpz2l` -> `lerniXz2l`\n- revert `ltr_piexpz2l` -> `ltrpiXz2l`\n- revert `ler_piexpz2l` -> `lerpiXz2l`\n- revert `ler_weexpz2l` -> `lerweXz2l`\n- revert `ler_wneexpz2l` -> `lerwneXz2l`\n- revert `ler_wpeexpz2l` -> `lerwpeXz2l`\n- revert `ler_wniexpz2l` -> `lerwniXz2l`\n- revert  `ler_wpiexpz2l` -> `lerwpiXz2l`\n- lerwiX2l -> lerwiXn2l\n- lerweX2l -> lerweXn2l\n- lereX2l -> lereXn2l\n- ltreX2l -> ltreXn2l\n- ltereX2l -> ltereXn2l\n- revert `lteif_pmul2l` -> `lteifpM2l`\n- revert `lteif_pmul2r` -> `lteifpM2r`\n- revert `lteif_nmul2l` -> `lteifnM2l`\n- revert `lteif_nmul2r` -> `lteifnM2r`\n- revert `ler_addgt0Pr` -> `lerDgt0Pr`\n- revert `ler_addgt0Pl` -> `lerDgt0Pl`",
        "date": "2023-03-10T15:49:30Z"
      },
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "47ed7ee3d762fe122290c031f565f73ee49e881b",
        "message": "muln-> Mn, mulz-> Mz",
        "date": "2023-03-12T06:59:36Z"
      },
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "c5206f050ceff52f08c04a5f6dfff6e9db47a85d",
        "message": "pM -> _pM, nM -> _nM",
        "date": "2023-03-29T14:27:42Z"
      },
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "99124313ec931e24389597b62832371dfa01a199",
        "message": "_ before e/i",
        "date": "2023-04-06T04:00:36Z"
      },
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "e9f7e077a156d7ce5d46b44825f057d8d5046909",
        "message": "ltr_paddl, etc.",
        "date": "2023-04-06T06:10:54Z"
      }
    ]
  },
  {
    "author": "thery",
    "number": 932,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 25,
        "deletions": 4
      },
      {
        "file": "mathcomp/ssreflect/ssrnat.v",
        "status": "M",
        "additions": 25,
        "deletions": 4
      }
    ],
    "state": "merged",
    "open_date": "2022-09-28T18:15:13Z",
    "update_date": "2022-09-30T07:51:51Z",
    "discussion": [],
    "review_discussion": [
      {
        "author": "proux01",
        "file": "mathcomp/ssreflect/ssrnat.v",
        "date": "2022-09-29T15:36:05Z",
        "comment": "```suggestion\r\nLemma leq_half_double m n : (m./2 <= n) = (m <= n.*2.+1).\r\nProof. by case: m => [|[|m]] //; rewrite ltnS ltn_half_double. Qed.\r\n```"
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "thery",
        "committer": "proux01",
        "hash": "4ecec2e8a47cdf6fbb2bd0704eaa8a77f4ce8f87",
        "message": "Complete lemmas about comparison hand halving\n\nCo-authored-by: Pierre Roux <pierre.roux@onera.fr>",
        "date": "2022-09-30T07:38:00Z"
      }
    ]
  },
  {
    "author": "pPomCo",
    "number": 931,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/bigop.v",
        "status": "M",
        "additions": 389,
        "deletions": 10
      },
      {
        "file": "mathcomp/ssreflect/eqtype.v",
        "status": "M",
        "additions": 389,
        "deletions": 10
      },
      {
        "file": "mathcomp/ssreflect/finfun.v",
        "status": "M",
        "additions": 389,
        "deletions": 10
      },
      {
        "file": "mathcomp/ssreflect/finset.v",
        "status": "M",
        "additions": 389,
        "deletions": 10
      },
      {
        "file": "mathcomp/ssreflect/fintype.v",
        "status": "M",
        "additions": 389,
        "deletions": 10
      },
      {
        "file": "mathcomp/ssreflect/ssrfun.v",
        "status": "M",
        "additions": 389,
        "deletions": 10
      }
    ],
    "state": "open",
    "open_date": "2022-09-27T14:51:09Z",
    "update_date": "2022-10-02T23:00:33Z",
    "discussion": [
      {
        "author": "proux01",
        "date": "2022-09-28T08:18:45Z",
        "comment": "@pPomCo in order to help reviewing (but again, I can't review myself, being utterly unqualified here), you may want to point to/explain your use case for those new lemmas."
      },
      {
        "author": "erikmd",
        "date": "2022-09-28T22:21:03Z",
        "comment": "> @pPomCo in order to help reviewing (but again, I can't review myself, being utterly unqualified here), you may want to point to/explain your use case for those new lemmas.\r\n\r\nThanks @proux01 for all your comments!\r\n\r\nI believe a bit of history/motivation of a number of lemmas involved in this PR is lacking in the Coq comments, indeed:\r\n\r\nAll the lemmas related to `fprod` (finite product) were developed by me within this older contribution:\r\n\r\n```\r\n@inproceedings{DBLP:conf/types/Martin-DorelS16,\r\n  author    = {{\\'{E}}rik Martin{-}Dorel and\r\n               Sergei Soloviev},\r\n  editor    = {Silvia Ghilezan and\r\n               Herman Geuvers and\r\n               Jelena Ivetic},\r\n  title     = {A Formal Study of Boolean Games with Random Formulas as Payoff Functions},\r\n  booktitle = {22nd International Conference on Types for Proofs and Programs, {TYPES}\r\n               2016, May 23-26, 2016, Novi Sad, Serbia},\r\n  series    = {LIPIcs},\r\n  volume    = {97},\r\n  pages     = {14:1--14:22},\r\n  publisher = {Schloss Dagstuhl - Leibniz-Zentrum f{\\\"{u}}r Informatik},\r\n  year      = {2016},\r\n  url       = {https://doi.org/10.4230/LIPIcs.TYPES.2016.14},\r\n  doi       = {10.4230/LIPIcs.TYPES.2016.14},\r\n  timestamp = {Tue, 11 Feb 2020 15:52:14 +0100},\r\n  biburl    = {https://dblp.org/rec/conf/types/Martin-DorelS16.bib},\r\n  bibsource = {dblp computer science bibliography, https://dblp.org}\r\n}\r\n```\r\n\r\nin order to formalize the dependent product of finTypes, also endowed with a finType canonical structure.\r\n\r\nThe main definition is as follows:\r\n\r\n```coq\r\n(** Definition and cardinal of [fprod] := dependent product of finTypes *)\r\nRecord fprod : predArgType :=\r\n  { fprod_fun : {ffun I -> {i : I & T_ i}} ;\r\n    fprod_prop : [forall i : I, tag (fprod_fun i) == i] }.\r\n```\r\n\r\nand it straightforwardly follows (hopefully in a math-comp idiomatic way) the usual pencil-and-paper construction of dependent products in set theory for example, namely:\r\n\r\n[![https://en.wikipedia.org/wiki/Cartesian_product#Infinite_Cartesian_products](https://wikimedia.org/api/rest_v1/media/math/render/svg/24697ee110c11986a30ca7aa1c8eda0dd5be75f6)](https://en.wikipedia.org/wiki/Cartesian_product#Infinite_Cartesian_products)\r\n\r\nIt happened the review of the TYPES-2016-post-proceedings articles was very long (≥2Y), and at the time we were focusing on submitting a PR for this `fprod` material in math-comp, we noticed Georges' PR https://github.com/math-comp/math-comp/pull/294 in April 2019, which thoroughly generalized non-dependent finfuns to dependent finfuns; making our PR idea useless at first sight.\r\n\r\nHowever, when working with @pPomCo on his [formalization of games of incomplete information](https://github.com/pPomCo/coq-belgames-csl2023/), the fact to have this alternative, layered definition of \"dependent finfuns\" seemed to make several proofs easier, relying on existing math-comp material.\r\n\r\nSo, one part of this PR #931 directly provides this materiel *(BTW @pPomCo we might want to add a `Co-Authored-By: _` clause in this PR, maybe)*\r\nAnd the second part amounts to general, albeit seemingly useful material for {finfun.v, finset.v, fintype.v} (so just to recall @proux01: the current use case is just coq-belgames, from file [general_lemmas.v](https://github.com/pPomCo/coq-belgames-csl2023/blob/main/theories/general_lemmas.v))"
      },
      {
        "author": "CohenCyril",
        "date": "2022-10-02T13:37:16Z",
        "comment": "All right, I did a first pass to see more clearly.\r\nI performed many renamings, simplifications and refactorings.\r\nDoing so I introduced\r\n- the predicate `tagged_with` which was left unnamed in your PR.\r\n- the mutual bijections `tag_with` / `untag_with` between `T_ i` and `{x in tagged_with T_ i}`\r\n- the mutual bijections `to_family_tagged_with` / `of_family_tagged_with` between `fprod T_` and `{x in family (tagged_with T_)`\r\n\r\nThe bijections I introduced suggest two alternative and more concise representations for `fprod` using preexisting ingredients:\r\n- `{x in family (tagged_with T_)}`\r\n- `{dffun forall i : I, {x in tagged_with T_ i}}`\r\nAnd many of my simplification take advantage of these.\r\n\r\nI'm not entirely sure of the purpose of lemma `big_fprod_dep` but it looks like the type of `Q` should be changed (so that the correpondance between `fprod` and other representations is always used in the same direction) but I'm not sure, I must see usecases.\r\n\r\nI also left some succint comments questioning the use of some lemmas.\r\n"
      },
      {
        "author": "erikmd",
        "date": "2022-10-02T23:00:33Z",
        "comment": "Thanks a lot, @CohenCyril !\r\n\r\n@pPomCo and I will take a look at your refined version and try to address your commented questions."
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "pPomCo",
        "committer": "pPomCo",
        "hash": "04e824d3790414ff344e5f309383b6ed4150153a",
        "message": "Contribution to ssreflect/fin*",
        "date": "2022-09-27T14:48:31Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "c8fee749a229025c35b60dca1efdd59d6c06575c",
        "message": "refactoring and simplifications",
        "date": "2022-10-02T14:07:27Z"
      }
    ]
  },
  {
    "author": "pPomCo",
    "number": 930,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/finfun.v",
        "status": "M",
        "additions": 606,
        "deletions": 0
      },
      {
        "file": "mathcomp/ssreflect/finset.v",
        "status": "M",
        "additions": 606,
        "deletions": 0
      },
      {
        "file": "mathcomp/ssreflect/fintype.v",
        "status": "M",
        "additions": 606,
        "deletions": 0
      }
    ],
    "state": "closed",
    "open_date": "2022-09-27T14:41:06Z",
    "update_date": "2022-09-27T14:43:26Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "pPomCo",
        "committer": "pPomCo",
        "hash": "f185f513b8266d6b508cf1abbaebab388e78b262",
        "message": "Contribution to ssreflect/fin*",
        "date": "2022-09-27T14:16:59Z"
      }
    ]
  },
  {
    "author": "pPomCo",
    "number": 929,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 27,
        "deletions": 0
      },
      {
        "file": "mathcomp/algebra/ssralg.v",
        "status": "M",
        "additions": 27,
        "deletions": 0
      },
      {
        "file": "mathcomp/algebra/ssrnum.v",
        "status": "M",
        "additions": 27,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2022-09-27T14:37:52Z",
    "update_date": "2022-09-30T07:31:46Z",
    "discussion": [],
    "review_discussion": [
      {
        "author": "proux01",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2022-09-28T08:16:08Z",
        "comment": "You need to \"export\" this in the `Theory` module at the end of `ssralg.v`. Otherwise the lemma will be unusable outside of ssralg."
      },
      {
        "author": "pPomCo",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2022-09-28T09:32:47Z",
        "comment": "Done"
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "pPomCo",
        "committer": "pPomCo",
        "hash": "89b292f9cead7a81108c74b2b36df93f9d9d74f3",
        "message": "Contribution to mathcomp/algebra",
        "date": "2022-09-28T09:30:14Z"
      }
    ]
  },
  {
    "author": "pPomCo",
    "number": 927,
    "diff_summary": [
      {
        "file": "mathcomp/algebra/ssralg.v",
        "status": "M",
        "additions": 737,
        "deletions": 1
      },
      {
        "file": "mathcomp/algebra/ssrnum.v",
        "status": "M",
        "additions": 737,
        "deletions": 1
      },
      {
        "file": "mathcomp/ssreflect/bigop.v",
        "status": "M",
        "additions": 737,
        "deletions": 1
      },
      {
        "file": "mathcomp/ssreflect/eqtype.v",
        "status": "M",
        "additions": 737,
        "deletions": 1
      },
      {
        "file": "mathcomp/ssreflect/finfun.v",
        "status": "M",
        "additions": 737,
        "deletions": 1
      },
      {
        "file": "mathcomp/ssreflect/finset.v",
        "status": "M",
        "additions": 737,
        "deletions": 1
      },
      {
        "file": "mathcomp/ssreflect/fintype.v",
        "status": "M",
        "additions": 737,
        "deletions": 1
      },
      {
        "file": "mathcomp/ssreflect/order.v",
        "status": "M",
        "additions": 737,
        "deletions": 1
      }
    ],
    "state": "closed",
    "open_date": "2022-09-23T12:45:33Z",
    "update_date": "2022-09-27T14:38:34Z",
    "discussion": [
      {
        "author": "pPomCo",
        "date": "2022-09-27T14:38:34Z",
        "comment": "Thanks proux01 for your fast review.\r\nAs you suggest, I will propose smaller pull requests in order to split finType-related and algebra-related lemmas.\r\nAlso I will take into account all the useful comments you made for this PR.\r\n"
      }
    ],
    "review_discussion": [
      {
        "author": "proux01",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2022-09-24T11:44:45Z",
        "comment": "Could you explain what you find this useful for? It seems to me that\r\n```Coq\r\nrewrite (mulr_ll eq)\r\n```\r\ncould be done with\r\n```Coq\r\nrewrite [X in _ * X]eq\r\n```\r\nand\r\n```Coq\r\napply: mulr_ll\r\n```\r\ncould be done with\r\n```Coq\r\ncongr (_ * _)\r\n```\r\n"
      },
      {
        "author": "proux01",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2022-09-24T11:47:21Z",
        "comment": "Can be generalized a bit:\r\n```suggestion\r\nLemma eqr_sum_div I r P (f : I -> F) c a : c != 0 ->\r\n  \\big[+%R/0]_(x <- r | P x) (f x / c) == a\r\n  = (\\big[+%R/0]_(x <- r | P x) f x == a * c).\r\nProof.\r\nby move=> ?; rewrite -mulr_suml -(divr1 a) eqr_div ?oner_eq0// mulr1 divr1.\r\nQed.\r\n```\r\n(the form `x <- r` is the most generic form of bigop, so this would also work for fintypes)."
      },
      {
        "author": "proux01",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2022-09-24T11:48:09Z",
        "comment": "```suggestion\r\nLemma ner01 : 0 != 1 :> R.\r\nProof. by rewrite eq_sym oner_eq0. Qed.\r\n```\r\nBut I wonder how useful this really is, considering the simplicity of the proof."
      },
      {
        "author": "proux01",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2022-09-24T11:48:43Z",
        "comment": "Isn't this subsumed by `ltr_spaddl`?"
      },
      {
        "author": "proux01",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2022-09-24T11:50:37Z",
        "comment": "Can be simplified a bit\r\n```suggestion\r\nLemma psumr_neq0 (I : eqType) (r : seq I) (P : pred I) (F : I -> R) :\r\n    (forall i, P i -> 0 <= F i) ->\r\n  (\\sum_(i <- r | P i) (F i) != 0) = (has (fun i => P i && (0 < F i)) r).\r\nProof.\r\nmove=> F_ge0; rewrite psumr_eq0// -has_predC; apply: eq_has => x /=.\r\nby case Px: (P x); rewrite //= lt_def F_ge0 ?andbT.\r\nQed.\r\n\r\nLemma psumr_neq0P (I : finType) (P : pred I) (F : I -> R) :\r\n     (forall i, P i -> 0 <= F i) -> \\sum_(i | P i) F i <> 0 ->\r\n  (exists i, P i && (0 < F i)).\r\nProof. by move=> ? /eqP; rewrite psumr_neq0// => /hasP[x _ ?]; exists x. Qed.\r\n```"
      },
      {
        "author": "proux01",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2022-09-24T11:51:01Z",
        "comment": "What's the difference with `addr_gte0` above?"
      },
      {
        "author": "proux01",
        "file": "mathcomp/ssreflect/bigop.v",
        "date": "2022-09-24T12:09:52Z",
        "comment": "What's the difference with bigID?"
      },
      {
        "author": "proux01",
        "file": "mathcomp/ssreflect/bigop.v",
        "date": "2022-09-24T12:27:32Z",
        "comment": "Have you considered using subType for that kind\tof things? (c.f. eqtype.v)"
      },
      {
        "author": "proux01",
        "file": "mathcomp/ssreflect/eqtype.v",
        "date": "2022-09-24T12:31:32Z",
        "comment": "Could you explain your use case? What can you do with that that's not easily feasible with `eqP`?"
      },
      {
        "author": "proux01",
        "file": "mathcomp/ssreflect/order.v",
        "date": "2022-09-26T10:46:22Z",
        "comment": "If I understand correctly, your goal is to build Monoid structures on min/max to be able to use all bigop lemmas on them. Your solution works well and this is probably the easiest one, hence the best choice for you. You are right that this min/max thing is a clear limitation of the library. However, I'm not sure we want to choose the path you propose here. Indeed, the drawback of defining new functions `omin` and `omax` is that you would have to reprove a bunch of lemmas about them. An alternative would be to declare an order structure on `option` (for instance making `none` greater that everything would make `Order.min` on this structure work as `omin`). Unfortunately this structure is not the same for `omin` and `omax` (`none` should be less than everything in that latter case) and working with different structures on the same type is rather painful. Thus we are pursuing the two following paths in the library:\r\n\r\n* generalize lemmas on monoid to semigroups or semigroups with an idempotent element (min and max being both idempotent for every element), this would allow to extend the Monoid hierarchy in the new port to hierarchy builder to use most bigop lemmas on min and max, there is an ongoing PR for that: https://github.com/math-comp/math-comp/pull/910\r\n* define an extended type with infinities, like in the `constructive_ereal.v` file in Analysis: https://github.com/math-comp/analysis/blob/master/theories/constructive_ereal.v Thus your `omin` and `omax` would just be `Order.min` and `Order.max` on this type, enabling to reuse all order lemmas. This work still needs to be integrated in MathComp proper.\r\n"
      },
      {
        "author": "pPomCo",
        "file": "mathcomp/ssreflect/order.v",
        "date": "2022-09-27T12:53:19Z",
        "comment": "Thanks proux01 for your fast review.\r\nAs you suggest, I will propose smaller pull requests in order to split finType-related and algebra-related lemmas. \r\nAlso I will take into account all the useful comments you made for this PR. "
      },
      {
        "author": "pPomCo",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2022-09-27T13:03:07Z",
        "comment": "Thanks for the syntax (and so it is useless)"
      },
      {
        "author": "pPomCo",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2022-09-27T13:03:12Z",
        "comment": "Thanks"
      },
      {
        "author": "pPomCo",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2022-09-27T13:04:52Z",
        "comment": "Yes it is"
      },
      {
        "author": "pPomCo",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2022-09-27T13:05:04Z",
        "comment": "Thanks"
      },
      {
        "author": "pPomCo",
        "file": "mathcomp/ssreflect/eqtype.v",
        "date": "2022-09-27T13:07:06Z",
        "comment": "I use it as an argument of Eqdep_dec.eq_proofs_unicity, for instance:\r\n`Eqdep_dec.eq_proofs_unicity (@eq_comparable_prop bool_eqType)`"
      },
      {
        "author": "proux01",
        "file": "mathcomp/ssreflect/eqtype.v",
        "date": "2022-09-27T13:50:21Z",
        "comment": "Makes sense but then why don't you use `eqtype.eq_irrelevance` from MathComp rather than a lemma from the stdlib?"
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "pPomCo",
        "committer": "pPomCo",
        "hash": "ef5383d41a5bcbf582d8a76b60906141b9d1c7bb",
        "message": "Contrib",
        "date": "2022-09-23T12:28:02Z"
      },
      {
        "author": "pPomCo",
        "committer": "web-flow",
        "hash": "77677eb2679caa5ed5be7204f2b2b3385c74d75a",
        "message": "Merge branch 'math-comp:master' into contrib",
        "date": "2022-09-23T12:29:19Z"
      }
    ]
  },
  {
    "author": "proux01",
    "number": 926,
    "diff_summary": [
      {
        "file": ".nix/config.nix",
        "status": "M",
        "additions": 0,
        "deletions": 10
      }
    ],
    "state": "merged",
    "open_date": "2022-09-22T11:48:54Z",
    "update_date": "2022-09-22T14:00:55Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "54fea54dc6dadfaf66d2198d96e8b6cb5fe1a1d5",
        "message": "[CI] Remove overlays\n\nNow that the overlay PRs are merged.",
        "date": "2022-09-22T11:47:59Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 925,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 14,
        "deletions": 0
      },
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 14,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2022-09-13T14:11:01Z",
    "update_date": "2022-09-14T12:21:24Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "9c424892fedc5a771657588aeb60b3cbf443d258",
        "message": "Adding subset_mapP",
        "date": "2022-09-13T14:10:33Z"
      }
    ]
  },
  {
    "author": "erikmd",
    "number": 924,
    "diff_summary": [
      {
        "file": ".gitlab-ci.yml",
        "status": "M",
        "additions": 12,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2022-09-13T13:37:08Z",
    "update_date": "2022-09-13T13:42:45Z",
    "discussion": [
      {
        "author": "proux01",
        "date": "2022-09-13T13:42:32Z",
        "comment": "Thanks!"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "erikmd",
        "committer": "erikmd",
        "hash": "48a969fe1889f8d0da35500c8ca83f54f4b89aa0",
        "message": "chore: Temporarily skip coqbot-docker-gitlab builds to save CI mins",
        "date": "2022-09-13T13:41:00Z"
      }
    ]
  },
  {
    "author": "SnarkBoojum",
    "number": 923,
    "diff_summary": [
      {
        "file": ".nix/config.nix",
        "status": "M",
        "additions": 26,
        "deletions": 13
      },
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 26,
        "deletions": 13
      },
      {
        "file": "mathcomp/algebra/poly.v",
        "status": "M",
        "additions": 26,
        "deletions": 13
      },
      {
        "file": "mathcomp/algebra/ssrnum.v",
        "status": "M",
        "additions": 26,
        "deletions": 13
      },
      {
        "file": "mathcomp/field/algebraics_fundamentals.v",
        "status": "M",
        "additions": 26,
        "deletions": 13
      },
      {
        "file": "mathcomp/field/closed_field.v",
        "status": "M",
        "additions": 26,
        "deletions": 13
      },
      {
        "file": "mathcomp/field/fieldext.v",
        "status": "M",
        "additions": 26,
        "deletions": 13
      },
      {
        "file": "mathcomp/field/finfield.v",
        "status": "M",
        "additions": 26,
        "deletions": 13
      },
      {
        "file": "mathcomp/field/separable.v",
        "status": "M",
        "additions": 26,
        "deletions": 13
      }
    ],
    "state": "merged",
    "open_date": "2022-09-13T09:17:33Z",
    "update_date": "2022-09-20T15:22:49Z",
    "discussion": [
      {
        "author": "proux01",
        "date": "2022-09-13T09:36:16Z",
        "comment": "Then, you can either try to modify the current `hornerE` but if CI reveals too many breakage, it's probably better to add a new multirule lemma. In any case, feel free to open a pull request, this will launch the CI on math-comp itself and a few reverse dependencies, enabling you to assess the impact of your change."
      },
      {
        "author": "SnarkBoojum",
        "date": "2022-09-13T09:43:12Z",
        "comment": "The impact should be pretty minimal ; if you look at the patch you'll see most proofs using `hornerE` break because they want to simplify something which is already simple."
      },
      {
        "author": "proux01",
        "date": "2022-09-13T10:05:20Z",
        "comment": "Ho, sorry, I mixed this for the issue and didn't notice it is a PR.\r\nYour patch indeed looks pretty good.\r\nAccording to the CI, you need to prepare an overlay real-closed (and then possibly CoqEAL and Abel), could you do that to check the change is reasonnable there too (maybe just add `?` to make your patch backward compatible)."
      },
      {
        "author": "SnarkBoojum",
        "date": "2022-09-13T10:12:40Z",
        "comment": "I'm clueless on how to make an overlay, but I'm already having a look at mathcomp-real-closed, I'll look into CoqEAL later.\r\n\r\nI don't know anything about Abel yet but I can probably dig."
      },
      {
        "author": "proux01",
        "date": "2022-09-13T10:18:17Z",
        "comment": "For overlays, just open a PR on the other project (real-closed, CoqEAL,...)\r\nIf you want to run the CI with the overlay here, you can update the `.nix/config.nix` file adding lines like `mathcomp-real-closed.override.version = \"SnarkBoojum:<name_of_you_branch_on_your_fork_of_real_closed>\";` in each bundle."
      },
      {
        "author": "proux01",
        "date": "2022-09-13T10:19:22Z",
        "comment": "Note that there might be nothing to do for CoqEAL and Abel, you'll find out after doing the overlay for real-closed since they both depend on real-closed."
      },
      {
        "author": "SnarkBoojum",
        "date": "2022-09-13T12:07:14Z",
        "comment": "Ok, I made a fork and tried to point config.nix to it... is it enough?"
      },
      {
        "author": "SnarkBoojum",
        "date": "2022-09-13T13:39:23Z",
        "comment": "On my box with my patches to mathcomp, mathcomp-real-closed and mathcomp-abel, everything is ok."
      },
      {
        "author": "proux01",
        "date": "2022-09-14T05:54:13Z",
        "comment": "@SnarkBoojum congrats! CI is green (and I stand corrected, the change did not break everything). Your patch looks great and I'd like to merge by next week if there is no more comments.\r\nFor this, we first need to get the two overlays (real-closed and abel) merged, since they are backward compatible. Could you open the pull requests there?"
      },
      {
        "author": "SnarkBoojum",
        "date": "2022-09-14T06:31:03Z",
        "comment": "I see three failures in the tests... so it's not all green.\r\n\r\nThe PR are opened, but it looks like MC-Abel's CI has issues with the PR, and for MC-real-closed, it looks like someone needs to manually trigger the CI."
      },
      {
        "author": "proux01",
        "date": "2022-09-14T06:47:45Z",
        "comment": "> I see three failures in the tests... so it's not all green.\r\n\r\nThose are expected because no overlays are set for the Docker based CI (but since they are successfully tested in the Nix based CI, that's fine)."
      },
      {
        "author": "SnarkBoojum",
        "date": "2022-09-14T06:56:47Z",
        "comment": "I must admit I have a hard time knowing exactly what a given check-line corresponds to -- so I don't know how problematic each is."
      },
      {
        "author": "SnarkBoojum",
        "date": "2022-09-14T07:16:00Z",
        "comment": "I'm not sure my last change on MC-Abel is that good on the new hornerE ; how can I restart the CI here?"
      },
      {
        "author": "proux01",
        "date": "2022-09-14T12:12:24Z",
        "comment": "> I'm not sure my last change on MC-Abel is that good on the new hornerE ; how can I restart the CI here?\r\n\r\nEither click on `details` on the right of the job and there should be a `Rerun all jobs` button on top right corner, or just force-push (`git commit --amend --no-edit; git push --force-with-lease`)."
      },
      {
        "author": "SnarkBoojum",
        "date": "2022-09-20T15:24:51Z",
        "comment": "Oh, @CohenCyril, thank you but shouldn't you have dealt with the real-closed PR before merging this one?"
      },
      {
        "author": "proux01",
        "date": "2022-09-20T15:27:55Z",
        "comment": "Yes, we should merge the real-closed overlay: https://github.com/math-comp/real-closed/pull/49\r\n(and remove the overlays here, I can do that in a separate PR)"
      },
      {
        "author": "CohenCyril",
        "date": "2022-09-21T15:10:58Z",
        "comment": "Oh right, I did a mistake yesterday... I was tired. Thanks noticing, and for preparing the overlay-removing PR"
      },
      {
        "author": "proux01",
        "date": "2022-09-22T14:01:32Z",
        "comment": "We are now all set, thanks @SnarkBoojum for the contribution!"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "hash": "9d51546c6f03d7e84bc2a6c5e4f328f3ac75adfd",
        "message": "Made hornerE respect powers",
        "date": "2022-09-13T09:09:37Z"
      },
      {
        "hash": "1e0fb9fad333acaafea54f2d786afe75b801be66",
        "message": "Try to run CI on adapted real-closed",
        "date": "2022-09-13T12:05:24Z"
      },
      {
        "hash": "35d7e39fb018358d29561893b9e893cbf6ee0be2",
        "message": "Try to run CI on adapted Abel",
        "date": "2022-09-13T13:24:06Z"
      }
    ]
  },
  {
    "author": "erikmd",
    "number": 922,
    "diff_summary": [
      {
        "file": ".gitlab-ci.yml",
        "status": "M",
        "additions": 22,
        "deletions": 10
      }
    ],
    "state": "merged",
    "open_date": "2022-09-11T17:15:54Z",
    "update_date": "2022-09-11T21:57:06Z",
    "discussion": [
      {
        "author": "erikmd",
        "date": "2022-09-11T20:38:15Z",
        "comment": "Thanks @proux01 for the force-push fixup :+1: "
      }
    ],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: CI",
        "description": "Issue or PR about the CI. (Gitlab CI or CI of dependencies problems linked with math-comp)"
      }
    ],
    "commits": [
      {
        "author": "erikmd",
        "committer": "proux01",
        "hash": "834d3194e00b0af6524d01a1d78abba4602cba18",
        "message": "Update .gitlab-ci.yml to take coq.8.16.0 into account (stable release)",
        "date": "2022-09-11T20:29:34Z"
      }
    ]
  },
  {
    "author": "proux01",
    "number": 919,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 16,
        "deletions": 4
      },
      {
        "file": "mathcomp/algebra/ssrint.v",
        "status": "M",
        "additions": 16,
        "deletions": 4
      }
    ],
    "state": "merged",
    "open_date": "2022-09-06T08:31:01Z",
    "update_date": "2022-10-02T11:40:42Z",
    "discussion": [
      {
        "author": "amahboubi",
        "date": "2022-09-06T09:05:51Z",
        "comment": "(approval up to ci validation)\r\n"
      },
      {
        "author": "proux01",
        "date": "2022-09-06T15:03:18Z",
        "comment": "CI seems reasonnably green (the two failures on master come from the recent merge of  https://github.com/coq/coq/pull/16004 )"
      },
      {
        "author": "proux01",
        "date": "2022-09-08T14:01:53Z",
        "comment": "CI green, does this deserve a CHANGELOG entry?"
      },
      {
        "author": "CohenCyril",
        "date": "2022-09-12T15:16:37Z",
        "comment": "> CI green, does this deserve a CHANGELOG entry?\r\n\r\nIt would be good, yes"
      },
      {
        "author": "proux01",
        "date": "2022-09-13T08:01:13Z",
        "comment": "done"
      },
      {
        "author": "CohenCyril",
        "date": "2022-10-02T11:40:29Z",
        "comment": "CI failure seems unrelated"
      },
      {
        "author": "proux01",
        "date": "2022-10-04T15:46:19Z",
        "comment": "> CI failure seems unrelated\r\n\r\nIndeed, it's due to https://github.com/math-comp/multinomials/pull/63 not being merged yet.\r\n"
      }
    ],
    "review_discussion": [
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/ssrint.v",
        "date": "2022-09-30T20:55:03Z",
        "comment": "Nitpicking, but the conventions are `n` and `m`\r\n```suggestion\r\nNotation \"n = m :> 'int'\"  := (@eq int n%Z m%Z) (only parsing)  : ring_scope.\r\nNotation \"n = m :> 'int'\"  := (Posz n = Posz m) (only printing)  : ring_scope.\r\nNotation \"n == m :> 'int'\" := ((n%Z : int) == (m%Z : int)) (only parsing)\r\n  : ring_scope.\r\nNotation \"n == m :> 'int'\" := (Posz n == Posz m) (only printing) : ring_scope.\r\nNotation \"n != m :> 'int'\" := ((n%Z : int) != (m%Z : int)) (only parsing)\r\n  : ring_scope.\r\nNotation \"n != m :> 'int'\" := (Posz n != Posz m) (only printing) : ring_scope.\r\nNotation \"n <> m :> 'int'\" := (not (@eq int n%Z m%Z)) (only parsing)\r\n  : ring_scope.\r\n```"
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "f5dc7aedfc3bef2f99158dde769ec05bb8129ddf",
        "message": "Add parsing notations for _ = _ :> int and the like\n\nThis way `2 = 1 :> int` is parsed as `2%Z = 1%Z` and not `2%R = 1%R`\n(that is `Posz 2 = Posz 1` (matching the already existing printing only\nrule for `_ = _ :> int`) and not `intmul GRIng.one 2 = GRing.one`).\nThis should enable to retrieve the parsing behavior of `_ = _ :> int`\nbefore the introduction of the number notation in ring_scope.",
        "date": "2022-10-01T06:26:57Z"
      }
    ]
  },
  {
    "author": "proux01",
    "number": 917,
    "diff_summary": [
      {
        "file": "mathcomp/algebra/ssralg.v",
        "status": "M",
        "additions": 2,
        "deletions": 2
      }
    ],
    "state": "merged",
    "open_date": "2022-09-05T11:51:59Z",
    "update_date": "2022-09-30T20:52:39Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2022-09-12T15:08:20Z",
        "comment": "@proux01 I don't understand the fix? Why does this fix the bug?"
      },
      {
        "author": "proux01",
        "date": "2022-09-12T15:37:51Z",
        "comment": "Because `f` and `g` don't have the same type, c.f., https://github.com/math-comp/math-comp/blob/017829e1c4a6d07a3acfd73b8fcec8a6952a4b96/mathcomp/algebra/ssralg.v#L2416 and https://github.com/math-comp/math-comp/blob/017829e1c4a6d07a3acfd73b8fcec8a6952a4b96/mathcomp/algebra/ssralg.v#L2429"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "abdcda4d598aae2657d0fe23dcc9e32e4417de68",
        "message": "Fix opp_fun_linear",
        "date": "2022-09-06T08:48:59Z"
      }
    ]
  },
  {
    "author": "proux01",
    "number": 915,
    "diff_summary": [
      {
        "file": ".github/workflows/nix-action-coq-8.13.yml",
        "status": "M",
        "additions": 71,
        "deletions": 114
      },
      {
        "file": ".github/workflows/nix-action-coq-8.16.yml",
        "status": "M",
        "additions": 71,
        "deletions": 114
      },
      {
        "file": ".nix/config.nix",
        "status": "M",
        "additions": 71,
        "deletions": 114
      },
      {
        "file": ".nix/coq-nix-toolbox.nix",
        "status": "M",
        "additions": 71,
        "deletions": 114
      }
    ],
    "state": "merged",
    "open_date": "2022-09-05T10:42:30Z",
    "update_date": "2022-09-06T08:47:44Z",
    "discussion": [
      {
        "author": "proux01",
        "date": "2022-09-05T12:41:31Z",
        "comment": "@affeldt-aist Analysis seems broken on Coq 8.16?"
      },
      {
        "author": "affeldt-aist",
        "date": "2022-09-05T12:43:16Z",
        "comment": "Let me check."
      },
      {
        "author": "affeldt-aist",
        "date": "2022-09-05T13:29:55Z",
        "comment": "The problem does not occur with HB 1.3.0 but it does with HB 1.2.1 and 1.2.0."
      },
      {
        "author": "proux01",
        "date": "2022-09-05T14:13:30Z",
        "comment": "@affeldt-aist thanks, looks like we had to merge https://github.com/coq-community/coq-nix-toolbox/pull/111 to get HB 1.3.0"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "5721219adb665c36f9557bf43c29876d68526357",
        "message": "[CI] Update Nix toolbox",
        "date": "2022-09-05T14:12:49Z"
      }
    ]
  },
  {
    "author": "affeldt-aist",
    "number": 914,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 10,
        "deletions": 2
      },
      {
        "file": "mathcomp/algebra/ssralg.v",
        "status": "M",
        "additions": 10,
        "deletions": 2
      },
      {
        "file": "mathcomp/field/algebraics_fundamentals.v",
        "status": "M",
        "additions": 10,
        "deletions": 2
      }
    ],
    "state": "merged",
    "open_date": "2022-09-04T23:58:24Z",
    "update_date": "2022-09-05T14:31:35Z",
    "discussion": [],
    "review_discussion": [
      {
        "author": "proux01",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2022-09-05T10:34:58Z",
        "comment": "```suggestion\r\n  + lemmas `natrS`, `natSr`\r\n```"
      },
      {
        "author": "affeldt-aist",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2022-09-05T11:16:53Z",
        "comment": "What about `natr1` and `nat1r`?"
      },
      {
        "author": "proux01",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2022-09-05T11:26:14Z",
        "comment": "I like it, that looks like `addn1` and `add1n`."
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "659d2d06dba6e29201228808c1ea3b8ccb4d3771",
        "message": "natr1",
        "date": "2022-09-05T13:15:32Z"
      }
    ]
  },
  {
    "author": "SnarkBoojum",
    "number": 912,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 13,
        "deletions": 1
      },
      {
        "file": "mathcomp/algebra/poly.v",
        "status": "M",
        "additions": 13,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2022-08-08T06:06:56Z",
    "update_date": "2022-08-13T14:24:20Z",
    "discussion": [
      {
        "author": "SnarkBoojum",
        "date": "2022-08-10T09:40:08Z",
        "comment": "I like your proofs better, indeed. I'll try to name my branches in the future."
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "hash": "811cabed0c0c6b0b5a447969a4e4a3ac0fa7731e",
        "message": "Add root_expn and root_deg1 to poly.v (Closing: #886)",
        "date": "2022-08-08T06:04:01Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "6284278695b81d0b88db9a714b691eba62ce46fa",
        "message": "Simplify proofs",
        "date": "2022-08-09T16:23:03Z"
      }
    ]
  },
  {
    "author": "gares",
    "number": 911,
    "diff_summary": [
      {
        "file": "mathcomp/test_suite/test_ssrAC.v",
        "status": "M",
        "additions": 12,
        "deletions": 6
      }
    ],
    "state": "open",
    "open_date": "2022-08-02T20:39:55Z",
    "update_date": "2022-08-02T20:39:55Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "gares",
        "committer": "gares",
        "hash": "455227c8a6fe03be99881a1595a131808ac3e623",
        "message": "remove Restart from test_suite",
        "date": "2022-08-02T20:38:33Z"
      }
    ]
  },
  {
    "author": "proux01",
    "number": 910,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 494,
        "deletions": 135
      },
      {
        "file": "mathcomp/ssreflect/bigop.v",
        "status": "M",
        "additions": 494,
        "deletions": 135
      }
    ],
    "state": "merged",
    "open_date": "2022-08-01T12:57:26Z",
    "update_date": "2022-10-27T07:53:24Z",
    "discussion": [
      {
        "author": "affeldt-aist",
        "date": "2022-08-02T01:59:05Z",
        "comment": "I just backported a few shorter proofs from mathcomp-analysis."
      },
      {
        "author": "proux01",
        "date": "2022-10-18T08:36:29Z",
        "comment": "@affeldt-aist this seems reasonably ready for nearly three months now, would you assign and merge?"
      },
      {
        "author": "affeldt-aist",
        "date": "2022-10-20T02:33:21Z",
        "comment": "> @affeldt-aist this seems reasonably ready for nearly three months now, would you assign and merge?\r\n\r\nI would have said okay a few days ago but the generalization requested in\r\nhttps://github.com/math-comp/analysis/pull/779\r\nseems (at first sight) to trigger generalizations here also. I will try to investigate\r\nthis by the end of the week."
      },
      {
        "author": "proux01",
        "date": "2022-10-21T13:41:05Z",
        "comment": "@affeldt-aist I had a look at https://github.com/math-comp/analysis/pull/779 , this made me add `big_undup_AC` here.\r\nThere are certainly other things from the mathcomp_extra.v file from analysis to backport to matchomp, but I think this backporting belongs to a further PR."
      },
      {
        "author": "proux01",
        "date": "2022-10-27T07:37:11Z",
        "comment": "@affeldt-aist is this mergeable?"
      }
    ],
    "review_discussion": [
      {
        "author": "affeldt-aist",
        "file": "mathcomp/ssreflect/bigop.v",
        "date": "2022-08-02T01:49:54Z",
        "comment": "```\r\nProof. by elim/big_ind : _ => // _ _ -> ->. Qed.\r\n```"
      },
      {
        "author": "affeldt-aist",
        "file": "mathcomp/ssreflect/bigop.v",
        "date": "2022-08-02T01:50:41Z",
        "comment": "```\r\nProof. by elim/big_rec : _ => // ? ? ?; rewrite -opA => ->. Qed.\r\n```"
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "4d141b57d215f017f847b6ceae882addd4ce7aa7",
        "message": "Generalize lemmas from monoid to semigroups\n\nMany lemmas on monoids (particularly abelian ones) where already valid\non (abelian) semigroups. This generalization could be improved by\nadding semigroups to the monoid hierarchy, when porting to HB.\n\nSome lemmas don't require a monoid with a neutral element but only an\nidempotent element. This is particularly useful for min/max that are\nidempotent but generally don't have a neutral element.",
        "date": "2022-08-01T12:53:20Z"
      },
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "fd8645e0831febb092d85fc981e5c7f62da288aa",
        "message": "backport shorter proofs from analysis",
        "date": "2022-08-02T01:58:14Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "2f339fa25ec29537b991453b7901ec241d8e18c5",
        "message": "Add big_undup_AC",
        "date": "2022-10-21T13:25:38Z"
      }
    ]
  },
  {
    "author": "thery",
    "number": 909,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 13,
        "deletions": 13
      },
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 13,
        "deletions": 13
      }
    ],
    "state": "merged",
    "open_date": "2022-07-25T14:02:05Z",
    "update_date": "2022-10-12T16:09:06Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2022-07-26T11:01:08Z",
        "comment": "Great! But even if the CI does not seem to show a single failure, this change is not backward compatible, so I'm a little bit hesitant to approve. It could be make backward compatible at the cost of naming the new (generalized) lemma slightly differently (e.g. `take_take_min`, or just `take_min` swapping the RHS and LHS of the equality).\r\n@thery what do you think?"
      },
      {
        "author": "pi8027",
        "date": "2022-07-26T11:49:28Z",
        "comment": "Related discussion: https://github.com/math-comp/math-comp/pull/381#discussion_r320603902"
      },
      {
        "author": "thery",
        "date": "2022-07-26T12:07:40Z",
        "comment": "@pi8027 oops I've missed that discussion. I know it is a breaking change but don't you think it is more reasonable like this?"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "thery",
        "committer": "thery",
        "hash": "401c9805b1460c10c4828698d237326a142a2b34",
        "message": "generalize take_take and add take_taker take_takel",
        "date": "2022-10-04T18:09:22Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 908,
    "diff_summary": [
      {
        "file": ".nix/config.nix",
        "status": "M",
        "additions": 2,
        "deletions": 3
      },
      {
        "file": ".nix/coq-nix-toolbox.nix",
        "status": "M",
        "additions": 2,
        "deletions": 3
      }
    ],
    "state": "merged",
    "open_date": "2022-07-09T09:05:47Z",
    "update_date": "2022-07-09T17:01:15Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "c1c1a98bb6940a8b6b38631936d3d7397d99a1bc",
        "message": "repair nix CI",
        "date": "2022-07-09T09:04:46Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "836eee9d81eeab019abc5538f7ec77f231ea0ad8",
        "message": "Analysis just dropped 8.13 support",
        "date": "2022-07-09T10:55:09Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "495c41f7ad08ff66dece2e9577f9d676ccbf59d3",
        "message": "[CI] Update Nix bundle 8.16",
        "date": "2022-07-09T15:36:34Z"
      }
    ]
  },
  {
    "author": "ppedrot",
    "number": 907,
    "diff_summary": [
      {
        "file": "_CoqProject",
        "status": "M",
        "additions": 15,
        "deletions": 3
      },
      {
        "file": "mathcomp/Make",
        "status": "M",
        "additions": 15,
        "deletions": 3
      },
      {
        "file": "mathcomp/algebra/Make",
        "status": "M",
        "additions": 15,
        "deletions": 3
      },
      {
        "file": "mathcomp/algebra/ssrnum.v",
        "status": "M",
        "additions": 15,
        "deletions": 3
      },
      {
        "file": "mathcomp/character/Make",
        "status": "M",
        "additions": 15,
        "deletions": 3
      },
      {
        "file": "mathcomp/field/Make",
        "status": "M",
        "additions": 15,
        "deletions": 3
      },
      {
        "file": "mathcomp/fingroup/Make",
        "status": "M",
        "additions": 15,
        "deletions": 3
      },
      {
        "file": "mathcomp/solvable/Make",
        "status": "M",
        "additions": 15,
        "deletions": 3
      },
      {
        "file": "mathcomp/ssreflect/Make",
        "status": "M",
        "additions": 15,
        "deletions": 3
      }
    ],
    "state": "merged",
    "open_date": "2022-07-06T14:06:34Z",
    "update_date": "2022-07-07T11:25:20Z",
    "discussion": [
      {
        "author": "proux01",
        "date": "2022-07-07T09:57:21Z",
        "comment": "Let's make this an error in the makefiles, to avoid introducing even more (the name of the branch is already long enough ;) ).\r\n"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "ppedrot",
        "committer": "ppedrot",
        "hash": "6874f099ce4b9e5addbd55f19d7759ceb663a844",
        "message": "Adapt again w.r.t. coq/coq#16004 after recent changes in master.\n\nFor some reason I missed those two lines, but now it seems to compile fine\nlocally on coq/coq#16004.",
        "date": "2022-07-06T14:05:10Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "1868c870cd8d83b01bd21906e211f0307a74fdd0",
        "message": "Make hint without locality an error",
        "date": "2022-07-07T09:55:53Z"
      }
    ]
  },
  {
    "author": "erikmd",
    "number": 906,
    "diff_summary": [
      {
        "file": ".gitlab-ci.yml",
        "status": "M",
        "additions": 29,
        "deletions": 18
      },
      {
        "file": "coq-mathcomp-ssreflect.opam",
        "status": "M",
        "additions": 29,
        "deletions": 18
      }
    ],
    "state": "merged",
    "open_date": "2022-07-06T11:39:29Z",
    "update_date": "2022-07-06T19:20:57Z",
    "discussion": [
      {
        "author": "erikmd",
        "date": "2022-07-06T17:08:30Z",
        "comment": "FYI the [GitLab CI pipeline](https://gitlab.com/math-comp/math-comp/-/pipelines/581464715) is now green :heavy_check_mark:\r\n\r\nSo given this PR only deals with the Docker-based GitLab CI, I think it can now be merged."
      },
      {
        "author": "proux01",
        "date": "2022-07-06T19:20:46Z",
        "comment": "Thanks!"
      }
    ],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: CI",
        "description": "Issue or PR about the CI. (Gitlab CI or CI of dependencies problems linked with math-comp)"
      }
    ],
    "commits": [
      {
        "author": "erikmd",
        "committer": "erikmd",
        "hash": "e51249e5589a4623789854552eb97f500af3eb81",
        "message": "Deploy `mathcomp/mathcomp-dev:coq-8.16`\n\n& Rm ci-analysis-8.13 job according to https://github.com/math-comp/analysis/actions/runs/2604495871\n& Add ci-analysis-dev job anew",
        "date": "2022-07-06T14:18:10Z"
      }
    ]
  },
  {
    "author": "affeldt-aist",
    "number": 905,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 5,
        "deletions": 1
      },
      {
        "file": "mathcomp/algebra/poly.v",
        "status": "M",
        "additions": 5,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2022-07-04T13:33:45Z",
    "update_date": "2022-07-04T15:50:26Z",
    "discussion": [
      {
        "author": "erikmd",
        "date": "2022-07-04T14:38:43Z",
        "comment": "> Amazingly, `eq_poly` is not used anywhere else in the mathcomp library.\r\n\r\nYes, IIRC, it had only been added for some external use, along with the `under` tactic…\r\n\r\n**Edit:** indeed, cf. this related PR: https://github.com/math-comp/math-comp/pull/292"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "1d2ff6d814aa33c71639fe89fc4ec0ad1dbe5512",
        "message": "generalize eq_poly",
        "date": "2022-07-04T13:32:14Z"
      }
    ]
  },
  {
    "author": "ppedrot",
    "number": 904,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/ssreflect.v",
        "status": "M",
        "additions": 1,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2022-07-04T12:52:07Z",
    "update_date": "2022-07-06T13:18:59Z",
    "discussion": [
      {
        "author": "gares",
        "date": "2022-07-04T13:05:29Z",
        "comment": "It is a bit sad this is not in 1.15.0, but well... "
      },
      {
        "author": "ppedrot",
        "date": "2022-07-04T13:16:47Z",
        "comment": "The change clearly introduced a new warning, maybe we need a bit more infrastructure to check this."
      },
      {
        "author": "gares",
        "date": "2022-07-04T13:24:53Z",
        "comment": "I think the infrastructure is in place since https://github.com/math-comp/math-comp/pull/891 , am I wrong?"
      },
      {
        "author": "gares",
        "date": "2022-07-04T13:25:49Z",
        "comment": "Ah, that is only in coq_project, not in Make"
      },
      {
        "author": "gares",
        "date": "2022-07-04T13:26:30Z",
        "comment": "@proux01 was it intended? I thought you wanted to keep the project clean, but _CoqProject is only used by UIs, not by `make` which uses `Make` instead, IIRC"
      },
      {
        "author": "proux01",
        "date": "2022-07-04T16:34:58Z",
        "comment": "No, that's obviously an error from me."
      },
      {
        "author": "proux01",
        "date": "2022-07-04T16:37:58Z",
        "comment": "Note that\r\n```\r\n-arg -w -arg +deprecated-hint-rewrite-without-locality\r\n```\r\nis wrong (we'll have to wait for MathComp to require Coq >= 8.14 for that).\r\nBut we could indeed put\r\n```\r\n-arg -w -arg +deprecated-hint-without-locality\r\n```\r\nin the makefiles."
      },
      {
        "author": "gares",
        "date": "2022-07-04T20:36:54Z",
        "comment": "yes, this is what I meant."
      },
      {
        "author": "ppedrot",
        "date": "2022-07-06T13:34:47Z",
        "comment": "Damn, this was not enough. I somehow missed another warning introduced in the meantime. Guess I'll have to open yet another fix PR."
      }
    ],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: clean-up",
        "description": "This issure/PR is about cleaning up obsolete code, removing hacks, etc"
      }
    ],
    "commits": [
      {
        "author": "ppedrot",
        "committer": "ppedrot",
        "hash": "b4609d225bad233ec172fb07c195ae3a4fe318ff",
        "message": "Adapt w.r.t. coq/coq#16004 after the merge of #813.",
        "date": "2022-07-04T12:51:20Z"
      }
    ]
  },
  {
    "author": "mgbedmar",
    "number": 903,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 25,
        "deletions": 0
      },
      {
        "file": "mathcomp/ssreflect/path.v",
        "status": "M",
        "additions": 25,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2022-06-30T13:29:01Z",
    "update_date": "2022-07-08T06:56:35Z",
    "discussion": [
      {
        "author": "mgbedmar",
        "date": "2022-07-04T10:37:45Z",
        "comment": "Changelog updated."
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "mgbedmar",
        "committer": "mgbedmar",
        "hash": "4b2b1424145568eafe417d5f8821a203d54c0204",
        "message": "Lemmas for preffix/infix/suffix and path/sorted",
        "date": "2022-07-04T10:35:47Z"
      }
    ]
  },
  {
    "author": "proux01",
    "number": 902,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 371,
        "deletions": 1
      },
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 371,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2022-06-24T15:47:23Z",
    "update_date": "2022-06-25T09:42:46Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: enhancement",
        "description": "Issue or PR about addition of features."
      }
    ],
    "commits": [
      {
        "author": "ed-hermoreyes",
        "committer": "proux01",
        "hash": "db48294c1b187a832f65f1bbb23dc5ed52219e2b",
        "message": "Add subchain, suffix, prefix, subchain_index",
        "date": "2022-06-24T15:30:03Z"
      },
      {
        "author": "CohenCyril",
        "committer": "proux01",
        "hash": "f405fe7c3ad2d4adcf53af0e147aaade91dfeb7b",
        "message": "simplifications, rephrasing, completions",
        "date": "2022-06-24T15:30:03Z"
      },
      {
        "author": "mgbedmar",
        "committer": "proux01",
        "hash": "5912aa0c5c8fa89f7f6ebd4b4e51d5193efd5c66",
        "message": "Update changelog",
        "date": "2022-06-24T15:30:03Z"
      }
    ]
  },
  {
    "author": "thery",
    "number": 901,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 15,
        "deletions": 1
      },
      {
        "file": "mathcomp/ssreflect/ssrnat.v",
        "status": "M",
        "additions": 15,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2022-06-22T14:32:28Z",
    "update_date": "2022-06-27T07:42:53Z",
    "discussion": [
      {
        "author": "thery",
        "date": "2022-06-23T10:59:14Z",
        "comment": "> Maybe add a similar lemma for half (something like `m <= n./2 = m.*2 <= n`).\r\n\r\ndone, thanks"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "thery",
        "committer": "thery",
        "hash": "75ca6a6011f7190f6e8d5362d32928ac388c5904",
        "message": "Adding leq_uphalf_double : (uphalf m <= n) = (m <= n.*2)\nand    geq_half_double :  (m <= n./2) = (m.*2 <= n)",
        "date": "2022-06-23T10:55:35Z"
      }
    ]
  },
  {
    "author": "erikmd",
    "number": 900,
    "diff_summary": [
      {
        "file": ".dockerignore",
        "status": "M",
        "additions": 1,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2022-06-19T14:04:58Z",
    "update_date": "2022-06-19T14:31:45Z",
    "discussion": [
      {
        "author": "proux01",
        "date": "2022-06-19T14:31:53Z",
        "comment": "Thanks!"
      }
    ],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: CI",
        "description": "Issue or PR about the CI. (Gitlab CI or CI of dependencies problems linked with math-comp)"
      }
    ],
    "commits": [
      {
        "author": "erikmd",
        "committer": "erikmd",
        "hash": "171f0b1af635dc1132f81b74f07c8ab1e0b13f4d",
        "message": "fix(.dockerignore): Add missing INITIAL_AUTHORS.md\n\n* Avoid\n  ```\n  Warning:  Rsync partially failed:\n            sending incremental file list\n            symlink has no referent: \"/home/coq/mathcomp/AUTHORS\"\n            symlink has no referent: \"/home/coq/mathcomp/mathcomp/algebra/AUTHORS\"\n            symlink has no referent: \"/home/coq/mathcomp/mathcomp/character/AUTHORS\"\n            symlink has no referent: \"/home/coq/mathcomp/mathcomp/field/AUTHORS\"\n            symlink has no referent: \"/home/coq/mathcomp/mathcomp/fingroup/AUTHORS\"\n            symlink has no referent: \"/home/coq/mathcomp/mathcomp/solvable/AUTHORS\"\n            symlink has no referent: \"/home/coq/mathcomp/mathcomp/ssreflect/AUTHORS\"\n            IO error encountered -- skipping file deletion\n  ```",
        "date": "2022-06-19T14:03:37Z"
      }
    ]
  },
  {
    "author": "erikmd",
    "number": 899,
    "diff_summary": [
      {
        "file": "Dockerfile",
        "status": "M",
        "additions": 27,
        "deletions": 17
      },
      {
        "file": "Dockerfile.make",
        "status": "M",
        "additions": 27,
        "deletions": 17
      }
    ],
    "state": "merged",
    "open_date": "2022-06-16T11:05:12Z",
    "update_date": "2022-06-16T17:11:24Z",
    "discussion": [
      {
        "author": "erikmd",
        "date": "2022-06-16T15:50:12Z",
        "comment": "Except `Nix CI for bundle coq-8.14 / category-theory (pull_request_target)`, all checks are green, including Docker-based GitLab CI jobs so I guess this can be merged now :heavy_check_mark: "
      }
    ],
    "review_discussion": [
      {
        "author": "proux01",
        "file": "Dockerfile",
        "date": "2022-06-16T11:40:40Z",
        "comment": "?"
      },
      {
        "author": "erikmd",
        "file": "Dockerfile",
        "date": "2022-06-16T12:09:01Z",
        "comment": "To give more insight, `RUN` admits two syntaxes:\r\n\r\n* the **shell form**:  \r\n  `RUN cmd1 && cmd2`  \r\n  (which uses `/bin/sh -c` as implicit shell, or `/bin/bash --login … -c` thanks to the previous `SHELL` command)\r\n\r\n* the **exec form**:  \r\n  `RUN [\"prog\", \"arg1\", \"…\"]`  \r\n  which is more \"precise\" because we can specify the shell in an explicit way, but is very rarely used in practice because it's heavier.\r\n\r\nSo this patch is just a convenience refactoring that amounts to removing one level of brackets/quoting.\r\n\r\nRegarding # hadolint ignore, it's just a Dockerfile linter annotation I had added when preparing the Dockerfiles for stable versions of math-comp.\r\n\r\nI've just run it again (`docker run --rm -i hadolint/hadolint < Dockerfile`) and it spotted more details; will force-push another commit."
      }
    ],
    "tags": [
      {
        "tag": "kind: CI",
        "description": "Issue or PR about the CI. (Gitlab CI or CI of dependencies problems linked with math-comp)"
      }
    ],
    "commits": [
      {
        "author": "erikmd",
        "committer": "erikmd",
        "hash": "035acb1c21d364f8fe32946e59caacc427abf051",
        "message": "refactor(Dockerfile): no need for multi-stage build anymore\n\n* Remove `FROM coqorg/base:bare` as all `coqorg/coq:*` are mono-switch\n* This should speedup mathcomp's CI and increase Docker layers sharing",
        "date": "2022-06-16T11:04:21Z"
      },
      {
        "author": "erikmd",
        "committer": "erikmd",
        "hash": "ace7eb71f737661df9913bb07163d174ccce3be7",
        "message": "refactor(Dockerfile): minor tweaks",
        "date": "2022-06-16T12:00:43Z"
      }
    ]
  },
  {
    "author": "affeldt-aist",
    "number": 898,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 57,
        "deletions": 649
      },
      {
        "file": "mathcomp/algebra/intdiv.v",
        "status": "M",
        "additions": 57,
        "deletions": 649
      },
      {
        "file": "mathcomp/algebra/interval.v",
        "status": "M",
        "additions": 57,
        "deletions": 649
      },
      {
        "file": "mathcomp/algebra/matrix.v",
        "status": "M",
        "additions": 57,
        "deletions": 649
      },
      {
        "file": "mathcomp/algebra/mxalgebra.v",
        "status": "M",
        "additions": 57,
        "deletions": 649
      },
      {
        "file": "mathcomp/algebra/poly.v",
        "status": "M",
        "additions": 57,
        "deletions": 649
      },
      {
        "file": "mathcomp/algebra/polydiv.v",
        "status": "M",
        "additions": 57,
        "deletions": 649
      },
      {
        "file": "mathcomp/algebra/ssrint.v",
        "status": "M",
        "additions": 57,
        "deletions": 649
      },
      {
        "file": "mathcomp/algebra/vector.v",
        "status": "M",
        "additions": 57,
        "deletions": 649
      },
      {
        "file": "mathcomp/character/classfun.v",
        "status": "M",
        "additions": 57,
        "deletions": 649
      },
      {
        "file": "mathcomp/fingroup/action.v",
        "status": "M",
        "additions": 57,
        "deletions": 649
      },
      {
        "file": "mathcomp/fingroup/perm.v",
        "status": "M",
        "additions": 57,
        "deletions": 649
      },
      {
        "file": "mathcomp/ssreflect/bigop.v",
        "status": "M",
        "additions": 57,
        "deletions": 649
      },
      {
        "file": "mathcomp/ssreflect/div.v",
        "status": "M",
        "additions": 57,
        "deletions": 649
      },
      {
        "file": "mathcomp/ssreflect/fintype.v",
        "status": "M",
        "additions": 57,
        "deletions": 649
      },
      {
        "file": "mathcomp/ssreflect/path.v",
        "status": "M",
        "additions": 57,
        "deletions": 649
      },
      {
        "file": "mathcomp/ssreflect/prime.v",
        "status": "M",
        "additions": 57,
        "deletions": 649
      },
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 57,
        "deletions": 649
      },
      {
        "file": "mathcomp/ssreflect/ssrnat.v",
        "status": "M",
        "additions": 57,
        "deletions": 649
      }
    ],
    "state": "merged",
    "open_date": "2022-06-16T03:25:50Z",
    "update_date": "2022-06-29T05:12:40Z",
    "discussion": [
      {
        "author": "proux01",
        "date": "2022-06-16T09:36:51Z",
        "comment": "Should we also remove older deprecations? Grep gives:\r\n* deprecated in 1.11: 22\r\n* deprecated in 1.12: 151\r\n* deprecated in 1.13: 22\r\n* deprecated in 1.14: 1\r\n\r\nIt feels strange to me to only remove one thing out of 22 in the 1.13 list and keep the remaining?\r\n"
      },
      {
        "author": "affeldt-aist",
        "date": "2022-06-17T06:47:57Z",
        "comment": "> It feels strange to me to only remove one thing out of 22 in the 1.13 list and keep the remaining?\r\n\r\nYou're right. Let's do that as part of this PR. I'll do that ASAP.\r\n"
      },
      {
        "author": "affeldt-aist",
        "date": "2022-06-18T17:20:13Z",
        "comment": "> > It feels strange to me to only remove one thing out of 22 in the 1.13 list and keep the remaining?\r\n> \r\n> You're right. Let's do that as part of this PR. I'll do that ASAP.\r\n\r\nAre we really supposed to remove the deprecated items marked as 1.13.0? (I understand that `big_uncond` is one of them.)"
      },
      {
        "author": "proux01",
        "date": "2022-06-28T06:48:55Z",
        "comment": "@affeldt-aist I agree to remove only 1.11 and 1.12 deprecations\r\n\r\nThis is ready, CI \"green\" (docker CI failures are due to the lack of overlay for finmap, but this works in Nix CI),\r\nthe overlay https://github.com/math-comp/finmap/pull/97 should be merged first before merging the current PR (minus the overlay commit)"
      },
      {
        "author": "proux01",
        "date": "2022-06-29T05:12:31Z",
        "comment": "Coq dev in Nix CI is broken since https://github.com/coq/coq/pull/15560 but Docker CI is ok,\r\nso I think this can be merged."
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "affeldt-aist",
        "committer": "proux01",
        "hash": "69404c91163a580f25f883c5fd421fcf6958ecb2",
        "message": "rm deprecated 1.11.0",
        "date": "2022-06-25T10:33:33Z"
      },
      {
        "author": "affeldt-aist",
        "committer": "proux01",
        "hash": "9c378444b267830696910f4dcd3f6d3e91df180d",
        "message": "rm deprecated 1.12.0",
        "date": "2022-06-25T10:46:20Z"
      }
    ]
  },
  {
    "author": "proux01",
    "number": 897,
    "diff_summary": [
      {
        "file": ".gitlab-ci.yml",
        "status": "M",
        "additions": 2,
        "deletions": 13
      },
      {
        "file": "Dockerfile",
        "status": "M",
        "additions": 2,
        "deletions": 13
      },
      {
        "file": "Dockerfile.make",
        "status": "M",
        "additions": 2,
        "deletions": 13
      }
    ],
    "state": "merged",
    "open_date": "2022-06-14T06:41:43Z",
    "update_date": "2022-06-14T08:47:54Z",
    "discussion": [
      {
        "author": "proux01",
        "date": "2022-06-14T08:47:50Z",
        "comment": "CI green !"
      }
    ],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: CI",
        "description": "Issue or PR about the CI. (Gitlab CI or CI of dependencies problems linked with math-comp)"
      }
    ],
    "commits": [
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "6fe3dee238871ed23c52b2223d34c7de5e6947be",
        "message": "[CI] Fix following https://github.com/coq-community/docker-coq/pull/47",
        "date": "2022-06-14T06:39:47Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "d4dc3ecd5c70f90ffc876d066b7406794cccb5da",
        "message": "[CI] Remove fcsl-pcm-8.13 that no longer compiles",
        "date": "2022-06-14T07:14:55Z"
      }
    ]
  },
  {
    "author": "proux01",
    "number": 896,
    "diff_summary": [
      {
        "file": ".github/workflows/nix-action-coq-8.16.yml",
        "status": "A",
        "additions": 1253,
        "deletions": 1
      },
      {
        "file": ".nix/config.nix",
        "status": "A",
        "additions": 1253,
        "deletions": 1
      },
      {
        "file": ".nix/coq-nix-toolbox.nix",
        "status": "A",
        "additions": 1253,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2022-06-13T13:00:59Z",
    "update_date": "2022-06-14T16:31:22Z",
    "discussion": [
      {
        "author": "proux01",
        "date": "2022-06-14T16:31:15Z",
        "comment": "I fixed the version of paramcoq (not yet in Nix) and disactivated coq-elpi (not yet released) and analysis."
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "3236b7a08e42e65f5f3a6e25ec03b7dcb33bdaf9",
        "message": "[CI] Add Coq 8.16+rc1 to Nix CI",
        "date": "2022-06-14T13:35:26Z"
      }
    ]
  },
  {
    "author": "proux01",
    "number": 895,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/ssrbool.v",
        "status": "M",
        "additions": 7,
        "deletions": 3
      },
      {
        "file": "mathcomp/ssreflect/ssrfun.v",
        "status": "M",
        "additions": 7,
        "deletions": 3
      }
    ],
    "state": "merged",
    "open_date": "2022-06-13T09:22:25Z",
    "update_date": "2022-06-13T10:29:11Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "f47f4090332204c6abc3c18dc6854e23591d2fee",
        "message": "Properly mark 8.17 additions\n\nNow that they are backported in Coq:\nhttps://github.com/coq/coq/pull/16158",
        "date": "2022-06-13T09:21:14Z"
      }
    ]
  },
  {
    "author": "SnarkBoojum",
    "number": 894,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 13,
        "deletions": 0
      },
      {
        "file": "mathcomp/algebra/poly.v",
        "status": "M",
        "additions": 13,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2022-06-12T13:16:34Z",
    "update_date": "2022-07-26T18:44:00Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2022-07-26T18:44:32Z",
        "comment": "@SnarkBoojum I refactored the proofs slightly and did some renamings, thanks for your contribution."
      },
      {
        "author": "proux01",
        "date": "2022-07-27T07:30:06Z",
        "comment": "Thanks @CohenCyril for having taken care of this.\r\nSorry @SnarkBoojum I should have reviewed that one much earlier but was pretty busy lately."
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "hash": "84481b7535210e2ff87ac6a106b4ab1ce748fea3",
        "message": "Add a few comm_poly_* lemmas (fixes: #885)",
        "date": "2022-06-12T13:05:59Z"
      },
      {
        "hash": "60c8b7a2fd13d95a419d3247e3c671b5f6975871",
        "message": "Declare added lemmas in CHANGELOG_UNRELEASED.md",
        "date": "2022-06-12T13:10:16Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "83a258e357535c71e6e1a8aee7ddb77968297b19",
        "message": "Renamings and shorter proofs",
        "date": "2022-07-26T12:18:46Z"
      }
    ]
  },
  {
    "author": "proux01",
    "number": 893,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 144,
        "deletions": 1
      },
      {
        "file": "mathcomp/algebra/interval.v",
        "status": "M",
        "additions": 144,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2022-06-10T11:27:08Z",
    "update_date": "2022-06-30T07:43:52Z",
    "discussion": [
      {
        "author": "gares",
        "date": "2022-06-29T13:51:15Z",
        "comment": "@affeldt-aist I merged the other PR and rebased this one. I think you should merge the CI is green (coq-master is broken, the others should work)"
      }
    ],
    "review_discussion": [
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/interval.v",
        "date": "2022-06-15T09:08:12Z",
        "comment": "As discussed in the MathComp meeting, I thought we should put some parentheses here (to control the ordering of applying rewrite rules), although this does not seem to be a blocking issue. https://github.com/math-comp/math-comp/blob/master/mathcomp/fingroup/fingroup.v#L640-L641 https://github.com/math-comp/math-comp/blob/master/mathcomp/ssreflect/ssrnat.v#L1849"
      },
      {
        "author": "gares",
        "file": "mathcomp/algebra/interval.v",
        "date": "2022-06-29T08:49:56Z",
        "comment": "I don't recall this feature to be documented (I mean, the order being altered by parentheses)."
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "proux01",
        "committer": "affeldt-aist",
        "hash": "0c6e09698b6f91b4cb569a3da96cbedc75dc269e",
        "message": "Backport interval lemmas from Analysis\n\nCo-authored-by: Cyril Cohen <cohen@crans.org>\nCo-authored-by: Reynald Affeldt <reynald.affeldt@aist.go.jp>",
        "date": "2022-06-29T14:02:32Z"
      }
    ]
  },
  {
    "author": "proux01",
    "number": 891,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 79,
        "deletions": 81
      },
      {
        "file": "_CoqProject",
        "status": "M",
        "additions": 79,
        "deletions": 81
      },
      {
        "file": "mathcomp/Make",
        "status": "M",
        "additions": 79,
        "deletions": 81
      },
      {
        "file": "mathcomp/_CoqProject",
        "status": "M",
        "additions": 79,
        "deletions": 81
      },
      {
        "file": "mathcomp/algebra/Make",
        "status": "M",
        "additions": 79,
        "deletions": 81
      },
      {
        "file": "mathcomp/algebra/fraction.v",
        "status": "M",
        "additions": 79,
        "deletions": 81
      },
      {
        "file": "mathcomp/algebra/intdiv.v",
        "status": "M",
        "additions": 79,
        "deletions": 81
      },
      {
        "file": "mathcomp/algebra/matrix.v",
        "status": "M",
        "additions": 79,
        "deletions": 81
      },
      {
        "file": "mathcomp/algebra/mxalgebra.v",
        "status": "M",
        "additions": 79,
        "deletions": 81
      },
      {
        "file": "mathcomp/algebra/polydiv.v",
        "status": "M",
        "additions": 79,
        "deletions": 81
      },
      {
        "file": "mathcomp/algebra/rat.v",
        "status": "M",
        "additions": 79,
        "deletions": 81
      },
      {
        "file": "mathcomp/algebra/ssrnum.v",
        "status": "M",
        "additions": 79,
        "deletions": 81
      },
      {
        "file": "mathcomp/algebra/vector.v",
        "status": "M",
        "additions": 79,
        "deletions": 81
      },
      {
        "file": "mathcomp/character/Make",
        "status": "M",
        "additions": 79,
        "deletions": 81
      },
      {
        "file": "mathcomp/character/classfun.v",
        "status": "M",
        "additions": 79,
        "deletions": 81
      },
      {
        "file": "mathcomp/field/Make",
        "status": "M",
        "additions": 79,
        "deletions": 81
      },
      {
        "file": "mathcomp/field/algC.v",
        "status": "M",
        "additions": 79,
        "deletions": 81
      },
      {
        "file": "mathcomp/field/algnum.v",
        "status": "M",
        "additions": 79,
        "deletions": 81
      },
      {
        "file": "mathcomp/field/cyclotomic.v",
        "status": "M",
        "additions": 79,
        "deletions": 81
      },
      {
        "file": "mathcomp/fingroup/Make",
        "status": "M",
        "additions": 79,
        "deletions": 81
      },
      {
        "file": "mathcomp/fingroup/automorphism.v",
        "status": "M",
        "additions": 79,
        "deletions": 81
      },
      {
        "file": "mathcomp/fingroup/fingroup.v",
        "status": "M",
        "additions": 79,
        "deletions": 81
      },
      {
        "file": "mathcomp/solvable/Make",
        "status": "M",
        "additions": 79,
        "deletions": 81
      },
      {
        "file": "mathcomp/ssreflect/Make",
        "status": "M",
        "additions": 79,
        "deletions": 81
      },
      {
        "file": "mathcomp/ssreflect/bigop.v",
        "status": "M",
        "additions": 79,
        "deletions": 81
      },
      {
        "file": "mathcomp/ssreflect/div.v",
        "status": "M",
        "additions": 79,
        "deletions": 81
      },
      {
        "file": "mathcomp/ssreflect/eqtype.v",
        "status": "M",
        "additions": 79,
        "deletions": 81
      },
      {
        "file": "mathcomp/ssreflect/fingraph.v",
        "status": "M",
        "additions": 79,
        "deletions": 81
      },
      {
        "file": "mathcomp/ssreflect/finset.v",
        "status": "M",
        "additions": 79,
        "deletions": 81
      },
      {
        "file": "mathcomp/ssreflect/fintype.v",
        "status": "M",
        "additions": 79,
        "deletions": 81
      },
      {
        "file": "mathcomp/ssreflect/generic_quotient.v",
        "status": "M",
        "additions": 79,
        "deletions": 81
      },
      {
        "file": "mathcomp/ssreflect/order.v",
        "status": "M",
        "additions": 79,
        "deletions": 81
      },
      {
        "file": "mathcomp/ssreflect/prime.v",
        "status": "M",
        "additions": 79,
        "deletions": 81
      },
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 79,
        "deletions": 81
      },
      {
        "file": "mathcomp/ssreflect/ssrnat.v",
        "status": "M",
        "additions": 79,
        "deletions": 81
      },
      {
        "file": "mathcomp/ssreflect/tuple.v",
        "status": "M",
        "additions": 79,
        "deletions": 81
      }
    ],
    "state": "merged",
    "open_date": "2022-06-09T16:33:39Z",
    "update_date": "2022-06-29T13:39:15Z",
    "discussion": [
      {
        "author": "proux01",
        "date": "2022-06-17T11:20:47Z",
        "comment": "I tried with `#[export]` instead of `#[global]` but mathcomp would not even compile (although putting back global on `Hint Resolve lexx le_refl ltxx lt_irreflexive ltW lt_eqF : core.` in order.v would make MathComp compile and all the CI except Coquelicot).\r\nI'd rather be extra cautious here and vote for `#[global]` so as to keep the current behavior.\r\n"
      }
    ],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: warning",
        "description": "Issue or PR about a warning raised by Coq"
      }
    ],
    "commits": [
      {
        "author": "proux01",
        "committer": "gares",
        "hash": "b7d8203c2732c2803d32bb79b18f515450910ff4",
        "message": "Remove hint-without-locality warnings",
        "date": "2022-06-29T12:26:20Z"
      },
      {
        "author": "gares",
        "committer": "gares",
        "hash": "3d099739f706313b3e5413b09b5a5912d8b0b600",
        "message": "update changelog",
        "date": "2022-06-29T12:31:40Z"
      }
    ]
  },
  {
    "author": "proux01",
    "number": 890,
    "diff_summary": [
      {
        "file": ".github/workflows/nix-action-coq-8.13.yml",
        "status": "M",
        "additions": 822,
        "deletions": 1
      },
      {
        "file": ".github/workflows/nix-action-coq-8.14.yml",
        "status": "M",
        "additions": 822,
        "deletions": 1
      },
      {
        "file": ".github/workflows/nix-action-coq-8.15.yml",
        "status": "M",
        "additions": 822,
        "deletions": 1
      },
      {
        "file": ".github/workflows/nix-action-coq-master.yml",
        "status": "M",
        "additions": 822,
        "deletions": 1
      },
      {
        "file": ".nix/config.nix",
        "status": "M",
        "additions": 822,
        "deletions": 1
      },
      {
        "file": ".nix/coq-nix-toolbox.nix",
        "status": "M",
        "additions": 822,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2022-06-08T11:18:32Z",
    "update_date": "2022-06-08T15:52:13Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "7018852f45ea49ee623b0bd8899b1cc7ddaa6e0f",
        "message": "Update Nix",
        "date": "2022-06-08T12:53:55Z"
      }
    ]
  },
  {
    "author": "proux01",
    "number": 889,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 107,
        "deletions": 0
      },
      {
        "file": "mathcomp/algebra/ssrnum.v",
        "status": "M",
        "additions": 107,
        "deletions": 0
      },
      {
        "file": "mathcomp/ssreflect/bigop.v",
        "status": "M",
        "additions": 107,
        "deletions": 0
      },
      {
        "file": "mathcomp/ssreflect/order.v",
        "status": "M",
        "additions": 107,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2022-06-07T15:12:29Z",
    "update_date": "2022-06-29T12:23:07Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "proux01",
        "committer": "affeldt-aist",
        "hash": "bba5d596530fb82745f7be405431b7b422f6c8e1",
        "message": "Add lemma gtr_opp\n\nCo-authored-by: Cyril Cohen <cohen@crans.org>\nCo-authored-by: Reynald Affeldt <reynald.affeldt@aist.go.jp>",
        "date": "2022-06-29T08:22:45Z"
      },
      {
        "author": "proux01",
        "committer": "affeldt-aist",
        "hash": "27ccea1e99b36eabe7ff2f5fdd4336ceb3d754df",
        "message": "Add lemma le_le_trans\n\nCo-authored-by: Cyril Cohen <cohen@crans.org>\nCo-authored-by: Reynald Affeldt <reynald.affeldt@aist.go.jp>",
        "date": "2022-06-29T08:22:45Z"
      },
      {
        "author": "proux01",
        "committer": "affeldt-aist",
        "hash": "92ac59fe707490f825313b3cb33b8073cf9f16b6",
        "message": "Add lemmas eq_bigl_supp, perm_big_supp_cond and perm_big_supp\n\nCo-authored-by: Cyril Cohen <cohen@crans.org>\nCo-authored-by: Reynald Affeldt <reynald.affeldt@aist.go.jp>",
        "date": "2022-06-29T08:22:45Z"
      },
      {
        "author": "proux01",
        "committer": "affeldt-aist",
        "hash": "9e74821aac0eec4f53e36d1ba5f64a14e34989a8",
        "message": "Add lemmas mulr_ge0_gt0, splitr, ler_addgt0Pr, ler_addgt0Pl, lt_le, gt_ge\n\nCo-authored-by: Cyril Cohen <cohen@crans.org>\nCo-authored-by: Reynald Affeldt <reynald.affeldt@aist.go.jp>",
        "date": "2022-06-29T08:22:45Z"
      }
    ]
  },
  {
    "author": "proux01",
    "number": 887,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 62,
        "deletions": 4
      },
      {
        "file": "mathcomp/algebra/ssralg.v",
        "status": "M",
        "additions": 62,
        "deletions": 4
      },
      {
        "file": "mathcomp/character/mxabelem.v",
        "status": "M",
        "additions": 62,
        "deletions": 4
      },
      {
        "file": "mathcomp/fingroup/gproduct.v",
        "status": "M",
        "additions": 62,
        "deletions": 4
      },
      {
        "file": "mathcomp/ssreflect/order.v",
        "status": "M",
        "additions": 62,
        "deletions": 4
      }
    ],
    "state": "merged",
    "open_date": "2022-06-03T13:34:10Z",
    "update_date": "2022-06-18T16:13:47Z",
    "discussion": [
      {
        "author": "proux01",
        "date": "2022-06-18T14:49:27Z",
        "comment": "CI green (there was a conflict of notation with a lonely `\\*` notation in gproduct.v, putting it in scope `group_scope` fixed the issue)."
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "bf1cf7f29f8e248c3009ae706cfe0f06ea6c7788",
        "message": "Add \\- f",
        "date": "2022-06-17T12:01:11Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "009f947b06298b2fa98426085c4fbf0773bce09e",
        "message": "Put \\* notation in group_scope",
        "date": "2022-06-17T13:41:51Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "2647ec8d270451da24d46f514a7a5376c7793606",
        "message": "Add f \\* g",
        "date": "2022-06-17T13:41:51Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "03a34a03f632b461bb17551fe2735934d649b26d",
        "message": "Add f \\min g and f \\max g",
        "date": "2022-06-17T13:41:51Z"
      }
    ]
  },
  {
    "author": "thery",
    "number": 883,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 5,
        "deletions": 1
      },
      {
        "file": "mathcomp/algebra/rat.v",
        "status": "M",
        "additions": 5,
        "deletions": 1
      },
      {
        "file": "mathcomp/algebra/ssralg.v",
        "status": "M",
        "additions": 5,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2022-05-21T12:37:46Z",
    "update_date": "2022-06-07T12:16:46Z",
    "discussion": [
      {
        "author": "proux01",
        "date": "2022-06-07T09:38:59Z",
        "comment": "Changelog added, let's merge when CI is green."
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "thery",
        "committer": "proux01",
        "hash": "f7388a5ade29ea599b48f958154a5e0fdd96330a",
        "message": "missing export for eqr_div",
        "date": "2022-06-07T09:38:00Z"
      }
    ]
  },
  {
    "author": "proux01",
    "number": 882,
    "diff_summary": [
      {
        "file": "mathcomp/algebra/ssralg.v",
        "status": "M",
        "additions": 1,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2022-05-08T10:13:50Z",
    "update_date": "2022-05-30T12:22:32Z",
    "discussion": [
      {
        "author": "proux01",
        "date": "2022-05-30T12:16:36Z",
        "comment": "Maybe this one can be merged too :)"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "08c1a5cc1852036640441ea944bfa78d5ecc5e67",
        "message": "typo",
        "date": "2022-05-08T10:12:48Z"
      }
    ]
  },
  {
    "author": "jouvelot",
    "number": 881,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 12,
        "deletions": 0
      },
      {
        "file": "mathcomp/ssreflect/tuple.v",
        "status": "M",
        "additions": 12,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2022-05-07T14:31:56Z",
    "update_date": "2022-06-07T12:17:23Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2022-05-10T10:26:33Z",
        "comment": "HI @jouvelot you seem to have made this branch out of an outdated version of master. You should rebase on top of master before doing any PR. The command is `git pull --rebase upstream master`"
      },
      {
        "author": "jouvelot",
        "date": "2022-05-10T10:42:34Z",
        "comment": "Thanks a lot, Cyril. I tried that command, and got\r\n```\r\n[nix-shell:~/Desktop/ownCloud/Github/pierre/math-comp]$ git status\r\nOn branch tuple_uniqP\r\nYour branch is up to date with 'origin/tuple_uniqP'.\r\n\r\nUntracked files:\r\n  (use \"git add <file>...\" to include in what will be committed)\r\n\t.emacs\r\n\tmathcomp/algebra/ssrtelescope.v\r\n\r\nnothing added to commit but untracked files present (use \"git add\" to track)\r\n\r\n[nix-shell:~/Desktop/ownCloud/Github/pierre/math-comp]$ git pull --rebase upstream master\r\nfatal: 'upstream' does not appear to be a git repository\r\nfatal: Could not read from remote repository.\r\n\r\nPlease make sure you have the correct access rights\r\nand the repository exists.\r\n```\r\nAny suggestion before I create a new PR from scratch, for this small piece of code?"
      },
      {
        "author": "CohenCyril",
        "date": "2022-05-10T10:46:26Z",
        "comment": "> Thanks a lot, Cyril. I tried that command, and got\r\n> \r\n> ```\r\n> [nix-shell:~/Desktop/ownCloud/Github/pierre/math-comp]$ git status\r\n> On branch tuple_uniqP\r\n> Your branch is up to date with 'origin/tuple_uniqP'.\r\n> \r\n> Untracked files:\r\n>   (use \"git add <file>...\" to include in what will be committed)\r\n> \t.emacs\r\n> \tmathcomp/algebra/ssrtelescope.v\r\n> \r\n> nothing added to commit but untracked files present (use \"git add\" to track)\r\n> \r\n> [nix-shell:~/Desktop/ownCloud/Github/pierre/math-comp]$ git pull --rebase upstream master\r\n> fatal: 'upstream' does not appear to be a git repository\r\n> fatal: Could not read from remote repository.\r\n> \r\n> Please make sure you have the correct access rights\r\n> and the repository exists.\r\n> ```\r\n> \r\n> Any suggestion before I create a new PR from scratch, for this small piece of code?\r\n\r\nDear @jouvelot, this conversation is evolving into git debbuging, and I need more information on your local setup, please let's switch to zulip for such questions."
      },
      {
        "author": "jouvelot",
        "date": "2022-05-10T12:23:51Z",
        "comment": "Yes, I was having this feeling too ;) To avoid wasting your time, I'll try to make a new clean PR asap. Thanks for your help :)"
      },
      {
        "author": "CohenCyril",
        "date": "2022-05-10T13:57:25Z",
        "comment": "You do not need to close, you can rebase and update this one..."
      },
      {
        "author": "CohenCyril",
        "date": "2022-05-10T14:17:46Z",
        "comment": "> You do not need to close, you can rebase and update this one...\r\n\r\n@jouvelot I reopened, rebased and simplified the hypotheses and the proof of your lemma."
      },
      {
        "author": "jouvelot",
        "date": "2022-05-10T15:40:09Z",
        "comment": "Thanks a lot, Cyril. And the lemma and proof are much nicer :)"
      },
      {
        "author": "CohenCyril",
        "date": "2022-05-11T16:07:19Z",
        "comment": "Dear @jouvelot you added a commit (13e3440) which makes the history dirty since it's an empty merge commit. Could you clarify your intentions with this commit, did you intended to bring an additional fix or should I discard it and merge?"
      },
      {
        "author": "jouvelot",
        "date": "2022-05-11T18:30:50Z",
        "comment": "Hello @CohenCyril. I'm not sure where this comes from; maybe because I tried to clean up my PR before seeing your message stating that you had already done it for me. My knowledge of git is marginal, at best ;) So, yes, you can discard it and merge. Thanks a lot and sorry for the inconvenience. "
      },
      {
        "author": "proux01",
        "date": "2022-06-07T09:42:23Z",
        "comment": "Added changelog, let's merge when CI is green."
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "jouvelot",
        "committer": "CohenCyril",
        "hash": "4663603da0f92de32369ac46990a6d50fa9418ce",
        "message": "Adding tuple_uniqP.",
        "date": "2022-05-10T13:30:51Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "68114e5935271d774153b4a43200fcbc13ce9de7",
        "message": "shorter proof with less hypothesese",
        "date": "2022-05-10T14:16:46Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "90a75afe4f9e482838b903ca337df2ea6eebcb53",
        "message": "Add changelog",
        "date": "2022-06-07T09:42:03Z"
      }
    ]
  },
  {
    "author": "joscoh",
    "number": 879,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 740,
        "deletions": 0
      },
      {
        "file": "mathcomp/field/finfield.v",
        "status": "M",
        "additions": 740,
        "deletions": 0
      },
      {
        "file": "mathcomp/ssreflect/ssrnat.v",
        "status": "M",
        "additions": 740,
        "deletions": 0
      }
    ],
    "state": "open",
    "open_date": "2022-05-02T16:13:28Z",
    "update_date": "2023-01-27T15:58:42Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2022-05-18T13:33:02Z",
        "comment": "@joscoh thanks for your PR, I will comment later. Meanwhile it looks to me like there is some common points with [an old PR of mine](https://github.com/math-comp/math-comp/pull/210), so we should probably try to achieve one satisfying both goals."
      },
      {
        "author": "thery",
        "date": "2022-10-19T08:24:51Z",
        "comment": "I have also something similar [divpoly](https://github.com/thery/mathcomp-extra/blob/master/divpoly.v)."
      },
      {
        "author": "clayrat",
        "date": "2023-01-05T14:36:28Z",
        "comment": "> @joscoh thanks for your PR, I will comment later. Meanwhile it looks to me like there is some common points with [an old PR of mine](#210), so we should probably try to achieve one satisfying both goals.\r\n\r\nLooks like the link should be https://github.com/math-comp/math-comp/pull/210\r\n"
      },
      {
        "author": "thery",
        "date": "2023-01-07T09:29:31Z",
        "comment": "would be nice to reactivate this PR (New year resolution :wink:). This is something that is clearly missing in `field`"
      },
      {
        "author": "thery",
        "date": "2023-01-23T16:15:01Z",
        "comment": "@joscoh hi, I've tried to merge all the contributions about finite field in #959. \r\nWhere can I find your code to see if it is an ok replacement for what you have put in this PR?\r\n"
      },
      {
        "author": "joscoh",
        "date": "2023-01-23T21:53:00Z",
        "comment": "> @joscoh hi, I've tried to merge all the contributions about finite field in #959. Where can I find your code to see if it is an ok replacement for what you have put in this PR?\r\n\r\nThe code where I use the finite field construction is at [verified-network-toolchain/Verified-FEC](https://github.com/verified-network-toolchain/Verified-FEC). `proofs/Poly/PolyField.v` is my pull request. I mainly use this to define the GF(256) field structure on bytes in `proofs/Poly/ByteField.v`, and then to prove the correctness of a procedure to populate the power, log, and inverse tables efficiently.\r\n\r\nI can port my proofs once the final PR is merged. Thanks for working on this!"
      },
      {
        "author": "thery",
        "date": "2023-01-25T04:46:09Z",
        "comment": "it is always a good idea to do some testing  before merging :wink: \r\n I will give it a try. Thanks"
      },
      {
        "author": "joscoh",
        "date": "2023-01-25T20:51:03Z",
        "comment": "I updated that repo to the most recent Coq platform (Coq 8.16.1, Mathcomp 1.15). I will try to do some testing as well. Thanks."
      },
      {
        "author": "thery",
        "date": "2023-01-26T11:55:19Z",
        "comment": "I've already done something [here](https://github.com/thery/Verified-FEC/tree/qpoly)\r\nThese are really impressive proofs!!. I managed to update `ByteField` but it shows many problems with my PR I should fix.\r\n That is very useful!"
      },
      {
        "author": "thery",
        "date": "2023-01-27T09:36:21Z",
        "comment": "@joscoh I have [a version](https://github.com/thery/Verified-FEC/tree/qpoly) that compiles with https://github.com/math-comp/math-comp/pull/959."
      },
      {
        "author": "joscoh",
        "date": "2023-01-27T15:58:41Z",
        "comment": "Looks great, thank you!"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "joscoh",
        "committer": "joscoh",
        "hash": "099da71a826e5842c8b2b66e531fe639cf623997",
        "message": "Add construction of finite fields via irreducible polys",
        "date": "2022-04-29T20:49:05Z"
      },
      {
        "author": "joscoh",
        "committer": "joscoh",
        "hash": "74ad8d88c6d1bbf692fb45e546068674c4d41ee4",
        "message": "Results about fields modulo primitive polynomials",
        "date": "2022-04-29T21:17:56Z"
      },
      {
        "author": "joscoh",
        "committer": "joscoh",
        "hash": "45f3a3cf25655e3ba1d49acf71e5f52ec2e0acea",
        "message": "Update changelog and comments",
        "date": "2022-05-02T16:11:50Z"
      }
    ]
  },
  {
    "author": "proux01",
    "number": 878,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 49,
        "deletions": 340
      },
      {
        "file": "mathcomp/solvable/gseries.v",
        "status": "M",
        "additions": 49,
        "deletions": 340
      },
      {
        "file": "mathcomp/ssreflect/eqtype.v",
        "status": "M",
        "additions": 49,
        "deletions": 340
      },
      {
        "file": "mathcomp/ssreflect/ssrbool.v",
        "status": "M",
        "additions": 49,
        "deletions": 340
      },
      {
        "file": "mathcomp/ssreflect/ssreflect.v",
        "status": "M",
        "additions": 49,
        "deletions": 340
      },
      {
        "file": "mathcomp/ssreflect/ssrfun.v",
        "status": "M",
        "additions": 49,
        "deletions": 340
      }
    ],
    "state": "merged",
    "open_date": "2022-04-21T14:36:49Z",
    "update_date": "2022-06-03T02:31:17Z",
    "discussion": [
      {
        "author": "proux01",
        "date": "2022-05-30T07:25:30Z",
        "comment": "Any assignee? (this should be a rather easy one)"
      },
      {
        "author": "affeldt-aist",
        "date": "2022-05-30T07:37:35Z",
        "comment": "I skimmed through the changelog and found no mistake.\r\nMost CI errors seem to be nix related but not the mathcomp-analysis one..."
      },
      {
        "author": "proux01",
        "date": "2022-05-30T12:16:05Z",
        "comment": "@affeldt-aist good catch, some lemmas indeed have slightly different implicit arguments, I warned on that in the changelog and made a (backward compatible) overlay for analysis: https://github.com/math-comp/analysis/pull/666"
      },
      {
        "author": "proux01",
        "date": "2022-06-01T13:52:23Z",
        "comment": "Thanks @affeldt-aist so analysis is now fine and CI is \"green\""
      }
    ],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: clean-up",
        "description": "This issure/PR is about cleaning up obsolete code, removing hacks, etc"
      }
    ],
    "commits": [
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "84563b6bb5189c427a0ddd2daade4dbdbb368d19",
        "message": "Remove old compatibility code for Coq < 8.13\n\nThis code is now useless since we require Coq >= 8.13.",
        "date": "2022-05-30T11:53:22Z"
      }
    ]
  },
  {
    "author": "eupp",
    "number": 877,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 49,
        "deletions": 4
      },
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 49,
        "deletions": 4
      }
    ],
    "state": "merged",
    "open_date": "2022-04-19T13:22:58Z",
    "update_date": "2022-04-29T19:10:44Z",
    "discussion": [
      {
        "author": "proux01",
        "date": "2022-04-24T09:58:50Z",
        "comment": "Thanks @eupp ! I've made a few additional simplifications / whitespace cleaning.\r\nIf you agree and there is no more comment, I'll merge by the end of (next) week.\r\n"
      },
      {
        "author": "eupp",
        "date": "2022-04-26T09:35:40Z",
        "comment": "> Thanks @eupp ! I've made a few additional simplifications / whitespace cleaning. If you agree and there is no more comment, I'll merge by the end of (next) week.\r\n\r\n@proux01 thank you for cleaning up my proofs!\r\nI have few remarks:\r\n\r\n1) If we keep the name `nth_seq1`, should we also rename `nth_nil` to `nth_seq0`?\r\n\r\n2) In `count_set_nth_small` is the suffix `_small` is standard naming convention in `ssreflect`?\r\nI can see only one lemma in `seq.v` following this convention: `perm_small_eq`.\r\nAt the same time many other similar lemmas use alternative convention with suffix `_leq` (e.g. `has_take_leq`, `in_take_leq`, etc). I personally prefer the latter (with `_leq`), but it's up to maintainers to decide :)\r\n\r\n3) I was wondering, should we add more lemmas about `set_nth` that can be deduced from `count_set_nthE`? \r\nFor example, lemmas about `has`, `all`, etc? I didn't need them in my project (from which I ported current lemmas), but they also can be useful. Perhaps we should add them in a follow-up PR?"
      },
      {
        "author": "proux01",
        "date": "2022-04-26T09:54:54Z",
        "comment": "1. No, `_nil` seems to be the usual suffix for `[::]` (`Search \"_nil\" in seq.` returns results whereas `seq0` doesn't exist) whereas the suffix for lists of length one seems to be `_seq1`.\r\n\r\n2. Right, let's go for `_ltn`.\r\n\r\n3. I'd say the rules are\r\n   * when adding a lemma, add all lemmas of the same \"family\" (that's why I complemented `count_set_nthF` with `count_set_nth_ltn`)\r\n   * don't clutter things with lemmas that are too direct combinations of existing lemmas\r\n\r\n   So yes a further PR may be worth it.\r\n"
      }
    ],
    "review_discussion": [
      {
        "author": "proux01",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2022-04-21T07:56:48Z",
        "comment": "I would expect a more generic lemma, like\r\n```suggestion\r\nLemma set_nthE :\r\n  set_nth x0 s n x\r\n  = if n < size s then take n s ++ x :: drop n.+1 s\r\n    else s ++ ncons (n - size s) x0 [:: x].\r\n```\r\nfrom which the current lemma can be derived."
      },
      {
        "author": "proux01",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2022-04-21T07:58:02Z",
        "comment": "Same, there should be a more generic lemma from which this could be derived."
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "eupp",
        "committer": "proux01",
        "hash": "9aaae68f044d0e8637bab9e39b019c65589b290f",
        "message": "Add a few lemmas about set_nth",
        "date": "2022-04-29T17:20:03Z"
      }
    ]
  },
  {
    "author": "eupp",
    "number": 876,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 8,
        "deletions": 0
      },
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 8,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2022-04-18T16:45:24Z",
    "update_date": "2022-06-07T12:20:31Z",
    "discussion": [
      {
        "author": "proux01",
        "date": "2022-06-07T09:58:47Z",
        "comment": "@eupp sorry for the late answer, thanks for the PR!\r\nI changed the proof a bit (that's definitely nitpicking) and I'll merge once CI is green."
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "eupp",
        "committer": "proux01",
        "hash": "3c424f71dc16c8e7be9263cfd0206528fb35e832",
        "message": "add subseq_anti",
        "date": "2022-06-07T12:19:26Z"
      },
      {
        "author": "eupp",
        "committer": "proux01",
        "hash": "cf7fb8635995cbd766fb9a2b33b9bf1ca907758a",
        "message": "update changelog",
        "date": "2022-06-07T12:19:56Z"
      }
    ]
  },
  {
    "author": "eupp",
    "number": 875,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 12,
        "deletions": 0
      },
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 12,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2022-04-18T14:54:25Z",
    "update_date": "2022-04-22T15:07:09Z",
    "discussion": [
      {
        "author": "eupp",
        "date": "2022-04-22T10:44:25Z",
        "comment": "> Could you rebase? Then this is good to go.\r\n\r\nDone!"
      }
    ],
    "review_discussion": [
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2022-04-19T13:52:10Z",
        "comment": "I would suggest stating this using `reflect` since its converse also holds:\r\n```suggestion\r\nLemma mkseq_uniqP (f : nat -> T) n :\r\n  reflect {in iota 0 n &, injective f} (uniq (mkseq f n)).\r\nProof.\r\napply: (iffP idP); last by move/map_inj_in_uniq ->; apply: iota_uniq.\r\nmove=> /(uniqP (f 0)) Huniq i j; rewrite !mem_iota add0n !leq0n /= => Hi Hj fij.\r\nby apply: Huniq; rewrite ?size_mkseq // !nth_mkseq.\r\nQed.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2022-04-20T08:48:12Z",
        "comment": "It would be better to use `gtn n` rather that `iota 0 n` as the injectivity domain, since this would avoid exposing users to the internals of `mkseq`. Perhaps\r\n```suggestion\r\n  reflect {in gtn n &, injective f} (uniq (mkseq f n)).\r\nProof.\r\napply: (equivP (uniqP (f 0))); rewrite size_mkseq.\r\nby split=> injf i j lti ltj; have:= injf i j lti ltj; rewrite !nth_mkseq.\r\n```"
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "eupp",
        "committer": "eupp",
        "hash": "8471ae5aaf8e153716ae9eaeca4640b11670309b",
        "message": "add mkseqS, mkseq_in_uniq",
        "date": "2022-04-22T10:43:13Z"
      },
      {
        "author": "eupp",
        "committer": "eupp",
        "hash": "f24f0621364f8288d70fcefc6d026478c771a55a",
        "message": "update changelog",
        "date": "2022-04-22T10:43:13Z"
      },
      {
        "author": "eupp",
        "committer": "eupp",
        "hash": "37229d406a32661adaec75172e7dba34f8695ea3",
        "message": "Apply suggestions from code review\n\nCo-authored-by: Kazuhiko Sakaguchi <pi8027@gmail.com>",
        "date": "2022-04-22T10:43:13Z"
      },
      {
        "author": "eupp",
        "committer": "eupp",
        "hash": "80aa4c2b415496f453647b9a9df3b7114986c422",
        "message": "Apply suggestions from code review\n\nCo-authored-by: Georges Gonthier <georges.gonthier@inria.fr>",
        "date": "2022-04-22T10:43:13Z"
      },
      {
        "author": "eupp",
        "committer": "eupp",
        "hash": "dbcdcd035900e6a5c783fd0f968ae4790ff61f68",
        "message": "update changelog",
        "date": "2022-04-22T10:43:13Z"
      },
      {
        "author": "eupp",
        "committer": "eupp",
        "hash": "db892778a23a730e19b6dc0845509700d107649f",
        "message": "fix changelog",
        "date": "2022-04-22T10:49:17Z"
      }
    ]
  },
  {
    "author": "proux01",
    "number": 874,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 118,
        "deletions": 0
      },
      {
        "file": "mathcomp/ssreflect/ssrbool.v",
        "status": "M",
        "additions": 118,
        "deletions": 0
      },
      {
        "file": "mathcomp/ssreflect/ssrfun.v",
        "status": "M",
        "additions": 118,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2022-04-15T15:29:28Z",
    "update_date": "2022-05-30T10:22:50Z",
    "discussion": [
      {
        "author": "proux01",
        "date": "2022-04-19T14:22:09Z",
        "comment": "Thanks for the changelog, CI green"
      },
      {
        "author": "proux01",
        "date": "2022-05-30T07:26:41Z",
        "comment": "@affeldt-aist more than one month without any comment, you can probably merge"
      },
      {
        "author": "affeldt-aist",
        "date": "2022-05-30T07:42:55Z",
        "comment": "> @affeldt-aist more than one month without any comment, you can probably merge\r\n\r\nIndeed. There is however a conflict in the changelog."
      }
    ],
    "review_discussion": [
      {
        "author": "affeldt-aist",
        "file": "mathcomp/ssreflect/ssrbool.v",
        "date": "2022-04-19T23:44:48Z",
        "comment": "Shouldn't this be `pred_oapp`?"
      },
      {
        "author": "proux01",
        "file": "mathcomp/ssreflect/ssrbool.v",
        "date": "2022-04-20T07:47:38Z",
        "comment": "I find `pred_omap` more natural. It feels to me as an option map on predicates.\r\nBut I suck at monads, so you might still be right.\r\n"
      },
      {
        "author": "affeldt-aist",
        "file": "mathcomp/ssreflect/ssrbool.v",
        "date": "2022-04-21T00:24:32Z",
        "comment": "I am not sure either but I have a doubt because of the mismatch between the name and the contents of the definition."
      },
      {
        "author": "proux01",
        "file": "mathcomp/ssreflect/ssrbool.v",
        "date": "2022-04-21T13:54:44Z",
        "comment": "I agree, let's go for `pred_oapp` then."
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "ef21316c31d4e567e77454cd36f95644e7ceeb39",
        "message": "Add various lemmas about option\n\nFrom the mathcomp_extra.v file of Analysis.\n\nCo-authored-by: Cyril Cohen <cohen@crans.org>",
        "date": "2022-05-30T08:14:27Z"
      },
      {
        "author": "affeldt-aist",
        "committer": "proux01",
        "hash": "c7d4c5be05b771db78fd95cd70148c27d10c0e7f",
        "message": "update changelog",
        "date": "2022-05-30T08:14:27Z"
      }
    ]
  },
  {
    "author": "proux01",
    "number": 873,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 20,
        "deletions": 1
      },
      {
        "file": "mathcomp/ssreflect/fintype.v",
        "status": "M",
        "additions": 20,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2022-04-15T14:58:02Z",
    "update_date": "2022-04-19T22:29:39Z",
    "discussion": [
      {
        "author": "proux01",
        "date": "2022-04-19T14:17:15Z",
        "comment": "Thanks for the changelog, CI morally green."
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "506c53ee47930de0aba0620dec1eb1aae37bb944",
        "message": "Add enum_ord0 and enum_ordS\n\nFrom mathcomp_extra.v in Analysis.\n\nCo-authored-by: Cyril Cohen <cohen@crans.org>",
        "date": "2022-04-15T14:56:26Z"
      },
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "fe153e406c663b11c4ad9f26d5c87a17a10cdfb6",
        "message": "update changelog",
        "date": "2022-04-18T02:23:00Z"
      },
      {
        "author": "affeldt-aist",
        "committer": "web-flow",
        "hash": "2f3844c01da3556b63cc503ed78c19d208bcc3f9",
        "message": "Merge branch 'master' into enum_ord0S",
        "date": "2022-04-19T14:19:01Z"
      }
    ]
  },
  {
    "author": "proux01",
    "number": 872,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 13,
        "deletions": 0
      },
      {
        "file": "mathcomp/ssreflect/ssrbool.v",
        "status": "M",
        "additions": 13,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2022-04-15T14:42:18Z",
    "update_date": "2022-04-19T14:16:46Z",
    "discussion": [
      {
        "author": "proux01",
        "date": "2022-04-19T14:15:11Z",
        "comment": "Thanks for the changelog, CI is as green as it can be."
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "e5e9df2b884cd0f765739a75876b63b237bf2a5d",
        "message": "Add all_sig2_cond\n\nFrom the mathcomp_extra.v file of Analysis.\n\nCo-authored-by: Cyril Cohen <cohen@crans.org>",
        "date": "2022-04-15T14:41:41Z"
      },
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "9637899fe6ce6aa5c396d2716455d9fda3709ad7",
        "message": "update changelog",
        "date": "2022-04-18T02:31:36Z"
      }
    ]
  },
  {
    "author": "proux01",
    "number": 871,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 2,
        "deletions": 0
      },
      {
        "file": "mathcomp/ssreflect/choice.v",
        "status": "M",
        "additions": 2,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2022-04-15T14:10:29Z",
    "update_date": "2022-04-20T06:45:51Z",
    "discussion": [
      {
        "author": "proux01",
        "date": "2022-04-19T14:10:15Z",
        "comment": "Thanks for the changelog entry, I indeed forgot it."
      },
      {
        "author": "proux01",
        "date": "2022-04-19T14:13:21Z",
        "comment": "Unfortunately, this breaks analysis in the CI because it's mathcomp_extra file tries to redeclare the coercion which is unfortunately an error. I have to think about a transition plan :cry:"
      },
      {
        "author": "pi8027",
        "date": "2022-04-19T14:18:59Z",
        "comment": "> Unfortunately, this breaks analysis in the CI because it's mathcomp_extra file tries to redeclare the coercion which is unfortunately an error. I have to think about a transition plan cry\r\n\r\n@proux01 What about:\r\n```coq\r\nFrom mathcomp Require choice.\r\nCoercion Choice.mixin : ... .\r\nImport choice.\r\n````\r\nin `mathcomp_extra`?"
      },
      {
        "author": "proux01",
        "date": "2022-04-19T15:28:41Z",
        "comment": "Thanks @pi8027 this seems to work, so we could:\r\n* merge https://github.com/math-comp/analysis/pull/654\r\n* relaunch CI here\r\n* provided it's green, merge here"
      },
      {
        "author": "affeldt-aist",
        "date": "2022-04-20T05:13:55Z",
        "comment": "The CI seems to indicate that MathComp-Analysis compiles with this commit and KS's trick. Let's merge? @proux01 "
      },
      {
        "author": "proux01",
        "date": "2022-04-20T06:42:20Z",
        "comment": "Great"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "proux01",
        "committer": "affeldt-aist",
        "hash": "7fc03a07b11ba8f4296121c6603fa45db213a7f6",
        "message": "Add missing coercion\n\nFrom the mathcomp_extra.v file fo Analysis.\n\nCo-authored-by: Cyril Cohen <cohen@crans.org>",
        "date": "2022-04-20T00:05:04Z"
      },
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "73efbb88f23d42bfa623e14fbd52dbf24b210d48",
        "message": "update changelog",
        "date": "2022-04-20T00:05:04Z"
      }
    ]
  },
  {
    "author": "affeldt-aist",
    "number": 869,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 114,
        "deletions": 79
      },
      {
        "file": "mathcomp/algebra/fraction.v",
        "status": "M",
        "additions": 114,
        "deletions": 79
      },
      {
        "file": "mathcomp/algebra/mxpoly.v",
        "status": "M",
        "additions": 114,
        "deletions": 79
      },
      {
        "file": "mathcomp/algebra/poly.v",
        "status": "M",
        "additions": 114,
        "deletions": 79
      },
      {
        "file": "mathcomp/algebra/polyXY.v",
        "status": "M",
        "additions": 114,
        "deletions": 79
      },
      {
        "file": "mathcomp/algebra/polydiv.v",
        "status": "M",
        "additions": 114,
        "deletions": 79
      },
      {
        "file": "mathcomp/algebra/rat.v",
        "status": "M",
        "additions": 114,
        "deletions": 79
      },
      {
        "file": "mathcomp/character/character.v",
        "status": "M",
        "additions": 114,
        "deletions": 79
      },
      {
        "file": "mathcomp/character/inertia.v",
        "status": "M",
        "additions": 114,
        "deletions": 79
      },
      {
        "file": "mathcomp/solvable/abelian.v",
        "status": "M",
        "additions": 114,
        "deletions": 79
      },
      {
        "file": "mathcomp/ssreflect/div.v",
        "status": "M",
        "additions": 114,
        "deletions": 79
      },
      {
        "file": "mathcomp/ssreflect/eqtype.v",
        "status": "M",
        "additions": 114,
        "deletions": 79
      },
      {
        "file": "mathcomp/ssreflect/order.v",
        "status": "M",
        "additions": 114,
        "deletions": 79
      },
      {
        "file": "mathcomp/ssreflect/prime.v",
        "status": "M",
        "additions": 114,
        "deletions": 79
      },
      {
        "file": "mathcomp/ssreflect/ssrnat.v",
        "status": "M",
        "additions": 114,
        "deletions": 79
      }
    ],
    "state": "merged",
    "open_date": "2022-04-05T09:23:31Z",
    "update_date": "2022-05-04T08:19:55Z",
    "discussion": [
      {
        "author": "ybertot",
        "date": "2022-04-05T11:24:32Z",
        "comment": "LGTM, but\r\n\r\n- It feels that users will rarely use these, because it takes too much remembering that these pattern exist.\r\n- This suggests that the \"RHS\" notation should be usable to denote the right-hand side of equalities and inequalities alike.  How would that be possible?  It seems that one would need to be able to define \"multi-patterns\" (disjunctions of patterns), in the same way that we already define multi-rules.  On the surface, it seems an easy thing to define, but digging more deeply, it feels that providing this together with extensibility (as in extending multi-rules) is quite hard actually."
      },
      {
        "author": "ybertot",
        "date": "2022-04-05T11:29:55Z",
        "comment": "Another issue I have with this PR is that it corrects some spacing problems which are independent from the subject in the title.  It is too bad that these corrections will be forgotten if this PR is not incorporated."
      },
      {
        "author": "CohenCyril",
        "date": "2022-04-05T12:46:02Z",
        "comment": "> * This suggests that the \"RHS\" notation should be usable to denote the right-hand side of equalities and inequalities alike.  How would that be possible?\r\n\r\nI tried at some point and failed: this was too ambiguous, e.g. for which `r` would `RHS` match `y` in `r x y`? \r\nEven if we narrow `r` down to a few symbols (e.g. through some for of table, e.g. canonical projections),\r\nmany goals containing `_ <= _` also contain `_ = _`, if we are not more precise than just `RHS` how do we specify?\r\nThe ad-hoc solution here is to tailor customized patterns for the most frequently used...\r\n\r\nLike many things in ssr most people will not use it until they really feel the need, and that's when they must be able find them through documentation. Maybe we should rewrite a mathcomp local addentum to https://coq.inria.fr/refman/proof-engine/ssreflect-proof-language.html for that purpose?"
      },
      {
        "author": "affeldt-aist",
        "date": "2022-04-14T09:50:47Z",
        "comment": "The topic was discussed during the last mathcomp-dev meeting, see https://github.com/math-comp/math-comp/wiki/Minutes-April-06-2022.\r\nAfter the meeting @gares figured out a way based on @CohenCyril 's idea:\r\n```\r\nNotation LEFT symb := (X in symb X _)%pattern.\r\n```\r\nwith the following comment: \"one still needs to put in %pattern scope some notations for the usual infix symbols.\"\r\n\r\nShould it come as a replacement or an addition?"
      },
      {
        "author": "CohenCyril",
        "date": "2022-04-14T12:30:42Z",
        "comment": "> Should it come as a replacement or an addition?\r\n\r\nI would vote for \"as an addition\""
      },
      {
        "author": "gares",
        "date": "2022-04-14T12:45:31Z",
        "comment": "I guess one needs to make the scope explicit around symb as well. And test it a little, since I did not do it very carefully."
      },
      {
        "author": "thery",
        "date": "2022-04-14T12:46:37Z",
        "comment": "a pity we can't write  `[LEFT <=]` and `[LEFT =]`"
      },
      {
        "author": "gares",
        "date": "2022-04-14T13:07:23Z",
        "comment": "I think you can if you add these notations in the pattern scope (not as infix, just as atoms)."
      },
      {
        "author": "thery",
        "date": "2022-04-14T13:11:45Z",
        "comment": "I am pretty bad at notation I tried to add\r\n`Notation \"LEFT <=\" := (X in X <= _)%pattern (at level 10).`\r\nand it broke everything :see_no_evil: \r\n"
      },
      {
        "author": "gares",
        "date": "2022-04-14T13:16:14Z",
        "comment": "I'm not on my pc\r\n```\r\nNotation \"<=\" := leq : symb_scope.\r\nNotation \"LEFT f\" := (X in f%symb X _)%pattern.\r\n```"
      },
      {
        "author": "affeldt-aist",
        "date": "2022-04-14T13:22:29Z",
        "comment": "> I would vote for \"as an addition\"\r\n\r\nThen we can maybe merge this one for now and issue for the more general pattern (it might require some testing).\r\n"
      },
      {
        "author": "thery",
        "date": "2022-04-14T13:25:47Z",
        "comment": "I have tried\r\n```coq\r\nNotation \"<=\" := leq : symb_scope.\r\nDelimit Scope symb_scope with symb.\r\nNotation \"'LEFT' f\" := (X in f%symb X _)%pattern (at level 10).\r\nGoal 1 <= 2 .\r\n```\r\nand I get a\r\n`Unknown interpretation for notation \"<=\".`\r\nfor the `<=` in the goal.\r\n"
      },
      {
        "author": "CohenCyril",
        "date": "2022-04-14T13:36:56Z",
        "comment": "I think we need to create a new nonterminal (a.k.a. custom entry) for that otherwise we will screw up the main parser."
      },
      {
        "author": "thery",
        "date": "2022-04-14T13:53:41Z",
        "comment": "ok this works\r\n```coq\r\nDeclare Custom Entry symb.\r\nNotation \"<=\" := leq (in custom symb at level 0).\r\nNotation \"'LEFT' f\" := (X in f X _)%pattern (f in custom symb, at level 10).\r\nGoal 1 <= 2 .\r\nrewrite -[LEFT <=](addn1).\r\n```"
      }
    ],
    "review_discussion": [
      {
        "author": "thery",
        "file": "mathcomp/ssreflect/eqtype.v",
        "date": "2022-04-14T13:01:45Z",
        "comment": "should it not be `eqbLHS`?"
      },
      {
        "author": "affeldt-aist",
        "file": "mathcomp/ssreflect/eqtype.v",
        "date": "2022-04-14T13:20:34Z",
        "comment": "for the sake of consistency indeed, but `eqLHS` is free and shorter; if we enforce consistency to have `eqbLHS` then we could think of using `eqLHS` instead of `LHS` and that does not seem a good idea given than it is used very often"
      },
      {
        "author": "thery",
        "file": "mathcomp/ssreflect/eqtype.v",
        "date": "2022-04-14T13:27:52Z",
        "comment": "my poor brain prefers consistency :wink: "
      },
      {
        "author": "thery",
        "file": "mathcomp/ssreflect/eqtype.v",
        "date": "2022-04-14T13:34:40Z",
        "comment": "I would prefer `eqLHS` to be a synonymous of `LHS` and is there a need for `leqLHS` and `ltnLHS` or is this captured by `leLHS` and `ltLHS`?"
      },
      {
        "author": "affeldt-aist",
        "file": "mathcomp/ssreflect/eqtype.v",
        "date": "2022-04-22T15:00:03Z",
        "comment": "The last push force added leqLHS, etc. They seem quite useful. As for adding eqLHS as a synonymous of LHS, it looks like it better be an addition to Coq's ssrmatching.v. Should we PR this to Coq?"
      },
      {
        "author": "clayrat",
        "file": "mathcomp/ssreflect/ssrnat.v",
        "date": "2022-04-28T22:27:46Z",
        "comment": "Should this be `(X in (_ <= X)%N)`?"
      },
      {
        "author": "affeldt-aist",
        "file": "mathcomp/ssreflect/ssrnat.v",
        "date": "2022-04-28T23:25:52Z",
        "comment": "Indeed, thank you for noticing!"
      }
    ],
    "tags": [
      {
        "tag": "kind: enhancement",
        "description": "Issue or PR about addition of features."
      }
    ],
    "commits": [
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "43129d5077d68b2ae67c2480bc1ed9b760071012",
        "message": "pattern for rewriting Boolean (in)equalities",
        "date": "2022-04-28T23:27:22Z"
      },
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "9a3a1a797c80b393f37b1985071f20dc38c75692",
        "message": "update changelog",
        "date": "2022-04-28T23:27:22Z"
      },
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "68073e16e4bc41625d25cad6642dc2f6fad86f22",
        "message": "fix",
        "date": "2022-04-29T07:35:26Z"
      }
    ]
  },
  {
    "author": "jonsterling",
    "number": 868,
    "diff_summary": [
      {
        "file": "CONTRIBUTING.md",
        "status": "M",
        "additions": 4,
        "deletions": 4
      }
    ],
    "state": "merged",
    "open_date": "2022-03-31T18:33:17Z",
    "update_date": "2022-03-31T23:56:18Z",
    "discussion": [
      {
        "author": "affeldt-aist",
        "date": "2022-03-31T23:56:52Z",
        "comment": "Thank you!"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "jonsterling",
        "committer": "web-flow",
        "hash": "c0e0ec5319f8f8b8c27cf9d815994b0fd89598af",
        "message": "Fix several typos in CONTRIBUTING.md\n\nhypohteses => hypotheses",
        "date": "2022-03-31T18:31:54Z"
      }
    ]
  },
  {
    "author": "proux01",
    "number": 867,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/ssrAC.v",
        "status": "M",
        "additions": 1,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2022-03-27T15:12:15Z",
    "update_date": "2022-03-31T08:32:08Z",
    "discussion": [
      {
        "author": "proux01",
        "date": "2022-03-31T08:31:58Z",
        "comment": "Merging, so as not to block https://github.com/coq/coq/pull/15693"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "8a58c6aca9dae96e5410cb40f30d1bf81331b72b",
        "message": "Adapt to coq/coq#15693",
        "date": "2022-03-27T15:10:07Z"
      }
    ]
  },
  {
    "author": "proux01",
    "number": 866,
    "diff_summary": [
      {
        "file": "coq-mathcomp-algebra.opam",
        "status": "M",
        "additions": 6,
        "deletions": 6
      },
      {
        "file": "coq-mathcomp-character.opam",
        "status": "M",
        "additions": 6,
        "deletions": 6
      },
      {
        "file": "coq-mathcomp-field.opam",
        "status": "M",
        "additions": 6,
        "deletions": 6
      },
      {
        "file": "coq-mathcomp-fingroup.opam",
        "status": "M",
        "additions": 6,
        "deletions": 6
      },
      {
        "file": "coq-mathcomp-solvable.opam",
        "status": "M",
        "additions": 6,
        "deletions": 6
      },
      {
        "file": "coq-mathcomp-ssreflect.opam",
        "status": "M",
        "additions": 6,
        "deletions": 6
      }
    ],
    "state": "merged",
    "open_date": "2022-03-18T14:40:29Z",
    "update_date": "2022-03-21T22:58:55Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: clean-up",
        "description": "This issure/PR is about cleaning up obsolete code, removing hacks, etc"
      }
    ],
    "commits": [
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "fb739a3aaad3943740692b92e6aef4ed4089e6ce",
        "message": "Clean OPAM files now that we require Coq >= 8.13",
        "date": "2022-03-18T14:42:07Z"
      }
    ]
  },
  {
    "author": "thery",
    "number": 865,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 4,
        "deletions": 5
      }
    ],
    "state": "merged",
    "open_date": "2022-03-18T10:38:31Z",
    "update_date": "2022-03-18T12:47:54Z",
    "discussion": [
      {
        "author": "thery",
        "date": "2022-03-18T12:03:14Z",
        "comment": "@proux01 why I get all these errors in the Nix CI?"
      },
      {
        "author": "proux01",
        "date": "2022-03-18T12:08:47Z",
        "comment": "@thery Coq master is broken on Nix since https://github.com/coq/coq/pull/15220 (that's a known issue, but fixing it requires some Nix expert, so it will likely take some more time)"
      },
      {
        "author": "proux01",
        "date": "2022-03-18T12:46:30Z",
        "comment": "CI green, let's squash and merge"
      }
    ],
    "review_discussion": [
      {
        "author": "proux01",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2022-03-18T10:44:15Z",
        "comment": "spurious space ?"
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "thery",
        "committer": "proux01",
        "hash": "f1547531d9b01611b4736eb46d47facf6b53e5df",
        "message": "reformat mask_filter",
        "date": "2022-03-18T12:50:45Z"
      }
    ]
  },
  {
    "author": "thery",
    "number": 864,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 7,
        "deletions": 1
      },
      {
        "file": "mathcomp/ssreflect/bigop.v",
        "status": "M",
        "additions": 7,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2022-03-18T08:16:57Z",
    "update_date": "2022-03-19T17:43:26Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "thery",
        "committer": "thery",
        "hash": "737c3f8a6f7262862a7e7ea2c98512db2f85efe6",
        "message": "Addind leq_prod",
        "date": "2022-03-18T08:10:48Z"
      }
    ]
  },
  {
    "author": "ggonthier",
    "number": 863,
    "diff_summary": [
      {
        "file": ".nix/config.nix",
        "status": "M",
        "additions": 231,
        "deletions": 108
      },
      {
        "file": ".nix/coq-overlays/graph-theory/default.nix",
        "status": "M",
        "additions": 231,
        "deletions": 108
      },
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 231,
        "deletions": 108
      },
      {
        "file": "mathcomp/algebra/mxalgebra.v",
        "status": "M",
        "additions": 231,
        "deletions": 108
      },
      {
        "file": "mathcomp/algebra/mxpoly.v",
        "status": "M",
        "additions": 231,
        "deletions": 108
      },
      {
        "file": "mathcomp/algebra/poly.v",
        "status": "M",
        "additions": 231,
        "deletions": 108
      },
      {
        "file": "mathcomp/algebra/ssralg.v",
        "status": "M",
        "additions": 231,
        "deletions": 108
      },
      {
        "file": "mathcomp/algebra/ssrnum.v",
        "status": "M",
        "additions": 231,
        "deletions": 108
      },
      {
        "file": "mathcomp/character/character.v",
        "status": "M",
        "additions": 231,
        "deletions": 108
      },
      {
        "file": "mathcomp/character/inertia.v",
        "status": "M",
        "additions": 231,
        "deletions": 108
      },
      {
        "file": "mathcomp/character/integral_char.v",
        "status": "M",
        "additions": 231,
        "deletions": 108
      },
      {
        "file": "mathcomp/character/mxabelem.v",
        "status": "M",
        "additions": 231,
        "deletions": 108
      },
      {
        "file": "mathcomp/character/mxrepresentation.v",
        "status": "M",
        "additions": 231,
        "deletions": 108
      },
      {
        "file": "mathcomp/field/algebraics_fundamentals.v",
        "status": "M",
        "additions": 231,
        "deletions": 108
      },
      {
        "file": "mathcomp/field/galois.v",
        "status": "M",
        "additions": 231,
        "deletions": 108
      },
      {
        "file": "mathcomp/field/separable.v",
        "status": "M",
        "additions": 231,
        "deletions": 108
      },
      {
        "file": "mathcomp/fingroup/action.v",
        "status": "M",
        "additions": 231,
        "deletions": 108
      },
      {
        "file": "mathcomp/fingroup/perm.v",
        "status": "M",
        "additions": 231,
        "deletions": 108
      },
      {
        "file": "mathcomp/fingroup/presentation.v",
        "status": "M",
        "additions": 231,
        "deletions": 108
      },
      {
        "file": "mathcomp/solvable/abelian.v",
        "status": "M",
        "additions": 231,
        "deletions": 108
      },
      {
        "file": "mathcomp/solvable/alt.v",
        "status": "M",
        "additions": 231,
        "deletions": 108
      },
      {
        "file": "mathcomp/solvable/burnside_app.v",
        "status": "M",
        "additions": 231,
        "deletions": 108
      },
      {
        "file": "mathcomp/solvable/cyclic.v",
        "status": "M",
        "additions": 231,
        "deletions": 108
      },
      {
        "file": "mathcomp/solvable/frobenius.v",
        "status": "M",
        "additions": 231,
        "deletions": 108
      },
      {
        "file": "mathcomp/solvable/maximal.v",
        "status": "M",
        "additions": 231,
        "deletions": 108
      },
      {
        "file": "mathcomp/solvable/primitive_action.v",
        "status": "M",
        "additions": 231,
        "deletions": 108
      },
      {
        "file": "mathcomp/ssreflect/binomial.v",
        "status": "M",
        "additions": 231,
        "deletions": 108
      },
      {
        "file": "mathcomp/ssreflect/eqtype.v",
        "status": "M",
        "additions": 231,
        "deletions": 108
      },
      {
        "file": "mathcomp/ssreflect/fingraph.v",
        "status": "M",
        "additions": 231,
        "deletions": 108
      },
      {
        "file": "mathcomp/ssreflect/finset.v",
        "status": "M",
        "additions": 231,
        "deletions": 108
      },
      {
        "file": "mathcomp/ssreflect/fintype.v",
        "status": "M",
        "additions": 231,
        "deletions": 108
      },
      {
        "file": "mathcomp/ssreflect/path.v",
        "status": "M",
        "additions": 231,
        "deletions": 108
      },
      {
        "file": "mathcomp/ssreflect/prime.v",
        "status": "M",
        "additions": 231,
        "deletions": 108
      },
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 231,
        "deletions": 108
      },
      {
        "file": "mathcomp/ssreflect/ssrbool.v",
        "status": "M",
        "additions": 231,
        "deletions": 108
      }
    ],
    "state": "merged",
    "open_date": "2022-03-15T22:09:39Z",
    "update_date": "2023-01-22T17:15:42Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2022-03-18T09:14:42Z",
        "comment": "Am I right that this is a backward compatible change? As long as client code does not start using `[in A]` and keep using `mem A`, they will not be impacted in anyway. If that's the case I do not see why not push the changes to Coq's ssrbool straight away."
      },
      {
        "author": "ggonthier",
        "date": "2022-03-24T17:06:25Z",
        "comment": "As it stands, part of the change  is not backward compatible : adding the new `[in A]` notation obviously is, but using it in the `[predU A & B]`, `[predI A & B]`, etc. notation is not. It breaks various fragile scripts that rely on `rewrite inE` of such notation exposing a `mem A x` (really `pred_of_simpl (simpl_of_mem (mem A)) x`) subterm, as explained the rationale.\r\n   The PR fixes this in `mathcomp` proper, as do math-comp/odd-order#40 and coq-community/fourcolor#42 for `odd-order` and `foucolor`, respectively (in a backward compatible way), but CI also indicates a similar failure in `graph-theory`, for which I've yet to propose a fix (I'm not set up to compile it right now).\r\n   It thus seems prudent to fix the clients before pushing the full PR to `coq/ssrbool`, though of course the definition of `[in A]` could be pushed immediately."
      },
      {
        "author": "chdoc",
        "date": "2022-03-24T19:45:04Z",
        "comment": "> but CI also indicates a similar failure in `graph-theory`, for which I've yet to propose a fix (I'm not set up to compile it right now).\r\n\r\nIf needed, I can try to investigate and fix this next week, but I'm out of office until Tuesday. "
      },
      {
        "author": "pi8027",
        "date": "2022-04-01T08:12:14Z",
        "comment": "This PR looks good to me except for the above minor suggestion and CI, but I have an impression that I don't understand Boolean predicates of MathComp deep enough. It is probably better if someone else can review it.\r\n\r\nBTW, do we still want to keep `[mem A]`? When should we consider using it?"
      },
      {
        "author": "chdoc",
        "date": "2022-04-01T08:29:34Z",
        "comment": "Is there some `nix` command that would allow me to quickly get to the context the CI will be in when trying to build `graph-theory` on top of this PR? "
      },
      {
        "author": "CohenCyril",
        "date": "2022-04-01T09:27:47Z",
        "comment": "> Is there some nix command that would allow me to quickly get to the context the CI will be in when trying to build graph-theory on top of this PR?\r\n\r\n\r\nRun this in the current branch\r\n```\r\nnix-shell --no-out-link --argstr bundle \"coq-8.14\" --argstr job \"graph-theory\"\r\n```\r\nThen cd to your graph-theory workdir\r\n"
      },
      {
        "author": "chdoc",
        "date": "2022-04-01T14:12:17Z",
        "comment": "It appears that in the part of `graph-theory` that is checked by the MathComp CI there is only one line that breaks.\r\n\r\nI noticed that the Nix package used in the CI does not build the part that depends on `fourcolor`. In the opam package, `fourcolor` is an optional dependency (i.e., Wagner's theorem is only checked and installed if `fourcolor` is available). \r\n\r\nWhat do I have to add to the `nix-shell` invocation in order to add the (cached) `fourcolor` run on PR `#42` (the overlay for this PR)?\r\n"
      },
      {
        "author": "proux01",
        "date": "2022-06-15T08:48:05Z",
        "comment": "@ggonthier could you please rebase so that we could merge?"
      },
      {
        "author": "affeldt-aist",
        "date": "2023-01-18T09:28:57Z",
        "comment": "As discussed during the last meeting, we are planning to merge this PR.\r\nBefore we merge, @chdoc could you test that `graph-theory` still compiles with this PR?\r\n(Since `graph-theory` requires the Four color theorem, the default CI test is only partial.)"
      },
      {
        "author": "proux01",
        "date": "2023-01-18T09:45:09Z",
        "comment": "@affeldt-aist in fact, since https://github.com/math-comp/math-comp/pull/956 we have a Nix CI overlay that tests it (long story short: they moved to dune in graph-theory master, which made `make` build unconditionally with fourcolor and broke the dev Nix derivation).\r\nSo if CI is green, it's fine.\r\n"
      },
      {
        "author": "affeldt-aist",
        "date": "2023-01-18T09:57:24Z",
        "comment": "> @affeldt-aist in fact, since #956 we have a Nix CI overlay that tests it (long story short: they moved to dune in graph-theory master, which made `make` build unconditionally with fourcolor and broke the dev Nix derivation). So if CI is green, it's fine.\r\n\r\nThanks for information. I missed it.\r\n"
      },
      {
        "author": "CohenCyril",
        "date": "2023-01-18T16:08:40Z",
        "comment": "> @affeldt-aist in fact, since #956 we have a Nix CI overlay that tests it (long story short: they moved to dune in graph-theory master, which made `make` build unconditionally with fourcolor and broke the dev Nix derivation).\r\n> So if CI is green, it's fine.\r\n\r\n~~AFAIU they released a 0.9.1 version with a separation between two packages `graph-theory` and `graph-theory-planar`, only the latter depends on fourcolor, I added it as a PR to nixpkgs and I started a job at https://github.com/coq-community/coq-nix-toolbox/pull/130 to test it... However there is an independent failure (about smtcoq) that might delay the integration here. We might either trust 0.9 results or make an overlay using my PR https://github.com/NixOS/nixpkgs/pull/211137~~\r\n\r\nEDIT: I got it wrong about 0.9.1. So I restored the previous version but testing 0.9.1 with Coq >= 8.14"
      },
      {
        "author": "proux01",
        "date": "2023-01-18T19:02:36Z",
        "comment": "> EDIT: I got it wrong about 0.9.1. So I restored the previous version but testing 0.9.1 with Coq >= 8.14\r\n\r\nMy understanding of `.nix/config.nix` is that the tested version is master."
      },
      {
        "author": "CohenCyril",
        "date": "2023-01-20T14:08:32Z",
        "comment": "Multinomials is failing now and I do not understand why, it didn't change since 2 days ago @proux01 @strub any hints?"
      },
      {
        "author": "proux01",
        "date": "2023-01-20T16:28:13Z",
        "comment": "@CohenCyril no idea, I'll have a look tomorrow."
      },
      {
        "author": "proux01",
        "date": "2023-01-21T15:47:36Z",
        "comment": "@CohenCyril : so, the PR is changing the names of a few implicit arguments in `seq.v`.\r\nHere is an overlay for multinomials: https://github.com/math-comp/multinomials/pull/68 , I also updated the CHANGELOG to indicate the renamings.\r\nCI is now green."
      }
    ],
    "review_discussion": [
      {
        "author": "pi8027",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2022-04-01T07:42:22Z",
        "comment": "```suggestion\r\n  `cyclic.v`, `frobenius.v`, `maximal.v`, `primitive_action.v`, `alt.v`,\r\n  `burnside_app.v`, `mxrepresentation.v`, `mxabelian.v`, `character.v`,\r\n```"
      },
      {
        "author": "proux01",
        "file": ".nix/config.nix",
        "date": "2023-01-18T10:03:18Z",
        "comment": "```suggestion\r\n```\r\nThose overlays are now merged (should hopefully fix CI)."
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "ggonthier",
        "committer": "proux01",
        "hash": "c299136c5ac53e8004941e28d62bdba6d61ca332",
        "message": "Add [in A] notation.\n\nAdd `[in A]` notation for `fun x => x \\in A`, the natural applicative equivalent of a collective predicate `A`.\nReplace `(mem A)` and `[mem A]`, which had a similar purpose but require an explicit `/=` or `inE` to turn `mem A x` to `x \\in A`, which is sometimes awkward.\nRemove the Coq 8.10 compatibility code from `ssrbool.v`, which is actually incompatible with Coq < 8.13.\nAdd lemmas for `all` and `map`: `allT`, `all_mapT`, `inj_in_map`, `mapK_in`.",
        "date": "2023-01-21T14:30:19Z"
      },
      {
        "author": "CohenCyril",
        "committer": "proux01",
        "hash": "1cafc98e3dd03723828c0c5dbaec6f33269547dc",
        "message": "overlay for graph-theory",
        "date": "2023-01-21T14:30:19Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "f3b0b7920acd07cc66fb2098f2d89bf8dd985d8a",
        "message": "Overlay for multinomials",
        "date": "2023-01-21T14:30:19Z"
      }
    ]
  },
  {
    "author": "proux01",
    "number": 862,
    "diff_summary": [
      {
        "file": "mathcomp/algebra/fraction.v",
        "status": "M",
        "additions": 10,
        "deletions": 10
      },
      {
        "file": "mathcomp/algebra/ssrnum.v",
        "status": "M",
        "additions": 10,
        "deletions": 10
      },
      {
        "file": "mathcomp/ssreflect/ssrAC.v",
        "status": "M",
        "additions": 10,
        "deletions": 10
      }
    ],
    "state": "merged",
    "open_date": "2022-03-13T10:04:48Z",
    "update_date": "2022-03-18T09:10:12Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "a02db00a80446a860056e3d1fcb48ae2f7e12add",
        "message": "Remove some useless %AC scope indications",
        "date": "2022-03-13T10:00:56Z"
      }
    ]
  },
  {
    "author": "proux01",
    "number": 861,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 13,
        "deletions": 11
      },
      {
        "file": "mathcomp/algebra/fraction.v",
        "status": "M",
        "additions": 13,
        "deletions": 11
      },
      {
        "file": "mathcomp/algebra/ssrnum.v",
        "status": "M",
        "additions": 13,
        "deletions": 11
      },
      {
        "file": "mathcomp/ssreflect/ssrAC.v",
        "status": "M",
        "additions": 13,
        "deletions": 11
      }
    ],
    "state": "closed",
    "open_date": "2022-03-11T13:09:59Z",
    "update_date": "2022-03-13T09:59:33Z",
    "discussion": [
      {
        "author": "proux01",
        "date": "2022-03-11T15:46:05Z",
        "comment": "CI green, this is backward compatible."
      },
      {
        "author": "proux01",
        "date": "2022-03-13T09:59:33Z",
        "comment": "Sorry, this was probably needed due to a bug in a previous version of the upstream PR, but this seems to be no longer needed, closing."
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "86464279ed859e3018aa6d56616428bd109724f6",
        "message": "Remove coercion Leaf_of_nat in ssrAC\n\nWhen removing the uniform inheritance condition for coercions in Coq,\nthis enabled coercions Leaf_of_nat \\o nat_of_bool which completely\nbroke ssrAC.",
        "date": "2022-03-11T13:12:34Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "2f49584f7682ca39be479ece1373fd03921e05d7",
        "message": "Remove some useless %AC scope indications",
        "date": "2022-03-11T13:12:34Z"
      }
    ]
  },
  {
    "author": "jouvelot",
    "number": 860,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 38,
        "deletions": 9
      },
      {
        "file": "mathcomp/algebra/ssralg.v",
        "status": "M",
        "additions": 38,
        "deletions": 9
      },
      {
        "file": "mathcomp/ssreflect/bigop.v",
        "status": "M",
        "additions": 38,
        "deletions": 9
      }
    ],
    "state": "merged",
    "open_date": "2022-03-07T17:55:24Z",
    "update_date": "2022-03-19T22:25:14Z",
    "discussion": [
      {
        "author": "proux01",
        "date": "2022-03-17T16:55:05Z",
        "comment": "So, looks we are all set, I'll squash and merge by the end of the week if there is no further comment."
      }
    ],
    "review_discussion": [
      {
        "author": "proux01",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2022-03-15T15:38:55Z",
        "comment": "* Nothing depends on ssralg here, so this could be put at the end of bigop.v.\r\n* When adding definitions, like `shrink` and `empty`, they should be documented. But since they are used in only one lemma, maybe we just don't need specific definitions.\r\n* it seems the `shrink` hypothesis can be simplified to `∀ k, n < k < m → op (f n k) (f k k.+1) = f n k.+1` which leads to the following simplified proof\r\n```suggestion\r\nLemma telescope_op R (idx : R) (op : Monoid.law idx) f n m :\r\n  n <= m -> (n = m -> f n n = idx) ->\r\n  (forall k, n < k < m -> op (f n k) (f k k.+1) = f n k.+1) ->\r\n  \\big[op/idx]_(n <= i < m) f i i.+1 = f n m.\r\nProof.\r\nhave [ltnm _ _ | // | <- _ ->//] := ltngtP; last by rewrite big_geq.\r\nelim: m ltnm => [//| m IHm]; rewrite ltnS.\r\nhave [ltnm _ s | // | <- _ _] := ltngtP; last by rewrite big_nat1.\r\nhave snm : forall q, n < q < m -> op (f n q) (f q q.+1) = f n q.+1.\r\n  by move=> q /andP[nq /leqW qm]; apply/s/andP.\r\nby rewrite big_nat_recr 1?ltnW// IHm// s// ltnm/=.\r\nQed.\r\nArguments telescope_op [R idx op] f [n m].\r\n```\r\n(there might be a way to get rid of the Monoid hypothesis, but I didn't manage that)"
      },
      {
        "author": "proux01",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2022-03-15T15:39:27Z",
        "comment": "This should also be in bigop.\r\nIt' also seems inverted to me.\r\n```suggestion\r\nLemma telescope_sumn n m f :\r\n  n <= m -> {in [pred i | n <= i <= m] &, {homo f : x y / x <= y}} ->\r\n  \\sum_(n <= k < m) (f k.+1 - f k) = f m - f n.\r\nProof.\r\nmove=> lenm homof; set f' := fun i j => f j - f i.\r\nrewrite -/(f' n m); under eq_bigr => k _ do rewrite -/(f' k k.+1).\r\napply: telescope_op; rewrite /f' ?subnn//= => k /andP[ltnk ltkm].\r\nrewrite addnBAC ?subnKC//; apply: homof;\r\n  rewrite ?inE ?(ltnW ltnk) ?(ltnW ltkm)//.\r\n- by rewrite (leqW (ltnW ltnk)).\r\n- by rewrite leqnn (ltnW (ltn_trans ltnk ltkm)).\r\nQed.\r\n```"
      },
      {
        "author": "proux01",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2022-03-15T16:43:46Z",
        "comment": "The new proof should be shorter\r\n```suggestion\r\nmove=> lenm; apply: (telescope_op (fun i j => f j - f i) lenm (fun=> subrr _)).\r\nby move=> k _ /=; rewrite addrCA addrAC subrr add0r.\r\n```"
      },
      {
        "author": "proux01",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2022-03-15T16:44:21Z",
        "comment": "New proof should be shorter\r\n```suggestion\r\nmove=> allu ltnm; rewrite (telescope_op (fun i j => f i / f j) (ltnW ltnm))//.\r\n  by move=> /eqP; rewrite ltn_eqF.\r\nmove=> k nkm; rewrite /= mulrA divrK//; exact: allu.\r\n```\r\n"
      },
      {
        "author": "jouvelot",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2022-03-15T19:49:09Z",
        "comment": "Thanks for taking the time looking at this PR and all the suggestions :) \r\n\r\n> * Nothing depends on ssralg here, so this could be put at the end of bigop.v.\r\n\r\nI agree that the code should be dispatched somewhere else. I put it in one place, where its application was more meaningful, to make looking at it easier at the start of the review process. Should have I done the dispatch right from the start?\r\n\r\n> * When adding definitions, like `shrink` and `empty`, they should be documented. But since they are used in only one lemma, maybe we just don't need specific definitions.\r\n\r\nIt seems to me that `shrink` could, if deemed sufficiently useful, actually be put in nat.v. (with a better name). This is a simplification I had to do in a project, on nats and also on ints.\r\n\r\n> it seems the `shrink` hypothesis can be simplified to `∀ k, n < k < m → op (f n k) (f k k.+1) = f n k.+1` which leads to the following simplified proof\r\n\r\nThis is what I used at the start, but 1) this equality condition is only needed on a subset of the domain of `f`, which thus makes the subsequent lemmas stronger, and 2) it turned out to be needed, or at least useful, for the variant of the telescope I needed, which operated on ordinals. \r\n\r\n> (there might be a way to get rid of the Monoid hypothesis, but I didn't manage that)\r\n\r\nI thought the Monoid was necessary for the `\\big` construct."
      },
      {
        "author": "jouvelot",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2022-03-15T19:52:04Z",
        "comment": "> This should also be in bigop. \r\n\r\nI agree.\r\n\r\n> It' also seems inverted to me.\r\n\r\nI followed the pattern already used in ssralg.v, so that I didn't have to change one single line of the file there, just introduce the `telescope_op` abstraction.\r\n\r\n"
      },
      {
        "author": "jouvelot",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2022-03-15T20:01:48Z",
        "comment": "Should I dispatch the various proof elements in the files we discussed? Any suggestion about where exactly?"
      },
      {
        "author": "proux01",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2022-03-16T09:57:55Z",
        "comment": "> I agree that the code should be dispatched somewhere else. I put it in one place, where its application was more meaningful, to make looking at it easier at the start of the review process. Should have I done the dispatch right from the start?\r\n\r\nAs you prefer, that's not needed for a first version of the pull request, just to discuss the change.\r\nBut that would have to be done at some point before merging.\r\n\r\n> It seems to me that `shrink` could, if deemed sufficiently useful, actually be put in nat.v. (with a better name). This is a simplification I had to do in a project, on nats and also on ints.\r\n\r\nMaybe. I currently think that just the `telescope_op` lemma doesn't expose such a need. But if you have other uses that would justify that, feel free to share them.\r\n\r\n> This is what I used at the start, but 1) this equality condition is only needed on a subset of the domain of `f`, which thus makes the subsequent lemmas stronger, and 2) it turned out to be needed, or at least useful, for the variant of the telescope I needed, which operated on ordinals.\r\n\r\nThen maybe add this lemma to the PR. Currently, it feels like proving a lemma under an hypothesis that is more complicated and stronger than needed, which is a shame.\r\n\r\nBTW, I wonder whether the hypothesis about `n` and `m` in `telescope_op` shouldn't be `n < m` rather than `n <= m`, that would remove the need for the `n = m -> f n n = idx` hypothesis, and the equality case can easily be proved when needed (it doesn't depend on `telescope_op` itself).\r\n\r\n> I thought the Monoid was necessary for the `\\big` construct.\r\n\r\nNo (although it is very common), see `big_nat_recl` for instance (compared to `big_nat_recr`)."
      },
      {
        "author": "proux01",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2022-03-16T10:00:34Z",
        "comment": "> Should I dispatch the various proof elements in the files we discussed? Any suggestion about where exactly?\r\n\r\nI would say at the end of `bigop.v`, there for instance https://github.com/math-comp/math-comp/blob/master/mathcomp/ssreflect/bigop.v#L2056"
      },
      {
        "author": "proux01",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2022-03-16T10:03:34Z",
        "comment": "I mean, `telescope_sumr` is in the order `\\sum_(n ≤ k < m) (f k.+1 - f k) = f m - f n`, as well as `telescope_prodf`. Only `telescope_prodr` is in the order `\\prod_(n ≤ k < m) (f k / f k.+1) = f n / f m`, but it holds a comment `(* Due to noncommutativity, fractions are inverted. *)`. So the order you suggested looks to me like \"inverted\" as per the existing code."
      },
      {
        "author": "jouvelot",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2022-03-16T21:32:53Z",
        "comment": "Oh, I see what you mean. I'm pushing a new version."
      },
      {
        "author": "jouvelot",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2022-03-16T21:35:25Z",
        "comment": "- I'll try to clean up the lemma on ordinals I have to see whether that would more motivate the constraint in `shrink`. BTW, it seems to me that this added constraint in `shrink` makes `telescope_op` stronger, since the equality property only needs to be true on a subdomain of `shrink`.\r\n- For `n <= m`or `n < m`, I don't know what's best. The lemma is more general with the inequality, and avoids users to prove the `=` case at the price of the `empty` definition. Both cases are present in `ssralg.v`. \r\n- I'll keep the functions in one location for now, and will move them in `bigop.v` once the code is finalized, then. Thanks for the suggestion."
      },
      {
        "author": "proux01",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2022-03-17T08:35:27Z",
        "comment": "> For n <= mor n < m, I don't know what's best.\r\n\r\nI think we need both: `telescope_op : n < m -> ...` and `telescope_op_leq : n <= m -> (n = m -> f n n = idx) -> ...`"
      },
      {
        "author": "proux01",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2022-03-17T08:38:27Z",
        "comment": "```suggestion\r\nLemma telescope_sumn n m f : \r\n```\r\nto be consistent with the other names in ssralg.v"
      },
      {
        "author": "jouvelot",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2022-03-17T09:39:17Z",
        "comment": "> > For n <= mor n < m, I don't know what's best.\r\n> \r\n> I think we need both: `telescope_op : n < m -> ...` and `telescope_op_leq : n <= m -> (n = m -> f n n = idx) -> ...`\r\n\r\nOk, let's try that. I'm pushing these two versions."
      },
      {
        "author": "proux01",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2022-03-17T12:25:07Z",
        "comment": "BTW, do we agree that\r\n```forall k, n < k < m -> op (f n k) (f k k.+1) = f n k.+1```\r\nis a weaker hypothesis than\r\n```forall p q r, p < q < r -> (n <= p /\\ r <= m) -> op (f p q) (f q r) = f p r```\r\n(just taking p := n, q := k and r := k+1) thus making the lemma in my suggested change above stronger?"
      },
      {
        "author": "jouvelot",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2022-03-17T12:41:28Z",
        "comment": "Oh, sorry, I misread your previous question, and thought you were only getting rid of the `(n <= p /\\ r <= m)` condition, which I needed for the ordinal-based lemma I had in a project:\r\n```\r\nVariable (k :nat) (f : 'I_k.+1 -> nat ) (af : {homo f : x y /~ x <= y}).\r\n\r\nDefinition ord_pred m (j : 'I_m) : 'I_m. \r\nhave j1: j.-1 < m by rewrite (leq_ltn_trans _ (ltn_ord j)) // leq_pred.\r\nexact: Ordinal j1.\r\nDefined.\r\n\r\nLemma sum_diffs (l h : 'I_k.+1) : \r\n  l < h -> \\sum_(s < k.+1 | l < s <= h) (f (ord_pred s) - f s) = f l - f h.\r\n```\r\nfor which the bound condition was needed (and where my hunt for a more general solution started). So, yes, indeed, your suggestion is a weaker hypothesis, and probably enough; I'll reuse your shorter proof, and see whether I can make all my use cases work with this."
      },
      {
        "author": "proux01",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2022-03-17T15:22:06Z",
        "comment": "You can make `f` explicit\r\n```suggestion\r\nArguments telescope_op [R idx op] f [n m].\r\nArguments telescope_op_leq [R idx op] f [n m].\r\n```\r\nto avoid the `@telescope_op _ _ _` below."
      },
      {
        "author": "jouvelot",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2022-03-17T16:17:54Z",
        "comment": "All the use cases mentioned in the motivation header of this PR can be nicely adapted to the current definitions, except for `sum_diffs`, which deals with ordinals. For this, I had to introduce a (stronger) version of `telescope_sumn`, as follows:\r\n```\r\nLemma telescope_sumn' n m f : \r\n  n <= m -> {in [pred i | n <= i <= m] &, {homo f : x y / x <= y}} ->\r\n  \\sum_(n <= k < m) (f k.+1 - f k) = f m - f n.\r\n```\r\nMaybe it's possible to avoid the (meaningful, btw) restriction on the `homo` constraint, but I'm not sure. Since this provable using `telescope_op_leq`, maybe it's not worth mentioning it."
      },
      {
        "author": "proux01",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2022-03-17T16:54:09Z",
        "comment": "Indeed, we can add this."
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "jouvelot",
        "committer": "proux01",
        "hash": "ab3c61602825fd302a3f34b9f4f585b079f4a2ba",
        "message": "Adding telescope_big, telescope_sumn and telescope_sumn_in\n\nCo-authored-by: Pierre Roux <pierre.roux@onera.fr>\nCo-authored-by: Cyril Cohen <cohen@crans.org>",
        "date": "2022-03-19T20:31:55Z"
      }
    ]
  },
  {
    "author": "affeldt-aist",
    "number": 859,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 14,
        "deletions": 0
      },
      {
        "file": "mathcomp/ssreflect/ssreflect.v",
        "status": "M",
        "additions": 14,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2022-03-07T05:22:08Z",
    "update_date": "2022-06-30T08:14:06Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2022-03-07T15:47:00Z",
        "comment": "Two remarks:\r\n1. do we want to keep `!!` as the notation for this. It was the notation in mca until now, but I'm not fond of it. Are there better syntax suggestions for this?\r\n2. It has to be backported to coq/coq"
      },
      {
        "author": "affeldt-aist",
        "date": "2022-04-14T09:45:46Z",
        "comment": ">     1. do we want to keep `!!` as the notation for this. It was the notation in mca until now, but I'm not fond of it.\r\n>         Are there better syntax suggestions for this?\r\n\r\nNo idea. I got accustomed to it.\r\n\r\n>     2. It has to be backported to coq/coq\r\n\r\nSo we should issue after merge to remind the release managers not to forget to backport the new version of `ssreflect.v` I guess.\r\n\r\n"
      },
      {
        "author": "CohenCyril",
        "date": "2022-04-14T13:39:45Z",
        "comment": "We should call for alternative proposals for this syntax and vote for the best. Also we should see if there are alternative plans that are less hackish. CC @gares"
      },
      {
        "author": "affeldt-aist",
        "date": "2022-06-15T08:50:03Z",
        "comment": "Since we didn't have a better proposition for the syntax, should we merge it as it is?"
      },
      {
        "author": "gares",
        "date": "2022-06-16T20:24:47Z",
        "comment": "I'd say so"
      },
      {
        "author": "gares",
        "date": "2022-06-29T08:43:45Z",
        "comment": "`[infer t]` or `[fill t]` or `[elaborate t]`"
      },
      {
        "author": "gares",
        "date": "2022-06-29T13:49:02Z",
        "comment": "@CohenCyril please review the suggestion and merge"
      }
    ],
    "review_discussion": [
      {
        "author": "gares",
        "file": "mathcomp/ssreflect/ssreflect.v",
        "date": "2022-03-07T11:16:34Z",
        "comment": "```suggestion\r\n```"
      },
      {
        "author": "gares",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2022-06-29T13:47:22Z",
        "comment": "```suggestion\r\n  + notation `[elaborate t]` forcing the elaboration of `t` using Coq's `refine` tactic. This notation can be used in tandem with `have` to force type class resolution when an explicit proof term `t` is provided (otherwise type class instances are quantified implicitly by `have`).\r\n```"
      },
      {
        "author": "gares",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2022-06-30T08:10:15Z",
        "comment": "```suggestion\r\n  + notation `[elaborate t]` forcing the elaboration of `t` using Coq's `refine` tactic.\r\n    This notation can be used in tandem with `have` to force type class resolution when an\r\n    explicit proof term `t` is provided (otherwise type class instances are quantified implicitly by `have`).\r\n\r\n```"
      },
      {
        "author": "gares",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2022-06-30T08:11:12Z",
        "comment": "```suggestion\r\n  + notation `[elaborate t]` forcing the elaboration of `t` using Coq's `refine` tactic.\r\n    This notation can be used in tandem with `have` to force type class resolution\r\n    when an explicit proof term `t` is provided (otherwise type class instances are\r\n    quantified implicitly by `have`).\r\n```"
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "2a10b63a33f138cc148337fc1383ef3da00ef562",
        "message": "port the !! notation from mathcomp-analysis",
        "date": "2022-06-29T08:16:59Z"
      },
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "43469aa2da65d3f72687ec3bd3ad7feac34f826b",
        "message": "Update mathcomp/ssreflect/ssreflect.v\n\nCo-authored-by: Enrico Tassi <Enrico.Tassi@inria.fr>",
        "date": "2022-06-29T08:19:28Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "1e26c9de2ec9bba8babc8c63fad5c5a3ed72af6a",
        "message": "Long notation to force elaboration",
        "date": "2022-06-29T09:36:58Z"
      },
      {
        "author": "gares",
        "committer": "web-flow",
        "hash": "bb8ea49820da06dd10f93fb978dc479196c3b4c2",
        "message": "Update CHANGELOG_UNRELEASED.md",
        "date": "2022-06-30T08:09:31Z"
      },
      {
        "author": "gares",
        "committer": "web-flow",
        "hash": "06f481d6208591b1cc4b954f50f4f3578e6f8fb8",
        "message": "Update CHANGELOG_UNRELEASED.md",
        "date": "2022-06-30T08:10:21Z"
      },
      {
        "author": "gares",
        "committer": "web-flow",
        "hash": "347763b9e2cf9e9eb8d31b926986ec0337efc512",
        "message": "Update CHANGELOG_UNRELEASED.md",
        "date": "2022-06-30T08:11:18Z"
      }
    ]
  },
  {
    "author": "jouvelot",
    "number": 858,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/path.v",
        "status": "M",
        "additions": 2,
        "deletions": 2
      }
    ],
    "state": "merged",
    "open_date": "2022-03-02T14:14:48Z",
    "update_date": "2022-03-02T15:51:18Z",
    "discussion": [
      {
        "author": "jouvelot",
        "date": "2022-03-02T15:31:19Z",
        "comment": "This should be good, now. Thanks for the tip on company-coq :)"
      },
      {
        "author": "proux01",
        "date": "2022-03-02T15:51:14Z",
        "comment": "Perfect, thanks, I'm merging."
      }
    ],
    "review_discussion": [
      {
        "author": "proux01",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2022-03-02T14:23:25Z",
        "comment": "Spurious space? (I think you may be using company-coq which compacts `::` (two characters) into `∷` (one character))"
      },
      {
        "author": "jouvelot",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2022-03-02T14:26:09Z",
        "comment": "Pierre, Indeed. I'll check that next time."
      },
      {
        "author": "proux01",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2022-03-02T14:36:44Z",
        "comment": "No worries (actually, that bit myself a few times already), could you please push a commit with the fix so that I can merge the pull request?"
      },
      {
        "author": "jouvelot",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2022-03-02T14:49:56Z",
        "comment": "Is it ok now, or did company-coq make still some damages?"
      },
      {
        "author": "proux01",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2022-03-02T15:24:47Z",
        "comment": "`path` above is fine but the issue remains here (line 26) and three more instances below (lines 28, 30 and 34)\r\nIf you want to check, you cna either deactivate/activate company-coq locally with M-x company-coq-mode or look to the diff in the `Files changed` tab on github."
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "jouvelot",
        "committer": "jouvelot",
        "hash": "2669cb06bcf6db86deb39cfa02928bd44c93624f",
        "message": "Typo",
        "date": "2022-03-02T14:13:35Z"
      },
      {
        "author": "jouvelot",
        "committer": "web-flow",
        "hash": "ed04319f0e1271e484246a91e865eb345266a3b5",
        "message": "Update path.v",
        "date": "2022-03-02T14:48:58Z"
      },
      {
        "author": "jouvelot",
        "committer": "jouvelot",
        "hash": "e29b401114a118813b7ec83af250053344171ee5",
        "message": "Deal with company-coq.",
        "date": "2022-03-02T15:30:01Z"
      }
    ]
  },
  {
    "author": "proux01",
    "number": 857,
    "diff_summary": [
      {
        "file": "mathcomp/algebra/rat.v",
        "status": "M",
        "additions": 3,
        "deletions": 2
      }
    ],
    "state": "merged",
    "open_date": "2022-03-01T19:18:18Z",
    "update_date": "2022-03-02T07:50:19Z",
    "discussion": [
      {
        "author": "proux01",
        "date": "2022-03-02T07:50:09Z",
        "comment": "CI as green as it can be, this is trivial, I'm merging."
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "11ddc845c449e795d789295961791038ce955da7",
        "message": "Properly deprecate divq_eq",
        "date": "2022-03-01T19:16:17Z"
      }
    ]
  },
  {
    "author": "proux01",
    "number": 856,
    "diff_summary": [
      {
        "file": ".github/workflows/nix-action-coq-8.11.yml",
        "status": "D",
        "additions": 42,
        "deletions": 3330
      },
      {
        "file": ".github/workflows/nix-action-coq-8.12.yml",
        "status": "D",
        "additions": 42,
        "deletions": 3330
      },
      {
        "file": ".gitlab-ci.yml",
        "status": "D",
        "additions": 42,
        "deletions": 3330
      },
      {
        "file": ".nix/config.nix",
        "status": "D",
        "additions": 42,
        "deletions": 3330
      },
      {
        "file": "coq-mathcomp-ssreflect.opam",
        "status": "D",
        "additions": 42,
        "deletions": 3330
      },
      {
        "file": "mathcomp/Make",
        "status": "D",
        "additions": 42,
        "deletions": 3330
      },
      {
        "file": "mathcomp/_CoqProject",
        "status": "D",
        "additions": 42,
        "deletions": 3330
      },
      {
        "file": "mathcomp/algebra/Make",
        "status": "D",
        "additions": 42,
        "deletions": 3330
      },
      {
        "file": "mathcomp/character/Make",
        "status": "D",
        "additions": 42,
        "deletions": 3330
      },
      {
        "file": "mathcomp/field/Make",
        "status": "D",
        "additions": 42,
        "deletions": 3330
      },
      {
        "file": "mathcomp/field/closed_field.v",
        "status": "D",
        "additions": 42,
        "deletions": 3330
      },
      {
        "file": "mathcomp/fingroup/Make",
        "status": "D",
        "additions": 42,
        "deletions": 3330
      },
      {
        "file": "mathcomp/solvable/Make",
        "status": "D",
        "additions": 42,
        "deletions": 3330
      },
      {
        "file": "mathcomp/ssreflect/Make",
        "status": "D",
        "additions": 42,
        "deletions": 3330
      },
      {
        "file": "mathcomp/ssreflect/eqtype.v",
        "status": "D",
        "additions": 42,
        "deletions": 3330
      },
      {
        "file": "mathcomp/ssreflect/finfun.v",
        "status": "D",
        "additions": 42,
        "deletions": 3330
      },
      {
        "file": "mathcomp/ssreflect/fintype.v",
        "status": "D",
        "additions": 42,
        "deletions": 3330
      },
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "D",
        "additions": 42,
        "deletions": 3330
      },
      {
        "file": "mathcomp/ssreflect/ssrbool.v",
        "status": "D",
        "additions": 42,
        "deletions": 3330
      }
    ],
    "state": "merged",
    "open_date": "2022-03-01T15:46:51Z",
    "update_date": "2022-03-03T18:21:36Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "4c46848538420a4fc78439894e1b76cb30432192",
        "message": "Drop support for Coq 8.11 and 8.12",
        "date": "2022-03-01T20:14:03Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "726d6cebf41ba386ba6735a63b515157d8f2d6e0",
        "message": "Adapt to coq/coq#15754",
        "date": "2022-03-01T20:14:03Z"
      }
    ]
  },
  {
    "author": "affeldt-aist",
    "number": 855,
    "diff_summary": [
      {
        "file": ".github/pull_request_template.md",
        "status": "M",
        "additions": 1,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2022-02-28T10:25:09Z",
    "update_date": "2022-02-28T11:18:28Z",
    "discussion": [
      {
        "author": "proux01",
        "date": "2022-02-28T11:18:23Z",
        "comment": "Thanks"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "7c7a5503cb9e06ef9c9270e6aeaa515cf922e60d",
        "message": "typo",
        "date": "2022-02-28T10:24:20Z"
      }
    ]
  },
  {
    "author": "jouvelot",
    "number": 854,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/fintype.v",
        "status": "M",
        "additions": 12,
        "deletions": 0
      }
    ],
    "state": "closed",
    "open_date": "2022-02-26T13:11:35Z",
    "update_date": "2022-02-28T08:52:29Z",
    "discussion": [
      {
        "author": "jouvelot",
        "date": "2022-02-27T09:15:14Z",
        "comment": "For quantifier completeness, maybe we could add the related lemma:\r\n```\r\nLemma not_exists_eqP f1 f2 : reflect (~ (exists x, f1 x = f2 x)) (~~ [exists x, f1 x == f2 x]).\r\n```\r\nalthough I'm not sure there is a use case for it."
      },
      {
        "author": "proux01",
        "date": "2022-02-27T10:21:26Z",
        "comment": "In MathComp, we try when adding a lemma to also add lemmas of the same \"family\", so that would make sense, even if we don't see a use case (yet)."
      },
      {
        "author": "ggonthier",
        "date": "2022-02-27T21:24:32Z",
        "comment": "I'm a little curious about the use case for such lemmas. In principle, they should not be needed, as contrapositives for `reflect` are intended to be covered by the `introN` and `elimN` view hints, i.e., `move/eqfunP` should work the same as `move/not_eqfunP`, unless there's a double negation, as in `~ ~ (f1 =1 f2) -> ...` (was that the issue?). Direct application,\r\nas in `not_eqfunP (neq_fg : ~~ [forall x, f x == g x])` will also work, but the `elimN` hint must be given explicitly (as in `elimN eqfunP neq_fg`), since the default (coercion) is ` elimT`."
      },
      {
        "author": "jouvelot",
        "date": "2022-02-28T08:40:56Z",
        "comment": "Oh, great! I didn't know that reflection would also work \"past\" the negation operator. In this case, my PR can be discarded, unless we want to keep it for the double negation case, as mentioned by Georges. "
      },
      {
        "author": "proux01",
        "date": "2022-02-28T08:52:29Z",
        "comment": "Thanks!"
      }
    ],
    "review_discussion": [
      {
        "author": "proux01",
        "file": "mathcomp/ssreflect/fintype.v",
        "date": "2022-02-26T17:00:21Z",
        "comment": "\r\n\r\n```suggestion\r\nLemma not_eqfunP f1 f2 : reflect (~ (forall x, f1 x = f2 x)) (~~ [forall x, f1 x == f2 x]).\r\nProof.\r\napply/(iffP idP); first by apply: contraNnot => /eqfunP.\r\nby apply: contra_notN => /eqfunP.\r\nQed.\r\n```"
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "jouvelot",
        "committer": "jouvelot",
        "hash": "c20dadcec6c3f18952b3c72bc4756aaf5ecbf82a",
        "message": "Adding not_eqfunP",
        "date": "2022-02-26T13:04:59Z"
      },
      {
        "author": "jouvelot",
        "committer": "web-flow",
        "hash": "a4bd50f3635424173a4dd8a9353b4e8578888fd0",
        "message": "Update mathcomp/ssreflect/fintype.v\r\n\r\nShorter proof.\n\nCo-authored-by: Pierre Roux <pierre.roux@onera.fr>",
        "date": "2022-02-26T17:32:04Z"
      },
      {
        "author": "jouvelot",
        "committer": "jouvelot",
        "hash": "ec956298adc154b830abf18ad99ba0e512b883bc",
        "message": "Adding not_exists_eqP, for completeness.",
        "date": "2022-02-27T12:48:51Z"
      }
    ]
  },
  {
    "author": "gares",
    "number": 853,
    "diff_summary": [
      {
        "file": "mathcomp/algebra/poly.v",
        "status": "M",
        "additions": 5,
        "deletions": 5
      },
      {
        "file": "mathcomp/algebra/ssralg.v",
        "status": "M",
        "additions": 5,
        "deletions": 5
      }
    ],
    "state": "closed",
    "open_date": "2022-02-23T10:09:47Z",
    "update_date": "2022-06-07T16:49:14Z",
    "discussion": [
      {
        "author": "proux01",
        "date": "2022-06-07T10:02:24Z",
        "comment": "@gares should we close this now that reverse coercions are in Coq master?"
      },
      {
        "author": "gares",
        "date": "2022-06-07T16:49:14Z",
        "comment": "yes"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "gares",
        "committer": "proux01",
        "hash": "6644dcdc6820aaa151e34b0cbadf666aba259a55",
        "message": "test reverse coercions",
        "date": "2022-03-31T09:05:33Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "126e5d10966901e627c726e104c04f406bd9436e",
        "message": "Declare reversible coercion\n\nThey now have to be declared explicitly outside of :> in records.",
        "date": "2022-03-31T12:54:20Z"
      }
    ]
  },
  {
    "author": "affeldt-aist",
    "number": 852,
    "diff_summary": [
      {
        "file": "mathcomp/algebra/ring_quotient.v",
        "status": "M",
        "additions": 17,
        "deletions": 21
      },
      {
        "file": "mathcomp/ssreflect/generic_quotient.v",
        "status": "M",
        "additions": 17,
        "deletions": 21
      }
    ],
    "state": "merged",
    "open_date": "2022-02-19T10:29:05Z",
    "update_date": "2022-02-20T18:18:36Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "623e374117248a69ca8e6fa04ecdbc1ec014c568",
        "message": "fix typos in *_quotient.v files\n\n- remove trailing spaces",
        "date": "2022-02-19T10:27:44Z"
      }
    ]
  },
  {
    "author": "proux01",
    "number": 849,
    "diff_summary": [
      {
        "file": ".github/workflows/nix-action-coq-8.11.yml",
        "status": "M",
        "additions": 216,
        "deletions": 97
      },
      {
        "file": ".github/workflows/nix-action-coq-8.12.yml",
        "status": "M",
        "additions": 216,
        "deletions": 97
      },
      {
        "file": ".github/workflows/nix-action-coq-8.13.yml",
        "status": "M",
        "additions": 216,
        "deletions": 97
      },
      {
        "file": ".github/workflows/nix-action-coq-8.14.yml",
        "status": "M",
        "additions": 216,
        "deletions": 97
      },
      {
        "file": ".github/workflows/nix-action-coq-8.15.yml",
        "status": "M",
        "additions": 216,
        "deletions": 97
      },
      {
        "file": ".github/workflows/nix-action-coq-master.yml",
        "status": "M",
        "additions": 216,
        "deletions": 97
      },
      {
        "file": ".nix/config.nix",
        "status": "M",
        "additions": 216,
        "deletions": 97
      }
    ],
    "state": "closed",
    "open_date": "2022-02-05T10:19:42Z",
    "update_date": "2022-03-13T10:03:55Z",
    "discussion": [
      {
        "author": "proux01",
        "date": "2022-03-13T10:03:55Z",
        "comment": "Outdated and no longer needed, closing."
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "8b6aadcbfc366cf4b7ee9e12973058d6ec5b8068",
        "message": "[CI] Update Nix CI",
        "date": "2022-02-05T11:24:39Z"
      }
    ]
  },
  {
    "author": "WojciechKarpiel",
    "number": 848,
    "diff_summary": [
      {
        "file": "mathcomp/algebra/rat.v",
        "status": "M",
        "additions": 1,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2022-02-02T18:41:03Z",
    "update_date": "2022-02-05T10:03:57Z",
    "discussion": [
      {
        "author": "thery",
        "date": "2022-02-02T18:48:20Z",
        "comment": "Thanks!"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "hash": "b71e5ea977e1b31d0e4be82cc1828f029ed4844f",
        "message": "Fix typo in documentation of rational numbers",
        "date": "2022-02-02T18:35:15Z"
      }
    ]
  },
  {
    "author": "thery",
    "number": 847,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 6,
        "deletions": 2
      },
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 6,
        "deletions": 2
      },
      {
        "file": "mathcomp/ssreflect/tuple.v",
        "status": "M",
        "additions": 6,
        "deletions": 2
      }
    ],
    "state": "merged",
    "open_date": "2022-01-24T13:10:10Z",
    "update_date": "2022-01-29T13:15:43Z",
    "discussion": [
      {
        "author": "proux01",
        "date": "2022-01-24T14:01:35Z",
        "comment": "I'm a bit worried by the fact that all uses seem to become a bit more complicated (maybe using `minElt` instead of `minn_idPl` could help, but still)"
      },
      {
        "author": "thery",
        "date": "2022-01-24T15:34:01Z",
        "comment": "@proux01  Yep, it is not ideal. I like the new statement of `size_take` better but not having `minnElt` makes the scripts more cumbersome. In scripts, the place where it get  better  is the last application in  `seq.v` and in `tuple.v`.\r\n"
      },
      {
        "author": "CohenCyril",
        "date": "2022-01-24T15:47:15Z",
        "comment": "I suggest having an alternative statement `size_take_min` for this more general theorem."
      },
      {
        "author": "thery",
        "date": "2022-01-24T17:33:42Z",
        "comment": "@CohenCyril fine with me"
      },
      {
        "author": "proux01",
        "date": "2022-01-25T09:23:00Z",
        "comment": "Looks good, I'll merge by the end of the week if there is no further comment."
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "thery",
        "committer": "thery",
        "hash": "2f78b63a9ac66e0a76973d5ec6d59f1c2d96a91d",
        "message": "add lemma size_take_min",
        "date": "2022-01-24T17:28:43Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 846,
    "diff_summary": [
      {
        "file": ".nix/coq-overlays/mathcomp-doc/default.nix",
        "status": "M",
        "additions": 1,
        "deletions": 2
      }
    ],
    "state": "merged",
    "open_date": "2022-01-19T09:46:07Z",
    "update_date": "2022-01-19T11:29:50Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "84aec18764edc56661d113fdd6c92f85ecd366a5",
        "message": "fix overlays for mathcomp doc",
        "date": "2022-01-19T09:48:51Z"
      }
    ]
  },
  {
    "author": "gares",
    "number": 845,
    "diff_summary": [
      {
        "file": "CHANGELOG.md",
        "status": "M",
        "additions": 32,
        "deletions": 20
      },
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 32,
        "deletions": 20
      }
    ],
    "state": "merged",
    "open_date": "2022-01-19T09:14:49Z",
    "update_date": "2022-01-19T10:16:17Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "gares",
        "committer": "gares",
        "hash": "9b76fdfc161166b07d5dea6bed15b4c94e1fa545",
        "message": "update changelog for 1.14.0",
        "date": "2022-01-19T09:14:25Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 844,
    "diff_summary": [
      {
        "file": ".github/workflows/nix-action-coq-8.14.yml",
        "status": "A",
        "additions": 1418,
        "deletions": 2
      },
      {
        "file": ".github/workflows/nix-action-coq-8.15.yml",
        "status": "A",
        "additions": 1418,
        "deletions": 2
      },
      {
        "file": ".nix/config.nix",
        "status": "A",
        "additions": 1418,
        "deletions": 2
      },
      {
        "file": ".nix/coq-nix-toolbox.nix",
        "status": "A",
        "additions": 1418,
        "deletions": 2
      }
    ],
    "state": "merged",
    "open_date": "2022-01-19T09:09:22Z",
    "update_date": "2022-01-19T11:53:27Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "4c8fe3072fe7af7aa1331bec0967aee04854676d",
        "message": "Adding nix config for coq 8.15",
        "date": "2022-01-19T11:31:49Z"
      }
    ]
  },
  {
    "author": "proux01",
    "number": 842,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 27,
        "deletions": 5
      },
      {
        "file": "mathcomp/algebra/intdiv.v",
        "status": "M",
        "additions": 27,
        "deletions": 5
      },
      {
        "file": "mathcomp/algebra/ssrint.v",
        "status": "M",
        "additions": 27,
        "deletions": 5
      }
    ],
    "state": "merged",
    "open_date": "2022-01-15T19:52:23Z",
    "update_date": "2022-03-04T09:29:43Z",
    "discussion": [
      {
        "author": "proux01",
        "date": "2022-02-17T08:52:10Z",
        "comment": "Rebased on top of #841 "
      }
    ],
    "review_discussion": [
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/intdiv.v",
        "date": "2022-01-17T13:20:50Z",
        "comment": "```suggestion\r\nwithout loss /forallP a_dvM0: / [forall j, a %| M 0%R j]%Z.\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/intdiv.v",
        "date": "2022-01-17T13:21:01Z",
        "comment": "```suggestion\r\n  pose Uur := col' 0 (\\row_j (1 - (M 0%R j %/ a)%Z)).\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/intdiv.v",
        "date": "2022-01-17T13:22:35Z",
        "comment": "Actually, I wonder why it couldn't be\r\n```suggestion\r\nwithout loss /forallP a_dvM0: / [forall j, a %| M 0 j]%Z.\r\n```\r\nas before?\r\nThe scope stack for `fun_of_matrix` should include `%R`, shouldn't it?"
      },
      {
        "author": "proux01",
        "file": "mathcomp/algebra/intdiv.v",
        "date": "2022-01-17T13:26:36Z",
        "comment": "Sure but the `%Z` locally puts `int_scope` on top."
      },
      {
        "author": "proux01",
        "file": "mathcomp/algebra/intdiv.v",
        "date": "2022-01-17T14:48:11Z",
        "comment": "I just had a closer look and there is no scope associated by `fun_of_matrix` on the indices:\r\n```coq\r\nArguments fun_of_matrix [R]%type_scope [m n]%nat_scope A%ring_scope i j\r\n```\r\nhence the `%Z` putting int_scope on top of the stack.\r\n\r\nAnyway, you are right that `0%R` is nicer than `ord0`."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/intdiv.v",
        "date": "2022-01-18T16:00:16Z",
        "comment": "I wonder if it is possible to add ring_scope to the stack as in\r\n```coq\r\nArguments fun_of_matrix [R]%type_scope [m n]%nat_scope%ring_scope A%ring_scope i j\r\n```"
      },
      {
        "author": "proux01",
        "file": "mathcomp/algebra/intdiv.v",
        "date": "2022-01-20T12:44:59Z",
        "comment": "Note that this would be\r\n```\r\nArguments fun_of_matrix [R]%type_scope [m n]%nat_scope A%ring_scope (i j)%ring_scope\r\n```\r\n(`m n` being the size of the matrix)\r\nUnfortunately I tried but this didn't work (0 was still interpreted in int_scope, I guess the notations are resolved before the coercions during the elaboration phase)."
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "f344d66b1b82910441c37018ab10bb716ae961f7",
        "message": "Add number notation for int\n\nNow, 12 or -42 are read as Posz 12 or Negz 41 in scope int_scope.",
        "date": "2022-03-04T07:45:00Z"
      }
    ]
  },
  {
    "author": "proux01",
    "number": 841,
    "diff_summary": [
      {
        "file": ".github/workflows/nix-action-coq-8.13.yml",
        "status": "M",
        "additions": 368,
        "deletions": 127
      },
      {
        "file": ".github/workflows/nix-action-coq-8.14.yml",
        "status": "M",
        "additions": 368,
        "deletions": 127
      },
      {
        "file": ".github/workflows/nix-action-coq-8.15.yml",
        "status": "M",
        "additions": 368,
        "deletions": 127
      },
      {
        "file": ".github/workflows/nix-action-coq-master.yml",
        "status": "M",
        "additions": 368,
        "deletions": 127
      },
      {
        "file": ".nix/config.nix",
        "status": "M",
        "additions": 368,
        "deletions": 127
      },
      {
        "file": ".nix/coq-nix-toolbox.nix",
        "status": "M",
        "additions": 368,
        "deletions": 127
      },
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 368,
        "deletions": 127
      },
      {
        "file": "mathcomp/algebra/interval.v",
        "status": "M",
        "additions": 368,
        "deletions": 127
      },
      {
        "file": "mathcomp/algebra/poly.v",
        "status": "M",
        "additions": 368,
        "deletions": 127
      },
      {
        "file": "mathcomp/algebra/polydiv.v",
        "status": "M",
        "additions": 368,
        "deletions": 127
      },
      {
        "file": "mathcomp/algebra/ssralg.v",
        "status": "M",
        "additions": 368,
        "deletions": 127
      },
      {
        "file": "mathcomp/algebra/ssrint.v",
        "status": "M",
        "additions": 368,
        "deletions": 127
      },
      {
        "file": "mathcomp/algebra/ssrnum.v",
        "status": "M",
        "additions": 368,
        "deletions": 127
      },
      {
        "file": "mathcomp/character/integral_char.v",
        "status": "M",
        "additions": 368,
        "deletions": 127
      },
      {
        "file": "mathcomp/character/mxabelem.v",
        "status": "M",
        "additions": 368,
        "deletions": 127
      },
      {
        "file": "mathcomp/character/vcharacter.v",
        "status": "M",
        "additions": 368,
        "deletions": 127
      },
      {
        "file": "mathcomp/field/algC.v",
        "status": "M",
        "additions": 368,
        "deletions": 127
      },
      {
        "file": "mathcomp/field/algebraics_fundamentals.v",
        "status": "M",
        "additions": 368,
        "deletions": 127
      },
      {
        "file": "mathcomp/field/algnum.v",
        "status": "M",
        "additions": 368,
        "deletions": 127
      },
      {
        "file": "mathcomp/solvable/extraspecial.v",
        "status": "M",
        "additions": 368,
        "deletions": 127
      },
      {
        "file": "mathcomp/solvable/extremal.v",
        "status": "M",
        "additions": 368,
        "deletions": 127
      },
      {
        "file": "mathcomp/ssreflect/ssrAC.v",
        "status": "M",
        "additions": 368,
        "deletions": 127
      },
      {
        "file": "mathcomp/test_suite/output.v.out",
        "status": "M",
        "additions": 368,
        "deletions": 127
      },
      {
        "file": "mathcomp/test_suite/test_ssrAC.v",
        "status": "M",
        "additions": 368,
        "deletions": 127
      }
    ],
    "state": "merged",
    "open_date": "2022-01-15T19:14:58Z",
    "update_date": "2022-03-04T07:28:43Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2022-01-16T18:46:40Z",
        "comment": "The canonical way to refer to `nat_scope` in mathcomp is `%N`."
      },
      {
        "author": "proux01",
        "date": "2022-01-26T10:52:03Z",
        "comment": "@gares you were right, the `Open Scope ring_scope` in extraspecial.v and extremal.v were not needed\r\n\r\n@chdoc FYI:\r\n* 22 additional `%N`\r\n* 21 `%:R` removed\r\n\r\nso almost on par now (thanks to Enrico)\r\n"
      },
      {
        "author": "proux01",
        "date": "2022-02-17T08:32:16Z",
        "comment": "Rebased, all overlays merged, this will be mergeable whenever we decide to drop support for Coq 8.11 and 8.12."
      },
      {
        "author": "proux01",
        "date": "2022-03-04T07:28:57Z",
        "comment": "done"
      }
    ],
    "review_discussion": [
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/fraction.v",
        "date": "2022-01-16T19:53:00Z",
        "comment": "I don't understand this, the scope is supposed to be determined by `AC` (and`%AC`) (and all the numbers are actually `positive` I think)"
      },
      {
        "author": "proux01",
        "file": "mathcomp/algebra/fraction.v",
        "date": "2022-01-16T20:08:10Z",
        "comment": "There is no notation for 2, 3 or 4 in AC_scope and none of the AC notations is opening neither positive nor nat scope, so the most recently opened scope with such a notation is used."
      },
      {
        "author": "proux01",
        "file": "mathcomp/algebra/fraction.v",
        "date": "2022-01-16T21:18:27Z",
        "comment": "What we could though is to add a number notation in AC_scope that reads numbers as positive.\r\nThat should even be a one liner, I'll try that."
      },
      {
        "author": "proux01",
        "file": "mathcomp/algebra/fraction.v",
        "date": "2022-01-16T22:08:35Z",
        "comment": "Done"
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "cdcfada6b67edfd8f30a9c6ebb01b698a135d968",
        "message": "[CI] Update Nix CI",
        "date": "2022-03-03T21:46:22Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "8b34f319457a11f3b09c4e88b53da31aba8fe0bd",
        "message": "Add a number notation in AC_scope",
        "date": "2022-03-03T21:46:24Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "15012fb2832d323c031bacb3347e0bfd44dd5039",
        "message": "Add %N for natural numbers\n\nThis is done in preparation to the addition of a number notation in\nscope ring_scope. So we want to avoid natural number constants such as\n2 or 3 to be interpreted in ring_scope.",
        "date": "2022-03-03T21:46:24Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "3bee1da038d94218bee01459f8a9032410bca7f4",
        "message": "Add a number notation for ring\n\nNow, 12 or 42 are read as 12%:R or 42%:R in scope ring_scope.\nIf ssrint is imported, -6 is read as (-6)%:~R.\n\nOne may have to add a few %N in code that was using concrete\nnat values in scope ring_scope.",
        "date": "2022-03-03T21:46:24Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "dd6532aa6236eeab8babb5e59efbb34b9a58a089",
        "message": "Remove useless %:R on numbers\n\n2 is now a notation for 2%:R",
        "date": "2022-03-03T21:46:24Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 840,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 18,
        "deletions": 0
      },
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 18,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2022-01-13T23:23:05Z",
    "update_date": "2022-01-18T15:56:48Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2022-01-18T15:58:17Z",
        "comment": "I think it's ok to merge right away ;)"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "17ec49a7796bc9e6797e32a25abfa495b8b9a66d",
        "message": "Added theorem pairwise_trans",
        "date": "2022-01-13T22:48:57Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 839,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 7,
        "deletions": 0
      },
      {
        "file": "mathcomp/ssreflect/path.v",
        "status": "M",
        "additions": 7,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2022-01-13T23:09:06Z",
    "update_date": "2022-01-24T09:01:43Z",
    "discussion": [
      {
        "author": "ejgallego",
        "date": "2022-01-18T13:28:45Z",
        "comment": "I cc @jouvelot as he has a similar lemma in our codebase and may want to have a look."
      },
      {
        "author": "jouvelot",
        "date": "2022-01-18T13:58:53Z",
        "comment": "Thanks, Emilio: indeed sortedP seems quite natural. I'm not sure this is what you had in mind, but the other lemma I was looking for was the existence of a finite list of (improperly ordered) transpositions that, composed together, would yield a sorted list from an unsorted one (think bubble sort).\n\n> On 18 Jan 2022, at 14:28, Emilio Jesús Gallego Arias ***@***.***> wrote:\n> \n> \n> I cc @jouvelot <https://github.com/jouvelot> as he has a similar lemma in our codebase and may want to have a look.\n> \n> —\n> Reply to this email directly, view it on GitHub <https://github.com/math-comp/math-comp/pull/839#issuecomment-1015412958>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AEH4LNNNKZECO5HP62STDETUWVTJPANCNFSM5L5GLZ7A>.\n> Triage notifications on the go with GitHub Mobile for iOS <https://apps.apple.com/app/apple-store/id1477376905?ct=notification-email&mt=8&pt=524675> or Android <https://play.google.com/store/apps/details?id=com.github.android&referrer=utm_campaign%3Dnotification-email%26utm_medium%3Demail%26utm_source%3Dgithub>. \n> You are receiving this because you were mentioned.\n> \n\n"
      },
      {
        "author": "proux01",
        "date": "2022-01-18T14:45:56Z",
        "comment": "@jouvelot I don't think we have that currently in MathComp, so feel free to pen a separate PR."
      },
      {
        "author": "jouvelot",
        "date": "2022-04-22T20:56:40Z",
        "comment": "Hi Pierre (@proux01 ), \r\nI wrote a specification and proof for the following BubbleSort-like lemma:\r\n```\r\nbs_spec\r\n     : forall s : seq nat,\r\n       uniq s ->\r\n       exists ts : seq transposition,\r\n         let '(all_bubbles, s') := swap aperm s ts in \r\n         all_bubbles /\\ up_sorted s'\r\n```\r\nwhich fulfills what I was looking for. Since it's a big complicated, I'm not sure this would be acceptable for a mathcomp PR. Would you please be willing to have a quick look at the file `bubblesort.v` in the public repo [https://github.com/jouvelot/mech.v](https://github.com/jouvelot/mech.v) to give me some advice about this?\r\nThanks."
      },
      {
        "author": "proux01",
        "date": "2022-05-14T14:48:53Z",
        "comment": "Hi @jouvelot , sorry for the late answer. I finally got a look. IINM you want to prove that every permutation of a finite set is the composition of finitely many transpositions. I don't know that part of MathComp very well but it seems to me that this result is already proved as `prod_tpermP` in `perm.v`. Why don't you use that?"
      },
      {
        "author": "jouvelot",
        "date": "2022-05-14T20:13:16Z",
        "comment": "No problem, @proux01. One limitation of `prod_termP` I see comes from the fact that the permutations in `perm.v` for a sequence `s` deal with the values in `s`, while I need to deal with both the values and their indices. The theorem I suggest sees transpositions as pairs of indices. The motivation for this is that one can then limit oneself, to sort upward `s`, to applying transpositions that all have the property of being non-sorted bubbles (i.e., if `i1 < i2`, then `nth s i2 < nth s i1`), which is what bubble sort uses. In addition of providing a specification for a kind of bubble sort algorithm, this theorem is a key ingredient to prove some lemmas in `mech.v`, which is a framework under development to specify auction mechanisms (in the Mechanism Design sense)."
      },
      {
        "author": "proux01",
        "date": "2022-05-15T13:54:37Z",
        "comment": "Interesting. I wonder whether you could only go with indices (as values can be retrieved with `nth`). If it were me, I would probably have a detailed look at the proof of `prod_tpermP` and see if I can mimick it for my (stronger) property.\r\nAnyway, to answer the initial question, \"duplicating\" the definition of transposition and redoing on nat things that were (for a small part) already there on ordinals seems a bit wasteful and I wouldn't consider this ready for a pull request (at least in its current state).\r\n"
      },
      {
        "author": "jouvelot",
        "date": "2022-05-15T18:55:32Z",
        "comment": "I agree with your assessment. \r\n\r\n- I thought using `nat` instead of ordinals would be more useful, since it would have more impact than limiting it to finite types (which is ironic, since I use mostly ordinals and tuples in `mech.v`; in fact, I had to add a layer to map the `nat`-based version of my lemma to ordinals, so that I could use it in `mech.v`). \r\n- I also thought about using \"mathcomp indices\" instead of explicit ones, but they can sometimes be a bit difficult to use when duplicates exist in sequences (I use it nonetheless in the proof, since this issue is not a factor there). \r\n- The duplications you mention are indeed unfortunate, although most of the `max`-based lemmas are not present in `bigop.v` (and may not be applicable to `nat`, anyhow, if they were there). Some of them could in fact be added to `bigop.v`, if deemed useful.\r\n- For now, I'll have, as you suggest, a detailed look at `prod_termP`. \r\n\r\nI managed to get my \"bubble lemma\" to work as expected in my project. In my mind, the question remains of whether getting a nicer-looking version of it would be of value to the mathcomp community, or whether I should limit myself to a finite-type-only version ... or just drop it.\r\n\r\nThanks a lot for your advice."
      }
    ],
    "review_discussion": [
      {
        "author": "proux01",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2022-01-17T14:58:21Z",
        "comment": "Maybe\r\n```suggestion\r\nLemma sortedP x s :\r\n  reflect (forall i, i.+1 < size s -> e (nth x s i) (nth x s i.+1)) (sorted s).\r\n```\r\n(although it is less convenient for the `Arguments` command below)\r\n"
      },
      {
        "author": "proux01",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2022-01-17T14:58:54Z",
        "comment": "```suggestion\r\nArguments pathP {T e x p}.\r\nArguments sortedP {T e} x {s}.\r\n```\r\nif following previous suggestion"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2022-01-18T01:34:22Z",
        "comment": "I mimicked the behaviour of `pathP` (`x0` there plays the role of `x` for `sortedP`) and I'd rather stick to it."
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "fa21aa6aa94e65d28aa1cef6f4e5797c3066975d",
        "message": "Adding lemma sortedP",
        "date": "2022-01-18T15:57:14Z"
      },
      {
        "author": "proux01",
        "committer": "web-flow",
        "hash": "aa55306e8312a850ef2673a5befc6bf846244238",
        "message": "Merge branch 'master' into sortedP",
        "date": "2022-01-22T10:20:39Z"
      }
    ]
  },
  {
    "author": "affeldt-aist",
    "number": 838,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 4,
        "deletions": 1
      },
      {
        "file": "etc/utils/builddoc_lib.sh",
        "status": "M",
        "additions": 4,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2022-01-12T02:30:28Z",
    "update_date": "2022-04-21T13:33:13Z",
    "discussion": [
      {
        "author": "affeldt-aist",
        "date": "2022-04-14T09:52:22Z",
        "comment": "For the record, we have been using this modification to generate the documentation of MathComp-Analysis and that seems to be ok."
      },
      {
        "author": "CohenCyril",
        "date": "2022-04-14T13:38:21Z",
        "comment": "Maybe we should try to regenerate the doc of mathcomp and make a diff?"
      },
      {
        "author": "affeldt-aist",
        "date": "2022-04-15T05:15:48Z",
        "comment": "It turns out that this fix also fixes problems in the mathcomp documentation:\r\n- https://math-comp.github.io/htmldoc_1_14_0/mathcomp.ssreflect.ssrnotations.html (e^`() notation)\r\n- https://math-comp.github.io/htmldoc_1_14_0/mathcomp.solvable.abelian.html ('Ldiv_n() notation)\r\n- https://math-comp.github.io/htmldoc_1_14_0/mathcomp.algebra.poly.html (p^`() notation)\r\n(I noticed thanks to a diff.)"
      },
      {
        "author": "proux01",
        "date": "2022-04-15T07:51:03Z",
        "comment": "I'll merge next thursday if there is no further comment."
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "affeldt-aist",
        "committer": "proux01",
        "hash": "aba8dcc2d6ece692f0af0d1511a4d0f99145c9f1",
        "message": "fixes #828",
        "date": "2022-04-21T07:41:07Z"
      }
    ]
  },
  {
    "author": "proux01",
    "number": 837,
    "diff_summary": [
      {
        "file": ".gitlab-ci.yml",
        "status": "M",
        "additions": 4,
        "deletions": 9
      }
    ],
    "state": "merged",
    "open_date": "2022-01-10T15:17:15Z",
    "update_date": "2022-01-10T22:29:20Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "7f34a6ed67001ae020d9c2da7a4c03810c73c212",
        "message": "[CI] Remove 8.11 and 8.12 jobs for Analysis from gitlab CI\n\nMathcomp analysis recently dropped support for those Coq versions:\nhttps://github.com/math-comp/analysis/pull/343",
        "date": "2022-01-10T15:18:56Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 836,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 16,
        "deletions": 0
      },
      {
        "file": "mathcomp/ssreflect/ssrbool.v",
        "status": "M",
        "additions": 16,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2022-01-10T11:31:32Z",
    "update_date": "2022-04-14T14:06:15Z",
    "discussion": [
      {
        "author": "pi8027",
        "date": "2022-04-14T10:21:05Z",
        "comment": "@CohenCyril It seems to me that naming inconsistency still exists after this renaming. Do you plan to perform one more step of renamings to make them consistent? https://github.com/coq/coq/blob/2706baf2651da5d425ed8ef77f68c55c809f92fd/theories/ssr/ssrbool.v#L2120-L2125 https://github.com/coq/coq/blob/2706baf2651da5d425ed8ef77f68c55c809f92fd/theories/ssr/ssrbool.v#L2165-L2175"
      },
      {
        "author": "CohenCyril",
        "date": "2022-04-14T13:37:24Z",
        "comment": "> @CohenCyril It seems to me that naming inconsistency still exists after this renaming. Do you plan to perform one more step of renamings to make them consistent?\r\n\r\nSure we probably need to fix consistency in the next version."
      },
      {
        "author": "pi8027",
        "date": "2022-04-14T14:06:01Z",
        "comment": "@CohenCyril Please open an issue somewhere so that we don't forget that."
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "4356c0dee83b5058e5a860d3a5160551896d8bc6",
        "message": "in `ssrbool.v`, renamed `mono2W_in` to `mono1W_in` (was misnamed).",
        "date": "2022-01-10T11:38:24Z"
      }
    ]
  },
  {
    "author": "proux01",
    "number": 835,
    "diff_summary": [
      {
        "file": ".github/workflows/nix-action-coq-8.11.yml",
        "status": "M",
        "additions": 2,
        "deletions": 140
      },
      {
        "file": ".github/workflows/nix-action-coq-8.12.yml",
        "status": "M",
        "additions": 2,
        "deletions": 140
      },
      {
        "file": ".nix/config.nix",
        "status": "M",
        "additions": 2,
        "deletions": 140
      }
    ],
    "state": "merged",
    "open_date": "2022-01-09T12:01:08Z",
    "update_date": "2022-01-09T18:16:36Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2022-01-09T18:16:32Z",
        "comment": "They should also be removed from the gitlab CI, but it can be in another PR"
      },
      {
        "author": "proux01",
        "date": "2022-01-10T19:42:28Z",
        "comment": "Indeed, there it is : https://github.com/math-comp/math-comp/pull/837"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "ce05076e5731ece15d79ff9d5df3ff6c554a6bf9",
        "message": "[CI] Remove 8.11 and 8.12 for Analysis job\n\nMathcomp analysis recently dropped support for those Coq versions:\nhttps://github.com/math-comp/analysis/pull/343",
        "date": "2022-01-09T11:58:07Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 834,
    "diff_summary": [
      {
        "file": "mathcomp/algebra/ssrint.v",
        "status": "M",
        "additions": 12,
        "deletions": 15
      }
    ],
    "state": "merged",
    "open_date": "2022-01-07T22:17:40Z",
    "update_date": "2022-01-11T10:54:03Z",
    "discussion": [
      {
        "author": "proux01",
        "date": "2022-01-10T15:48:31Z",
        "comment": "So CI is green modulo analysis for 8.11 and 8.12 that has been / should be removed.\r\nI'll merge tomorrow if there is no further comment."
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "6efc64d1b798f0ca538fca35aeb3a3c751b87228",
        "message": "Removing old hack in ssrint",
        "date": "2022-01-07T22:10:13Z"
      }
    ]
  },
  {
    "author": "erikmd",
    "number": 833,
    "diff_summary": [
      {
        "file": ".gitlab-ci.yml",
        "status": "M",
        "additions": 16,
        "deletions": 5
      },
      {
        "file": "coq-mathcomp-ssreflect.opam",
        "status": "M",
        "additions": 16,
        "deletions": 5
      }
    ],
    "state": "merged",
    "open_date": "2022-01-07T15:40:17Z",
    "update_date": "2022-01-09T11:29:12Z",
    "discussion": [
      {
        "author": "proux01",
        "date": "2022-01-07T16:55:01Z",
        "comment": "CI is morally green:\r\n* `Nix CI for bundle coq-master / mathcomp-doc` is likely unrelated\r\n* `Nix CI for bundle coq-8.11 / mathcomp-analysis`, `Nix CI for bundle coq-8.12 / mathcomp-analysis`, `Gitlab CI job ci-analysis-8.11` and `Gitlab CI job ci-analysis-8.12` are due to analysis recently dropping 8.11 and 8.12 support (I'll do a separate PR to remove those jobs from the CI here)\r\n\r\nSo I'll merge tomorrow if there is no further comment."
      }
    ],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: CI",
        "description": "Issue or PR about the CI. (Gitlab CI or CI of dependencies problems linked with math-comp)"
      }
    ],
    "commits": [
      {
        "author": "erikmd",
        "committer": "erikmd",
        "hash": "5534965c999b5a52624f10b022aa2930f1f7f240",
        "message": "feat: Add CI/CD with `coqorg/coq:8.15-rc1`\n\n|- Deploy `mathcomp/mathcomp-dev:coq-8.15`",
        "date": "2022-01-07T15:40:47Z"
      }
    ]
  },
  {
    "author": "proux01",
    "number": 832,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "A",
        "additions": 115,
        "deletions": 12
      },
      {
        "file": "mathcomp/Make.test-suite",
        "status": "A",
        "additions": 115,
        "deletions": 12
      },
      {
        "file": "mathcomp/Makefile.test-suite.coq.local",
        "status": "A",
        "additions": 115,
        "deletions": 12
      },
      {
        "file": "mathcomp/algebra/rat.v",
        "status": "A",
        "additions": 115,
        "deletions": 12
      },
      {
        "file": "mathcomp/test_suite/test_rat.v",
        "status": "A",
        "additions": 115,
        "deletions": 12
      },
      {
        "file": "mathcomp/test_suite/test_rat.v.out",
        "status": "A",
        "additions": 115,
        "deletions": 12
      }
    ],
    "state": "merged",
    "open_date": "2022-01-07T11:23:34Z",
    "update_date": "2022-03-04T11:30:43Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2022-01-08T17:40:01Z",
        "comment": "That's awesome! Slightly off topic:\r\n- I'd like the same for `int` in another PR\r\n- Could we have the same for an arbitrary ring."
      },
      {
        "author": "proux01",
        "date": "2022-01-09T11:28:18Z",
        "comment": "> * I'd like the same for `int` in another PR\r\n\r\nSure, that should be an easier PR\r\n\r\n> * Could we have the same for an arbitrary ring.\r\n\r\nUnfortunately not, Coq requires the parsed type to be an inductive or at least a constant (so not a section variable).\r\nI could probably rather easily extend Coq to have `<number>` be parsed (and printed back) just as `<number>%:R` but I don't know if it's worth it (the `GRing.natmul` wouldn't be computed in any case (if only because we wouldn't know how to print back the result)).\r\n"
      },
      {
        "author": "proux01",
        "date": "2022-01-15T19:16:26Z",
        "comment": "Never mind, I just found a hack to do it without modifying Coq itself: #841 "
      },
      {
        "author": "proux01",
        "date": "2022-01-15T19:52:55Z",
        "comment": "> * I'd like the same for `int` in another PR\r\n\r\nHere it is: #842"
      },
      {
        "author": "proux01",
        "date": "2022-02-17T09:10:09Z",
        "comment": "Rebased on top of #842 "
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "b817afa1c01e794a688dec981fd564dae00023aa",
        "message": "Add number notation for rat",
        "date": "2022-03-04T09:31:14Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 830,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 6,
        "deletions": 2
      },
      {
        "file": "mathcomp/algebra/ssrnum.v",
        "status": "M",
        "additions": 6,
        "deletions": 2
      }
    ],
    "state": "merged",
    "open_date": "2022-01-01T15:28:28Z",
    "update_date": "2022-01-07T09:16:00Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "77de51fc4d8685a632f3adf69a0a43356e689833",
        "message": "Generalize `rootCV` so that the degree is not necessarily positive",
        "date": "2022-01-01T15:23:27Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 829,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 4,
        "deletions": 1
      },
      {
        "file": "mathcomp/ssreflect/order.v",
        "status": "M",
        "additions": 4,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2021-12-28T15:10:14Z",
    "update_date": "2022-03-18T09:16:07Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: bug",
        "description": "Issue which describe bugs"
      }
    ],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "5c46dd2c9cace29b06da880a96898ac053f465af",
        "message": "Fix [distrLatticeType of T with disp] notation",
        "date": "2021-12-28T15:06:48Z"
      }
    ]
  },
  {
    "author": "proux01",
    "number": 826,
    "diff_summary": [
      {
        "file": ".github/workflows/nix-action-coq-8.11.yml",
        "status": "M",
        "additions": 233,
        "deletions": 163
      },
      {
        "file": ".github/workflows/nix-action-coq-8.12.yml",
        "status": "M",
        "additions": 233,
        "deletions": 163
      },
      {
        "file": ".github/workflows/nix-action-coq-8.13.yml",
        "status": "M",
        "additions": 233,
        "deletions": 163
      },
      {
        "file": ".github/workflows/nix-action-coq-8.14.yml",
        "status": "M",
        "additions": 233,
        "deletions": 163
      },
      {
        "file": ".github/workflows/nix-action-coq-master.yml",
        "status": "M",
        "additions": 233,
        "deletions": 163
      },
      {
        "file": ".gitlab-ci.yml",
        "status": "M",
        "additions": 233,
        "deletions": 163
      },
      {
        "file": ".nix/coq-nix-toolbox.nix",
        "status": "M",
        "additions": 233,
        "deletions": 163
      }
    ],
    "state": "merged",
    "open_date": "2021-12-07T08:42:46Z",
    "update_date": "2021-12-07T10:43:40Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "fa758df35b95f56980d2389aa27aad9b2e1b45da",
        "message": "[CI] Update Coq Nix toolbox",
        "date": "2021-12-07T09:21:52Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "5bca0510b38e6ab9fd28ac623f7f3935415abdde",
        "message": "[CI] Fcsl-pcm dropped Coq 8.11 and 8.12",
        "date": "2021-12-07T10:45:23Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 824,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 45,
        "deletions": 32
      },
      {
        "file": "mathcomp/algebra/fraction.v",
        "status": "M",
        "additions": 45,
        "deletions": 32
      },
      {
        "file": "mathcomp/algebra/poly.v",
        "status": "M",
        "additions": 45,
        "deletions": 32
      },
      {
        "file": "mathcomp/algebra/ring_quotient.v",
        "status": "M",
        "additions": 45,
        "deletions": 32
      },
      {
        "file": "mathcomp/algebra/ssralg.v",
        "status": "M",
        "additions": 45,
        "deletions": 32
      },
      {
        "file": "mathcomp/fingroup/action.v",
        "status": "M",
        "additions": 45,
        "deletions": 32
      },
      {
        "file": "mathcomp/fingroup/morphism.v",
        "status": "M",
        "additions": 45,
        "deletions": 32
      },
      {
        "file": "mathcomp/ssreflect/order.v",
        "status": "M",
        "additions": 45,
        "deletions": 32
      },
      {
        "file": "mathcomp/ssreflect/tuple.v",
        "status": "M",
        "additions": 45,
        "deletions": 32
      }
    ],
    "state": "merged",
    "open_date": "2021-11-24T13:16:19Z",
    "update_date": "2022-06-10T07:12:42Z",
    "discussion": [
      {
        "author": "pi8027",
        "date": "2022-01-25T08:11:38Z",
        "comment": "I still have to apply this change to other structures."
      },
      {
        "author": "proux01",
        "date": "2022-01-25T09:24:09Z",
        "comment": "@pi8027 do you want to do it in the current PR or in a further one?"
      },
      {
        "author": "pi8027",
        "date": "2022-04-13T17:38:45Z",
        "comment": "In the end, I found and fixed a bunch of similar issues using `grep`. Now I think my lack of confidence in the fix is a bigger issue. So I'd like to ask for a careful review."
      }
    ],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: fix",
        "description": "PR that fixes a bug. Please refer to the appropriate issue(s) if relevant."
      }
    ],
    "commits": [
      {
        "author": "pi8027",
        "committer": "proux01",
        "hash": "256f5d35694ba6e95ab93edc7a3e22fd5136f032",
        "message": "Fix the scope of `{ 'symbol' ... }` notations",
        "date": "2022-06-07T14:05:53Z"
      },
      {
        "author": "pi8027",
        "committer": "proux01",
        "hash": "58bb6bd09d02b4dae7f99fe5fef1f9dd0d75c58c",
        "message": "Treat `quot`, `ideal_quot`, and `mod_ideal` in ring_quotient notations as symbols",
        "date": "2022-06-07T14:05:53Z"
      }
    ]
  },
  {
    "author": "thery",
    "number": 823,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 211,
        "deletions": 6
      },
      {
        "file": "mathcomp/ssreflect/prime.v",
        "status": "M",
        "additions": 211,
        "deletions": 6
      }
    ],
    "state": "merged",
    "open_date": "2021-11-24T02:44:37Z",
    "update_date": "2021-12-10T15:48:05Z",
    "discussion": [
      {
        "author": "thery",
        "date": "2021-11-24T02:47:08Z",
        "comment": "I've tried to merge what I had and what @clayrat had. "
      },
      {
        "author": "thery",
        "date": "2021-11-24T02:52:08Z",
        "comment": "need help to improve theorem names ..."
      },
      {
        "author": "proux01",
        "date": "2021-11-24T09:18:32Z",
        "comment": "Is there a good reason for this to be specific to 2?"
      },
      {
        "author": "clayrat",
        "date": "2021-11-24T12:34:54Z",
        "comment": "It appears in complexity theory (required number of bits, various bounds for binary tree-like structures), is often included in standard libraries as a primitive (eg, in C and Matlab), and interacts nicely with 2-based special cases that Mathcomp already has (e.g. `.*2` or `./2`)."
      },
      {
        "author": "thery",
        "date": "2021-11-24T21:32:42Z",
        "comment": "@proux01 ok I've tried to generalize, not sure my assumptions are minimal"
      },
      {
        "author": "thery",
        "date": "2021-12-06T15:03:32Z",
        "comment": "> ```coq\r\n> Lemma up_log_trunc_log p n : 1 < p -> (up_log p n).-1 = trunc_log p n.-1.\r\n> Proof.\r\n> move=> p_gt1.\r\n> case: (leqP (up_log p n) 0).\r\n>   rewrite leqn0 up_log_eq0 leqNgt p_gt1 /=.\r\n>   case: n => [_|[_|//]] /=; first by rewrite up_log0.\r\n>   by rewrite up_log1.\r\n> rewrite up_log_gt0 => /andP[_ n_gt1].\r\n> apply: succn_inj; rewrite prednK ?up_log_gt0 ?p_gt1//.\r\n> apply: up_log_eq => //.\r\n> rewrite -[n]prednK ?ltnS -?pred_Sn ?[0 < n]ltnW//.\r\n> by rewrite trunc_logP ?ltn_predRL// trunc_log_ltn.\r\n> Qed.\r\n> ```\r\n@proux01 Completly overlooked there was such a simple relation. I have added in a slighty different form. Look if it is ok\r\n"
      },
      {
        "author": "proux01",
        "date": "2021-12-06T15:44:19Z",
        "comment": "> I have added in a slighty different form. Look if it is ok\r\n\r\nNice, your form seems much more usable.\r\n"
      },
      {
        "author": "thery",
        "date": "2021-12-06T16:22:58Z",
        "comment": "@proux01 changed the def of `trunc_log`, a bit scare it breaks something :crossed_fingers: "
      },
      {
        "author": "thery",
        "date": "2021-12-06T22:13:04Z",
        "comment": "@proux01 @CohenCyril do you have any idea why `coqeal` is not compiling?"
      },
      {
        "author": "proux01",
        "date": "2021-12-07T07:58:57Z",
        "comment": "There seems to be a dependency issue (missing dependency to real_closed, added recently), maybe we should update the coq-nix-toolbox? (there is still a bit of dark magic there for me)"
      },
      {
        "author": "proux01",
        "date": "2021-12-07T10:46:33Z",
        "comment": "@thery CI should be fixed https://github.com/math-comp/math-comp/pull/826 (except for bigenough on Coq master https://github.com/math-comp/bigenough/pull/5 ), please rebase"
      },
      {
        "author": "thery",
        "date": "2021-12-07T10:53:29Z",
        "comment": "@proux01 Did it. Hope not to get 30 \"failing\" emails like before :roll_eyes:  "
      },
      {
        "author": "thery",
        "date": "2021-12-07T13:20:47Z",
        "comment": "@proux01 Thanks. Seems pretty good only 6 failures but they seem unrelated"
      },
      {
        "author": "proux01",
        "date": "2021-12-07T15:54:24Z",
        "comment": "Indeed, all failures are due to bienough not being compatible with Coq master (c.f. https://github.com/math-comp/bigenough/pull/5 ) so I'll merge by the end of the week if there is no further comment.\r\n\r\nBTW, you may want to remove `trunc_log0n` and `trunc_log1n` since it's now the definition."
      },
      {
        "author": "proux01",
        "date": "2021-12-10T12:14:09Z",
        "comment": "@thery I was about to merge when I realised there seems to be a bunch of unrelated things in the diff of  `CHANGELOG_UNRELEASED.md`, a rebase issue?\r\n"
      },
      {
        "author": "thery",
        "date": "2021-12-10T15:35:51Z",
        "comment": "@proux01 my bad, I've used the github web-interface to fix the conflict and I've clearly messed up. Should be ok now."
      }
    ],
    "review_discussion": [
      {
        "author": "clayrat",
        "file": "mathcomp/ssreflect/prime.v",
        "date": "2021-11-24T12:37:42Z",
        "comment": "Looks like an extra `_up` & formatting is off"
      },
      {
        "author": "thery",
        "file": "mathcomp/ssreflect/prime.v",
        "date": "2021-11-24T21:31:24Z",
        "comment": "corrected"
      },
      {
        "author": "proux01",
        "file": "mathcomp/ssreflect/prime.v",
        "date": "2021-11-25T08:26:44Z",
        "comment": "Would we also want `0 < up_log p n -> 1 < p` and `0 < up_log p n` which might be more convenient to rewrite `1 < p` or ` 1 < n` to `true`?"
      },
      {
        "author": "proux01",
        "file": "mathcomp/ssreflect/prime.v",
        "date": "2021-11-25T08:29:56Z",
        "comment": "Has the alternative definition such that `p ^ k.-1 <= n < p ^ k` been considered? It may be more convenient, for instance to retrieve the \"required number of bits\" to encode a number (as noted by @clayrat )."
      },
      {
        "author": "proux01",
        "file": "mathcomp/ssreflect/prime.v",
        "date": "2021-11-25T08:33:43Z",
        "comment": "The name may suggest the presence of a minimum, maybe `up_log_ub` or `up_log_le` but I'm not good at names."
      },
      {
        "author": "thery",
        "file": "mathcomp/ssreflect/prime.v",
        "date": "2021-11-25T12:49:09Z",
        "comment": "my idea was to generalize in such a way that I would be the \"proper\" when instanciating with p=2 and with simplification"
      },
      {
        "author": "thery",
        "file": "mathcomp/ssreflect/prime.v",
        "date": "2021-11-25T12:49:14Z",
        "comment": "My main source is the AKS formalzation where they use the round up of the real log. I guess it is pretty standard but I am not an expert. Yours is simply `(trunc_log _).-1`"
      },
      {
        "author": "thery",
        "file": "mathcomp/ssreflect/prime.v",
        "date": "2021-11-25T12:50:03Z",
        "comment": "I just mimic the names that were given in the `trunc_log` but I agree I will have a hard remembering the name "
      },
      {
        "author": "proux01",
        "file": "mathcomp/ssreflect/prime.v",
        "date": "2021-11-25T12:56:54Z",
        "comment": "Indeed, we can then ignore my comment."
      },
      {
        "author": "thery",
        "file": "mathcomp/ssreflect/prime.v",
        "date": "2021-11-25T15:11:27Z",
        "comment": " The `ub` suffix does not seem to be used in the library. I like `up_log_le` or maybe `up_log_leq`. We should also rename `trunc_log_max` then. Another name I find weird is `trunc_logP`."
      },
      {
        "author": "proux01",
        "file": "mathcomp/ssreflect/prime.v",
        "date": "2021-12-04T17:36:37Z",
        "comment": "```suggestion\r\nLemma up_log_eq p n k : 1 < p -> p ^ n < k <= p ^ n.+1 -> up_log p k = n.+1.\r\nProof.\r\nmove=> p_gt1 /andP[npLk kLpn]; apply/anti_leq.\r\nrewrite up_log_min //= -(ltn_exp2l _ _ p_gt1).\r\nby apply: leq_trans npLk (up_logP _ _).\r\ned.\r\n```"
      },
      {
        "author": "proux01",
        "file": "mathcomp/ssreflect/prime.v",
        "date": "2021-12-04T17:39:31Z",
        "comment": "```suggestion\r\nLemma up_logMp p n : 1 < p -> 0 < n -> up_log p (p * n) = (up_log p n).+1.\r\nProof.\r\ncase: p => [//|p] p_gt0.\r\ncase: n => [//|[|n]] _; first by rewrite muln1 up_lognn// up_log1.\r\napply: up_log_eq => //.\r\nrewrite expnS leq_pmul2l// up_logP// andbT.\r\nrewrite -[up_log _ _]prednK ?up_log_gt0 ?p_gt0 //.\r\nby rewrite expnS ltn_pmul2l// up_log_gtn.\r\nQed.\r\n```"
      },
      {
        "author": "thery",
        "file": "mathcomp/ssreflect/prime.v",
        "date": "2021-12-06T15:05:19Z",
        "comment": "Added"
      },
      {
        "author": "proux01",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2021-12-06T15:50:54Z",
        "comment": "```suggestion\r\n  + theorems `trunc_log0`, `trunc_log1`, `trunc_log_eq0`,\r\n```\r\n`trunc_logP` was already there (it only moved by a few lines, no idea why)"
      },
      {
        "author": "proux01",
        "file": "mathcomp/ssreflect/prime.v",
        "date": "2021-12-06T15:53:00Z",
        "comment": "BTW, the last part seems incorrect (at least for p = 0, according to `trunc_log0n`), should we fix the doc? (it also doesn't tell anything about p = 1) or the definition?"
      },
      {
        "author": "proux01",
        "file": "mathcomp/ssreflect/prime.v",
        "date": "2021-12-06T15:57:57Z",
        "comment": "bikeshedding\r\n```suggestion\r\nProof. by move=> ? ?; rewrite up_log_trunc_log. Qed.\r\n```"
      },
      {
        "author": "proux01",
        "file": "mathcomp/ssreflect/prime.v",
        "date": "2021-12-06T15:58:20Z",
        "comment": "bikeshedding too\r\n```suggestion\r\nLemma up_log2_double n : 0 < n -> up_log 2 n.*2 = (up_log 2 n).+1.\r\nProof. by move=> n_gt0; rewrite -mul2n up_logMp. Qed.\r\n```"
      },
      {
        "author": "thery",
        "file": "mathcomp/ssreflect/prime.v",
        "date": "2021-12-06T16:12:02Z",
        "comment": "I would prefer to change the def so that it is 0 when it does not make sense"
      },
      {
        "author": "proux01",
        "file": "mathcomp/ssreflect/prime.v",
        "date": "2021-12-06T16:26:22Z",
        "comment": "last bikeshedding\r\n```suggestion\r\n(*  trunc_log p m == the largest e such that p ^ e <= m, or 0 if p <= 1 or    *)\r\n```"
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "thery",
        "committer": "thery",
        "hash": "62af88580709b83bb6032ed86051d6fd5fc4d7a8",
        "message": "adding logarithm in base 2",
        "date": "2021-12-07T10:49:51Z"
      },
      {
        "author": "thery",
        "committer": "thery",
        "hash": "dc6eb1a169fc23ce5eaa4a7e89184c27f6380217",
        "message": "log2n -> log2n_up",
        "date": "2021-12-07T10:49:51Z"
      },
      {
        "author": "thery",
        "committer": "thery",
        "hash": "c358743928b926605626ec8832981cc2a2e5c6da",
        "message": "generalize up_log2 -> up_log p",
        "date": "2021-12-07T10:49:51Z"
      },
      {
        "author": "thery",
        "committer": "thery",
        "hash": "aee55f1f9404ea8c520fc53f5d0d8c5e6be2dd53",
        "message": "Adding Pierre's comment",
        "date": "2021-12-07T10:49:51Z"
      },
      {
        "author": "thery",
        "committer": "thery",
        "hash": "a55f37ff5f2f41df279366fc7b531790824bb414",
        "message": "Adding more Pierre's comments",
        "date": "2021-12-07T10:49:51Z"
      },
      {
        "author": "thery",
        "committer": "thery",
        "hash": "1abdd0b9b76b6761bc5e031e48694604e4f8b75a",
        "message": "typo",
        "date": "2021-12-07T10:49:51Z"
      },
      {
        "author": "thery",
        "committer": "thery",
        "hash": "bb58d4ab8c834750c299c033a4d61933bc1fe99f",
        "message": "Fix CHANGELOG",
        "date": "2021-12-07T10:49:51Z"
      },
      {
        "author": "thery",
        "committer": "thery",
        "hash": "77ba5aaefaf63c18c769805ea5b9e12c74303c39",
        "message": "change trunc_log default value",
        "date": "2021-12-07T10:49:51Z"
      },
      {
        "author": "thery",
        "committer": "thery",
        "hash": "4c6de6f7ac1cc20f6e5e06b0491169b2ff1b5a38",
        "message": "changelog trunc_log",
        "date": "2021-12-07T10:49:51Z"
      },
      {
        "author": "thery",
        "committer": "thery",
        "hash": "765c6b80b51bfdf4e7d425d41ac826b5a1e19a37",
        "message": "space",
        "date": "2021-12-07T10:49:51Z"
      },
      {
        "author": "thery",
        "committer": "thery",
        "hash": "e670b2c6e0364e1911c963dbf7a2cd16f6f7376a",
        "message": "Fix CHANGELOG",
        "date": "2021-12-10T15:32:32Z"
      }
    ]
  },
  {
    "author": "affeldt-aist",
    "number": 822,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 31,
        "deletions": 4
      },
      {
        "file": "mathcomp/solvable/abelian.v",
        "status": "M",
        "additions": 31,
        "deletions": 4
      },
      {
        "file": "mathcomp/ssreflect/bigop.v",
        "status": "M",
        "additions": 31,
        "deletions": 4
      }
    ],
    "state": "merged",
    "open_date": "2021-11-15T04:26:35Z",
    "update_date": "2022-06-10T07:13:01Z",
    "discussion": [
      {
        "author": "chdoc",
        "date": "2021-11-15T07:49:36Z",
        "comment": "This generalization certainly makes sense. In fact, coq-communnity/reglang uses an eqType version of `bigmax_sup`:\r\n```\r\nLemma bigmax_seq_sup (T : eqType) (s:seq T) (P : pred T) F k m :\r\n  k \\in s -> P k -> m <= F k -> m <= \\max_(i <- s | P i) F i.\r\nProof. move => A B C. by rewrite (big_rem k) //= B leq_max C. Qed.\r\n```\r\nSo maybe it's a good idea do generalize that as well. "
      },
      {
        "author": "affeldt-aist",
        "date": "2021-11-15T07:53:57Z",
        "comment": "Great. I'll look at more potential such generalizations about \\max and turn this draft PR into a genuine one asap. Thank you."
      },
      {
        "author": "proux01",
        "date": "2022-06-07T13:40:30Z",
        "comment": "It seems we reached a consensus here. I'll merge by the end of the week if there is no further comment."
      }
    ],
    "review_discussion": [
      {
        "author": "proux01",
        "file": "mathcomp/ssreflect/bigop.v",
        "date": "2022-02-20T18:24:27Z",
        "comment": "Isn't this redundant with `leq_bigmax_cond`?"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/bigop.v",
        "date": "2022-02-25T20:08:19Z",
        "comment": "Here follows the lemma with the \"correct\" generality, which should bear the name `leq_bigmax`\r\n```suggestion\r\nLemma leq_bigmax (I : Type) r (P : {pred I}) F i0 :\r\n  P i0 -> F i0 <= \\max_(i <- r | P i) F i.\r\n```\r\nNow, if you also want the specialization to an `eqType` and the `i0 \\in r`, you can name it `leq_bigmax_seq`."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/bigop.v",
        "date": "2022-02-25T20:12:10Z",
        "comment": "I'd keep the former `bigmax_leqP` as such, and add `_seq` variants. And I would prove them using `big_nth`."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/bigop.v",
        "date": "2022-02-25T20:13:12Z",
        "comment": "Same as for `leq_bigmax`"
      },
      {
        "author": "affeldt-aist",
        "file": "mathcomp/ssreflect/bigop.v",
        "date": "2022-03-02T08:12:43Z",
        "comment": "One purpose of the `i0 \\in r` was to avoid the empty list which can be used to invalidate this new statement."
      },
      {
        "author": "proux01",
        "file": "mathcomp/ssreflect/bigop.v",
        "date": "2022-03-02T08:30:35Z",
        "comment": "Maybe we can still have this named with `_seq` for uniformity, and no `leq_bigmax`?"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/bigop.v",
        "date": "2022-03-03T17:55:57Z",
        "comment": "Then use `nilp r`"
      },
      {
        "author": "proux01",
        "file": "mathcomp/ssreflect/bigop.v",
        "date": "2022-03-14T15:23:50Z",
        "comment": "The list being non empty doesn't seem enough for the lamme to hold, it really neeed `i0 \\in r`. I'm afraid, there is no most generic lemma here."
      },
      {
        "author": "ybertot",
        "file": "mathcomp/ssreflect/bigop.v",
        "date": "2022-03-14T15:33:05Z",
        "comment": "How about something like \"has P r\""
      },
      {
        "author": "proux01",
        "file": "mathcomp/ssreflect/bigop.v",
        "date": "2022-03-14T15:40:14Z",
        "comment": "That doesn't ensure that i0 is in r (hence accounted for in the max)."
      },
      {
        "author": "ybertot",
        "file": "mathcomp/ssreflect/bigop.v",
        "date": "2022-03-14T15:45:30Z",
        "comment": "Sorry I misread the statement, I thought i0 was used only in hypotheses."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/bigop.v",
        "date": "2022-03-16T14:08:36Z",
        "comment": "I see! I think I did the same mistake as Yves."
      },
      {
        "author": "affeldt-aist",
        "file": "mathcomp/ssreflect/bigop.v",
        "date": "2022-04-14T09:41:03Z",
        "comment": "I have added the `_seq` variants but did not figure out how to prove them using `big_nth`."
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "b12384978fa27f9f56e1c2eb7dc08869bdc5074c",
        "message": "generalize leq_bigmax_cond",
        "date": "2022-04-05T08:34:50Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 821,
    "diff_summary": [
      {
        "file": ".github/workflows/nix-action-coq-8.11.yml",
        "status": "M",
        "additions": 528,
        "deletions": 660
      },
      {
        "file": ".github/workflows/nix-action-coq-8.12.yml",
        "status": "M",
        "additions": 528,
        "deletions": 660
      },
      {
        "file": ".github/workflows/nix-action-coq-8.13.yml",
        "status": "M",
        "additions": 528,
        "deletions": 660
      },
      {
        "file": ".github/workflows/nix-action-coq-8.14.yml",
        "status": "M",
        "additions": 528,
        "deletions": 660
      },
      {
        "file": ".github/workflows/nix-action-coq-master.yml",
        "status": "M",
        "additions": 528,
        "deletions": 660
      },
      {
        "file": ".nix/config.nix",
        "status": "M",
        "additions": 528,
        "deletions": 660
      },
      {
        "file": ".nix/coq-nix-toolbox.nix",
        "status": "M",
        "additions": 528,
        "deletions": 660
      }
    ],
    "state": "merged",
    "open_date": "2021-10-30T21:08:13Z",
    "update_date": "2021-11-02T08:31:14Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "73807c90b9bdcc84aa71f81e9a9e31622ae75822",
        "message": "Fix CI",
        "date": "2021-11-01T14:40:22Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 820,
    "diff_summary": [
      {
        "file": ".github/workflows/nix-action-coq-8.11.yml",
        "status": "A",
        "additions": 920,
        "deletions": 445
      },
      {
        "file": ".github/workflows/nix-action-coq-8.12.yml",
        "status": "A",
        "additions": 920,
        "deletions": 445
      },
      {
        "file": ".github/workflows/nix-action-coq-8.13.yml",
        "status": "A",
        "additions": 920,
        "deletions": 445
      },
      {
        "file": ".github/workflows/nix-action-coq-8.14.yml",
        "status": "A",
        "additions": 920,
        "deletions": 445
      },
      {
        "file": ".github/workflows/nix-action-coq-master.yml",
        "status": "A",
        "additions": 920,
        "deletions": 445
      },
      {
        "file": ".nix/config.nix",
        "status": "A",
        "additions": 920,
        "deletions": 445
      },
      {
        "file": ".nix/coq-nix-toolbox.nix",
        "status": "A",
        "additions": 920,
        "deletions": 445
      },
      {
        "file": ".nix/coq-overlays/mathcomp-doc/default.nix",
        "status": "A",
        "additions": 920,
        "deletions": 445
      }
    ],
    "state": "merged",
    "open_date": "2021-10-28T16:10:44Z",
    "update_date": "2021-10-28T20:22:52Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "91a910f75cff0508039eaa84f430067a2e583f6d",
        "message": "Building doc",
        "date": "2021-10-28T16:47:54Z"
      }
    ]
  },
  {
    "author": "proux01",
    "number": 819,
    "diff_summary": [
      {
        "file": ".nix/coq-overlays/multinomials/default.nix",
        "status": "D",
        "additions": 0,
        "deletions": 82
      },
      {
        "file": ".nix/coq-overlays/paramcoq/default.nix",
        "status": "D",
        "additions": 0,
        "deletions": 82
      }
    ],
    "state": "merged",
    "open_date": "2021-10-28T13:44:56Z",
    "update_date": "2021-10-29T11:45:00Z",
    "discussion": [
      {
        "author": "proux01",
        "date": "2021-10-28T15:27:55Z",
        "comment": "Th failures for `coq-master / mathcomp-abel` and `coq-8.12 / odd-order` look unrelated but I don't really understand them (they both fail at step \"Checking presence of CI target {mathcomp-abel,odd-order}\")"
      },
      {
        "author": "CohenCyril",
        "date": "2021-10-28T16:15:00Z",
        "comment": "> Th failures for `coq-master / mathcomp-abel` and `coq-8.12 / odd-order` look unrelated but I don't really understand them (they both fail at step \"Checking presence of CI target {mathcomp-abel,odd-order}\")\r\n\r\nI dropped error messages a bit too eagerly, sorry!\r\nhttps://github.com/coq-community/coq-nix-toolbox/pull/73\r\n\r\nMeanwhile you can do the `nix-build` command manually without throwing out the output :smile: \r\n```bash\r\n$ nix-build --no-out-link --argstr bundle \"coq-master\" --argstr job \"mathcomp-abel\"\r\nthese derivations will be built:\r\n  /nix/store/a319n9bcxdja4i2y37xdkap7sig07939-coqdev-mathcompdev-abel-dev.drv\r\nthese paths will be fetched (168.88 MiB download, 633.94 MiB unpacked):\r\n  /nix/store/rxzkrfkhzd2agc9haj351nay2x689h2y-coq-dev\r\n```\r\nBut I don't see the problem either :laughing: "
      },
      {
        "author": "CohenCyril",
        "date": "2021-10-28T20:24:14Z",
        "comment": "@proux01  If you rebase on top of master you should be able to see the error message now."
      },
      {
        "author": "proux01",
        "date": "2021-10-29T07:50:57Z",
        "comment": "Thanks, looks like things fixed themselves?\r\nAnyway, CI green"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "d821528f3c2ca6bbc6503236861300da297f7b25",
        "message": "[CI] Remove no longer useful Nix overlays\n\n* multinomials fixed upstream\n  https://github.com/math-comp/multinomials/pull/49\n  https://github.com/math-comp/multinomials/pull/50\n* paramcoq fixed in nixpkgs\n  https://github.com/NixOS/nixpkgs/pull/142174",
        "date": "2021-10-29T06:21:56Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 818,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 148,
        "deletions": 59
      },
      {
        "file": "mathcomp/algebra/ssrnum.v",
        "status": "M",
        "additions": 148,
        "deletions": 59
      },
      {
        "file": "mathcomp/character/classfun.v",
        "status": "M",
        "additions": 148,
        "deletions": 59
      },
      {
        "file": "mathcomp/ssreflect/ssrbool.v",
        "status": "M",
        "additions": 148,
        "deletions": 59
      }
    ],
    "state": "merged",
    "open_date": "2021-10-26T08:52:33Z",
    "update_date": "2022-06-25T13:37:34Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2021-10-26T08:53:46Z",
        "comment": "CC @hivert @ChrisHughes24"
      },
      {
        "author": "hivert",
        "date": "2021-10-28T06:06:08Z",
        "comment": "May I suggest to take the opportunity to add all the easy lemmas about complex conjugation such as `1^* = 1` or `(x + y)^* = x^* + y^*`. Admitedly, they are all one liner thank to the various `rmorph?`. However, they are easier to apply if you have exactly the right lemma. For example, I'd rather do `rewrite -conjC1`, instead of `rewrite -(rmorph1 [rmorphism of (fun x => x^*)]) /=.`\r\n"
      },
      {
        "author": "CohenCyril",
        "date": "2022-01-10T11:35:08Z",
        "comment": "> May I suggest to take the opportunity to add all the easy lemmas about complex conjugation such as `1^* = 1` or `(x + y)^* = x^* + y^*`. Admitedly, they are all one liner thank to the various `rmorph?`. However, they are easier to apply if you have exactly the right lemma. For example, I'd rather do `rewrite -conjC1`, instead of `rewrite -(rmorph1 [rmorphism of (fun x => x^*)]) /=.`\r\n\r\n`conjC0` and `conjC1` were already there, I added `conjCN1` and I will not add the `conjCD`, etc, since the pattern of the RHS is sufficient to infer the morphism, so the contrived form  `rewrite -(rmorphD [rmorphism of (fun x => x^*)]) /=.` would ne be necessary anyway. I think this is a good compromise and will stop there."
      },
      {
        "author": "CohenCyril",
        "date": "2022-01-11T14:59:31Z",
        "comment": "@thery thanks for your thorough review."
      },
      {
        "author": "proux01",
        "date": "2022-06-15T08:46:52Z",
        "comment": "@CohenCyril could you rebase please?"
      },
      {
        "author": "CohenCyril",
        "date": "2022-06-23T06:43:51Z",
        "comment": "> @CohenCyril could you rebase please?\r\n\r\ndone"
      }
    ],
    "review_discussion": [
      {
        "author": "thery",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2022-01-10T12:14:44Z",
        "comment": "Do we need  both theorems? maybe `eqC` is enough"
      },
      {
        "author": "thery",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2022-01-10T12:23:12Z",
        "comment": "`mulCr_rect`?"
      },
      {
        "author": "thery",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2022-01-10T12:23:45Z",
        "comment": "`mulCl_rect`?"
      },
      {
        "author": "thery",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2022-01-10T12:24:19Z",
        "comment": "difficult to remember this `Crect`"
      },
      {
        "author": "thery",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2022-01-10T13:15:10Z",
        "comment": "I would have expected the theorem to have the form : \r\n\r\n_  / _ =  _ + i * _\r\n\r\n"
      },
      {
        "author": "thery",
        "file": "mathcomp/ssreflect/ssrbool.v",
        "date": "2022-01-10T13:16:45Z",
        "comment": "additions\r\n\r\nwhat this comment means?"
      },
      {
        "author": "thery",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2022-01-10T14:16:52Z",
        "comment": "`x1` and `y1` reals are not necessary here"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/ssrbool.v",
        "date": "2022-01-11T15:01:10Z",
        "comment": "These are the \"standard\" comments for things that are added to `ssreflect.v`, `ssrfun.v` and `ssrbool.v`: they should be added in two places: in mathcomp and in Coq, the comment keeps track of which version of Coq includes the change."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2022-01-11T15:03:45Z",
        "comment": "> I would have expected the theorem to have the form :\r\n> \r\n> _ / _ = _ + i * _\r\n\r\nI followed `invC_rect` which already breaks the invariant... do you think it's worth trying to maintain the invariant?"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2022-01-11T15:03:58Z",
        "comment": "> `x1` and `y1` reals are not necessary here\r\n\r\nThanks for the remark :)"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2022-01-11T15:04:41Z",
        "comment": "This is a rather technical lemma since it does not assume anything to be real, so my rule of thumb was not to care if the name was more difficult to remember. Do you have a naming suggestion?"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2022-01-11T15:05:21Z",
        "comment": "`mulC_rectl`?"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2022-01-11T15:05:54Z",
        "comment": "After playing around with it a few times, I liked to have both."
      },
      {
        "author": "thery",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2022-01-11T15:29:12Z",
        "comment": "ok. \r\nthis made me think that why `mulC` is used and not `mulc`, we used `mulr` and not `mulR` in algebra, and `muln` for nat "
      },
      {
        "author": "thery",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2022-01-11T15:36:34Z",
        "comment": "if you look at `oppC_rect` it clearly enforces a `_ + i * _` shape.\r\n"
      },
      {
        "author": "thery",
        "file": "mathcomp/ssreflect/ssrbool.v",
        "date": "2022-01-11T15:40:06Z",
        "comment": "ok don´t  forget to fix the typos : additions"
      },
      {
        "author": "thery",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2022-01-11T15:40:21Z",
        "comment": "could we inline it in the proof of `divC_rect`?"
      },
      {
        "author": "thery",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2022-01-11T15:43:20Z",
        "comment": "ok.  then I was wondering if `('Re x = 'Re y) -> ('Im x = 'Im y) -> x = y` would not be more handy."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2022-01-11T17:34:27Z",
        "comment": "~~probably~~\r\nActually, no, I use it in a foward chaining sometimes I think"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2022-01-11T17:36:27Z",
        "comment": "I guess because most `C` lemmas were coming from the former `algC.v` and got generalized to `numClosedFieldType` (which encompasses standard complexes from analysis as well) and in order for some things not to break I kept the name the same."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2022-01-11T17:37:38Z",
        "comment": "I was thinking maybe someone would like the \"technical lemma\" to be available, just in case... (since the some other `*_rect` work without condition, and it can be useful in some occurences)."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2022-01-11T17:39:08Z",
        "comment": "Yes, and that looks very legitimate... What to do with `invC_rect` though?\r\nMaybe we could have `*c_rect` which preserve the invariant and deprecate the `C_rect` ones? that might be for another PR though..."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/ssrbool.v",
        "date": "2022-01-11T17:39:49Z",
        "comment": "```suggestion\r\n(*******************)\r\n(* v8.16 additions *)\r\n(*******************)\r\n```"
      },
      {
        "author": "thery",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2022-01-11T18:15:16Z",
        "comment": "very strange..."
      },
      {
        "author": "thery",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2022-01-11T18:16:11Z",
        "comment": "yep it is a bit annoying since it clashes with C for commutativity."
      },
      {
        "author": "thery",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2022-01-11T19:01:33Z",
        "comment": "fine with me\r\n"
      },
      {
        "author": "thery",
        "file": "mathcomp/ssreflect/ssrbool.v",
        "date": "2022-01-11T19:02:20Z",
        "comment": "look like this came from a cut and paste, lots of \"addtions\" in the file"
      },
      {
        "author": "thery",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2022-01-11T19:03:57Z",
        "comment": "didn't realize `invC` was following the same pattern, so ok for me like this."
      },
      {
        "author": "proux01",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2022-06-23T08:13:59Z",
        "comment": "It seems there is also a `divC_rect` lemma added?\r\n"
      },
      {
        "author": "proux01",
        "file": "mathcomp/ssreflect/ssrbool.v",
        "date": "2022-06-23T08:14:29Z",
        "comment": "Maybe move below (after `8.17 additions`)"
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "proux01",
        "hash": "d61cc5f8c5202fb369769f352a1ed89b575d3b6f",
        "message": "Improving ssrnum.v\n\n- locking 'Im and 'Re to avoid unwanted applications of rpredM\n- adding a series of lemmas\n- getting rid of extra notation arguments (the notation is already defined in fintype)\n- adding hints for membership to real of 'Re and 'Im",
        "date": "2022-06-24T14:57:05Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 817,
    "diff_summary": [
      {
        "file": ".github/workflows/nix-action-coq-8.11.yml",
        "status": "D",
        "additions": 3809,
        "deletions": 1199
      },
      {
        "file": ".github/workflows/nix-action-coq-8.12.yml",
        "status": "D",
        "additions": 3809,
        "deletions": 1199
      },
      {
        "file": ".github/workflows/nix-action-coq-8.13.yml",
        "status": "D",
        "additions": 3809,
        "deletions": 1199
      },
      {
        "file": ".github/workflows/nix-action-coq-8.14.yml",
        "status": "D",
        "additions": 3809,
        "deletions": 1199
      },
      {
        "file": ".github/workflows/nix-action-coq-master.yml",
        "status": "D",
        "additions": 3809,
        "deletions": 1199
      },
      {
        "file": ".nix/config.nix",
        "status": "D",
        "additions": 3809,
        "deletions": 1199
      },
      {
        "file": ".nix/coq-nix-toolbox.nix",
        "status": "D",
        "additions": 3809,
        "deletions": 1199
      },
      {
        "file": ".nix/coq-overlays/extructures/default.nix",
        "status": "D",
        "additions": 3809,
        "deletions": 1199
      },
      {
        "file": ".nix/nixpkgs.nix",
        "status": "D",
        "additions": 3809,
        "deletions": 1199
      },
      {
        "file": "_CoqProject",
        "status": "D",
        "additions": 3809,
        "deletions": 1199
      },
      {
        "file": "mathcomp/Make",
        "status": "D",
        "additions": 3809,
        "deletions": 1199
      },
      {
        "file": "mathcomp/fingroup/Make",
        "status": "D",
        "additions": 3809,
        "deletions": 1199
      }
    ],
    "state": "merged",
    "open_date": "2021-10-26T00:03:12Z",
    "update_date": "2021-10-27T13:05:03Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "be0863d6866b0c2c0f3470065ea7140f56569c05",
        "message": "adding CI for coq 8.14 and master\n\n+ silencing warning about locality of hint rewrite\n+ fixing cachix action\n+ adding several reverse dependency tests",
        "date": "2021-10-27T11:26:13Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 816,
    "diff_summary": [
      {
        "file": ".github/workflows/nix-action-coq-8.11.yml",
        "status": "D",
        "additions": 4147,
        "deletions": 1286
      },
      {
        "file": ".github/workflows/nix-action-coq-8.12.yml",
        "status": "D",
        "additions": 4147,
        "deletions": 1286
      },
      {
        "file": ".github/workflows/nix-action-coq-8.13.yml",
        "status": "D",
        "additions": 4147,
        "deletions": 1286
      },
      {
        "file": ".github/workflows/nix-action-coq-8.14.yml",
        "status": "D",
        "additions": 4147,
        "deletions": 1286
      },
      {
        "file": ".github/workflows/nix-action-coq-master.yml",
        "status": "D",
        "additions": 4147,
        "deletions": 1286
      },
      {
        "file": ".nix/config.nix",
        "status": "D",
        "additions": 4147,
        "deletions": 1286
      },
      {
        "file": ".nix/coq-nix-toolbox.nix",
        "status": "D",
        "additions": 4147,
        "deletions": 1286
      },
      {
        "file": ".nix/nixpkgs.nix",
        "status": "D",
        "additions": 4147,
        "deletions": 1286
      },
      {
        "file": "_CoqProject",
        "status": "D",
        "additions": 4147,
        "deletions": 1286
      },
      {
        "file": "mathcomp/Make",
        "status": "D",
        "additions": 4147,
        "deletions": 1286
      },
      {
        "file": "mathcomp/fingroup/Make",
        "status": "D",
        "additions": 4147,
        "deletions": 1286
      }
    ],
    "state": "closed",
    "open_date": "2021-10-25T11:07:10Z",
    "update_date": "2021-10-26T00:01:32Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "3924b897e9b2fb3743f11b8216b0d0d5daaffb2d",
        "message": "adding CI for coq 8.14 and master",
        "date": "2021-10-25T11:47:10Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "9e7b40341421d2fe3612be348d17c4922f91c5f0",
        "message": "fix hint rewrite locality",
        "date": "2021-10-25T11:47:10Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "5972bb92d546dfb628038e595b1ff5a11e88c8f8",
        "message": "Testing Coq 8.14 and master",
        "date": "2021-10-25T14:34:30Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "6643c09f1777fb53d196325ea120f78b5db125ee",
        "message": "Revert \"fix hint rewrite locality\"\n\nThis reverts commit 9e7b40341421d2fe3612be348d17c4922f91c5f0.",
        "date": "2021-10-25T14:57:24Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "f07a11a3beda0c513fb2910571b6b4e042b30f5d",
        "message": "silencing warning",
        "date": "2021-10-25T14:59:51Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "45c64eeded76e34a2b1ae50a6b0ca61f90fe0136",
        "message": "grouping cahcix actions",
        "date": "2021-10-25T22:37:57Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "ed9409182a0c5cd940b470761952a0d301232112",
        "message": "Adding coq-community cachix",
        "date": "2021-10-25T22:41:50Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "9fa915a3f65845c7d1e5cfa1eefdcd18d3ad294a",
        "message": "fixup",
        "date": "2021-10-25T23:26:00Z"
      }
    ]
  },
  {
    "author": "chdoc",
    "number": 815,
    "diff_summary": [
      {
        "file": ".mailmap",
        "status": "M",
        "additions": 346,
        "deletions": 343
      },
      {
        "file": "CHANGELOG.md",
        "status": "M",
        "additions": 346,
        "deletions": 343
      },
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 346,
        "deletions": 343
      }
    ],
    "state": "merged",
    "open_date": "2021-10-25T09:30:45Z",
    "update_date": "2021-10-25T14:56:39Z",
    "discussion": [],
    "review_discussion": [
      {
        "author": "CohenCyril",
        "file": "CHANGELOG.md",
        "date": "2021-10-25T13:11:42Z",
        "comment": "```suggestion\r\n  + new lemmas `row'_col'_char_poly_mx` and `char_block_diag_mx` \r\n```"
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "chdoc",
        "committer": "chdoc",
        "hash": "598d7b7793372c99b6169446a5f88cbc1a921f6f",
        "message": "group and order additions",
        "date": "2021-10-25T11:37:51Z"
      },
      {
        "author": "chdoc",
        "committer": "chdoc",
        "hash": "eeab0e4ccaa6ca8e4468bb82de234b33d33e161b",
        "message": "add late additions",
        "date": "2021-10-25T11:37:51Z"
      },
      {
        "author": "chdoc",
        "committer": "chdoc",
        "hash": "47816e191bf0451aef6a2e26300fb678f729058b",
        "message": "migrate changes to CHANGELOG.md",
        "date": "2021-10-25T11:40:31Z"
      },
      {
        "author": "chdoc",
        "committer": "chdoc",
        "hash": "1ee33c2c786a9cc0290367f3d14125ddd18fed25",
        "message": "include co-authors as contributors, fix date",
        "date": "2021-10-25T12:14:57Z"
      },
      {
        "author": "chdoc",
        "committer": "web-flow",
        "hash": "5586e112b9ac73542d0d80d0bbda4afdebb1401a",
        "message": "remove erroneous quote\n\nCo-authored-by: Cyril Cohen <CohenCyril@users.noreply.github.com>",
        "date": "2021-10-25T13:26:21Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 814,
    "diff_summary": [
      {
        "file": "mathcomp/algebra/rat.v",
        "status": "M",
        "additions": 6,
        "deletions": 7
      }
    ],
    "state": "merged",
    "open_date": "2021-10-22T15:01:35Z",
    "update_date": "2021-10-23T17:04:08Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: bug",
        "description": "Issue which describe bugs"
      },
      {
        "tag": "kind: fix",
        "description": "PR that fixes a bug. Please refer to the appropriate issue(s) if relevant."
      }
    ],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "52306e76c0420ad788559527fc9914d68e2c87fe",
        "message": "Fix [rat x // y] notation",
        "date": "2021-10-22T14:58:55Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "aca08b612a6b676b71fad74824bb69871a0b88bb",
        "message": "Fixing the fix",
        "date": "2021-10-22T16:42:42Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 813,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 22,
        "deletions": 0
      },
      {
        "file": "mathcomp/algebra/rat.v",
        "status": "M",
        "additions": 22,
        "deletions": 0
      },
      {
        "file": "mathcomp/ssreflect/ssreflect.v",
        "status": "M",
        "additions": 22,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2021-10-22T11:35:39Z",
    "update_date": "2022-06-29T13:42:50Z",
    "discussion": [
      {
        "author": "ppedrot",
        "date": "2022-07-04T12:50:01Z",
        "comment": "@gares FYI merging this PR has broken compat of mathcomp with coq/coq#16004, because the hint is locality-free..."
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "gares",
        "hash": "1e98c1700162a34ff67082ee1b82b4af6abbcb89",
        "message": "Adding vm_compute rewrite rule",
        "date": "2022-06-29T13:41:56Z"
      }
    ]
  },
  {
    "author": "chdoc",
    "number": 812,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 12,
        "deletions": 9
      }
    ],
    "state": "merged",
    "open_date": "2021-10-22T08:29:03Z",
    "update_date": "2021-10-22T09:46:30Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: fix",
        "description": "PR that fixes a bug. Please refer to the appropriate issue(s) if relevant."
      }
    ],
    "commits": [
      {
        "author": "chdoc",
        "committer": "chdoc",
        "hash": "4aed4a6d4e1650bd5a493f097f694cea333b9a77",
        "message": "remove eqType restrictions for eq_in_map, eq_in_pmap, eq_pmap",
        "date": "2021-10-22T08:28:13Z"
      }
    ]
  },
  {
    "author": "proux01",
    "number": 810,
    "diff_summary": [
      {
        "file": "README-CI-Nix.md",
        "status": "A",
        "additions": 73,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2021-10-21T13:17:33Z",
    "update_date": "2022-07-26T12:44:51Z",
    "discussion": [],
    "review_discussion": [
      {
        "author": "CohenCyril",
        "file": "README-CI-Nix.md",
        "date": "2021-10-21T14:16:02Z",
        "comment": "This file should be removed when using the same version as the toolbox. Otherwise one can run\r\n```shell\r\n% nix-shell --run \"updateNixpkgsMaster\"\r\n```\r\nor to update to the current nixpkgs master\r\n```shell\r\n% nix-shell --run \"updateNixpkgs owner branch\"\r\n```\r\nto update to a custom branch."
      },
      {
        "author": "CohenCyril",
        "file": "README-CI-Nix.md",
        "date": "2021-10-21T14:42:56Z",
        "comment": "Caching is done via https://www.cachix.org/ and there is a token in the math-comp organization to authenticate and store the results. Any CI build is stored globally and can be used on one's own computer by running\r\n```shell\r\nnix-env -iA nixpkgs.cachix\r\ncachix use coq\r\ncachix use coq-community\r\ncachix use math-comp\r\n```\r\nas described in https://github.com/math-comp/math-comp/wiki/Using-nix"
      },
      {
        "author": "CohenCyril",
        "file": "README-CI-Nix.md",
        "date": "2021-10-21T14:44:06Z",
        "comment": "There is a lot of information here: https://github.com/math-comp/math-comp/wiki/Using-nix\r\nplease tell me if anything is missing."
      },
      {
        "author": "proux01",
        "file": "README-CI-Nix.md",
        "date": "2021-10-22T09:13:31Z",
        "comment": "Thanks, I indeed missed that wiki page, let's point to it for anything not CI related, no need to duplicate information."
      }
    ],
    "tags": [
      {
        "tag": "kind: documentation",
        "description": "Issue or PR about documentation mistakes, deficiencies, enhancements, ..."
      }
    ],
    "commits": [
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "78e93a251d8201a50faeef5c15889731e3afd37b",
        "message": "[CI] Attempt to document Nix CI\n\nCo-authored-by: Cyril COhen <cohen@crans.org>",
        "date": "2021-10-22T09:14:07Z"
      },
      {
        "author": "CohenCyril",
        "committer": "web-flow",
        "hash": "1950ef927b12cbfb62cc6b3a8e0820c502e8a4fa",
        "message": "Update README-CI-Nix.md",
        "date": "2022-07-26T12:44:36Z"
      }
    ]
  },
  {
    "author": "proux01",
    "number": 809,
    "diff_summary": [
      {
        "file": ".nix/config.nix",
        "status": "A",
        "additions": 82,
        "deletions": 1
      },
      {
        "file": ".nix/coq-overlays/multinomials/default.nix",
        "status": "A",
        "additions": 82,
        "deletions": 1
      },
      {
        "file": ".nix/coq-overlays/paramcoq/default.nix",
        "status": "A",
        "additions": 82,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2021-10-21T11:10:29Z",
    "update_date": "2021-10-21T14:40:02Z",
    "discussion": [
      {
        "author": "proux01",
        "date": "2021-10-21T11:42:15Z",
        "comment": "The nixppkgs PR NixOS/nixpkgs#142174 just got merged, so we may rather want to wait a few days and update nixpkgs here."
      },
      {
        "author": "proux01",
        "date": "2021-10-21T12:52:50Z",
        "comment": "And multinomials 8.12 is ok by applying @erikmd suggestion from https://github.com/math-comp/math-comp/pull/793#issuecomment-946141996"
      },
      {
        "author": "CohenCyril",
        "date": "2021-10-21T13:19:26Z",
        "comment": "@proux01 I am going to remove the draft status and merge this if you agree?"
      }
    ],
    "review_discussion": [
      {
        "author": "CohenCyril",
        "file": ".nix/coq-overlays/multinomials/default.nix",
        "date": "2021-10-21T12:59:45Z",
        "comment": "@proux01 thanks for patching this. I still do not understand why it is broken though...\r\nCC: @erikmd @Zimmi48"
      },
      {
        "author": "proux01",
        "file": ".nix/coq-overlays/multinomials/default.nix",
        "date": "2021-10-21T13:07:30Z",
        "comment": "Me neither, and particularly why it only breaks for 8.12?"
      },
      {
        "author": "Zimmi48",
        "file": ".nix/coq-overlays/multinomials/default.nix",
        "date": "2021-10-21T13:15:51Z",
        "comment": "How can I reproduce / see the error log?\r\n\r\nOCaml is not a propagated build input of Coq so you need to explicitly depend on it to rely on native compilation, but in the case of a Dune build, it is automatically included in the build inputs so this doesn't seem to be a valid explanation."
      },
      {
        "author": "proux01",
        "file": ".nix/coq-overlays/multinomials/default.nix",
        "date": "2021-10-21T13:24:17Z",
        "comment": "> How can I reproduce / see the error log?\r\n\r\nBy removing the above `preBuild` for instance. Here is a failing job https://github.com/math-comp/math-comp/pull/793/checks?check_run_id=3905504301\r\n\r\nThe explanation about OCaml indeed seems promising (although still wondering why only for 8.12)."
      },
      {
        "author": "Zimmi48",
        "file": ".nix/coq-overlays/multinomials/default.nix",
        "date": "2021-10-21T13:31:09Z",
        "comment": "OK, thanks for the link. I think this kind of error just means that Coq is improperly installed from the point of view of ocamlfind. There could be a bug with the Nix packaging of Coq 8.12."
      },
      {
        "author": "Zimmi48",
        "file": ".nix/coq-overlays/multinomials/default.nix",
        "date": "2021-10-21T13:35:59Z",
        "comment": "To confirm this, one would need to run `nix-shell` for this and run `ocamlfind -query coq.kernel`. That being said, I just did that with the current nixpkgs master and `nix-shell -I nixpkgs=. -p coq_8_12 coq_8_12.findlib` and it worked fine."
      },
      {
        "author": "proux01",
        "file": ".nix/coq-overlays/multinomials/default.nix",
        "date": "2021-10-21T13:38:39Z",
        "comment": "Same here with the nixpkgs version used by mathcomp."
      },
      {
        "author": "Zimmi48",
        "file": ".nix/coq-overlays/multinomials/default.nix",
        "date": "2021-10-21T13:39:25Z",
        "comment": "So I just ran `nix-shell --argstr job multinomials` with the code from this PR and what I got was that OCaml is there but `ocamlfind` is not. This might explain the error."
      },
      {
        "author": "Zimmi48",
        "file": ".nix/coq-overlays/multinomials/default.nix",
        "date": "2021-10-21T13:41:00Z",
        "comment": "So indeed, we only add `ocaml` to the build inputs when using Dune, but not `findlib`. So `findlib` must be explicitly added to the `extraBuildInputs` if native compilation is to be used."
      },
      {
        "author": "Zimmi48",
        "file": ".nix/coq-overlays/multinomials/default.nix",
        "date": "2021-10-21T13:44:52Z",
        "comment": "@CohenCyril That's a bit annoying that to test a patch that only does a modification to the multinomials overlay, I have to recompile all of mathcomp, because Nix considers the source to have changed."
      },
      {
        "author": "Zimmi48",
        "file": ".nix/coq-overlays/multinomials/default.nix",
        "date": "2021-10-21T13:47:55Z",
        "comment": "Anyway, this patch seems to work:\r\n\r\n```diff\r\ndiff --git a/.nix/coq-overlays/multinomials/default.nix b/.nix/coq-overlays/multinomials/default.nix\r\nindex cb238da..cb2d884 100644\r\n--- a/.nix/coq-overlays/multinomials/default.nix\r\n+++ b/.nix/coq-overlays/multinomials/default.nix\r\n@@ -36,10 +36,7 @@ with lib; mkCoqDerivation {\r\n     patchShebangs configure || true\r\n   '';\r\n \r\n-  preBuild = ''\r\n-    # dune + native compilation + Nix seems currently broken, so disactivate it\r\n-    cp -f src/dune.in src/dune\r\n-  '';\r\n+  extraBuildInputs = [ coq.ocamlPackages.findlib ];\r\n \r\n   propagatedBuildInputs =\r\n     [ mathcomp.ssreflect mathcomp.algebra mathcomp-finmap mathcomp-bigenough ];\r\n```"
      },
      {
        "author": "proux01",
        "file": ".nix/coq-overlays/multinomials/default.nix",
        "date": "2021-10-21T14:10:07Z",
        "comment": "Thanks! We don't want to do native compilation however, so we should probably keep the previous patch.\r\nAnd I now understand why it only broke for 8.12, that's just what @erikmd wrote in multinomial's configure script: https://github.com/math-comp/multinomials/blob/master/configure#L34"
      },
      {
        "author": "Zimmi48",
        "file": ".nix/coq-overlays/multinomials/default.nix",
        "date": "2021-10-21T14:11:29Z",
        "comment": "Actually, I was testing with the wrong version (8.13). When testing with Coq 8.12, I get a different failure but I think it means that the dependencies were built without native-compute:\r\n\r\n```\r\nFile \"./src/./NSsrMultinomials_freeg.native\", line 18, characters 3-61:\r\n18 |   (Nmathcomp_ssreflect_seq.const_Nmathcomp_ssreflect_seq_uniq\r\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nError: Unbound module Nmathcomp_ssreflect_seq\r\nError: Native compiler exited with status 2\r\n\r\n        coqc src/.xfinmap.aux,src/NSsrMultinomials_xfinmap.{cmi,cmxs},src/xfinmap.{glob,vo} (exit 1)\r\n(cd _build/default && /nix/store/rais5zqvn73xn2w99jrfz30ysakgdc7n-coq-8.12.2/bin/coqc -w -ambiguous-paths -w -notation-overridden -w -redundant-canonical-projection -w -projection-no-head-constant -w -deprecated-native-compiler-option -native-output-dir . -native-compiler on -nI /nix/store/rais5zqvn73xn2w99jrfz30ysakgdc7n-coq-8.12.2/lib/ocaml/4.10.2/site-lib/coq/kernel -nI src -R src SsrMultinomials src/xfinmap.v)\r\nFile \"./src/./NSsrMultinomials_xfinmap.native\", line 14, characters 14-108:\r\n14 |   (Obj.magic (Nmathcomp_bigenough_bigenough.Construct_Nmathcomp_bigenough_bigenough_BigEnough_big_rel_of_0_1((\r\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nError: Unbound module Nmathcomp_bigenough_bigenough\r\nError: Native compiler exited with status 2\r\n```\r\n\r\nSo my best guess on why it doesn't fail with Coq 8.13 is just that the native-compiler is not run at all with Coq 8.13.\r\n\r\nEDIT: confirmed in the comment above."
      },
      {
        "author": "proux01",
        "file": ".nix/coq-overlays/multinomials/default.nix",
        "date": "2021-10-21T14:14:46Z",
        "comment": "> I think it means that the dependencies were built without native-compute:\r\n\r\nyes\r\n\r\n> So my best guess on why it doesn't fail with Coq 8.13 is just that the native-compiler is not run at all with Coq 8.13.\r\n\r\nExactly, Erik's script in multinomials basically activates native compilation only for Coq 8.12 (c.f. my link above)."
      },
      {
        "author": "CohenCyril",
        "file": ".nix/coq-overlays/multinomials/default.nix",
        "date": "2021-10-21T14:22:19Z",
        "comment": "Let's merge this for now, and then I'd like to discuss what should land in nixpkgs.\r\nShouldn't coq propagate the buildInput findlib?"
      },
      {
        "author": "proux01",
        "file": ".nix/coq-overlays/multinomials/default.nix",
        "date": "2021-10-21T14:29:43Z",
        "comment": "> Shouldn't coq propagate the buildInput findlib?\r\n\r\nI don't know, the way native compilation works in the OPAM world is through a `coq-native` metapackage. There is currently no equivalent on the Nix side, so nothing would build with native compilation anyway, which makes the addition of findlib rather useless in practice."
      },
      {
        "author": "Zimmi48",
        "file": ".nix/coq-overlays/multinomials/default.nix",
        "date": "2021-10-21T14:34:31Z",
        "comment": "If we follow the split world approach, we could have `coqPackages_withnative` where OCaml and findlib are available (recall that OCaml is not available by default for packages who do not build with Dune) and the right configure options are passed."
      },
      {
        "author": "proux01",
        "file": ".nix/coq-overlays/multinomials/default.nix",
        "date": "2021-10-21T14:37:02Z",
        "comment": "If that's easy to do, that would be nice (we have no user yet, but testing some packages in CI with native compilation would definitely make sense)."
      },
      {
        "author": "CohenCyril",
        "file": ".nix/coq-overlays/multinomials/default.nix",
        "date": "2021-10-21T14:39:39Z",
        "comment": "> If we follow the split world approach, we could have `coqPackages_withnative` where OCaml and findlib are available (recall that OCaml is not available by default for packages who do not build with Dune) and the right configure options are passed.\r\n\r\nI would imagine a coqPackages.withnative which could thus be overloaded."
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "9d5f0d4ad3234b60a19d5caffadc250e1248dc37",
        "message": "[CI] Temporary overlay for CoqEAL\n\nCoqEAL now needs paramcoq 1.1.3, add an overlay until we get the\nnixpkg updated : https://github.com/NixOS/nixpkgs/pull/142460",
        "date": "2021-10-21T11:10:02Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "65457ec329597564befbfe763a8f572389955c00",
        "message": "[CI] Disactivate native compilation for multinomials",
        "date": "2021-10-21T12:23:38Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 808,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 76,
        "deletions": 21
      },
      {
        "file": "mathcomp/algebra/rat.v",
        "status": "M",
        "additions": 76,
        "deletions": 21
      }
    ],
    "state": "merged",
    "open_date": "2021-10-20T12:54:50Z",
    "update_date": "2021-10-22T13:24:52Z",
    "discussion": [
      {
        "author": "pi8027",
        "date": "2021-10-20T13:01:30Z",
        "comment": "> @pi8027 could you test if this is enough to solve the inefficiencies encountered in apery?\r\n\r\nIndeed. I will report ASAP."
      },
      {
        "author": "pi8027",
        "date": "2021-10-20T14:36:19Z",
        "comment": "math-comp/apery#4 compiles without almost any issue! I have just changed one line which was already a bottleneck with MathComp 1.12.\r\n\r\nWith this PR:\r\n```\r\nmake  595.03s user 9.88s system 99% cpu 10:05.20 total\r\n```\r\nWith MathComp 1.12:\r\n```\r\nmake  741.40s user 9.96s system 99% cpu 12:31.72 total\r\n```\r\n\r\nInterestingly, it is now faster than MathComp 1.12, although the result without native compilation could be different..."
      },
      {
        "author": "CohenCyril",
        "date": "2021-10-22T11:36:29Z",
        "comment": "@pi8027 fixed notations `[rat x // y]` and removed `vm_compute` for now and made another pull request #813  for this."
      },
      {
        "author": "CohenCyril",
        "date": "2021-10-22T13:19:32Z",
        "comment": "@pi8027 I think it is ready now..."
      },
      {
        "author": "proux01",
        "date": "2021-10-26T13:12:18Z",
        "comment": "BTW, maybe an alternative to resorting to `30%:Q` would be to have a number notation like `30` (or `3.14`) in scope `rat_scope`?"
      }
    ],
    "review_discussion": [
      {
        "author": "pi8027",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2021-10-20T17:09:54Z",
        "comment": "I guess this is the reason why the compilation of apery becomes faster than MathComp 1.12. But, I'm not sure whether it is necessary because large constants of type `rat` are made opaque in apery. I'm also skeptical about whether it will invite another performance issue or not."
      },
      {
        "author": "CohenCyril",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2021-10-20T18:27:35Z",
        "comment": "I'd rather keep it as is, with it `Eval hnf in 30%:Q.` terminates in less than 3s whereas it was not without it."
      },
      {
        "author": "pi8027",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2021-10-21T04:40:24Z",
        "comment": "Do you mean:\r\n```suggestion\r\n  using `rewrite [pattern]vm_compute_eq`.\r\n```"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/ssreflect.v",
        "date": "2021-10-21T04:42:15Z",
        "comment": "Same here. BTW, its definition is a good technique to know!\r\n```suggestion\r\n(* Usage: rewrite [pattern]vm_compute_eq.                               *)\r\n```"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/rat.v",
        "date": "2021-10-21T04:47:10Z",
        "comment": "Is there any reason to put `_ as x2` and `_ as y2` instead of simply a wildcard `_` here?"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/rat.v",
        "date": "2021-10-21T04:47:27Z",
        "comment": "Same here."
      },
      {
        "author": "pi8027",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2021-10-21T04:50:19Z",
        "comment": "Sure. I agree that this is likely an optimal solution for now, unless we put `GRing.natmul` and `GRing.exp` to the interfaces of `ssralg` structures."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/rat.v",
        "date": "2021-10-21T17:03:43Z",
        "comment": "nop..."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/rat.v",
        "date": "2021-10-21T17:03:44Z",
        "comment": "nop..."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/ssreflect.v",
        "date": "2021-10-21T17:04:25Z",
        "comment": "No the rewrite rule `vm_compute` (the `vm_compute_eq` is the name of the typeclass) the problem is elsewhere in the doc."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/ssreflect.v",
        "date": "2021-10-22T05:30:23Z",
        "comment": "I see. So I misunderstood the technique😅 Do you want to improve the doc now?"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/rat.v",
        "date": "2021-10-22T05:34:04Z",
        "comment": "The scope is missing. Shouldn't we also add a `Reserved Notation` for them?"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/ssreflect.v",
        "date": "2021-10-22T05:40:09Z",
        "comment": "Also, I guess we should backport it to Coq. Right?"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/ssreflect.v",
        "date": "2021-10-22T11:37:37Z",
        "comment": "moved to PR #813 for now"
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "8b8297a6a8774c3d35b23b5453496ed9bbd26c6b",
        "message": "Fine grained addition in rat",
        "date": "2021-10-22T11:38:14Z"
      }
    ]
  },
  {
    "author": "hivert",
    "number": 806,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 9,
        "deletions": 3
      },
      {
        "file": "mathcomp/fingroup/presentation.v",
        "status": "M",
        "additions": 9,
        "deletions": 3
      }
    ],
    "state": "merged",
    "open_date": "2021-10-19T21:16:52Z",
    "update_date": "2021-10-22T13:44:59Z",
    "discussion": [],
    "review_discussion": [
      {
        "author": "amahboubi",
        "file": "mathcomp/fingroup/presentation.v",
        "date": "2021-10-20T08:13:21Z",
        "comment": "I agree the doc should be fixed. But this phrasing is might be a bit misleading because the \"later group\" is alwasy finite."
      },
      {
        "author": "amahboubi",
        "file": "mathcomp/fingroup/presentation.v",
        "date": "2021-10-20T08:16:20Z",
        "comment": "However the proposed fix is much better than the original. So let's merge."
      },
      {
        "author": "hivert",
        "file": "mathcomp/fingroup/presentation.v",
        "date": "2021-10-20T08:36:49Z",
        "comment": "By later , I meant `the group generated by the x_i, subject to the relations s_j = t_j` which is a mathematical notion, noting formalized, and can be of any cardinalty. I didn't want to repeat `the group generated ...`"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/fingroup/presentation.v",
        "date": "2021-10-20T10:26:29Z",
        "comment": "This should be \"the latter group\", rather than \"this later group\"."
      },
      {
        "author": "hivert",
        "file": "mathcomp/fingroup/presentation.v",
        "date": "2021-10-20T10:36:55Z",
        "comment": "Hi @amahboubi: is the rephrasing I just pushed now clearer ?"
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "hivert",
        "committer": "hivert",
        "hash": "30e873f32935efa610d2c4f54bd28f72d567ff9e",
        "message": "Correct the doc of G \\isog Grp( ... )",
        "date": "2021-10-20T10:35:52Z"
      }
    ]
  },
  {
    "author": "erikmd",
    "number": 804,
    "diff_summary": [
      {
        "file": "coq-mathcomp-algebra.opam",
        "status": "M",
        "additions": 6,
        "deletions": 6
      },
      {
        "file": "coq-mathcomp-character.opam",
        "status": "M",
        "additions": 6,
        "deletions": 6
      },
      {
        "file": "coq-mathcomp-field.opam",
        "status": "M",
        "additions": 6,
        "deletions": 6
      },
      {
        "file": "coq-mathcomp-fingroup.opam",
        "status": "M",
        "additions": 6,
        "deletions": 6
      },
      {
        "file": "coq-mathcomp-solvable.opam",
        "status": "M",
        "additions": 6,
        "deletions": 6
      },
      {
        "file": "coq-mathcomp-ssreflect.opam",
        "status": "M",
        "additions": 6,
        "deletions": 6
      }
    ],
    "state": "merged",
    "open_date": "2021-10-18T10:55:12Z",
    "update_date": "2021-10-19T08:38:57Z",
    "discussion": [
      {
        "author": "erikmd",
        "date": "2021-10-18T18:19:05Z",
        "comment": "Closing/reopening the PR to restart the CI now that https://github.com/coq/opam-coq-archive/pull/1869 has been merged."
      },
      {
        "author": "erikmd",
        "date": "2021-10-18T19:44:04Z",
        "comment": "FYI @CohenCyril now that's fine for the (coq-8.12, multinomials) job with the Docker build:\r\nhttps://gitlab.com/math-comp/math-comp/-/pipelines/390538250\r\n\r\nBut I'm not sure what happens for the Nix jobs."
      },
      {
        "author": "erikmd",
        "date": "2021-10-18T19:51:58Z",
        "comment": "> But I'm not sure what happens for the Nix jobs.\r\n\r\nIn particular for the coqeal failure… Anyway I guess that's orthogonal to this PR? (which is only an opam-related bugfix PR)"
      },
      {
        "author": "CohenCyril",
        "date": "2021-10-19T08:38:50Z",
        "comment": "> In particular for the coqeal failure… Anyway I guess that's orthogonal to this PR? (which is only an opam-related bugfix PR)\r\n\r\nYes it must be orthogonal in terms of fix, but the problem is related.\r\nThe thing is I do not understand how native vs non-native computation is enabled & propagated..."
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "erikmd",
        "committer": "erikmd",
        "hash": "07a5134e2f180e3a35199447d5bea23feffcdad6",
        "message": "fix: Take advantage of the coq-native package (CEP 048, item 3)\n\n* Follow-up of https://github.com/coq/opam-coq-archive/pull/1835",
        "date": "2021-10-18T10:52:46Z"
      }
    ]
  },
  {
    "author": "affeldt-aist",
    "number": 802,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 7,
        "deletions": 0
      },
      {
        "file": "mathcomp/algebra/ssrnum.v",
        "status": "M",
        "additions": 7,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2021-10-15T12:04:28Z",
    "update_date": "2021-10-15T16:00:22Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "74322228284a30e128926d66528a62358c3f21b2",
        "message": "add normr_nneg lemma",
        "date": "2021-10-15T12:02:53Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 801,
    "diff_summary": [
      {
        "file": "mathcomp/algebra/vector.v",
        "status": "M",
        "additions": 304,
        "deletions": 0
      }
    ],
    "state": "open",
    "open_date": "2021-10-14T09:09:36Z",
    "update_date": "2023-01-11T09:33:34Z",
    "discussion": [
      {
        "author": "thery",
        "date": "2023-01-11T09:33:19Z",
        "comment": "The header with the new functions is missing."
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "14d5634a28a7ead5e0def1bd3e736d9a7db3c712",
        "message": "WIP matrix of a function and base change matrices",
        "date": "2021-10-28T22:59:16Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 800,
    "diff_summary": [
      {
        "file": "mathcomp/field/galois.v",
        "status": "M",
        "additions": 102,
        "deletions": 0
      }
    ],
    "state": "open",
    "open_date": "2021-10-14T09:01:54Z",
    "update_date": "2023-01-11T09:46:08Z",
    "discussion": [
      {
        "author": "proux01",
        "date": "2022-06-15T08:37:04Z",
        "comment": "@CohenCyril should we postpone this or try to move toward merging?"
      },
      {
        "author": "CohenCyril",
        "date": "2022-06-22T09:32:51Z",
        "comment": "This is a WIP, let's postpone."
      },
      {
        "author": "affeldt-aist",
        "date": "2023-01-11T09:46:08Z",
        "comment": "TODO: find where to put this alternative proof in math-comp (gallery?)"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "6bab1190e5a36076ec4c0f1f3c9d0c617ea89e4b",
        "message": "galmx : gal_of -> matrix",
        "date": "2021-10-14T08:59:42Z"
      }
    ]
  },
  {
    "author": "hivert",
    "number": 799,
    "diff_summary": [
      {
        "file": "mathcomp/character/mxrepresentation.v",
        "status": "M",
        "additions": 4,
        "deletions": 6
      },
      {
        "file": "mathcomp/fingroup/action.v",
        "status": "M",
        "additions": 4,
        "deletions": 6
      },
      {
        "file": "mathcomp/fingroup/gproduct.v",
        "status": "M",
        "additions": 4,
        "deletions": 6
      },
      {
        "file": "mathcomp/fingroup/morphism.v",
        "status": "M",
        "additions": 4,
        "deletions": 6
      }
    ],
    "state": "merged",
    "open_date": "2021-10-13T21:51:33Z",
    "update_date": "2021-10-22T16:38:25Z",
    "discussion": [
      {
        "author": "hivert",
        "date": "2021-10-20T20:56:01Z",
        "comment": "I'll take care of https://github.com/math-comp/math-comp/issues/778 too in this PR."
      },
      {
        "author": "hivert",
        "date": "2021-10-22T14:05:52Z",
        "comment": "Finally following @ggonthier, i'd rather keep https://github.com/math-comp/math-comp/issues/778 to another PR. So those few typos can be fixed right now."
      }
    ],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: documentation",
        "description": "Issue or PR about documentation mistakes, deficiencies, enhancements, ..."
      }
    ],
    "commits": [
      {
        "author": "hivert",
        "committer": "hivert",
        "hash": "21489b48c85ad577b310e75a0d1302e00f3cea78",
        "message": "Doc fixes in fingroup",
        "date": "2021-10-13T21:47:24Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 798,
    "diff_summary": [
      {
        "file": ".github/workflows/nix-action-coq-8.11.yml",
        "status": "A",
        "additions": 1914,
        "deletions": 233
      },
      {
        "file": ".github/workflows/nix-action-coq-8.12.yml",
        "status": "A",
        "additions": 1914,
        "deletions": 233
      },
      {
        "file": ".github/workflows/nix-action-coq-8.13.yml",
        "status": "A",
        "additions": 1914,
        "deletions": 233
      },
      {
        "file": ".nix/config.nix",
        "status": "A",
        "additions": 1914,
        "deletions": 233
      },
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "A",
        "additions": 1914,
        "deletions": 233
      },
      {
        "file": "mathcomp/Make.test-suite",
        "status": "A",
        "additions": 1914,
        "deletions": 233
      },
      {
        "file": "mathcomp/algebra/rat.v",
        "status": "A",
        "additions": 1914,
        "deletions": 233
      },
      {
        "file": "mathcomp/test_suite/test_rat.v",
        "status": "A",
        "additions": 1914,
        "deletions": 233
      }
    ],
    "state": "merged",
    "open_date": "2021-10-13T12:01:24Z",
    "update_date": "2021-10-17T16:42:51Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2021-10-13T15:31:42Z",
        "comment": "@thery now it fails because it's too powerful https://github.com/math-comp/math-comp/pull/798/checks?check_run_id=3884025523#step:11:27"
      },
      {
        "author": "thery",
        "date": "2021-10-13T17:04:17Z",
        "comment": "@CohenCyril that was the only problem. Commited [here](https://github.com/coq-community/gaia/commit/4659f7098908d5d7af947f52895c1c086953e0a3) "
      },
      {
        "author": "thery",
        "date": "2021-10-14T12:13:22Z",
        "comment": "@CohenCyril would it be worth to add a test_rat.v in the test_suite to check everything works as planned?"
      },
      {
        "author": "CohenCyril",
        "date": "2021-10-15T12:13:27Z",
        "comment": "> @CohenCyril would it be worth to add a test_rat.v in the test_suite to check everything works as planned?\r\n\r\ndone"
      },
      {
        "author": "thery",
        "date": "2021-10-15T12:29:13Z",
        "comment": "@CohenCyril do we wait for @pi8027's review or we merge?"
      }
    ],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: fix",
        "description": "PR that fixes a bug. Please refer to the appropriate issue(s) if relevant."
      }
    ],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "24b8a5b1c3a5977adce3d671985f5c46d7a4624c",
        "message": "Fixing rat_interlock in gaia",
        "date": "2021-10-14T13:06:22Z"
      }
    ]
  },
  {
    "author": "affeldt-aist",
    "number": 797,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 1,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2021-10-09T01:41:37Z",
    "update_date": "2021-10-10T10:32:12Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: documentation",
        "description": "Issue or PR about documentation mistakes, deficiencies, enhancements, ..."
      }
    ],
    "commits": [
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "8f03f021d6d4b056acb15b5920f85c56f0275cb2",
        "message": "typo",
        "date": "2021-10-09T01:40:56Z"
      }
    ]
  },
  {
    "author": "hivert",
    "number": 796,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 3,
        "deletions": 1
      },
      {
        "file": "mathcomp/ssreflect/finset.v",
        "status": "M",
        "additions": 3,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2021-10-06T11:46:31Z",
    "update_date": "2021-10-25T11:12:09Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2021-10-25T08:46:03Z",
        "comment": "@chdoc we may want to include this in 1.13.0"
      }
    ],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: fix",
        "description": "PR that fixes a bug. Please refer to the appropriate issue(s) if relevant."
      }
    ],
    "commits": [
      {
        "author": "hivert",
        "committer": "CohenCyril",
        "hash": "07426d22931d4071d296bfe38fc69b7ea54280ce",
        "message": "Generalized eq_imset and like to predicate",
        "date": "2021-10-25T08:45:32Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 795,
    "diff_summary": [
      {
        "file": ".nix/coq-nix-toolbox.nix",
        "status": "A",
        "additions": 5,
        "deletions": 42
      },
      {
        "file": ".nix/coq-overlays/multinomials/default.nix",
        "status": "A",
        "additions": 5,
        "deletions": 42
      },
      {
        "file": ".nix/nixpkgs.nix",
        "status": "A",
        "additions": 5,
        "deletions": 42
      }
    ],
    "state": "merged",
    "open_date": "2021-10-05T10:47:20Z",
    "update_date": "2021-10-08T16:56:14Z",
    "discussion": [
      {
        "author": "affeldt-aist",
        "date": "2021-10-06T08:35:22Z",
        "comment": "@CohenCyril should this PR be milestoned 1.13?"
      },
      {
        "author": "CohenCyril",
        "date": "2021-10-07T08:11:09Z",
        "comment": "> @CohenCyril should this PR be milestoned 1.13?\r\n\r\nOf course, actually, nothing can ever get forward before the CI works."
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "4af23e51c8ac44454ade3122c98fd5dc9c23d5a3",
        "message": "updating the toolbox with the last nixpkgs master",
        "date": "2021-10-07T12:24:17Z"
      }
    ]
  },
  {
    "author": "hivert",
    "number": 793,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 170,
        "deletions": 3
      },
      {
        "file": "mathcomp/ssreflect/order.v",
        "status": "M",
        "additions": 170,
        "deletions": 3
      }
    ],
    "state": "merged",
    "open_date": "2021-10-01T20:39:23Z",
    "update_date": "2021-10-22T11:38:09Z",
    "discussion": [
      {
        "author": "hivert",
        "date": "2021-10-01T21:05:14Z",
        "comment": "There something wrong with multinomials but I don't thing it's related to this PR."
      },
      {
        "author": "hivert",
        "date": "2021-10-03T20:29:44Z",
        "comment": "Thanks @proux01 for the careful review !"
      },
      {
        "author": "hivert",
        "date": "2021-10-04T08:30:56Z",
        "comment": "Any confirmation that the failing of multinomials is not due to me ?"
      },
      {
        "author": "proux01",
        "date": "2021-10-04T08:41:04Z",
        "comment": "Indeed it's actually due to multinomials using dune which prompted math-comp/multinomials#45 which requires `/usr/bin/env` that doesn't seem available in nix. That's definitely unrelated."
      },
      {
        "author": "erikmd",
        "date": "2021-10-14T17:11:52Z",
        "comment": "> Indeed it's actually due to multinomials using dune which prompted [math-comp/multinomials#45](https://github.com/math-comp/multinomials/pull/45) which requires `/usr/bin/env` that doesn't seem available in nix. That's definitely unrelated.\r\n\r\n@CohenCyril is there something to do upstream in multinomials to this aim? e.g., replacing `/usr/bin/env bash` in the configure script with `/bin/bash`?"
      },
      {
        "author": "proux01",
        "date": "2021-10-15T09:56:58Z",
        "comment": "> @CohenCyril is there something to do upstream in multinomials to this aim? e.g., replacing `/usr/bin/env bash` in the configure script with `/bin/bash`?\r\n\r\n@erikmd no, that wouldn't help, @CohenCyril fixed the nixpkg package https://github.com/NixOS/nixpkgs/pull/140150 so there is nothing to do, this should now work"
      },
      {
        "author": "CohenCyril",
        "date": "2021-10-15T16:01:38Z",
        "comment": "> @CohenCyril is there something to do upstream in multinomials to this aim? e.g., replacing `/usr/bin/env bash` in the configure script with `/bin/bash`?\r\n\r\nThe failure of multinomials is now on the docker side. I'm ignoring for now."
      },
      {
        "author": "CohenCyril",
        "date": "2021-10-15T22:01:47Z",
        "comment": "> The failure of multinomials is now on the docker side. I'm ignoring for now.\r\n\r\nAh nevermind there is also a failure on the nix side, just for coq 8.12, which I do not understand...\r\nhttps://github.com/math-comp/math-comp/pull/793/checks?check_run_id=3905504301#step:12:22\r\n"
      },
      {
        "author": "erikmd",
        "date": "2021-10-18T20:31:43Z",
        "comment": "> Ah nevermind there is also a failure on the nix side, just for coq 8.12, which I do not understand... https://github.com/math-comp/math-comp/pull/793/checks?check_run_id=3905504301#step:12:22\r\n\r\nHi @CohenCyril, I've just have a look and I don't know either what's the meaning of\r\n```\r\nError: Library \"coq.kernel\" not found.\r\n```\r\nas this seems to be a dune-related error…\r\n\r\nBut I see that two lines above this error, there is:\r\n```\r\ncoq-native support enabled!\r\n```\r\nwhile I believe (IINM) that in the Nix packaging of multinomials, native compilation was expected to be off.\r\n\r\nSo if the error and this flag were related, I believe I have a simple solution that wouldn't require a change in multinomials codebase, just in the Nix packaging of `coq-mathcomp-multinomials.{dev & upcoming releases 1.5.5+}`:\r\n\r\nactually, the only purpose of the 50-line configure script I had proposed in multinomials is [this if-then-else](https://github.com/math-comp/multinomials/blob/348222aeee8ce02f84fc1ceaf1ff4f286cd29db1/configure#L39-L44):\r\n```\r\n    if coq_native_compiler; then\r\n        echo 'coq-native support enabled!' >&2\r\n        sed -e 's/;coq-native-disabled; \\?//' \"$dir/src/dune.in\" > \"$dir/src/dune\"\r\n    else\r\n        cat \"$dir/src/dune.in\" > \"$dir/src/dune\"\r\n    fi\r\n```\r\nAdmittedly, the coq_native_compiler condition is more strict for Coq 8.12.1 (the minimal version of Coq that is compatible with the `(mode native)` of dune ≥ 2.8), because of several reasons (briefly speaking, the 'COQ_NATIVE_COMPILER_DEFAULT=yes' string that can output `coqc -config` cannot be found in Coq <8.13, and we cannot do some opam query to see if the \"coq-native\" package has been installed, precisely given this detection/guess has to be done by the build system layer, agnostic w.r.t. the chosen package manager).\r\n\r\nBut, if you confirm that the Nix packaging need not enabling the `-native-compiler yes` option, a simple solution could be to replace the `./configure` Nix build step with just `cp -f src/dune.in src/dune`\r\n\r\nI'm not Nix-savvy at all, but hopefully this is feasible in https://github.com/CohenCyril/nixpkgs/blob/master/pkgs/development/coq-modules/multinomials/default.nix ? (this way, as I said just now, it wouldn't require another change in multinomials.dev)"
      },
      {
        "author": "CohenCyril",
        "date": "2021-10-19T08:32:15Z",
        "comment": "> while I believe (IINM) that in the Nix packaging of multinomials, native compilation was expected to be off.\r\n\r\nThis I'm not sure, since I do not understand where it comes from... Why would it be expected to be off?"
      },
      {
        "author": "proux01",
        "date": "2021-10-21T11:59:15Z",
        "comment": "> I don't know either what's the meaning of\r\n> \r\n> ```\r\n> Error: Library \"coq.kernel\" not found.\r\n> ```\r\n> \r\n> as this seems to be a dune-related error…\r\n\r\nIf this can shed some light, this happens only when native compilation is enabled, then dune need the OCaml library `coq.kernel` to be able to build the native OCaml code. That doesn't explain why it is not found though.\r\n\r\n> But, if you confirm that the Nix packaging need not enabling the `-native-compiler yes` option, a simple solution could be to replace the `./configure` Nix build step with just `cp -f src/dune.in src/dune`\r\n\r\nI guess native compilation with dune didn't get any serious testing in nix. Meanwhile, I'd rather be in favor of your solution (this configure script being already a workaround for a dune deficiency anyway).\r\n"
      },
      {
        "author": "proux01",
        "date": "2021-10-22T08:12:13Z",
        "comment": "@hivert could you rebase on master, CI should now be fixed (apologies for the inconvenience)"
      },
      {
        "author": "CohenCyril",
        "date": "2021-10-22T08:55:41Z",
        "comment": "> @hivert could you rebase on master, CI should now be fixed (apologies for the inconvenience)\r\n\r\nWait 1h please"
      },
      {
        "author": "hivert",
        "date": "2021-10-22T09:44:58Z",
        "comment": "@CohenCyril I didn't see your message before pushing. I hope I didn't rebase too soon."
      },
      {
        "author": "CohenCyril",
        "date": "2021-10-22T09:46:51Z",
        "comment": "> @CohenCyril I didn't see your message before pushing. I hope I didn't rebase too soon.\r\n\r\nYou did, please rebase again now."
      },
      {
        "author": "hivert",
        "date": "2021-10-22T09:50:42Z",
        "comment": "> You did, please rebase again now.\r\n\r\nDone"
      }
    ],
    "review_discussion": [
      {
        "author": "proux01",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2021-10-03T10:57:48Z",
        "comment": "```suggestion\r\n    `subEsubset`, `complEsubset` to translate generic symbols to the\r\n```"
      },
      {
        "author": "proux01",
        "file": "mathcomp/ssreflect/order.v",
        "date": "2021-10-03T10:58:05Z",
        "comment": "```suggestion\r\n```"
      },
      {
        "author": "proux01",
        "file": "mathcomp/ssreflect/order.v",
        "date": "2021-10-03T10:58:25Z",
        "comment": "```suggestion\r\n```"
      },
      {
        "author": "proux01",
        "file": "mathcomp/ssreflect/order.v",
        "date": "2021-10-03T10:58:41Z",
        "comment": "```suggestion\r\n```"
      },
      {
        "author": "proux01",
        "file": "mathcomp/ssreflect/order.v",
        "date": "2021-10-03T10:58:54Z",
        "comment": "```suggestion\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/order.v",
        "date": "2021-10-04T08:41:19Z",
        "comment": "This setup prevents using `{subset T}` when `T` has type `Type` but is canonically a `finType`. Please mimick the definition in `finset.v` to generalize the notation using a phantom type."
      },
      {
        "author": "hivert",
        "file": "mathcomp/ssreflect/order.v",
        "date": "2021-10-04T10:11:14Z",
        "comment": "This should be done now. I wasn't sure about the notation `{subset T}` so that I forgot to goes all the way to set it up properly. I guess you agree with it since you didn't comment."
      }
    ],
    "tags": [
      {
        "tag": "kind: enhancement",
        "description": "Issue or PR about addition of features."
      }
    ],
    "commits": [
      {
        "author": "hivert",
        "committer": "hivert",
        "hash": "745c30476db5d9982c63a374f8440aed3b54dc8b",
        "message": "Canonical order structures on {set T}",
        "date": "2021-10-22T09:50:03Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 792,
    "diff_summary": [
      {
        "file": "README.md",
        "status": "M",
        "additions": 1,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2021-09-30T14:53:27Z",
    "update_date": "2021-10-04T08:37:18Z",
    "discussion": [],
    "review_discussion": [
      {
        "author": "pi8027",
        "file": "README.md",
        "date": "2021-09-30T14:55:59Z",
        "comment": "I thought this one has also to be replaced with Nix CI."
      },
      {
        "author": "CohenCyril",
        "file": "README.md",
        "date": "2021-10-04T08:34:59Z",
        "comment": "Let's merge this first"
      }
    ],
    "tags": [
      {
        "tag": "kind: documentation",
        "description": "Issue or PR about documentation mistakes, deficiencies, enhancements, ..."
      }
    ],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "93bee1a0ea0c88a900b27b13d506c241f95118df",
        "message": "Replace the Gitter badge with Zulip",
        "date": "2021-09-30T14:52:42Z"
      }
    ]
  },
  {
    "author": "affeldt-aist",
    "number": 791,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 47,
        "deletions": 0
      },
      {
        "file": "mathcomp/algebra/interval.v",
        "status": "M",
        "additions": 47,
        "deletions": 0
      },
      {
        "file": "mathcomp/algebra/ssrnum.v",
        "status": "M",
        "additions": 47,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2021-09-27T00:56:02Z",
    "update_date": "2021-10-08T08:24:46Z",
    "discussion": [
      {
        "author": "thery",
        "date": "2021-10-07T07:49:40Z",
        "comment": "thanks!\r\n"
      }
    ],
    "review_discussion": [
      {
        "author": "thery",
        "file": "mathcomp/algebra/interval.v",
        "date": "2021-09-27T11:07:11Z",
        "comment": "strange name"
      },
      {
        "author": "affeldt-aist",
        "file": "mathcomp/algebra/interval.v",
        "date": "2021-10-01T10:58:17Z",
        "comment": "`interval.v` introduced this convention of using `o` and `c` suffixes to talk about intervals. "
      },
      {
        "author": "proux01",
        "file": "mathcomp/algebra/interval.v",
        "date": "2021-10-06T09:11:41Z",
        "comment": "Shouldn't we also add `oo_oc`, `oo_co`, `oc_cc` and `co_cc`?"
      },
      {
        "author": "thery",
        "file": "mathcomp/algebra/interval.v",
        "date": "2021-10-06T09:33:41Z",
        "comment": "> `interval.v` introduced this convention of using `o` and `c` suffixes to talk about intervals.\r\n\r\ncould this be documented in the header?\r\nwhen reading the name I thought about +oo and -oo :wink:"
      },
      {
        "author": "affeldt-aist",
        "file": "mathcomp/algebra/interval.v",
        "date": "2021-10-07T04:00:17Z",
        "comment": "> Shouldn't we also add `oo_oc`, `oo_co`, `oc_cc` and `co_cc`?\r\n\r\nIndeed. `subset_itv` is a more general lemma that subsumes all the variants but maybe we can keep the variants that are more readable?"
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "7c13ace4a77944c320b3f32036655afd935cfc0b",
        "message": "backport from mathcomp-analysis\n\n- see https://github.com/math-comp/analysis/pull/385\n\nCo-authored-by: Cyril Cohen <cohen@crans.org>\nCo-authored-by: Yves Bertot <yves.bertot@inria.fr>",
        "date": "2021-10-07T04:07:39Z"
      }
    ]
  },
  {
    "author": "JasonGross",
    "number": 790,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 43,
        "deletions": 34
      },
      {
        "file": "mathcomp/ssreflect/fintype.v",
        "status": "M",
        "additions": 43,
        "deletions": 34
      },
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 43,
        "deletions": 34
      }
    ],
    "state": "merged",
    "open_date": "2021-09-26T01:57:06Z",
    "update_date": "2023-04-06T06:23:53Z",
    "discussion": [
      {
        "author": "gares",
        "date": "2021-09-26T06:14:46Z",
        "comment": "Apparently there is a conflict in fintype"
      },
      {
        "author": "JasonGross",
        "date": "2021-09-26T22:45:41Z",
        "comment": "I think I need @herbelin 's help in how to factor notations so that they work:\r\n```coq\r\nRequire Import Coq.Lists.List.\r\nDeclare Scope seq_scope.\r\nOpen Scope seq_scope.\r\nNotation \"[ 'seq' E | i <- s ]\" := (map (fun i => E) s)\r\n  (at level 0, E at level 99, i binder,\r\n   format \"[ '[hv' 'seq'  E '/ '  |  i  <-  s ] ']'\") : seq_scope.\r\nCheck [seq ?[F] i | i <- ?[enum] ?[P] ].\r\nReserved Notation \"[ 'seq' F | x : T ]\"\r\n  (at level 0, F at level 99, x ident,\r\n   format \"'[hv' [ 'seq'  F '/ '  |  x  :  T ] ']'\").\r\nCheck [seq ?[F] i | i <- ?[enum] ?[P] ].\r\n(* Error: Syntax error: ':' expected after [name] (in [term]). *)\r\n```"
      },
      {
        "author": "CohenCyril",
        "date": "2022-01-10T10:21:54Z",
        "comment": "Hi @JasonGross @herbelin any hope to make this PR go forward?"
      },
      {
        "author": "herbelin",
        "date": "2022-01-10T11:45:55Z",
        "comment": "Hi,\r\n\r\nAt first view, supporting `[ 'seq' E | i <- s ]` with `i` a binder would require to change `x` to `binder` also in `[ 'seq' F | x : T ]` but the latter does not seem easy to generalize because the `x : T` has apparently a more complex interpretation than just being a binder, see the `in pred_of_simpl (@pred_of_argType T)` part (what would go wrong actually by replacing this part with `fun x : T => true`, in which case we would get the generalization easily?).\r\n\r\nAssuming that there is no easy way to reformulate `pred_of_simpl (@pred_of_argType T)` under a form referring to `x : T` rather than to only `T`, what could be tried is to only add `[ 'seq' E | ' i <- s ]` with `i` pattern, rather than generalizing `[ 'seq' E | i <- s ]` to `i` binder.\r\n\r\nHoping that it helps.\r\n"
      },
      {
        "author": "herbelin",
        "date": "2022-01-13T08:49:28Z",
        "comment": "@CohenCyril: we would need your help to know if there is a way to reformulate `pred_of_simpl (@pred_of_argType T)` under a form referring to `x : T` rather than to only `T` in notation `[ 'seq' F | x : T ] := [seq F | x : T in pred_of_simpl (@pred_of_argType T)]`."
      },
      {
        "author": "JasonGross",
        "date": "2022-01-13T16:54:07Z",
        "comment": "> reformulate `pred_of_simpl (@pred_of_argType T)` under a form referring to `x : T` rather than to only `T` in notation\r\n\r\n@herbelin What about using the `match` trick for substitution to do `(fun A (a : A) => A) _ (x : T))` in a way that does not leave a beta redex?  (I can code up a solution that does this the next time I'm at a computer; I don't have in my head an accurate model of which zeta-redexs unification will unfold and in what order, when it needs to perform evar unification.)"
      },
      {
        "author": "herbelin",
        "date": "2022-01-13T20:29:39Z",
        "comment": "> @herbelin What about using the `match` trick for substitution to do `(fun A (a : A) => A) _ (x : T))` in a way that does not leave a beta redex? (I can code up a solution that does this the next time I'm at a computer; I don't have in my head an accurate model of which zeta-redexs unification will unfold and in what order, when it needs to perform evar unification.)\r\n\r\nI don't know if that'll work. We need `x : T` to occur in position of binder so that when substituted with something such as `'pat` it continues to make sense,\r\n"
      },
      {
        "author": "JasonGross",
        "date": "2022-01-13T22:52:21Z",
        "comment": "> We need `x : T` to occur in position of binder so that when substituted with something such as `'pat` it continues to make sense,\r\n\r\nWhat about the equivalent of `(fun A (a : A -> True) => A) _ (fun x : T => I)`?"
      },
      {
        "author": "JasonGross",
        "date": "2022-01-13T22:54:55Z",
        "comment": "(Of course the `match` form will never be used for printing, I don't know if that is an issue)"
      },
      {
        "author": "JasonGross",
        "date": "2022-01-14T03:36:41Z",
        "comment": "> What about the equivalent of `(fun A (a : A -> True) => A) _ (fun x : T => I)`?\r\n\r\n```coq\r\nNotation \"'type_of' x\"\r\n  := match _, (fun x => I) with\r\n     | T, f\r\n       => match match f return T -> True with f' => f' end with\r\n          | _ => T\r\n          end\r\n     end\r\n       (x binder, only parsing, at level 20).\r\nCheck type_of x : nat. (* nat *)\r\nCheck type_of '((x, y) : nat * nat). (* (nat * nat)%type *)\r\n```"
      },
      {
        "author": "JasonGross",
        "date": "2022-01-14T03:59:51Z",
        "comment": "Updated PR, seems to be working"
      },
      {
        "author": "JasonGross",
        "date": "2022-01-14T05:22:53Z",
        "comment": "Two issues seem to arise:\r\n1. This change is incompatible with Coq 8.11 and Coq 8.12.  With mathcomp be dropping support for these versions on master anytime soon?\r\n2. multinomials fails with\r\n```\r\nFile \"./src/freeg.v\", line 207, characters 37-38:\r\nError:\r\nIn environment\r\nG : zmodType\r\nK : choiceType\r\ns : seq (G * K)\r\nx : K\r\nThe term \"x\" has type \"Choice.sort K\" while it is expected to have type\r\n \"(?A * ?B)%type\".\r\n```\r\nat https://github.com/math-comp/multinomials/blob/200ef66f7f892814dc7b9254f4f23bc7f59de093/src/freeg.v#L207 which is\r\n```coq\r\nDefinition predom s: seq K := [seq x.2 | x <- s].\r\n```\r\nwith\r\n```coq\r\nVariable G : zmodType.\r\nVariable K : choiceType.\r\nImplicit Types s   : seq (G * K).\r\nImplicit Types x y : K.\r\n```\r\n\r\nThe issue is that Coq now infers `x : K` rather than `x : _ * _`.  There's an easy backwards-compatible fix of changing `x` to `v` on that line; is that acceptable?"
      },
      {
        "author": "CohenCyril",
        "date": "2022-01-14T12:11:40Z",
        "comment": "> 1. This change is incompatible with Coq 8.11 and Coq 8.12.  With mathcomp be dropping support for these versions on master anytime soon?\r\n\r\nCoq 8.11 I think we can do it for the next release, for Coq 8.12 we might have to wait a few more month but eventually yes."
      },
      {
        "author": "JasonGross",
        "date": "2022-01-15T17:56:29Z",
        "comment": "Oops, I closed and reopened to restart the CI, and coqbot removed the 1.15.0 milestone :-("
      },
      {
        "author": "proux01",
        "date": "2022-06-08T07:31:39Z",
        "comment": "@JasonGross mathcomp now requires Coq >= 8.13, does that help here?\r\n"
      },
      {
        "author": "affeldt-aist",
        "date": "2023-01-18T09:54:04Z",
        "comment": "This PR was discussed during the last MathComp meeting (https://github.com/math-comp/math-comp/wiki/Minutes-January-11-2023) and has been considered for merging.\r\n@JasonGross Could you rebase it? Thank you.\r\n\r\n"
      },
      {
        "author": "JasonGross",
        "date": "2023-02-15T03:57:16Z",
        "comment": "Sorry, this fell off my todo list, I'll try to rebase shortly"
      },
      {
        "author": "JasonGross",
        "date": "2023-02-28T21:08:34Z",
        "comment": "I've rebased, but the CI seems extremely unhappy."
      },
      {
        "author": "JasonGross",
        "date": "2023-03-03T01:22:13Z",
        "comment": "And now there is no CI?"
      },
      {
        "author": "JasonGross",
        "date": "2023-03-03T03:28:30Z",
        "comment": "Overlay for monomials: https://github.com/math-comp/multinomials/pull/73"
      },
      {
        "author": "JasonGross",
        "date": "2023-03-03T03:42:39Z",
        "comment": "I'm confused by [the error in odd-order](https://github.com/math-comp/math-comp/actions/runs/4319328583/jobs/7538872530#step:15:559):\r\n[File \"./theories/PFsection3.v\", line 335, characters 17-19](https://github.com/math-comp/odd-order/blob/663e1827836cf0dedebb99f0ab6b232bab9bffd0/theories/PFsection3.v#L335R17-R19):\r\n`Error: Syntax error: ''' or [term level 99] expected after 'seq' (in [term]).`\r\n\r\nI cannot reproduce this locally.  Can anyone else reproduce this?\r\n"
      },
      {
        "author": "JasonGross",
        "date": "2023-04-01T21:30:30Z",
        "comment": "> I'm confused by [the error in odd-order](https://github.com/math-comp/math-comp/actions/runs/4319328583/jobs/7538872530#step:15:559): [File \"./theories/PFsection3.v\", line 335, characters 17-19](https://github.com/math-comp/odd-order/blob/663e1827836cf0dedebb99f0ab6b232bab9bffd0/theories/PFsection3.v#L335R17-R19): `Error: Syntax error: ''' or [term level 99] expected after 'seq' (in [term]).`\r\n> \r\n> I cannot reproduce this locally. Can anyone else reproduce this?\r\n\r\nAh, this only occurs with Coq 8.13.  Is odd-order planning to drop support for Coq 8.13 anytime soon?  (The rest of the ecosystem seems to build fine.)"
      },
      {
        "author": "JasonGross",
        "date": "2023-04-01T21:40:34Z",
        "comment": "Ah, maybe if someone merges https://github.com/math-comp/odd-order/pull/46 then this PR will work (finally) as-is"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "JasonGross",
        "committer": "JasonGross",
        "hash": "b7fdc22c590c0938177c3ebe7a326eb9713ba60b",
        "message": "Add notations for patterns in [seq ... ] notations\n\nThis allows syntax such as\n```coq\nCheck [seq '(x, y) <- List.combine (List.seq 0 5) (List.seq 0 5) | x == y ].\nCheck [seq x + y | '(x, y) <- List.combine (List.seq 5 5) (List.seq 5 5) ].\n```\nto parse and print.",
        "date": "2023-04-01T21:22:45Z"
      },
      {
        "author": "JasonGross",
        "committer": "JasonGross",
        "hash": "2250278f5c76f10b32dc965b64aece25b8e4fd85",
        "message": "Fix fintype",
        "date": "2023-04-01T21:22:45Z"
      }
    ]
  },
  {
    "author": "affeldt-aist",
    "number": 789,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 20,
        "deletions": 4
      },
      {
        "file": "mathcomp/algebra/rat.v",
        "status": "M",
        "additions": 20,
        "deletions": 4
      },
      {
        "file": "mathcomp/algebra/ssralg.v",
        "status": "M",
        "additions": 20,
        "deletions": 4
      },
      {
        "file": "mathcomp/algebra/ssrnum.v",
        "status": "M",
        "additions": 20,
        "deletions": 4
      }
    ],
    "state": "merged",
    "open_date": "2021-09-24T16:05:52Z",
    "update_date": "2021-10-14T12:40:48Z",
    "discussion": [],
    "review_discussion": [
      {
        "author": "thery",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2021-09-25T14:05:39Z",
        "comment": "This subsumes `divq_eq` in `rat.v`. Maybe removing `divq_eq` should be part of this PR. We could also borrow its proof that is  less cryptic \r\n```coq\r\nLemma divr_eq x y z t : y != 0 -> t != 0 -> (x / y == z / t) = (x * t == z * y).\r\nProof.\r\nmove=> x_neq0 y_neq0; rewrite -(inj_eq (@mulIf _ (y * t) _)) ?mulf_neq0 //.\r\nby rewrite mulrA divfK // mulrCA divfK // [z * _ ]mulrC.\r\nQed.\r\n```\r\n"
      },
      {
        "author": "thery",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2021-09-25T14:42:24Z",
        "comment": "Maybe this is better\r\n```coq\r\nLemma sqrtrV x : 0 <= x -> sqrt (x^-1) = (sqrt x)^-1.\r\nProof.\r\ncase: ltrgt0P => // [x_gt0 _|->]; last by rewrite !(invr0, sqrtr0).\r\nhave sx_neq0 : sqrt x != 0 by rewrite sqrtr_eq0 -ltNge.\r\napply: (mulfI sx_neq0).\r\nby rewrite -sqrtrM !(divff, ltW, sqrtr1) // lt0r_neq0.\r\nQed.\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2021-10-05T14:26:03Z",
        "comment": "Shouldn't it actually be `eqr_div`?"
      }
    ],
    "tags": [
      {
        "tag": "kind: enhancement",
        "description": "Issue or PR about addition of features."
      }
    ],
    "commits": [
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "a633140ab0693898bad26ffcb60262ab2b74ffaf",
        "message": "lemmas from mathcomp-analysis\n\nCo-authored-by: Laurent Théry <Laurent.Thery@inria.fr>",
        "date": "2021-10-12T07:36:05Z"
      },
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "d0e4485318b7675c21826e4f9cbea444660a267c",
        "message": "add deprecation warning",
        "date": "2021-10-14T10:44:07Z"
      }
    ]
  },
  {
    "author": "hivert",
    "number": 788,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 16,
        "deletions": 9
      },
      {
        "file": "mathcomp/ssreflect/fingraph.v",
        "status": "M",
        "additions": 16,
        "deletions": 9
      }
    ],
    "state": "merged",
    "open_date": "2021-09-23T21:13:13Z",
    "update_date": "2021-10-23T17:03:33Z",
    "discussion": [
      {
        "author": "hivert",
        "date": "2021-10-14T20:51:52Z",
        "comment": "It seems that the changes in path breaks real closed. I'm reverting them."
      },
      {
        "author": "hivert",
        "date": "2021-10-15T12:53:45Z",
        "comment": "There is still a failure with  coq-8.12 / multinomials. Thinks seems to be fixed for the other versions of Coq."
      },
      {
        "author": "CohenCyril",
        "date": "2021-10-18T08:11:12Z",
        "comment": "> LGTM, although we should probably open an issue to remember investigating why using `[rel x y | e x z]` in path breaks real closed.\r\n\r\nSure but we cannot merge until then."
      },
      {
        "author": "chdoc",
        "date": "2021-10-18T08:44:18Z",
        "comment": "@CohenCyril, The change in `path.v` that breaks real-closed was reverted. The CI failure is due to multinomials and probably unreleated. So I think this can be merged, either as is or using `(fun x y => e y x)` instead of `[rel x y  | e y x]` for consistency. "
      },
      {
        "author": "hivert",
        "date": "2021-10-23T00:26:54Z",
        "comment": "I Just pushed to relaunch the tests."
      }
    ],
    "review_discussion": [
      {
        "author": "proux01",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2021-09-24T12:52:42Z",
        "comment": "```suggestion\r\n- in `fingraph.v`, new lemmas: `connect_rev`, `connect_from_sym`\r\n```"
      },
      {
        "author": "hivert",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2021-09-25T07:47:57Z",
        "comment": "Good catch ! Thanks !"
      },
      {
        "author": "chdoc",
        "file": "mathcomp/ssreflect/fingraph.v",
        "date": "2021-10-13T13:32:49Z",
        "comment": "```suggestion\r\nLemma connect_rev e : connect [rel x y | e y x] =2 [rel x y | connect e y x].\r\nProof.\r\nsuff crev e': subrel (connect [rel x y | e' y x]) [rel x y | connect e' y x].\r\n```\r\nI think this makes for a much more readable statement that is also shorter. Not sure whether there are any deep considerations regarding `[rel x y | ...]` vs `(fun x y => ...)`. "
      },
      {
        "author": "chdoc",
        "file": "mathcomp/ssreflect/fingraph.v",
        "date": "2021-10-13T13:34:24Z",
        "comment": "I'm not exactly trilled by this name. How about something that includes `connect_sym` such as `sym_connect_sym`?"
      },
      {
        "author": "hivert",
        "file": "mathcomp/ssreflect/fingraph.v",
        "date": "2021-10-13T15:40:00Z",
        "comment": "Thanks for your careful rereading !\r\n\r\nI agree with you concerning the readability. However, the `e^~` idiom seems to be the one used throughout the files (see e.g. lemmas  `rev_path`, `rev_cycle`, `rev_sorted` in `path.v`). I wrote the statement this way for consistency. I'm not sure if there is a coding convention here. Maybe the statement of the above lemmas should be fixed. Please tell me."
      },
      {
        "author": "hivert",
        "file": "mathcomp/ssreflect/fingraph.v",
        "date": "2021-10-13T15:44:18Z",
        "comment": "Again, I've no clear idea of what would be a good name and would happily follow any guideline or community vote. Do you this this should be discussed on zulip or somewhere else ?"
      },
      {
        "author": "affeldt-aist",
        "file": "mathcomp/ssreflect/fingraph.v",
        "date": "2021-10-13T15:50:58Z",
        "comment": "There is some information here https://github.com/math-comp/math-comp/blob/master/CONTRIBUTING.md\r\nSee \"Naming conventions for lemmas\". `sym_connect_sym` indeed seems closer to the pattern\r\n`(condition_)?mainSymbol_suffixes`."
      },
      {
        "author": "proux01",
        "file": "mathcomp/ssreflect/fingraph.v",
        "date": "2021-10-13T15:53:03Z",
        "comment": "Maybe `symmetric_connect_sym` to be closer to this pattern? (but I'm bad at names)"
      },
      {
        "author": "hivert",
        "file": "mathcomp/ssreflect/fingraph.v",
        "date": "2021-10-13T16:03:14Z",
        "comment": "If we follow `ssrfun.v` then `sym_connect_sym` seem to be the right name. See eg\r\n```\r\nsym_left_transitive\r\n     : forall (T : Type) (R : rel T),\r\n       symmetric R -> transitive R -> left_transitive R\r\n```"
      },
      {
        "author": "chdoc",
        "file": "mathcomp/ssreflect/fingraph.v",
        "date": "2021-10-13T19:29:03Z",
        "comment": "I don't know whether there is a deeper reason. Maybe @CohenCyril or @gares know, this may date back a while. Note that `same_connect_rev` was already using the IMHO more readable `(fun x y => e y x)`. It may simply be, that all those lemmas predate the `[rel _ _ | _]` notation. "
      },
      {
        "author": "hivert",
        "file": "mathcomp/ssreflect/fingraph.v",
        "date": "2021-10-13T21:50:16Z",
        "comment": "I'm waiting a little if there is some input here and Integrate the fix if nothing happens."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/fingraph.v",
        "date": "2021-10-14T13:36:36Z",
        "comment": "Yes let's use `[rel x y | e y x]` this is much more readable."
      },
      {
        "author": "hivert",
        "file": "mathcomp/ssreflect/fingraph.v",
        "date": "2021-10-14T17:09:39Z",
        "comment": "Done ! I also fixed path consistently."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/fingraph.v",
        "date": "2021-10-15T15:55:59Z",
        "comment": "```suggestion\r\nLemma connect_rev e : connect [rel x y | e y x] =2 [rel x y | connect e y x].\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2021-10-15T15:57:12Z",
        "comment": "```suggestion\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2021-10-15T15:58:07Z",
        "comment": "```suggestion\r\n- in `fingraph.v`, new lemmas: `connect_rev`, `sym_connect_sym`\r\n```"
      }
    ],
    "tags": [
      {
        "tag": "kind: enhancement",
        "description": "Issue or PR about addition of features."
      }
    ],
    "commits": [
      {
        "author": "hivert",
        "committer": "hivert",
        "hash": "fd5fed855959be00e41fd84a7a1e3352f4b5d2a2",
        "message": "connect_rev and symmetry",
        "date": "2021-10-14T17:11:15Z"
      },
      {
        "author": "hivert",
        "committer": "hivert",
        "hash": "95230850a1ac3b98c492d6aeb5aa131760f05661",
        "message": "Undoes (fun z => e^~ z) -> [rel y z | e z y] in path.v",
        "date": "2021-10-15T11:18:35Z"
      },
      {
        "author": "CohenCyril",
        "committer": "web-flow",
        "hash": "ccb8c6aa6ef2ab044511709329b57e8ebb260b1d",
        "message": "Apply suggestions from code review",
        "date": "2021-10-15T15:57:29Z"
      },
      {
        "author": "CohenCyril",
        "committer": "hivert",
        "hash": "7beabf83963e934580a9d08c55b509e7bf931a82",
        "message": "Update CHANGELOG_UNRELEASED.md",
        "date": "2021-10-23T00:19:12Z"
      }
    ]
  },
  {
    "author": "erikmd",
    "number": 786,
    "diff_summary": [
      {
        "file": ".gitlab-ci.yml",
        "status": "M",
        "additions": 60,
        "deletions": 1
      },
      {
        "file": "coq-mathcomp-ssreflect.opam",
        "status": "M",
        "additions": 60,
        "deletions": 1
      }
    ],
    "state": "closed",
    "open_date": "2021-09-22T21:46:02Z",
    "update_date": "2022-06-08T07:33:56Z",
    "discussion": [
      {
        "author": "proux01",
        "date": "2022-06-08T07:33:56Z",
        "comment": "@erikmd I guess we can close this now?"
      }
    ],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: CI",
        "description": "Issue or PR about the CI. (Gitlab CI or CI of dependencies problems linked with math-comp)"
      }
    ],
    "commits": [
      {
        "author": "erikmd",
        "committer": "erikmd",
        "hash": "e04a8b15c50e7bef425a5a9ad1669e38da4624da",
        "message": "feat: Add CI/CD with `coqorg/coq:8.14-rc1`\n\nhref: https://github.com/coq-community/docker-coq/pull/34",
        "date": "2021-09-22T21:42:09Z"
      },
      {
        "author": "erikmd",
        "committer": "erikmd",
        "hash": "ddc15fead21a919f82d648fa872c3277e11e048b",
        "message": "test: Build reverse dependencies as well with Coq 8.14",
        "date": "2021-09-22T21:42:51Z"
      }
    ]
  },
  {
    "author": "erikmd",
    "number": 785,
    "diff_summary": [
      {
        "file": "AUTHORS",
        "status": "A",
        "additions": 1,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2021-09-22T20:52:48Z",
    "update_date": "2021-10-25T09:17:48Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2021-10-25T08:49:37Z",
        "comment": "@chdoc and this (harmless)"
      }
    ],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: fix",
        "description": "PR that fixes a bug. Please refer to the appropriate issue(s) if relevant."
      }
    ],
    "commits": [
      {
        "author": "erikmd",
        "committer": "erikmd",
        "hash": "790ea17f9dacddcaf5ac535017a9ae387602d219",
        "message": "fix: dangling symlinks mathcomp/*/AUTHORS\n\nhref: https://gitlab.com/math-comp/math-comp/-/jobs/1614401855#L293",
        "date": "2021-09-22T20:49:30Z"
      }
    ]
  },
  {
    "author": "erikmd",
    "number": 784,
    "diff_summary": [
      {
        "file": ".gitlab-ci.yml",
        "status": "M",
        "additions": 15,
        "deletions": 1
      },
      {
        "file": "coq-mathcomp-ssreflect.opam",
        "status": "M",
        "additions": 15,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2021-09-22T20:21:26Z",
    "update_date": "2021-09-23T08:14:18Z",
    "discussion": [
      {
        "author": "erikmd",
        "date": "2021-09-22T21:47:07Z",
        "comment": "Given reverse dependencies are not yet ready, splitting this PR in two parts:\r\n\r\n1. this mere commit https://github.com/math-comp/math-comp/pull/784/commits/e04a8b15c50e7bef425a5a9ad1669e38da4624da\r\n\r\n2. and PR https://github.com/math-comp/math-comp/pull/786\r\n\r\n(so that 1. can be merged sooner)"
      },
      {
        "author": "gares",
        "date": "2021-09-23T08:12:58Z",
        "comment": "LGTM, the failure on nix 8.13 + 4CT seems unrelated"
      }
    ],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: CI",
        "description": "Issue or PR about the CI. (Gitlab CI or CI of dependencies problems linked with math-comp)"
      }
    ],
    "commits": [
      {
        "author": "erikmd",
        "committer": "erikmd",
        "hash": "e04a8b15c50e7bef425a5a9ad1669e38da4624da",
        "message": "feat: Add CI/CD with `coqorg/coq:8.14-rc1`\n\nhref: https://github.com/coq-community/docker-coq/pull/34",
        "date": "2021-09-22T21:42:09Z"
      }
    ]
  },
  {
    "author": "hivert",
    "number": 783,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 23,
        "deletions": 10
      },
      {
        "file": "mathcomp/ssreflect/bigop.v",
        "status": "M",
        "additions": 23,
        "deletions": 10
      }
    ],
    "state": "merged",
    "open_date": "2021-09-18T22:18:18Z",
    "update_date": "2021-09-23T08:49:36Z",
    "discussion": [
      {
        "author": "hivert",
        "date": "2021-09-23T19:19:18Z",
        "comment": "One more contribution from me ;-) Glad to help !"
      }
    ],
    "review_discussion": [
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/bigop.v",
        "date": "2021-09-21T08:21:38Z",
        "comment": "```suggestion\r\n```"
      },
      {
        "author": "proux01",
        "file": "mathcomp/ssreflect/bigop.v",
        "date": "2021-09-21T08:48:35Z",
        "comment": "```suggestion\r\n```"
      },
      {
        "author": "proux01",
        "file": "mathcomp/ssreflect/bigop.v",
        "date": "2021-09-21T08:48:57Z",
        "comment": "```suggestion\r\n```"
      },
      {
        "author": "proux01",
        "file": "mathcomp/ssreflect/bigop.v",
        "date": "2021-09-21T08:49:14Z",
        "comment": "```suggestion\r\n```"
      },
      {
        "author": "hivert",
        "file": "mathcomp/ssreflect/bigop.v",
        "date": "2021-09-21T09:24:30Z",
        "comment": "Sorry ! I don't understand how I added those. They should be removed now."
      },
      {
        "author": "proux01",
        "file": "mathcomp/ssreflect/bigop.v",
        "date": "2021-09-21T09:28:02Z",
        "comment": "No worries, this mostly reflect the fact that I had nothing more relevant to point ;-) , as the remaining seems perfectly reasonable to me."
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "hivert",
        "committer": "hivert",
        "hash": "9a57782eb3918aa2b7d54c9df8d45b3aa51150df",
        "message": "Generalized partition_big + big_pmap",
        "date": "2021-09-21T09:23:35Z"
      }
    ]
  },
  {
    "author": "affeldt-aist",
    "number": 782,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 12,
        "deletions": 0
      },
      {
        "file": "mathcomp/ssreflect/bigop.v",
        "status": "M",
        "additions": 12,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2021-09-13T01:18:08Z",
    "update_date": "2021-10-18T12:21:05Z",
    "discussion": [
      {
        "author": "affeldt-aist",
        "date": "2021-09-13T02:46:32Z",
        "comment": "NB: CI fails with mathcomp-abel\r\nNB: no observed anymore on 2021-10-09"
      },
      {
        "author": "CohenCyril",
        "date": "2021-10-08T17:07:13Z",
        "comment": "> NB: CI fails with mathcomp-abel\r\n\r\nI do not see this failure, where is it?"
      },
      {
        "author": "affeldt-aist",
        "date": "2021-10-09T00:36:31Z",
        "comment": "> > NB: CI fails with mathcomp-abel\r\n> \r\n> I do not see this failure, where is it?\r\n\r\nI don't see it anymore. I guess it has disappeared."
      }
    ],
    "review_discussion": [
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/bigop.v",
        "date": "2021-10-05T14:17:08Z",
        "comment": "I'd swap the equality and name it `big_nat_mul`."
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "affeldt-aist",
        "committer": "CohenCyril",
        "hash": "59e6d0d58284ea11d3b7335ba6da221d4a46ce9b",
        "message": "add one lemma to bigop",
        "date": "2021-10-18T09:45:10Z"
      }
    ]
  },
  {
    "author": "hivert",
    "number": 781,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 20,
        "deletions": 0
      },
      {
        "file": "mathcomp/fingroup/perm.v",
        "status": "M",
        "additions": 20,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2021-09-06T09:43:21Z",
    "update_date": "2021-10-19T14:07:11Z",
    "discussion": [
      {
        "author": "hivert",
        "date": "2021-10-18T16:13:36Z",
        "comment": "Thanks Cyril for the re-reading,"
      },
      {
        "author": "chdoc",
        "date": "2021-10-18T16:22:06Z",
        "comment": "So, now we have both multinomials and coqeal failing, but both look completely unrelated :man_shrugging: "
      },
      {
        "author": "hivert",
        "date": "2021-10-18T16:28:29Z",
        "comment": "> So, now we have both multinomials and coqeal failing, but both look completely unrelated man_shrugging\r\n\r\nSorry ! If you feel you need some time working on the infrastructure and leave my series of pull-requests for some time alone, I won't feel offended. Build systems are always a nightmare for me (for whatever language by the way) and I'm glad someone else is taking care of it... By the way, you are likely to get one more pull request from me in a near future, from a discussion with Georges..."
      },
      {
        "author": "proux01",
        "date": "2021-10-19T08:54:53Z",
        "comment": "@CohenCyril the Coqeal failure comes from https://github.com/coq-community/coqeal/pull/52 basically, depending on paramcoq >= 1.1.3 should be enough, do you want me to try to craft a PR on nixpkg ?"
      }
    ],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: enhancement",
        "description": "Issue or PR about addition of features."
      }
    ],
    "commits": [
      {
        "author": "hivert",
        "committer": "hivert",
        "hash": "3e9de15eb552f099e6a653af1a880d71a5ae5975",
        "message": "perm_on and porbit(s) of inverse permutation",
        "date": "2021-10-15T16:19:12Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "fb761ad7a4ec55a55d5ae6c5b64601e22cb842b2",
        "message": "nitpicking",
        "date": "2021-10-18T11:57:54Z"
      }
    ]
  },
  {
    "author": "chdoc",
    "number": 780,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/finset.v",
        "status": "M",
        "additions": 22,
        "deletions": 21
      }
    ],
    "state": "merged",
    "open_date": "2021-09-03T13:14:30Z",
    "update_date": "2021-10-04T08:44:56Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: fix",
        "description": "PR that fixes a bug. Please refer to the appropriate issue(s) if relevant."
      }
    ],
    "commits": [
      {
        "author": "chdoc",
        "committer": "chdoc",
        "hash": "27f7a34866cfd450b8c3af91f4c2e8163c5d7b66",
        "message": "fixup for PR #731",
        "date": "2021-09-03T13:09:54Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "332c95daa863745d22e3cddc942451b37c9992ec",
        "message": "linting",
        "date": "2021-09-20T09:12:47Z"
      }
    ]
  },
  {
    "author": "ed-hermoreyes",
    "number": 779,
    "diff_summary": [],
    "state": "closed",
    "open_date": "2021-09-02T10:13:20Z",
    "update_date": "2022-06-24T15:32:06Z",
    "discussion": [
      {
        "author": "chdoc",
        "date": "2021-09-02T10:23:34Z",
        "comment": "Can you name one or two of the developers you talked to, as they might be good candidates for code reviews?"
      },
      {
        "author": "ed-hermoreyes",
        "date": "2021-09-02T11:47:13Z",
        "comment": "We talked to Cyril Cohen."
      },
      {
        "author": "mgbedmar",
        "date": "2021-09-06T11:48:45Z",
        "comment": "We've made a general cleanup following your guidelines and we believe the code could be ready now. Let us know if you have any other suggestions."
      },
      {
        "author": "mgbedmar",
        "date": "2021-09-08T13:28:52Z",
        "comment": "> Also, please do not merge 'master' into PRs, instead please crate pull requests from branches that you can freely modify (i.e., usually something other than master) and then just rebase onto master, squashing intermediate commits in the process.\r\n\r\nSorry about that. We're not sure of completely understanding the protocol you just described. Can you confirm that the following steps would fix the current PR?\r\n\r\n1. Create another branch `ed-hermoreyes:subchain` with all the commits we've made until now.\r\n2. Re-establish the state of `ed-hermoreyes:master` to be as `math-comp:master`. \r\n3. Modify this PR so that it goes \"into `math-comp:master` from `ed-hermoreyes:subchain`\".\r\n4. Rebase squashing all our commits to `ed-hermoreyes:subchain` into a single one.\r\n5. Do 4 each time we request review.\r\n\r\n"
      },
      {
        "author": "chdoc",
        "date": "2021-09-08T13:44:11Z",
        "comment": "> Sorry about that. We're not sure of completely understanding the protocol you just described. Can you confirm that the following steps would fix the current PR?\r\n\r\nNo problem. I think this looks like a sound process to fix the current PR, although I do not know how to change the \"from\" branch for an existing PR in GitHub. \r\n\r\nTo be on the safe side, it may be a good idea to implement the changes I proposed before rebase squashing everything. Also, it's not necessary to squash for every review cycle, doing this once when things are (almost) stable can make the the review process more understandable. In the meantime, it may be necessary to rebase (without squashing) in order to resolve conflicts and make the CI run.  In any case, I would suggest only pushing commits you actually want to be reviewed, as every push triggers an email to every member of the core team and a lengthy CI pipeline. "
      },
      {
        "author": "chdoc",
        "date": "2021-09-10T13:01:37Z",
        "comment": "As it comes to the lemma statements and proofs,I'm much happier now than I was initally. And we're down from ~560 to ~330 lines. I will try to make another detailed pass over the weekend. \r\n\r\nI'm still not entirely happy about the naming of things. In particular the double use of `prefix` and `suffix` as indicators for patterns as well as the names of definitions. This leads to confusing names like `prefix_prefix` and `suffix_suffix`. Also, unlike `prefix` and `suffix`, the name `subchain` does not speak to me. Is there maybe an alternative name? \r\n\r\n@CohenCyril Do you maybe have some suggestions?"
      },
      {
        "author": "mgbedmar",
        "date": "2021-09-10T14:41:08Z",
        "comment": "I agree with your objections about the names, we simply didn't find anything better. I even remember that Cyril didn't like `subchain` either. If we keep `prefix` and `suffix` for the names of the predicates, then, following grammar conventions, `subchain` could be renamed as `infix`. But then I have no solution for the double use of `prefix` and `suffix`."
      },
      {
        "author": "chdoc",
        "date": "2021-09-10T15:03:29Z",
        "comment": ">  If we keep `prefix` and `suffix` for the names of the predicates, then, following grammar conventions, `subchain` could be renamed as `infix`. \r\n\r\nI won't deny that this idea had already crossed my mind. And, after reading about the grammatical term, I'm actually starting to like it better than `subchain`. :thinking: "
      },
      {
        "author": "chdoc",
        "date": "2021-09-12T18:06:20Z",
        "comment": "I made a pass over the proofs, trying to find some synergies by reordering the lemmas. I hope you're fine with me committing directly to the branch of this PR (another reason why it's preferable to use something other than `master` for the source). I think there are more simplifications to be found. \r\n\r\nI removed `subchain_prefixP`, since the RHS of the disjunction subsumes the LHS. \r\n\r\nI still think that some lemmas can be removed, because they are merely compositions (by transitivity) of other lemmas, even though they are not necessarily proved that way currently. Maybe you can make another pass with this in mind. \r\n\r\n"
      },
      {
        "author": "mgbedmar",
        "date": "2021-09-13T15:03:54Z",
        "comment": "We've been looking at the code. The changes you introduced are nice. Now, to be honest we don't have a clear idea of what the criterion is to decide what lemmas should be kept and which should be removed. The ones that have proofs that are merely compositions of two lemmas are `prefix_subchain` and `suffix_subchain`, but they also exist for `subseq`, so it doesn't feel quite right to remove them. Maybe you can give more concrete directives? Or just remove what you see fit, it's totally okay for you to make changes on the repo."
      },
      {
        "author": "CohenCyril",
        "date": "2021-09-14T09:32:00Z",
        "comment": "> , although I do not know how to change the \"from\" branch for an existing PR in GitHub.\r\n\r\nThe author of the PR might be able to do it using the \"edit\" button next to the title of the PR."
      },
      {
        "author": "chdoc",
        "date": "2021-09-14T10:46:48Z",
        "comment": "On my own PRs, I can only change the target (base) branch but not the source branch. "
      },
      {
        "author": "CohenCyril",
        "date": "2021-10-18T10:51:11Z",
        "comment": "I have several rephrasings to suggest. I will post in the next few days."
      },
      {
        "author": "gares",
        "date": "2021-12-17T12:54:49Z",
        "comment": "> I have several rephrasings to suggest. I will post in the next few days.\r\n\r\nDid you forge to submit the review @CohenCyril ?"
      },
      {
        "author": "chdoc",
        "date": "2022-01-05T16:30:16Z",
        "comment": "@CohenCyril Ping!?"
      },
      {
        "author": "CohenCyril",
        "date": "2022-01-10T10:23:33Z",
        "comment": "@chdoc wrote:\r\n> @CohenCyril Ping!?\r\n\r\n@gares wrote:\r\n> Did you forge to submit the review @CohenCyril ?\r\n\r\nI did a big refactoring in f852b67. It needs some polishing, double-checking and CHANGELOG update.\r\n@ed-hermoreyes @mgbedmar if you are up for it please proceed, otherwise I will do it on my own time, at some point."
      },
      {
        "author": "chdoc",
        "date": "2022-01-10T15:42:12Z",
        "comment": "Thanks for getting back to this @CohenCyril . For now I will wait for the authors to comment or for you to make a cleanup pass. "
      },
      {
        "author": "CohenCyril",
        "date": "2022-03-18T09:17:21Z",
        "comment": "@mgbedmar @ed-hermoreyes any update?"
      },
      {
        "author": "mgbedmar",
        "date": "2022-03-29T09:11:40Z",
        "comment": "We have updated the CHANGELOG and made sure everything was on place. For us this is done, let us know if more changes are needed."
      },
      {
        "author": "proux01",
        "date": "2022-06-08T07:40:41Z",
        "comment": "@chdoc what's the status of this?"
      },
      {
        "author": "proux01",
        "date": "2022-06-15T08:33:28Z",
        "comment": "Will merge next week if no further comments."
      },
      {
        "author": "pi8027",
        "date": "2022-06-15T08:34:52Z",
        "comment": "Shouldn't this PR close #621?"
      },
      {
        "author": "proux01",
        "date": "2022-06-24T15:48:53Z",
        "comment": "Sorry, I messed up with this master branch and can no longer push anything on the original [ed-hermoreyes:master](https://github.com/ed-hermoreyes/math-comp) branch, hence reopen the PR. I'm reopening as https://github.com/math-comp/math-comp/pull/902"
      },
      {
        "author": "proux01",
        "date": "2022-06-25T09:43:31Z",
        "comment": "Merged as #902 , sorry again for the mess."
      }
    ],
    "review_discussion": [
      {
        "author": "chdoc",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2021-09-02T14:03:10Z",
        "comment": "I think it is preferable to use the `if s2 is y::s2' then _ else _` or `if s2 isn't  y::s2' then _ else _` syntax to make these definitions more compact. Likewise for the other definitions. "
      },
      {
        "author": "chdoc",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2021-09-02T14:14:34Z",
        "comment": "```suggestion\r\nLemma prefix_cons s1 s2 x y :\r\n  prefix (x :: s1) (y :: s2) = (x == y) && prefix s1 s2.\r\nProof.\r\n   (* TODO *)\r\nQed.\r\n```"
      },
      {
        "author": "chdoc",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2021-09-02T15:30:25Z",
        "comment": "```suggestion\r\nProof. exact: prefix_refl. Qed.\r\n```"
      },
      {
        "author": "chdoc",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2021-09-02T15:31:40Z",
        "comment": "(analogous to `prefix_cons`)"
      },
      {
        "author": "chdoc",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2021-09-02T15:59:20Z",
        "comment": "```suggestion\r\nelim: s1 s2 => [|y s2 IHs2] [|x s1] /=.\r\n- by constructor; exists [::].\r\n- by constructor; exists (x :: s1). \r\n- by constructor; case.\r\napply/(iffP idP); first by have [-> /IHs2 [s2' ->]|//] := eqVneq x y; exists s2'.\r\nby move => [s2' [<- ->]]; rewrite eqxx prefix_prefix.\r\n```"
      },
      {
        "author": "chdoc",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2021-09-02T16:02:38Z",
        "comment": "```suggestion\r\n  reflect (exists s2' : seq T, s2 = s1 ++ s2')  (prefix s1 s2).\r\n```"
      },
      {
        "author": "chdoc",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2021-09-02T16:09:18Z",
        "comment": "```suggestion\r\nLemma suffixP s1 s2 :\r\n  reflect (exists s2' : seq T, s2 = s2' ++ s1) (suffix s1 s2).\r\nProof.\r\napply: (iffP (prefixP _ _)) => [[s2' rev_s2]|[s2' ->]]; exists (rev s2').\r\n  by rewrite -[s2]revK rev_s2 rev_cat revK.\r\nby rewrite rev_cat.\r\nQed.\r\n```"
      },
      {
        "author": "chdoc",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2021-09-06T12:22:36Z",
        "comment": "```suggestion\r\n  if s2 isn't y :: s2' then s1 == [::] else\r\n  if s1 isn't x :: s1' then true else\r\n    (x == y) && prefix s1' s2'.\r\n```"
      },
      {
        "author": "chdoc",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2021-09-06T12:22:49Z",
        "comment": "```suggestion\r\nDefinition suffix (s1 s2 : seq T) := prefix (rev s1) (rev s2).\r\n```"
      },
      {
        "author": "chdoc",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2021-09-06T12:23:53Z",
        "comment": "```suggestion\r\n  if s2 is y :: s2' then prefix s1 s2 || subchain s1 s2' else s1 == [::].\r\n```"
      },
      {
        "author": "chdoc",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2021-09-06T12:27:11Z",
        "comment": "This lemma corresponds directly to the recursive definition of subchain, so if anything there should be a lemma:\r\n```coq\r\nLemma subchain_cons s1 s2 x : \r\n  subchain s1 (x :: s2) = prefix s1 (x :: s2) || subchain s1 s2.\r\nProof. by []. Qed.\r\n```"
      },
      {
        "author": "chdoc",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2021-09-06T14:17:05Z",
        "comment": "This should follow trivially with subchainP, which can be proved just as simply by not relying on this lemma."
      },
      {
        "author": "chdoc",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2021-09-06T14:18:39Z",
        "comment": "```suggestion\r\nelim: s2 s1 => /= [s1|y s2' IHs2 s1].\r\n- apply: (iffP idP) => [/eqP ->|[s] [s'] E]; first by exists [::], [::].\r\n  have: @nilp T [::] by [].\r\n  by rewrite E !cat_nilp => /and3P[/nilP-> /nilP-> /nilP->].\r\napply: (iffP idP).\r\n- case/orP; first by move/prefixP => -[s ->]; exists [::],s.\r\n  by move/IHs2 => [s [s' ->]]; exists (y::s), s'. \r\nmove => [s [s']]. case: s => //= [|x u]. \r\ncase: s1 => //= ? u [<- ->];by rewrite eqxx prefix_prefix.\r\nby move => [-> E]; rewrite (introT (IHs2 _)) ?orbT // E; exists u, s'.\r\n```"
      },
      {
        "author": "chdoc",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2021-09-06T14:20:57Z",
        "comment": "```suggestion\r\nProof. by rewrite -{2}[s](cat_take_drop i) prefix_prefix. Qed.\r\n```"
      },
      {
        "author": "chdoc",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2021-09-06T20:06:19Z",
        "comment": "```suggestion\r\nProof. by elim: s1 s2 => [[]//|x s IHs s2 /=]; rewrite eqxx IHs.\r\n```"
      },
      {
        "author": "chdoc",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2021-09-06T20:18:46Z",
        "comment": "```suggestion\r\nLemma prefix_singleton s x : \r\n  prefix s [:: x] = (s == [::]) || (s == [:: x]). \r\nProof. by case: s => //= y s; rewrite prefixseq0 eqseq_cons. Qed.\r\n\r\nLemma subchain_singleton s x : \r\n  subchain s [:: x] = (s == [::]) || (s == [:: x]).\r\nProof. by rewrite /= prefix_singleton orbC orbA orbb. Qed.\r\n```"
      },
      {
        "author": "chdoc",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2021-09-06T20:22:55Z",
        "comment": "I think these can be removed, as they are not needed to prove `take_prefix` and `drop_suffix`"
      },
      {
        "author": "chdoc",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2021-09-06T20:57:21Z",
        "comment": "```suggestion\r\nFixpoint subchain_index s1 s2 :=\r\n  if prefix s1 s2 then 0 \r\n  else if s2 is y :: s2' then (subchain_index s1 s2').+1 else 1.\r\n```\r\nI think it is very unfortunate that the result `size s2` can be either the index of the empty subchain or the absence of any valid index. I suggest to change the definition as above, using the unambiguous `(size s2).+1` to signal \"no valid index\". This changes the lemmas slightly, mostly making them simpler (more expressive). For instance: \r\n```coq\r\nLemma subchain_indexseq0 s : subchain_index s [::] = (s != [::]).\r\nProof. by rewrite /= prefixseq0; case (_ == _). Qed.\r\n\r\nLemma subchain_index_ltn s1 s2 : \r\n  subchain s1 s2 = (subchain_index s1 s2 < (size s2).+1).\r\nProof. \r\nelim: s2 s1 => [|x s2' IH /=] s1; first by rewrite /= prefixseq0; case s1.\r\nby case: (prefix _ _); rewrite IH !ltnS.\r\nQed.\r\n```"
      }
    ],
    "tags": [
      {
        "tag": "kind: enhancement",
        "description": "Issue or PR about addition of features."
      }
    ],
    "commits": []
  },
  {
    "author": "hivert",
    "number": 777,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 5,
        "deletions": 0
      },
      {
        "file": "mathcomp/ssreflect/tuple.v",
        "status": "M",
        "additions": 5,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2021-08-26T20:48:54Z",
    "update_date": "2021-09-17T09:30:58Z",
    "discussion": [
      {
        "author": "affeldt-aist",
        "date": "2021-08-27T02:41:04Z",
        "comment": "+1\r\n\r\nWe have been using a variant of this lemma (with a useless generalization) in infotheo so that would help.\r\n\r\nIt can also be proved as follows:\r\n```\r\nLemma tval_tcastE T m n (eq_mn : m = n) (t : m.-tuple T) :\r\n  tcast eq_mn t = t :> seq T.\r\nProof. by subst n; rewrite tcast_id. Qed.\r\n```\r\nNot very ssreflectish..."
      }
    ],
    "review_discussion": [
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/tuple.v",
        "date": "2021-08-30T08:59:02Z",
        "comment": "```suggestion\r\nLemma val_tcast m n (eq_mn : m = n) (t : m.-tuple T) :\r\n```"
      },
      {
        "author": "hivert",
        "file": "mathcomp/ssreflect/tuple.v",
        "date": "2021-08-30T14:35:51Z",
        "comment": "Done the name change"
      }
    ],
    "tags": [
      {
        "tag": "kind: enhancement",
        "description": "Issue or PR about addition of features."
      }
    ],
    "commits": [
      {
        "author": "hivert",
        "committer": "hivert",
        "hash": "ab4fd9b8e333592471f9245c4eb74b82bfb78490",
        "message": "Lemma tval_tcastE",
        "date": "2021-08-30T14:32:48Z"
      }
    ]
  },
  {
    "author": "hivert",
    "number": 776,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 4,
        "deletions": 0
      },
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 4,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2021-08-16T16:52:53Z",
    "update_date": "2021-08-19T11:23:45Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "hivert",
        "committer": "hivert",
        "hash": "af7605bc6da52b19af3b2fbae30e9f9b282a3114",
        "message": "Wrote undup_map_inj lemma",
        "date": "2021-08-16T16:48:51Z"
      }
    ]
  },
  {
    "author": "thery",
    "number": 775,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 11,
        "deletions": 1
      },
      {
        "file": "mathcomp/ssreflect/ssrnat.v",
        "status": "M",
        "additions": 11,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2021-08-13T21:38:32Z",
    "update_date": "2021-09-17T09:31:11Z",
    "discussion": [],
    "review_discussion": [
      {
        "author": "proux01",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2021-08-14T12:34:12Z",
        "comment": "```suggestion\r\n    `uphalf_gt0`.\r\n```"
      },
      {
        "author": "thery",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2021-08-14T15:21:49Z",
        "comment": "thanks"
      }
    ],
    "tags": [
      {
        "tag": "kind: enhancement",
        "description": "Issue or PR about addition of features."
      }
    ],
    "commits": [
      {
        "author": "thery",
        "committer": "thery",
        "hash": "91a0ab83a336b0f101f76582a06b805814bee847",
        "message": "basic properties of uphalf",
        "date": "2021-08-14T15:18:01Z"
      }
    ]
  },
  {
    "author": "ybertot",
    "number": 772,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 10,
        "deletions": 0
      },
      {
        "file": "mathcomp/algebra/ssralg.v",
        "status": "M",
        "additions": 10,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2021-07-26T13:54:22Z",
    "update_date": "2021-10-07T19:07:11Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2021-07-27T09:07:10Z",
        "comment": "Thanks for the PR! Additionally could you try to spot a few places in the current code of mathcomp where it would be beneficial to use these multirules and try them out?"
      },
      {
        "author": "ybertot",
        "date": "2021-07-27T10:46:45Z",
        "comment": "Following up on an oral conversation, we should also add more instances of `linearE` in files where more rules can be added."
      },
      {
        "author": "siraben",
        "date": "2021-07-27T14:59:41Z",
        "comment": "Looks good! I think this would be useful in helping shape the goal into some normal form when dealing with linear functions."
      }
    ],
    "review_discussion": [
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2021-07-27T09:06:15Z",
        "comment": "What about `rmorph1` and `rmorphX`?"
      },
      {
        "author": "gares",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2021-10-06T08:34:22Z",
        "comment": "@ybertot can you push this change? Using the multirule here and there would be also nice, but not necessary for merging this PR strictly speaking. And we would like to merge this PR before the next release, since it is not a breaking change and looks very useful."
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "ybertot",
        "committer": "ybertot",
        "hash": "d83e1a7523a918728bddbb3c2c491e8f6aa7c5bf",
        "message": "add multi-rules raddfE rmorphE and linearE",
        "date": "2021-10-07T08:03:48Z"
      }
    ]
  },
  {
    "author": "eupp",
    "number": 771,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 297,
        "deletions": 6
      },
      {
        "file": "mathcomp/ssreflect/bigop.v",
        "status": "M",
        "additions": 297,
        "deletions": 6
      },
      {
        "file": "mathcomp/ssreflect/fintype.v",
        "status": "M",
        "additions": 297,
        "deletions": 6
      },
      {
        "file": "mathcomp/ssreflect/tuple.v",
        "status": "M",
        "additions": 297,
        "deletions": 6
      }
    ],
    "state": "merged",
    "open_date": "2021-07-23T15:56:50Z",
    "update_date": "2021-10-13T11:43:30Z",
    "discussion": [
      {
        "author": "eupp",
        "date": "2021-08-02T09:28:17Z",
        "comment": "@CohenCyril thank you for the thoughtful review. \r\n\r\nI've added `card_bseq` lemma. The proof of this lemma utilizes injectivity of `bseq_tagged_tuple` and `tagged_tuple_bseq`. \r\nThe proof of infectivity for `tagged_tuple_bseq` is a bit clumsy because of dependent pairs' trickery and might be a subject to simplification. \r\n\r\nRegarding the usefulness of `bseq_of_seq`. I took it from `infotheo`, so it is better to ask @affeldt-aist whether we should keep it. \r\nNevertheless, I've added lemma `size_bseq_of_seq : size (bseq_of_seq n s) <= size s.`\r\n\r\nI've rechecked other lemmas for `n.-tuple T`. It looks like these lemmas are mostly about `thead`, `tnth`, etc. \r\nThese definitions do not have equivalents for `n.-bseq T`, because bounded sequences have weaker guarantees on the length of sequences, in particular, they do not guarantee non-emptiness.\r\n\r\nI've also updated the docs and changelog. \r\n"
      }
    ],
    "review_discussion": [
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/tuple.v",
        "date": "2021-07-27T09:02:25Z",
        "comment": "The canonical declaration subsumes the previous lemma:\r\n```coq\r\nCanonical bseq_subType := Eval hnf in [subType for bseqval].\r\n\r\nLemma bseqval_inj : injective bseqval. Proof. exact: val_inj. Qed.\r\n```\r\n\r\nSo one can simply omit it.\r\n"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/tuple.v",
        "date": "2021-07-27T09:35:04Z",
        "comment": "```suggestion\r\napply/leq_trans; last exact/(size_bseq bs).\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/tuple.v",
        "date": "2021-07-27T13:29:54Z",
        "comment": "```suggestion\r\nDefinition bseq_of_seq n T (s : seq T) : n.-bseq T := insubd [bseq] s.\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/tuple.v",
        "date": "2021-07-27T13:32:50Z",
        "comment": "This can be replaced by an encoding to tagged tuples:\r\n```suggestion\r\nDefinition bseq_tagged_tuple {n T} (s : n.-bseq T) : {k : 'I_n.+1 & k.-tuple T} :=\r\n  Tagged _ (in_tuple s : (Ordinal (size_bseq s : size s < n.+1)).-tuple _).\r\n\r\nDefinition tagged_tuple_bseq {n T} (t : {k : 'I_n.+1 & k.-tuple T}) : n.-bseq T :=\r\n  widen_bseq (leq_ord (tag t)) (tagged t).\r\n  \r\nLemma bseq_tagged_tupleK n T : cancel (@bseq_tagged_tuple n T) tagged_tuple_bseq.\r\nProof. by move=> t; apply/val_inj. Qed.\r\n\r\nDefinition bseq_finMixin n (T : finType) :=\r\n  CanFinMixin (@bseq_tagged_tupleK n T).\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/tuple.v",
        "date": "2021-07-27T13:42:33Z",
        "comment": "Add some theory of `widen_bseq`:\r\n```suggestion\r\n\r\nDefinition widen_bseq m n T (lemn : m <= n) (bs : m.-bseq T) : n.-bseq T := \r\n  @Bseq n T bs (leq_trans (size_bseq bs) lemn).\r\n\r\nLemma widen_bseq_id n T (lenn : n <= n) (t : n.-bseq T) : widen_bseq lenn t = t.\r\nProof. exact: val_inj. Qed.\r\n\r\nLemma widen_bseqK m n T (lemn : m <= n) (lenm : n <= m) :\r\n   cancel (@widen_bseq m n T lemn) (widen_bseq lenm).\r\nProof. by move=> t; apply: val_inj. Qed.\r\n\r\nLemma widen_bseq_trans m n p T (lemn : m <= n) (lenp : n <= p) (t : m.-bseq T) :\r\n  widen_bseq (leq_trans lemn lenp) t = widen_bseq lenp (widen_bseq lemn t).\r\nProof. exact/val_inj. Qed.\r\n\r\nDefinition in_bseq T (s : seq T) : (size s).-bseq T := Bseq (leqnn (size s)).\r\n\r\nLemma in_nseqE T s : in_bseq s = s :> seq T. Proof. by []. Qed.\r\n\r\nLemma widen_bseq_in_bseq n T (t : n.-bseq T) :\r\n  widen_bseq (size_bseq t) (in_bseq t) = t.\r\nProof. exact: val_inj. Qed.\r\n```\r\n"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/tuple.v",
        "date": "2021-07-27T13:50:26Z",
        "comment": "Not sure how useful this is though. If there is no lemmas / theorems about it, maybe it should just be removed."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/tuple.v",
        "date": "2021-08-30T09:32:41Z",
        "comment": "I think it's healthy to distinguish between sequences and bounded sequences through the variable name."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/tuple.v",
        "date": "2021-08-30T09:33:17Z",
        "comment": "Why are you suggesting to use `Arguments` rather than `{}` inside the definition? "
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/tuple.v",
        "date": "2021-08-30T09:34:02Z",
        "comment": "I am reluctant using `destruct`, I have an even shorter proof using refine that I will push soon."
      },
      {
        "author": "affeldt-aist",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2021-08-30T09:36:22Z",
        "comment": "isn't it the \"do not edit former entries\" recommendation?"
      },
      {
        "author": "affeldt-aist",
        "file": "mathcomp/ssreflect/tuple.v",
        "date": "2021-08-30T09:38:32Z",
        "comment": "so do I, but the shorter identifier in this section helps preserving the 80 characters limit"
      },
      {
        "author": "affeldt-aist",
        "file": "mathcomp/ssreflect/tuple.v",
        "date": "2021-08-30T09:38:52Z",
        "comment": "this was also for the 80 characters limit"
      },
      {
        "author": "CohenCyril",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2021-08-30T10:31:53Z",
        "comment": "Yes, ok"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/tuple.v",
        "date": "2021-08-30T10:33:07Z",
        "comment": "Ah, ok, maybe we can pick a single letter which is not `s`, though... like `w` for example? ~~BTW, I am wondering if a good name for `bseq` could be `word`...~~ nop... sorry a word is fixed size not bounded size..."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/tuple.v",
        "date": "2021-08-31T09:27:01Z",
        "comment": "I find it interesting that unification with a trivial match on `k_eq` is smarter than `case: _ / k_eq`. The failure of the latter looks legit to me since the occurrence selection is non trivial. The fact that `destruct k_eq` works surprises me though... @gares If you have any insight on this, I'd like to know. Also I was wondering were we were wrt the automatic selection of unifiable occurences of an index, is it implemented for `destruct` and that would be why it works (or is it just an accident)?"
      },
      {
        "author": "gares",
        "file": "mathcomp/ssreflect/tuple.v",
        "date": "2021-10-06T08:16:54Z",
        "comment": "It is not an accident. I guess it is wired into type inference and not the tactic."
      }
    ],
    "tags": [
      {
        "tag": "kind: enhancement",
        "description": "Issue or PR about addition of features."
      }
    ],
    "commits": [
      {
        "author": "eupp",
        "committer": "CohenCyril",
        "hash": "0b476ebe3a173da0d4cb948ad6480db09535cd42",
        "message": "bounded sequences",
        "date": "2021-10-10T10:21:18Z"
      },
      {
        "author": "eupp",
        "committer": "CohenCyril",
        "hash": "0bc2b5ab9ee321989101a4cf6ca5f05674d31676",
        "message": "apply suggestions from code review\n\nCo-authored-by: Cyril Cohen <CohenCyril@users.noreply.github.com>",
        "date": "2021-10-10T10:21:18Z"
      },
      {
        "author": "eupp",
        "committer": "CohenCyril",
        "hash": "fe3e1b74e82bc9df4604385e60e6872815539369",
        "message": "more lemmas about bseq, update doc and changelog\n\n- card_bseq lemma\n- remove bseqval_inj",
        "date": "2021-10-10T10:21:18Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "3d32b849e985d6a3fb24583471ec959fcc193a08",
        "message": "namechange + typo + changelog\n\n- bseq_of_seq becomes insub_bseq\n- expanded changelog entry\n- fixing typo in_nseqE -> in_bseqE\n- nitpicking",
        "date": "2021-10-10T10:21:18Z"
      },
      {
        "author": "affeldt-aist",
        "committer": "CohenCyril",
        "hash": "c9ea737825fe9026d3acf6ac5678771bd4f30a34",
        "message": "nitpicking",
        "date": "2021-10-10T10:21:18Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "d8da21c4a1b7d89e66ae0fe54e46fad022f5a2e7",
        "message": "shorter proof of `tagged_tuple_bseqK`",
        "date": "2021-10-10T10:21:18Z"
      }
    ]
  },
  {
    "author": "gares",
    "number": 770,
    "diff_summary": [
      {
        "file": ".gitignore",
        "status": "M",
        "additions": 167,
        "deletions": 278
      },
      {
        "file": ".nix/config.nix",
        "status": "M",
        "additions": 167,
        "deletions": 278
      },
      {
        "file": "mathcomp/algebra/countalg.v",
        "status": "M",
        "additions": 167,
        "deletions": 278
      },
      {
        "file": "mathcomp/algebra/finalg.v",
        "status": "M",
        "additions": 167,
        "deletions": 278
      },
      {
        "file": "mathcomp/algebra/matrix.v",
        "status": "M",
        "additions": 167,
        "deletions": 278
      },
      {
        "file": "mathcomp/algebra/mxalgebra.v",
        "status": "M",
        "additions": 167,
        "deletions": 278
      },
      {
        "file": "mathcomp/algebra/mxpoly.v",
        "status": "M",
        "additions": 167,
        "deletions": 278
      },
      {
        "file": "mathcomp/algebra/rat.v",
        "status": "M",
        "additions": 167,
        "deletions": 278
      },
      {
        "file": "mathcomp/algebra/ring_quotient.v",
        "status": "M",
        "additions": 167,
        "deletions": 278
      },
      {
        "file": "mathcomp/algebra/ssralg.v",
        "status": "M",
        "additions": 167,
        "deletions": 278
      },
      {
        "file": "mathcomp/algebra/ssrnum.v",
        "status": "M",
        "additions": 167,
        "deletions": 278
      },
      {
        "file": "mathcomp/algebra/vector.v",
        "status": "M",
        "additions": 167,
        "deletions": 278
      },
      {
        "file": "mathcomp/character/character.v",
        "status": "M",
        "additions": 167,
        "deletions": 278
      },
      {
        "file": "mathcomp/character/inertia.v",
        "status": "M",
        "additions": 167,
        "deletions": 278
      },
      {
        "file": "mathcomp/character/integral_char.v",
        "status": "M",
        "additions": 167,
        "deletions": 278
      },
      {
        "file": "mathcomp/character/mxrepresentation.v",
        "status": "M",
        "additions": 167,
        "deletions": 278
      },
      {
        "file": "mathcomp/field/algebraics_fundamentals.v",
        "status": "M",
        "additions": 167,
        "deletions": 278
      },
      {
        "file": "mathcomp/field/closed_field.v",
        "status": "M",
        "additions": 167,
        "deletions": 278
      },
      {
        "file": "mathcomp/field/falgebra.v",
        "status": "M",
        "additions": 167,
        "deletions": 278
      },
      {
        "file": "mathcomp/field/fieldext.v",
        "status": "M",
        "additions": 167,
        "deletions": 278
      },
      {
        "file": "mathcomp/field/finfield.v",
        "status": "M",
        "additions": 167,
        "deletions": 278
      },
      {
        "file": "mathcomp/field/galois.v",
        "status": "M",
        "additions": 167,
        "deletions": 278
      },
      {
        "file": "mathcomp/fingroup/fingroup.v",
        "status": "M",
        "additions": 167,
        "deletions": 278
      },
      {
        "file": "mathcomp/solvable/cyclic.v",
        "status": "M",
        "additions": 167,
        "deletions": 278
      },
      {
        "file": "mathcomp/solvable/extraspecial.v",
        "status": "M",
        "additions": 167,
        "deletions": 278
      },
      {
        "file": "mathcomp/solvable/hall.v",
        "status": "M",
        "additions": 167,
        "deletions": 278
      },
      {
        "file": "mathcomp/ssreflect/choice.v",
        "status": "M",
        "additions": 167,
        "deletions": 278
      },
      {
        "file": "mathcomp/ssreflect/eqtype.v",
        "status": "M",
        "additions": 167,
        "deletions": 278
      },
      {
        "file": "mathcomp/ssreflect/fintype.v",
        "status": "M",
        "additions": 167,
        "deletions": 278
      },
      {
        "file": "mathcomp/ssreflect/generic_quotient.v",
        "status": "M",
        "additions": 167,
        "deletions": 278
      },
      {
        "file": "mathcomp/ssreflect/order.v",
        "status": "M",
        "additions": 167,
        "deletions": 278
      },
      {
        "file": "mathcomp/ssreflect/ssrnat.v",
        "status": "M",
        "additions": 167,
        "deletions": 278
      }
    ],
    "state": "merged",
    "open_date": "2021-07-21T15:06:28Z",
    "update_date": "2021-07-22T16:50:27Z",
    "discussion": [],
    "review_discussion": [
      {
        "author": "CohenCyril",
        "file": ".nix/config.nix",
        "date": "2021-07-22T07:59:48Z",
        "comment": "`elpi` is \"manually\" overriden in the `coq-elpi` derivation, do the override in `.nix/coq-overlays/coq-elpi/default.nix`"
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "gares",
        "committer": "gares",
        "hash": "7bfd34bd3dda539f5846eebeeeb37ce118d8d47f",
        "message": "nix",
        "date": "2021-07-22T10:25:18Z"
      },
      {
        "author": "gares",
        "committer": "gares",
        "hash": "7528751517f5efa7917535374f80aed60e94c74f",
        "message": "cleanup",
        "date": "2021-07-22T10:25:18Z"
      },
      {
        "author": "gares",
        "committer": "gares",
        "hash": "31c00ad08e0840fee6dfa1ef2a4fda08af5a5657",
        "message": "switch to HB.pack",
        "date": "2021-07-22T10:25:18Z"
      },
      {
        "author": "gares",
        "committer": "gares",
        "hash": "375fa553be9a571e05d9e86a7a44ecd489f8e109",
        "message": "ignore timing files",
        "date": "2021-07-22T12:56:47Z"
      },
      {
        "author": "gares",
        "committer": "gares",
        "hash": "67f99f2280644644b3a88dc868832992018ff62f",
        "message": "fix planB",
        "date": "2021-07-22T12:57:06Z"
      },
      {
        "author": "gares",
        "committer": "gares",
        "hash": "470fe70d5de639234195734274c4fb364a74a4d6",
        "message": "lock mxrank",
        "date": "2021-07-22T12:57:19Z"
      },
      {
        "author": "gares",
        "committer": "gares",
        "hash": "babf1e445d5e779895fec67ffb1a2dffa136548a",
        "message": "optim",
        "date": "2021-07-22T14:41:24Z"
      },
      {
        "author": "gares",
        "committer": "gares",
        "hash": "7dd5f1576aa05b9ae297bbb3adc749582570808d",
        "message": "localize the need for unsetting term sharing",
        "date": "2021-07-22T14:41:39Z"
      },
      {
        "author": "gares",
        "committer": "gares",
        "hash": "7dbd546f53af37f207e1cb5b8a2b3d98d3e76f60",
        "message": "aestetic change",
        "date": "2021-07-22T15:20:47Z"
      },
      {
        "author": "gares",
        "committer": "gares",
        "hash": "c33ebb90cc8478ce3d8aaa0ab6ca78e0bdcb4ea3",
        "message": "cleanup/speedup mxrepresentation",
        "date": "2021-07-22T16:48:32Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 769,
    "diff_summary": [
      {
        "file": "AUTHORS",
        "status": "A",
        "additions": 19,
        "deletions": 15
      },
      {
        "file": "INITIAL_AUTHORS.md",
        "status": "A",
        "additions": 19,
        "deletions": 15
      }
    ],
    "state": "merged",
    "open_date": "2021-07-07T09:25:37Z",
    "update_date": "2021-07-07T15:01:46Z",
    "discussion": [
      {
        "author": "gares",
        "date": "2021-07-07T10:41:39Z",
        "comment": "I wonder of you can add a link to https://github.com/math-comp/mathcomp-history-before-github"
      },
      {
        "author": "CohenCyril",
        "date": "2021-07-07T10:45:07Z",
        "comment": "> I wonder of you can add a link to https://github.com/math-comp/mathcomp-history-before-github\r\n\r\nWhy not, but how do you want to introduce it?"
      }
    ],
    "review_discussion": [
      {
        "author": "gares",
        "file": "INITIAL_AUTHORS.md",
        "date": "2021-07-07T10:02:21Z",
        "comment": "wrong link?"
      },
      {
        "author": "CohenCyril",
        "file": "INITIAL_AUTHORS.md",
        "date": "2021-07-07T10:27:25Z",
        "comment": "```suggestion\r\nthe [CHANGELOG.md](https://github.com/math-comp/math-comp/blob/master/CHANGELOG.md)\r\n```"
      },
      {
        "author": "gares",
        "file": "INITIAL_AUTHORS.md",
        "date": "2021-07-07T10:59:49Z",
        "comment": "```suggestion\r\nHere are the initial authors of this library which contributed to its development before the project moved to Github (the version control [history before github](https://github.com/math-comp/mathcomp-history-before-github) can still be accessed). Recent contributors can be found in\r\n```"
      }
    ],
    "tags": [
      {
        "tag": "kind: documentation",
        "description": "Issue or PR about documentation mistakes, deficiencies, enhancements, ..."
      }
    ],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "web-flow",
        "hash": "ed6df0ab53fc4d26cafb68eaf065c7f004d5ba52",
        "message": "Update and rename AUTHORS to INITIAL_AUTHORS.md",
        "date": "2021-07-07T09:25:11Z"
      },
      {
        "author": "CohenCyril",
        "committer": "web-flow",
        "hash": "7fd4dcca28cd94b686f81a3e326209c1d055a5d4",
        "message": "Update INITIAL_AUTHORS.md",
        "date": "2021-07-07T10:27:29Z"
      },
      {
        "author": "CohenCyril",
        "committer": "web-flow",
        "hash": "a764391baba575c201d9ceb0c9c95240c4788f5e",
        "message": "Update INITIAL_AUTHORS.md\n\nCo-authored-by: Enrico Tassi <Enrico.Tassi@inria.fr>",
        "date": "2021-07-07T12:32:12Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 768,
    "diff_summary": [
      {
        "file": "CHANGELOG.md",
        "status": "M",
        "additions": 29,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2021-07-07T09:23:06Z",
    "update_date": "2021-07-07T10:40:45Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: documentation",
        "description": "Issue or PR about documentation mistakes, deficiencies, enhancements, ..."
      }
    ],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "web-flow",
        "hash": "265dbb328d85ab3ef0f288e1dc2e070d67b683db",
        "message": "Update CHANGELOG.md",
        "date": "2021-07-07T09:22:17Z"
      }
    ]
  },
  {
    "author": "proux01",
    "number": 767,
    "diff_summary": [
      {
        "file": "mathcomp/algebra/rat.v",
        "status": "M",
        "additions": 3,
        "deletions": 3
      }
    ],
    "state": "merged",
    "open_date": "2021-07-07T08:00:47Z",
    "update_date": "2021-08-03T11:30:47Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "14214781baa08e734e2081947c23389cb1ebe886",
        "message": "Typos in doc of rat",
        "date": "2021-07-07T07:59:25Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 766,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 114,
        "deletions": 66
      },
      {
        "file": "mathcomp/algebra/rat.v",
        "status": "M",
        "additions": 114,
        "deletions": 66
      }
    ],
    "state": "merged",
    "open_date": "2021-07-07T07:23:17Z",
    "update_date": "2021-10-10T10:19:52Z",
    "discussion": [
      {
        "author": "proux01",
        "date": "2021-07-08T18:06:23Z",
        "comment": "@CohenCyril CoqEAL should be fixed"
      },
      {
        "author": "CohenCyril",
        "date": "2021-08-03T11:22:44Z",
        "comment": "@pi8027 if you have some time to review this?"
      },
      {
        "author": "pi8027",
        "date": "2021-08-04T12:51:35Z",
        "comment": "Yes, I will do that by the end of this week."
      },
      {
        "author": "CohenCyril",
        "date": "2021-10-01T11:55:28Z",
        "comment": "@vbgl / @maximedenes / @zimmi48 please help, I'm completely clueless about this CI failure...\r\nTo reproduce:\r\n```bash\r\ncd $(mktemp -d)\r\ngit clone https://github.com/math-comp/multinomials -b nix-toolbox && cd multinomials\r\nnix-build\r\n```\r\nNote that `note nix-shell --run \"./configure && make\"` works :confused: "
      },
      {
        "author": "vbgl",
        "date": "2021-10-01T12:08:05Z",
        "comment": "The multinomials package is broken: the new `configure` script (recently added by Erik) refers to `/usr/bin/env` that is not available in the CI environment.\r\n\r\nBelow is a possible patch. (You may also set `dontConfigure = true;` to skip the failing configuration phase.)\r\n\r\n~~~\r\ndiff --git a/.nix/coq-overlays/multinomials/default.nix b/.nix/coq-overlays/multinomials/default.nix\r\nindex 1c62b70..64b4945 100644\r\n--- a/.nix/coq-overlays/multinomials/default.nix\r\n+++ b/.nix/coq-overlays/multinomials/default.nix\r\n@@ -33,6 +33,10 @@ with lib; mkCoqDerivation {\r\n \r\n   useDune2ifVersion = v: versions.isGe \"1.5.3\" v || v == \"dev\";\r\n \r\n+  preConfigure = ''\r\n+    patchShebangs configure\r\n+  '';\r\n+\r\n   propagatedBuildInputs =\r\n     [ mathcomp.ssreflect mathcomp.algebra mathcomp-finmap mathcomp-bigenough ];\r\n \r\n~~~"
      }
    ],
    "review_discussion": [
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/rat.v",
        "date": "2021-09-03T13:30:17Z",
        "comment": "It would be nice to have a comment that briefly explains \"interlocking\". I also wish to have an example showing the necessity of the second case `Posz 1 as d, _ as n`."
      },
      {
        "author": "proux01",
        "file": "mathcomp/algebra/rat.v",
        "date": "2021-09-30T07:37:41Z",
        "comment": "```suggestion\r\n(* when applied to explicit rationals. Since fracq is also \"locked\" in a      *)\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/rat.v",
        "date": "2021-09-30T09:45:21Z",
        "comment": "> It would be nice to have a comment that briefly explains \"interlocking\".\r\n\r\ndone\r\n\r\n>  I also wish to have an example showing the necessity of the second case Posz 1 as d, _ as n.\r\n\r\nI think that was a mistake :)"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/rat.v",
        "date": "2021-09-30T10:33:13Z",
        "comment": "CHANGELOG entries would be required for this kind of lemmas."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/rat.v",
        "date": "2021-10-01T11:51:51Z",
        "comment": "It's intended to be \"internal\", but there is still no good way to tell it to Coq."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/rat.v",
        "date": "2021-10-01T12:04:29Z",
        "comment": "Sure."
      }
    ],
    "tags": [
      {
        "tag": "kind: fix",
        "description": "PR that fixes a bug. Please refer to the appropriate issue(s) if relevant."
      }
    ],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "643cb5743de89bf4c9c5254a54037829d4737517",
        "message": "Locking operators in rat.v",
        "date": "2021-10-08T17:00:53Z"
      }
    ]
  },
  {
    "author": "SkySkimmer",
    "number": 765,
    "diff_summary": [
      {
        "file": "mathcomp/fingroup/fingroup.v",
        "status": "M",
        "additions": 1,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2021-07-05T10:01:10Z",
    "update_date": "2021-07-05T12:56:41Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: clean-up",
        "description": "This issure/PR is about cleaning up obsolete code, removing hacks, etc"
      }
    ],
    "commits": [
      {
        "author": "SkySkimmer",
        "committer": "SkySkimmer",
        "hash": "487b5c6f9fcd8a5fb7e4e1de92656000d13b041f",
        "message": "Don't rename argument of section variable\n\nThe rename is unreliable in current Coq (see coq/coq#14498) and may be\nforbidden soon (see coq/coq#14573).\n\nPractically mathcomp only renames arguments for 1 variable and the\nrename is not actually used (see diff).",
        "date": "2021-07-05T09:57:21Z"
      }
    ]
  },
  {
    "author": "SkySkimmer",
    "number": 764,
    "diff_summary": [
      {
        "file": ".gitignore",
        "status": "M",
        "additions": 1,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2021-07-05T10:00:45Z",
    "update_date": "2021-07-09T15:36:24Z",
    "discussion": [],
    "review_discussion": [
      {
        "author": "pi8027",
        "file": ".gitignore",
        "date": "2021-07-07T09:25:10Z",
        "comment": "```suggestion\r\n```"
      }
    ],
    "tags": [
      {
        "tag": "kind: fix",
        "description": "PR that fixes a bug. Please refer to the appropriate issue(s) if relevant."
      }
    ],
    "commits": [
      {
        "author": "SkySkimmer",
        "committer": "SkySkimmer",
        "hash": "bf63494ef569ba967c68f027b81a2495948d8925",
        "message": "gitignore mathcomp/test_suite/test_hierarchy_all.v",
        "date": "2021-07-05T10:00:14Z"
      },
      {
        "author": "SkySkimmer",
        "committer": "web-flow",
        "hash": "298257ba15051a5ea3eaadcdb893b7a7e0461274",
        "message": "gitignore - mathcomp/test_suite/hierarchy_test.v\r\n\r\n(not generated anymore)\n\nCo-authored-by: Kazuhiko Sakaguchi <pi8027@gmail.com>",
        "date": "2021-07-07T09:27:31Z"
      }
    ]
  },
  {
    "author": "hivert",
    "number": 763,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 95,
        "deletions": 0
      },
      {
        "file": "mathcomp/ssreflect/order.v",
        "status": "M",
        "additions": 95,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2021-07-05T08:41:11Z",
    "update_date": "2021-08-03T11:26:37Z",
    "discussion": [],
    "review_discussion": [
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/order.v",
        "date": "2021-07-08T07:56:55Z",
        "comment": "Great contribution.\r\nPlease do not use `Program`"
      },
      {
        "author": "strub",
        "file": "mathcomp/ssreflect/order.v",
        "date": "2021-07-08T10:27:19Z",
        "comment": "> Please do not use `Program`\r\n\r\nMay I ask why? (This is a genuine question, as i find useful to use `Program` in that particular case)"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/order.v",
        "date": "2021-07-08T10:46:32Z",
        "comment": "Sure, there is a tactic which is automatically used after `Next Obligation` which introduces some variables in the context with an automatic name, independently of the variables before the`:` in the statement. This is unstable.\r\nOne can also write `Obligation Tactic := idtac.` but then, no introduction at all, even for the variables before `:` in the statement, which you must then reintroduce for every single obligation."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/order.v",
        "date": "2021-07-08T10:48:13Z",
        "comment": "Also `Program Definition` may fill some obligations automatically (I do not know whether this is dependent or not on the `Obligation Tactic`) and I think it could use an axiom doing so..."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/order.v",
        "date": "2021-07-08T10:48:53Z",
        "comment": "I would love a deterministic alternative to `Program`, but never took the time to complain (I try to focus my complaining on other things :laughing: )"
      },
      {
        "author": "hivert",
        "file": "mathcomp/ssreflect/order.v",
        "date": "2021-07-08T19:26:48Z",
        "comment": "If you haven't see, I put a not about that in the Contributing section of the wiki. I was not exactly sure where to put it though."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/order.v",
        "date": "2021-08-03T11:26:15Z",
        "comment": "@hivert yes the contributing section is the right place. I do not see your note however..."
      }
    ],
    "tags": [
      {
        "tag": "kind: enhancement",
        "description": "Issue or PR about addition of features."
      }
    ],
    "commits": [
      {
        "author": "hivert",
        "committer": "hivert",
        "hash": "f1622d8c6b211d44ca81240a302e9a88b70b593a",
        "message": "meetJoinLeMixin to construct latticeType",
        "date": "2021-07-08T19:25:29Z"
      }
    ]
  },
  {
    "author": "hivert",
    "number": 761,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 9,
        "deletions": 10
      },
      {
        "file": "mathcomp/ssreflect/bigop.v",
        "status": "M",
        "additions": 9,
        "deletions": 10
      }
    ],
    "state": "closed",
    "open_date": "2021-07-03T22:38:13Z",
    "update_date": "2021-07-04T10:19:40Z",
    "discussion": [
      {
        "author": "chdoc",
        "date": "2021-07-04T08:19:53Z",
        "comment": "If I am not mistaken, the restriction to commutative monoids is a conscious decision with upcoming changes that have (so far) not been made. See [this comment](https://github.com/math-comp/math-comp/blob/7d95be787eaa018f297a413bd36eeca0f08d37b3/mathcomp/ssreflect/bigop.v#L555-L564) for an explanation. "
      },
      {
        "author": "hivert",
        "date": "2021-07-04T08:47:26Z",
        "comment": "> If I am not mistaken, the restriction to commutative monoids is a conscious decision with upcoming changes that have (so far) not been made. See [this comment](https://github.com/math-comp/math-comp/blob/7d95be787eaa018f297a413bd36eeca0f08d37b3/mathcomp/ssreflect/bigop.v#L555-L564) for an explanation.\r\n\r\nArgll ! Thanks for the pointer, I'm pretty sure I already asked and completely forgot about it. Sorry !"
      }
    ],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: wontfix",
        "description": "Issue that might never be attended."
      }
    ],
    "commits": [
      {
        "author": "hivert",
        "committer": "hivert",
        "hash": "7d95be787eaa018f297a413bd36eeca0f08d37b3",
        "message": "Generalized big_enum(_cond) to non-abelian monoid",
        "date": "2021-07-03T22:39:57Z"
      }
    ]
  },
  {
    "author": "ejgallego",
    "number": 759,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 6,
        "deletions": 0
      },
      {
        "file": "mathcomp/ssreflect/bigop.v",
        "status": "M",
        "additions": 6,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2021-06-30T14:03:44Z",
    "update_date": "2021-07-01T14:30:17Z",
    "discussion": [
      {
        "author": "ejgallego",
        "date": "2021-07-01T09:30:59Z",
        "comment": "Thanks for the comments, good catch about the monoid identity, indeed it should be this way."
      }
    ],
    "review_discussion": [
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/bigop.v",
        "date": "2021-06-30T14:59:25Z",
        "comment": "@ejgallego would that be a problem for you to require the extra constraint that `op` a commutative monoid?"
      },
      {
        "author": "ejgallego",
        "file": "mathcomp/ssreflect/bigop.v",
        "date": "2021-06-30T15:55:32Z",
        "comment": "No problem at all I think, PR and commit message updated, thanks!\r\n\r\nNow that we have added the commutativity condition on the operator, we could do the proof of this with `big_enumP`, but IMHO it is not worth, but let me know if you would like us to do so."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/bigop.v",
        "date": "2021-06-30T17:24:05Z",
        "comment": "No, as long as it is in the file `bigop.v` it's ok to keep this proof. I just do no want to commit to a particular order in the enumeration of `bool` for now... This theorem will stay valid whatever the enumeration."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/bigop.v",
        "date": "2021-06-30T17:25:11Z",
        "comment": "BTW, there is no need for the `E`, I think `big_bool` is a good enough name."
      },
      {
        "author": "ejgallego",
        "file": "mathcomp/ssreflect/bigop.v",
        "date": "2021-06-30T21:30:54Z",
        "comment": "Indeed, that was the original name @Amel-Kebbouche picked :) Will amend tomorrow."
      },
      {
        "author": "CohenCyril",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2021-07-01T05:35:24Z",
        "comment": "```suggestion\r\n- in `bigop.v`, added lemma `big_bool`.\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/bigop.v",
        "date": "2021-07-01T05:35:33Z",
        "comment": "```suggestion\r\nLemma big_bool R (idx : R) (op : Monoid.com_law idx) (F : bool -> R):\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/bigop.v",
        "date": "2021-07-01T05:40:48Z",
        "comment": "BTW since `op` is now a monoid law this can be:\r\n```suggestion\r\n  \\big[op/idx]_(i : bool) F i = op (F true) (F false).\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/bigop.v",
        "date": "2021-07-01T05:43:53Z",
        "comment": "```suggestion\r\nProof. by rewrite /index_enum !unlock mulm1. Qed.\r\n```\r\n(untested)"
      }
    ],
    "tags": [
      {
        "tag": "kind: enhancement",
        "description": "Issue or PR about addition of features."
      }
    ],
    "commits": [
      {
        "author": "ejgallego",
        "committer": "ejgallego",
        "hash": "a15c69a225b4e4a9b2b6242763b95e322825eb35",
        "message": "[bigop] Add lemma for boolean enumeration in bigops\n\nIn some cases, such as in the proof in [1], when we have a bigop\nover the boolean enumeration, we need to open the implementation\ninternals which is not optimal and moreover fragile.\n\nWe instead provide a helper lemma that expands a bigop over the\nbooleans with a concrete enumeration, and which is more\nstraightforward to use than `big_enumP`.\n\nNote we require commutativity of the operator, this is to safeguard\nagainst changes on the low-level `bool_enumP` enumeration.\n\n[1] https://github.com/math-comp/analysis/blob/7b53e30b53b96e5eb3cabe476b0191353191b52c/theories/altreals/distr.v#L336\n\nCo-authored-by: Amel Kebbouche <akebbouc@outlook.fr>",
        "date": "2021-07-01T09:30:17Z"
      }
    ]
  },
  {
    "author": "chdoc",
    "number": 757,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 74,
        "deletions": 32
      },
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 74,
        "deletions": 32
      },
      {
        "file": "mathcomp/ssreflect/ssrbool.v",
        "status": "M",
        "additions": 74,
        "deletions": 32
      }
    ],
    "state": "merged",
    "open_date": "2021-06-21T16:41:55Z",
    "update_date": "2021-10-21T15:20:12Z",
    "discussion": [
      {
        "author": "chdoc",
        "date": "2021-10-18T09:58:14Z",
        "comment": "So, should I PR `andPP` and `orPP` for Coq, so that they become part of 8.15, creating a `(* v8.15 addtions *)` section in the mathcomp version of ssrbool? "
      },
      {
        "author": "CohenCyril",
        "date": "2021-10-19T14:06:33Z",
        "comment": "I think `implyPP` should also be added though..."
      },
      {
        "author": "chdoc",
        "date": "2021-10-20T08:20:11Z",
        "comment": "I can take care of this this afternoon. "
      },
      {
        "author": "chdoc",
        "date": "2021-10-20T11:37:42Z",
        "comment": "> I think `implyPP` should also be added though...\r\n\r\nI also added `negPP` and put everything into a section to match the style of `ssrbool.v` in Coq. If there are no more comments, I will open the PR on the Coq side. "
      },
      {
        "author": "CohenCyril",
        "date": "2021-10-21T15:22:46Z",
        "comment": "Actually it would be nice if `negP` could be combined using a `'neg_` notation (same as  `'forall_` and `'exist_`)."
      },
      {
        "author": "clayrat",
        "date": "2021-10-21T22:26:27Z",
        "comment": "This PR is breaking https://github.com/imdea-software/fcsl-pcm. The reason seems to be that `T2` in the new version of `eq_in_map` is constrained to `eqType` whereas it was an arbitrary `Type` before. The new proof doesn't seem to actually require this constraint, so I assume it can be removed without consequences?"
      }
    ],
    "review_discussion": [
      {
        "author": "affeldt-aist",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2021-10-15T06:31:33Z",
        "comment": "maybe `a::s` -> `a :: s`?"
      },
      {
        "author": "affeldt-aist",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2021-10-15T06:31:42Z",
        "comment": "maybe `a::s` -> `a :: s`?"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2021-10-18T09:39:40Z",
        "comment": "```suggestion\r\n  {in a :: s, forall x, P x} <-> P a /\\ {in s, forall x, P x}.\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2021-10-18T09:39:50Z",
        "comment": "```suggestion\r\n  (exists2 x, x \\in a :: s & P x) <-> P a \\/ exists2 x, x \\in s & P x.\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2021-10-21T22:33:03Z",
        "comment": "My mistake: this is a regression compared to the previous version were `T2` did not need to be an `eqType`. This breaks fcsl-pcm I believe."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2021-10-21T22:34:42Z",
        "comment": "Same here."
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "chdoc",
        "committer": "CohenCyril",
        "hash": "602f7ff5207b200f2188a271d054e233c201c261",
        "message": "forall/exists_cons + propositonal PP-combinator lemmas + some map lemmas",
        "date": "2021-10-20T22:13:58Z"
      }
    ]
  },
  {
    "author": "proux01",
    "number": 756,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 123,
        "deletions": 20
      },
      {
        "file": "mathcomp/algebra/matrix.v",
        "status": "M",
        "additions": 123,
        "deletions": 20
      },
      {
        "file": "mathcomp/algebra/mxpoly.v",
        "status": "M",
        "additions": 123,
        "deletions": 20
      },
      {
        "file": "mathcomp/algebra/poly.v",
        "status": "M",
        "additions": 123,
        "deletions": 20
      },
      {
        "file": "mathcomp/algebra/polydiv.v",
        "status": "M",
        "additions": 123,
        "deletions": 20
      },
      {
        "file": "mathcomp/algebra/ssralg.v",
        "status": "M",
        "additions": 123,
        "deletions": 20
      }
    ],
    "state": "merged",
    "open_date": "2021-06-17T15:55:13Z",
    "update_date": "2021-10-25T10:32:28Z",
    "discussion": [
      {
        "author": "proux01",
        "date": "2021-10-21T15:41:51Z",
        "comment": "@CohenCyril thanks for the careful review, everything should be taken into account now."
      },
      {
        "author": "proux01",
        "date": "2021-10-22T07:41:20Z",
        "comment": "Oupss, indeed, done."
      },
      {
        "author": "CohenCyril",
        "date": "2021-10-25T08:54:33Z",
        "comment": "@chdoc this is also a reasonnable addition to 1.13.0"
      }
    ],
    "review_discussion": [
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2021-10-19T14:19:36Z",
        "comment": "I think this should be replaced by `col1` and `colE` and put next to `row1` and `rowE`:\r\n```coq\r\nLemma col1 (R : ringType) [n : nat] (i : 'I_n) : col i (1 : R)%:M = delta_mx i 0.\r\nProof. by apply/colP => j; rewrite !mxE eqxx andbT. Qed.\r\n\r\nLemma colE [R : ringType] [m n : nat] (i : 'I_n) (A : 'M[R]_(m, n)) :\r\n  col i A = A *m delta_mx i 0.\r\nProof.\r\napply/colP=> j; rewrite !mxE (bigD1_ord i) //= mxE !eqxx mulr1.\r\nby rewrite big1 ?addr0 // => i'; rewrite mxE /= lift_eqF mulr0.\r\nQed.\r\n```\r\nThe theorem then follows from: `rewrite col1 -colE`."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2021-10-19T14:19:59Z",
        "comment": "remove: this follows from `row1` and `rowE`."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2021-10-19T14:21:48Z",
        "comment": "```suggestion\r\nProof. by rewrite !rsubmxEsub mulmx_colsub. Qed.\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2021-10-19T14:22:15Z",
        "comment": "```suggestion\r\nProof. by rewrite !lsubmxEsub mulmx_colsub. Qed.\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2021-10-19T14:23:22Z",
        "comment": "One should add `mul_usubmx` and `mul_dsubmx` for the sake of completeness."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2021-10-19T14:33:09Z",
        "comment": "```suggestion\r\nelim: k=> [|k IHk]; first by rewrite !expr0 -scalar_mx_block.\r\nrewrite !exprS IHk [LHS](mulmx_block A _ _ _ (A ^+ k)).\r\nby rewrite !mulmx0 !mul0mx !add0r !addr0.\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2021-10-19T15:05:23Z",
        "comment": "Cut and generalize:\r\n```suggestion\r\nLemma block_diag_mx_unit (R : comUnitRingType) n1 n2 \r\n      (Aul : 'M[R]_n1) (Adr : 'M[R]_n2) :\r\n   (block_mx Aul 0 0 Adr \\in unitmx) = (Aul \\in unitmx) && (Adr \\in unitmx).\r\nProof. by rewrite !unitmxE det_ublock unitrM. Qed.\r\n\r\nLemma invmx_block_diag (R : comUnitRingType) n1 n2\r\n      (Aul : 'M[R]_n1) (Adr : 'M[R]_n2) :\r\n  block_mx Aul 0 0 Adr \\in unitmx ->\r\n  invmx (block_mx Aul 0 0 Adr) = block_mx (invmx Aul) 0 0 (invmx Adr).\r\nProof.\r\nmove=> /[dup] Aunit; rewrite block_diag_mx_unit => /andP[Aul_unit Adr_unit].\r\nrewrite -[LHS]mul1mx; apply: (canLR (mulmxK _)) => //.\r\nrewrite [RHS](mulmx_block (invmx Aul)) !(mulmx0, mul0mx, add0r, addr0).\r\nby rewrite !mulVmx// -?scalar_mx_block.\r\nQed.\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/mxpoly.v",
        "date": "2021-10-19T15:08:10Z",
        "comment": "```suggestion\r\nProof. by apply/matrixP => k l; rewrite !mxE (inj_eq lift_inj). Qed.\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/mxpoly.v",
        "date": "2021-10-19T15:11:11Z",
        "comment": "```suggestion\r\nrewrite /char_poly_mx map_block_mx/= !map_mx0.\r\nby rewrite scalar_mx_block opp_block_mx add_block_mx !subr0.\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/poly.v",
        "date": "2021-10-19T15:14:46Z",
        "comment": "```suggestion\r\nProof. by move=> /eqP lp1; apply/lreg_lead; rewrite lp1; apply/lreg1. Qed.\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/poly.v",
        "date": "2021-10-19T15:14:56Z",
        "comment": "```suggestion\r\nProof. by move=> /eqP lp1; apply/rreg_lead; rewrite lp1; apply/rreg1. Qed.\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/polydiv.v",
        "date": "2021-10-19T15:19:12Z",
        "comment": "Generalize, shorten and rename.\r\n```suggestion\r\nLemma coprimep_XsubC2 (R : idomainType) (a b : R) : b - a != 0 ->\r\n  coprimep ('X - a%:P) ('X - b%:P).\r\nProof. by move=> bBa_neq0; rewrite coprimep_XsubC rootE hornerXsubC. Qed.\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2021-10-19T15:20:14Z",
        "comment": "```suggestion\r\nProof. by move=> rab c c' eq_bc; apply/rab; rewrite -!mulrA eq_bc. Qed.\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2021-10-19T15:20:20Z",
        "comment": "```suggestion\r\nProof. by move=> rab c c' eq_ca; apply/rab; rewrite !mulrA eq_ca. Qed.\r\n```"
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "proux01",
        "committer": "CohenCyril",
        "hash": "e1daa3fa997ee2f9963cb826052abdd91e2a4679",
        "message": "Lemmas about matrix and poly from CoqEAL's ssrcomplements\n\nCo-authored-by: Maxime Dénès <mail@maximedenes.fr>\nCo-authored-by: Anders Mörtberg <mortberg@chalmers.se>\nCo-authored-by: Cyril Cohen <cohen@crans.org>",
        "date": "2021-10-25T08:56:02Z"
      }
    ]
  },
  {
    "author": "proux01",
    "number": 755,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 92,
        "deletions": 0
      },
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 92,
        "deletions": 0
      }
    ],
    "state": "closed",
    "open_date": "2021-06-16T09:27:17Z",
    "update_date": "2021-08-25T13:46:54Z",
    "discussion": [
      {
        "author": "proux01",
        "date": "2021-07-05T08:16:57Z",
        "comment": "@chdoc all your comments are taken into account here."
      },
      {
        "author": "proux01",
        "date": "2021-08-25T13:46:54Z",
        "comment": "Indeed `map2 f s s'` is redundant with `map (fun xy => f xy.1 xy.2) (zip s s')` and could be easily removed from CoqEAL (c.f. CoqEAL/CoqEAL#44 ), so let's close this. Thanks @chdoc and @CohenCyril for your comments!"
      }
    ],
    "review_discussion": [
      {
        "author": "chdoc",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2021-06-16T10:44:34Z",
        "comment": "```suggestion\r\nLemma map2s0 s1 : map2 s1 [::] = [::].\r\nProof. by case: s1. Qed.\r\n\r\nLemma map2_mask m s1 s2 : map2 (mask m s1) (mask m s2) = mask m (map2 s1 s2).\r\nProof.\r\nby elim: m s1 s2 => [|[|] m IHm] [|h1 p1] [|h2 p2]; rewrite /= ?IHm ?map2s0.\r\nQed.\r\n```"
      },
      {
        "author": "chdoc",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2021-06-16T10:46:26Z",
        "comment": "Well, the `map2s0` lemma should probably be moved close to the top of the section."
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "2d1eb3d687d19811bc9580dd3c19ab4553b5b5a7",
        "message": "map2\n\nFrom CoqEAL's ssrcomplements.v file.\n\nCo-authored-by: Erik Martin-Dorel <erik.martin-dorel@irit.fr>\nCo-authored-by: Christian Doczkal <christian.doczkal@inria.fr>",
        "date": "2021-06-17T15:58:30Z"
      }
    ]
  },
  {
    "author": "hivert",
    "number": 754,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 26,
        "deletions": 1
      },
      {
        "file": "mathcomp/algebra/ssralg.v",
        "status": "M",
        "additions": 26,
        "deletions": 1
      },
      {
        "file": "mathcomp/field/separable.v",
        "status": "M",
        "additions": 26,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2021-06-13T10:33:27Z",
    "update_date": "2021-06-15T01:20:54Z",
    "discussion": [
      {
        "author": "pi8027",
        "date": "2021-06-13T11:17:28Z",
        "comment": "Also, this is a missing piece to support product rings in [algebra-tactics](https://github.com/math-comp/algebra-tactics). Thanks!"
      },
      {
        "author": "hivert",
        "date": "2021-06-13T11:39:21Z",
        "comment": "> They should be re-exported from here.\r\n\r\nCorrect me if I'm wrong, but all those canonicals have to be re-exported because they were defined in a the Theory module. The new ones are defined outside...\r\n\r\nI'm investigating but the failure seems to be due to a non localized rewrite...\r\n\r\n"
      },
      {
        "author": "hivert",
        "date": "2021-06-13T11:41:36Z",
        "comment": "> Also, this is a missing piece to support product rings in [algebra-tactics](https://github.com/math-comp/algebra-tactics). Thanks!\r\n\r\nI don't understand what you mean here (and know very little about tactic programming)..."
      },
      {
        "author": "pi8027",
        "date": "2021-06-13T12:22:03Z",
        "comment": "> > They should be re-exported from here.\r\n> \r\n> Correct me if I'm wrong, but all those canonicals have to be re-exported because they were defined in a the Theory module. The new ones are defined outside...\r\n\r\nSorry, my bad. Indeed, instances for products are defined after the `GRing` module.\r\n\r\nCould you investigate the breakage in separable.v? I guess you have to add some explicit patterns to specify subterms to rewrite.\r\n\r\n> > Also, this is a missing piece to support product rings in [algebra-tactics](https://github.com/math-comp/algebra-tactics). Thanks!\r\n> \r\n> I don't understand what you mean here (and know very little about tactic programming)...\r\n\r\nNevermind. I just wanted to show my support for this PR. But here are some details in the case you are interested in it: the algebra-tactics library provides ring and field tactics (as in Coq) for MathComp with a work-in-progress feature to support morphisms, e.g., it can prove `f ((x + y) ^+ 2) = f x ^+ 2 + f y ^+ 2 + f x * f y *+ 2` automatically, where `f` is a ring morphism to a `comRingType`. By relying on this feature and the canonical instances added by this PR, it should also be able to prove equations on product rings involving `fst`, `snd`, and `pair`."
      },
      {
        "author": "hivert",
        "date": "2021-06-13T12:33:24Z",
        "comment": "> Could you investigate the breakage in separable.v? I guess you have to add some explicit patterns to specify subterms to rewrite.\r\n\r\nI'm doing it right now, but I must confess it seems more complicated than that I expected that replacing the failing\r\n\r\n    rewrite -!rmorphM\r\n\r\nby\r\n\r\n      rewrite -[X in X + _]rmorphM -[X in _ + X]rmorphM.\r\n\r\nshould work but it doesn't. What is even strange it that \r\n\r\n       set mor := [rmorphism of map_poly at_t].\r\n       rewrite -!(rmorphM mor).\r\n\r\nwork as expected ! However I expect that you won't accept such a crude fix.\r\nThe canonical is here and for some reason Coq fail to find the correct matching. I'm trying some more things, but It may be beyond my skills...\r\n\r\n\r\n> Nevermind. I just wanted to show my support for this PR. \r\n\r\nThanks !\r\n\r\n> But here are some details in the case you are interested in it: the algebra-tactics library provides ring and field tactics (as in Coq) for MathComp with a work-in-progress feature to support morphisms, e.g., it can prove `f ((x * y) ^+ 2) = f x ^+ 2 + f y ^+ 2 + f x * f y *+ 2` automatically, where `f` is a ring morphism to a `comRingType`. By relying on this feature and the canonical instances added by this PR, it should also be able to prove equations on product rings involving `fst`, `snd`, and `pair`.\r\n\r\nThat is indeed very cool ! "
      },
      {
        "author": "hivert",
        "date": "2021-06-13T13:32:31Z",
        "comment": "I just pushed a reasonable fix. However I've no idea why it used to work and it is failing now. I don't know enough about Coq's pattern matching/canonical machinery to investigate further. If someone is able to understand and give me an explanation, please do !"
      },
      {
        "author": "hivert",
        "date": "2021-06-13T15:04:37Z",
        "comment": "The failure seems to be unrelated... I don't know how to relaunch the test to be sure."
      },
      {
        "author": "hivert",
        "date": "2021-06-15T06:33:38Z",
        "comment": "Good ! May I take the occasion to kindly ask the mathcomp project if they could put my name somewhere as an external contributor ? I've now probably more than 15 commit in the project, so that I think I deserve it ;-)"
      },
      {
        "author": "pi8027",
        "date": "2021-06-15T07:21:21Z",
        "comment": "We have a list of contributors for each release in its announcement e-mail. But, I personally think it makes a lot of sense to increase its visibility. I added it to the [topics](https://github.com/math-comp/math-comp/wiki/TopicsNextMeeting) for the next MathComp meeting (10 AM CEST tomorrow)."
      }
    ],
    "review_discussion": [
      {
        "author": "pi8027",
        "file": "mathcomp/field/separable.v",
        "date": "2021-06-14T02:34:07Z",
        "comment": "After all, I investigated this by myself. The source of the failure here was that it unifies `(u ^ at_t, v ^ at_t).1` with a morphism application and then triggers a canonical structure resolution. Without the morphism instances for `fst`, it unfolds `fst` to obtain `u ^ at_t` and finds the fact that `map_poly` is a morphism, but this behavior changes in presence of the morphism instances for `fst`. So `simpl` before `rewrite -!rmorphM` would be enough here:\r\n```suggestion\r\n  by rewrite /= -!rmorphM -rmorphD Dr /= map_polyC polyC_eqp1.\r\n```"
      },
      {
        "author": "hivert",
        "file": "mathcomp/field/separable.v",
        "date": "2021-06-14T15:58:51Z",
        "comment": "> After all, I investigated this by myself. The source of the failure here was that it unifies `(u ^ at_t, v ^ at_t).1` with a morphism application and then triggers a canonical structure resolution. Without the morphism instances for `fst`, it unfolds `fst` to obtain `u ^ at_t` and finds the fact that `map_poly` is a morphism, but this behavior changes in presence of the morphism instances for `fst`. So `simpl` before `rewrite -!rmorphM` would be enough here:\r\n\r\nThanks for the investigation and the explanation. I just applied your change (squashing the fix in a single commit) and (force) pushed. That should do the job."
      }
    ],
    "tags": [
      {
        "tag": "kind: enhancement",
        "description": "Issue or PR about addition of features."
      }
    ],
    "commits": [
      {
        "author": "hivert",
        "committer": "hivert",
        "hash": "8a5f000f9da3acc497a0393558f53f79cb20b30f",
        "message": "Canonical additive, linear and rmorphism for fst and snd",
        "date": "2021-06-13T10:30:23Z"
      },
      {
        "author": "hivert",
        "committer": "hivert",
        "hash": "1c0aa2a9b74e648569ffa8a82dad7bad29fabf8e",
        "message": "Fixed failing match in separable.v",
        "date": "2021-06-14T15:56:24Z"
      }
    ]
  },
  {
    "author": "hivert",
    "number": 753,
    "diff_summary": [
      {
        "file": "mathcomp/algebra/intdiv.v",
        "status": "M",
        "additions": 6,
        "deletions": 4
      }
    ],
    "state": "merged",
    "open_date": "2021-06-12T08:21:13Z",
    "update_date": "2021-06-12T20:00:10Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: documentation",
        "description": "Issue or PR about documentation mistakes, deficiencies, enhancements, ..."
      },
      {
        "tag": "kind: fix",
        "description": "PR that fixes a bug. Please refer to the appropriate issue(s) if relevant."
      }
    ],
    "commits": [
      {
        "author": "hivert",
        "committer": "hivert",
        "hash": "a8cf16645047132db77f68926c7f62896cd9bcd2",
        "message": "intdiv.v : Fixed the doc + removed unused import",
        "date": "2021-06-12T08:10:40Z"
      }
    ]
  },
  {
    "author": "affeldt-aist",
    "number": 752,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 46,
        "deletions": 11
      },
      {
        "file": "mathcomp/ssreflect/bigop.v",
        "status": "M",
        "additions": 46,
        "deletions": 11
      },
      {
        "file": "mathcomp/ssreflect/binomial.v",
        "status": "M",
        "additions": 46,
        "deletions": 11
      },
      {
        "file": "mathcomp/ssreflect/ssrnat.v",
        "status": "M",
        "additions": 46,
        "deletions": 11
      }
    ],
    "state": "merged",
    "open_date": "2021-06-09T07:50:43Z",
    "update_date": "2021-08-03T11:29:54Z",
    "discussion": [
      {
        "author": "affeldt-aist",
        "date": "2021-06-14T02:40:39Z",
        "comment": "\r\n> ```coq\r\n> Lemma big_rev_mkord m n P F :\r\n>  \\big[op/idx]_(m <= k < n | P k) F k = \\big[op/idx]_(k < n - m | P (n - k.+1)) F (n - k.+1).\r\n> Proof.\r\n> rewrite big_nat_rev (big_addn 0)/= big_mkord.\r\n> by apply: eq_bigr => i; rewrite -addSn addnC subnDr.\r\n> Qed.\r\n> ```\r\n> \r\n> I'm not yet sure about the name though...\r\n\r\nBy the look at `big_geq_mkord`, this looks like a reasonable name to me.\r\n"
      },
      {
        "author": "CohenCyril",
        "date": "2021-07-07T14:24:21Z",
        "comment": "> By the look at `big_geq_mkord`, this looks like a reasonable name to me.\r\n\r\n@chdoc I remember seeing a comment about the name not being so reasonable to you, but I cannot find it anymore, did I imagine it?"
      },
      {
        "author": "chdoc",
        "date": "2021-07-07T14:33:45Z",
        "comment": "I do not recall commenting on this name. :man_shrugging: "
      },
      {
        "author": "CohenCyril",
        "date": "2021-07-07T14:36:10Z",
        "comment": "> I do not recall commenting on this name.\r\n\r\nMaybe it was in a dream..."
      },
      {
        "author": "CohenCyril",
        "date": "2021-07-07T14:39:55Z",
        "comment": "Ah I see, since I was not there, I imagined the worst:\r\nhttps://github.com/math-comp/math-comp/wiki/Minutes-June-16-2021\r\n> - PR 752:\r\n>   - Cyril: to come back to it but this should be light\r\n>   - Christian: questioning the naming of big_rev_mkord\r\n\r\nWould you mind telling me your questioning and what answers you had?"
      },
      {
        "author": "chdoc",
        "date": "2021-07-07T15:23:05Z",
        "comment": "From what I remember, I had simply missed that the order is in fact reversed, because my expectation was to find a lemma where the range has been shifted down (so that it begins with 0) without reversing the bigop. :man_shrugging: "
      }
    ],
    "review_discussion": [
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/ssrnat.v",
        "date": "2021-06-09T09:02:53Z",
        "comment": "`leq_fact` seems more appropriate for `{mono factorial : m n / m <= n}`. I would pick the name `fact_geq` for this one."
      },
      {
        "author": "affeldt-aist",
        "file": "mathcomp/ssreflect/ssrnat.v",
        "date": "2021-06-14T02:39:13Z",
        "comment": "Ok. I have added the `leq_fact` lemma (with `homo` instead of `mono`)."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/ssrnat.v",
        "date": "2021-07-07T14:22:48Z",
        "comment": "I think for this I prefer to keep the expanded form, which should be convertible...\r\n```suggestion\r\nLemma ltn_fact m n : 0 < m -> m < n -> m`! < n`!.\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2021-07-07T14:23:26Z",
        "comment": "```suggestion\r\n- `fact_smonotone` moved from `binomial.v` to `ssrnat.v` and renamed to `ltn_fact`.\r\n```"
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "b1d60809fae2930b3ca53d858cc130c73821dd46",
        "message": "lemmas about fact\n\nCo-authored-by: Cyril Cohen <cohen@crans.org>",
        "date": "2021-07-07T07:33:24Z"
      },
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "cfad5a0438bfe4ba694329a4cdd6b2c663a80f84",
        "message": "a few more lemma about `fact`\n\nCo-authored-by: Cyril Cohen <cohen@crans.org>",
        "date": "2021-07-07T13:44:50Z"
      },
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "d556d5c6a3a0ef36fcadbb2dbedc8de32a7513d5",
        "message": "address comment",
        "date": "2021-07-12T01:57:47Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 751,
    "diff_summary": [
      {
        "file": ".github/workflows/nix-action-coq-8.11.yml",
        "status": "M",
        "additions": 124,
        "deletions": 0
      },
      {
        "file": ".github/workflows/nix-action-coq-8.12.yml",
        "status": "M",
        "additions": 124,
        "deletions": 0
      },
      {
        "file": ".github/workflows/nix-action-coq-8.13.yml",
        "status": "M",
        "additions": 124,
        "deletions": 0
      },
      {
        "file": ".nix/config.nix",
        "status": "M",
        "additions": 124,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2021-06-08T11:17:11Z",
    "update_date": "2021-06-08T12:49:01Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "660a0ea061d51c03bc93998672cc4e9834663e81",
        "message": "adding fourcolor and oddorder master",
        "date": "2021-06-08T11:18:15Z"
      }
    ]
  },
  {
    "author": "thery",
    "number": 750,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 6,
        "deletions": 6
      },
      {
        "file": "mathcomp/ssreflect/bigop.v",
        "status": "M",
        "additions": 6,
        "deletions": 6
      }
    ],
    "state": "merged",
    "open_date": "2021-06-07T11:02:28Z",
    "update_date": "2021-06-08T14:39:11Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2021-06-08T12:53:07Z",
        "comment": "@thery can you rebase?"
      }
    ],
    "review_discussion": [
      {
        "author": "CohenCyril",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2021-06-07T15:44:13Z",
        "comment": "I think this is a changelog error introduced by the rebase."
      },
      {
        "author": "thery",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2021-06-07T15:55:59Z",
        "comment": "my bad, should be fixed"
      }
    ],
    "tags": [
      {
        "tag": "kind: clean-up",
        "description": "This issure/PR is about cleaning up obsolete code, removing hacks, etc"
      }
    ],
    "commits": [
      {
        "author": "thery",
        "committer": "thery",
        "hash": "e41f881d7a643329c154df346bd35d9df16cad45",
        "message": "Rename big_uncond into big_rmcond",
        "date": "2021-06-08T13:17:27Z"
      }
    ]
  },
  {
    "author": "thery",
    "number": 749,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 13,
        "deletions": 7
      },
      {
        "file": "mathcomp/ssreflect/finset.v",
        "status": "M",
        "additions": 13,
        "deletions": 7
      }
    ],
    "state": "merged",
    "open_date": "2021-06-07T10:26:09Z",
    "update_date": "2021-06-09T15:11:48Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2021-06-08T14:35:26Z",
        "comment": "I just merged https://github.com/math-comp/odd-order/pull/30 I will restart the associated part of the CI"
      },
      {
        "author": "thery",
        "date": "2021-06-09T12:27:41Z",
        "comment": "@CohenCyril  70 successful checks!! impressive not very green though"
      },
      {
        "author": "CohenCyril",
        "date": "2021-06-09T15:52:13Z",
        "comment": "> @CohenCyril 70 successful checks!! impressive not very green though\r\n\r\nIt's greener than gitlab because it will never recompile a package that has been already compiled."
      }
    ],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: clean-up",
        "description": "This issure/PR is about cleaning up obsolete code, removing hacks, etc"
      }
    ],
    "commits": [
      {
        "author": "thery",
        "committer": "thery",
        "hash": "8a4e8a181c5dfb948e8cdec17904b060fbc77f70",
        "message": "Renaming mem_imset_eq -> mem_imset and mem_imset2_eq -> mem_imset2",
        "date": "2021-06-08T13:54:19Z"
      },
      {
        "author": "thery",
        "committer": "web-flow",
        "hash": "e5795c3a70695121568978ea9c6a66b9123eda63",
        "message": "Merge branch 'master' into mem_imset",
        "date": "2021-06-09T08:28:06Z"
      }
    ]
  },
  {
    "author": "thery",
    "number": 748,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 6,
        "deletions": 6
      },
      {
        "file": "mathcomp/algebra/ssralg.v",
        "status": "M",
        "additions": 6,
        "deletions": 6
      }
    ],
    "state": "merged",
    "open_date": "2021-06-07T09:50:31Z",
    "update_date": "2021-06-07T15:42:19Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: fix",
        "description": "PR that fixes a bug. Please refer to the appropriate issue(s) if relevant."
      }
    ],
    "commits": [
      {
        "author": "thery",
        "committer": "thery",
        "hash": "2e6ca16e29d3762b77ac0a6556e3d48c79cb3708",
        "message": "prodr_natmul -> prodrMn",
        "date": "2021-06-07T09:55:48Z"
      }
    ]
  },
  {
    "author": "affeldt-aist",
    "number": 747,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 6,
        "deletions": 0
      },
      {
        "file": "mathcomp/algebra/ssrnum.v",
        "status": "M",
        "additions": 6,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2021-05-28T07:26:35Z",
    "update_date": "2021-05-28T10:06:51Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: enhancement",
        "description": "Issue or PR about addition of features."
      }
    ],
    "commits": [
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "49426f9ec3d0c1e1572a6b68460b7f13467db50e",
        "message": "backport from coq-robot",
        "date": "2021-05-28T05:51:48Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 745,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/finfun.v",
        "status": "M",
        "additions": 12,
        "deletions": 25
      }
    ],
    "state": "open",
    "open_date": "2021-05-19T04:23:57Z",
    "update_date": "2023-01-11T09:15:04Z",
    "discussion": [
      {
        "author": "pi8027",
        "date": "2021-05-19T17:22:50Z",
        "comment": "The unification trace obtained by UniCoq (see https://github.com/math-comp/math-comp/issues/701#issuecomment-843729180 for the first attempt with `Set Debug \"unification\"`):\r\nhttps://github.com/math-comp/math-comp/blob/7db7a5fbce42ff387a5750f9fbde5436a9aab1cc/mathcomp/algebra/matrix.v#L342-L343\r\n```\r\neqType =<= Type (App-FO) ERR\r\n?T =<= nat (Meta-Inst) OK\r\n_Set =<= Type (Reduce-Same) OK\r\n?T =<= nat (Meta-Inst) OK\r\n_Set =<= Type (Reduce-Same) OK\r\n(Equality.mixin_of ?sT) =<= (Equality.mixin_of 'M_(m, n)) (App-FO) ERR\r\n_Equality.mixin_of =<= Equality.mixin_of (Rigid-Same) OK\r\n_(sub_sort ?sT) =?= 'M_(m, n) (CS) ERR\r\n__(Equality.sort ?T) =?= \\{ffun 'I_?n * 'I_?n0 -> ?T0\\} (CS) ERR\r\n___?t =?= (prod_finType (ordinal_finType ?n) (ordinal_finType ?n0)) (Meta-Inst) OK\r\n____finType =<= finType (Reduce-Same) OK\r\n___(fun=> ?T0) =?= (fun x : prod_finType (ordinal_finType ?n) (ordinal_finType ?n0) => Equality.sort (?t x : eqType)) (App-FO) ERR\r\n____(fun=> ?T0) =?= (fun x : prod_finType (ordinal_finType ?n) (ordinal_finType ?n0) => Equality.sort (?t x : eqType)) (Lam-Same) ERR\r\n_____(Finite.sort (prod_finType (ordinal_finType ?n) (ordinal_finType ?n0))) =?= ('I_?n * 'I_?n0)\\%type (CS) OK\r\n______(Finite.sort ?t0) =?= 'I_?n (CS) OK\r\n_______?n1 =?= ?n (Meta-Inst) OK\r\n________nat =<= nat (Reduce-Same) OK\r\n_______?t0 =?= (ordinal_finType ?n) (Meta-Inst) OK\r\n________finType =<= finType (Reduce-Same) OK\r\n______(Finite.sort ?t0) =?= 'I_?n0 (CS) OK\r\n_______?n1 =?= ?n0 (Meta-Inst) OK\r\n________nat =<= nat (Reduce-Same) OK\r\n_______?t0 =?= (ordinal_finType ?n0) (Meta-Inst) OK\r\n________finType =<= finType (Reduce-Same) OK\r\n______(prod_finType (ordinal_finType ?n) (ordinal_finType ?n0)) =?= (prod_finType (ordinal_finType ?n) (ordinal_finType ?n0)) (App-FO) OK\r\n_______prod_finType =?= prod_finType (Rigid-Same) OK\r\n_______(ordinal_finType ?n) =?= (ordinal_finType ?n) (App-FO) OK\r\n________ordinal_finType =?= ordinal_finType (Rigid-Same) OK\r\n________?n =?= ?n (Meta-Same-Same) OK\r\n_______(ordinal_finType ?n0) =?= (ordinal_finType ?n0) (App-FO) OK\r\n________ordinal_finType =?= ordinal_finType (Rigid-Same) OK\r\n________?n0 =?= ?n0 (Meta-Same-Same) OK\r\n_____?T0 =?= (Equality.sort (?t x : eqType)) (Meta-Inst) ERR\r\n_____?T0 =?= (Equality.sort (?t x : eqType)) (Meta-Reduce) ERR\r\n______?T0 =?= (let (sort, _) := ?t x in sort) (Meta-Inst) ERR\r\n__(Equality.sort ?T) =?= \\{ffun 'I_?n * 'I_?n0 -> ?T0\\} (Cons-DeltaL) ERR\r\n_(sub_sort ?sT) =?= 'M_(m, n) (App-FO) ERR\r\n_(sub_sort ?sT) =?= 'M_(m, n) (Cons-DeltaL) ERR\r\nThe command has indeed failed with message:\r\nIn environment\r\nR : eqType\r\nm : nat\r\nn : nat\r\nThe term \"SubEqMixin ?sT\" has type \"Equality.mixin_of ?sT\" while it is expected to have type \"Equality.mixin_of 'M_(m, n)\".\r\n```\r\nI don't get why `?T0` does not get instantiated with `R`."
      }
    ],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: help wanted",
        "description": "PR for which help is requested."
      }
    ],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "4106f94e65e70f813643645b43ae344b6e88eb14",
        "message": "Attempt to remove dffun",
        "date": "2021-10-07T10:39:17Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 744,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 53,
        "deletions": 20
      },
      {
        "file": "mathcomp/ssreflect/order.v",
        "status": "M",
        "additions": 53,
        "deletions": 20
      }
    ],
    "state": "merged",
    "open_date": "2021-05-17T10:47:33Z",
    "update_date": "2021-05-18T03:54:16Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2021-05-17T10:52:57Z",
        "comment": "CC @pi8027 "
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "eb3804ba5e330bc588287a7eaac67b055edf32c3",
        "message": "Various renamings about big meet and join + 2 missing lemmas",
        "date": "2021-05-17T10:45:48Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 743,
    "diff_summary": [
      {
        "file": "mathcomp/algebra/vector.v",
        "status": "M",
        "additions": 2,
        "deletions": 6
      },
      {
        "file": "mathcomp/ssreflect/ssrAC.v",
        "status": "M",
        "additions": 2,
        "deletions": 6
      }
    ],
    "state": "merged",
    "open_date": "2021-05-13T23:00:17Z",
    "update_date": "2021-05-26T12:06:53Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: clean-up",
        "description": "This issure/PR is about cleaning up obsolete code, removing hacks, etc"
      }
    ],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "20e4220b058565a6fa8c99e3532a717dc6d3ef1b",
        "message": "Clean up some remarks mentioning old versions of Coq",
        "date": "2021-05-13T22:58:36Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 741,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/order.v",
        "status": "M",
        "additions": 38,
        "deletions": 54
      }
    ],
    "state": "merged",
    "open_date": "2021-05-11T15:44:15Z",
    "update_date": "2021-05-17T10:02:09Z",
    "discussion": [],
    "review_discussion": [
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/order.v",
        "date": "2021-05-11T15:47:17Z",
        "comment": "These namings are inconsistent between `\\meet_` and `\\join_`. (not from this PR)"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/order.v",
        "date": "2021-05-17T10:03:32Z",
        "comment": "Thanks for the remark. I spotted another problem that I will fix right now."
      }
    ],
    "tags": [
      {
        "tag": "kind: enhancement",
        "description": "Issue or PR about addition of features."
      }
    ],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "e115d1c133c5267da4b903926c20aca3004c5385",
        "message": "Refactor bigop lemmas in order.v",
        "date": "2021-05-11T15:34:39Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 740,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 82,
        "deletions": 52
      },
      {
        "file": "etc/utils/hierarchy.ml",
        "status": "M",
        "additions": 82,
        "deletions": 52
      },
      {
        "file": "mathcomp/algebra/finalg.v",
        "status": "M",
        "additions": 82,
        "deletions": 52
      },
      {
        "file": "mathcomp/algebra/ssrnum.v",
        "status": "M",
        "additions": 82,
        "deletions": 52
      }
    ],
    "state": "merged",
    "open_date": "2021-05-11T01:18:26Z",
    "update_date": "2021-06-17T12:41:31Z",
    "discussion": [],
    "review_discussion": [
      {
        "author": "CohenCyril",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2021-05-26T12:10:11Z",
        "comment": "I'm not sure I understand. It \"recognizes\" non-forgetful inheritance, but what does it do with it? Warn? Error? Tolerate given some special instructions?"
      }
    ],
    "tags": [
      {
        "tag": "kind: fix",
        "description": "PR that fixes a bug. Please refer to the appropriate issue(s) if relevant."
      }
    ],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "3b7e26fff4e63deb7932df063a63637be69b7fa1",
        "message": "Fix some inheritance issues\n\n- The way `hierachy.ml` recognizes inheritance has been changed: `S1` inherits\n  from `S2` when there is a coercion path from `S1.sort` to `S2.sort` and there\n  is a canonical structure instance that unifies `S1.sort` and `S2.sort`,\n  regardless of where (which module) these constants are declared.\n  As a result, it recognizes non-forgetful inheritance and checks the uniqueness\n  of join and exhaustiveness of canonical declarations involving it.\n- `finFieldType` now inherits from `countDecFieldType`. This should probably be\n  done with forgetful inheritance and a factory, but it remains non-forgetful\n  inheritance for now.\n- Get rid of a workaround in `ssrnum` thanks to the improvement of\n  `hierarchy.ml`.",
        "date": "2021-06-16T08:20:42Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 739,
    "diff_summary": [
      {
        "file": ".nix/config.nix",
        "status": "M",
        "additions": 766,
        "deletions": 1118
      },
      {
        "file": "mathcomp/algebra/countalg.v",
        "status": "M",
        "additions": 766,
        "deletions": 1118
      },
      {
        "file": "mathcomp/algebra/finalg.v",
        "status": "M",
        "additions": 766,
        "deletions": 1118
      },
      {
        "file": "mathcomp/algebra/fraction.v",
        "status": "M",
        "additions": 766,
        "deletions": 1118
      },
      {
        "file": "mathcomp/algebra/matrix.v",
        "status": "M",
        "additions": 766,
        "deletions": 1118
      },
      {
        "file": "mathcomp/algebra/poly.v",
        "status": "M",
        "additions": 766,
        "deletions": 1118
      },
      {
        "file": "mathcomp/algebra/ring_quotient.v",
        "status": "M",
        "additions": 766,
        "deletions": 1118
      },
      {
        "file": "mathcomp/algebra/ssralg.v",
        "status": "M",
        "additions": 766,
        "deletions": 1118
      },
      {
        "file": "mathcomp/algebra/ssrnum.v",
        "status": "M",
        "additions": 766,
        "deletions": 1118
      },
      {
        "file": "mathcomp/algebra/vector.v",
        "status": "M",
        "additions": 766,
        "deletions": 1118
      },
      {
        "file": "mathcomp/character/character.v",
        "status": "M",
        "additions": 766,
        "deletions": 1118
      },
      {
        "file": "mathcomp/character/classfun.v",
        "status": "M",
        "additions": 766,
        "deletions": 1118
      },
      {
        "file": "mathcomp/character/integral_char.v",
        "status": "M",
        "additions": 766,
        "deletions": 1118
      },
      {
        "file": "mathcomp/character/mxabelem.v",
        "status": "M",
        "additions": 766,
        "deletions": 1118
      },
      {
        "file": "mathcomp/character/mxrepresentation.v",
        "status": "M",
        "additions": 766,
        "deletions": 1118
      },
      {
        "file": "mathcomp/field/algC.v",
        "status": "M",
        "additions": 766,
        "deletions": 1118
      },
      {
        "file": "mathcomp/field/algebraics_fundamentals.v",
        "status": "M",
        "additions": 766,
        "deletions": 1118
      },
      {
        "file": "mathcomp/field/closed_field.v",
        "status": "M",
        "additions": 766,
        "deletions": 1118
      },
      {
        "file": "mathcomp/field/falgebra.v",
        "status": "M",
        "additions": 766,
        "deletions": 1118
      },
      {
        "file": "mathcomp/field/fieldext.v",
        "status": "M",
        "additions": 766,
        "deletions": 1118
      },
      {
        "file": "mathcomp/field/finfield.v",
        "status": "M",
        "additions": 766,
        "deletions": 1118
      },
      {
        "file": "mathcomp/field/galois.v",
        "status": "M",
        "additions": 766,
        "deletions": 1118
      },
      {
        "file": "mathcomp/fingroup/fingroup.v",
        "status": "M",
        "additions": 766,
        "deletions": 1118
      },
      {
        "file": "mathcomp/fingroup/gproduct.v",
        "status": "M",
        "additions": 766,
        "deletions": 1118
      },
      {
        "file": "mathcomp/fingroup/perm.v",
        "status": "M",
        "additions": 766,
        "deletions": 1118
      },
      {
        "file": "mathcomp/fingroup/quotient.v",
        "status": "M",
        "additions": 766,
        "deletions": 1118
      },
      {
        "file": "mathcomp/solvable/cyclic.v",
        "status": "M",
        "additions": 766,
        "deletions": 1118
      },
      {
        "file": "mathcomp/solvable/finmodule.v",
        "status": "M",
        "additions": 766,
        "deletions": 1118
      },
      {
        "file": "mathcomp/solvable/jordanholder.v",
        "status": "M",
        "additions": 766,
        "deletions": 1118
      },
      {
        "file": "mathcomp/ssreflect/choice.v",
        "status": "M",
        "additions": 766,
        "deletions": 1118
      },
      {
        "file": "mathcomp/ssreflect/eqtype.v",
        "status": "M",
        "additions": 766,
        "deletions": 1118
      },
      {
        "file": "mathcomp/ssreflect/finfun.v",
        "status": "M",
        "additions": 766,
        "deletions": 1118
      },
      {
        "file": "mathcomp/ssreflect/finset.v",
        "status": "M",
        "additions": 766,
        "deletions": 1118
      },
      {
        "file": "mathcomp/ssreflect/fintype.v",
        "status": "M",
        "additions": 766,
        "deletions": 1118
      },
      {
        "file": "mathcomp/ssreflect/generic_quotient.v",
        "status": "M",
        "additions": 766,
        "deletions": 1118
      },
      {
        "file": "mathcomp/ssreflect/order.v",
        "status": "M",
        "additions": 766,
        "deletions": 1118
      },
      {
        "file": "mathcomp/ssreflect/ssrnat.v",
        "status": "M",
        "additions": 766,
        "deletions": 1118
      },
      {
        "file": "mathcomp/ssreflect/tuple.v",
        "status": "M",
        "additions": 766,
        "deletions": 1118
      }
    ],
    "state": "merged",
    "open_date": "2021-05-07T07:58:45Z",
    "update_date": "2021-05-10T13:36:20Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "655dcb5768237cbfe0a7157c35bbe733b45dcc00",
        "message": "Several fixes\n\n- fix several local packs\n- (eq|choice|count)Mixin -> factory\n- several global renamings\n- reorganize finalg\n- remove some raw HB.instance\n- fix finfield\n- removed superfluous content\n- use short name attributes\n- various fixes and optims",
        "date": "2021-05-10T13:26:46Z"
      }
    ]
  },
  {
    "author": "proux01",
    "number": 738,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 315,
        "deletions": 1
      },
      {
        "file": "mathcomp/algebra/intdiv.v",
        "status": "M",
        "additions": 315,
        "deletions": 1
      },
      {
        "file": "mathcomp/algebra/rat.v",
        "status": "M",
        "additions": 315,
        "deletions": 1
      },
      {
        "file": "mathcomp/algebra/ssralg.v",
        "status": "M",
        "additions": 315,
        "deletions": 1
      },
      {
        "file": "mathcomp/ssreflect/order.v",
        "status": "M",
        "additions": 315,
        "deletions": 1
      },
      {
        "file": "mathcomp/ssreflect/path.v",
        "status": "M",
        "additions": 315,
        "deletions": 1
      },
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 315,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2021-05-05T07:52:11Z",
    "update_date": "2021-05-19T16:03:51Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2021-05-05T09:57:21Z",
        "comment": "@proux01 thanks for your contribution, it's likely all of this will be integrated. I will come back to your PR later to help with the tidying. Just some general remarks about mathcomp style meanwhile:\r\n- do not use `{}` to focus, use the [mathcomp conventions](https://github.com/math-comp/math-comp/blob/master/CONTRIBUTING.md#indentation-in-proof-scripts) about indentation and terminators instead.\r\n- do not name hypothesis `Hsomething`, as expained [here](https://github.com/math-comp/math-comp/blob/master/CONTRIBUTING.md#naming-of-variables), give meaningful names based on their scope (the longer the scope the more meaningful the name)."
      },
      {
        "author": "CohenCyril",
        "date": "2021-05-11T16:25:03Z",
        "comment": "@proux01 I committed what we did together (and filled the proofs for the nth sorted lemmas)"
      },
      {
        "author": "pi8027",
        "date": "2021-05-13T15:52:07Z",
        "comment": "I will try to review order.v and path.v as well, but I think it will take some time."
      },
      {
        "author": "proux01",
        "date": "2021-05-13T16:06:11Z",
        "comment": "@pi8027 please wait a bit, I'm still tidying them."
      },
      {
        "author": "proux01",
        "date": "2021-05-14T07:43:06Z",
        "comment": "@pi8027 order.v and path.v should be cleaner now."
      },
      {
        "author": "CohenCyril",
        "date": "2021-05-18T10:06:17Z",
        "comment": "@proux01 you need to rebase as well "
      },
      {
        "author": "CohenCyril",
        "date": "2021-05-19T13:14:39Z",
        "comment": "OK, let's merge as soon as CI passes \\o/"
      },
      {
        "author": "proux01",
        "date": "2021-05-19T16:44:07Z",
        "comment": "Thanks all for your patience! I learned a lot."
      }
    ],
    "review_discussion": [
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/intdiv.v",
        "date": "2021-05-05T09:17:19Z",
        "comment": "```suggestion\r\nby case: d => [[|d]|] _ [] m [] n//; rewrite /divz !mul1r; apply: leq_div2r.\r\n```"
      },
      {
        "author": "proux01",
        "file": "mathcomp/algebra/intdiv.v",
        "date": "2021-05-05T09:26:52Z",
        "comment": "Impressive contraction, I just added a `//` to avoid a warning."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/intdiv.v",
        "date": "2021-05-05T09:35:31Z",
        "comment": "```suggestion\r\nhave [->|m_neq0] := eqVneq m 0; first by rewrite lcm0z.\r\nhave [->|n_neq0] := eqVneq n 0; first by rewrite lcmz0.\r\nby rewrite gt_eqF// [0 < _]lcmn_gt0 !absz_gt0 m_neq0 n_neq0.\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/intdiv.v",
        "date": "2021-05-05T09:41:59Z",
        "comment": "@proux01 best practice is to use `have [] := view` instead of `case` for these. Also the choice of `view` is subtle, `eqP` is seldom used. We prefer `eqVneq`, `ifP`, `ifPn`, `ltgtP` and suff like that. Last resort is usually `boolP` or `(altP reflection_lemma)` (where `reflection_lemma` can be `eqP`)."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/intdiv.v",
        "date": "2021-05-05T09:44:50Z",
        "comment": "Another best practice -- rather than assembling the hypotheses like you did -- is to either\r\n- rewrite the goal like I did (backward reasonning)\r\n- or make `have : intermediate_statement` (forward reasoning) and switch back to backward reasoning inside the subgoal,\r\n\r\nMassaging hypothesis should be done with parsimony as it clutters the proof script slightly more than the above techniques. (and it should rather be from complicated to simple)"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/intdiv.v",
        "date": "2021-05-05T09:48:53Z",
        "comment": "```suggestion\r\nby case: d => [[|d]|]// _ [] m [] n //; rewrite /divz !mul1r; apply: leq_div2r.\r\n```\r\n(save 1 char to respect the 80char per line limit)"
      },
      {
        "author": "gares",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2021-05-05T12:56:04Z",
        "comment": "With no presumption of being correct, since I did not test it, these two lines look like they could be written as\r\n```\r\nrewrite (nth_map O) ?size_iota // (nth_map O) ?size_iota //.\r\n```"
      },
      {
        "author": "proux01",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2021-05-05T15:06:47Z",
        "comment": "Indeed, you are right."
      },
      {
        "author": "chdoc",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2021-05-05T15:22:58Z",
        "comment": "```suggestion\r\nProof. exact/subseq_path/undup_subseq. Qed.\r\n```"
      },
      {
        "author": "chdoc",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2021-05-05T15:23:56Z",
        "comment": "```suggestion\r\nProof. exact/subseq_sorted/undup_subseq. Qed.\r\n```"
      },
      {
        "author": "chdoc",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2021-05-05T16:21:50Z",
        "comment": "```suggestion\r\nLemma drop_mask i (s : seq T) : \r\n  drop i s = mask (nseq i false ++ nseq (size s - i) true) s.\r\nProof. \r\nelim: i s => [|i IHi] s; last by case: s.\r\nby rewrite drop0 /= mask_true // subn0.\r\nQed.\r\n\r\nLemma sorted_drop s i : sorted leT s -> sorted leT (drop i s).\r\nProof. rewrite drop_mask; exact: sorted_mask. Qed.\r\n```"
      },
      {
        "author": "chdoc",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2021-05-05T16:22:37Z",
        "comment": "The `drop_mask` lemma should probably be moved elsewhere."
      },
      {
        "author": "chdoc",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2021-05-05T16:45:07Z",
        "comment": "If you move this after the MakeSeq section, this can be proved by:\r\n```\r\nby move=> ?; rewrite -[in LHS](mkseq_nth x0 s) -map_take take_iota (minn_idPl _).\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2021-05-05T16:47:49Z",
        "comment": "```\r\nLemma drop_mask i (s : seq T) : \r\n  drop i s = mask (nseq i false ++ nseq (size s - i) true) s.\r\nProof. by elim: i s => [|i IHi] [|//]; rewrite drop0/= mask_true// subn0. Qed.\r\n```\r\n(not tested)"
      },
      {
        "author": "proux01",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2021-05-06T15:13:10Z",
        "comment": "Almost\r\n```\r\nLemma drop_mask i s :\r\n  drop i s = mask (nseq i false ++ nseq (size s - i) true) s.\r\nProof. by elim: i s => [s|? ? []//]; rewrite drop0/= mask_true// subn0. Qed.\r\n```\r\n"
      },
      {
        "author": "proux01",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2021-05-06T15:14:39Z",
        "comment": "This was 81 chars so I just got the other way around (rewrite RHS instead of LHS)."
      },
      {
        "author": "proux01",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2021-05-06T17:10:28Z",
        "comment": "Unfortunately, this nice proof adds a useless hypothesis `transitive leT` :("
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2021-05-11T16:34:14Z",
        "comment": "As discussed\r\n```suggestion\r\nLemma map_nth_iota T (x0 : T) s i : i <= size s -> [seq nth x0 s j | j <- iota 0 i] = take i s.\r\n```"
      },
      {
        "author": "chdoc",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2021-05-12T08:13:30Z",
        "comment": "If you're upset about the extra assumption, here is another possibility:\r\n```coq\r\nLemma sorted_cat s1 s2 : sorted leT (s1 ++ s2) -> sorted leT s1 /\\ sorted leT s2.\r\nProof.\r\nby move: s1 s2 => [|x s1] [|y s2] //=; rewrite ?cats0 // cat_path /= => /and3P[].\r\nQed.\r\n\r\nLemma sorted_take n s : sorted leT s -> sorted leT (take n s).\r\nProof. by rewrite -[s in sorted _ s](cat_take_drop n) => /sorted_cat[]. Qed.\r\n\r\nLemma sorted_drop n s : sorted leT s -> sorted leT (drop n s).\r\nProof. by rewrite -[s in sorted _ s](cat_take_drop n) => /sorted_cat[]. Qed.\r\n```"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2021-05-13T15:27:27Z",
        "comment": "```suggestion\r\nProof. by rewrite -!size_filter filter_undup size_undup. Qed.\r\n```"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2021-05-13T15:30:44Z",
        "comment": "```suggestion\r\nmove=> s1_eq_s2; rewrite -!size_filter !filter_undup.\r\napply/perm_size/perm_undup => x.\r\nby rewrite !mem_filter; case: (boolP (a x)) => //= /s1_eq_s2.\r\n```"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2021-05-13T15:47:16Z",
        "comment": "Lemmas in `ssralg` have to be exported from `GRing.Theory`. See #440."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2021-05-14T09:04:04Z",
        "comment": "Nice!!!\r\nNitpicking:\r\n- Please remove `%N` since it is inside `seq.v` there is no ambiguity.\r\n- Also I would use `rewrite (@eq_in_filter _ _ pred0) ?filter_pred0// => i` instead of using`under` in this case."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/order.v",
        "date": "2021-05-14T09:05:06Z",
        "comment": "```suggestion\r\nmove: (filter_all (>= x) s) => /all_nthP; apply; rewrite size_filter.\r\n```\r\nI'd use `have /all_nthP := filter_all (>= x) s` instead of `move:` since `:`, `=>`, etc. are better suited for \"bureaucratic\" handling of the goal, while `have` marks key steps."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2021-05-14T09:07:59Z",
        "comment": "Please add `take_mask` then :)"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2021-05-14T09:08:31Z",
        "comment": "I personally prefer the namings `dropEmask` and `takeEmask` though"
      },
      {
        "author": "chdoc",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2021-05-14T09:59:36Z",
        "comment": "I was about to say that `drop_mask` was badly chosen by me. I agree with the `E` variants."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/order.v",
        "date": "2021-05-18T06:12:59Z",
        "comment": "```suggestion\r\nby rewrite addn0 => ->; rewrite -add1n leq_add2r -has_count has_pred1.\r\n```"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/order.v",
        "date": "2021-05-18T06:13:26Z",
        "comment": "```suggestion\r\nby rewrite -(count_predC (> x)) addKn; apply: eq_count => y; rewrite /= leNgt.\r\n```"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/order.v",
        "date": "2021-05-18T06:13:43Z",
        "comment": "```suggestion\r\nby rewrite -(count_predC (>= x)) addKn; apply: eq_count => y; rewrite /= ltNge.\r\n```"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2021-05-18T06:33:05Z",
        "comment": "```suggestion\r\nProof. by rewrite !count_merge !count_cat => -> ->. Qed.\r\n```"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2021-05-18T06:38:29Z",
        "comment": "```suggestion\r\nby case: s => [//| x'' s xlex' /= /andP[x'lex'' ->]]; rewrite (leT_tr xlex').\r\n```"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/order.v",
        "date": "2021-05-18T06:49:18Z",
        "comment": "I think this should be a part of the `TotalTheory` module but it requires us to relocate `dual_orderType`. I can do this in a separate PR."
      },
      {
        "author": "proux01",
        "file": "mathcomp/ssreflect/order.v",
        "date": "2021-05-18T07:45:30Z",
        "comment": "I agree, thanks!"
      },
      {
        "author": "chdoc",
        "file": "mathcomp/ssreflect/order.v",
        "date": "2021-05-18T15:48:15Z",
        "comment": "```suggestion\r\n  (count (< x) s < count (<= x) s)%N = (x \\in s).\r\n```\r\nThe same proof actually proves the equality, so this may be preferable."
      },
      {
        "author": "chdoc",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2021-05-18T16:01:50Z",
        "comment": "This has nothing to do with sorting or ordering. If it is to be kept at all, it should be moved after `rcons_path` as:\r\n```coq\r\nLemma path_take x p i : path x p -> path x (take i p).\r\nProof. by rewrite -{1}[p](cat_take_drop i) cat_path => /andP[->]. Qed.\r\n```\r\n@CohenCyril I'm never quite sure about the naming conventions for `path` lemmas (e.g., `cat_path` or `rcons_path`). So should this be `path_take` or `take_path?`. "
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2021-05-18T19:24:37Z",
        "comment": "Should be `take_path` (well spotted @chdoc).\r\nIndeed unary predicates usually come as a suffix in mathcomp conventions, one can argue whether `path` is unary or binary, but the rest of the library seems to consider `x` as simply an accessory parameter and the only real parameter is `p`."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2021-05-18T19:24:57Z",
        "comment": "should be `cat_sorted`"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2021-05-18T19:26:57Z",
        "comment": "Should be `take_sorted` and `drop_sorted`"
      },
      {
        "author": "chdoc",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2021-05-18T20:21:12Z",
        "comment": "Shouldn't there actually also be an `E` somewhere (e.g. `cat_sortedE`) since the name refers to the shape of the premise rather than the conclusion?"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2021-05-19T09:22:18Z",
        "comment": "@chdoc you are right about the fact this one is misnamed..., I was a bit too eager in my renaming suggestions.\r\nIt would not matter so much if there wasn't a possibly better candidate for being named `cat_sorted`, namely\r\n```coq\r\nLemma cat_sorted x y s1 s2 (s1x := rcons s1 x) (ys2 := y :: s2) :\r\n  sorted leT s1x ys2 = [&& x <= y, sorted leT s1x & sorted leT ys2].\r\n```\r\n\r\nHowever `E` lemma are usually \"elimination equation\" lemmas (taking a symbol to an equivalent definition), this is not the case here, so `car_sortedE` would also be misnamed\r\n\r\nIn this light, I suggest we'd rather name it `cat_sorted2` to signify both (2) sides of the `cat` are sorted, or that we keep `sorted_cat` even thought the name does not respect usual conventions."
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "61c41a6f77f6ed29435f81cb08c76244a49b241a",
        "message": "A few lemmas in seq.v\n\nCo-authored-by: Christian Doczkal <christian.doczkal@inria.fr>\nCo-authored-by: Cyril Cohen <cyril.cohen@inria.fr>\nCo-authored-by: Kazuhiko Sakaguchi <pi8027@gmail.com>",
        "date": "2021-05-18T10:16:33Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "a2eb2924ac56fe23c83a0985dcbfcde3f65679bf",
        "message": "A few lemmas in path.v\n\nCo-authored-by: Christian Doczkal <christian.doczkal@inria.fr>\nCo-authored-by: Cyril Cohen <cyril.cohen@inria.fr>\nCo-authored-by: Kazuhiko Sakaguchi <pi8027@gmail.com>",
        "date": "2021-05-19T11:34:44Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "cab53f0e9318306b1f1b653bb924d051c77eb639",
        "message": "A few lemmas in order.v about counting in sorted lists\n\nCo-authored-by: Cyril Cohen <cyril.cohen@inria.fr>\nCo-authored-by: Kazuhiko Sakaguchi <pi8027@gmail.com>",
        "date": "2021-05-19T11:34:44Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "7cec020bae40091868d0de063262094134fcc4a6",
        "message": "Add lemma fmorph_eq\n\nCo-authored-by: Kazuhiko Sakaguchi <pi8027@gmail.com>",
        "date": "2021-05-19T11:34:44Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "298475fea2629943e2172473d5a5cc55a18c541b",
        "message": "Add lemmas minr_rat and maxr_rat",
        "date": "2021-05-19T11:34:44Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "7063c863308464711979e682334e7543a425bdf1",
        "message": "Add lcmz\n\nCo-authored-by: Cyril Cohen <cyril.cohen@inria.fr>",
        "date": "2021-05-19T11:34:44Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "4f87255b9dcad84806311b1bf627bde1e6b645b7",
        "message": "Add lemma lez_pdiv2r",
        "date": "2021-05-19T11:34:44Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "874f6836853bc5decb1d5e7a8a4d544cfe24fe2f",
        "message": "Shorter proof + under 80 char limit",
        "date": "2021-05-19T13:12:07Z"
      }
    ]
  },
  {
    "author": "affeldt-aist",
    "number": 737,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 25,
        "deletions": 1
      },
      {
        "file": "mathcomp/ssreflect/bigop.v",
        "status": "M",
        "additions": 25,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2021-04-26T05:17:13Z",
    "update_date": "2021-04-28T07:17:39Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "7cbd81b38ffa9148f847f50b00942a41e49413f3",
        "message": "two missing bigop lemmas\n\n- found out while working on mathcomp-analysis\n\nCo-authored-by: Cyril Cohen <cohen@crans.org>",
        "date": "2021-04-26T05:15:52Z"
      }
    ]
  },
  {
    "author": "ybertot",
    "number": 736,
    "diff_summary": [
      {
        "file": "mathcomp/algebra/ssralg.v",
        "status": "M",
        "additions": 39,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2021-04-07T17:30:11Z",
    "update_date": "2021-04-07T22:22:51Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2021-04-07T18:08:04Z",
        "comment": "Please push directly in branch `hierarchy-builder` no PR needed on mathcomp in the context of the porting week."
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "ybertot",
        "committer": "ybertot",
        "hash": "6180b14fcffb8e672b2e3d7970d72fed385baaf2",
        "message": "finish all the proofs needed for building fields out of commutative rings\n\n# Conflicts:\n#\tmathcomp/algebra/ssralg.v",
        "date": "2021-04-07T17:35:04Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 735,
    "diff_summary": [
      {
        "file": ".github/workflows/nix-action.yml",
        "status": "M",
        "additions": 14,
        "deletions": 14
      },
      {
        "file": ".nix/config.nix",
        "status": "M",
        "additions": 14,
        "deletions": 14
      },
      {
        "file": ".nix/coq-nix-toolbox.nix",
        "status": "M",
        "additions": 14,
        "deletions": 14
      },
      {
        "file": "default.nix",
        "status": "M",
        "additions": 14,
        "deletions": 14
      }
    ],
    "state": "merged",
    "open_date": "2021-04-01T09:47:50Z",
    "update_date": "2021-04-01T13:34:04Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "262770d66a3bc6e3d90e2df656cf9a9130513467",
        "message": "update to last coq-nix-toolbox",
        "date": "2021-04-01T10:10:57Z"
      }
    ]
  },
  {
    "author": "ybertot",
    "number": 734,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/ssrAC.v",
        "status": "M",
        "additions": 2,
        "deletions": 2
      }
    ],
    "state": "merged",
    "open_date": "2021-03-31T15:30:03Z",
    "update_date": "2021-04-28T07:18:40Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: fix",
        "description": "PR that fixes a bug. Please refer to the appropriate issue(s) if relevant."
      }
    ],
    "commits": [
      {
        "author": "ybertot",
        "committer": "ybertot",
        "hash": "ae487c3dc7d423b1be8dff8b3ab5413ce499afbc",
        "message": "typo when writing associativity in a comment\ngrammar error in a comment",
        "date": "2021-03-31T15:24:14Z"
      }
    ]
  },
  {
    "author": "gares",
    "number": 733,
    "diff_summary": [
      {
        "file": ".github/workflows/nix-action-coq-8.13.yml",
        "status": "A",
        "additions": 11049,
        "deletions": 19524
      },
      {
        "file": ".github/workflows/nix-action-coq-8.14.yml",
        "status": "A",
        "additions": 11049,
        "deletions": 19524
      },
      {
        "file": ".github/workflows/nix-action-coq-8.15.yml",
        "status": "A",
        "additions": 11049,
        "deletions": 19524
      },
      {
        "file": ".github/workflows/nix-action-coq-8.16.yml",
        "status": "A",
        "additions": 11049,
        "deletions": 19524
      },
      {
        "file": ".github/workflows/nix-action-coq-8.17.yml",
        "status": "A",
        "additions": 11049,
        "deletions": 19524
      },
      {
        "file": ".github/workflows/nix-action-coq-master.yml",
        "status": "A",
        "additions": 11049,
        "deletions": 19524
      },
      {
        "file": ".gitignore",
        "status": "A",
        "additions": 11049,
        "deletions": 19524
      },
      {
        "file": ".gitlab-ci.yml",
        "status": "A",
        "additions": 11049,
        "deletions": 19524
      },
      {
        "file": ".nix/config.nix",
        "status": "A",
        "additions": 11049,
        "deletions": 19524
      },
      {
        "file": ".nix/coq-overlays/coquelicot/default.nix",
        "status": "A",
        "additions": 11049,
        "deletions": 19524
      },
      {
        "file": ".nix/coq-overlays/mathcomp-classical/default.nix",
        "status": "A",
        "additions": 11049,
        "deletions": 19524
      },
      {
        "file": ".nix/coq-overlays/mathcomp-single/default.nix",
        "status": "A",
        "additions": 11049,
        "deletions": 19524
      },
      {
        "file": ".nix/coq-overlays/mathcomp/default.nix",
        "status": "A",
        "additions": 11049,
        "deletions": 19524
      },
      {
        "file": ".vscode/settings.json",
        "status": "A",
        "additions": 11049,
        "deletions": 19524
      },
      {
        "file": "Dockerfile.make",
        "status": "A",
        "additions": 11049,
        "deletions": 19524
      },
      {
        "file": "coq-mathcomp-ssreflect.opam",
        "status": "A",
        "additions": 11049,
        "deletions": 19524
      },
      {
        "file": "mathcomp/Make",
        "status": "A",
        "additions": 11049,
        "deletions": 19524
      },
      {
        "file": "mathcomp/_CoqProject",
        "status": "A",
        "additions": 11049,
        "deletions": 19524
      },
      {
        "file": "mathcomp/algebra/countalg.v",
        "status": "A",
        "additions": 11049,
        "deletions": 19524
      },
      {
        "file": "mathcomp/algebra/finalg.v",
        "status": "A",
        "additions": 11049,
        "deletions": 19524
      },
      {
        "file": "mathcomp/algebra/fraction.v",
        "status": "A",
        "additions": 11049,
        "deletions": 19524
      },
      {
        "file": "mathcomp/algebra/intdiv.v",
        "status": "A",
        "additions": 11049,
        "deletions": 19524
      },
      {
        "file": "mathcomp/algebra/interval.v",
        "status": "A",
        "additions": 11049,
        "deletions": 19524
      },
      {
        "file": "mathcomp/algebra/matrix.v",
        "status": "A",
        "additions": 11049,
        "deletions": 19524
      },
      {
        "file": "mathcomp/algebra/mxalgebra.v",
        "status": "A",
        "additions": 11049,
        "deletions": 19524
      },
      {
        "file": "mathcomp/algebra/mxpoly.v",
        "status": "A",
        "additions": 11049,
        "deletions": 19524
      },
      {
        "file": "mathcomp/algebra/poly.v",
        "status": "A",
        "additions": 11049,
        "deletions": 19524
      },
      {
        "file": "mathcomp/algebra/polyXY.v",
        "status": "A",
        "additions": 11049,
        "deletions": 19524
      },
      {
        "file": "mathcomp/algebra/polydiv.v",
        "status": "A",
        "additions": 11049,
        "deletions": 19524
      },
      {
        "file": "mathcomp/algebra/rat.v",
        "status": "A",
        "additions": 11049,
        "deletions": 19524
      },
      {
        "file": "mathcomp/algebra/ring_quotient.v",
        "status": "A",
        "additions": 11049,
        "deletions": 19524
      },
      {
        "file": "mathcomp/algebra/ssralg.v",
        "status": "A",
        "additions": 11049,
        "deletions": 19524
      },
      {
        "file": "mathcomp/algebra/ssrint.v",
        "status": "A",
        "additions": 11049,
        "deletions": 19524
      },
      {
        "file": "mathcomp/algebra/ssrnum.v",
        "status": "A",
        "additions": 11049,
        "deletions": 19524
      },
      {
        "file": "mathcomp/algebra/vector.v",
        "status": "A",
        "additions": 11049,
        "deletions": 19524
      },
      {
        "file": "mathcomp/algebra/zmodp.v",
        "status": "A",
        "additions": 11049,
        "deletions": 19524
      },
      {
        "file": "mathcomp/character/character.v",
        "status": "A",
        "additions": 11049,
        "deletions": 19524
      },
      {
        "file": "mathcomp/character/classfun.v",
        "status": "A",
        "additions": 11049,
        "deletions": 19524
      },
      {
        "file": "mathcomp/character/inertia.v",
        "status": "A",
        "additions": 11049,
        "deletions": 19524
      },
      {
        "file": "mathcomp/character/integral_char.v",
        "status": "A",
        "additions": 11049,
        "deletions": 19524
      },
      {
        "file": "mathcomp/character/mxabelem.v",
        "status": "A",
        "additions": 11049,
        "deletions": 19524
      },
      {
        "file": "mathcomp/character/mxrepresentation.v",
        "status": "A",
        "additions": 11049,
        "deletions": 19524
      },
      {
        "file": "mathcomp/character/vcharacter.v",
        "status": "A",
        "additions": 11049,
        "deletions": 19524
      },
      {
        "file": "mathcomp/field/algC.v",
        "status": "A",
        "additions": 11049,
        "deletions": 19524
      },
      {
        "file": "mathcomp/field/algebraics_fundamentals.v",
        "status": "A",
        "additions": 11049,
        "deletions": 19524
      },
      {
        "file": "mathcomp/field/algnum.v",
        "status": "A",
        "additions": 11049,
        "deletions": 19524
      },
      {
        "file": "mathcomp/field/closed_field.v",
        "status": "A",
        "additions": 11049,
        "deletions": 19524
      },
      {
        "file": "mathcomp/field/cyclotomic.v",
        "status": "A",
        "additions": 11049,
        "deletions": 19524
      },
      {
        "file": "mathcomp/field/falgebra.v",
        "status": "A",
        "additions": 11049,
        "deletions": 19524
      },
      {
        "file": "mathcomp/field/fieldext.v",
        "status": "A",
        "additions": 11049,
        "deletions": 19524
      },
      {
        "file": "mathcomp/field/finfield.v",
        "status": "A",
        "additions": 11049,
        "deletions": 19524
      },
      {
        "file": "mathcomp/field/galois.v",
        "status": "A",
        "additions": 11049,
        "deletions": 19524
      },
      {
        "file": "mathcomp/field/separable.v",
        "status": "A",
        "additions": 11049,
        "deletions": 19524
      },
      {
        "file": "mathcomp/fingroup/action.v",
        "status": "A",
        "additions": 11049,
        "deletions": 19524
      },
      {
        "file": "mathcomp/fingroup/fingroup.v",
        "status": "A",
        "additions": 11049,
        "deletions": 19524
      },
      {
        "file": "mathcomp/fingroup/gproduct.v",
        "status": "A",
        "additions": 11049,
        "deletions": 19524
      },
      {
        "file": "mathcomp/fingroup/perm.v",
        "status": "A",
        "additions": 11049,
        "deletions": 19524
      },
      {
        "file": "mathcomp/fingroup/quotient.v",
        "status": "A",
        "additions": 11049,
        "deletions": 19524
      },
      {
        "file": "mathcomp/solvable/abelian.v",
        "status": "A",
        "additions": 11049,
        "deletions": 19524
      },
      {
        "file": "mathcomp/solvable/alt.v",
        "status": "A",
        "additions": 11049,
        "deletions": 19524
      },
      {
        "file": "mathcomp/solvable/burnside_app.v",
        "status": "A",
        "additions": 11049,
        "deletions": 19524
      },
      {
        "file": "mathcomp/solvable/center.v",
        "status": "A",
        "additions": 11049,
        "deletions": 19524
      },
      {
        "file": "mathcomp/solvable/cyclic.v",
        "status": "A",
        "additions": 11049,
        "deletions": 19524
      },
      {
        "file": "mathcomp/solvable/extraspecial.v",
        "status": "A",
        "additions": 11049,
        "deletions": 19524
      },
      {
        "file": "mathcomp/solvable/extremal.v",
        "status": "A",
        "additions": 11049,
        "deletions": 19524
      },
      {
        "file": "mathcomp/solvable/finmodule.v",
        "status": "A",
        "additions": 11049,
        "deletions": 19524
      },
      {
        "file": "mathcomp/solvable/frobenius.v",
        "status": "A",
        "additions": 11049,
        "deletions": 19524
      },
      {
        "file": "mathcomp/solvable/gfunctor.v",
        "status": "A",
        "additions": 11049,
        "deletions": 19524
      },
      {
        "file": "mathcomp/solvable/hall.v",
        "status": "A",
        "additions": 11049,
        "deletions": 19524
      },
      {
        "file": "mathcomp/solvable/jordanholder.v",
        "status": "A",
        "additions": 11049,
        "deletions": 19524
      },
      {
        "file": "mathcomp/solvable/maximal.v",
        "status": "A",
        "additions": 11049,
        "deletions": 19524
      },
      {
        "file": "mathcomp/solvable/nilpotent.v",
        "status": "A",
        "additions": 11049,
        "deletions": 19524
      },
      {
        "file": "mathcomp/solvable/pgroup.v",
        "status": "A",
        "additions": 11049,
        "deletions": 19524
      },
      {
        "file": "mathcomp/solvable/primitive_action.v",
        "status": "A",
        "additions": 11049,
        "deletions": 19524
      },
      {
        "file": "mathcomp/solvable/sylow.v",
        "status": "A",
        "additions": 11049,
        "deletions": 19524
      },
      {
        "file": "mathcomp/ssreflect/bigop.v",
        "status": "A",
        "additions": 11049,
        "deletions": 19524
      },
      {
        "file": "mathcomp/ssreflect/binomial.v",
        "status": "A",
        "additions": 11049,
        "deletions": 19524
      },
      {
        "file": "mathcomp/ssreflect/choice.v",
        "status": "A",
        "additions": 11049,
        "deletions": 19524
      },
      {
        "file": "mathcomp/ssreflect/eqtype.v",
        "status": "A",
        "additions": 11049,
        "deletions": 19524
      },
      {
        "file": "mathcomp/ssreflect/finfun.v",
        "status": "A",
        "additions": 11049,
        "deletions": 19524
      },
      {
        "file": "mathcomp/ssreflect/finset.v",
        "status": "A",
        "additions": 11049,
        "deletions": 19524
      },
      {
        "file": "mathcomp/ssreflect/fintype.v",
        "status": "A",
        "additions": 11049,
        "deletions": 19524
      },
      {
        "file": "mathcomp/ssreflect/generic_quotient.v",
        "status": "A",
        "additions": 11049,
        "deletions": 19524
      },
      {
        "file": "mathcomp/ssreflect/order.v",
        "status": "A",
        "additions": 11049,
        "deletions": 19524
      },
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "A",
        "additions": 11049,
        "deletions": 19524
      },
      {
        "file": "mathcomp/ssreflect/ssrAC.v",
        "status": "A",
        "additions": 11049,
        "deletions": 19524
      },
      {
        "file": "mathcomp/ssreflect/ssrnat.v",
        "status": "A",
        "additions": 11049,
        "deletions": 19524
      },
      {
        "file": "mathcomp/ssreflect/tuple.v",
        "status": "A",
        "additions": 11049,
        "deletions": 19524
      },
      {
        "file": "mathcomp/test_suite/output.v.out",
        "status": "A",
        "additions": 11049,
        "deletions": 19524
      },
      {
        "file": "mathcomp/test_suite/test_regular_conv.v",
        "status": "A",
        "additions": 11049,
        "deletions": 19524
      }
    ],
    "state": "open",
    "open_date": "2021-03-31T09:46:50Z",
    "update_date": "2023-03-09T22:57:43Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2021-03-31T13:12:16Z",
        "comment": "- [x] foo.v finished\r\n  - [ ] :construction: foo.v taken\r\n  - [ ] :white_check_mark: foo.v compiles but needs more work\r\n"
      },
      {
        "author": "gares",
        "date": "2021-06-10T09:42:32Z",
        "comment": "Nix CI is broken:\r\n\r\n> error: value is a list while a set was expected, at /home/runner/work/math-comp/math-comp/default.nix:13:1"
      },
      {
        "author": "gares",
        "date": "2021-07-22T17:30:46Z",
        "comment": "@CohenCyril is this gitlab CI pipeline a new thing?"
      },
      {
        "author": "gares",
        "date": "2021-11-15T11:44:14Z",
        "comment": "@CohenCyril @pi8027 can you check if the recent locking in rat helps this example: https://github.com/math-comp/math-comp/pull/733/commits/5e84326f5a6759b1d227f066088988e39e8538ff\r\nI suspect it just gets slowed in this branch, but that it is already problematic."
      },
      {
        "author": "proux01",
        "date": "2022-04-21T13:48:12Z",
        "comment": "Here is a squashed and rebase branch: https://github.com/math-comp/math-comp/tree/hierarchy-builder-rebased\r\n(but I cannot force push here)"
      },
      {
        "author": "proux01",
        "date": "2022-05-04T13:36:09Z",
        "comment": "Rebase force pushed, the previous state (before squashing everything) is saved in https://github.com/math-comp/math-comp/tree/hierarchy-builder-before-rebase_2022_05_04"
      },
      {
        "author": "proux01",
        "date": "2022-05-06T11:40:33Z",
        "comment": "So, here is the state of the CI:\r\n\r\n* I dropped planB\r\n* coq-dev is borken on Nix CI (I understand that https://github.com/NixOS/nixpkgs/pull/161977 should fix it)\r\n* unfortunately coq-dev is also broken on Docker CI since the lower bound for OCaml was bumped without coordinating with the maintainer of Docker images (https://coq.zulipchat.com/#narrow/stream/237656-Coq-devs-.26-plugin-devs/topic/.3E.3D.204.2E09.20and.20opam/near/280985366) hopefully, this will be fixed soon\r\n* reverse dependencies not ported yet\r\n  * analysis\r\n  * deriving\r\n  * extructures\r\n* other reverse dependencies are working out of the box or with an overlay (c.f. list of overlays at bottom of top PR description):\r\n  * abel\r\n  * addition-chains\r\n  * autosubst\r\n  * bigenough\r\n  * category-theory\r\n  * coqeal\r\n  * coq-bits\r\n  * coquelicot\r\n  * finmap\r\n  * fourcolor\r\n  * gaia\r\n  * graph-theory\r\n  * interval\r\n  * mczify\r\n  * multinomials\r\n  * odd-order\r\n  * QuickChick\r\n  * real-closed\r\n  * reglang\r\n  * verdi"
      },
      {
        "author": "ejgallego",
        "date": "2022-05-19T09:04:20Z",
        "comment": "Out of curiosity, how are compilation times affected?"
      },
      {
        "author": "proux01",
        "date": "2022-05-19T09:13:05Z",
        "comment": "Last figure I remember was nearly a factor two but @gares would know better."
      },
      {
        "author": "proux01",
        "date": "2022-05-24T09:37:42Z",
        "comment": "So, here is the state of the CI:\r\n* Coq master seems fine thanks to @CohenCyril 's branch (https://github.com/NixOS/nixpkgs/pull/173112)\r\n* only remaining broken reverse dependencies are:\r\n  * analysis\r\n  * deriving which uses universe polymorphism (c.f. https://github.com/proux01/deriving/blob/48f613b98bfe8d130431c00bac4fefa1e54576be/theories/base.v#L980-L982 ) not yet implemented in coq-elpi\r\n  * extructures which requires deriving"
      },
      {
        "author": "ejgallego",
        "date": "2022-06-14T15:11:07Z",
        "comment": "> Last figure I remember was nearly a factor two but @gares would know better.\r\n\r\nA 2x increase in compilation time seems a bit surprising (and maybe worrying) . In particular, the amount of time spent in HB code should be just a small fraction of the compilation time.\r\n\r\nIsn't that suspicious? What is the main bottleneck here.\r\n\r\nI think that Coq really needs something like HB, but if users are gonna get a 2x slowdown from it I'm not sure it is ready until it is more optimized."
      },
      {
        "author": "gares",
        "date": "2022-06-14T20:47:22Z",
        "comment": "The difference is that structures are more regular than before, and less manual tweaks. The time spent in HB commands is negligible, or close to so. The code generated is more likely to trigger bad behavior in conversion heuristics. But so far every time I did investigate a little change here or there would change the cost of a few lines of 100x, so I'm not scared, it is just about spending time on it.\r\nAnd for now the (little) energy is in cover the whole ssrnum (not far, but not there yet)."
      },
      {
        "author": "proux01",
        "date": "2022-07-22T11:09:26Z",
        "comment": "@CohenCyril you can now delete yout [hb-ssrnum](https://github.com/CohenCyril/math-comp/tree/hb-ssrnum) branch as it is integrated here\r\n\r\nAs a consequence, we had to drop support for Coq 8.13 and 8.14, this now only works with:\r\n* Coq 8.15 with HB `master` branch\r\n* Coq 8.16+rc1 with HB `master` branch\r\n* Coq master with HB `coq-master` branch"
      },
      {
        "author": "gares",
        "date": "2022-08-27T20:43:38Z",
        "comment": "can we give planB another try? (I'm too bad at nix to bring it back)"
      },
      {
        "author": "proux01",
        "date": "2022-08-29T07:37:05Z",
        "comment": "> can we give planB another try? (I'm too bad at nix to bring it back)\r\n\r\n@CohenCyril do you remember how to set this up in Nix CI? (I probably won't have time to look at it anytime soon)"
      },
      {
        "author": "proux01",
        "date": "2022-10-14T11:19:01Z",
        "comment": "@CohenCyril no hurry, but I may need your Nix expertise with the CI here:\r\n\r\n* `reglang` fails in the CI but I'm not able to reproduce the failure locally, when I type the CI command\r\n```\r\nNIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle \"coq-8.15\" --argstr job \"reglang\"\r\n```\r\non my machine the thing compiles flawlessly\r\n\r\n* `mathcomp-classical` and `mathcomp-analysis`: this works on Analysis CI (https://github.com/math-comp/analysis/pull/698) but not here, in that case I'm able to reproduce locally and it seems Nix is downloading the source of mathcomp (and not mathcomp-analysis) for mathcomp-classical and I don't understand why (I tried adding an overlay for `mathcomp-classical` but without success)"
      },
      {
        "author": "proux01",
        "date": "2022-11-04T16:28:02Z",
        "comment": "@CohenCyril timings to compile OddOrder (`make -j1` on my laptop):\r\n* without semirings: 2074.59user 18.59system 35:21.32elapsed\r\n* with semirings: 2209.54user 13.78system 37:09.35elapsed\r\n\r\nSo, that's about 6% slower.\r\n\r\n(Note: I had to add a dozen pattern selections: https://github.com/proux01/odd-order/commit/bcca2577f882cb85830dd2816f6d80a21cac558c )"
      },
      {
        "author": "gares",
        "date": "2022-11-30T10:03:34Z",
        "comment": "@pi8027 we did review some FIXME in order.v and left some comments, please look at them and decide what to do."
      },
      {
        "author": "CohenCyril",
        "date": "2022-12-01T12:13:24Z",
        "comment": "> @pi8027 we did review some FIXME in order.v and left some comments, please look at them and decide what to do.\r\n\r\nAll of these are problems that should be fixed in HB, not mathcomp."
      }
    ],
    "review_discussion": [
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/mxalgebra.v",
        "date": "2021-04-14T09:02:50Z",
        "comment": "```suggestion\r\n(* FIXME: extra unfold: Gring.unit_subdef had to be unfolded *)\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/mxpoly.v",
        "date": "2021-04-14T09:03:43Z",
        "comment": "```suggestion\r\n(* FIXME: rewrite pattern *)\r\nrewrite -[X in (X <= _)%MS]mulr1 => <-; rewrite mulrDr [p * u]mulrC addrC.\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/ssrint.v",
        "date": "2021-11-08T15:11:08Z",
        "comment": "You also need to add a `only printing` notation with the holes to preserve the printing upon simplification."
      },
      {
        "author": "gares",
        "file": "mathcomp/ssreflect/tuple.v",
        "date": "2022-11-30T09:20:31Z",
        "comment": "```suggestion\r\n```"
      },
      {
        "author": "gares",
        "file": "mathcomp/ssreflect/order.v",
        "date": "2022-11-30T09:32:03Z",
        "comment": "```suggestion\r\n#[export]\r\nHB.instance Definition _ (n : nat) (T : finPOrderType disp) :=\r\n  POrder.on (n.-tuple T).\r\n```"
      },
      {
        "author": "gares",
        "file": "mathcomp/ssreflect/order.v",
        "date": "2022-11-30T09:33:22Z",
        "comment": "```suggestion\r\n(* Transport finitude *)\r\n#[export]\r\nHB.instance Definition _ (n : nat) (T : finPOrderType disp) :=\r\n  POrder.on (n.-tuple T).\r\n#[export]\r\nHB.instance Definition _ (n : nat) (T : finLatticeType disp) :=\r\n  Lattice.on (n.-tuple T).\r\n#[export]\r\nHB.instance Definition _ (n : nat) (T : finDistrLatticeType disp) :=\r\n  DistrLattice.on (n.-tuple T).\r\n#[export]\r\nHB.instance Definition _ (n : nat) (T : finCDistrLatticeType disp) :=\r\n  CTBDistrLattice.on (n.-tuple T).\r\n```"
      },
      {
        "author": "gares",
        "file": "mathcomp/ssreflect/order.v",
        "date": "2022-11-30T09:35:56Z",
        "comment": "```suggestion\r\n(* Transport finiteness *)\r\n#[export]\r\nHB.instance Definition _ (T : finPOrderType disp1)\r\n  (T' : finPOrderType disp2) := POrder.on (T * T').\r\n```"
      },
      {
        "author": "gares",
        "file": "mathcomp/ssreflect/order.v",
        "date": "2022-11-30T09:36:37Z",
        "comment": "```suggestion\r\n(* Transport finiteness *)\r\n#[export]\r\nHB.instance Definition _ (T : finPOrderType disp1)\r\n  (T' : T -> finPOrderType disp2) := POrder.on {t : T & T' t}.\r\n```"
      },
      {
        "author": "gares",
        "file": "mathcomp/ssreflect/order.v",
        "date": "2022-11-30T09:37:10Z",
        "comment": "```suggestion\r\n(* Transport finiteness *)\r\n#[export]\r\nHB.instance Definition _ (T : finPOrderType disp1)\r\n  (T' : finPOrderType disp2) := POrder.on (T * T').\r\n#[export]\r\nHB.instance Definition _ (T : finLatticeType disp1)\r\n  (T' : finLatticeType disp2) := Lattice.on (T * T').\r\n#[export]\r\nHB.instance Definition _ (T : finDistrLatticeType disp1)\r\n  (T' : finDistrLatticeType disp2) := DistrLattice.on (T * T').\r\n#[export]\r\nHB.instance Definition _ (T : finCDistrLatticeType disp1)\r\n  (T' : finCDistrLatticeType disp2) := CTBDistrLattice.on (T * T').\r\n```"
      },
      {
        "author": "gares",
        "file": "mathcomp/ssreflect/order.v",
        "date": "2022-11-30T09:37:54Z",
        "comment": "```suggestion\r\n#[export]\r\nHB.instance Definition _\r\n  (T : tbDistrLatticeType disp1) (T' : tbDistrLatticeType disp2) :=\r\n  DistrLattice.on (T * T').\r\n```"
      },
      {
        "author": "gares",
        "file": "mathcomp/ssreflect/order.v",
        "date": "2022-11-30T09:38:08Z",
        "comment": "```suggestion\r\n#[export]\r\nHB.instance Definition _\r\n  (T : bDistrLatticeType disp1) (T' : bDistrLatticeType disp2) :=\r\n  DistrLattice.on (T * T').\r\n```"
      },
      {
        "author": "gares",
        "file": "mathcomp/ssreflect/order.v",
        "date": "2022-11-30T09:40:55Z",
        "comment": "I don't think this is easy enough to do, and it does not seem regular (the same verbosity arises in other places, and the properties of the parameters don't necessarily transfer to the container)"
      },
      {
        "author": "gares",
        "file": "mathcomp/ssreflect/order.v",
        "date": "2022-11-30T09:46:24Z",
        "comment": "Sorry for the noise, I think I misunderstood the comment"
      },
      {
        "author": "gares",
        "file": "mathcomp/ssreflect/order.v",
        "date": "2022-11-30T09:52:12Z",
        "comment": "apparently finitude is transported"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/order.v",
        "date": "2022-12-01T12:12:09Z",
        "comment": "Yes, but not automatically, this is typically an example of https://github.com/math-comp/hierarchy-builder/issues/197"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/order.v",
        "date": "2022-12-01T12:12:10Z",
        "comment": "Same, this is typically an example of https://github.com/math-comp/hierarchy-builder/issues/197"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/order.v",
        "date": "2022-12-01T12:12:15Z",
        "comment": "Same, this is typically an example of https://github.com/math-comp/hierarchy-builder/issues/197"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/order.v",
        "date": "2022-12-01T12:12:21Z",
        "comment": "Same, this is typically an example of https://github.com/math-comp/hierarchy-builder/issues/197"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/order.v",
        "date": "2022-12-01T12:12:28Z",
        "comment": "Same, this is typically an example of https://github.com/math-comp/hierarchy-builder/issues/197"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/order.v",
        "date": "2022-12-01T12:12:57Z",
        "comment": "This is a variation of https://github.com/math-comp/hierarchy-builder/issues/197 (as described in the associated zulip conversation)"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2022-12-12T15:52:13Z",
        "comment": "Why don't we remove (or keep) the phantom parameter everywhere? This `apply` does not respect the uniform inheritance condition, and type-checking terms like `RMorphism.apply _ f` (where `f` has type `{rmorphism R -> S}`) leaves the phantom argument as a unification variable."
      },
      {
        "author": "proux01",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2022-12-12T16:10:30Z",
        "comment": "The phantom parameter is indeed removed, this apply thing is only meant for some backward compatibility purpose. Maybe should it be deprecated?"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2022-12-12T16:20:39Z",
        "comment": "Now I see that `RMorphism.apply` is just a compat layer and not really used (except for Algebra Tactics). But, `RMorphism.map` is used in the definition of the `{rmoprhism R -> S}` notation below."
      },
      {
        "author": "proux01",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2022-12-12T16:24:51Z",
        "comment": "I guess we could change the notation from `{additive fUV }` to `{additive U -> V }` with appropriate levels for `U` and `V` without breaking much, but introducing this intermediary `map` just sounds easier."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2022-12-14T10:37:26Z",
        "comment": "That should indeed be possible, but `U` and `V` will be more verbose than before (which is an obvious downside of reverse coercions compared to phantom types)."
      },
      {
        "author": "proux01",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2022-12-14T11:33:36Z",
        "comment": "Indeed, so we should probably keep it as it is."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2022-12-14T15:44:14Z",
        "comment": "Then, I think we should also have the phantom parameter in the record type `RMorphism.type`. I will try to produce an example supporting this claim."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2022-12-14T16:15:54Z",
        "comment": "I managed to produce only a very artificial example, but this shows that we can lose nice notations like `{additive _}` by insertion of coercion:\r\n```coq\r\nFrom mathcomp Require Import all_ssreflect all_algebra.\r\n\r\nSection S.\r\n\r\nVariables (R S : ringType) (f : {rmorphism R -> S}).\r\n\r\nGoal False.\r\nmatch constr:(GRing.raddfD f) with\r\n  | GRing.raddfD ?f =>\r\n    let ty := type of f in idtac ty\r\nend.\r\n(*\r\nIn MathComp 1.15:\r\n{additive R -> S}\r\nIn MathComp 2.0:\r\n(GRing.Additive.type R S)\r\n*)\r\nAbort.\r\n\r\nEnd S.\r\n```"
      },
      {
        "author": "proux01",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2022-12-14T16:21:28Z",
        "comment": "Maybe we could add an only printing notation? (but at this point it might be better to craft an actual notation for `{additive R -> S}` not using the phantom type)"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2022-12-14T16:26:32Z",
        "comment": "Also, unification does not propagate the phantom parameter.\r\n```coq\r\nGoal False.\r\nevar (R' : zmodType).\r\nevar (S' : zmodType).\r\nevar (ph : phant (?R' -> ?S')).\r\nevar (f' : @Additive.map ?R' ?S' ?ph).\r\nunify (GRing.Additive.sort ?f') (GRing.RMorphism.sort f).\r\n(*\r\n  ph := ?ph : phant (R -> S)\r\n  f' := f : Additive.map (U:=R) (V:=S) ?ph\r\n  ============================\r\n*)\r\n```"
      },
      {
        "author": "proux01",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2022-12-14T16:37:12Z",
        "comment": "Ok, I'll try the notation without phantom type."
      },
      {
        "author": "proux01",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2022-12-16T08:45:17Z",
        "comment": "@pi8027 I modified the notation to remove the phantom type (or rather, use the ones provided by HB)."
      },
      {
        "author": "proux01",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2022-12-16T09:10:35Z",
        "comment": "Unfortunately, it doesn't fix your above example since we now have:\r\n```Coq\r\n(GRing.Additive.type_ R S)\r\n```\r\nThe only fix I can think of is the addition of an only printing notation:\r\n```\r\nNotation \"{ 'additive' R -> S }\" := (GRing.Additive.type_ R S) (only printing) : type_scope.\r\n```\r\n(note that then, we should also add a similar only printing notation for polynomials, matrices,...)\r\nNot sure it's worth the effort."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2022-12-16T09:20:30Z",
        "comment": "Thanks! I think that is a bug of HB. :("
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "gares",
        "committer": "proux01",
        "hash": "417b7ec9d8c04d4ac2b81f8c82aca2aff73ae364",
        "message": "Squash HB port\n\nCommit messages prior to squash below:\n\nPartial port to HB\n\nA little less than half the structures have been ported: all of\n`fingroup.v`, `presentation.v`, `morphism.v`, `ssralg.v`, `bigop.v`,\n`ssrfun.v`, `seq.v`, `choice.v`, `binomial.v`, `ssreflect.v`, `div.v`,\n`fintype.v`, `ssrbool.v`, `ssrnat.v`, `eqtype.v`, `tuple.v`,\n`fingraph.v`, `prime.v`, `path.v`, `finset.v`, `ssrnotations.v`,\n`finfun.v`, `ssrmatching.v` have been ported, including 36 structures.\n\nA third of `order.v` has been ported so far, and `generic_quotient.v`,\n`ssrAC.v` and `perm.v` are waiting to be ported: they are the files\nthat `make` fails on and are blocking for all the files that are not\nmentioned above. There may be missing features in HB to address them\nproperly but no way to identify these missing features precisely\nwithout doing the porting. Moreover since multiple failures occur in\nparallel their is a potential for multiple groups to work at the same\ntime. Hence we suggest to have a porting sprint.\n\nCo-Auhtored-By: Cyril Cohen <cyril.cohen@inria.fr>\nCo-Authored-By: Kazuhiko Sakaguchi <pi8027@gmail.com>\n\nBig refactoring\n\n- new convention: mixins are named `${PreRequsite}_Is${Addentum}`\n    e.g. + `IsZmodule` (no prerequisite)\n         + `Zmodule_IsRing` (Zmodule as a prerequisite, completing to Ring)\n- new type aliases `sub_type`, `inj_type`, `can_type` and `pcan_type`\n  which are automatically canonical and which can be used in combination\n  with `Structure.Build` (as in `Structure.Build mytype (sub_type mytype`)\n  to copy instances that are canonical on the alias, to the type itseld.\n- New notations [`Equality of ... <:]`, `[HasDecEq of _ ... <:]`, etc\n  to replace `[eqMixin of ... <:]`, etc\n- removed many detours due to bugs in HB that have been fixed now...\n\nfix compilation of order.v on 8.12.x\n\nremoving some dependencies\n\ncomment order .v in an editor friendly way\n\nwhere editor != emacs\n\nuse the right End Order, and put HB.reexport at the very end\n\nvscode: ignore files that git ignores\n\ncomment order for the sake of the demo\n\nsome work on order.v\n\nCBDistrLattice done.\n\nStart porting generic_quotient.v\n\nzmodule\n\nctbDistrLatticeType\n\nTotal\n\ncountable ring\n\nEqQuotient ported\n\nFinPOrder\n\ncomring\n\nFinLattice + FinDistrLattice.\n\nFinCDistrLattice\n\ncountalg done modulo renaming of structures\n\n- remove the C prefix\n\nFinished porting generic_quotient\n\nFinTotal\n\nPorting perm.v\n\nSomething fishy happening with two proofs that broke, have to further investigate.\n\nStarted POrderTheory\n\nRemove Admitted\n\nFinished POrderTheory\n\nPort automorphism.v\n\nPorting quotient.v\n\nssrAC done\n\nfinish countalg *** upgrade HB ***\n\nFinished TBDistrLatticeTheory\n\nTrivial stuf, up to factories.\n\ncommenting again quotient and automorphism\n\nWorking on factories.\n\nMore factories.\n\nAddition of RingQuotient and UnitRingQuotient structures\n\nStart instances over nat.\n\nremove out of date comment\n\nRecomplete names in countalg\n\nnow that math-comp/hierarchy-builder#201 is merged\n\nRremove C in module names in countalg.v\n\nClosedField was inheriting DecidableField\n\nPorting poly.v\n\nrenamings\n\npartial revert\n\nCanOrders, SubOrders and uniformization of conventions in order.v\n\nForgot to uncomment poly.v in Make\n\nPorting polydiv.v\n\nfix HB build instruction for nix\n\nAdd Zmodule_IsComRing to replace the old ComRingMixin\n\nfix CI 8.12 and 8.11 by backporting a commit to coq-elpi 1.6 and 1.8\n\nfix nix rule for HB shim\n\nStart porting fraction.v\n\nForgotten instances in poly.v\n\nThere are still the countalg one that don't work.\n\nPartly port ordered structures on product type.\n\nClose module and section properly.\n\nFinished SigmaOrder in order.v\n\nnix magic\n\nFix countRing... structures in poly.v\n\nFix equality instance in EqQuotient\n\nWorking on instances (prod order, lex order, etc) with Kazuhiko.\n\nall_ssreflect.v now compiles\n\nfinish all the proofs needed for building fields out of commutative rings\n\nFixing boolean instance and IsOrdered factory\n\nfix ring_quotient\n\nthere were some missing instances on `type_of`\nalways do `type` and copy on `type_of`\n\ncomplete(?) ring_quotient\n\nssralg documentation (wip)\n\n- following experience with ring_quotient.v, poly.v, and fraction.v\n  + btw, remove dulicate factory Zmodule_IsComRing\n- details:\n  + enforce use of historical xxxMixin notations\n    when available (ZmodMixin, RingMixin)\n  + document factories used in ring_quotient.v, poly.v, and fraction.v\n    through their Build functions:\n    - Ring_HasCommutativeMul.Build\n    - Zmodule_IsComRing.Build\n    - ComRing_HasMulInverse.Build\n    - Ring_IsIntegral.Build\n    - Zmodule_IsLmodule.Build\n    - Lmodule_IsLalgebra.Build\n    - is_ComAlgebra.Build\n\nexample on ssralg doc\n\nReexports instances in ring_quotient\n\nUnitRing.on -> ComUnitRIng.on\n\nremove local instances + restore Theory module\n\ndiagnostics in perm.v\n\nHACK: who said that by need is faster than by name?\n\nMC/master compiles with these flags\nMC/hierarchy-builder + HB *master* compiles fine\n\nthis may buy us time and unblock more files for the others\n\ncompile files after perm\n\ntests\n\nfixup perm\n\nall_fingroup compiles\n\nformat xxx.Build correctly\n\ndocument Builds in ssralg up to field excluded\n\ndocument for field in ssralg\n\nfraction.v complete\n\nssralg WIP new factory\n\nFix typos in the documentation of IsField.Build and ComRing_IsField.Build\nAdd documentation for factories for Decidable fields\nAdd documentation for a factory for algebraically closed fields\nRemove duplicate factory field_of_comring (duplicate of ComRing_IsField)\n  --> keeping the most idiomatic one.\n\nFix the HB.reexport related issues in order.v\n\nStart porting finalg.v\n\nremove redundant requirements for IsRing\n\nAdd documentation for PreZmodule.Build\n\nDone order.v except for tagnat\n\nfirst pass on order.v complete\n\nRename Ring_IsIntegral by ComUnitRing_IsIntegral and UnitRing_IsDec by Field_IsDec\n\nPorting gfunctor.v\n\nChange UnitRing_IsDec to Field_IsDec\n\nPort finalg.v\n\nStill a few issues (c.f. FIXMEs)\n\nPort commutator.v\n\nAdding doc for PreStructures in ssralg\n\nFirst pass on zmodp\n\nfix instance in zmodp\n\ncompleted first pass on zmodp\n\nunnecessary space in ssralg\n\nfix [finGroupMixin of ... for ...] notation\n\nprogress in matrix\n\nPort cyclic.v\n\nfixing finalg on top of HB PR 216\n\nsecond pass on pre-structures\n\ncenter.v ported\n\nfix the parameter of mul_comoid to avoid expansion\n\n- to preserve the semantics of rewrite\n\nprogress in matrix\n\npgroup.v ported\n\ngeseries.v done.\n\nPort nilpotent.v\n\nInsert the previous proof.\n\nprimitive_action.v ported\n\nsylow.v ported\n\nall HB.instances done in finmodule, but notations and scopes\nhave issues. some may need fixing in fingroup\n\nmatrix done\n\nOversimplified ssrnum\n\nI temporarily turned NormedZmodule norm into an absolute value, i.e.\n`normedZmodType` does not have a carrier anymore (only a display)\nand if `M : normedZmodType d`, the norm operator now has type `norm : M -> M`\ninstead of `norm : M -> R` (where `R` used to be a parameter of normedZmodType)\n\nThis makes the rest of the file (and mathcomp) portable.\nWhenever you port, please **comment out** the erased parameter `R` of normedZmodType\nrather than simply removing it...\n\nuncomment matrix + remove verbose\n\nAdding new mixin for\n\nmxalgebra done.\n\nuniform and export group instances in finalg\n\nfix finalg notations on structures with parameters\n\nForgotten Bind Scope in ssralg\n\nMinor fixes\n\njordanholder.v ported\n\n- addition of a newMixin notation\n\nFinished mxpoly\n\nOne occurrence selector had to be made explicit, but it was already strange in\nthe master branch.\n\npolyXY was not broken\n\nalt compiles\n\nburnside_app.v ported\n\nsome missing instances for regular R^o\n\nabelian\n\nsolvable\n\nStart porting ssrnum.v\n\nhall\n\nfix jordanholder\n\nFix subMixn and newMixin\n\nFirst port of vector.v\n\nUpdate subtype instances in vector.v.\n\nPort ssrnum.v\n\nwip extremal, perf problem identified but not solved\n\nCompile ssrnum.v\n\nPort frobenius.v\n\nStart porting ssrint.v\n\nfirst pass on rat\n\nForgotten exports in ssrnum.v\n\nPort intdiv.v\n\nStuck in interval\n\nFirst pass on interval\n\ninterval in Make\n\nCompile all_algebra.v\n\nStart porting closed_field.v\n\nKill one missing Canonical in vector.v.\n\nPort falgebra.v\n\nA few things not ported (waiting for port in Vector).\n\nuse HB.exxport to avoid relying on generated names *** update HB ***\n\nForgotten Bind Scope in vector.v\n\nDon't bind scope order_scope\n\nMaybe not the right solution but it wasn't binded before\nso this is more backward compatible and should ease the port.\n\nStarting character : mxrepresentation\n\nFix ssrint.v\n\nPort mxabelem.v\n\nstart fieldext\n\n- but quickly stopped in part for lack of subvs\n\ndoc fix\n\nfinish extremal\n\nadd a Bind Scope group_scope for finite groups\n\nscope fix thanks to Yves\n\ndisplaying `mulg` in the right way\n\nscope fix thanks to Yves\n\nPort extraspecial.v\n\nPorting some algebra instances, the last one segfaults.\n\nWorkaround segfault/stack overflow\n\nRemove some FIXMEs in falgebra.v\n\nuse HB.lock *** upgrade HB ***\n\nnew toolbox version\n\nPort subvs_of in vector.v\n\nbetter toolbox\n\nComplete falgebra.v\n\nPort fieldext.v\n\nPort separable.v\n\nUpdate mathcomp/algebra/mxalgebra.v\n\nUpdate mathcomp/algebra/mxpoly.v\n\nGalois compiles\n\nStill a FIXME\n\nRemove a FIXME in vector (by Cyril)\n\nstarted porting algebraics_fundamentals\n\nFix Hints in ssrnum.v\n\ndocuments the first factory in eqtype, removes uses of EqMixin in the library\n\nComplete regular instances R^o in finalg.v\n\nCodification of FIXMEs\n\nsave planB sources as an artifact\n\nfix nix\n\nMissing instance of FieldExt on regular F^o\n\nSecond pass of algebraic_fundamentals. It compiles but need fixing\n\nFixing indentation\n\ncomment the third Build\n\nFirst pass on algC, it compiles but not sure it is ok\n\nremove Print\n\nSome fixing so algnum compiles\n\nstarting classfun\n\nstuck at the construction of an algebra, where I have no nice way to\ngive the underlying ring\n\nwork around inefficiency in mxalgebra\n\nFirst pass on finfield\n\nSecond pass on classfun : it compiles\n\nFirst pass on character\n\nremove a Check\n\nremove a verbose\n\nnothing to do for inertia\n\nintegral_char goes through\n\n- modulo standard FIXMEs\n\nvcharacter goes through\n\n- module one standard FIXME\n\nall.v\n\nattempt to fix planB\n\nExport normCK\n\nRevert \"attempt to fix planB\"\n\nThis reverts commit d7616c05fc2002027cf4e9d372984df95562e87c.\n\nuse #[infer] in structure FieldExt\n\nfix one more fieldExt\n\nsilly optim\n\nimprove fix\n\neven better fix\n\nbugfix and simplifications\n\nFix mxrepresentation Canonical subType + rVval\n\nremoving some workarounds\n\nsmall simplification in poly\n\nVarious simplifications\n\nidentify (but not fix) perf issue\n\nlock matrix operations hard\n\nlocking\n\nlock separable\n\ncoq-elpi master\n\nfixup\n\nCI: fail-fast = false\n\nCI: do not run on 8.12 and 8.11\n\nlock character.cfDet\n\ngo back to regular \"kernel term sharing\" except for extreme/special groups\n\noptimize algebraic_fundamentals using let in for mixins\n\nspeedup perm by locking porbit\n\nlock generated group\n\nlock set1\n\nThe real thing would be to lock group1. The problem is that\nhints like `x \\in setT` diverge on goals like `1%g \\in 1%G`\nsince the the 1%G of the quotient group is large, and\nsetT = fun _ => true while (mem 1%G) = fun _ => eq_op x\nand Coq tries hard to see if the eq_uo of the quotient group\nis the constant function. I could not lock oneg, but set1 was\nok thanks to the inE \"abstraction\"\n\nmxabelem fixup\n\nSeveral fixes\n\n- fix several local packs\n- (eq|choice|count)Mixin -> factory\n- several global renamings\n- reorganize finalg\n- remove some raw HB.instance\n- fix finfield\n- removed superfluous content\n- use short name attributes\n- various fixes and optims\n\ntwo missing bigop lemmas\n\n- found out while working on mathcomp-analysis\n\nCo-authored-by: Cyril Cohen <cohen@crans.org>\n\ntypo when writing associativity in a comment\ngrammar error in a comment\n\ncompressing some coercions\n\nfixed broken unfold\n\nfixed GRing.unit to avoid stackoverflow\n\nfix extra unfolds\n\nissue in rat unrelated to HB\n\nswtich back to master\n\nnix update\n\nexplicit NFI\n\nuse master\n\nupdate toolbox\n\n1 line attributes, to help planB on 8.13\n\none line attributes in vector\n\nfix deprecation warnings in ssralg\n\none line attributes in galois.v to help planB on 8.13\n\nnix\n\ncleanup\n\nswitch to HB.pack\n\nignore timing files\n\nfix planB\n\nlock mxrank\n\noptim\n\nlocalize the need for unsetting term sharing\n\naestetic change\n\ncleanup/speedup mxrepresentation\n\nfix nix\n\nlock enum_rank_in, helps classfun\n\nuse #[hnf] in gproduct\n\nfix ssrint.IntDist.`| _ - _ | notation by specializing it to int\n\nfixup previous commit\n\nfix notation [vecType of]\n\nspeedup in OOthm\n\nfix missing exports\n\nrat is slow\n\nCo-authored-by: Reynald Affeldt <reynald.affeldt@aist.go.jp>\nCo-authored-by: Xavier Allamigeon <xavier.allamigeon@inria.fr>\nCo-authored-by: Yves Bertot <Yves.Bertot@inria.fr>\nCo-authored-by: Quentin Canu <qcanu17@gmail.com>\nCo-authored-by: Cyril Cohen <cohen@crans.org>\nCo-authored-by: Marie Kerjean <43064157+mkerjean@users.noreply.github.com>\nCo-authored-by: Pierre Roux <pierre.roux@onera.fr>\nCo-authored-by: Kazuhiko Sakaguchi <pi8027@gmail.com>\nCo-authored-by: Enrico Tassi <Enrico.Tassi@Inria.fr>\nCo-authored-by: thery <Laurent.Thery@inria.fr>\nCo-authored-by: Anton Trunov <anton.a.trunov@gmail.com>",
        "date": "2023-03-09T18:11:50Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "453c4ffd75c69dd086aec12db5ec2fcf9f0ca5f7",
        "message": "\"Fix\" test-suite",
        "date": "2023-03-09T18:11:50Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "552d9c678f72f7e264846e1ba1fdf49d4af2cf0e",
        "message": "Export ltEsub and leEsub",
        "date": "2023-03-09T18:11:50Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "0de038b8e6fe90c00ca93204adadbc0f0021149a",
        "message": "Update CI",
        "date": "2023-03-09T18:11:50Z"
      },
      {
        "author": "CohenCyril",
        "committer": "proux01",
        "hash": "368518975e46ed2e3220083e29c7a9fef146de27",
        "message": "Progress in ssrnum",
        "date": "2023-03-09T18:11:50Z"
      },
      {
        "author": "CohenCyril",
        "committer": "proux01",
        "hash": "7f6e2bd56e5238ece59202604a1c9f9dc3f20f9a",
        "message": "fix ssrnum",
        "date": "2023-03-09T18:11:50Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "9864e2c2ec82128ccc426749e846d6f6f730e809",
        "message": "NormedZmodule only requires a Zmodule",
        "date": "2023-03-09T18:11:50Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "33da36fc6159c26734fe4ed91fd7a71f191c66e3",
        "message": "Ssrnum requires HB master which requires Coq >= 8.15",
        "date": "2023-03-09T18:15:20Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "0a42c2cee9fad7feec0f9fc8862badda8e4fb72d",
        "message": "[CI] Switch to fun_instances branch of HB for Coq 8.15",
        "date": "2023-03-09T18:15:20Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "7db92f65e31bc02d6264032f945d1f9634474c32",
        "message": "[CI] Update HB branches",
        "date": "2023-03-09T18:15:20Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "27866bc533d6858b92514d5421e87b86cb0ed5d1",
        "message": "[CI] Test Analysis port to HB",
        "date": "2023-03-09T18:15:20Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "e364cb64d8c4e732601e6dbce821280367db74aa",
        "message": "Port to HB the Monoid hierarchy in bigop.v",
        "date": "2023-03-09T18:15:20Z"
      },
      {
        "author": "affeldt-aist",
        "committer": "proux01",
        "hash": "04dd9c7c66e0c20da8b273390ead56a56e6e13c7",
        "message": "_Is -> _is; _Has -> _has",
        "date": "2023-03-09T18:15:20Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "cd2eb645e1f2f43b4b5c588a0c870f7f39011d3b",
        "message": "Others Is -> is and Has -> has",
        "date": "2023-03-09T18:15:20Z"
      },
      {
        "author": "affeldt-aist",
        "committer": "proux01",
        "hash": "800da128d864127ab82dbb84cb9df14e47f1f904",
        "message": "fix naming",
        "date": "2023-03-09T18:15:20Z"
      },
      {
        "author": "affeldt-aist",
        "committer": "proux01",
        "hash": "3a4042aadf9fd2d812a38cd6134127ead40bdd55",
        "message": "SUB -> Sub",
        "date": "2023-03-09T18:15:20Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "befd978d70b8ac820b8da2837b77c9bc3fdb9f2a",
        "message": "More Is -> is, Has -> has",
        "date": "2023-03-09T18:15:20Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "14dc526ba29256c86a6182922a0e56d7b9befd0a",
        "message": "Port morphism hierarchy to HB\n\nStill a non forgetful inheritance issue in ssralg.v.\nWill also require a cleaning once HB.pack will be available for functions.",
        "date": "2023-03-09T18:15:20Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "f22f50c324b3aa8e3bb0cb32c43111c55535a687",
        "message": "Adapt to Coq 8.15 (no reversible coercions)",
        "date": "2023-03-09T18:15:20Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "8f4ae0ced2b9b19b516fd6edfb5086d6dc55c8ff",
        "message": "[CI] Update nix toolbox",
        "date": "2023-03-09T18:15:20Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "bc4e3f20cd27f3253c6116377bcb973af031a1d4",
        "message": "Port stability predicates hierarchy to HB\n\nA few details could still be cleaned up.",
        "date": "2023-03-09T18:15:20Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "f205e1d512650334c6379be389ef89e24ba14d0e",
        "message": "[CI] Typo in odd-order branch name",
        "date": "2023-03-09T18:15:20Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "f1148ca4889a14376e76a2a623ee501e8259348e",
        "message": "Use HB.pack",
        "date": "2023-03-09T18:15:20Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "f5e00ea86c66bcff27921ae87543e47af1828abf",
        "message": "Add compound factories",
        "date": "2023-03-09T18:15:20Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "8a21dbbf31f5b9abda0876cd2e518fe737f3512d",
        "message": "Adapt to math-comp/hierarchy-builder/pull/311",
        "date": "2023-03-09T18:15:20Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "9df76c3e2be56aae07a7c6174623596319de5175",
        "message": "Add non_forgetful_inheritance attribute\n\nAdditive and Scale are not on the same type so it seems hard to have\nany of the two embed the other.",
        "date": "2023-03-09T18:15:20Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "2006bc15a521d0e70879295038314f714ccfccd7",
        "message": "Fix warnings",
        "date": "2023-03-09T18:15:20Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "334c01467333417abc88d4c5a4a19654ac40c319",
        "message": "Attempt to port linearZ (failed)\n\nlinearZ still requires some additional /= before it\n(see the FIXME in mxpoly.v for instance).",
        "date": "2023-03-09T18:15:20Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "76f03acde562fb2bd16e202fad9b089488e790a4",
        "message": "Port forgotten instances",
        "date": "2023-03-09T18:15:20Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "5d14bfdf3aeacceb1d27c016e017a0fa8a53de80",
        "message": "[CI] Update Coq Nix toolbox",
        "date": "2023-03-09T18:15:20Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "78b3458ce3f9283a164fab5c87b514099b5fa5ed",
        "message": "Fix FIXMEs",
        "date": "2023-03-09T18:15:20Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "a251e95f92b09872da350bc3778a16848c26e76b",
        "message": "Simplify overlays",
        "date": "2023-03-09T18:15:20Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "348be1973858f73f06606140df30b093b9542ae5",
        "message": "Add SemiGroup to the Monoid hierarchy",
        "date": "2023-03-09T18:15:20Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "4b46be5902e3200e972028fe2687a53ec6460d03",
        "message": "Use type_scope in clone notations",
        "date": "2023-03-09T18:15:20Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "bf0436ad1c929fd8c8d8a80488ec43783d72a8f3",
        "message": "Add to morphisms an apply with phantom types\n\nThere was one in MathComp 1",
        "date": "2023-03-09T18:15:20Z"
      },
      {
        "author": "CohenCyril",
        "committer": "proux01",
        "hash": "b076e841923aeaa6170b9890bb6573d6498dead0",
        "message": "Finite canonicals on pcan_type and can_type",
        "date": "2023-03-09T18:15:20Z"
      },
      {
        "author": "gares",
        "committer": "proux01",
        "hash": "ce9ae84d381d83806260591bcfd986372609fa93",
        "message": "Update mathcomp/ssreflect/tuple.v",
        "date": "2023-03-09T18:15:20Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "954d671c06f8670c6576cef68f579788c0a89c5d",
        "message": "Remove no longer needed Identity Coercion\n\nThis works at least with HB 1.4.0",
        "date": "2023-03-09T18:15:20Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "d590abbaa7e31b9664996cef5def3261f650eacf",
        "message": "Actually remove Identity Coercion",
        "date": "2023-03-09T18:15:20Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "3b380893145e2e752ae7d5d71ec5bbf7a25aa21c",
        "message": "Fix a TODO",
        "date": "2023-03-09T18:15:20Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "87f81c20306268ccaf5cad4b0fe36b933ec6f9ad",
        "message": "Restore tests in test_regular_conv.v",
        "date": "2023-03-09T18:15:20Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "3de5ed1714fa457fe93a3a97bded6f27425c7337",
        "message": "Remove phantom in notations for morphism types",
        "date": "2023-03-09T18:15:20Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "4ad304ef9260c99222d5208708279187c597abfa",
        "message": "Fix a slowdown in polyXY.v",
        "date": "2023-03-09T18:15:20Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "7ef9d56f9616650398d7887834e9c791a20bf8a8",
        "message": "Improve slowdown in closed_field.v",
        "date": "2023-03-09T18:15:20Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "1ed47aa9d1f572fb54738ebf6c9615225ebb0b0f",
        "message": "Improve slowdown in galois.v",
        "date": "2023-03-09T18:15:20Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "204c3b07ab6869e6cf9e8ef53b724672b8227723",
        "message": "Improve slowdown in finfield.v",
        "date": "2023-03-09T18:15:21Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "ff6fab45dfa14ba3ad01a46e27b9a38bd6648168",
        "message": "Fix slowdowns in mxrepresentation.v",
        "date": "2023-03-09T18:15:21Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "0f54cba3bac07662084397781baef56d980dd7ac",
        "message": "Fix slowdowns in mxalgebra.v",
        "date": "2023-03-09T18:15:21Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "bf8388aad5a18514ec5a055cb81d7201f1b49017",
        "message": "Improve slowdowns in matrix.v",
        "date": "2023-03-09T18:15:21Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "8208c9462facc2c6cc23958a48f93e97b80c88e4",
        "message": "Fix slowdown in mxabelem.v",
        "date": "2023-03-09T18:15:21Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "90545a56a0c3f6d25ffe0ea325f29a76ab4ffdaa",
        "message": "Fix a slowdown in fieldext.v",
        "date": "2023-03-09T18:15:21Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "eb4e9a37934895aa2946860b326d355cbfced7d0",
        "message": "Remove old FIXME",
        "date": "2023-03-09T18:15:21Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "d8da6f0462fd8104e28bc6c4055557c5bb7e476d",
        "message": "Fix name of is_ComAlgebra factory",
        "date": "2023-03-09T18:15:21Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "3dee76e234e8bf69e0dfdebec2cb4917034c59ae",
        "message": "Remove an old FIXME",
        "date": "2023-03-09T18:15:21Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "32340e53a8bd0845905d67dd1a4caec4a7b82dfc",
        "message": "Add missing factory",
        "date": "2023-03-09T18:15:21Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "e3afda4c37e0622f3f6533b7b26d596856783f3c",
        "message": "Link HB issues in FIXMEs",
        "date": "2023-03-09T18:15:21Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "b9cbfb1125de9cdaf8c2ecca53576ed3ea0be976",
        "message": "Add zsemimodType\n\nIn preparation of adding semirings.",
        "date": "2023-03-09T18:15:21Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "09db2ade374f963f1c630ed841e0663f8583467f",
        "message": "Add semiRingType",
        "date": "2023-03-09T18:15:21Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "28d97abf8877c2ac081d35b5d8ff509e8d14f278",
        "message": "Add SemiAdditive to the ring morphism hierarchy",
        "date": "2023-03-09T18:15:21Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "b98aa65e8f02cb66124f4907e53a8dc7e55fa924",
        "message": "Add SRMorphism to the ring morphism hierarchy",
        "date": "2023-03-09T18:15:21Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "b2b5ab3d1a1d629f541fd62c89156c2a1a940c72",
        "message": "Add SubZsemimodule",
        "date": "2023-03-09T18:15:21Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "a40837048344c3dfd95644509384a60c1de3057c",
        "message": "Add SubSemiRing",
        "date": "2023-03-09T18:15:21Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "0240282386d41769a7033432047e96e8d2d61390",
        "message": "Generalize poly to semirings",
        "date": "2023-03-09T18:15:21Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "3ffa0d1388099e47e6fc6d6c39448c80bc5dcdc0",
        "message": "Generalize matrices to Zsemimodule",
        "date": "2023-03-09T18:15:21Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "9fff150500953a49386a1b89d00cb4132270305e",
        "message": "Generalize matrix to SemiRing",
        "date": "2023-03-09T18:15:21Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "2787cabfc86b89aab274ebe53e6b803d5a541009",
        "message": "Add TLattice structure",
        "date": "2023-03-09T18:15:21Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "64e590d046f7e53351812d10c7754a385ba483e9",
        "message": "Add order morphism hierarchy",
        "date": "2023-03-09T18:15:21Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "cf990d4690dfc5edd3c10dc2f613609ea1232772",
        "message": "Add Lattice predicate closedness hierarchy",
        "date": "2023-03-09T18:15:21Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "4654e620cc34d361895ca5698ab29df797fbac1c",
        "message": "Add suborder hierarchy",
        "date": "2023-03-09T18:15:21Z"
      },
      {
        "author": "CohenCyril",
        "committer": "proux01",
        "hash": "7179a3f2a6047eb7c97dbbf7815f04deeb2fa65b",
        "message": "Renaming misnamed factories and eliminating explicit packs",
        "date": "2023-03-09T18:15:21Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "9081d5e76a17254c50762267aba7f686421fdbfc",
        "message": "Forgotten export\n\nThis was forgotten two commits before.",
        "date": "2023-03-09T18:15:21Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "1942e086ace475e6e7704ae68259a6b5f8963fc7",
        "message": "Add MeetLatticeMorphism and JoinLatticeMorphism",
        "date": "2023-03-09T18:15:21Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "9d2932f942c90b7374496ca5c9b498cfe77da4f5",
        "message": "Add MeetLatticeClosed and JoinLatticeClosed",
        "date": "2023-03-09T18:15:21Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "509f44ff1959a74a3bc0e6a541aefd2245492b3c",
        "message": "Add MeetSubLattice and JoinSubLattice",
        "date": "2023-03-09T18:15:21Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "461cc3330aa3de574a0b8b66f3a24ec36be3d3c4",
        "message": "cleanup",
        "date": "2023-03-09T18:15:21Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "27eab9c8ef8813cf7b0d8cfca86bce97d8ca7321",
        "message": "Add missing joins in suborder hierarchy",
        "date": "2023-03-09T18:15:21Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "a41f4d9a1dadbe384fd25f22c6d75cb41b7ebe52",
        "message": "[CI] Update Nix toolbox",
        "date": "2023-03-09T18:17:58Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "77098d921abf3419bb1f2b779c9fe8256959286a",
        "message": "Remove two fixmes",
        "date": "2023-03-09T18:17:58Z"
      },
      {
        "author": "gares",
        "committer": "proux01",
        "hash": "8945996444700a0b9b7da0af72471da437b4618c",
        "message": "fix for 8.17, assumption is likely to be stronger",
        "date": "2023-03-09T18:17:58Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "b26a034dc4ab0b690c62f110960bfafdd6669f5d",
        "message": "Fix notation `|_ - _|",
        "date": "2023-03-09T18:17:58Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "ef7e118c995b110879e2fbd645e1c6372d2b4f74",
        "message": "Drop support for Coq 8.15",
        "date": "2023-03-09T18:21:21Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "c7e258a5db404d5fdeb133fb937e9c580e6a12bd",
        "message": "[CI] Add coquelicot overlay",
        "date": "2023-03-09T22:57:30Z"
      }
    ]
  },
  {
    "author": "affeldt-aist",
    "number": 732,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 17,
        "deletions": 0
      },
      {
        "file": "mathcomp/algebra/ssrint.v",
        "status": "M",
        "additions": 17,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2021-03-29T08:16:43Z",
    "update_date": "2021-05-28T08:31:46Z",
    "discussion": [
      {
        "author": "pi8027",
        "date": "2021-05-26T11:41:32Z",
        "comment": "To make sure these lemmas are not misnamed, let's summon @CohenCyril anyway."
      }
    ],
    "review_discussion": [
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/ssrint.v",
        "date": "2021-05-04T10:58:17Z",
        "comment": "```suggestion\r\nProof. by case: (intP m). Qed.\r\n```\r\nor\r\n```suggestion\r\nProof. by rewrite abszE ler_norm. Qed.\r\n```"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/ssrint.v",
        "date": "2021-05-04T11:20:26Z",
        "comment": "I think that the following lemma could substitute the use of the above lemmas:\r\n```coq\r\nGoal forall (R : numDomainType) (i : int), `|i|%:R = `|i|%:~R :> R.\r\nProof. by move=> R i; rewrite -abszE. Qed.\r\n```\r\nor, more generally\r\n```coq\r\nGoal forall (R : numDomainType) (x : R) (i : int), x *+ `|i| = x *~ `|i|.\r\nProof. by move=> R x i; rewrite -abszE. Qed.\r\n```"
      },
      {
        "author": "affeldt-aist",
        "file": "mathcomp/algebra/ssrint.v",
        "date": "2021-05-07T11:34:42Z",
        "comment": "> I think that the following lemma could substitute the use of the above lemmas:\r\n\r\nI have been told that we could have them all. @CohenCyril \r\n`xyz_norm` lemmas have easy-to-search names, whereas the generic ones look like low-level manipulation of notations."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/ssrint.v",
        "date": "2021-05-07T17:38:55Z",
        "comment": "Another issue is that `` `|_| `` in these statements are not `GRing.norm` but `absz` and thus their current names seem wrong. I think we could copy almost any lemma involving `GRing.norm` that applies to `int` in this way, but I'm not sure if that's what we want."
      },
      {
        "author": "affeldt-aist",
        "file": "mathcomp/algebra/ssrint.v",
        "date": "2021-05-18T10:41:21Z",
        "comment": "> Another issue is that `` `|_| `` in these statements are not `GRing.norm` but `absz` and\r\n> thus their current names seem wrong.\r\n\r\nIndeed, but the name `gez0_abs` is already taken :-/. To me, the \"_norm\" prefix looked appropriate\r\nfor a lemma intended to be used with a `numDomainType`.\r\n\r\n> I think we could copy almost any lemma involving `GRing.norm` that applies to `int` in this way,\r\n> but I'm not sure if that's what we want.\r\n\r\nIndeed. Rewriting with `gez0_abs` in a context with `numDomainType` still looks cumbersome to me though.\r\n\r\n\r\n"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/ssrint.v",
        "date": "2021-05-26T03:13:03Z",
        "comment": "If you point me out where you need these lemmas, I will try to propose a fix for that.\r\n\r\n@CohenCyril What do you think?"
      },
      {
        "author": "affeldt-aist",
        "file": "mathcomp/algebra/ssrint.v",
        "date": "2021-05-26T03:54:43Z",
        "comment": "These lemmas are used in https://github.com/math-comp/analysis/blob/lebesgue_measure/theories/measure_wip.v.\r\n\r\nNB: they are part of code under refactoring."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/ssrint.v",
        "date": "2021-05-26T12:05:52Z",
        "comment": "In both these lemmas, the LHS is about `abs` not `norm`, moreover the name for the operation `*+` is `natmul` and the shape `mulr*n` or `mulrn*` is wildely use for lemmas about this (e.g. `mulrIn`) and for `%:R` it is `natr` (as in `natrD` etc), so I'd pick the following names: `mulr_absz` and `natr_absz`."
      }
    ],
    "tags": [
      {
        "tag": "kind: enhancement",
        "description": "Issue or PR about addition of features."
      }
    ],
    "commits": [
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "8fe3f5512f623e4778d4351228f9f3062a5fd3c0",
        "message": "add lemmas about absz\n\nCo-authored-by: Kazuhiko Sakaguchi <sakaguchi@coins.tsukuba.ac.jp>\n\nCo-authored-by: Cyril Cohen <Cyril.Cohen@inria.fr>",
        "date": "2021-05-27T04:50:59Z"
      }
    ]
  },
  {
    "author": "chdoc",
    "number": 731,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 170,
        "deletions": 3
      },
      {
        "file": "mathcomp/ssreflect/finset.v",
        "status": "M",
        "additions": 170,
        "deletions": 3
      }
    ],
    "state": "merged",
    "open_date": "2021-03-26T13:04:56Z",
    "update_date": "2021-08-30T01:03:55Z",
    "discussion": [
      {
        "author": "chdoc",
        "date": "2021-07-07T10:27:10Z",
        "comment": "I just pushed some more simplifications (mainly the proof of `partition_pigenhole`); made use of the brand new `/[! _ ]` feature. I also chose to deprecate `bigcup_disjoint`, because it is merely one direction of the new `bigcup_disjointP` view lemma. Are such deprecations added to the CHANGELOG? If so, where? "
      },
      {
        "author": "chdoc",
        "date": "2021-08-25T13:50:04Z",
        "comment": "Fixed, and rebased/squashed. "
      },
      {
        "author": "chdoc",
        "date": "2021-08-29T19:19:25Z",
        "comment": "@affeldt-aist , @CohenCyril, is there something left to be done, or can someone press the merge button? "
      }
    ],
    "review_discussion": [
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/finset.v",
        "date": "2021-08-03T12:19:36Z",
        "comment": "```suggestion\r\nLemma bigcup_disjoint U P F :\r\n```\r\nI'd keep it, because it allows for `rewrite bigcup_disjoint`, which has no equivalent with `bigcup_disjointP`, unless you had a 3-step renaming in mind?"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/finset.v",
        "date": "2021-08-03T12:26:10Z",
        "comment": "```suggestion\r\n  (forall i : I, J i -> B i != set0) -> partition P (cover P) /\\ {in J &, injective B}.\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/finset.v",
        "date": "2021-08-03T12:26:23Z",
        "comment": "```suggestion\r\nmove=> P disjB inhB; have s0NP : set0 \\notin P.\r\n```"
      },
      {
        "author": "chdoc",
        "file": "mathcomp/ssreflect/finset.v",
        "date": "2021-08-16T08:50:53Z",
        "comment": "I'm not sure I agree with this. If one adds the \"customary implicits\" (`Arguments bigcup_disjointP {T I U P F}.`) then `rewrite bigcup_disjoint` can be replaced by `rewrite (introT bigcup_disjointP)`. Without it one needs some parentheses and `_`. So in the unlikely case that this is really desirable, it can be done. And doesn't this argument apply to almost all reflection lemmas?"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/finset.v",
        "date": "2021-08-30T09:04:51Z",
        "comment": "This equations looks to me like it should be the other way around"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/finset.v",
        "date": "2021-08-30T09:05:02Z",
        "comment": "Same (other way around?)"
      },
      {
        "author": "chdoc",
        "file": "mathcomp/ssreflect/finset.v",
        "date": "2021-08-30T13:44:28Z",
        "comment": "Hmm, I agree, but @affeldt-aist already merged this. :flushed: "
      },
      {
        "author": "affeldt-aist",
        "file": "mathcomp/ssreflect/finset.v",
        "date": "2021-08-30T14:06:04Z",
        "comment": "My bad. Maybe a new, small fix-PR?"
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "chdoc",
        "committer": "chdoc",
        "hash": "605e2f238aea888d6259cd8d16ec097b8f067d30",
        "message": "lemmas on bigcup, trivIset, and partition",
        "date": "2021-08-25T13:44:40Z"
      }
    ]
  },
  {
    "author": "gares",
    "number": 730,
    "diff_summary": [
      {
        "file": "mathcomp/algebra/ssralg.v",
        "status": "M",
        "additions": 10,
        "deletions": 10
      },
      {
        "file": "mathcomp/fingroup/fingroup.v",
        "status": "M",
        "additions": 10,
        "deletions": 10
      },
      {
        "file": "mathcomp/ssreflect/choice.v",
        "status": "M",
        "additions": 10,
        "deletions": 10
      },
      {
        "file": "mathcomp/ssreflect/eqtype.v",
        "status": "M",
        "additions": 10,
        "deletions": 10
      },
      {
        "file": "mathcomp/ssreflect/finfun.v",
        "status": "M",
        "additions": 10,
        "deletions": 10
      },
      {
        "file": "mathcomp/ssreflect/finset.v",
        "status": "M",
        "additions": 10,
        "deletions": 10
      },
      {
        "file": "mathcomp/ssreflect/fintype.v",
        "status": "M",
        "additions": 10,
        "deletions": 10
      },
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 10,
        "deletions": 10
      },
      {
        "file": "mathcomp/ssreflect/ssrnat.v",
        "status": "M",
        "additions": 10,
        "deletions": 10
      },
      {
        "file": "mathcomp/ssreflect/tuple.v",
        "status": "M",
        "additions": 10,
        "deletions": 10
      }
    ],
    "state": "merged",
    "open_date": "2021-03-25T17:56:44Z",
    "update_date": "2021-03-29T08:12:07Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "gares",
        "committer": "gares",
        "hash": "75c59936dee6a6a3cd09cb028cb3fa229c5f72a0",
        "message": "Require HB before any MC module",
        "date": "2021-03-25T17:57:56Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 729,
    "diff_summary": [],
    "state": "merged",
    "open_date": "2021-03-23T12:35:33Z",
    "update_date": "2021-03-23T13:03:02Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [
      {
        "tag": "needs: rebase",
        "description": "PR which is not rebased: check the target is appropriate (generally master) and rebase on top of it."
      }
    ],
    "commits": []
  },
  {
    "author": "jouvelot",
    "number": 728,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/path.v",
        "status": "M",
        "additions": 1,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2021-03-23T11:57:17Z",
    "update_date": "2021-03-24T00:51:35Z",
    "discussion": [],
    "review_discussion": [
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2021-03-23T13:14:53Z",
        "comment": "Could you also remove a space character? (80 characters per line restriction)\r\n```suggestion\r\n(*    simultaneously generates an equation x = last x0 p1.                    *)\r\n```"
      }
    ],
    "tags": [
      {
        "tag": "kind: documentation",
        "description": "Issue or PR about documentation mistakes, deficiencies, enhancements, ..."
      },
      {
        "tag": "kind: fix",
        "description": "PR that fixes a bug. Please refer to the appropriate issue(s) if relevant."
      }
    ],
    "commits": [
      {
        "author": "jouvelot",
        "committer": "web-flow",
        "hash": "6d51f94b218cae4bd51ba268eff90b7c38c8f627",
        "message": "Update path.v\n\nTypo in documentation.",
        "date": "2021-03-23T11:55:54Z"
      },
      {
        "author": "jouvelot",
        "committer": "web-flow",
        "hash": "7fa73806c771ad682d0bdca6de01f8d51e1462d1",
        "message": "Update mathcomp/ssreflect/path.v\r\n\r\nSure. Thanks.\n\nCo-authored-by: Kazuhiko Sakaguchi <pi8027@gmail.com>",
        "date": "2021-03-23T13:16:30Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 727,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 241,
        "deletions": 183
      },
      {
        "file": "mathcomp/ssreflect/order.v",
        "status": "M",
        "additions": 241,
        "deletions": 183
      },
      {
        "file": "mathcomp/ssreflect/path.v",
        "status": "M",
        "additions": 241,
        "deletions": 183
      },
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 241,
        "deletions": 183
      }
    ],
    "state": "merged",
    "open_date": "2021-03-19T12:36:45Z",
    "update_date": "2021-05-20T13:51:29Z",
    "discussion": [
      {
        "author": "pi8027",
        "date": "2021-03-25T11:18:10Z",
        "comment": "I will port some more lemmas from [coq-stablesort](https://github.com/pi8027/stablesort) which is another library dedicated to stability proofs of sort and highly optimized sorting algorithms. (It will take some more time I guess.)"
      }
    ],
    "review_discussion": [
      {
        "author": "chdoc",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2021-05-19T16:25:59Z",
        "comment": "In line with the lemmas above, I think these should be named `relI_*` (rather than `*_relI`) and stated in the converse direction. Should we introduce some notation for relI, (e.g., `[relI e1 & e2]`)?"
      },
      {
        "author": "chdoc",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2021-05-19T16:32:53Z",
        "comment": "I think this should be `cat_nilp`, as `nilp` is a unary predicate. The same holds for `nilp_rev` below. (I'm not a fan of the special convention for unary predicates, but that's a different discussion). "
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2021-05-19T16:44:14Z",
        "comment": "> In line with the lemmas above, I think these should be named `relI_*` (rather than `*_relI`)\r\n\r\nI don't think so: https://github.com/math-comp/math-comp/blob/57af89f67dc3ace1a35fdfdbf32be309e20f0108/mathcomp/ssreflect/seq.v#L647-L660\r\n\r\n> and stated in the converse direction.\r\n\r\nSure.\r\n\r\n> Should we introduce some notation for relI, (e.g., `[relI e1 & e2]`)?\r\n\r\nProbably, yes."
      },
      {
        "author": "chdoc",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2021-05-19T17:16:11Z",
        "comment": "I don't understand why you point to `all` here, which is a binary predicate. `CONTRIBUTING.md` states:\r\n- `naryPredicate_mainSymbol+`\r\n- `mainSymbol_unaryPredicate`\r\nSummoning @CohenCyril "
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2021-05-19T18:45:39Z",
        "comment": "Well, one can argue whether `sorted` and `path` are really unary and `all` binary 😹. We tend to consider them as following the unary convention in the main argument (the list), but the binary relation plays the same role as the unary predicate in `all`.\r\n\r\nI agree the direction should be the converse one indeed (as for `all`)."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2021-05-19T18:53:12Z",
        "comment": "Why don't you use `[rel xy | ...]`? I wonder whether we should add `[relI r & r' ]`..."
      },
      {
        "author": "chdoc",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2021-05-19T19:28:28Z",
        "comment": "Isn't `[rel x y | ...]` is only for homogeneous relations?"
      },
      {
        "author": "chdoc",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2021-05-19T19:40:44Z",
        "comment": "Well, while I am not exactly a fan of the special convention for unary predicates, but I would prefer if new names were in line with preexisting names. So that means defaulting to `<main_symbol>_path`, as with the other path lemmas. Indeed, I tend to think of path as unary, where the relation should be inferable from the context and the sequence is nonempty. Even more so for sorted. But with \"for all\" neither the domain nor the predicate is a natural candidate for being implicit or inferable from the context."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2021-05-19T20:03:22Z",
        "comment": "I'm not 100% fan of the special convention for unary predicates either, especially when the predicate is only unary through certain lenses... However, the convention is definitely pervasive and I'm afraid it would affect even more loc than #733 itself, not to mention power users neurons... :smile:\r\n\r\nIn other `path` lemmas' name  `<main_symbol>_path`, `<main_symbol>` refers to the path sequence argument, not the relation argument. Note that before this PR, AFAICT only `merge_path` and `map_path` do follow this convention, while `path_mask` and `path_filter` are breaking it... we should fix them (in another PR).\r\n\r\nWhat I meant but maybe failed to convey is that, for me, the fact that the `<main_symbol>` is on the relation argument is a good enough reason to switch to the n+2-ary convention in the current case."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2021-05-19T20:49:17Z",
        "comment": "Ah yes you are right, ... such a shame though... maybe we can add notations `{rel T}` for unary and `{rel T & T'}` for binary and generalize constructions and lemmas... probably not very important though..."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2021-05-20T03:03:39Z",
        "comment": "The rule should be flipped"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2021-05-20T03:19:11Z",
        "comment": "Done. Shall we open a new issue for `rel`?"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2021-05-20T03:33:54Z",
        "comment": "I have no strong opinion on this point but agree with the last paragraph by Cyril. Since these lemmas reason about two different graphs `e` and `e'`, `path` can be seen as a binary predicate in this particular case."
      },
      {
        "author": "chdoc",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2021-05-20T07:39:18Z",
        "comment": "Indeed, the naming of the path lemmas is not as consistent as one would hope, but that's another issue. I agree that it's hard to justify using the \"unary predicate\" convention for the cases where the main symbol is not within the \"main\" argument of a pseudo-unary predicate. So changing the direction is probably sufficient here. "
      }
    ],
    "tags": [
      {
        "tag": "kind: enhancement",
        "description": "Issue or PR about addition of features."
      },
      {
        "tag": "kind: refactoring",
        "description": "Issue or PR about a refactoring. (reorganizing the code, reusing theorems, simplifications...)"
      },
      {
        "tag": "kind: clean-up",
        "description": "This issure/PR is about cleaning up obsolete code, removing hacks, etc"
      }
    ],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "3fc99e2afaa9c8dbcac42348dfe47d1848e29e33",
        "message": "Add `eq(_in)_sorted` lemmas and remove deprecation aliases",
        "date": "2021-05-19T23:37:50Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "ffd1aae50f626e5abf2ce225880f25ed0defb9b1",
        "message": "Refactor some lemmas about `path.sort`\n\n- new lemma `allrelT` in seq.v,\n- new lemma `all_merge` in path.v, and\n- lemmas `merge_path`, `merge_sorted`, and `sort_sorted(_in)` are now derived\n  from their stable variants.",
        "date": "2021-05-19T23:37:50Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "abc8bb1f76304f5d7e63d548517c83262dac7018",
        "message": "More seq/path lemmas",
        "date": "2021-05-20T02:50:29Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "97b4e3a25fddd3d7251de7e57c0d9955ea1c994d",
        "message": "Add `homo_sort_map(_in)` lemmas",
        "date": "2021-05-20T02:50:33Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 726,
    "diff_summary": [
      {
        "file": ".github/workflows/nix-action-coq-8.11.yml",
        "status": "A",
        "additions": 3226,
        "deletions": 110
      },
      {
        "file": ".github/workflows/nix-action-coq-8.12.yml",
        "status": "A",
        "additions": 3226,
        "deletions": 110
      },
      {
        "file": ".github/workflows/nix-action-coq-8.13.yml",
        "status": "A",
        "additions": 3226,
        "deletions": 110
      },
      {
        "file": ".github/workflows/nix-action.yml",
        "status": "A",
        "additions": 3226,
        "deletions": 110
      },
      {
        "file": ".nix/config.nix",
        "status": "A",
        "additions": 3226,
        "deletions": 110
      },
      {
        "file": ".nix/coq-nix-toolbox.nix",
        "status": "A",
        "additions": 3226,
        "deletions": 110
      },
      {
        "file": ".nix/coq-overlays/multinomials/default.nix",
        "status": "A",
        "additions": 3226,
        "deletions": 110
      },
      {
        "file": "default.nix",
        "status": "A",
        "additions": 3226,
        "deletions": 110
      }
    ],
    "state": "merged",
    "open_date": "2021-03-19T02:02:58Z",
    "update_date": "2021-06-08T01:04:48Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: CI",
        "description": "Issue or PR about the CI. (Gitlab CI or CI of dependencies problems linked with math-comp)"
      }
    ],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "a7dd68f67d961011f573e996810c343d931d1fa9",
        "message": "Generated actions",
        "date": "2021-06-07T20:45:17Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "0043d64eaf89244aa2e659a3989e262f55a5a264",
        "message": "remove basic action",
        "date": "2021-06-07T20:45:17Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 725,
    "diff_summary": [
      {
        "file": ".github/workflows/nix-action.yml",
        "status": "M",
        "additions": 12,
        "deletions": 12
      },
      {
        "file": ".nix/config.nix",
        "status": "M",
        "additions": 12,
        "deletions": 12
      },
      {
        "file": ".nix/coq-nix-toolbox.nix",
        "status": "M",
        "additions": 12,
        "deletions": 12
      },
      {
        "file": "default.nix",
        "status": "M",
        "additions": 12,
        "deletions": 12
      }
    ],
    "state": "merged",
    "open_date": "2021-03-17T02:42:02Z",
    "update_date": "2021-03-17T17:54:38Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: CI",
        "description": "Issue or PR about the CI. (Gitlab CI or CI of dependencies problems linked with math-comp)"
      }
    ],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "bbec40b5aed2cd70c95ad7b11bf264b6d283885e",
        "message": "up",
        "date": "2021-03-17T17:25:57Z"
      }
    ]
  },
  {
    "author": "gares",
    "number": 724,
    "diff_summary": [
      {
        "file": "mathcomp/algebra/ssralg.v",
        "status": "M",
        "additions": 10,
        "deletions": 10
      },
      {
        "file": "mathcomp/ssreflect/choice.v",
        "status": "M",
        "additions": 10,
        "deletions": 10
      },
      {
        "file": "mathcomp/ssreflect/eqtype.v",
        "status": "M",
        "additions": 10,
        "deletions": 10
      }
    ],
    "state": "merged",
    "open_date": "2021-03-16T14:07:49Z",
    "update_date": "2021-03-16T18:34:30Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "gares",
        "committer": "gares",
        "hash": "a0b13978abda7686fd519720f455b5078ba8fdf9",
        "message": "Structure.of -> Structure.on",
        "date": "2021-03-16T12:38:56Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 723,
    "diff_summary": [
      {
        "file": ".gitpod.Dockerfile",
        "status": "A",
        "additions": 49,
        "deletions": 27
      },
      {
        "file": ".gitpod.dockerfile",
        "status": "A",
        "additions": 49,
        "deletions": 27
      },
      {
        "file": ".gitpod.yml",
        "status": "A",
        "additions": 49,
        "deletions": 27
      },
      {
        "file": "_CoqProject",
        "status": "A",
        "additions": 49,
        "deletions": 27
      },
      {
        "file": "etc/utils/setup_gitpod.sh",
        "status": "A",
        "additions": 49,
        "deletions": 27
      }
    ],
    "state": "merged",
    "open_date": "2021-03-15T01:11:39Z",
    "update_date": "2021-03-15T01:37:13Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "25695dba0365a252cb142d5ba9079bd59f3ccad2",
        "message": "fixup gitpod config",
        "date": "2021-03-15T01:08:56Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 722,
    "diff_summary": [
      {
        "file": ".gitpod.dockerfile",
        "status": "A",
        "additions": 31,
        "deletions": 4
      },
      {
        "file": ".gitpod.yml",
        "status": "A",
        "additions": 31,
        "deletions": 4
      }
    ],
    "state": "merged",
    "open_date": "2021-03-14T21:28:11Z",
    "update_date": "2021-03-14T21:28:53Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "27ff83d0e5575c222deb194dd67f5710382f76e3",
        "message": "more gitpod config",
        "date": "2021-03-14T21:28:38Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 721,
    "diff_summary": [
      {
        "file": ".gitpod.yml",
        "status": "A",
        "additions": 10,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2021-03-14T21:12:38Z",
    "update_date": "2021-03-14T21:12:48Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "fe924032a7db2278deda441e46440af65637cddc",
        "message": "Try gitpod",
        "date": "2021-03-14T21:09:28Z"
      }
    ]
  },
  {
    "author": "jouvelot",
    "number": 720,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 7,
        "deletions": 1
      },
      {
        "file": "mathcomp/ssreflect/tuple.v",
        "status": "M",
        "additions": 7,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2021-03-14T14:15:32Z",
    "update_date": "2021-03-14T20:42:34Z",
    "discussion": [],
    "review_discussion": [
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/tuple.v",
        "date": "2021-03-14T15:12:12Z",
        "comment": "```suggestion\r\nLemma sort_tupleP T n r t : size (sort r t) == n.\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/tuple.v",
        "date": "2021-03-14T18:57:21Z",
        "comment": "```suggestion\r\nLemma sort_tupleP r t : size (sort r t) == n.\r\nProof. by rewrite size_sort size_tuple. Qed.\r\nCanonical sort_tuple r t := Tuple (@sort_tupleP T n r t).\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/tuple.v",
        "date": "2021-03-14T18:57:45Z",
        "comment": "```suggestion\r\nCanonical sort_tuple r t := Tuple (sort_tupleP r t).\r\n```"
      }
    ],
    "tags": [
      {
        "tag": "kind: enhancement",
        "description": "Issue or PR about addition of features."
      }
    ],
    "commits": [
      {
        "author": "jouvelot",
        "committer": "jouvelot",
        "hash": "99be5311302df8f477a6444046006442b139767f",
        "message": "Adding sorting on tuples.",
        "date": "2021-03-14T13:56:03Z"
      },
      {
        "author": "jouvelot",
        "committer": "jouvelot",
        "hash": "2da32704007ae85b1542bde86b6cefa1d815f3c0",
        "message": "Updated CHANGELOG.",
        "date": "2021-03-14T14:13:41Z"
      },
      {
        "author": "CohenCyril",
        "committer": "web-flow",
        "hash": "e1ae8b339b156f881a993ec2390b24f0b92a7356",
        "message": "Update tuple.v",
        "date": "2021-03-14T15:12:26Z"
      },
      {
        "author": "CohenCyril",
        "committer": "web-flow",
        "hash": "e58917d7339c110f2de05dbb2b340dc283517b36",
        "message": "Update mathcomp/ssreflect/tuple.v",
        "date": "2021-03-14T15:12:33Z"
      },
      {
        "author": "CohenCyril",
        "committer": "web-flow",
        "hash": "1ac7f15d83e284e0f870b31e4fdbee63b8a07118",
        "message": "Update CHANGELOG_UNRELEASED.md",
        "date": "2021-03-14T15:14:11Z"
      },
      {
        "author": "CohenCyril",
        "committer": "web-flow",
        "hash": "380123e331a6b0d74e19861b887660f440ed072b",
        "message": "Update CHANGELOG_UNRELEASED.md",
        "date": "2021-03-14T15:15:49Z"
      },
      {
        "author": "CohenCyril",
        "committer": "web-flow",
        "hash": "6034085a4c54a71d51eb724ae7f34aaaf8d00458",
        "message": "Update mathcomp/ssreflect/tuple.v",
        "date": "2021-03-14T18:57:26Z"
      },
      {
        "author": "CohenCyril",
        "committer": "web-flow",
        "hash": "c255993d1ac87cc15aea810fb6a4fbcbb07920f4",
        "message": "Update mathcomp/ssreflect/tuple.v",
        "date": "2021-03-14T18:57:50Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 719,
    "diff_summary": [
      {
        "file": ".nix/coq-nix-toolbox.nix",
        "status": "M",
        "additions": 1,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2021-03-14T13:55:38Z",
    "update_date": "2021-03-14T15:08:40Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: nix",
        "description": ""
      }
    ],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "167d49883744744d8e14c32a3a67aa2b7dd59a35",
        "message": "toolbox update",
        "date": "2021-03-14T13:38:58Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 717,
    "diff_summary": [
      {
        "file": ".nix/coq-nix-toolbox.nix",
        "status": "M",
        "additions": 1,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2021-03-12T18:17:00Z",
    "update_date": "2021-03-12T20:58:32Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: nix",
        "description": ""
      }
    ],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "8a6cb94a71077659c0bdad760fab4f908f311567",
        "message": "toolbox update",
        "date": "2021-03-12T18:16:20Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 716,
    "diff_summary": [
      {
        "file": ".nix/coq-nix-toolbox.nix",
        "status": "M",
        "additions": 1,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2021-03-12T17:27:10Z",
    "update_date": "2021-03-12T17:45:58Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: nix",
        "description": ""
      }
    ],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "18a0d770ba36f2e7bc7b2a21a8e2608db15d86ef",
        "message": "update nix toolbox",
        "date": "2021-03-12T17:19:28Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 715,
    "diff_summary": [
      {
        "file": ".github/workflows/nix-action.yml",
        "status": "M",
        "additions": 7,
        "deletions": 9
      },
      {
        "file": ".nix/coq-nix-toolbox.nix",
        "status": "M",
        "additions": 7,
        "deletions": 9
      },
      {
        "file": ".nix/coq-overlays/mathcomp-single/default.nix",
        "status": "M",
        "additions": 7,
        "deletions": 9
      }
    ],
    "state": "merged",
    "open_date": "2021-03-12T15:47:36Z",
    "update_date": "2021-03-12T16:30:13Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: nix",
        "description": ""
      }
    ],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "74995c24e8f0211cc3b2fdffcac5c4a72c3c6bee",
        "message": "toolbox update",
        "date": "2021-03-12T15:46:29Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "181f24961fbcdb72725bf990d30dfb6e5c1b3a10",
        "message": "remove unnecessary step",
        "date": "2021-03-12T15:51:22Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "53d2ec803fec7670a429a87ed516d71cce282890",
        "message": "update local shell version",
        "date": "2021-03-12T15:54:06Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 714,
    "diff_summary": [
      {
        "file": ".github/workflows/nix-action.yml",
        "status": "D",
        "additions": 155,
        "deletions": 179
      },
      {
        "file": ".github/workflows/nix.yml",
        "status": "D",
        "additions": 155,
        "deletions": 179
      },
      {
        "file": ".nix/config.nix",
        "status": "D",
        "additions": 155,
        "deletions": 179
      },
      {
        "file": ".nix/coq-nix-toolbox.nix",
        "status": "D",
        "additions": 155,
        "deletions": 179
      },
      {
        "file": ".nix/coq-overlays/mathcomp-single/default.nix",
        "status": "D",
        "additions": 155,
        "deletions": 179
      },
      {
        "file": "config.nix",
        "status": "D",
        "additions": 155,
        "deletions": 179
      },
      {
        "file": "default.nix",
        "status": "D",
        "additions": 155,
        "deletions": 179
      },
      {
        "file": "package.nix",
        "status": "D",
        "additions": 155,
        "deletions": 179
      }
    ],
    "state": "merged",
    "open_date": "2021-03-12T11:46:41Z",
    "update_date": "2021-03-12T13:17:54Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: CI",
        "description": "Issue or PR about the CI. (Gitlab CI or CI of dependencies problems linked with math-comp)"
      },
      {
        "tag": "kind: nix",
        "description": ""
      }
    ],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "60d56f2bb32201be435b7cd4462dd778ed559aa4",
        "message": "Use nix-tool-box",
        "date": "2021-03-12T12:51:10Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 713,
    "diff_summary": [
      {
        "file": ".github/workflows/nix-action.yml",
        "status": "D",
        "additions": 155,
        "deletions": 179
      },
      {
        "file": ".github/workflows/nix.yml",
        "status": "D",
        "additions": 155,
        "deletions": 179
      },
      {
        "file": ".nix/config.nix",
        "status": "D",
        "additions": 155,
        "deletions": 179
      },
      {
        "file": ".nix/coq-nix-toolbox.nix",
        "status": "D",
        "additions": 155,
        "deletions": 179
      },
      {
        "file": ".nix/coq-overlays/mathcomp-single/default.nix",
        "status": "D",
        "additions": 155,
        "deletions": 179
      },
      {
        "file": "config.nix",
        "status": "D",
        "additions": 155,
        "deletions": 179
      },
      {
        "file": "default.nix",
        "status": "D",
        "additions": 155,
        "deletions": 179
      },
      {
        "file": "package.nix",
        "status": "D",
        "additions": 155,
        "deletions": 179
      }
    ],
    "state": "closed",
    "open_date": "2021-03-12T09:20:04Z",
    "update_date": "2021-03-12T11:46:33Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "b60bd3ebb9238a33e0b3684011156d9198ae5fc8",
        "message": "Use nix-tool-box",
        "date": "2021-03-12T11:05:36Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 712,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 545,
        "deletions": 2
      },
      {
        "file": "mathcomp/algebra/mxpoly.v",
        "status": "M",
        "additions": 545,
        "deletions": 2
      }
    ],
    "state": "merged",
    "open_date": "2021-03-09T13:33:07Z",
    "update_date": "2021-06-11T17:21:01Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2021-03-09T13:34:16Z",
        "comment": "@thery almost there... would you mind reviewing this one too?"
      },
      {
        "author": "CohenCyril",
        "date": "2021-03-11T14:31:46Z",
        "comment": "@thery\r\n> Maybe the stuff about triangularisation could be postpone to a latter commit where there are more stuff about it.\r\n> Also I have been disturbed by the convention you use in your definitions.\r\n> It uses a large spectrum `A` `B` `C` `W` `P` ...., dometimes it is upper case sometimes it is lower case. Maybe you should add your conventions in the header of `mxred` to help the reader guessing the type of the arguments of a function\r\n\r\nThanks for your review, I will come back to you when I have the time to do some bound variable renaming, but maybe also renaming the similar `similar` to `mxsimilar_by` ... and defining `mxsimilar A B := exists P, mxsimilar_by P A B`..."
      },
      {
        "author": "thery",
        "date": "2021-06-09T13:04:26Z",
        "comment": "@CohenCyril is it ready to be reviewed again?"
      },
      {
        "author": "CohenCyril",
        "date": "2021-06-09T15:11:21Z",
        "comment": "> @CohenCyril is it ready to be reviewed again?\r\n\r\nyes it is"
      },
      {
        "author": "CohenCyril",
        "date": "2021-06-09T15:12:07Z",
        "comment": "Ah I need one rebase I guess but the code won't change"
      }
    ],
    "review_discussion": [
      {
        "author": "thery",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2021-03-11T10:39:58Z",
        "comment": "why this is called `mxred` and not `mxdiag`"
      },
      {
        "author": "thery",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2021-03-11T10:41:02Z",
        "comment": "why this is part of the commit?"
      },
      {
        "author": "thery",
        "file": "mathcomp/algebra/mxred.v",
        "date": "2021-03-11T10:53:56Z",
        "comment": "what is a  class?\r\ninstead of `A` `B`  `C` that seems matrices,  should we use another letter `P` or `S`?"
      },
      {
        "author": "CohenCyril",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2021-03-11T14:22:22Z",
        "comment": "I'm not sure... maybe `mxsimilar` is even better... or since it got so small, it could be appended at the end of `mxpoly`... I don't know..."
      },
      {
        "author": "CohenCyril",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2021-03-11T14:24:26Z",
        "comment": "Actually, I do not intend to do any general theory of trigonalization of matrices, however I dealt with trigonalization of complex matrices in [`spectral.v`](https://github.com/math-comp/math-comp/pull/207/files#diff-3921d8b72557faab0a20e006620ea393435554cac831957d8c40bbfa10515519) in the \"main PR\"... and it would be weird to put the definition there..."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/mxred.v",
        "date": "2021-03-11T14:27:23Z",
        "comment": "Sure! A class is just a family, a set... In this file it is always `unitmx` but in `spectral.v`, it is sometimes `unitarymx` (in order to talk about \"trigonalizable in an orthonormal basis\") or `[predI realmx & unitmx]` (as in real inversible matrix)"
      },
      {
        "author": "thery",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2021-03-11T15:20:44Z",
        "comment": "maybe only add this definition in `mxred`  with the PR that will include `spectral`.\r\n\r\n"
      },
      {
        "author": "thery",
        "file": "mathcomp/algebra/mxpoly.v",
        "date": "2021-06-11T09:00:56Z",
        "comment": "several"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/mxpoly.v",
        "date": "2021-06-11T17:19:24Z",
        "comment": "```suggestion\r\n(* From the latter, we derive several related notions:                        *)\r\n```"
      }
    ],
    "tags": [
      {
        "tag": "kind: enhancement",
        "description": "Issue or PR about addition of features."
      }
    ],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "c2c45c1e874f319518c934110ca39c0c6430af0d",
        "message": "Diagonalization of matrices",
        "date": "2021-06-09T15:12:34Z"
      },
      {
        "author": "CohenCyril",
        "committer": "web-flow",
        "hash": "b6463f7d567f31f96985b3c61693116c83a3aa21",
        "message": "Update mathcomp/algebra/mxpoly.v",
        "date": "2021-06-11T17:19:28Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 711,
    "diff_summary": [
      {
        "file": ".gitlab-ci.yml",
        "status": "M",
        "additions": 0,
        "deletions": 5
      }
    ],
    "state": "merged",
    "open_date": "2021-03-07T11:59:13Z",
    "update_date": "2021-03-07T13:31:45Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "web-flow",
        "hash": "573fa17081935f637e500a945eefa289d3361f1c",
        "message": "mathcomp analysis does not compire with Coq dev for now",
        "date": "2021-03-07T11:58:22Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 710,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 351,
        "deletions": 1
      },
      {
        "file": "mathcomp/ssreflect/order.v",
        "status": "M",
        "additions": 351,
        "deletions": 1
      },
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 351,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2021-03-07T01:44:27Z",
    "update_date": "2021-03-07T02:17:47Z",
    "discussion": [
      {
        "author": "thery",
        "date": "2021-03-07T02:01:25Z",
        "comment": "just a little remark  ```order.v```  is the largest file of mathcomp...."
      }
    ],
    "review_discussion": [
      {
        "author": "thery",
        "file": "mathcomp/ssreflect/order.v",
        "date": "2021-03-07T01:49:39Z",
        "comment": "missing )   (to guarantee it is nonempty)."
      }
    ],
    "tags": [
      {
        "tag": "kind: enhancement",
        "description": "Issue or PR about addition of features."
      }
    ],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "dceb926ca83cddecf541934012f6c46eafa6b15f",
        "message": "Adding Order.enum and related definitions and theorems",
        "date": "2021-03-07T01:53:20Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 709,
    "diff_summary": [
      {
        "file": ".github/CODEOWNERS",
        "status": "A",
        "additions": 141,
        "deletions": 0
      }
    ],
    "state": "open",
    "open_date": "2021-03-05T14:13:04Z",
    "update_date": "2023-01-11T10:03:21Z",
    "discussion": [],
    "review_discussion": [
      {
        "author": "gares",
        "file": ".github/CODEOWNERS",
        "date": "2021-10-20T08:32:44Z",
        "comment": "```suggestion\r\nfingroup/* @gares # , ...\r\n```"
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "09b8effd27493e2b5e69daf2a9e4c25384e0cd88",
        "message": "Adding a CODEOWNERS file",
        "date": "2021-03-05T14:11:02Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 708,
    "diff_summary": [
      {
        "file": "mathcomp/Make",
        "status": "M",
        "additions": 12,
        "deletions": 4
      },
      {
        "file": "mathcomp/_CoqProject",
        "status": "M",
        "additions": 12,
        "deletions": 4
      },
      {
        "file": "mathcomp/algebra/Make",
        "status": "M",
        "additions": 12,
        "deletions": 4
      },
      {
        "file": "mathcomp/character/Make",
        "status": "M",
        "additions": 12,
        "deletions": 4
      },
      {
        "file": "mathcomp/field/Make",
        "status": "M",
        "additions": 12,
        "deletions": 4
      },
      {
        "file": "mathcomp/fingroup/Make",
        "status": "M",
        "additions": 12,
        "deletions": 4
      },
      {
        "file": "mathcomp/solvable/Make",
        "status": "M",
        "additions": 12,
        "deletions": 4
      },
      {
        "file": "mathcomp/ssreflect/Make",
        "status": "M",
        "additions": 12,
        "deletions": 4
      }
    ],
    "state": "merged",
    "open_date": "2021-03-04T21:58:41Z",
    "update_date": "2021-03-11T23:07:05Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2021-03-05T12:05:38Z",
        "comment": "@gares I think you followed this on the Coq side. Is that the right solution for now?"
      },
      {
        "author": "gares",
        "date": "2021-03-05T13:23:23Z",
        "comment": "I'm afraid so, be we should put this problem in some milestone and signal we can't yet put the attribute because of backward compat"
      }
    ],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: fix",
        "description": "PR that fixes a bug. Please refer to the appropriate issue(s) if relevant."
      },
      {
        "tag": "kind: warning",
        "description": "Issue or PR about a warning raised by Coq"
      }
    ],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "081c7c29feb1f4c2e66331a88c273f802c9bc27c",
        "message": "Silence Hint Locality warning",
        "date": "2021-03-04T21:56:43Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 707,
    "diff_summary": [
      {
        "file": "mathcomp/Make",
        "status": "M",
        "additions": 8,
        "deletions": 0
      },
      {
        "file": "mathcomp/_CoqProject",
        "status": "M",
        "additions": 8,
        "deletions": 0
      },
      {
        "file": "mathcomp/algebra/Make",
        "status": "M",
        "additions": 8,
        "deletions": 0
      },
      {
        "file": "mathcomp/character/Make",
        "status": "M",
        "additions": 8,
        "deletions": 0
      },
      {
        "file": "mathcomp/field/Make",
        "status": "M",
        "additions": 8,
        "deletions": 0
      },
      {
        "file": "mathcomp/fingroup/Make",
        "status": "M",
        "additions": 8,
        "deletions": 0
      },
      {
        "file": "mathcomp/solvable/Make",
        "status": "M",
        "additions": 8,
        "deletions": 0
      },
      {
        "file": "mathcomp/ssreflect/Make",
        "status": "M",
        "additions": 8,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2021-03-04T21:45:56Z",
    "update_date": "2021-03-18T00:26:51Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: fix",
        "description": "PR that fixes a bug. Please refer to the appropriate issue(s) if relevant."
      },
      {
        "tag": "kind: warning",
        "description": "Issue or PR about a warning raised by Coq"
      }
    ],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "be445d437200da5765c972074dd0c0de68562adc",
        "message": "Silencing warning deprecated-ident-entry",
        "date": "2021-03-12T21:45:02Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 706,
    "diff_summary": [
      {
        "file": "mathcomp/field/closed_field.v",
        "status": "M",
        "additions": 41,
        "deletions": 41
      },
      {
        "file": "mathcomp/ssreflect/eqtype.v",
        "status": "M",
        "additions": 41,
        "deletions": 41
      },
      {
        "file": "mathcomp/ssreflect/finfun.v",
        "status": "M",
        "additions": 41,
        "deletions": 41
      },
      {
        "file": "mathcomp/ssreflect/fintype.v",
        "status": "M",
        "additions": 41,
        "deletions": 41
      },
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 41,
        "deletions": 41
      },
      {
        "file": "mathcomp/ssreflect/ssrbool.v",
        "status": "M",
        "additions": 41,
        "deletions": 41
      }
    ],
    "state": "closed",
    "open_date": "2021-03-04T20:51:34Z",
    "update_date": "2022-06-08T07:46:32Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2021-03-04T21:01:59Z",
        "comment": "@erikmd the CI does not show-up anymore on mathcomp PR, do you understand why?"
      },
      {
        "author": "erikmd",
        "date": "2021-03-04T21:22:26Z",
        "comment": "Hi @CohenCyril, I first took a look at https://gitlab.com/math-comp/math-comp/-/pipelines\r\nand many pipelines were pending\r\n(which seemed to be related to these prod issues:\r\n- https://gitlab.com/gitlab-com/gl-infra/production/-/issues/3857\r\n- https://gitlab.com/gitlab-com/gl-infra/production/-/issues/3858\r\n\r\n) but, these pipelines just seemed to be started in one go (a couple of seconds ago) whereas the status is still not propagated to the GitHub Check tabs.\r\nI don't have much more clues… but maybe let's wait for the completion of these pipelines, and if there's not GitHub-Checks-feedback at that point, ask Théo to take a look at the coqbot logs?"
      },
      {
        "author": "erikmd",
        "date": "2021-03-05T10:20:48Z",
        "comment": "Hi @Zimmi48,\r\nCyril noticed that since yesterday Thursday, the GitLab pipeline status is not propagated back to GitHub commit nor Checks tab…\r\nwould you have some clue / logs information or so regarding the source of this issue? FTR, the GitLab pipeline that has been successfully triggered by this PR is https://gitlab.com/math-comp/math-comp/-/pipelines/265650597"
      },
      {
        "author": "Zimmi48",
        "date": "2021-03-05T17:42:51Z",
        "comment": "Hi @erikmd, thanks for pinging me. I don't have access to the GitLab webhook logs of the math-comp repository, but I'll look into the server logs to see if I detect anything wrong."
      },
      {
        "author": "Zimmi48",
        "date": "2021-03-05T18:18:07Z",
        "comment": "Unfortunately, my logs do not give me any relevant information and math-comp is the only project that I am aware of that is suffering from this issue right now. It also looks like this is not the first time that this has happened: already a couple of PRs suffered from the same symptoms on Jan 27-28.\r\n\r\nThat being said, math-comp is also the last project that I am aware of that is relying on the legacy installation (see https://github.com/coq/bot/#how-to-use-the-coqbot-instance). So that could be one explanation of why this is behaving differently.\r\n\r\nI'll try to improve my logging as soon as I get the chance. If the problem persists, you may want to give a shot at migrating to the GitHub App to see if this is related. Please let me know if the problem continues or disappears and if you know any other project suffering from it."
      },
      {
        "author": "erikmd",
        "date": "2021-03-05T18:32:43Z",
        "comment": "Hi @Zimmi48, thanks for looking into this!\r\n\r\n> math-comp is also the last project that I am aware of that is relying on the legacy installation \r\n\r\nah OK… I believed we had changed the setup to use coqbot already; so I guess what you suggest (migrating `math-comp/math-comp` to `coqbot`) would be the best fix.\r\n\r\n@CohenCyril could you do that migration?\r\n\r\nIINM, it amounts to:\r\n* Follow the instructions of https://github.com/coq/bot/#as-a-github-app \r\n* Goto https://github.com/math-comp/math-comp/settings/hooks and remove the old webhook to avoid potential duplicates…"
      },
      {
        "author": "CohenCyril",
        "date": "2021-03-05T18:43:16Z",
        "comment": "@erikmd \r\n> @CohenCyril could you do that migration?\r\n\r\nI think I did it at some point when you asked me to... I can't check in details right now, but coqbot is indeed not in the webhooks."
      },
      {
        "author": "Zimmi48",
        "date": "2021-03-05T21:41:20Z",
        "comment": "Ah OK. Sorry for the confusion, I hadn't realized it had already been the case. Then, this is something else. I'll try to investigate more."
      },
      {
        "author": "erikmd",
        "date": "2021-03-07T20:34:51Z",
        "comment": "Hi @Zimmi48, following your comments I just double-checked the page\r\nhttps://gitlab.com/math-comp/math-comp/hooks\r\nand I believe this configuration was incomplete w.r.t. what is currently specified in https://github.com/coq/bot/#as-a-github-app\r\n\r\nFTR, I saw:\r\n![2021-03-07_21-29-37_Screenshot_webhook](https://user-images.githubusercontent.com/10367254/110253761-5bf71300-7f8c-11eb-84cf-ebebf8001edb.png)\r\n\r\nI modified this, and I now see:\r\n![2021-03-07_21-38-27_Screenshot_hooks_latest](https://user-images.githubusercontent.com/10367254/110254003-7d0c3380-7f8d-11eb-848e-f8f10b1616f0.png)\r\n\r\n@CohenCyril I hope the issue you raised is now solved; so let me know if the fix is confirmed (or not…)"
      },
      {
        "author": "Zimmi48",
        "date": "2021-03-08T10:35:42Z",
        "comment": "In principle, the legacy endpoint `/pipeline` is still supported exactly as `/gitlab` but what is more surprising is that it seems Job Events and Pipeline Events were not sent if we can believe the difference of descriptions between the two. I wonder what happened.\r\n\r\nAnyway, this seems to have worked in fixing the status report to GitHub."
      },
      {
        "author": "CohenCyril",
        "date": "2021-03-08T11:35:50Z",
        "comment": "Indeed! The issue is fixed. Thank you so much @erikmd and @Zimmi48 !!"
      },
      {
        "author": "proux01",
        "date": "2022-06-08T07:46:32Z",
        "comment": "This has been fixed by https://github.com/math-comp/math-comp/pull/856"
      }
    ],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: fix",
        "description": "PR that fixes a bug. Please refer to the appropriate issue(s) if relevant."
      },
      {
        "tag": "kind: warning",
        "description": "Issue or PR about a warning raised by Coq"
      },
      {
        "tag": "drops: coq 8.11",
        "description": ""
      },
      {
        "tag": "drops: coq 8.12",
        "description": ""
      }
    ],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "2fdcaeb3e8b4f82a5f1b134b89ebf1ef11ca4081",
        "message": "Switching `ident` -> `name` in notations",
        "date": "2021-03-08T11:34:18Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 703,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 1095,
        "deletions": 2
      },
      {
        "file": "mathcomp/algebra/matrix.v",
        "status": "M",
        "additions": 1095,
        "deletions": 2
      },
      {
        "file": "mathcomp/algebra/mxalgebra.v",
        "status": "M",
        "additions": 1095,
        "deletions": 2
      },
      {
        "file": "mathcomp/ssreflect/order.v",
        "status": "M",
        "additions": 1095,
        "deletions": 2
      }
    ],
    "state": "merged",
    "open_date": "2021-03-04T19:43:10Z",
    "update_date": "2021-03-08T21:17:14Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2021-03-07T01:45:30Z",
        "comment": "@thery  I did the split -> #710 "
      },
      {
        "author": "CohenCyril",
        "date": "2021-03-07T01:46:27Z",
        "comment": "I also dramatically enhanced the block matrix theory... It will be here soon."
      },
      {
        "author": "CohenCyril",
        "date": "2021-03-07T12:01:09Z",
        "comment": "@thery I ended up adding a couple lemmas, feels rather complete now."
      },
      {
        "author": "CohenCyril",
        "date": "2021-03-07T13:16:22Z",
        "comment": "@thery FYI I added a commit renaming `tagnat.val` to `tagnat.sig`: it causes less undesirable name-clashes, especially if one wants to import `tagnat`, as in [matrix.v](https://github.com/math-comp/math-comp/pull/703/files#diff-f457cb0bf11677ea475ce7d07aa9d8ce79d060ef642432808d92ceb55d6a3fc5R3743)."
      },
      {
        "author": "thery",
        "date": "2021-03-07T14:30:36Z",
        "comment": "@CohenCyril looks good. Will I have a closer look on monday."
      },
      {
        "author": "CohenCyril",
        "date": "2021-03-08T19:53:11Z",
        "comment": "@thery I addressed all your comments."
      },
      {
        "author": "CohenCyril",
        "date": "2021-03-09T10:44:03Z",
        "comment": "@thery Thanks!"
      }
    ],
    "review_discussion": [
      {
        "author": "thery",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2021-03-05T14:06:40Z",
        "comment": "Could this be a separate commit?\r\n"
      },
      {
        "author": "thery",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2021-03-05T14:11:32Z",
        "comment": "Are they places where this new constructor could be used in the current library?"
      },
      {
        "author": "thery",
        "file": "mathcomp/ssreflect/order.v",
        "date": "2021-03-05T14:22:23Z",
        "comment": "I was expected `tagnat.tag` for` val1`  and `tagnat.nat` for `val2` but maybe it is not a good idea."
      },
      {
        "author": "thery",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2021-03-05T14:28:08Z",
        "comment": "A pity these new constructions come with very little theorems associated with\r\nthem.\r\nI was thinking for example about the trace of `mxdiag` or the transpose of `mxcol`"
      },
      {
        "author": "CohenCyril",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2021-03-05T14:46:34Z",
        "comment": "How do you suggest to split? (They are related in cascade, each idem depends on the previous one)"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2021-03-05T14:46:50Z",
        "comment": "Not yet, but that's all part of a bigger plan: https://github.com/math-comp/math-comp/pull/207/files#diff-f7a28e39a52f7013e677ad2bab9930222f5af8c0df4acb10e978bf2a1a2fa37fR291-R318"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/order.v",
        "date": "2021-03-05T14:49:19Z",
        "comment": "I'm really open to any name here. Yours are funny, it also made me think `tagnat.val1` might not have to be a natural number... so that there could be a further generalisation... as long as it is an ordered finite type..."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2021-03-05T14:51:38Z",
        "comment": "Sure. I did not do the closure, I wrote the bare minimum for https://github.com/math-comp/math-comp/pull/207/files#diff-f7a28e39a52f7013e677ad2bab9930222f5af8c0df4acb10e978bf2a1a2fa37fR291-R318 to go through...\r\nSo what should I add?\r\n- the trace of mxdiag\r\n- the transpose of all of them\r\n- I guess `mulmx_row_diag`\r\n- maybe `mulmx_col_row` if it makes sense...\r\nother ideas?"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2021-03-05T14:52:18Z",
        "comment": "Maybe stuff with `0`s and `1`s and `a%:M`"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/order.v",
        "date": "2021-03-05T15:01:06Z",
        "comment": "Actually for now (because of the restriction on finite ordered types) its preferable to stick to the first component being a nat. It's a bit silly, but it could be generalized later. Also I prefer to keep `val1` and `val2` string-related to `val`, because it's easier for me to remember..."
      },
      {
        "author": "thery",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2021-03-05T15:07:33Z",
        "comment": "I guess there are lots in fact, for example the rank of `\\mx_diag` also is there an equivalent of `submx`\r\n"
      },
      {
        "author": "thery",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2021-03-05T15:23:00Z",
        "comment": "I was just thinking that the first 3 items were mostly independent of block matrices. \r\nTagnat instead seems more closely related to matrices."
      },
      {
        "author": "thery",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2021-03-05T15:29:35Z",
        "comment": "I was thinking at places where one has been using `\\matrix_` where one of your constructors could be more natural but a rapid grep showed me nothing\r\n"
      },
      {
        "author": "thery",
        "file": "mathcomp/ssreflect/order.v",
        "date": "2021-03-05T15:30:43Z",
        "comment": "Ok just it made explicit the encoding of `tagnat` but that''s fine"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2021-03-07T12:41:47Z",
        "comment": "Thanks for checking"
      },
      {
        "author": "thery",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2021-03-08T17:31:46Z",
        "comment": "mxblock,"
      },
      {
        "author": "thery",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2021-03-08T17:33:56Z",
        "comment": "why not submxdiag?"
      },
      {
        "author": "thery",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2021-03-08T17:34:20Z",
        "comment": "provide"
      },
      {
        "author": "CohenCyril",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2021-03-08T18:01:16Z",
        "comment": "This would be redundant with `submxblock A i i`"
      },
      {
        "author": "CohenCyril",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2021-03-08T18:03:18Z",
        "comment": "I could add it as a notation, but I'm not convinced it is very useful"
      },
      {
        "author": "CohenCyril",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2021-03-08T18:03:38Z",
        "comment": "```suggestion\r\n  + `mxblock`, `mxcol`, `mxrow` and `mxdiag` with notations\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2021-03-08T18:03:51Z",
        "comment": "```suggestion\r\n  + We provide the following lemmas on these definitions:\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2021-03-08T18:06:16Z",
        "comment": "cf https://github.com/math-comp/math-comp/pull/703/files#diff-f457cb0bf11677ea475ce7d07aa9d8ce79d060ef642432808d92ceb55d6a3fc5R4371-R4373"
      },
      {
        "author": "thery",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2021-03-08T18:07:18Z",
        "comment": "maybe just adding a comment"
      },
      {
        "author": "CohenCyril",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2021-03-08T18:14:29Z",
        "comment": "Where and what comment would you think is appropriate?\r\nSomething like ``there is no analogous for `mxdiag` because one can simply apply `submxblock A i i` ``?"
      },
      {
        "author": "CohenCyril",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2021-03-08T18:15:39Z",
        "comment": "@thery if you resolve the issue by hand I cannot commit the \"suggested change\" any more. Please leave this kind of comment open until github automatically resolves them when I push the change. :smile_cat: "
      },
      {
        "author": "CohenCyril",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2021-03-08T18:16:21Z",
        "comment": "done"
      },
      {
        "author": "CohenCyril",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2021-03-08T18:16:32Z",
        "comment": "done"
      },
      {
        "author": "CohenCyril",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2021-03-08T18:24:26Z",
        "comment": "```suggestion\r\n    former constructions. There is no analogous for `mxdiag` because\r\n    one can simply apply `submxblock A i i`.\r\n```"
      },
      {
        "author": "thery",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2021-03-08T18:24:27Z",
        "comment": "yes in the documention of `matrix.v`.\r\nThis makes me realised that there is no doc for `subblock` and the others."
      },
      {
        "author": "CohenCyril",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2021-03-08T18:24:51Z",
        "comment": "See the new revision"
      },
      {
        "author": "thery",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2021-03-08T18:26:26Z",
        "comment": "this should go in the header of `matrix.v` with the documentation of `subblock` and al"
      },
      {
        "author": "CohenCyril",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2021-03-08T18:29:30Z",
        "comment": "I added a comment about the absence of `submxdiag` juste below the line you pointed out.\r\nFor the other subblocks I am tempted to open an issue instead of fixing it here."
      },
      {
        "author": "thery",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2021-03-08T18:35:13Z",
        "comment": "I am not sure I understand. \r\nYou have introduced new functions `submxblock` ... so you should add their documentation in the header of `matrix`. I think the comment about the absense of `submxdiag` should go there too."
      },
      {
        "author": "CohenCyril",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2021-03-08T19:35:02Z",
        "comment": "Ah you are right, sorry I got confused between the changelog and the header"
      }
    ],
    "tags": [
      {
        "tag": "kind: enhancement",
        "description": "Issue or PR about addition of features."
      }
    ],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "7db7a5fbce42ff387a5750f9fbde5436a9aab1cc",
        "message": "Adding big block matrices\n\n- with special cases for row, column, and diagonal matrices\n- we define an order bijection between the indexing of the whole matrix\n  and the indexing of the blocks to preserve triangularity",
        "date": "2021-03-08T19:52:27Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 700,
    "diff_summary": [
      {
        "file": ".nix/config.nix",
        "status": "M",
        "additions": 404,
        "deletions": 505
      },
      {
        "file": "mathcomp/algebra/ssralg.v",
        "status": "M",
        "additions": 404,
        "deletions": 505
      },
      {
        "file": "mathcomp/fingroup/fingroup.v",
        "status": "M",
        "additions": 404,
        "deletions": 505
      },
      {
        "file": "mathcomp/ssreflect/bigop.v",
        "status": "M",
        "additions": 404,
        "deletions": 505
      },
      {
        "file": "mathcomp/ssreflect/choice.v",
        "status": "M",
        "additions": 404,
        "deletions": 505
      },
      {
        "file": "mathcomp/ssreflect/eqtype.v",
        "status": "M",
        "additions": 404,
        "deletions": 505
      },
      {
        "file": "mathcomp/ssreflect/finfun.v",
        "status": "M",
        "additions": 404,
        "deletions": 505
      },
      {
        "file": "mathcomp/ssreflect/finset.v",
        "status": "M",
        "additions": 404,
        "deletions": 505
      },
      {
        "file": "mathcomp/ssreflect/fintype.v",
        "status": "M",
        "additions": 404,
        "deletions": 505
      },
      {
        "file": "mathcomp/ssreflect/order.v",
        "status": "M",
        "additions": 404,
        "deletions": 505
      },
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 404,
        "deletions": 505
      },
      {
        "file": "mathcomp/ssreflect/tuple.v",
        "status": "M",
        "additions": 404,
        "deletions": 505
      }
    ],
    "state": "closed",
    "open_date": "2021-02-26T18:44:24Z",
    "update_date": "2021-02-26T18:47:50Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "35ecbd78a0afc0880a1c26344b375d2ca3c18e8d",
        "message": "Big refactoring\n\n- new convention: mixins are named ${PreRequsite}_Is${Addentum}\n    e.g. + `IsZmodule` (no prerequisite)\n         + `Zmodule_IsRing` (Zmodule as a prerequisite, completing to Ring)\n- new type aliases `sub_type`, `inj_type`, `can_type` and `pcan_type`\n  which are automatically canonical and which can be used in combination\n  with `Structure.Build` (as in `Structure.Build mytype (sub_type mytype`)\n  to copy instances that are canonical on the alias, to the type itseld.\n- New notations [`Equality of ... <:]`, `[HasDecEq of _ ... <:]`, etc\n  to replace `[eqMixin of ... <:]`, etc\n- removed many detours due to bugs in HB that have been fixed now...",
        "date": "2021-02-26T18:43:23Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 699,
    "diff_summary": [
      {
        "file": ".github/workflows/nix.yml",
        "status": "M",
        "additions": 2,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2021-02-17T18:17:26Z",
    "update_date": "2021-02-17T20:43:36Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: CI",
        "description": "Issue or PR about the CI. (Gitlab CI or CI of dependencies problems linked with math-comp)"
      }
    ],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "web-flow",
        "hash": "46710699220bff149a485b60311c0a01225853d3",
        "message": "Update nix.yml",
        "date": "2021-02-17T18:17:21Z"
      },
      {
        "author": "CohenCyril",
        "committer": "web-flow",
        "hash": "3ef3d5a80c975cd454c0c0247b582e9f15e8f312",
        "message": "Update nix.yml",
        "date": "2021-02-17T18:45:35Z"
      },
      {
        "author": "CohenCyril",
        "committer": "web-flow",
        "hash": "296adea552f89fcf90008f8a501a3dcd2301a101",
        "message": "Update nix.yml",
        "date": "2021-02-17T19:03:08Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 697,
    "diff_summary": [
      {
        "file": ".gitlab-ci.yml",
        "status": "A",
        "additions": 13127,
        "deletions": 3191
      },
      {
        "file": "mathcomp/Make",
        "status": "A",
        "additions": 13127,
        "deletions": 3191
      },
      {
        "file": "mathcomp/Make.test-suite",
        "status": "A",
        "additions": 13127,
        "deletions": 3191
      },
      {
        "file": "mathcomp/algebra/interval.v",
        "status": "A",
        "additions": 13127,
        "deletions": 3191
      },
      {
        "file": "mathcomp/algebra/rat.v",
        "status": "A",
        "additions": 13127,
        "deletions": 3191
      },
      {
        "file": "mathcomp/algebra/ssrint.v",
        "status": "A",
        "additions": 13127,
        "deletions": 3191
      },
      {
        "file": "mathcomp/algebra/ssrnum.v",
        "status": "A",
        "additions": 13127,
        "deletions": 3191
      },
      {
        "file": "mathcomp/ssreflect/Make",
        "status": "A",
        "additions": 13127,
        "deletions": 3191
      },
      {
        "file": "mathcomp/ssreflect/all_ssreflect.v",
        "status": "A",
        "additions": 13127,
        "deletions": 3191
      },
      {
        "file": "mathcomp/ssreflect/order.v",
        "status": "A",
        "additions": 13127,
        "deletions": 3191
      },
      {
        "file": "mathcomp/ssreflect/relorder.v",
        "status": "A",
        "additions": 13127,
        "deletions": 3191
      },
      {
        "file": "mathcomp/test_suite/test_order_conv.v",
        "status": "A",
        "additions": 13127,
        "deletions": 3191
      }
    ],
    "state": "open",
    "open_date": "2021-01-22T06:43:50Z",
    "update_date": "2023-02-24T23:25:15Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "b26abe87b46af2417f0fb798e77853951dc571a3",
        "message": "Fix `\\meet^p` and `\\join^p` notations and the scope of n.-tuplelexi notation",
        "date": "2023-02-24T23:10:49Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "804f155e0fee7d3b6448198eb902f434f32a08e6",
        "message": "Redefine the lattice structure with fewer axioms\n\nthat also eliminate the interaction between meet and join, so that it can also\nbe redefined as the join of meet-semilattice and join-semilattice structures\nwithout extra mixin.",
        "date": "2023-02-24T23:10:49Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "aed9dc0e0e5bc86df3b47e0cf5afb280f211fca4",
        "message": "Add some order structures and implement definitionally involutive duals\n\n- Add meet and join semilattice structures\n- Add some order structures with a top but without a bottom\n- T^d^d is definitionally equal to T where T is an ordered type instance",
        "date": "2023-02-24T23:10:49Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "fd8732c50e835c544443915ce76f05d1b255a86c",
        "message": "Add some more order structures\n\n- The following order structures have been added:\n  + `(b|t|tb)OrderType`,\n  + `fin(B)MeetSemilatticeType`, and\n  + `fin(T)JoinSemilatticeType`.\n- Since a finite lattice has lower and upper bounds if it is nonempty, the\n  finite lattice structures `finLatticeType`, `finDistrLatticeType`,\n  `finOrderType`, and `finCDistrLatticeType` were equipped with bounds before\n  this change. They have been renamed to `finTBLatticeType`,\n  `finTBDistrLatticeType`, `finTBOrderType`, and `finCTBDistrLatticeType` and\n  the original ones except for `finCDistrLatticeType` have been redefined as\n  possibly empty ones, which allows us, e.g., to make a finite ordinal `'I_n`\n  a `finOrderType` for any `n`.",
        "date": "2023-02-24T23:10:49Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "d37495aa8ebe9e0d594046e90c4aa256f8b813b8",
        "message": "Documentation",
        "date": "2023-02-24T23:10:49Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "93250a5f9056fda5f16bf2035da42598e2dbfae9",
        "message": "Refactor the order theory\n\n- Refactor the order theory,\n- Redefine `porderType` with fewer axioms, and\n- Rename `(meet|join)SemilatticeMixin` to `(meet|join)Mixin`.",
        "date": "2023-02-24T23:10:49Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "c315edd8fe3abbfdfe8a915ff95edda967f4e6a6",
        "message": "Add CI overlays",
        "date": "2023-02-24T23:10:49Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "8894c9ea9c4555b9969c497d1c96e550d5ad2173",
        "message": "Port the relorder library from Coq-Polyhedra/order",
        "date": "2023-02-24T23:10:49Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "6a5860c6bca1c0bc4c2a972637cf25c8740839ef",
        "message": "Propagate changes",
        "date": "2023-02-24T23:10:49Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "4720fbc58a9fa7ebf1ebbadcf0b09d4cb183707a",
        "message": "[hack] Get rid of the `canonical=no` attribute",
        "date": "2023-02-24T23:10:49Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "9967dfce5e8f0bf890882a23d7193a569aefbf4f",
        "message": "Export dual instances",
        "date": "2023-02-24T23:10:49Z"
      },
      {
        "author": "strub",
        "committer": "pi8027",
        "hash": "06562e9b44d26a03de2b04f5e834da9c73b34458",
        "message": "prefix relorder items with `r`",
        "date": "2023-02-24T23:10:50Z"
      },
      {
        "author": "nhojem",
        "committer": "pi8027",
        "hash": "c2b05b5d42627fa904a0294d4f8ef21c14159628",
        "message": "new def involutive displays",
        "date": "2023-02-24T23:10:50Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "9ff83f58db87aa63c76980fdc859e62986a14ca4",
        "message": "Fix exports",
        "date": "2023-02-24T23:10:50Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "c67f062711cc8812bdf8d32b89015831f68862e2",
        "message": "Make instances for (T * T')^d definitionally equal to ones for T^d * T'^d",
        "date": "2023-02-24T23:10:50Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "ccea780cd52f0c670424d838d2051a517148f05a",
        "message": "Simpler duality-friendly product order",
        "date": "2023-02-24T23:10:50Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "c632f9e3cfd99a4ed64a49a1f29cdf0e8c0601ce",
        "message": "Arguments declarations for relorder inheritance\n\nIn addition:\n- turn the relorder structures into primitive records, and\n- fix the mixins and packagers accordingly.",
        "date": "2023-02-24T23:10:50Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "ad11c9761d077e04213077ae20206cb51510aedf",
        "message": "rosimpl tactic",
        "date": "2023-02-24T23:10:50Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 696,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 8,
        "deletions": 0
      },
      {
        "file": "mathcomp/ssreflect/bigop.v",
        "status": "M",
        "additions": 8,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2021-01-18T19:25:39Z",
    "update_date": "2021-01-25T10:42:04Z",
    "discussion": [
      {
        "author": "ybertot",
        "date": "2021-01-19T08:27:31Z",
        "comment": "There is clever use of  view sequencing in the one-liner proof.  This could deserve some elaborated explanation in some educational material, but this file is not the right place for such a documentation.  So, as far as I am concerned, **this is good to merge**.\r\n"
      },
      {
        "author": "CohenCyril",
        "date": "2021-01-19T13:48:54Z",
        "comment": "> There is clever use of view sequencing in the one-liner proof. This could deserve some elaborated explanation in some educational material, but this file is not the right place for such a documentation. So, as far as I am concerned, **this is good to merge**.\r\n\r\nFTR the explanation is here https://stackoverflow.com/questions/61556710#answer-65779039"
      },
      {
        "author": "CohenCyril",
        "date": "2021-01-22T17:45:21Z",
        "comment": "@ybertot is something blocking?"
      },
      {
        "author": "ybertot",
        "date": "2021-01-25T10:42:09Z",
        "comment": "Thanks @CohenCyril, @anton-trunov "
      }
    ],
    "review_discussion": [
      {
        "author": "anton-trunov",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2021-01-19T09:31:15Z",
        "comment": "Should this be as follows?\r\n```suggestion\r\n- in `bigop.v`, added lemma `sumnB`.\r\n```"
      },
      {
        "author": "ybertot",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2021-01-19T09:46:37Z",
        "comment": "I did clone the repository and tried to animate the proof.  I went first to ssrnat (because of the CHANGELOG information) and then thought \"I am stupid, this is obviously a bigop operation).  I spent so much time studying the code that I did not realize the mishap with not finding sumnB in ssrnat was really a bug in the changelog.  I agree with Anton, this needs to be changed."
      }
    ],
    "tags": [
      {
        "tag": "kind: enhancement",
        "description": "Issue or PR about addition of features."
      }
    ],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "1b1b52fc8777c54f411c8c51dc9ce5d4dbf137a8",
        "message": "Adding lemma sumnB\n\ncf https://stackoverflow.com/questions/61556710",
        "date": "2021-01-19T02:02:09Z"
      },
      {
        "author": "CohenCyril",
        "committer": "web-flow",
        "hash": "f50852b0745b287c0ce8269752507bddd5be9fe2",
        "message": "Update CHANGELOG_UNRELEASED.md\n\nCo-authored-by: Anton Trunov <anton.a.trunov@gmail.com>",
        "date": "2021-01-19T13:47:39Z"
      }
    ]
  },
  {
    "author": "affeldt-aist",
    "number": 695,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 3,
        "deletions": 3
      },
      {
        "file": "mathcomp/algebra/interval.v",
        "status": "M",
        "additions": 3,
        "deletions": 3
      }
    ],
    "state": "merged",
    "open_date": "2021-01-18T16:37:34Z",
    "update_date": "2021-01-19T19:47:38Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: fix",
        "description": "PR that fixes a bug. Please refer to the appropriate issue(s) if relevant."
      }
    ],
    "commits": [
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "e1d5e9c2585bad2e9c27a476276761cc71ff9c91",
        "message": "fixes #694",
        "date": "2021-01-18T16:36:20Z"
      }
    ]
  },
  {
    "author": "affeldt-aist",
    "number": 693,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 10,
        "deletions": 0
      },
      {
        "file": "mathcomp/algebra/interval.v",
        "status": "M",
        "additions": 10,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2021-01-14T04:53:42Z",
    "update_date": "2021-01-18T15:49:39Z",
    "discussion": [],
    "review_discussion": [
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/interval.v",
        "date": "2021-01-14T06:02:33Z",
        "comment": "`ge_pinftyE` ?"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/interval.v",
        "date": "2021-01-14T06:03:01Z",
        "comment": "`le_minftyE`? Also I prefer `ninfty` over `minfty` (`p`/`n` stand for positive and negative)."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/interval.v",
        "date": "2021-01-14T06:03:55Z",
        "comment": "`gt_pinfty` would be more uniform."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/interval.v",
        "date": "2021-01-14T06:09:00Z",
        "comment": "Similarly, `lt_m(n)infty`."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/interval.v",
        "date": "2021-01-18T15:50:48Z",
        "comment": "I was a bit quick to merge, there is no need for an `E` suffix in the name here. (this is generally reserverd for `defE` where `def` is a single definition symbol)"
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "5e809e16078d4659cd2dbb6c1bbc754fa6d3b6ee",
        "message": "itv_bound comparison with -oo/+oo",
        "date": "2021-01-14T07:49:39Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 692,
    "diff_summary": [
      {
        "file": ".gitlab-ci.yml",
        "status": "M",
        "additions": 87,
        "deletions": 31
      }
    ],
    "state": "merged",
    "open_date": "2021-01-08T16:40:24Z",
    "update_date": "2021-01-09T02:37:01Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: CI",
        "description": "Issue or PR about the CI. (Gitlab CI or CI of dependencies problems linked with math-comp)"
      }
    ],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "02a783e8f777d18b83be0e3a1352ceeebc018960",
        "message": "Adding real-closed, analysis and multinomials to the CI",
        "date": "2021-01-08T16:08:21Z"
      },
      {
        "author": "CohenCyril",
        "committer": "web-flow",
        "hash": "290d063b6008fc5c9fa26f23536becdbf9ecb70a",
        "message": "removing analysis for 8.10",
        "date": "2021-01-08T17:39:37Z"
      }
    ]
  },
  {
    "author": "proux01",
    "number": 691,
    "diff_summary": [
      {
        "file": ".github/workflows/nix.yml",
        "status": "A",
        "additions": 2896,
        "deletions": 2455
      },
      {
        "file": ".gitlab-ci.yml",
        "status": "A",
        "additions": 2896,
        "deletions": 2455
      },
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "A",
        "additions": 2896,
        "deletions": 2455
      },
      {
        "file": "coq-mathcomp-ssreflect.opam",
        "status": "A",
        "additions": 2896,
        "deletions": 2455
      },
      {
        "file": "mathcomp/Make",
        "status": "A",
        "additions": 2896,
        "deletions": 2455
      },
      {
        "file": "mathcomp/Makefile.common",
        "status": "A",
        "additions": 2896,
        "deletions": 2455
      },
      {
        "file": "mathcomp/algebra/Make",
        "status": "A",
        "additions": 2896,
        "deletions": 2455
      },
      {
        "file": "mathcomp/algebra/archimedean.v",
        "status": "A",
        "additions": 2896,
        "deletions": 2455
      },
      {
        "file": "mathcomp/algebra/intdiv.v",
        "status": "A",
        "additions": 2896,
        "deletions": 2455
      },
      {
        "file": "mathcomp/algebra/interval.v",
        "status": "A",
        "additions": 2896,
        "deletions": 2455
      },
      {
        "file": "mathcomp/algebra/matrix.v",
        "status": "A",
        "additions": 2896,
        "deletions": 2455
      },
      {
        "file": "mathcomp/algebra/mxalgebra.v",
        "status": "A",
        "additions": 2896,
        "deletions": 2455
      },
      {
        "file": "mathcomp/algebra/poly.v",
        "status": "A",
        "additions": 2896,
        "deletions": 2455
      },
      {
        "file": "mathcomp/algebra/polydiv.v",
        "status": "A",
        "additions": 2896,
        "deletions": 2455
      },
      {
        "file": "mathcomp/algebra/rat.v",
        "status": "A",
        "additions": 2896,
        "deletions": 2455
      },
      {
        "file": "mathcomp/algebra/ssralg.v",
        "status": "A",
        "additions": 2896,
        "deletions": 2455
      },
      {
        "file": "mathcomp/algebra/ssrint.v",
        "status": "A",
        "additions": 2896,
        "deletions": 2455
      },
      {
        "file": "mathcomp/algebra/ssrnum.v",
        "status": "A",
        "additions": 2896,
        "deletions": 2455
      },
      {
        "file": "mathcomp/algebra/vector.v",
        "status": "A",
        "additions": 2896,
        "deletions": 2455
      },
      {
        "file": "mathcomp/character/character.v",
        "status": "A",
        "additions": 2896,
        "deletions": 2455
      },
      {
        "file": "mathcomp/character/classfun.v",
        "status": "A",
        "additions": 2896,
        "deletions": 2455
      },
      {
        "file": "mathcomp/character/inertia.v",
        "status": "A",
        "additions": 2896,
        "deletions": 2455
      },
      {
        "file": "mathcomp/character/integral_char.v",
        "status": "A",
        "additions": 2896,
        "deletions": 2455
      },
      {
        "file": "mathcomp/character/vcharacter.v",
        "status": "A",
        "additions": 2896,
        "deletions": 2455
      },
      {
        "file": "mathcomp/field/algC.v",
        "status": "A",
        "additions": 2896,
        "deletions": 2455
      },
      {
        "file": "mathcomp/field/algebraics_fundamentals.v",
        "status": "A",
        "additions": 2896,
        "deletions": 2455
      },
      {
        "file": "mathcomp/field/algnum.v",
        "status": "A",
        "additions": 2896,
        "deletions": 2455
      },
      {
        "file": "mathcomp/field/cyclotomic.v",
        "status": "A",
        "additions": 2896,
        "deletions": 2455
      },
      {
        "file": "mathcomp/field/finfield.v",
        "status": "A",
        "additions": 2896,
        "deletions": 2455
      },
      {
        "file": "mathcomp/fingroup/action.v",
        "status": "A",
        "additions": 2896,
        "deletions": 2455
      },
      {
        "file": "mathcomp/fingroup/perm.v",
        "status": "A",
        "additions": 2896,
        "deletions": 2455
      },
      {
        "file": "mathcomp/ssreflect/bigop.v",
        "status": "A",
        "additions": 2896,
        "deletions": 2455
      },
      {
        "file": "mathcomp/ssreflect/div.v",
        "status": "A",
        "additions": 2896,
        "deletions": 2455
      },
      {
        "file": "mathcomp/ssreflect/finset.v",
        "status": "A",
        "additions": 2896,
        "deletions": 2455
      },
      {
        "file": "mathcomp/ssreflect/fintype.v",
        "status": "A",
        "additions": 2896,
        "deletions": 2455
      },
      {
        "file": "mathcomp/ssreflect/order.v",
        "status": "A",
        "additions": 2896,
        "deletions": 2455
      },
      {
        "file": "mathcomp/ssreflect/path.v",
        "status": "A",
        "additions": 2896,
        "deletions": 2455
      },
      {
        "file": "mathcomp/ssreflect/prime.v",
        "status": "A",
        "additions": 2896,
        "deletions": 2455
      },
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "A",
        "additions": 2896,
        "deletions": 2455
      },
      {
        "file": "mathcomp/ssreflect/ssreflect.v",
        "status": "A",
        "additions": 2896,
        "deletions": 2455
      },
      {
        "file": "mathcomp/ssreflect/ssrnat.v",
        "status": "A",
        "additions": 2896,
        "deletions": 2455
      }
    ],
    "state": "closed",
    "open_date": "2021-01-08T14:04:45Z",
    "update_date": "2021-01-26T09:52:14Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2021-01-08T14:13:33Z",
        "comment": "@proux01 I believe it would make sense to perform this addition/refactoring on top of #682 instead. CC @pi8027 "
      },
      {
        "author": "proux01",
        "date": "2021-01-08T14:45:52Z",
        "comment": "Indeed, I missed that PR, that would make perfect sense, let me try that."
      },
      {
        "author": "proux01",
        "date": "2021-01-08T20:51:01Z",
        "comment": "@pi8027 fell free to cherry pick my commits in #682 and close this one if it's more convenient for you."
      },
      {
        "author": "pi8027",
        "date": "2021-01-26T03:09:13Z",
        "comment": "@proux01 I decided to include your commits in #682 except for \"Add floorq and ceilq\". My plan is to modify the Archimedean mixin to have the floor (and ceil) function inside it (but we cannot do that for the next release for compatibility reasons), and then we will be able to declare the `archiNumDomainType` instance of `rat` whose floor and ceil functions are convertible with your `floorq` and `ceilq`. If you agree with this plan, I will close this PR. Thanks for your contribution!"
      },
      {
        "author": "proux01",
        "date": "2021-01-26T09:53:02Z",
        "comment": "> @proux01 I decided to include your commits in #682 except for \"Add floorq and ceilq\". My plan is to modify the Archimedean mixin to have the floor (and ceil) function inside it (but we cannot do that for the next release for compatibility reasons), and then we will be able to declare the `archiNumDomainType` instance of `rat` whose floor and ceil functions are convertible with your `floorq` and `ceilq`. If you agree with this plan, I will close this PR. Thanks for your contribution!\r\n\r\nGreat, PR closed."
      }
    ],
    "review_discussion": [
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/intdiv.v",
        "date": "2021-01-26T04:41:36Z",
        "comment": "BTW, isn't it possible to define such `floorq` without case analysis on `0 <= numq x`?"
      },
      {
        "author": "proux01",
        "file": "mathcomp/algebra/intdiv.v",
        "date": "2021-01-26T09:54:14Z",
        "comment": "I don't think so, the integer division `%/` is symmetric around `0` whereas `floor` isn't."
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "5f748f7ed9940c0db56e7dadd166f5e69bde6da9",
        "message": "Drop support for Coq 8.10 and deprecate the `deprecate` notation\n\n- The `deprecate` notation and `iota_add` have been deprecated. All the uses of\n  the `deprecate` notation have been replaced with the `deprecated` attribute.\n- Deprecation aliases in `ssrnat` and `ssrnum` introduced in MathComp 1.11+beta1\n  have been removed.\n- Remove `VDFILE` related hacks from `Makefile.common`.",
        "date": "2021-01-15T15:28:21Z"
      },
      {
        "author": "Sobernard",
        "committer": "pi8027",
        "hash": "737f6455e4692ab5f8a76ec97cdc70040cf821bc",
        "message": "prepare for pull request : pbs with Hints, mainly for Cint1 and Cnat0",
        "date": "2021-01-15T15:28:27Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "7704ecb4f850d088e0a58834be49425fc6fdeb70",
        "message": "Rename the Archimedean structures",
        "date": "2021-01-15T15:28:27Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "967b7459d29916b9204af9fb5c9487549936e1e9",
        "message": "Fix compilation, structure inheritance, and hints",
        "date": "2021-01-15T15:28:27Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "b5e6c6f3e864b330532cd0dd72cc91a7b6e4be4a",
        "message": "Remove `Qnat` and `Qint` except for names of lemmas",
        "date": "2021-01-15T15:28:27Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "bc3acdde0c6f11d3bfa47af98477eb28296b40b9",
        "message": "Relocate int/nat subsets of an archiNumDomainType to ssrnum.v",
        "date": "2021-01-15T15:28:27Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "6a72b62d32f1d3641b3709e81eae7680ff7d587c",
        "message": "Add deprecation aliases",
        "date": "2021-01-15T15:28:27Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "d07d1e10ff80855c3e2b73d3d0648d1b09cc89f6",
        "message": "Deprecate the Archimedean structures/theory in ssrnum.v and re-export them from archimedean.v",
        "date": "2021-01-15T15:28:27Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "4b2098388a3da89cbcc29b6bc237ada85494a593",
        "message": "Add CI overlays",
        "date": "2021-01-15T15:28:27Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "968de254d1c93b795161563d2bcf11dfaeb07e5d",
        "message": "Add a few lemmas about Num.floor",
        "date": "2021-01-18T11:27:06Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "c7ad6abbd133a9f9973dfeccb1d59ec629a5292b",
        "message": "Add Num.ceil",
        "date": "2021-01-18T11:27:06Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "fbb065c8a1b4b8de5d096d6888384191aebd2018",
        "message": "Add floorq and ceilq",
        "date": "2021-01-18T11:27:06Z"
      },
      {
        "author": "proux01",
        "committer": "proux01",
        "hash": "7e76b2231216dc4128263caf35a290c28a2b2c33",
        "message": "ratr commutes with floor and ceil",
        "date": "2021-01-18T11:27:06Z"
      }
    ]
  },
  {
    "author": "affeldt-aist",
    "number": 690,
    "diff_summary": [
      {
        "file": "mathcomp/algebra/polydiv.v",
        "status": "M",
        "additions": 1,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2021-01-04T04:58:03Z",
    "update_date": "2021-01-05T10:46:05Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: fix",
        "description": "PR that fixes a bug. Please refer to the appropriate issue(s) if relevant."
      }
    ],
    "commits": [
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "92efd5efceb6835523e0bb2d09cd12e3b21a4127",
        "message": "erroneous deprecation warning",
        "date": "2021-01-04T04:56:16Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 688,
    "diff_summary": [
      {
        "file": ".gitlab-ci.yml",
        "status": "M",
        "additions": 54,
        "deletions": 14
      },
      {
        "file": "coq-mathcomp-ssreflect.opam",
        "status": "M",
        "additions": 54,
        "deletions": 14
      }
    ],
    "state": "merged",
    "open_date": "2020-12-20T13:20:46Z",
    "update_date": "2021-01-15T12:58:25Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2021-01-08T20:04:36Z",
        "comment": "Hi @anton-trunov, will you soon update fcsl-pcm and lemma-overloading or their opam metadata to make them compile with Coq 8.13 or should we temporarily remove the coq 8.13  from mathcomp CI?"
      },
      {
        "author": "pi8027",
        "date": "2021-01-13T09:55:41Z",
        "comment": "I commented out `ci-fcsl-pcm-8.13` and `ci-lemma-overloading-8.13` so that we can merge this."
      },
      {
        "author": "anton-trunov",
        "date": "2021-01-13T10:25:16Z",
        "comment": "Hi @pi8027! I just updated `lemma-overloading`'s meta-data to Coq 8.13: https://github.com/coq-community/lemma-overloading/pull/65 so it should work now. Sorry for the delay."
      },
      {
        "author": "anton-trunov",
        "date": "2021-01-13T10:27:21Z",
        "comment": "Pinging @clayrat for `fcsl-pcm`..."
      },
      {
        "author": "clayrat",
        "date": "2021-01-14T23:59:13Z",
        "comment": "Updated `fcsl-pcm`: https://github.com/imdea-software/fcsl-pcm/commit/4343e51d2f365ca75fd4a57cadf166b7850bdb36"
      },
      {
        "author": "pi8027",
        "date": "2021-01-15T00:14:47Z",
        "comment": "@anton-trunov @clayrat Thank you!"
      },
      {
        "author": "pi8027",
        "date": "2021-01-15T12:03:08Z",
        "comment": "Shall we merge this? @CohenCyril"
      }
    ],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: CI",
        "description": "Issue or PR about the CI. (Gitlab CI or CI of dependencies problems linked with math-comp)"
      }
    ],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "01260ccd97f5cb698d6cd0936a7ddba43b973afc",
        "message": "[CI/CD] support Coq 8.13",
        "date": "2021-01-15T09:15:07Z"
      }
    ]
  },
  {
    "author": "gares",
    "number": 687,
    "diff_summary": [
      {
        "file": "mathcomp/algebra/ssralg.v",
        "status": "M",
        "additions": 561,
        "deletions": 811
      },
      {
        "file": "mathcomp/ssreflect/choice.v",
        "status": "M",
        "additions": 561,
        "deletions": 811
      },
      {
        "file": "mathcomp/ssreflect/eqtype.v",
        "status": "M",
        "additions": 561,
        "deletions": 811
      },
      {
        "file": "mathcomp/ssreflect/finfun.v",
        "status": "M",
        "additions": 561,
        "deletions": 811
      },
      {
        "file": "mathcomp/ssreflect/finset.v",
        "status": "M",
        "additions": 561,
        "deletions": 811
      },
      {
        "file": "mathcomp/ssreflect/fintype.v",
        "status": "M",
        "additions": 561,
        "deletions": 811
      },
      {
        "file": "mathcomp/ssreflect/order.v",
        "status": "M",
        "additions": 561,
        "deletions": 811
      },
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 561,
        "deletions": 811
      },
      {
        "file": "mathcomp/ssreflect/ssrnat.v",
        "status": "M",
        "additions": 561,
        "deletions": 811
      },
      {
        "file": "mathcomp/ssreflect/tuple.v",
        "status": "M",
        "additions": 561,
        "deletions": 811
      }
    ],
    "state": "closed",
    "open_date": "2020-12-15T16:07:57Z",
    "update_date": "2020-12-15T16:08:16Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2020-12-15T16:28:04Z",
        "comment": "in master ? :laughing: "
      }
    ],
    "review_discussion": [],
    "tags": [
      {
        "tag": "needs: rebase",
        "description": "PR which is not rebased: check the target is appropriate (generally master) and rebase on top of it."
      }
    ],
    "commits": [
      {
        "author": "gares",
        "committer": "gares",
        "hash": "fd89d3b8d547b07e70aad630c5a0eb0a63d2b604",
        "message": "wip: upto sig_eqMixin",
        "date": "2020-08-26T08:15:26Z"
      },
      {
        "author": "CohenCyril",
        "committer": "gares",
        "hash": "86c07a93fc94f669c6e3b222e5f0c148957102e4",
        "message": "fixed eqtype seq ssrnat, wip choice",
        "date": "2020-08-26T08:15:26Z"
      },
      {
        "author": "CohenCyril",
        "committer": "gares",
        "hash": "2dba7f56077029f0f8ca9ac05b370afaf21c4478",
        "message": "wip",
        "date": "2020-08-26T08:15:26Z"
      },
      {
        "author": "gares",
        "committer": "gares",
        "hash": "85c46394e6b80abc0c0f2d893ca2aaeb73cac58c",
        "message": "some more porting",
        "date": "2020-08-26T08:15:26Z"
      },
      {
        "author": "gares",
        "committer": "gares",
        "hash": "2c6f4138b020a47d7ffab1b461c04d423116fede",
        "message": "tiny step",
        "date": "2020-08-26T08:15:26Z"
      },
      {
        "author": "CohenCyril",
        "committer": "gares",
        "hash": "6b22e9fb0b9c9bcd292040ef91c3603b7398d5b3",
        "message": "finished choice.v",
        "date": "2020-08-26T08:15:26Z"
      },
      {
        "author": "gares",
        "committer": "gares",
        "hash": "e5936ee52ba860baf367d2ea3403c28b648293e1",
        "message": "adapt to HB branch mathcomp-compat",
        "date": "2020-08-26T08:15:26Z"
      },
      {
        "author": "gares",
        "committer": "gares",
        "hash": "c5d61e80ef2e57030d60037f703e5ee6e4ef266d",
        "message": "looks better now",
        "date": "2020-08-26T08:15:26Z"
      },
      {
        "author": "gares",
        "committer": "gares",
        "hash": "f436b48fcd699ba273f4338ac94317adbe7da0a2",
        "message": "wip",
        "date": "2020-08-26T08:15:26Z"
      },
      {
        "author": "gares",
        "committer": "gares",
        "hash": "2b523737bb8bfddd1fe4876adeaf600f26aecfb3",
        "message": "no more backward compat in eqype and choice",
        "date": "2020-08-26T08:15:26Z"
      },
      {
        "author": "gares",
        "committer": "gares",
        "hash": "065890a811e10247ab5de16c82285b71e47c4d8f",
        "message": "more",
        "date": "2020-08-26T08:15:26Z"
      },
      {
        "author": "gares",
        "committer": "gares",
        "hash": "22e9416ca9d496d08ab084546bd4e69b8dd900a3",
        "message": "wip (subtype)",
        "date": "2020-08-26T10:03:18Z"
      },
      {
        "author": "gares",
        "committer": "gares",
        "hash": "703049d7e901920515667e9ce302e17edfb81d6a",
        "message": "back to fintype",
        "date": "2020-08-26T10:06:30Z"
      },
      {
        "author": "gares",
        "committer": "gares",
        "hash": "38871c4dd384cba1a1f1d450e408dce25ee60fed",
        "message": "wip",
        "date": "2020-09-02T08:11:35Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "eb25a4643ba2524cd7c8f1380cc9e37280ad7f79",
        "message": "wip fintype",
        "date": "2020-09-02T09:56:04Z"
      },
      {
        "author": "gares",
        "committer": "gares",
        "hash": "165dc2c8cc78fca504a5c730d6744471ea6f17e7",
        "message": "more",
        "date": "2020-09-10T09:45:54Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "ac826487e6d5bbc5992a6dddad657fb80a0b882a",
        "message": "fixing hierarchy of subtypes which was breaking forgetful inheritance",
        "date": "2020-09-16T10:02:17Z"
      },
      {
        "author": "gares",
        "committer": "gares",
        "hash": "29fc3349e2195ae8656af2a1d5df87f4dd4f17df",
        "message": "fix naming typo",
        "date": "2020-09-24T09:46:26Z"
      },
      {
        "author": "gares",
        "committer": "gares",
        "hash": "0b768c326693edc621448b9380d12ecb8893a8b8",
        "message": "clean up type",
        "date": "2020-09-24T09:46:37Z"
      },
      {
        "author": "gares",
        "committer": "gares",
        "hash": "18ddb21f52ca9affc2b4e4d4296ab1e8d82a5f0b",
        "message": "more work",
        "date": "2020-09-24T09:48:45Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "cb5507ee30616349d5b770992aa8b1bbb6912f92",
        "message": "wip 3 more lines",
        "date": "2020-10-08T09:32:26Z"
      },
      {
        "author": "gares",
        "committer": "gares",
        "hash": "b5ebb640800f1e49076e738bf978f224eb4823f9",
        "message": "blurb",
        "date": "2020-10-16T13:56:42Z"
      },
      {
        "author": "gares",
        "committer": "gares",
        "hash": "9d2b38c8c21d8558286e08ebfe7e5f0190613e90",
        "message": "wip",
        "date": "2020-10-21T10:58:01Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "2c36ab7d9b320779aef79b52e991a330037c2233",
        "message": "1/3 through ssralg",
        "date": "2020-11-26T15:54:16Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "523cbc073691eeb791b9c08b89e311f2b37e07eb",
        "message": "converted lmodule lalgebra and comring",
        "date": "2020-11-27T01:44:49Z"
      },
      {
        "author": "gares",
        "committer": "gares",
        "hash": "3d31d1425c394e5365044d177bc0144bc0f3d14c",
        "message": "wip",
        "date": "2020-12-15T16:05:54Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 686,
    "diff_summary": [
      {
        "file": ".github/workflows/nix.yml",
        "status": "M",
        "additions": 403,
        "deletions": 1472
      },
      {
        "file": ".gitlab-ci.yml",
        "status": "M",
        "additions": 403,
        "deletions": 1472
      },
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 403,
        "deletions": 1472
      },
      {
        "file": "coq-mathcomp-ssreflect.opam",
        "status": "M",
        "additions": 403,
        "deletions": 1472
      },
      {
        "file": "mathcomp/Makefile.common",
        "status": "M",
        "additions": 403,
        "deletions": 1472
      },
      {
        "file": "mathcomp/algebra/intdiv.v",
        "status": "M",
        "additions": 403,
        "deletions": 1472
      },
      {
        "file": "mathcomp/algebra/interval.v",
        "status": "M",
        "additions": 403,
        "deletions": 1472
      },
      {
        "file": "mathcomp/algebra/matrix.v",
        "status": "M",
        "additions": 403,
        "deletions": 1472
      },
      {
        "file": "mathcomp/algebra/mxalgebra.v",
        "status": "M",
        "additions": 403,
        "deletions": 1472
      },
      {
        "file": "mathcomp/algebra/poly.v",
        "status": "M",
        "additions": 403,
        "deletions": 1472
      },
      {
        "file": "mathcomp/algebra/polydiv.v",
        "status": "M",
        "additions": 403,
        "deletions": 1472
      },
      {
        "file": "mathcomp/algebra/ssralg.v",
        "status": "M",
        "additions": 403,
        "deletions": 1472
      },
      {
        "file": "mathcomp/algebra/ssrint.v",
        "status": "M",
        "additions": 403,
        "deletions": 1472
      },
      {
        "file": "mathcomp/algebra/ssrnum.v",
        "status": "M",
        "additions": 403,
        "deletions": 1472
      },
      {
        "file": "mathcomp/algebra/vector.v",
        "status": "M",
        "additions": 403,
        "deletions": 1472
      },
      {
        "file": "mathcomp/character/classfun.v",
        "status": "M",
        "additions": 403,
        "deletions": 1472
      },
      {
        "file": "mathcomp/fingroup/action.v",
        "status": "M",
        "additions": 403,
        "deletions": 1472
      },
      {
        "file": "mathcomp/fingroup/perm.v",
        "status": "M",
        "additions": 403,
        "deletions": 1472
      },
      {
        "file": "mathcomp/ssreflect/bigop.v",
        "status": "M",
        "additions": 403,
        "deletions": 1472
      },
      {
        "file": "mathcomp/ssreflect/div.v",
        "status": "M",
        "additions": 403,
        "deletions": 1472
      },
      {
        "file": "mathcomp/ssreflect/finset.v",
        "status": "M",
        "additions": 403,
        "deletions": 1472
      },
      {
        "file": "mathcomp/ssreflect/fintype.v",
        "status": "M",
        "additions": 403,
        "deletions": 1472
      },
      {
        "file": "mathcomp/ssreflect/order.v",
        "status": "M",
        "additions": 403,
        "deletions": 1472
      },
      {
        "file": "mathcomp/ssreflect/path.v",
        "status": "M",
        "additions": 403,
        "deletions": 1472
      },
      {
        "file": "mathcomp/ssreflect/prime.v",
        "status": "M",
        "additions": 403,
        "deletions": 1472
      },
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 403,
        "deletions": 1472
      },
      {
        "file": "mathcomp/ssreflect/ssreflect.v",
        "status": "M",
        "additions": 403,
        "deletions": 1472
      },
      {
        "file": "mathcomp/ssreflect/ssrnat.v",
        "status": "M",
        "additions": 403,
        "deletions": 1472
      }
    ],
    "state": "merged",
    "open_date": "2020-12-15T13:43:32Z",
    "update_date": "2021-01-22T14:13:52Z",
    "discussion": [
      {
        "author": "pi8027",
        "date": "2020-12-16T10:10:29Z",
        "comment": "There was a discussion about this PR. The conclusion is that we do not have to drop support for Coq 8.10, but deprecation warnings will not arise in Coq 8.10 if we switch the deprecation mechanism as this PR does."
      },
      {
        "author": "pi8027",
        "date": "2020-12-16T13:29:24Z",
        "comment": "```\r\n# File \"./ssreflect.v\", line 82, characters 0-226:\r\n# Error: This command does not support this attribute: deprecated.\r\n```\r\nSo we have to drop support for Coq 8.10 to merge this PR. @CohenCyril "
      },
      {
        "author": "CohenCyril",
        "date": "2020-12-16T18:11:34Z",
        "comment": "> So we have to drop support for Coq 8.10 to merge this PR. @CohenCyril\r\n\r\nHence I have wrong memories about this..."
      },
      {
        "author": "pi8027",
        "date": "2021-01-15T15:40:12Z",
        "comment": "Since we have reached a consensus in the last meeting and now we have Coq 8.13 in CI, this PR is ready for review."
      },
      {
        "author": "CohenCyril",
        "date": "2021-01-18T15:58:23Z",
        "comment": "Great work, thanks!\r\n"
      }
    ],
    "review_discussion": [
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/ssreflect.v",
        "date": "2020-12-15T13:58:15Z",
        "comment": "I'm loving this"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-12-15T14:06:04Z",
        "comment": "These deprecation aliases are quite old (deprecated in MathComp 1.9.0). So there is probably no reason to keep them."
      },
      {
        "author": "pi8027",
        "file": ".github/workflows/nix.yml",
        "date": "2021-01-15T15:30:35Z",
        "comment": "Should I simply add `\"8.13\"` here BTW?"
      },
      {
        "author": "CohenCyril",
        "file": ".github/workflows/nix.yml",
        "date": "2021-01-15T15:32:12Z",
        "comment": "No, it requires an update of nixpkgs, but since I did a huge refactoring, it will not be compatible with the current configuration for mathcomp. Please leave it out, I will come back and fix it asap."
      },
      {
        "author": "pi8027",
        "file": ".github/workflows/nix.yml",
        "date": "2021-01-15T15:35:33Z",
        "comment": "Sure, thanks."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2021-01-18T15:56:26Z",
        "comment": "Let's remove them indeed."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2021-01-20T19:56:53Z",
        "comment": "So I removed them (in a separate commit for ease of review)."
      }
    ],
    "tags": [
      {
        "tag": "kind: clean-up",
        "description": "This issure/PR is about cleaning up obsolete code, removing hacks, etc"
      },
      {
        "tag": "drops: coq 8.10",
        "description": "Addressing this issue or merging this PR requires to drop support for coq 8.10"
      }
    ],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "5f748f7ed9940c0db56e7dadd166f5e69bde6da9",
        "message": "Drop support for Coq 8.10 and deprecate the `deprecate` notation\n\n- The `deprecate` notation and `iota_add` have been deprecated. All the uses of\n  the `deprecate` notation have been replaced with the `deprecated` attribute.\n- Deprecation aliases in `ssrnat` and `ssrnum` introduced in MathComp 1.11+beta1\n  have been removed.\n- Remove `VDFILE` related hacks from `Makefile.common`.",
        "date": "2021-01-15T15:28:21Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "9ea33f07e98066cd05b5ab93f336f95e83272828",
        "message": "Remove deprecation aliases introduced in 1.9.0",
        "date": "2021-01-22T04:55:50Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 685,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 13,
        "deletions": 10
      },
      {
        "file": "mathcomp/algebra/ssralg.v",
        "status": "M",
        "additions": 13,
        "deletions": 10
      },
      {
        "file": "mathcomp/algebra/ssrint.v",
        "status": "M",
        "additions": 13,
        "deletions": 10
      }
    ],
    "state": "merged",
    "open_date": "2020-12-11T11:33:02Z",
    "update_date": "2020-12-16T19:53:42Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: fix",
        "description": "PR that fixes a bug. Please refer to the appropriate issue(s) if relevant."
      }
    ],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "ac6adab9d089d2209aa6aa697b6d75a640adda10",
        "message": "Change the interpretation scope of some nullary notations from ring_scope to fun_scope",
        "date": "2020-12-16T13:52:16Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 683,
    "diff_summary": [
      {
        "file": ".gitlab-ci.yml",
        "status": "M",
        "additions": 0,
        "deletions": 5
      }
    ],
    "state": "merged",
    "open_date": "2020-12-05T13:45:37Z",
    "update_date": "2020-12-16T10:30:10Z",
    "discussion": [
      {
        "author": "pi8027",
        "date": "2020-12-16T10:09:29Z",
        "comment": "Can someone confirm and merge this PR, or is it fine to self-merge in this case?"
      }
    ],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: CI",
        "description": "Issue or PR about the CI. (Gitlab CI or CI of dependencies problems linked with math-comp)"
      }
    ],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "77d5f269ccdad6c9b625d3ef18a9ab2ed41a6f10",
        "message": "Remove ci-fcsl-pcm-8.10",
        "date": "2020-12-05T13:38:22Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 682,
    "diff_summary": [
      {
        "file": ".gitlab-ci.yml",
        "status": "A",
        "additions": 2459,
        "deletions": 922
      },
      {
        "file": "mathcomp/Make",
        "status": "A",
        "additions": 2459,
        "deletions": 922
      },
      {
        "file": "mathcomp/algebra/Make",
        "status": "A",
        "additions": 2459,
        "deletions": 922
      },
      {
        "file": "mathcomp/algebra/archimedean.v",
        "status": "A",
        "additions": 2459,
        "deletions": 922
      },
      {
        "file": "mathcomp/algebra/intdiv.v",
        "status": "A",
        "additions": 2459,
        "deletions": 922
      },
      {
        "file": "mathcomp/algebra/rat.v",
        "status": "A",
        "additions": 2459,
        "deletions": 922
      },
      {
        "file": "mathcomp/algebra/ssrint.v",
        "status": "A",
        "additions": 2459,
        "deletions": 922
      },
      {
        "file": "mathcomp/algebra/ssrnum.v",
        "status": "A",
        "additions": 2459,
        "deletions": 922
      },
      {
        "file": "mathcomp/character/character.v",
        "status": "A",
        "additions": 2459,
        "deletions": 922
      },
      {
        "file": "mathcomp/character/classfun.v",
        "status": "A",
        "additions": 2459,
        "deletions": 922
      },
      {
        "file": "mathcomp/character/inertia.v",
        "status": "A",
        "additions": 2459,
        "deletions": 922
      },
      {
        "file": "mathcomp/character/integral_char.v",
        "status": "A",
        "additions": 2459,
        "deletions": 922
      },
      {
        "file": "mathcomp/character/vcharacter.v",
        "status": "A",
        "additions": 2459,
        "deletions": 922
      },
      {
        "file": "mathcomp/field/algC.v",
        "status": "A",
        "additions": 2459,
        "deletions": 922
      },
      {
        "file": "mathcomp/field/algebraics_fundamentals.v",
        "status": "A",
        "additions": 2459,
        "deletions": 922
      },
      {
        "file": "mathcomp/field/algnum.v",
        "status": "A",
        "additions": 2459,
        "deletions": 922
      },
      {
        "file": "mathcomp/field/cyclotomic.v",
        "status": "A",
        "additions": 2459,
        "deletions": 922
      },
      {
        "file": "mathcomp/field/finfield.v",
        "status": "A",
        "additions": 2459,
        "deletions": 922
      }
    ],
    "state": "open",
    "open_date": "2020-12-03T22:49:58Z",
    "update_date": "2021-05-31T09:26:08Z",
    "discussion": [
      {
        "author": "pi8027",
        "date": "2020-12-04T12:37:51Z",
        "comment": "> Currently, `classfun.v` is broken since it uses `Cint`, but importing `ssrint` adds the infix `^` notation which collides with that of `group_scope`.\r\n\r\nIt seems that group notations and ring notations are mixed almost everywhere in `classfun.v`. So there is no other solution than adding `%g` whenever required. If a scope declaration for arguments of coercion to `Funclass` works, this situation probably becomes better. But this does not work in the current implementation of Coq (see https://github.com/coq/coq/issues/5527#issuecomment-568242128):\r\n```coq\r\nArguments fun_of_cfun [gT] [B] _ _%g.\r\n```"
      },
      {
        "author": "pi8027",
        "date": "2020-12-04T15:43:50Z",
        "comment": "I guess `Qint` and `Qnat` should be deprecated and superseded by `Cint` and `Cnat` respectively. Right? @CohenCyril "
      },
      {
        "author": "CohenCyril",
        "date": "2020-12-04T16:33:07Z",
        "comment": "> I guess `Qint` and `Qnat` should be deprecated and superseded by `Cint` and `Cnat` respectively. Right? @CohenCyril\r\n\r\nYes! And `Cint` and `Cnat` should both be renamed `Num.int` and `Num.nat`."
      },
      {
        "author": "CohenCyril",
        "date": "2020-12-04T16:34:59Z",
        "comment": "> > I guess `Qint` and `Qnat` should be deprecated and superseded by `Cint` and `Cnat` respectively. Right? @CohenCyril\r\n> \r\n> Yes! And `Cint` and `Cnat` should both be renamed `Num.int` and `Num.nat`.\r\n\r\nAnd they should be in the mixin, so as to make the computations for `ssrint` and `rat` faster!"
      },
      {
        "author": "pi8027",
        "date": "2020-12-04T17:38:15Z",
        "comment": "> > Yes! And `Cint` and `Cnat` should both be renamed `Num.int` and `Num.nat`.\r\n> \r\n> And they should be in the mixin, so as to make the computations for `ssrint` and `rat` faster!\r\n\r\nMake sense. Allowing the use of `Cint` without importing `ssrint` would also be nice to get a better fix for `classfun` and `inertia`. But reimplementing `Cint` theory in the absence of `ssrint` would require some more work."
      },
      {
        "author": "pi8027",
        "date": "2020-12-04T23:08:12Z",
        "comment": "@CohenCyril Could you confirm this is what you mean?\r\n```coq\r\n(* Module ArchiNumDomain. *)\r\nRecord mixin_of (R : numDomainType) := Mixin {\r\n  trunc : R -> nat;\r\n  is_nat : pred R;\r\n  is_int : pred R;\r\n  _ : forall x, 0 <= x -> (trunc x)%:R <= x < (trunc x).+1%:R;\r\n  _ : forall x, is_nat x = ((trunc x)%:R == x);\r\n  _ : forall x, is_int x = is_nat x || is_nat (- x);\r\n}.\r\n```"
      },
      {
        "author": "CohenCyril",
        "date": "2020-12-05T00:11:16Z",
        "comment": "> @CohenCyril Could you confirm this is what you mean?\r\n> \r\n> ```coq\r\n> (* Module ArchiNumDomain. *)\r\n> Record mixin_of (R : numDomainType) := Mixin {\r\n>   trunc : R -> nat;\r\n>   is_nat : pred R;\r\n>   is_int : pred R;\r\n>   _ : forall x, 0 <= x -> (trunc x)%:R <= x < (trunc x).+1%:R;\r\n>   _ : forall x, is_nat x = ((trunc x)%:R == x);\r\n>   _ : forall x, is_int x = is_nat x || is_nat (- x);\r\n> }.\r\n> ```\r\n\r\nYes roughly, except the truncation has no reason to be only for non negative numbers, I would prefer the function in the mixin to be more general, knowing that there could be a factory providing opaque `trunc`, `is_nat`, and `is_int` from a `nat` upper bound.\r\n\r\nI had planned to wait for HB to make this kind of changes... I am a bit surprised you are willing to go through so much work while we intend to trivialize all of this...\r\n"
      },
      {
        "author": "pi8027",
        "date": "2020-12-05T01:00:17Z",
        "comment": "> Yes roughly, except the truncation has no reason to be only for non negative numbers, I would prefer the function in the mixin to be more general, knowing that there could be a factory providing opaque `trunc`, `is_nat`, and `is_int` from a `nat` upper bound.\r\n\r\nThe problem is that we have to relocate the basic part of `ssrint` (`int` and `intmul` at least?) to `ssrnum` (or `ssralg`?) in order to generalize the truncation to the negative case. Since the above mixin has been proved equivalent to `Num.archimedean_axiom`, we can provide such a factory.\r\n\r\n> I had planned to wait for HB to make this kind of changes... I am a bit surprised you are willing to go through so much work while we intend to trivialize all of this...\r\n\r\nReworking an existing branch is easier to do now rather than later. Also, IMO actual difficulties appear in places other than the definitions of structures, as in the breakage of `classfun.v`."
      },
      {
        "author": "pi8027",
        "date": "2020-12-10T10:44:39Z",
        "comment": "`Cnat`, `Cint`, `truncC`, and `floorC` have been renamed to `Num.nat`, `Num.int`, `Num.trunc`, and `floorR` respectively. I guess we have to relocate `ssrint.int` (or make the dependency from `ssrint` to `ssrnum` opposite) to rename `floorR` to `Num.floor` anyway."
      },
      {
        "author": "pi8027",
        "date": "2020-12-11T05:36:50Z",
        "comment": "Almost done except that `floorR` is still not a part of the Archimedean mixin and defined in `ssrint`. I'm not sure what to do about this point."
      },
      {
        "author": "pi8027",
        "date": "2020-12-12T12:03:33Z",
        "comment": "Here is a summary of possible solutions:\r\n1. Keeping the dependency relation of libraries as is, placing `truncR`, `Rnat`, and `Rint` in `ssrnum`, and placing `floorR` in `ssrint` (the current situation):\r\n   - Pros: This solution works.\r\n   - Cons: `floorR` cannot be located in `ssrnum.Num` (we can declare another `Num` module in `ssrint` to work around this, but it seems troublesome). The `floorR` functions of `int` and `rat` cannot be as straightforward/efficient as we expect. The `archiNumDomainType` theory has to be separated into two parts (one in `ssrnum` and another in `ssrint`).\r\n2. Keeping the dependency relation of libraries as is, but relocating `int` and `intmul` from `ssrint` to `ssrnum` or before to include `floorR` and related lemmas in `ssrnum`:\r\n   I think this solution does not work, because statements and proofs of some lemmas about `floorR` require, e.g., canonical `ringType` and `orderType` instances of `int`. So we have to relocate a significant part of `ssrint` anyway.\r\n3. Changing the dependency relation of libraries to make `ssrnum` requiring `ssrint`:\r\n   This solution may work. But the canonical `numDomainType` of `int` has to be defined in `ssrnum` or later, and then some lemmas about `int` cannot be stated in `ssrint`, e.g., `abszE` which requires the norm function.\r\n4. Adding another library that requires both `ssrnum` and `ssrint`, and relocating the Archimedean structures and related lemmas to it:\r\n   I think this is the best solution among these, but requires at least two steps of transition."
      },
      {
        "author": "CohenCyril",
        "date": "2020-12-12T12:23:32Z",
        "comment": "Yet another solution: dispatching the contents of ssrint between ssralg and ssrnum."
      },
      {
        "author": "pi8027",
        "date": "2020-12-12T12:30:36Z",
        "comment": "@CohenCyril That is what I meant in solution 3 IIUC."
      },
      {
        "author": "CohenCyril",
        "date": "2020-12-12T12:33:10Z",
        "comment": "> @CohenCyril That is what I meant in solution 3 IIUC.\r\n\r\nIndeed. It was not clear to me whether you were suggesting to remove the file ssrint, which is what I suggest here."
      },
      {
        "author": "CohenCyril",
        "date": "2020-12-12T12:35:43Z",
        "comment": "Anyway, I like solution 4... it makes a lot of sense to me. How would you envision the transitiom though? Having files with new names required by files with old names?"
      },
      {
        "author": "pi8027",
        "date": "2020-12-12T14:16:15Z",
        "comment": "> Indeed. It was not clear to me whether you were suggesting to remove the file ssrint, which is what I suggest here.\r\n\r\nI did not suggest removing `ssrint.v`. So they are actually different. But, anyway...\r\n\r\n> Anyway, I like solution 4... it makes a lot of sense to me. How would you envision the transitiom though? Having files with new names required by files with old names?\r\n\r\nIn the first step, we try to relocate definitions and lemmas about the Archimedean structures as much as possible, to a new file, say `archimedean.v`. Since we have to deprecate `Znat` and related lemmas in `ssrint`, we cannot relocate some of them. So we declare them as `Local` ones in `ssrnum` or `ssrint`, provide deprecation aliases if needed, and also provide non-deprecated aliases in `archimedean.v`. I think this trick is also applicable to definitions of structures. In the second step, we remove deprecation aliases and relocate everything that depends on `archiNumDomainType` to `archimedean.v`."
      },
      {
        "author": "CohenCyril",
        "date": "2020-12-15T16:32:07Z",
        "comment": "The way I saw it was that `ssrnum.v` would be \"fake file\" `Require Export`ing `ssrnum_without_archimedean` (find a proper name e.g. just `num.v`) as well as `archimedean` so that there is no overlay to make for developments that used to depend in `ssrnum` but use archimedean structures."
      },
      {
        "author": "pi8027",
        "date": "2020-12-16T01:44:05Z",
        "comment": "Currently, ssrnum.v defines both numeric and Archimedean structures, but some notations (e.g., archiNumDomainType) are deprecated there and re-exported from archimedean.v without deprecation. I also had to re-export the canonical declarations of closure properties of Num.nat and Num.int from rat.v and algC.v to fix the breakage (Cf the last commit).\nOverlays are required to make hints working and they just insert a few simplifications. I will try to get rid of them if needed."
      },
      {
        "author": "CohenCyril",
        "date": "2021-01-08T17:40:16Z",
        "comment": "I have opened #692 to control the impact of this PR."
      },
      {
        "author": "proux01",
        "date": "2021-01-08T19:33:29Z",
        "comment": "@pi8027 the doc of floor reads\r\n\r\n> Num.floor x == for x \\in Num.real [...] else 0%Z\r\n\r\nis there a lemma stating the else part?"
      },
      {
        "author": "pi8027",
        "date": "2021-01-09T05:24:27Z",
        "comment": "@proux01 That is missing and the `floor` function has to be redefined to prove it. I will do it before the next MathComp call. Thanks!"
      },
      {
        "author": "pi8027",
        "date": "2021-01-26T07:14:02Z",
        "comment": "MathComp Analysis does not compile anymore with this change:\r\n```coq\r\n- File \"./theories/reals.v\", line 486, characters 8-39:\r\n- Error:\r\n- In environment\r\n- R : realType\r\n- x : R\r\n- The term \"- x\" has type \"GRing.Zmodule.sort R\"\r\n- while it is expected to have type \"Num.ArchiNumDomain.sort ?R\".\r\n```\r\nhttps://github.com/math-comp/analysis/blob/339401ed1e340428554fe1e9cd35e3ea5386bd85/theories/reals.v#L479-L486\r\n\r\nIt seems that there is no fix without adding an inheritance from `archiNumDomainType` to `realType`."
      },
      {
        "author": "CohenCyril",
        "date": "2021-01-26T16:02:04Z",
        "comment": "> It seems that there is no fix without adding an inheritance from `archiNumDomainType` to `realType`.\r\n\r\nIndeed, would there be a problem to do so?\r\n\r\nI believe this PR has no chance to be backward compatible unless we make the old and new codes coexist.\r\nI.e. we would keep the old mixin and the old structure as such (keeping `ssrnum.v` intact) and add distinct incompatible mixins and new structures in `archimedean.v` that would be opt-in for now. In this setting there would be a hug difference between legacy code and new code. But maybe that would be ok.\r\n\r\nWe should discuss this in a mathcomp meeting."
      },
      {
        "author": "pi8027",
        "date": "2021-01-27T09:54:38Z",
        "comment": "@CohenCyril I think trying to be backward compatible is a bit painful in this case. Anyway, I agree that we should discuss this in a meeting. Meanwhile, I would like to revise the theory part of archimedean.v. (I have some questions and comments since I did not write everything by myself.)"
      },
      {
        "author": "pi8027",
        "date": "2021-02-10T17:06:33Z",
        "comment": "BTW, why CI disappeared from the checklist here?"
      },
      {
        "author": "CohenCyril",
        "date": "2021-02-12T19:05:20Z",
        "comment": "> BTW, why CI disappeared from the checklist here?\r\n\r\nno idea, that's very strange"
      },
      {
        "author": "CohenCyril",
        "date": "2021-03-08T12:34:09Z",
        "comment": "@pi8027 \r\n> BTW, why CI disappeared from the checklist here?\r\n\r\nThis is now fixed (cf https://github.com/math-comp/math-comp/pull/706#issuecomment-792347741). In principle, if you rebased this PR for example, github would show the status of the CI. Although I believe with the ongoing stuff on HB it would not make sense to rebase it. Just so you know\r\n"
      }
    ],
    "review_discussion": [
      {
        "author": "gares",
        "file": "mathcomp/ssreflect/ssreflect.v",
        "date": "2020-12-16T09:47:24Z",
        "comment": "yes!"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/archimedean.v",
        "date": "2021-01-18T19:19:07Z",
        "comment": "You could provide a non opaque function instead e.g.\r\n```coq\r\nDefinition floorR x :=\r\n   if x >= 0 then trunc x else let n := trunc (- x) in if x == n%:R then - n%:Z else - n.-1%N.\r\n```\r\nThat way we can still compute (e.g. in Q) without having all the functions in the interface..."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/archimedean.v",
        "date": "2021-01-22T05:08:28Z",
        "comment": "@CohenCyril My plan is to extend the Archimedean mixin with the floor function in the next step (hopefully MathComp 1.14.0). So I would rather like to keep it opaque for now to prevent future breakages. For example, the floor function of `int` can simply be the identity function `fun n : int => n` which is inconvertible with your general floor function."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/archimedean.v",
        "date": "2021-01-27T10:11:33Z",
        "comment": "I think we should\r\n1. reformulate this lemma in terms of bigop over a list since it is the most general form of bigop, and\r\n2. factor out the fact `(forall i, P i -> F i \\is a Rnat) -> \\sum_(i | P i) F i = (\\sum_(i | P i) trunc (F i))%:R` as a lemma."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/archimedean.v",
        "date": "2021-01-27T10:14:48Z",
        "comment": "Same here."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/archimedean.v",
        "date": "2021-01-27T10:19:06Z",
        "comment": "@proux01 FYI, now this lemma allows us to reason about the nonreal part. So you may want to add some more facts follow from this."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/archimedean.v",
        "date": "2021-01-27T10:30:23Z",
        "comment": "There is a `ceil` variant of this lemma (`intRK'`). So I think we should rename them to have \"floor\" and \"ceil\" in their names, e.g., `intRKfloor` and `intRKceil`. Also, I don't get why `R` is capital here."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/archimedean.v",
        "date": "2021-01-27T10:34:19Z",
        "comment": "Similarly, there is a `ceil` variant of this lemma (`Rint_def'`). Also, it is better if `RnatE`, `Rint_def`, and `Rint_def'` have similar names, but `RintE` is already taken."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/archimedean.v",
        "date": "2021-01-27T10:56:09Z",
        "comment": "These lemmas can be factored out to `x \\is Rreal -> ceil x = floor x + (~~ (x \\is a Rint))%:R`. This can probably be useful in some cases but I'm not sure."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/archimedean.v",
        "date": "2021-01-27T11:06:32Z",
        "comment": "We should rename these lemmas."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/archimedean.v",
        "date": "2021-01-27T11:18:41Z",
        "comment": "This should be renamed."
      },
      {
        "author": "proux01",
        "file": "mathcomp/algebra/archimedean.v",
        "date": "2021-03-01T20:11:35Z",
        "comment": "Indeed, here it is: https://github.com/proux01/math-comp/commit/881e7bb8b30d7d3baedb9bf2116bbc772be3a9b5"
      },
      {
        "author": "proux01",
        "file": "mathcomp/algebra/archimedean.v",
        "date": "2021-03-01T20:12:13Z",
        "comment": "Thanks (although I don't see anything to add)"
      },
      {
        "author": "proux01",
        "file": "mathcomp/algebra/archimedean.v",
        "date": "2021-03-01T20:14:26Z",
        "comment": "Maybe Rint_floor?"
      }
    ],
    "tags": [
      {
        "tag": "kind: enhancement",
        "description": "Issue or PR about addition of features."
      },
      {
        "tag": "drops: coq 8.10",
        "description": "Addressing this issue or merging this PR requires to drop support for coq 8.10"
      }
    ],
    "commits": [
      {
        "author": "Sobernard",
        "committer": "pi8027",
        "hash": "40476810dce10716dd949c1f363eeeacf8bfc3a1",
        "message": "prepare for pull request : pbs with Hints, mainly for Cint1 and Cnat0",
        "date": "2021-05-31T06:58:00Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "9f4460f6e49e60eb8916bb9047785728fa193d73",
        "message": "Rename the Archimedean structures",
        "date": "2021-05-31T06:58:00Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "6b6efe0d267a1bd1563b03135476d7a7b76867f6",
        "message": "Fix compilation, structure inheritance, and hints",
        "date": "2021-05-31T06:58:00Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "ab2ac1e88bd0b6bce4b34849430825f37181c192",
        "message": "Remove `Qnat` and `Qint` except for names of lemmas",
        "date": "2021-05-31T06:58:00Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "d8446d8e0dd752ba677a64e37f2a7cc9d769cb53",
        "message": "Relocate int/nat subsets of an archiNumDomainType to ssrnum.v",
        "date": "2021-05-31T06:58:00Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "47363b78c1f4f42417f0aabd0b3208e3edfd71a5",
        "message": "Add deprecation aliases",
        "date": "2021-05-31T06:58:00Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "bce9a68e7e843aa8efdff2f60aa9252a6cd35eb6",
        "message": "Deprecate the Archimedean structures/theory in ssrnum.v and re-export them from archimedean.v",
        "date": "2021-05-31T06:58:00Z"
      },
      {
        "author": "proux01",
        "committer": "pi8027",
        "hash": "db14e99f350a345f4561acb74d22632eb3485791",
        "message": "Add a few lemmas about Num.floor",
        "date": "2021-05-31T06:58:00Z"
      },
      {
        "author": "proux01",
        "committer": "pi8027",
        "hash": "11a3595202b6fbc6f55534079364b8d5064e5849",
        "message": "Add Num.ceil",
        "date": "2021-05-31T06:58:00Z"
      },
      {
        "author": "proux01",
        "committer": "pi8027",
        "hash": "26f5261a8b6e7f3edc239baf6e0ae9c77e042aef",
        "message": "ratr commutes with floor and ceil",
        "date": "2021-05-31T06:58:00Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "066de3ec277f29804a9addbb55ae919d2afe956d",
        "message": "Fix Num.floor to reason about the nonreal part",
        "date": "2021-05-31T06:58:00Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "5b56985dae9639e36eef6dc068cdee28d2c779af",
        "message": "Add CI overlays",
        "date": "2021-05-31T06:58:00Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 680,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 360,
        "deletions": 130
      },
      {
        "file": "mathcomp/ssreflect/path.v",
        "status": "M",
        "additions": 360,
        "deletions": 130
      },
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 360,
        "deletions": 130
      }
    ],
    "state": "merged",
    "open_date": "2020-12-02T17:04:32Z",
    "update_date": "2021-01-12T17:12:14Z",
    "discussion": [
      {
        "author": "pi8027",
        "date": "2020-12-02T17:16:49Z",
        "comment": "Shouldn't `(sub|eq)_(path|cycle|sorted)_in` rather be renamed to `(sub|eq)_in_(path|cycle|sorted)`? (Sorry, my bad.)"
      }
    ],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: enhancement",
        "description": "Issue or PR about addition of features."
      }
    ],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "462c14d4dd9752ccb8f12f0047333c285ad6e7ed",
        "message": "Add `pairwise r xs` predicate\n\nwhich asserts that the relation `r` holds for any i-th and j-th element of `xs`\nsuch that i < j.",
        "date": "2020-12-16T13:51:38Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 679,
    "diff_summary": [
      {
        "file": ".mailmap",
        "status": "M",
        "additions": 5,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2020-11-26T11:04:56Z",
    "update_date": "2020-12-04T09:29:17Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "3a758716af65299bd87cb682f93331794ba31c43",
        "message": "adding entries to the mailmap",
        "date": "2020-11-26T11:04:28Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 678,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/bigop.v",
        "status": "M",
        "additions": 1,
        "deletions": 5
      }
    ],
    "state": "merged",
    "open_date": "2020-11-26T09:14:04Z",
    "update_date": "2020-11-26T09:39:03Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "f2f5b83e8e6a6157cd980017cd4248a4f945ab95",
        "message": "using under and removing comment",
        "date": "2020-11-26T09:13:16Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 677,
    "diff_summary": [
      {
        "file": "CHANGELOG.md",
        "status": "M",
        "additions": 526,
        "deletions": 517
      },
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 526,
        "deletions": 517
      }
    ],
    "state": "merged",
    "open_date": "2020-11-26T01:00:36Z",
    "update_date": "2020-11-26T08:48:56Z",
    "discussion": [
      {
        "author": "pi8027",
        "date": "2020-11-26T02:22:46Z",
        "comment": "Shouldn't we check and uniformize the use of punctuation here?"
      }
    ],
    "review_discussion": [
      {
        "author": "pi8027",
        "file": "CHANGELOG.md",
        "date": "2020-11-26T02:17:14Z",
        "comment": "I'd like to indent the last two items."
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "853806628924f17974b733ca05bf568342f77e28",
        "message": "Regrouping changelog entries for 1.12 release",
        "date": "2020-11-26T08:46:27Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 675,
    "diff_summary": [
      {
        "file": "default.nix",
        "status": "M",
        "additions": 37,
        "deletions": 10
      }
    ],
    "state": "merged",
    "open_date": "2020-11-25T11:39:59Z",
    "update_date": "2020-11-25T13:33:13Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "31664c1359908f3d82f3ceb14c0d412b108b3f04",
        "message": "update nix",
        "date": "2020-11-25T11:39:08Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 674,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "A",
        "additions": 58,
        "deletions": 66
      },
      {
        "file": "mathcomp/Makefile.test-suite.coq.local",
        "status": "A",
        "additions": 58,
        "deletions": 66
      },
      {
        "file": "mathcomp/algebra/ssrint.v",
        "status": "A",
        "additions": 58,
        "deletions": 66
      },
      {
        "file": "mathcomp/ssreflect/eqtype.v",
        "status": "A",
        "additions": 58,
        "deletions": 66
      },
      {
        "file": "mathcomp/ssreflect/finset.v",
        "status": "A",
        "additions": 58,
        "deletions": 66
      },
      {
        "file": "mathcomp/ssreflect/fintype.v",
        "status": "A",
        "additions": 58,
        "deletions": 66
      },
      {
        "file": "mathcomp/test_suite/imset2_finset.v",
        "status": "A",
        "additions": 58,
        "deletions": 66
      },
      {
        "file": "mathcomp/test_suite/imset2_finset.v.out",
        "status": "A",
        "additions": 58,
        "deletions": 66
      },
      {
        "file": "mathcomp/test_suite/imset2_gproduct.v",
        "status": "A",
        "additions": 58,
        "deletions": 66
      },
      {
        "file": "mathcomp/test_suite/imset2_gproduct.v.out",
        "status": "A",
        "additions": 58,
        "deletions": 66
      }
    ],
    "state": "merged",
    "open_date": "2020-11-24T22:33:52Z",
    "update_date": "2020-11-26T08:41:23Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2020-11-24T22:36:28Z",
        "comment": "@gares, how do I enable checking the output of the `Check` in files `mathcomp/test_suite/imset2_finset.v` and `mathcomp/test_suite/imset2_gproduct.v` vs `mathcomp/test_suite/imset2_finset.v.out` and `mathcomp/test_suite/imset2_gproduct.v.out`?"
      },
      {
        "author": "CohenCyril",
        "date": "2020-11-25T10:02:20Z",
        "comment": "@gares this looks like a regression in coq dev..."
      },
      {
        "author": "CohenCyril",
        "date": "2020-11-25T10:10:46Z",
        "comment": "@erikmd what is the difference between coq-dev and coq-latest?"
      },
      {
        "author": "gares",
        "date": "2020-11-25T10:30:07Z",
        "comment": "@erikmd it would be nice to have a job testing v8.13 (the branch).\r\nI did merge many notation related PRs, so regressions may have happened there."
      },
      {
        "author": "CohenCyril",
        "date": "2020-11-25T11:33:42Z",
        "comment": "@gares indeed! broken in 8.12 and fixed in dev!!! good news!!"
      },
      {
        "author": "CohenCyril",
        "date": "2020-11-25T11:34:49Z",
        "comment": "Should I make a special `coq.8.12` test file that is deliberatly broken, to make the CI pass? or should we keep it broken until it is solved on Coq side?"
      },
      {
        "author": "CohenCyril",
        "date": "2020-11-25T11:45:38Z",
        "comment": "Meanwhile, I will replace the output test here not to make use of `{pred T}`, since it was not the point here, open a PR to test `{pred T}` specifically. Is it possible to do so on coq side too?\r\n\r\nFor archiving purposes, the problem was the following difference of output.\r\n- `-` was expected and is the outcome in Coq 8.10, Coq 8.11 and Coq dev (at the time of this message),\r\n- the outcome in Coq 8.12 is `+`\r\n```diff\r\n imset2Sr\r\n-     : forall (aT aT2 rT : finType) (f2 : aT -> aT2 -> rT) \r\n-         (A B : {pred aT2}) (C : {pred aT}),\r\n+     : forall (aT aT2 rT : finType) (f2 : aT -> aT2 -> rT)\r\n+         (A B : predPredType aT2) (C : predPredType aT),\r\n        A \\subset B ->\r\n        [set f2 x y | x in C, y in A] \\subset [set f2 x y | x in C, y in B]\r\n```\r\n(cf [this CI build](https://gitlab.com/math-comp/math-comp/-/jobs/871480999))"
      },
      {
        "author": "CohenCyril",
        "date": "2020-11-25T13:21:25Z",
        "comment": "@gares ready to merge if you want"
      },
      {
        "author": "CohenCyril",
        "date": "2020-11-25T18:19:17Z",
        "comment": "@gares this is the last missing piece for releasing tomorrow."
      }
    ],
    "review_discussion": [
      {
        "author": "CohenCyril",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2020-11-26T01:07:56Z",
        "comment": "@gares this changelog entry is in the wrong section, but please disregard, I will curate it (cf. #677)"
      }
    ],
    "tags": [
      {
        "tag": "kind: fix",
        "description": "PR that fixes a bug. Please refer to the appropriate issue(s) if relevant."
      },
      {
        "tag": "kind: clean-up",
        "description": "This issure/PR is about cleaning up obsolete code, removing hacks, etc"
      }
    ],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "9c693eedb8e7e11aeaedbd3ce79a9478b10be7c8",
        "message": "Using `only printing` and fixing coercion in notations",
        "date": "2020-11-25T18:26:22Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 672,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/ssreflect.v",
        "status": "M",
        "additions": 35,
        "deletions": 25
      },
      {
        "file": "mathcomp/test_suite/test_intro_rw.v",
        "status": "M",
        "additions": 35,
        "deletions": 25
      }
    ],
    "state": "merged",
    "open_date": "2020-11-23T21:45:13Z",
    "update_date": "2020-11-24T01:13:02Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: fix",
        "description": "PR that fixes a bug. Please refer to the appropriate issue(s) if relevant."
      }
    ],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "53b6f555a5068f3ded38c623f1939e082b3268ae",
        "message": "fixing [dup] for Coq 8.12",
        "date": "2020-11-23T21:49:11Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 671,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 20,
        "deletions": 27
      },
      {
        "file": "mathcomp/ssreflect/order.v",
        "status": "M",
        "additions": 20,
        "deletions": 27
      }
    ],
    "state": "merged",
    "open_date": "2020-11-23T06:46:11Z",
    "update_date": "2020-11-24T22:39:09Z",
    "discussion": [
      {
        "author": "pi8027",
        "date": "2020-11-23T09:26:38Z",
        "comment": "Should we do two-step renaming for this? But, it seems to be rather confusing. I can provide a fix for finmap in any case."
      },
      {
        "author": "CohenCyril",
        "date": "2020-11-24T08:12:21Z",
        "comment": "I don't know, I keep hesitating"
      },
      {
        "author": "CohenCyril",
        "date": "2020-11-24T15:36:28Z",
        "comment": "If there are backward compatible fixes for every library, I'm all in..."
      }
    ],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: bug",
        "description": "Issue which describe bugs"
      },
      {
        "tag": "kind: fix",
        "description": "PR that fixes a bug. Please refer to the appropriate issue(s) if relevant."
      }
    ],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "9f72564ed8e31e5ac54a974ec37cdd6adcf35187",
        "message": "Transpose `join_idP(l|r)` lemmas to follow the naming convention",
        "date": "2020-11-24T14:44:08Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "e34bcc773ea2cf6fd61dfc18e705f2739e433d46",
        "message": "Add CI overlays",
        "date": "2020-11-24T14:45:17Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "f0c3bc08f56a2c218e82d1dccffdb7c45bea41dd",
        "message": "Revert \"Add CI overlays\" since the finmap PR has been merged in master\n\nThis reverts commit e34bcc773ea2cf6fd61dfc18e705f2739e433d46.",
        "date": "2020-11-24T20:27:50Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 670,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/path.v",
        "status": "M",
        "additions": 17,
        "deletions": 12
      }
    ],
    "state": "merged",
    "open_date": "2020-11-21T04:22:10Z",
    "update_date": "2020-11-24T15:55:13Z",
    "discussion": [
      {
        "author": "pi8027",
        "date": "2020-11-24T05:03:12Z",
        "comment": "@chdoc @CohenCyril As written in the description of this PR, some deprecation notations for explicit application such as `@sorted_le_nth` do not let us write the first two implicit arguments `T` and `leT`. IIUC, this is a limitation of the deprecation mechanism of MathComp. I think we should rather turn them into notations without deprecation as in #640 for now. What do you think?"
      },
      {
        "author": "CohenCyril",
        "date": "2020-11-24T08:08:09Z",
        "comment": "> @chdoc @CohenCyril As written in the description of this PR, some deprecation notations for explicit application such as `@sorted_le_nth` do not let us write the first two implicit arguments `T` and `leT`. IIUC, this is a limitation of the deprecation mechanism of MathComp. I think we should rather turn them into notations without deprecation as in #640 for now. What do you think?\r\n\r\nHow about setting an intermediate notation e.g. `sorted_leq_nth_subdef` with no maximal implicit?"
      },
      {
        "author": "pi8027",
        "date": "2020-11-24T08:42:05Z",
        "comment": "@CohenCyril If we pass such `sorted_leq_nth_subdef` as the second argument of `deprecate`, the deprecation message says `use sorted_leq_nth_subdef instead`."
      },
      {
        "author": "pi8027",
        "date": "2020-11-24T08:47:38Z",
        "comment": "OK, I found a solution. This should be fine."
      }
    ],
    "review_discussion": [
      {
        "author": "chdoc",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2020-11-23T11:34:22Z",
        "comment": "This one still does not behave the same as `sorted_leq_index` wrt to apply:\r\n```coq\r\nGoal forall (s : seq nat) (srt_s : sorted leq s), {in s &, forall x y, index x s <= index y s -> x <= y}.\r\nmove => s srt_s. \r\nFail apply: leq_index.\r\napply: sorted_leq_index. \r\n```\r\nThis is literally the first example I tried. "
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2020-11-23T12:13:05Z",
        "comment": "So we should remove the first two placeholders here as well."
      }
    ],
    "tags": [
      {
        "tag": "kind: bug",
        "description": "Issue which describe bugs"
      },
      {
        "tag": "kind: fix",
        "description": "PR that fixes a bug. Please refer to the appropriate issue(s) if relevant."
      }
    ],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "8c5f89a000c9be0cafa56a97c40c2ce4f35bf914",
        "message": "Fix deprecation notations in `path.v`",
        "date": "2020-11-24T08:46:30Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 669,
    "diff_summary": [
      {
        "file": ".github/workflows/nix.yml",
        "status": "M",
        "additions": 3,
        "deletions": 3
      }
    ],
    "state": "merged",
    "open_date": "2020-11-20T17:04:56Z",
    "update_date": "2020-11-20T19:50:28Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "web-flow",
        "hash": "56f5b326cdcaa340f30406754f6be12f5a020a86",
        "message": "Update nix.yml",
        "date": "2020-11-20T17:04:40Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 667,
    "diff_summary": [
      {
        "file": "mathcomp/algebra/matrix.v",
        "status": "M",
        "additions": 37,
        "deletions": 42
      },
      {
        "file": "mathcomp/character/mxrepresentation.v",
        "status": "M",
        "additions": 37,
        "deletions": 42
      },
      {
        "file": "mathcomp/ssreflect/bigop.v",
        "status": "M",
        "additions": 37,
        "deletions": 42
      },
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 37,
        "deletions": 42
      }
    ],
    "state": "merged",
    "open_date": "2020-11-20T11:12:33Z",
    "update_date": "2020-11-23T12:39:15Z",
    "discussion": [
      {
        "author": "gares",
        "date": "2020-11-20T12:09:27Z",
        "comment": "@erikmd I think you may want to review this PR ;-)"
      },
      {
        "author": "erikmd",
        "date": "2020-11-22T18:47:05Z",
        "comment": "Hi @gares and @CohenCyril ! yes, I'd be glad to have a look :)\r\n\r\nideally, when would you like to merge the PR? (I guess I'd need to review it before your next mathcomp-dev meeting on 2 Dec. ?)"
      },
      {
        "author": "CohenCyril",
        "date": "2020-11-22T23:00:11Z",
        "comment": "Hi @erikmd I don't think there is a strong need to review this PR, I guess it can be merged as such (or wait until after the release), and further script improvements can always come in later on. Moreover the release is likely to occur next week (so that we can attend the CUDW with no pressure)."
      },
      {
        "author": "erikmd",
        "date": "2020-11-22T23:12:24Z",
        "comment": "Hi @CohenCyril, sure! it can be merged as is indeed (and if I happen to have a look after the merge, I could just as well open a small additional PR!) anyway, that's great to be able to rely on `under` now :)"
      }
    ],
    "review_discussion": [
      {
        "author": "gares",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2020-11-20T12:08:46Z",
        "comment": "?"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2020-11-20T12:57:29Z",
        "comment": "I tried to replace, it was not a good instance, and I thought the script still made more sense like this."
      },
      {
        "author": "gares",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-23T12:38:41Z",
        "comment": "This is my favorite!"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2020-11-23T13:40:05Z",
        "comment": "@gares This one is my favorite"
      },
      {
        "author": "gares",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2020-11-23T13:58:53Z",
        "comment": "I see the gain in terms of script, but it still applies under in the goal's head, not under some extra context.\r\nWell I guess anyone has the right to have a favorite ;-)"
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "1c03fed9bd5ab57b99405802f17d50ff0888f887",
        "message": "Using Coq 8.10 ssreflect new features",
        "date": "2020-11-20T11:10:46Z"
      }
    ]
  },
  {
    "author": "ybertot",
    "number": 666,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 1,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2020-11-20T10:29:40Z",
    "update_date": "2020-11-20T15:26:53Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2020-11-24T22:40:42Z",
        "comment": "@ybertot did you submit this PR just to own the #666???\r\n... because the devil is in the details?"
      },
      {
        "author": "ybertot",
        "date": "2020-11-26T12:31:40Z",
        "comment": "Well spotted, but ... no\r\nI wish I had your talent to see funny things in daily life and make witty remarks about them."
      },
      {
        "author": "CohenCyril",
        "date": "2020-11-26T13:24:19Z",
        "comment": "Btw I just noticed the fix is wrong 😹😹😹 it should be `x`"
      }
    ],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: documentation",
        "description": "Issue or PR about documentation mistakes, deficiencies, enhancements, ..."
      },
      {
        "tag": "kind: fix",
        "description": "PR that fixes a bug. Please refer to the appropriate issue(s) if relevant."
      }
    ],
    "commits": [
      {
        "author": "ybertot",
        "committer": "ybertot",
        "hash": "8aa783e1a4fb0f5c759d297f015686b7a1f99ed6",
        "message": "typo in documentation of allpairs_dep",
        "date": "2020-11-20T10:26:57Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 665,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 140,
        "deletions": 71
      },
      {
        "file": "mathcomp/algebra/matrix.v",
        "status": "M",
        "additions": 140,
        "deletions": 71
      },
      {
        "file": "mathcomp/field/falgebra.v",
        "status": "M",
        "additions": 140,
        "deletions": 71
      },
      {
        "file": "mathcomp/field/separable.v",
        "status": "M",
        "additions": 140,
        "deletions": 71
      },
      {
        "file": "mathcomp/ssreflect/path.v",
        "status": "M",
        "additions": 140,
        "deletions": 71
      },
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 140,
        "deletions": 71
      }
    ],
    "state": "merged",
    "open_date": "2020-11-20T07:54:32Z",
    "update_date": "2020-11-25T17:59:03Z",
    "discussion": [],
    "review_discussion": [
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-20T08:20:17Z",
        "comment": "I think the most use-cases of `all1rel` require `r` to be symmetric. This is the case at least in `all_comm_mx`, `ahom_in`, and `Derivation`. But, if it is not the case in general, I would like to put the suffix `_sym` to the names of these lemmas."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-20T10:09:54Z",
        "comment": "I prefer `all2rel` ~or `pairwise`~ or **selfrel** than `all1rel`.\r\n@gares, @chdoc, you participated in the first discussion on `allrel`, what do you say about this change and my suggestion?"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2020-11-20T10:12:00Z",
        "comment": "I'm a bit concerned that the proof looks longer..."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-20T10:13:51Z",
        "comment": "I had the impression that the convention here was `l` `r` rather than positional (as in `allpairs0l`)"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-20T10:17:55Z",
        "comment": "These lemma only make sense when the relation is symmetric anyway, otherwise it can all be obtained by `allrel_cons2` which would be the lemma combining `allrel_consr` and `allrel_consl`."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2020-11-20T10:18:35Z",
        "comment": "```suggestion\r\nrewrite allrel_cons2 => /and4P [xy' xs2 ys1 s1s2] /andP [hx xs1] /andP [hy ys2].\r\ncase: ifP => xy /=; rewrite (hx, hy) /=.\r\n- by apply: ih1; rewrite ?allrel_consr ?ys1 //= xy xy' implybT.\r\n- by apply: ih2; have:= leT_total x y; rewrite ?allrel_consl ?xs2 ?xy //= => ->.\r\n```\r\nintroducing  `allrel_cons2` as in [a comment below](https://github.com/math-comp/math-comp/pull/665/files#r527593132)\r\n"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-20T10:19:53Z",
        "comment": "PS: and maybe that's what shortens the proof of `merge_stable_path` once more, as I tried to exhibit in [another comment](https://github.com/math-comp/math-comp/pull/665/files#r527591337)"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-20T10:21:42Z",
        "comment": "```suggestion\r\n\r\nLemma allrel_cons2 x y xs ys :\r\n  allrel (x :: xs) (y :: ys) = [&& r x y, all (r x) ys, all (r^~ y) xs & allrel xs ys].\r\nProof. by rewrite /= all_predI/= -andbA. Qed. (* or something like that *)\r\n\r\n```"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-20T10:42:46Z",
        "comment": "I think we should rather provide a multi-rule rewriting lemma consists of `allrel_(cons|cat)(l|r)`, etc."
      },
      {
        "author": "chdoc",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-20T10:43:13Z",
        "comment": "How about shortening the description to something along the lines of:\r\n```suggestion\r\n(* allrel r xs ys := all [pred x | all (r x) ys] xs                           *)\r\n(*                == r x y holds whenever x is in xs and y is in ys           *)\r\n```\r\nI don't feel the need to use `proposition` here, as it it actually a boolean. "
      },
      {
        "author": "chdoc",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-20T10:43:34Z",
        "comment": "I'm in favor of the new definition, I wasn't fond of the `all id ...` to begin with. As to to the naming, don't have much to say."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-20T10:51:15Z",
        "comment": "On second thoughts, I prefer to reserve `pairwise` for\r\n```coq\r\nFixpoint pairwise {T} (r : rel T) (xs : seq T) :=\r\n  if xs is x :: xs then all (r x) xs && pairwise r xs else true.\r\n```\r\nThat might come up in mathcomp 1.13 and that will be equivalent to `all2rel` under `reflexive r` and `symmetric r` only..."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-20T10:54:33Z",
        "comment": "We could have both, but the multi-rule may not lead to the same results modulo simpl :confused: so I'd rather let the user form them themselves at their own risk."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-20T10:55:56Z",
        "comment": "What about `selfrel` ?"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-20T11:05:45Z",
        "comment": "Missing \r\n```coq\r\nLemma eq_allrel {T S : Type} (r r': T -> S -> bool) xs ys :\r\n  r =2 r' -> allrel r xs ys = allrel r' xs ys.\r\nProof. (*...*) Qed.\r\n\r\nLemma eq_in_allrel {T S : Type} (P : {pred T}) (Q : {pred S}) (r r': T -> S -> bool) xs ys :\r\n  all P xs -> all Q ys -> {in P & Q, r =2 r'} -> allrel r xs ys = allrel r' xs ys.\r\nProof. (*...*) Qed.\r\n```\r\n"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-21T07:18:42Z",
        "comment": "@CohenCyril I thought your initial suggestion was to name the general version `all2rel` (https://github.com/math-comp/math-comp/issues/662#issuecomment-730807158). This one is fine with me. But, since I preferred to give a shorter name for a general version, I renamed the original `allrel` to `all1rel` (\"1\" stands for unary in the sense of that `all1rel` takes one list). Also, I'm not fond of `selfrel`...\r\n\r\nBut, again, I'm totally fine to keep `allrel` for the unary version and to rename the general version to `all2rel`."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-24T16:16:14Z",
        "comment": "I prefer to keep `allrel` for the general version. But I was considering renaming `all1rel` to `all2rel` (expressing all 2 are related..., while I cannot read `all1rel` in english, besides interpreting `1` as the arity...).\r\nHowever, it does not matter much to me, we can keep `all1rel`, at least for 1.12."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-25T03:21:57Z",
        "comment": "> I prefer to keep `allrel` for the general version. But I was considering renaming `all1rel` to `all2rel` (expressing all 2 are related..., while I cannot read `all1rel` in english, besides interpreting `1` as the arity...).\r\n\r\nSure. Now I think it is fine to rename `all1rel` to `all2rel`."
      },
      {
        "author": "CohenCyril",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2020-11-25T13:17:43Z",
        "comment": "```suggestion\r\n  + lemmas `all2rel1`, `all2rel2`, and `all2rel_cons`\r\n```"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-25T13:24:12Z",
        "comment": "BTW, `pairwise` is also equivalent to `sorted` under transitivity. Reformulating some lemmas about `sorted` using `pairwise` may allow us to drop the transitivity assumption."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-25T13:25:12Z",
        "comment": "That would indeed be a nice thing to do... for mathcomp 1.13.0 :wink: "
      }
    ],
    "tags": [
      {
        "tag": "kind: enhancement",
        "description": "Issue or PR about addition of features."
      }
    ],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "783631c771ec76baa4ff9d292c1eddfb58f67f4c",
        "message": "Generalize `allrel` to take two lists as arguments",
        "date": "2020-11-25T13:29:54Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "c2b2ea2dce5fa7b8d428a5072f2e86979eeb1d98",
        "message": "Apply suggestions from code review\n\nCo-authored-by: Christian Doczkal <christian.doczkal@inria.fr>",
        "date": "2020-11-25T13:29:54Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "43796130c3e59c0651a283e6654a7d82acbfeed3",
        "message": "Apply suggestions from code review\n\nCo-authored-by: Cyril Cohen <CohenCyril@users.noreply.github.com>",
        "date": "2020-11-25T13:29:54Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "d844896e6418bb00418964bb4ae4219e2bd6b69c",
        "message": "Rename `all1rel` to `all2rel`, restate `eq_allrel`, and add CHANGELOG entries\n\nCo-authored-by: Cyril Cohen <CohenCyril@users.noreply.github.com>",
        "date": "2020-11-25T13:29:55Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 664,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 5,
        "deletions": 11
      },
      {
        "file": "mathcomp/algebra/ssrnum.v",
        "status": "M",
        "additions": 5,
        "deletions": 11
      }
    ],
    "state": "merged",
    "open_date": "2020-11-20T02:53:44Z",
    "update_date": "2020-11-24T15:56:10Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: fix",
        "description": "PR that fixes a bug. Please refer to the appropriate issue(s) if relevant."
      },
      {
        "tag": "kind: clean-up",
        "description": "This issure/PR is about cleaning up obsolete code, removing hacks, etc"
      }
    ],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "7f0699b6a6fa8486c21b292ba2d8a8910c37dd6b",
        "message": "Remove `Reserved Notation`s in `ssrnum.v` which are already declared in `order.v`",
        "date": "2020-11-23T17:19:20Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "0cadfe448ecb17a55d256d1c1a4470a95beab640",
        "message": "Fix `@maxr` and `@minr`",
        "date": "2020-11-23T17:19:53Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 663,
    "diff_summary": [
      {
        "file": "mathcomp/algebra/matrix.v",
        "status": "M",
        "additions": 44,
        "deletions": 32
      },
      {
        "file": "mathcomp/algebra/mxalgebra.v",
        "status": "M",
        "additions": 44,
        "deletions": 32
      },
      {
        "file": "mathcomp/algebra/poly.v",
        "status": "M",
        "additions": 44,
        "deletions": 32
      },
      {
        "file": "mathcomp/algebra/ssralg.v",
        "status": "M",
        "additions": 44,
        "deletions": 32
      },
      {
        "file": "mathcomp/character/character.v",
        "status": "M",
        "additions": 44,
        "deletions": 32
      },
      {
        "file": "mathcomp/character/classfun.v",
        "status": "M",
        "additions": 44,
        "deletions": 32
      },
      {
        "file": "mathcomp/solvable/gfunctor.v",
        "status": "M",
        "additions": 44,
        "deletions": 32
      }
    ],
    "state": "merged",
    "open_date": "2020-11-20T02:12:08Z",
    "update_date": "2020-11-20T08:55:19Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: refactoring",
        "description": "Issue or PR about a refactoring. (reorganizing the code, reusing theorems, simplifications...)"
      }
    ],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "7c47bab45686e90ee50e6c7eaae3230cb7ce9e53",
        "message": "Using Arguments / to deal with volatile definitions",
        "date": "2020-11-20T02:10:59Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 661,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 26,
        "deletions": 0
      },
      {
        "file": "mathcomp/field/closed_field.v",
        "status": "M",
        "additions": 26,
        "deletions": 0
      },
      {
        "file": "mathcomp/ssreflect/binomial.v",
        "status": "M",
        "additions": 26,
        "deletions": 0
      },
      {
        "file": "mathcomp/ssreflect/choice.v",
        "status": "M",
        "additions": 26,
        "deletions": 0
      },
      {
        "file": "mathcomp/ssreflect/prime.v",
        "status": "M",
        "additions": 26,
        "deletions": 0
      },
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 26,
        "deletions": 0
      },
      {
        "file": "mathcomp/ssreflect/ssrnat.v",
        "status": "M",
        "additions": 26,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2020-11-20T01:34:57Z",
    "update_date": "2020-11-22T10:31:23Z",
    "discussion": [
      {
        "author": "gares",
        "date": "2020-11-20T13:38:18Z",
        "comment": "Can you tell me why ! was not ok?"
      },
      {
        "author": "CohenCyril",
        "date": "2020-11-20T13:52:05Z",
        "comment": "@gares\r\n> Can you tell me why ! was not ok?\r\n\r\nAlmost all definitions (except for `eqseq`) which are involved in this tuning have at least one \"default\" case, where one argument does not need to be a constructor for a ground value to be output. e.g. in `take` if the list is `[::]`, then whatever the natural number, the output is `[::]`. The \"right\" criterion is that no match should be exposed by doing so.\r\n\r\nExcept for `mask` where there is an extra match on a boolean that we would like to expose. So I sacrificed expansion when the mask is `[::]` and not the list `s`, for the sake of still having a form of controlled expansion, which would still expose the match on the boolean.\r\n\r\nThis hints at the fact that both `!` and `nomatch` are too restrictive in different fashion. Somehow, we would like to say which `match` are allowed/forbidden instead. e.g. (wishful thinking) `Arguments mask _ !m !s : simpl nomatch`, *should* simplify iff it does not (directly) expose a match on `m` or `s`.\r\n\r\nMoreover, in the current state, `nomatch` will prevent expansion even if the appearance of the match has nothing to do with the unfolding of the constant itself. e.g.\r\n```coq\r\nDefinition mask_if mask b (x : T) m' s' :=  if b then x :: mask m' s' else mask m' s'\r\nFixpoint mask m s {struct m} :=\r\n  match m, s with\r\n  | b :: m', x :: s' => mask_if mask b x m' s'\r\n  | _, _ => [::]\r\n  end.\r\nArguments mask : simpl nomatch.\r\nArguments mask_if /.\r\n```\r\nwill still not simplify `mask (b :: m) (x :: s)` because doing one loop of the fixpoint and then expanding `mask_if` will result in a match :cry: :cry: :cry:"
      },
      {
        "author": "CohenCyril",
        "date": "2020-11-20T19:51:43Z",
        "comment": "@affeldt-aist the CI passed, I rebased once more, when it passes again, you can merge, unless @gares is opposed to this?"
      },
      {
        "author": "gares",
        "date": "2020-11-22T08:13:15Z",
        "comment": "I'm OK and aware that \"if\" is problematic with no match."
      }
    ],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: enhancement",
        "description": "Issue or PR about addition of features."
      },
      {
        "tag": "kind: fix",
        "description": "PR that fixes a bug. Please refer to the appropriate issue(s) if relevant."
      }
    ],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "c55acd1fefa970cc4ed3a8a53b05fd77008a7cdf",
        "message": "Tuning simplifications using Arguments simpl nomatch",
        "date": "2020-11-20T19:50:44Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 660,
    "diff_summary": [
      {
        "file": "mathcomp/algebra/polydiv.v",
        "status": "M",
        "additions": 76,
        "deletions": 58
      },
      {
        "file": "mathcomp/algebra/rat.v",
        "status": "M",
        "additions": 76,
        "deletions": 58
      },
      {
        "file": "mathcomp/algebra/ssralg.v",
        "status": "M",
        "additions": 76,
        "deletions": 58
      },
      {
        "file": "mathcomp/algebra/ssrint.v",
        "status": "M",
        "additions": 76,
        "deletions": 58
      },
      {
        "file": "mathcomp/algebra/ssrnum.v",
        "status": "M",
        "additions": 76,
        "deletions": 58
      },
      {
        "file": "mathcomp/character/classfun.v",
        "status": "M",
        "additions": 76,
        "deletions": 58
      },
      {
        "file": "mathcomp/fingroup/fingroup.v",
        "status": "M",
        "additions": 76,
        "deletions": 58
      },
      {
        "file": "mathcomp/solvable/commutator.v",
        "status": "M",
        "additions": 76,
        "deletions": 58
      },
      {
        "file": "mathcomp/solvable/nilpotent.v",
        "status": "M",
        "additions": 76,
        "deletions": 58
      },
      {
        "file": "mathcomp/ssreflect/binomial.v",
        "status": "M",
        "additions": 76,
        "deletions": 58
      },
      {
        "file": "mathcomp/ssreflect/div.v",
        "status": "M",
        "additions": 76,
        "deletions": 58
      },
      {
        "file": "mathcomp/ssreflect/prime.v",
        "status": "M",
        "additions": 76,
        "deletions": 58
      },
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 76,
        "deletions": 58
      },
      {
        "file": "mathcomp/ssreflect/ssrnat.v",
        "status": "M",
        "additions": 76,
        "deletions": 58
      }
    ],
    "state": "open",
    "open_date": "2020-11-20T00:51:26Z",
    "update_date": "2023-01-11T09:16:19Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2020-11-20T00:53:08Z",
        "comment": "CC @gares note that `simpl never` does not have the same behavior as `nosimpl` when adding a definition on top of a `simpl never` one, we might go through the unfolding. (Hence the need to fix `pfactor` again in `prime.v`)"
      },
      {
        "author": "ybertot",
        "date": "2020-11-20T11:28:19Z",
        "comment": "I am workiing on a patch to fourcolor so that it is compatible with this change.  There are good chances that the patch will be backward compatible."
      },
      {
        "author": "CohenCyril",
        "date": "2020-11-20T11:31:26Z",
        "comment": "I will investigate `odd_order`"
      },
      {
        "author": "CohenCyril",
        "date": "2020-11-20T11:38:48Z",
        "comment": "@gares, the problem we encountered is the one I mentioned for e.g. `pfactor`, except it occurs for a local definition, (for which there is no way to control the unfolding via `Arguments`,  whereas `nosimpl` keeps working).\r\nThis seems to be an essential shortcoming of `simpl never`, which cannot cover all use cases of `nosimpl` ... :cry: "
      },
      {
        "author": "CohenCyril",
        "date": "2020-11-20T11:47:22Z",
        "comment": "@ybertot @gares, Unfortunately, I think the consequence of this exploration is that this PR cannot be merged because it introduces a regression in the behaviour of symbols that are no simplifiable... and that a bug report should be submitted on the Coq side (which I am going to do)."
      },
      {
        "author": "ybertot",
        "date": "2020-11-20T12:00:44Z",
        "comment": "I came to a similar conclusion."
      },
      {
        "author": "gares",
        "date": "2020-11-20T12:13:11Z",
        "comment": "> a bug report should be submitted on the Coq side (which I am going to do).\r\n\r\nplease do, since I can't exactly understand what the problem is from the comments here"
      },
      {
        "author": "ybertot",
        "date": "2020-11-20T12:40:02Z",
        "comment": "I have been trying to construct a minimal example, but I can't reproduce the problem in a few lines yet."
      },
      {
        "author": "ybertot",
        "date": "2020-11-20T12:48:10Z",
        "comment": "In the meantime shouldn't this PR be re-affected to milestone 1.13.0?"
      },
      {
        "author": "CohenCyril",
        "date": "2020-11-20T12:52:39Z",
        "comment": "> I have been trying to construct a minimal example, but I can't reproduce the problem in a few lines yet.\r\n\r\nI did it here https://github.com/coq/coq/issues/13428"
      },
      {
        "author": "CohenCyril",
        "date": "2020-11-20T12:54:06Z",
        "comment": "> In the meantime shouldn't this PR be re-affected to milestone 1.13.0?\r\n\r\nI am afraid way later than 1.13 since, assuming someone fixes this for Coq 8.13, we would have to wait until Coq 8.15 is out.\r\nBut we must test the feature ASAP this time :cry: "
      }
    ],
    "review_discussion": [
      {
        "author": "pi8027",
        "file": "mathcomp/character/classfun.v",
        "date": "2020-11-20T01:34:12Z",
        "comment": "I think this one should be relocated to the above `Predicates` section."
      }
    ],
    "tags": [
      {
        "tag": "kind: refactoring",
        "description": "Issue or PR about a refactoring. (reorganizing the code, reusing theorems, simplifications...)"
      }
    ],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "28ce2f845ab42ab54aa6ad08bc02a27f7a0b6bc7",
        "message": "Using Arguments simpl never instead of nosimpl",
        "date": "2020-11-20T02:18:22Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 659,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/order.v",
        "status": "M",
        "additions": 0,
        "deletions": 3
      }
    ],
    "state": "merged",
    "open_date": "2020-11-20T00:02:32Z",
    "update_date": "2020-11-20T01:35:43Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: bug",
        "description": "Issue which describe bugs"
      }
    ],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "5662c7f93cdb4ad3e43c89ee72d08b037ce6e890",
        "message": "Removing unused cpo_sort scope",
        "date": "2020-11-20T00:01:22Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 658,
    "diff_summary": [
      {
        "file": "mathcomp/Make",
        "status": "M",
        "additions": 115,
        "deletions": 115
      },
      {
        "file": "mathcomp/_CoqProject",
        "status": "M",
        "additions": 115,
        "deletions": 115
      },
      {
        "file": "mathcomp/algebra/Make",
        "status": "M",
        "additions": 115,
        "deletions": 115
      },
      {
        "file": "mathcomp/algebra/intdiv.v",
        "status": "M",
        "additions": 115,
        "deletions": 115
      },
      {
        "file": "mathcomp/algebra/matrix.v",
        "status": "M",
        "additions": 115,
        "deletions": 115
      },
      {
        "file": "mathcomp/algebra/mxalgebra.v",
        "status": "M",
        "additions": 115,
        "deletions": 115
      },
      {
        "file": "mathcomp/algebra/mxpoly.v",
        "status": "M",
        "additions": 115,
        "deletions": 115
      },
      {
        "file": "mathcomp/algebra/poly.v",
        "status": "M",
        "additions": 115,
        "deletions": 115
      },
      {
        "file": "mathcomp/algebra/rat.v",
        "status": "M",
        "additions": 115,
        "deletions": 115
      },
      {
        "file": "mathcomp/algebra/ssralg.v",
        "status": "M",
        "additions": 115,
        "deletions": 115
      },
      {
        "file": "mathcomp/algebra/ssrint.v",
        "status": "M",
        "additions": 115,
        "deletions": 115
      },
      {
        "file": "mathcomp/algebra/ssrnum.v",
        "status": "M",
        "additions": 115,
        "deletions": 115
      },
      {
        "file": "mathcomp/algebra/vector.v",
        "status": "M",
        "additions": 115,
        "deletions": 115
      },
      {
        "file": "mathcomp/character/Make",
        "status": "M",
        "additions": 115,
        "deletions": 115
      },
      {
        "file": "mathcomp/character/character.v",
        "status": "M",
        "additions": 115,
        "deletions": 115
      },
      {
        "file": "mathcomp/character/classfun.v",
        "status": "M",
        "additions": 115,
        "deletions": 115
      },
      {
        "file": "mathcomp/character/inertia.v",
        "status": "M",
        "additions": 115,
        "deletions": 115
      },
      {
        "file": "mathcomp/character/integral_char.v",
        "status": "M",
        "additions": 115,
        "deletions": 115
      },
      {
        "file": "mathcomp/character/mxabelem.v",
        "status": "M",
        "additions": 115,
        "deletions": 115
      },
      {
        "file": "mathcomp/character/mxrepresentation.v",
        "status": "M",
        "additions": 115,
        "deletions": 115
      },
      {
        "file": "mathcomp/field/Make",
        "status": "M",
        "additions": 115,
        "deletions": 115
      },
      {
        "file": "mathcomp/field/algC.v",
        "status": "M",
        "additions": 115,
        "deletions": 115
      },
      {
        "file": "mathcomp/field/algebraics_fundamentals.v",
        "status": "M",
        "additions": 115,
        "deletions": 115
      },
      {
        "file": "mathcomp/field/algnum.v",
        "status": "M",
        "additions": 115,
        "deletions": 115
      },
      {
        "file": "mathcomp/field/closed_field.v",
        "status": "M",
        "additions": 115,
        "deletions": 115
      },
      {
        "file": "mathcomp/field/cyclotomic.v",
        "status": "M",
        "additions": 115,
        "deletions": 115
      },
      {
        "file": "mathcomp/field/fieldext.v",
        "status": "M",
        "additions": 115,
        "deletions": 115
      },
      {
        "file": "mathcomp/field/finfield.v",
        "status": "M",
        "additions": 115,
        "deletions": 115
      },
      {
        "file": "mathcomp/field/galois.v",
        "status": "M",
        "additions": 115,
        "deletions": 115
      },
      {
        "file": "mathcomp/field/separable.v",
        "status": "M",
        "additions": 115,
        "deletions": 115
      },
      {
        "file": "mathcomp/fingroup/Make",
        "status": "M",
        "additions": 115,
        "deletions": 115
      },
      {
        "file": "mathcomp/fingroup/automorphism.v",
        "status": "M",
        "additions": 115,
        "deletions": 115
      },
      {
        "file": "mathcomp/fingroup/fingroup.v",
        "status": "M",
        "additions": 115,
        "deletions": 115
      },
      {
        "file": "mathcomp/fingroup/gproduct.v",
        "status": "M",
        "additions": 115,
        "deletions": 115
      },
      {
        "file": "mathcomp/solvable/Make",
        "status": "M",
        "additions": 115,
        "deletions": 115
      },
      {
        "file": "mathcomp/solvable/abelian.v",
        "status": "M",
        "additions": 115,
        "deletions": 115
      },
      {
        "file": "mathcomp/solvable/alt.v",
        "status": "M",
        "additions": 115,
        "deletions": 115
      },
      {
        "file": "mathcomp/solvable/extraspecial.v",
        "status": "M",
        "additions": 115,
        "deletions": 115
      },
      {
        "file": "mathcomp/solvable/extremal.v",
        "status": "M",
        "additions": 115,
        "deletions": 115
      },
      {
        "file": "mathcomp/solvable/maximal.v",
        "status": "M",
        "additions": 115,
        "deletions": 115
      },
      {
        "file": "mathcomp/solvable/nilpotent.v",
        "status": "M",
        "additions": 115,
        "deletions": 115
      },
      {
        "file": "mathcomp/solvable/primitive_action.v",
        "status": "M",
        "additions": 115,
        "deletions": 115
      },
      {
        "file": "mathcomp/solvable/sylow.v",
        "status": "M",
        "additions": 115,
        "deletions": 115
      },
      {
        "file": "mathcomp/ssreflect/Make",
        "status": "M",
        "additions": 115,
        "deletions": 115
      },
      {
        "file": "mathcomp/ssreflect/bigop.v",
        "status": "M",
        "additions": 115,
        "deletions": 115
      },
      {
        "file": "mathcomp/ssreflect/div.v",
        "status": "M",
        "additions": 115,
        "deletions": 115
      },
      {
        "file": "mathcomp/ssreflect/finfun.v",
        "status": "M",
        "additions": 115,
        "deletions": 115
      },
      {
        "file": "mathcomp/ssreflect/finset.v",
        "status": "M",
        "additions": 115,
        "deletions": 115
      },
      {
        "file": "mathcomp/ssreflect/order.v",
        "status": "M",
        "additions": 115,
        "deletions": 115
      },
      {
        "file": "mathcomp/ssreflect/path.v",
        "status": "M",
        "additions": 115,
        "deletions": 115
      },
      {
        "file": "mathcomp/ssreflect/prime.v",
        "status": "M",
        "additions": 115,
        "deletions": 115
      },
      {
        "file": "mathcomp/ssreflect/tuple.v",
        "status": "M",
        "additions": 115,
        "deletions": 115
      }
    ],
    "state": "merged",
    "open_date": "2020-11-19T19:07:13Z",
    "update_date": "2020-11-20T03:41:11Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "e565f8d9bebd4fd681c34086d5448dbaebc11976",
        "message": "Removing duplicate clears and turning the warning into an error",
        "date": "2020-11-19T20:38:46Z"
      }
    ]
  },
  {
    "author": "affeldt-aist",
    "number": 656,
    "diff_summary": [
      {
        "file": "mathcomp/Make",
        "status": "M",
        "additions": 82,
        "deletions": 11
      },
      {
        "file": "mathcomp/_CoqProject",
        "status": "M",
        "additions": 82,
        "deletions": 11
      },
      {
        "file": "mathcomp/algebra/Make",
        "status": "M",
        "additions": 82,
        "deletions": 11
      },
      {
        "file": "mathcomp/algebra/mxalgebra.v",
        "status": "M",
        "additions": 82,
        "deletions": 11
      },
      {
        "file": "mathcomp/algebra/poly.v",
        "status": "M",
        "additions": 82,
        "deletions": 11
      },
      {
        "file": "mathcomp/algebra/ssralg.v",
        "status": "M",
        "additions": 82,
        "deletions": 11
      },
      {
        "file": "mathcomp/algebra/ssrint.v",
        "status": "M",
        "additions": 82,
        "deletions": 11
      },
      {
        "file": "mathcomp/algebra/vector.v",
        "status": "M",
        "additions": 82,
        "deletions": 11
      },
      {
        "file": "mathcomp/character/Make",
        "status": "M",
        "additions": 82,
        "deletions": 11
      },
      {
        "file": "mathcomp/character/classfun.v",
        "status": "M",
        "additions": 82,
        "deletions": 11
      },
      {
        "file": "mathcomp/character/mxabelem.v",
        "status": "M",
        "additions": 82,
        "deletions": 11
      },
      {
        "file": "mathcomp/character/mxrepresentation.v",
        "status": "M",
        "additions": 82,
        "deletions": 11
      },
      {
        "file": "mathcomp/field/Make",
        "status": "M",
        "additions": 82,
        "deletions": 11
      },
      {
        "file": "mathcomp/field/algC.v",
        "status": "M",
        "additions": 82,
        "deletions": 11
      },
      {
        "file": "mathcomp/field/algnum.v",
        "status": "M",
        "additions": 82,
        "deletions": 11
      },
      {
        "file": "mathcomp/field/falgebra.v",
        "status": "M",
        "additions": 82,
        "deletions": 11
      },
      {
        "file": "mathcomp/fingroup/Make",
        "status": "M",
        "additions": 82,
        "deletions": 11
      },
      {
        "file": "mathcomp/fingroup/action.v",
        "status": "M",
        "additions": 82,
        "deletions": 11
      },
      {
        "file": "mathcomp/fingroup/fingroup.v",
        "status": "M",
        "additions": 82,
        "deletions": 11
      },
      {
        "file": "mathcomp/fingroup/presentation.v",
        "status": "M",
        "additions": 82,
        "deletions": 11
      },
      {
        "file": "mathcomp/solvable/Make",
        "status": "M",
        "additions": 82,
        "deletions": 11
      },
      {
        "file": "mathcomp/solvable/gfunctor.v",
        "status": "M",
        "additions": 82,
        "deletions": 11
      },
      {
        "file": "mathcomp/solvable/gseries.v",
        "status": "M",
        "additions": 82,
        "deletions": 11
      },
      {
        "file": "mathcomp/solvable/jordanholder.v",
        "status": "M",
        "additions": 82,
        "deletions": 11
      },
      {
        "file": "mathcomp/ssreflect/Make",
        "status": "M",
        "additions": 82,
        "deletions": 11
      },
      {
        "file": "mathcomp/ssreflect/bigop.v",
        "status": "M",
        "additions": 82,
        "deletions": 11
      },
      {
        "file": "mathcomp/ssreflect/eqtype.v",
        "status": "M",
        "additions": 82,
        "deletions": 11
      },
      {
        "file": "mathcomp/ssreflect/finset.v",
        "status": "M",
        "additions": 82,
        "deletions": 11
      },
      {
        "file": "mathcomp/ssreflect/fintype.v",
        "status": "M",
        "additions": 82,
        "deletions": 11
      },
      {
        "file": "mathcomp/ssreflect/generic_quotient.v",
        "status": "M",
        "additions": 82,
        "deletions": 11
      },
      {
        "file": "mathcomp/ssreflect/order.v",
        "status": "M",
        "additions": 82,
        "deletions": 11
      },
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 82,
        "deletions": 11
      },
      {
        "file": "mathcomp/ssreflect/ssrAC.v",
        "status": "M",
        "additions": 82,
        "deletions": 11
      },
      {
        "file": "mathcomp/ssreflect/ssrnat.v",
        "status": "M",
        "additions": 82,
        "deletions": 11
      }
    ],
    "state": "merged",
    "open_date": "2020-11-19T10:20:06Z",
    "update_date": "2020-11-19T20:37:27Z",
    "discussion": [],
    "review_discussion": [
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/order.v",
        "date": "2020-11-19T23:52:12Z",
        "comment": "Is this `cpo_sort` really needed/used somewhere?"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/order.v",
        "date": "2020-11-20T00:01:00Z",
        "comment": "I don't think so\r\n\r\n"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/order.v",
        "date": "2020-11-20T00:02:58Z",
        "comment": "cf #659"
      }
    ],
    "tags": [
      {
        "tag": "kind: fix",
        "description": "PR that fixes a bug. Please refer to the appropriate issue(s) if relevant."
      }
    ],
    "commits": [
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "c83609826d97afda6b11b227207f461cf077a0d5",
        "message": "add declare scopes",
        "date": "2020-11-19T11:39:55Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 653,
    "diff_summary": [
      {
        "file": "mathcomp/algebra/vector.v",
        "status": "M",
        "additions": 459,
        "deletions": 230
      },
      {
        "file": "mathcomp/field/falgebra.v",
        "status": "M",
        "additions": 459,
        "deletions": 230
      }
    ],
    "state": "open",
    "open_date": "2020-11-19T05:04:49Z",
    "update_date": "2023-01-11T09:14:46Z",
    "discussion": [
      {
        "author": "pi8027",
        "date": "2020-12-26T21:01:22Z",
        "comment": "> *The first obstacle is that `falgebra.v` does not compile since both `prodv` and `capv` (`Order.meet`) distributes over `addv` (`Order.join`) and so `addv_addoid` (in `falgebra.v`) is now redundant with `join_addoid` (in `order.v`).*\r\n\r\nRedefining `Monoid.add_law` as follows would probably solve this issue. But, if there is a multiplication-like operator that distributes over two different addition-like operators, it does not work. Is there any plan to extend the `bigop` hierarchy? https://github.com/math-comp/math-comp/blob/ee410eb85f36f5e366f807207a7dee8f3e1bdf3a/mathcomp/ssreflect/bigop.v#L349-L354\r\n```coq\r\n(* We have to swap its parameter (multiplication) and the first projection    *)\r\n(* (addition) so that its canonical instances can be indexed by constants of  *)\r\n(* multiplication rather than addition.                                       *)\r\nStructure mul_distr_law (add : T -> T -> T) := MulDistrLaw {\r\n  mul_distr_operator : T -> T -> T;\r\n  (* The following two axioms are part of `mul_law`. A telescope cannot be used here anymore. *)\r\n  _ : left_zero idm mul_distr_operator;\r\n  _ : right_zero idm mul_distr_operator;\r\n\r\n  _ : left_distributive mul_distr_operator add;\r\n  _ : right_distributive mul_distr_operator add\r\n}.\r\n```"
      },
      {
        "author": "pi8027",
        "date": "2021-02-10T17:30:33Z",
        "comment": "> But, if there is a multiplication-like operator that distributes over two different addition-like operators, it does not work.\r\n\r\nI self answer this: `muln` distributes over `maxn` and `addn`, and so it does not work."
      }
    ],
    "review_discussion": [
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/vector.v",
        "date": "2020-11-19T08:51:06Z",
        "comment": "It seems like the names `join_idP(l|r)` are transposed. Should be fixed in 1.12. @CohenCyril https://github.com/math-comp/math-comp/blob/0606b6bf22e258dc3b7cf440f10c108f785904b5/mathcomp/ssreflect/order.v#L3642-L3645"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/vector.v",
        "date": "2020-11-19T08:55:02Z",
        "comment": "If `_ \\in _` for linear subspaces is defined by using `Order.le` as in intervals, this proof can probably be `exact: lexI`. (I think it requires some more work.) https://github.com/math-comp/math-comp/blob/0606b6bf22e258dc3b7cf440f10c108f785904b5/mathcomp/algebra/interval.v#L493-L494"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/vector.v",
        "date": "2020-11-23T09:14:45Z",
        "comment": "Well spotted!"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/vector.v",
        "date": "2020-11-23T09:22:47Z",
        "comment": "See #671"
      }
    ],
    "tags": [
      {
        "tag": "kind: enhancement",
        "description": "Issue or PR about addition of features."
      },
      {
        "tag": "needs: fix",
        "description": "PR that needs to be fix (generally because reviewers asked to)."
      },
      {
        "tag": "kind: refactoring",
        "description": "Issue or PR about a refactoring. (reorganizing the code, reusing theorems, simplifications...)"
      }
    ],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "025cec584564f8d5a79f5d784490e7bb0d48fe02",
        "message": "[WIP] Make linear subspaces canonically a `tbLatticeType`",
        "date": "2021-10-07T10:38:40Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 652,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 17,
        "deletions": 12
      },
      {
        "file": "mathcomp/algebra/matrix.v",
        "status": "M",
        "additions": 17,
        "deletions": 12
      },
      {
        "file": "mathcomp/algebra/mxalgebra.v",
        "status": "M",
        "additions": 17,
        "deletions": 12
      },
      {
        "file": "mathcomp/character/mxabelem.v",
        "status": "M",
        "additions": 17,
        "deletions": 12
      },
      {
        "file": "mathcomp/character/mxrepresentation.v",
        "status": "M",
        "additions": 17,
        "deletions": 12
      },
      {
        "file": "mathcomp/field/finfield.v",
        "status": "M",
        "additions": 17,
        "deletions": 12
      }
    ],
    "state": "merged",
    "open_date": "2020-11-18T01:07:34Z",
    "update_date": "2021-06-03T09:36:20Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2020-11-18T10:39:50Z",
        "comment": "I forgot the deprecations :exploding_head: "
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "6fc94d9d311ccd28d56991b8d2218a211f66ca45",
        "message": "Renaming card_matrix lemmas",
        "date": "2021-06-03T07:29:34Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 651,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 16,
        "deletions": 0
      },
      {
        "file": "mathcomp/ssreflect/path.v",
        "status": "M",
        "additions": 16,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2020-11-17T21:57:53Z",
    "update_date": "2020-11-18T10:34:49Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2020-11-17T21:58:44Z",
        "comment": "CC @palmskog"
      },
      {
        "author": "palmskog",
        "date": "2020-11-18T00:23:57Z",
        "comment": "@CohenCyril thanks, this is very much appreciated. \r\n\r\nWhile I think I understand the decision to keep it local, and this is fine with me, I still want to make a quick case for a non-local `Remark`:\r\n- will appear in `Search` and coqdoc list of globals, so becomes more likely to find by those who might be interested why `merge_sort` is defined the way it is.\r\n- there is now a full-fledged Coq library for [reasoning about complexity](https://github.com/uds-psl/coq-library-complexity), making this a potentially interesting case study where the remark is key."
      },
      {
        "author": "CohenCyril",
        "date": "2020-11-18T00:34:46Z",
        "comment": "> While I think I understand the decision to keep it local, and this is fine with me, I still want to make a quick case for a non-local `Remark`:\r\n\r\nI'm ok with a non local remark."
      },
      {
        "author": "ybertot",
        "date": "2020-11-18T08:15:05Z",
        "comment": "The remark size_merge_sort_push is visible by any user loading all_ssreflect"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "8eb486ad82accfb1417be11ecc2889aa09c22081",
        "message": "Adding size_merge_sort_push\n\nThis documents the fact that `merge_sort_push` preserves an invariant on its second argument.\nImporting a statement and proof by Georges Gonthier, inspired by one of Karl Palmskog's contribution.\n\nCo-Authored-By: Karl Palmskog <palmskog@kth.se>\nCo-Authored-By: Georges Gonthier <georges.gonthier@inria.fr>",
        "date": "2020-11-18T00:33:41Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 650,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 220,
        "deletions": 219
      },
      {
        "file": "mathcomp/ssreflect/fintype.v",
        "status": "M",
        "additions": 220,
        "deletions": 219
      },
      {
        "file": "mathcomp/ssreflect/path.v",
        "status": "M",
        "additions": 220,
        "deletions": 219
      }
    ],
    "state": "merged",
    "open_date": "2020-11-15T01:45:36Z",
    "update_date": "2020-11-19T10:48:47Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2020-11-18T00:39:01Z",
        "comment": "@chdoc do you approve as well?"
      },
      {
        "author": "CohenCyril",
        "date": "2020-11-18T11:58:26Z",
        "comment": "Given the problem with ci-fscl-pcm, maybe `subseq_order_path` renaming can wait until we switch to Coq's deprecation mechanism?"
      },
      {
        "author": "pi8027",
        "date": "2020-11-18T20:56:46Z",
        "comment": "> Given the problem with ci-fscl-pcm, maybe `subseq_order_path` renaming can wait until we switch to Coq's deprecation mechanism?\r\n\r\nOne more placeholder was missing in the deprecation notation. Should be ok now."
      },
      {
        "author": "CohenCyril",
        "date": "2020-11-19T09:03:03Z",
        "comment": "@chdoc do you approve?"
      }
    ],
    "review_discussion": [
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2020-11-16T05:41:31Z",
        "comment": "Should this also be renamed to `subseq_path`? (Does `order` stand for transitivity here?)"
      },
      {
        "author": "chdoc",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2020-11-16T10:41:51Z",
        "comment": "```suggestion\r\nLemma sort_stable T (leT leT' : rel T) (s: seq T) : \r\n  total leT -> transitive leT -> transitive leT' -> sorted leT' s ->\r\n```"
      },
      {
        "author": "chdoc",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2020-11-16T10:46:58Z",
        "comment": "To me, this looks like the change to the `Stability` section is not yet ideal. Maybe the transfer from `rel T` to `rel nat` can be be factored out?"
      },
      {
        "author": "chdoc",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2020-11-16T10:48:40Z",
        "comment": "```suggestion\r\nhave leN_total: total (relpre (nth x s) leT) by move=> n m; apply: leT_total.\r\n```"
      },
      {
        "author": "chdoc",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2020-11-16T10:48:56Z",
        "comment": "```suggestion\r\nmove=> leT_total leT_tr leT'_tr sorted_s; case Ds: s => // [x s1].\r\n```"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2020-11-16T20:09:38Z",
        "comment": "I chose this ordering of arguments intentionally. Most sorting lemmas (except for `order_path_min` and `_in` lemmas for `eqType`s) take properties of relations before sequences. This PR also does not change the ordering of the arguments of `sort_stable`."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2020-11-16T23:34:18Z",
        "comment": "I noticed that transitivity of `leT` is not required (and not used actually) to prove `sort_stable`. Let me fix it."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2020-11-17T00:57:29Z",
        "comment": "The problem here is that `filter_sort` has to use `sort_stable` for a `seq nat` obtained by the `mkseq` technique and it does not allow us to factor out some intermediate steps of them using a `Section`. Anyway, I managed to prove this lemma with fewer `have` in the last revision. Do you still see any possible improvement?"
      },
      {
        "author": "chdoc",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2020-11-17T09:57:28Z",
        "comment": "I'm not sure what you mean. My ideas were along the lines of:\r\n```coq\r\nSection LeLex.\r\n\r\nVariables (T : Type) (leT : rel T) (x0 : T) (s : seq T).\r\n\r\nLet leN := relpre (nth x0 s) leT.\r\nDefinition le_lex := [rel n m | leN n m && (leN m n ==> (n < m))].\r\n\r\nLemma le_lex_trans : transitive leT -> transitive le_lex.\r\nProof.\r\nmove=> leT_tr. rewrite /le_lex /leN => ? ? ? /= /andP [xy xy'] /andP [yz yz'].\r\nrewrite (leT_tr _ _ _ xy yz); apply/implyP => zx; move: xy' yz'.\r\nby rewrite (leT_tr _ _ _ yz zx) (leT_tr _ _ _ zx xy); apply: ltn_trans.\r\nQed.\r\n\r\nLemma le_lex_irr : irreflexive le_lex. \r\nProof. by move=> x; rewrite /le_lex/leN/= ltnn implybF andbN. Qed.\r\n\r\nEnd LeLex.\r\n\r\nArguments le_lex_trans [T leT] x0 s.\r\n\r\nLemma filter_sort T (leT : rel T) :\r\n  total leT -> transitive leT ->\r\n  forall p s, filter p (sort leT s) = sort leT (filter p s).\r\nProof.\r\nmove=> leT_total leT_tr p s; case Ds: s => // [x s1].\r\nrewrite -{s1}Ds -(mkseq_nth x s) !(filter_map, sort_map); congr map.\r\nhave ? : total (relpre (nth x s) leT) by move=> n m; apply: leT_total.\r\nhave le_lex_tr := le_lex_trans x s leT_tr.\r\napply: (irr_sorted_eq le_lex_tr (le_lex_irr leT x s)). \r\n- exact/sorted_filter/sort_iota_stable. \r\n- exact/sort_stable/sorted_filter/iota_ltn_sorted/ltn_trans/ltn_trans.\r\n- by move=> ?; rewrite !(mem_filter, mem_sort).\r\nQed.\r\n```\r\nI'm not sure `le_lex` is a good global name, but I think the pattern of turning an order on `T` into an corresponding order on `nat` is quite generic. I'm surprised this is only needed once... "
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2020-11-17T16:47:44Z",
        "comment": "@chdoc In your code above, `le_lex` is a combination of two things: 1. lexicographic ordering and 2. turning an order on elements of a sequence into a corresponding order on `nat` using `nth`. If I declare it globally, I would rather split it into these two parts and parameterize the former one to take two relations, but it would also make this proof script lengthy. So I would like to keep the current one for now.\r\n\r\nA possible solution to this issue would be using canonical structures to infer properties of relations, but this should be another PR."
      },
      {
        "author": "chdoc",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2020-11-17T17:15:18Z",
        "comment": "I wasn't suggesting that my comment is the final version, but I am strongly in favor of making the constructions explicit. You're also proving totality of the `relpre`+`nth` construction twice (I know, it's a one-liner). Maybe @CohenCyril has an opinion on this; his review is still outstanding. \r\n\r\nAlso, I'm not sure what's the connection to \"lexicographic ordering\", which I understand as the extension of an order from a type to sequences/words over that type, as done in dictionaries. But maybe that term is ambiguous. "
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2020-11-17T21:21:05Z",
        "comment": "I agree with Kazuhiko, there is no further sensible refactoring that I can identify here.\r\nIt does not save space nor document things in better way to try and factor out `le_lex`.\r\n\r\n@pi8027, the only suggestion, which is obviously nitpicking, I have to make is: since the relation `le_lex` (local to the proof of `filter_sort`) is irreflexive it should be named `lt_lex` instead. (I know! the name was already wrong before)\r\n\r\n@chdoc, yes this is the lexicographic ordering on `nat * nat` with respective order relations `leN` and `ltn`, although the notion only appears and is formalized later on, in `order`...  it's ok to duplicate the proof of transitivity & irreflexivity of a (strict) lexicographic ordering for the sake of not bringing the whole of `order` in here and risking circular dependencies or huge refactorings...."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2020-11-17T21:23:04Z",
        "comment": "```suggestion\r\nLet lt_lex := [rel n m | leN n m && (leN m n ==> (n < m))].\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2020-11-17T21:23:10Z",
        "comment": "```suggestion\r\n    sorted lt_lex s && perm_eq s (iota (size (flatten ss')) (size s)) &&\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2020-11-17T21:23:19Z",
        "comment": "```suggestion\r\n  push_invariant (s1 :: ss) -> sorted lt_lex (merge_sort_pop leN s1 ss).\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2020-11-17T21:23:27Z",
        "comment": "```suggestion\r\nLemma sort_iota_stable n : sorted lt_lex (sort leN (iota 0 n)).\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2020-11-17T21:23:52Z",
        "comment": "```suggestion\r\npose lt_lex := [rel n m | leN n m && (leN m n ==> (n < m))].\r\nhave lt_lex_tr: transitive lt_lex.\r\n  rewrite /lt_lex /leN => ? ? ? /= /andP [xy xy'] /andP [yz yz'].\r\n  rewrite (leT_tr _ _ _ xy yz); apply/implyP => zx; move: xy' yz'.\r\n  by rewrite (leT_tr _ _ _ yz zx) (leT_tr _ _ _ zx xy); apply: ltn_trans.\r\nrewrite -{s1}Ds -(mkseq_nth x s) !(filter_map, sort_map); congr map.\r\napply/(@irr_sorted_eq _ lt_lex); rewrite /lt_lex /leN //=.\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2020-11-18T00:38:20Z",
        "comment": "I think so. I'm ok with the renaming."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2020-11-18T01:24:37Z",
        "comment": "> Also, I'm not sure what's the connection to \"lexicographic ordering\", which I understand as the extension of an order from a type to sequences/words over that type, as done in dictionaries. But maybe that term is ambiguous.\r\n\r\n> @chdoc, yes this is the lexicographic ordering on `nat * nat` with respective order relations `leN` and `ltn`, ...\r\n\r\nI meant that the following relation can be seen as (a generalization of) lexicographic ordering:\r\n```coq\r\nDefinition lexord (T : Type) (leT leT' : rel T) : rel T :=\r\n  [rel x y | leT x y && (leT y x ==> leT' x y)].\r\n```\r\nIn the case of that `T` is a product type and `leT` and `leT'` compare its first and second component respectively, `lexord` is the lexicographic ordering of products. Since order structures require `<=%O` to be antisymmetric, this generalization does not make sense in `order.v`."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2020-11-18T04:48:54Z",
        "comment": "Done."
      }
    ],
    "tags": [
      {
        "tag": "kind: refactoring",
        "description": "Issue or PR about a refactoring. (reorganizing the code, reusing theorems, simplifications...)"
      }
    ],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "b3d31c4b66581c78ce23b7fc2e76b41a1a4adf60",
        "message": "Refactor, reshuffle, and rename sorting lemmas in `path.v`\n\n- Lemmas `sorted_(lt|le)_nth` have been renamed to `sorted_(ltn|leq)_nth`.\n- Lemmas `(ltn|leq)_index` have been renamed to `sorted_(ltn|leq)_index` and\n  generalized for non-`eqType`s.\n- Lemmas `order_path_min`, `path_sortedE`, `subseq_order_path`, `subseq_sorted`,\n  `sorted_uniq`, `sorted_eq`, `irr_sorted_eq`, `sorted_(ltn|leq)_nth`, and\n  `sorted_(ltn|leq)_index` have been relocated since their proofs are\n  independent from `merge` and `sort`.\n- The stability proofs for `iota` sequences (`push_stable`, `pop_stable`, and\n  `sort_iota_stable`) have been simplified by sorting out their hypotheses and\n  by redefining `push_invariant` to include the `sorted` condition. Their main\n  result `sort_iota_stable`, formerly a local `Let` to prove `sort_stable`, has\n  been turned into a lemma.\n- Some stability proofs for general sequences (`sort_stable` and `filter_sort`)\n  have also been simplified, of which the former one uses the above\n  `sorted_ltn_nth` lemma for a non-`eqType`.",
        "date": "2020-11-18T20:24:58Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "cdbb52e7c60883b0beee923fdd96baa3e80a1912",
        "message": "Apply a suggestion from code review\n\nCo-authored-by: Christian Doczkal <christian.doczkal@inria.fr>",
        "date": "2020-11-18T20:24:58Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "82db85f541dc9a47fd79b462a63b8b80a8468557",
        "message": "Apply suggestions from code review\n\nCo-authored-by: Cyril Cohen <CohenCyril@users.noreply.github.com>",
        "date": "2020-11-18T20:24:58Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "9e6c20b4bd5397539debee9fcb0853b6924ecfb9",
        "message": "Rename `subseq_order_path` to `subseq_path`",
        "date": "2020-11-18T20:53:45Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 649,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 106,
        "deletions": 10
      },
      {
        "file": "mathcomp/ssreflect/order.v",
        "status": "M",
        "additions": 106,
        "deletions": 10
      }
    ],
    "state": "merged",
    "open_date": "2020-11-13T18:41:14Z",
    "update_date": "2021-06-02T07:55:59Z",
    "discussion": [
      {
        "author": "pi8027",
        "date": "2020-11-27T18:18:39Z",
        "comment": "Now I think it makes a lot of sense to wait for a major update of real-closed to see what we need here."
      },
      {
        "author": "pi8027",
        "date": "2021-05-19T08:18:15Z",
        "comment": "I will resume this PR after #727 and #738 get merged."
      },
      {
        "author": "pi8027",
        "date": "2021-05-21T01:59:29Z",
        "comment": "> `sorted_(ltn|leq)_(nth|index)` lemmas specialized for `porderType` are still missing on purpose. [#601 (comment)](https://github.com/math-comp/math-comp/pull/601#discussion_r523141733)\r\n\r\n`(lt|le)_sorted_(ltn|leq)_nth` are actually introduced in #738 but `index` ones are still missing. We should probably double-check them."
      }
    ],
    "review_discussion": [
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/order.v",
        "date": "2020-11-13T18:46:42Z",
        "comment": "Since `<=%O` is antisymmetric, these stability lemmas may not be that useful (at least, they can also be proved for unstable sorting functions). I have no idea whether they are needed or not."
      }
    ],
    "tags": [
      {
        "tag": "kind: enhancement",
        "description": "Issue or PR about addition of features."
      }
    ],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "b2471af67970a4f30d9b7164dd3d8e67efcff0c5",
        "message": "Add sorting lemmas specialized for `porderType` and `orderType`",
        "date": "2021-05-21T01:40:19Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 647,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 7,
        "deletions": 10
      }
    ],
    "state": "merged",
    "open_date": "2020-11-13T11:38:10Z",
    "update_date": "2020-11-13T13:12:21Z",
    "discussion": [],
    "review_discussion": [
      {
        "author": "pi8027",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2020-11-13T11:48:03Z",
        "comment": "IIRC, I accidentally added similar duplication before. I guess they are introduced by resolving conflicts within a PR using the union merge driver. @CohenCyril"
      }
    ],
    "tags": [
      {
        "tag": "kind: fix",
        "description": "PR that fixes a bug. Please refer to the appropriate issue(s) if relevant."
      }
    ],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "2aa25ceba3d8a21daa573d70702f999379f44145",
        "message": "Fix CHANGELOG_UNRELEASED.md\n\n- Unindent three entries for #611 and #624 (first part).\n- Remove duplicated entries for #604 (second part).",
        "date": "2020-11-13T11:22:20Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 646,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 44,
        "deletions": 24
      },
      {
        "file": "mathcomp/ssreflect/bigop.v",
        "status": "M",
        "additions": 44,
        "deletions": 24
      },
      {
        "file": "mathcomp/ssreflect/binomial.v",
        "status": "M",
        "additions": 44,
        "deletions": 24
      },
      {
        "file": "mathcomp/ssreflect/order.v",
        "status": "M",
        "additions": 44,
        "deletions": 24
      },
      {
        "file": "mathcomp/ssreflect/path.v",
        "status": "M",
        "additions": 44,
        "deletions": 24
      },
      {
        "file": "mathcomp/ssreflect/prime.v",
        "status": "M",
        "additions": 44,
        "deletions": 24
      }
    ],
    "state": "merged",
    "open_date": "2020-11-12T21:49:47Z",
    "update_date": "2020-11-13T14:00:55Z",
    "discussion": [],
    "review_discussion": [
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/order.v",
        "date": "2020-11-13T10:51:38Z",
        "comment": "@pi8027 this suggests an even more consistent naming for the former `eq_sorted_lt` would be `lt_sorted_eq`."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/order.v",
        "date": "2020-11-13T10:52:54Z",
        "comment": "This would mean the new names would be `le_sorted_eq`, `lt_sorted_eq` and `irr_sorted_eq`."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/order.v",
        "date": "2020-11-13T11:09:07Z",
        "comment": "That makes sense!"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/order.v",
        "date": "2020-11-13T12:14:39Z",
        "comment": "Done."
      }
    ],
    "tags": [
      {
        "tag": "kind: fix",
        "description": "PR that fixes a bug. Please refer to the appropriate issue(s) if relevant."
      }
    ],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "2f906481423530b03f21ff605aaee3f281131608",
        "message": "Rename `eq_sorted` lemmas to `sorted_eq` and generalize `sort_le_id`\n\n- Rename `eq_sorted` lemmas to `sorted_eq` to address a naming inconsistency.\n- Lemma `sort_le_id` has been generalized from `orderType` to `porderType`.",
        "date": "2020-11-13T12:07:20Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 641,
    "diff_summary": [
      {
        "file": "mathcomp/algebra/ssrnum.v",
        "status": "M",
        "additions": 2,
        "deletions": 2
      }
    ],
    "state": "merged",
    "open_date": "2020-11-12T08:58:55Z",
    "update_date": "2020-11-12T14:33:16Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: fix",
        "description": "PR that fixes a bug. Please refer to the appropriate issue(s) if relevant."
      }
    ],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "de89e39ec1104d7b893d3aa4610fe50cbefabc51",
        "message": "It is prohibited to use `exact:` in a `Hint Extern`\n\nsince `exact` might call `ssrdone` which calls use of level 0 hints, potentially\ncausing a loop in some weird cases.",
        "date": "2020-11-12T08:54:51Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 640,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 6,
        "deletions": 6
      },
      {
        "file": "mathcomp/ssreflect/ssrnat.v",
        "status": "M",
        "additions": 6,
        "deletions": 6
      }
    ],
    "state": "merged",
    "open_date": "2020-11-11T19:14:40Z",
    "update_date": "2020-11-11T22:20:26Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2020-11-11T19:15:15Z",
        "comment": "CC @gares @pi8027 @herbelin"
      },
      {
        "author": "herbelin",
        "date": "2020-11-11T19:34:06Z",
        "comment": "Sorry for the confusion which probably came from the name `Iter.v` of the failing Coquelicot file."
      }
    ],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: fix",
        "description": "PR that fixes a bug. Please refer to the appropriate issue(s) if relevant."
      }
    ],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "eb4bed01bf31c21cd13cdfbd4b81303f4f357c4e",
        "message": "Deprecation of iota_add delayed, and not the one of iter_add",
        "date": "2020-11-11T19:14:05Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 637,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 2,
        "deletions": 2
      }
    ],
    "state": "merged",
    "open_date": "2020-11-09T01:07:18Z",
    "update_date": "2020-11-09T11:39:22Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "28a131e82248456137dd08c889fe0cb9e6c792d8",
        "message": "fix changelog",
        "date": "2020-11-09T01:06:35Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 636,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 17,
        "deletions": 16
      },
      {
        "file": "mathcomp/algebra/matrix.v",
        "status": "M",
        "additions": 17,
        "deletions": 16
      },
      {
        "file": "mathcomp/algebra/mxalgebra.v",
        "status": "M",
        "additions": 17,
        "deletions": 16
      },
      {
        "file": "mathcomp/algebra/mxpoly.v",
        "status": "M",
        "additions": 17,
        "deletions": 16
      }
    ],
    "state": "merged",
    "open_date": "2020-11-09T00:07:47Z",
    "update_date": "2020-11-16T15:54:54Z",
    "discussion": [
      {
        "author": "chdoc",
        "date": "2020-11-09T11:42:25Z",
        "comment": "@CohenCyril Do I understand correctly that this is merely renaming a bunch of lemmas that are not contained in any previous release?\r\n\r\n@ybertot @thery , could you please have a look (review) and confirm that the new names are well-chosen?"
      },
      {
        "author": "ybertot",
        "date": "2020-11-10T07:25:51Z",
        "comment": "I have no confidence in judging naming policies.  I prefer to pass on this one."
      },
      {
        "author": "CohenCyril",
        "date": "2020-11-11T16:39:24Z",
        "comment": "> @CohenCyril Do I understand correctly that this is merely renaming a bunch of lemmas that are not contained in any previous release?\r\n\r\nyes that's correct!"
      },
      {
        "author": "chdoc",
        "date": "2020-11-11T16:54:52Z",
        "comment": "@thery can you merge this?"
      },
      {
        "author": "thery",
        "date": "2020-11-12T13:34:16Z",
        "comment": "@chdoc yep "
      },
      {
        "author": "CohenCyril",
        "date": "2020-11-12T20:06:30Z",
        "comment": "@thery? "
      },
      {
        "author": "chdoc",
        "date": "2020-11-16T14:29:17Z",
        "comment": "@thery please merge, I cannot."
      }
    ],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: fix",
        "description": "PR that fixes a bug. Please refer to the appropriate issue(s) if relevant."
      }
    ],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "8b98bcedc4523e07e4fdc118159cf171366e952d",
        "message": "`comm(Cmx|_mxC)` -> `comm(_scalar_mx|_mx_scalar)`",
        "date": "2020-11-09T00:06:18Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 633,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/ssrnat.v",
        "status": "M",
        "additions": 5,
        "deletions": 3
      }
    ],
    "state": "merged",
    "open_date": "2020-11-05T12:27:49Z",
    "update_date": "2020-11-06T16:24:34Z",
    "discussion": [
      {
        "author": "pi8027",
        "date": "2020-11-06T15:29:58Z",
        "comment": "Should we also remove or edit the corresponding CHANGELOG entry for now?"
      },
      {
        "author": "CohenCyril",
        "date": "2020-11-06T15:48:11Z",
        "comment": "> Should we also remove or edit the corresponding CHANGELOG entry for now?\r\n\r\nLet's annotate it, saying it is morally deprecated, but the warning will only come up in the next release and be removed in 1.14.0..."
      },
      {
        "author": "herbelin",
        "date": "2020-11-11T10:05:00Z",
        "comment": "Coming back to this PR, didn't you intend to also change `iota_add`, which is the deprecated constant causing the failure of Coquelicot? Maybe there are more than that to change, I can't tell though."
      },
      {
        "author": "CohenCyril",
        "date": "2020-11-11T11:02:33Z",
        "comment": "@gares @herbelin The change in this PR should have solved the problem...\r\nCan one of you tell me where to look for the current error message?"
      },
      {
        "author": "herbelin",
        "date": "2020-11-11T11:26:09Z",
        "comment": "Here is a link where to look at: https://gitlab.com/coq/coq/-/jobs/841468976"
      },
      {
        "author": "CohenCyril",
        "date": "2020-11-11T16:23:43Z",
        "comment": "Since `iter_add` is not deprecated anymore, this log is not the one of a build on top of the current master..."
      },
      {
        "author": "herbelin",
        "date": "2020-11-11T17:40:53Z",
        "comment": "Here is a log of today: https://gitlab.com/coq/coq/-/jobs/843633600\r\n\r\nIsn't there a difference between `iota_add` and `iter_add`?"
      },
      {
        "author": "CohenCyril",
        "date": "2020-11-11T19:05:14Z",
        "comment": "> Isn't there a difference between `iota_add` and `iter_add`?\r\n\r\nWoops, there is, and I have misread and so did the reviewer and assignee of this PR..."
      }
    ],
    "review_discussion": [
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/ssrnat.v",
        "date": "2020-11-06T10:34:27Z",
        "comment": "```suggestion\r\n(* TODO: restore when Coq 8.10 is no longer supported                *)\r\n(* #[deprecated(since=\"mathcomp 1.13.0\", note=\"Use iterD instead.\")] *)\r\n```"
      }
    ],
    "tags": [
      {
        "tag": "kind: fix",
        "description": "PR that fixes a bug. Please refer to the appropriate issue(s) if relevant."
      }
    ],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "a14d422bcc1a44a860dd207b10d239c064d22548",
        "message": "test switching Coq deprecation mechanizm",
        "date": "2020-11-05T12:52:20Z"
      },
      {
        "author": "CohenCyril",
        "committer": "web-flow",
        "hash": "a637acb7940706d162fe46b1359638f986d4c9bd",
        "message": "Update mathcomp/ssreflect/ssrnat.v",
        "date": "2020-11-06T10:34:40Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 632,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 254,
        "deletions": 144
      },
      {
        "file": "mathcomp/ssreflect/path.v",
        "status": "M",
        "additions": 254,
        "deletions": 144
      },
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 254,
        "deletions": 144
      }
    ],
    "state": "merged",
    "open_date": "2020-11-05T07:39:20Z",
    "update_date": "2020-11-11T17:58:03Z",
    "discussion": [
      {
        "author": "pi8027",
        "date": "2020-11-06T16:20:48Z",
        "comment": "> This already looks very solid to me. However, I wonder whether using `subseq` rather than explicit masks would simplify things. Put differently, I wonder whether there is additional complexity introduced by not requiring an `eqType`, and whether this is is justified by some application or model.\r\n\r\nIn general, I would like to make `_in` lemmas general enough to derive their specific counterparts immediately. Since `(homo|mono)_(path|cycle|sorted)` lemmas have not been derived from their `_in` counterparts, this probably does not apply to this PR. But, IMO, this is quite crucial to keep PR #601 as simple as possible, since many existing lemmas which I generalize do not require an `eqType`.\r\n\r\nAlso, I observed that `homo_sorted_in` generalized in this PR was useful to prove the following lemma (I actually managed to prove it):\r\n```coq\r\nLemma sort_map_in\r\n      (T : Type) (T' : eqType) (P : {pred T}) (f : T -> T') leT leT' :\r\n  {in P &, antisymmetric (relpre f leT')} ->\r\n  {in P & &, transitive (relpre f leT')} -> {in P &, total leT} ->\r\n  {in P &, {homo f : x y / leT x y >-> leT' x y}} ->\r\n  {in all P, forall s : seq T,\r\n        sort leT' [seq f x | x <- s] = [seq f x | x <- sort leT s]}.\r\n```"
      }
    ],
    "review_discussion": [
      {
        "author": "chdoc",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-05T10:09:13Z",
        "comment": "I would have expected this one (and `has_mask` above) to follow from the `subseq (mask m s) s` and monotonicity of `all`. However, this requires some shuffling, so maybe it can be done in a separate PR. "
      },
      {
        "author": "chdoc",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2020-11-05T10:58:02Z",
        "comment": "maybe move the hypothesis up?"
      },
      {
        "author": "chdoc",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2020-11-05T11:08:40Z",
        "comment": "I'm a bit surprised/sad that the lemmas in this section are proved after their more specific counterparts. On the other hand, all lemmas in the `HomoPath` section are already one-liners. So maybe we can keep it as is."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2020-11-05T11:25:48Z",
        "comment": "Unfortunately, it breaks `abelian.v`. The arguments `x` and `s` of `order_path_min` should come before `leT_tr`. https://github.com/math-comp/math-comp/pull/358#discussion_r295259267"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2020-11-05T12:15:28Z",
        "comment": "~I'd rather spend one more character to get better insight into the case analysis.~\r\n```suggestion\r\nelim: m s sizeE => [|[|m] ih] [|x s] //= [sizeE] /andP[Px Ps].\r\n```"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2020-11-05T12:17:16Z",
        "comment": "Using general ones to prove specific ones does not help us much here, but we can place them in the opposite order (also in the same section). Let me do so."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-05T12:18:12Z",
        "comment": "@chdoc Can you open a new issue for this?"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2020-11-05T12:21:08Z",
        "comment": "`[]` is the case analysis for the first element of `m : bitseq` here. Your suggestion does not work."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2020-11-05T12:33:36Z",
        "comment": "Ahah right!"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2020-11-05T12:34:13Z",
        "comment": "I got confused between the convention for natural numbers and masks."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2020-11-05T12:40:18Z",
        "comment": "New suggestion then:\r\n```suggestion\r\nelim: m s sizeE => [|[] m ih] [|x s] //= [sizeE] /andP[Px Ps].\r\n```"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2020-11-05T12:45:01Z",
        "comment": "Done."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-09T20:52:41Z",
        "comment": "Oh, but proving `has_mask` and `all_mask` using the `subseq` lemmas specializes `T` to an `eqType`. I don't think it is a good idea."
      },
      {
        "author": "chdoc",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-09T22:53:14Z",
        "comment": "I'm of two minds about this. On the one hand, I agree that one should not require an `eqType` where none is required. On the other hand, I find it deeply unsatisfying to resort to induction just because `mathcomp` defines list membership (and hence list inclusion) only for `eqType`. Using the `In` predicate, whose use I'm really not advocating here, it's not too hard to prove:\r\n```coq\r\nLemma In_mask x m s : In x (mask m s) -> In x s. \r\nLemma In_all a s s' : (forall x, In x s -> In x s') -> all a s' -> all a s.\r\n\r\nLemma all_mask a m s : all a s -> all a (mask m s).\r\nProof. by apply/In_all => ?; exact: In_mask. Qed.\r\n```\r\nAgain, this is not about this specific lemma, this is about the general principle about lists as \"sets\" or \"collections\" without equality and how to reason about them. @CohenCyril do you have an opinion on the matter? \r\n\r\n"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-10T09:38:20Z",
        "comment": "I think we should open a new issue anyway then."
      },
      {
        "author": "chdoc",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2020-11-10T10:18:49Z",
        "comment": "I'm afraid, but the lemma you removed from this PR was not the only place where the lack of an `eqType` structure makes you resort to induction where one would expect monotonicity to be used. For instance, the last line could be:\r\n```\r\nby apply/(@allP _ _ (y::s)); rewrite /= ?mem_last ?Py.\r\n```\r\nif `T` was an `eqType`. \r\n\r\n@CohenCyril , what's your position on this?"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-10T11:29:55Z",
        "comment": "Until mathcomp introduces support for non decidable membership*, it's perfectly ok not to rely on a lemma involving `mem` to show something that does not involve an `eqType`. If it really matters, it is suggested one goes through `mkseqP` or `mkseq_nth` lemmas to index the biggest list with natural numbers `iota 0 (size the_big_list)`, and hence reduce the reasoning to the `eqType` `nat`, (which is the best we can do when we are not able to distinguish one element from another).\r\n\r\n*supporting non decidable predicates (such as `In`) would be a radical modification of mathcomp and could introduce a lot of code duplication if not done properly. But on the other hand it would be extremely useful for mathcomp-analysis, and it could be a good topic of discussion for a mathcomp meeting or rather a working group on the topic."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2020-11-10T11:33:07Z",
        "comment": "It's ok to \"duplicate\" short proofs."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2020-11-10T11:34:47Z",
        "comment": "However, maybe this proof could start with \r\n```coq\r\ncase: s => [|x s]; first by rewrite mask0.\r\nhave [n f {x s}_] := mkseqP x (x :: s); rewrite all_map cycle_map -map_mask.\r\n```"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2020-11-10T12:21:09Z",
        "comment": "I realized the fact that `leT` relates all the elements of `s` if `leT` is transitive and `cycle leT s` holds. So `cycle_(filter|mask)_in` lemmas may not be that useful. Shouldn't we rather remove them for now?"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-10T12:41:18Z",
        "comment": "BTW you could reuse old material with the following proof, but that would be counterproductive...\r\n```coq\r\nLemma all_mask T (a : pred T) m s : all a s -> all a (mask m s).\r\nProof.\r\ncase: s => [|x s]; first by rewrite mask0.\r\nhave [n f {x s}_] := mkseqP x (x :: s); rewrite -map_mask !all_map.\r\nby move=> /allP fan; apply/allP => x /mem_mask/fan.\r\nQed.\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2020-11-10T12:43:24Z",
        "comment": "Sure, maybe there should be a proof that `cycle leT s -> allrel leT s` ?"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2020-11-10T12:58:58Z",
        "comment": "Good. Let me do that in another PR since #630 seems useful for it."
      },
      {
        "author": "chdoc",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-10T13:06:09Z",
        "comment": "I opened issue #638 to organize the larger discussion on non-decidable membership and I will ignore the issue as it comes to this PR."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-10T13:10:52Z",
        "comment": "@chdoc Thanks!"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-10T13:18:08Z",
        "comment": "Ah, I discovered another one-liner!\r\n```suggestion\r\nLemma all_mask a m s : all a s -> all a (mask m s).\r\nProof. by apply/contraTT; rewrite -!has_predC; apply: has_mask. Qed.\r\n```"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-10T13:36:56Z",
        "comment": "I decided to put `all_mask` before `has_mask` and shorten `has_mask` similarly so that we can save one more line."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-10T15:28:37Z",
        "comment": "```suggestion\r\nProof. by elim: s m => [|x s IHs] [|[] m]//= /andP[ax /IHs->]; rewrite ?ax. Qed.\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-10T15:29:23Z",
        "comment": "(the induction on `s` changes nothing but I have my own tastes :wink:)"
      }
    ],
    "tags": [
      {
        "tag": "kind: enhancement",
        "description": "Issue or PR about addition of features."
      }
    ],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "126a1b7be3ab3ef3cb16887bc31d0011fb4b88d4",
        "message": "Reorganize, generalize, and add lemmas about `path`, `cycle`, and `sorted`\n\n- Add `allss` and `all_mask` lemmas.\n- Since `path`, `cycle`, and `sorted` share similar properties, these lemmas\n  have been relocated in the same place to improve the visibility. Some missing\n  lemmas have also been discovered and added.\n- Generalize `sub_path_in`, `sub_sorted_in`, and `eq_path_in` for non-`eqType` T\n  by introducing a predicate `P : {pred T}`.",
        "date": "2020-11-10T13:31:51Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "c312c678ac8af99d5c632285cbff5e1b55325478",
        "message": "Apply suggestions from code review\n\nCo-authored-by: Cyril Cohen <CohenCyril@users.noreply.github.com>",
        "date": "2020-11-10T15:46:15Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "88861b5dbd2803118222fe3a020317608c4c8500",
        "message": "Remove `cycle_(mask|filter)` lemmas",
        "date": "2020-11-10T15:46:20Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 630,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 89,
        "deletions": 14
      },
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 89,
        "deletions": 14
      }
    ],
    "state": "merged",
    "open_date": "2020-11-04T13:35:23Z",
    "update_date": "2020-11-11T12:54:13Z",
    "discussion": [
      {
        "author": "ybertot",
        "date": "2020-11-11T11:06:55Z",
        "comment": "I will merge this PR once it is squashed and rebased, if need be."
      },
      {
        "author": "CohenCyril",
        "date": "2020-11-11T11:49:23Z",
        "comment": "> I will merge this PR once it is squashed and rebased, if need be.\r\n\r\ndone."
      },
      {
        "author": "ybertot",
        "date": "2020-11-11T12:54:35Z",
        "comment": "Thanks"
      }
    ],
    "review_discussion": [
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-08T21:53:33Z",
        "comment": "```suggestion\r\nProof. exact: cats0. Qed.\r\n```"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-08T21:55:30Z",
        "comment": "I think this should be `eq_allpairsr`."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-08T21:58:33Z",
        "comment": "There is a one-liner without the use of `under`:\r\n```suggestion\r\nProof. by move=> eq_t; congr flatten; apply: eq_map => x; rewrite eq_t. Qed.\r\n```"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-08T21:59:33Z",
        "comment": "```suggestion\r\n  [seq f x y | x <- s, y <- y0 x :: t x] =i\r\n```"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-08T22:02:27Z",
        "comment": "```suggestion\r\nLemma perm_allpairs_rconsr f s y0 t :\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-08T23:36:28Z",
        "comment": "I'm anticipating on the next renaming, I wanted `perm_allpairs_rconsr` to be a temporary alias for `allpairs_rconsr`, I may have forgotten the alias though :laughing: "
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-09T00:08:10Z",
        "comment": "Ah, I see! I didn't read CHANGELOG entries. So please add the alias instead."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-09T00:46:09Z",
        "comment": "```suggestion\r\nLemma eq_allpairsr (f : forall x, T x -> R) s t1 t2 : (forall x, t1 x = t2 x) ->\r\n  [seq f x y | x <- s, y <- t1 x] = [seq f x y | x <- s, y <- t2 x].\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2020-11-09T01:01:20Z",
        "comment": "```suggestion\r\n  `allpairs1l`, `allpairs1r`, `allpairs_cons`, `eq_allpairsr`,\r\n```"
      },
      {
        "author": "ybertot",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2020-11-10T19:34:59Z",
        "comment": "should be `allpairs_rconsr` here."
      },
      {
        "author": "CohenCyril",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2020-11-11T00:21:36Z",
        "comment": "```suggestion\r\n  already deprecated in favor of `allpairs_rconsr`, cf renamed\r\n```"
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "7690d18f2534e2a264f744ef4c1211dbc590277b",
        "message": "New lemmas about allpairs\n\nCo-authored-by: Kazuhiko Sakaguchi <pi8027@gmail.com>",
        "date": "2020-11-11T11:27:18Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 629,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 2,
        "deletions": 14
      },
      {
        "file": "mathcomp/ssreflect/ssrnat.v",
        "status": "M",
        "additions": 2,
        "deletions": 14
      }
    ],
    "state": "merged",
    "open_date": "2020-11-04T10:37:55Z",
    "update_date": "2020-11-04T14:14:15Z",
    "discussion": [
      {
        "author": "pi8027",
        "date": "2020-11-04T10:38:15Z",
        "comment": "Do we need a CHANGELOG entry for this?"
      },
      {
        "author": "affeldt-aist",
        "date": "2020-11-04T10:41:35Z",
        "comment": "> Do we need a CHANGELOG entry for this?\r\n\r\nIt won't hurt so I would say \"yes\"."
      },
      {
        "author": "pi8027",
        "date": "2020-11-04T10:43:29Z",
        "comment": "OK."
      }
    ],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: clean-up",
        "description": "This issure/PR is about cleaning up obsolete code, removing hacks, etc"
      }
    ],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "8ba40dc7b53e9be38b553e8b13210054c6d2d7b4",
        "message": "Remove the `mc_1_9` compat module",
        "date": "2020-11-04T10:44:56Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 627,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 14,
        "deletions": 19
      },
      {
        "file": "mathcomp/algebra/ssrint.v",
        "status": "M",
        "additions": 14,
        "deletions": 19
      }
    ],
    "state": "merged",
    "open_date": "2020-10-30T20:20:53Z",
    "update_date": "2020-10-30T22:33:53Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "610eea02513b07386f28d89175382b0f088b6833",
        "message": "Generalize mulpz for any ringType",
        "date": "2020-10-30T20:18:36Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 626,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 6,
        "deletions": 1
      },
      {
        "file": "mathcomp/ssreflect/fintype.v",
        "status": "M",
        "additions": 6,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2020-10-30T18:48:51Z",
    "update_date": "2020-11-06T15:51:35Z",
    "discussion": [
      {
        "author": "chdoc",
        "date": "2020-11-04T14:19:22Z",
        "comment": "I'm a bit surprised that this change does not cause any breakage whatsoever. One reason might be that the lemma, regardless of the premise, is too weak to be of much use. I only found one use for this lemma so far, and that was to prove the following strengthening. (I'm including the comment I added when proving this 18 months ago :smile:)\r\n```coq\r\n(** TOTHINK: [#|P| <= #|aT|] would suffice, the other direction is\r\nimplied. But the same is true for [inj_card_onto]. *)\r\nLemma inj_card_onto_pred (aT rT : finType) (f : aT -> rT) (P : pred rT) : \r\n  injective f -> (forall x, f x \\in P) -> #|aT| = #|P| -> {in P, forall y, y \\in codom f}.\r\nProof.\r\nmove=> f_inj fP E y yP.\r\npose rT' := { y : rT | P y}; pose f' (x:aT) : rT' := Sub (f x) (fP x).\r\nhave/inj_card_onto f'_inj : injective f' by  move => x1 x2 []; apply: f_inj.\r\nrewrite -[#|P|]card_sig in E; have/mapP[x _ [] ->] := f'_inj E (Sub y yP). \r\nexact: codom_f. \r\nQed.\r\n```\r\nThis one I use a handful of times. I guess one could also have a predicate `A` on the argument type and weaken this to {in A&, injective f} and f a homomorphism from A to P. "
      },
      {
        "author": "CohenCyril",
        "date": "2020-11-04T15:17:15Z",
        "comment": "@chdoc note that two lemmas were generalized, and the second one `inj_card_bij`, is used slightly more often. I guess one reason no breakage occurs is that every proof solving `#|T| = #|T'|` can solve `#|T| >= #|T'|` just as easily.\r\nAs for your variation on `inj_card_onto`, I'd say it would be a nice addition indeed, in a subsequent PR.\r\nI suggest the following statements + proofs (rather than going all the way through `inj_card_onto`):\r\n```coq\r\nLemma inj_image_eq (aT rT : finType) (f : aT -> rT) \r\n    (D : {pred aT}) (P : {pred rT}) : \r\n    {in D &, injective f} -> image f D \\subset P -> #|P| <= #|D| ->\r\n  image f D =i P.\r\nProof.\r\nmove=> f_inj fP leP; apply/subset_cardP => //; apply/eqP.\r\nby rewrite eqn_leq subset_leq_card//= (leq_trans leP)// card_in_image.\r\nQed.\r\n\r\nLemma inj_codom_eq (aT rT : finType) (f : aT -> rT) (P : {pred rT}) : \r\n  injective f -> codom f \\subset P -> #|P| <= #|aT| -> codom f =i P.\r\nProof. by move=> f_inj; apply/inj_image_eq; apply: in2W. Qed.\r\n```"
      },
      {
        "author": "chdoc",
        "date": "2020-11-04T20:17:48Z",
        "comment": "> I guess one reason no breakage occurs is that every proof solving `#|T| = #|T'|` can solve `#|T| >= #|T'|` just as easily.\r\n\r\nI was a bit worried that there could be places where the the equality is shown by showing `#|T| >= #|T'|` and `#|T| <= #|T'|` separately, possibly duplicating your argument. But neither lemma is used withing mathcomp (outside of fintype), so even if this is the case, it would be of no concern to this PR. "
      },
      {
        "author": "chdoc",
        "date": "2020-11-06T15:39:22Z",
        "comment": "@pi8027 then please merge, because I cannot :smirk: "
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "aad2327376b2f76950be51a6bf22b32b0a01b2eb",
        "message": "Generalizing inj_card_onto and inj_card_bij.",
        "date": "2020-11-03T14:14:29Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 625,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/ssrnat.v",
        "status": "M",
        "additions": 1,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2020-10-30T18:10:55Z",
    "update_date": "2020-10-30T19:29:49Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: fix",
        "description": "PR that fixes a bug. Please refer to the appropriate issue(s) if relevant."
      }
    ],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "21c5e7090cd305bfdc54c9741a89bbf5cb4fd9fa",
        "message": "fix ssrnat",
        "date": "2020-10-30T18:09:28Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 624,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 85,
        "deletions": 20
      },
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 85,
        "deletions": 20
      }
    ],
    "state": "merged",
    "open_date": "2020-10-30T17:34:17Z",
    "update_date": "2020-11-12T16:46:00Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2020-11-08T00:39:22Z",
        "comment": "@affeldt-aist @pi8027 comments taken into account, you may merge if you like."
      },
      {
        "author": "pi8027",
        "date": "2020-11-08T12:36:53Z",
        "comment": "Remark: `forall x, count_mem x s1 <= count_mem x s2` can be seen as a non-symmetric version of `perm_eq` (conversely, `perm_eq` is the symmetric closure of it). Defining a boolean relation for this and refactoring the `perm_eq` theory using it can probably be useful, but depending on its applications."
      },
      {
        "author": "CohenCyril",
        "date": "2020-11-08T13:13:00Z",
        "comment": "> Remark: `forall x, count_mem x s1 <= count_mem x s2` can be seen as a non-symmetric version of `perm_eq` (conversely, `perm_eq` is the symmetric closure of it). Defining a boolean relation for this and refactoring the `perm_eq` theory using it can probably be useful, but depending on its applications.\r\n\r\nGood remark, I think it's beyond the scope of this PR. Maybe you can open an issue to suggest this refactoring, but I'm not sure it's useful to anyone as of today: if it's not free and if there is no application yet, we can postpone it."
      },
      {
        "author": "CohenCyril",
        "date": "2020-11-08T23:38:57Z",
        "comment": "I think I'd also turn `count_maskP` and `count_subsetP` into equivalences."
      },
      {
        "author": "CohenCyril",
        "date": "2020-11-09T00:37:36Z",
        "comment": "> I think I'd also turn `count_maskP` and `count_subsetP` into equivalences.\r\n\r\n@pi8027 which I did, you may rereview."
      },
      {
        "author": "CohenCyril",
        "date": "2020-11-11T22:19:42Z",
        "comment": "Every remark has been attended!"
      }
    ],
    "review_discussion": [
      {
        "author": "affeldt-aist",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-06T04:12:55Z",
        "comment": "`drop_index` does not appear in the changelog"
      },
      {
        "author": "affeldt-aist",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-06T04:22:59Z",
        "comment": "that might fit in one line by using `take_size` instead of `take_oversize`\r\n```\r\nProof. by move=>?; rewrite remE memNindex ?take_size ?drop_oversize ?cats0. Qed.\r\n```"
      },
      {
        "author": "affeldt-aist",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-06T05:05:18Z",
        "comment": "superfluous `//` after `rem_id`"
      },
      {
        "author": "affeldt-aist",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-06T05:09:09Z",
        "comment": "I would put `by move=> _; elim: s` with the first line using a `; last first ...` but this is maybe against the rules."
      },
      {
        "author": "affeldt-aist",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-06T05:17:08Z",
        "comment": "This can be restated as\r\n```\r\nLemma subset_subseqP s t : (forall x, count_mem x s <= count_mem x t) ->\r\n  exists2 u, subseq u t & perm_eq s u.\r\n```\r\nso that the proof becomes a one liner"
      },
      {
        "author": "affeldt-aist",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-06T07:32:35Z",
        "comment": "Shouldn't the name rather be `count_subseqP`?"
      },
      {
        "author": "affeldt-aist",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-06T07:33:51Z",
        "comment": "Shouldn't the name be `count_maskP`?  Because the hypothesis is not equivalent to `{subset s1 <= s2}`."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-06T09:43:53Z",
        "comment": "I did not touch the proof, but I can"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-06T09:44:06Z",
        "comment": "```suggestion\r\nhave [xs|xNs]/= := boolP (x \\in s); last by rewrite subn0 rem_id.\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-06T09:51:02Z",
        "comment": "Looks like a better name indeed."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-06T18:58:59Z",
        "comment": "```suggestion\r\nLemma subseq_rem x : {homo rem x : s1 s2 / @subseq T s1 s2}.\r\n```"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-06T18:59:04Z",
        "comment": "```suggestion\r\nmove=> s1 s2; elim: s2 s1 => [|x2 s2 IHs2] [|x1 s1]; rewrite ?sub0seq //=.\r\nhave [->|_] := eqVneq x1 x2; first by case: eqP => //= _ /IHs2; rewrite eqxx.\r\nmove/IHs2/subseq_trans=> -> //.\r\nhave [->|_] := eqVneq x x2; [apply: rem_subseq|apply: subseq_cons].\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-07T23:26:40Z",
        "comment": "```suggestion\r\nLemma count_subseqP s1 s2 : (forall x, count_mem x s1 <= count_mem x s2) ->\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-07T23:27:06Z",
        "comment": "```suggestion\r\nLemma count_maskP s1 s2 : (forall x, count_mem x s1 <= count_mem x s2) ->\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-07T23:28:43Z",
        "comment": "I'd rather have a 3 line proof than breaking the conventions of the file (no list is named `u`)"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-07T23:29:00Z",
        "comment": "Or maybe you can, in a separate PR :+1: "
      },
      {
        "author": "CohenCyril",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2020-11-07T23:29:49Z",
        "comment": "```suggestion\r\n  - in `seq.v`, added `drop_index`, `in_mask`, `cons_subseq`, `undup_subseq`,\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-07T23:30:40Z",
        "comment": "```suggestion\r\nby move=> xNs; rewrite remE memNindex ?take_size ?drop_oversize ?cats0.\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-07T23:31:30Z",
        "comment": "```suggestion\r\nby move=> /count_maskP[m]; exists (mask m s2); rewrite ?mask_subseq.\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2020-11-07T23:34:59Z",
        "comment": "```suggestion\r\n    `count_maskP`, `count_subseqP`, `count_rem`, `count_mem_rem`,\r\n    `rem_cons`, `remE`,  `subseq_rem` and `leq_count_uniq`.\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-08T00:36:12Z",
        "comment": "I'm not fond of gluing `=>` with `?`,  so I took your proof, but kept the name of the introduced variable and on 3 lines."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-08T14:35:06Z",
        "comment": "```suggestion\r\nhave [y|m s1s2] := IHs (rem x s1); first by rewrite count_mem_rem leq_subLR.\r\nexists ((x \\in s1) :: m); case: (boolP (x \\in s1)).\r\n  by move/perm_to_rem/permPl->; rewrite perm_cons.\r\nby rewrite -(permPr s1s2); move/rem_id->.\r\n```"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-09T18:08:00Z",
        "comment": "```suggestion\r\nProof. by move=> x_s; rewrite /rot drop_index. Qed.\r\n```"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-09T18:24:35Z",
        "comment": "```suggestion\r\nhave [/perm_to_rem/permP->|xNs]/= := boolP (x \\in s); first by rewrite addKn.\r\nby rewrite subn0 rem_id.\r\n```"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-09T18:32:17Z",
        "comment": "```suggestion\r\nrewrite count_rem; have []//= := boolP (x \\in s).\r\nby case: eqP => // <- /count_memPn->.\r\n```"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-09T19:31:26Z",
        "comment": "`T` is not required to be an `eqType` here."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-09T19:39:06Z",
        "comment": "Here is another possible one-liner.\r\n```coq\r\nProof. by elim: s => //= y s IHs /norP[neq_yx /IHs->]; case: eqVneq neq_yx. Qed.\r\n```"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-09T19:39:49Z",
        "comment": "```suggestion\r\nsplit=> [s1_le|[m _ /permP s1ms2 x]]; last by rewrite s1ms2 leq_count_mask.\r\nsuff [m mP]: exists m, perm_eq s1 (mask m s2).\r\n  by have [m' sm' eqm] := resize_mask m s2; exists m'; rewrite -?eqm.\r\nelim: s2 => [|x s2 IHs]//= in s1 s1_le *.\r\n  by exists [::]; apply/allP => x _/=; rewrite eqn_leq s1_le.\r\nhave [y|m s1s2] := IHs (rem x s1); first by rewrite count_mem_rem leq_subLR.\r\nexists ((x \\in s1) :: m); have [|/rem_id<-//] := boolP (x \\in s1).\r\nby move/perm_to_rem/permPl->; rewrite perm_cons.\r\n```"
      },
      {
        "author": "pi8027",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2020-11-09T19:52:04Z",
        "comment": "```suggestion\r\n    `rem_cons`, `remE`, `subseq_rem`, and `leq_uniq_count`.\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-11T22:12:33Z",
        "comment": "Yes, it is, but not for `leq_count_mask` indeed!"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-11T23:51:02Z",
        "comment": "The converse of this lemma also holds, and both directions hold for each `x : T`. So it should probably be something like this:\r\n```coq\r\nLemma leq_uniq_countP x s1 s2 : uniq s1 ->\r\n  reflect (x \\in s1 -> x \\in s2) (count_mem x s1 <= count_mem x s2).\r\nProof.\r\nmove/count_uniq_mem->; case: (boolP (_ \\in _)) => //= _; last by constructor.\r\nby rewrite -has_pred1 has_count; apply: (iffP idP) => //; apply.\r\nQed.\r\n```\r\nSince it aims to bridge the gap between `count_maskP` and `subset_maskP`, it is also fine to replace the last implication with `<->`."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-12T05:50:17Z",
        "comment": "for composition to be possible we should have your lemma and mine, untouched.\r\n\r\nblindfix!\r\n\r\n```suggestion\r\nLemma leq_uniq_countP x s1 s2 : uniq s1 ->\r\n  reflect (x \\in s1 -> x \\in s2) (count_mem x s1 <= count_mem x s2).\r\nProof.\r\nmove/count_uniq_mem->; case: (boolP (_ \\in _)) => //= _; last by constructor.\r\nby rewrite -has_pred1 has_count; apply: (iffP idP) => //; apply.\r\nQed.\r\n\r\nLemma leq_uniq_count s1 s2 : uniq s1 -> {subset s1 <= s2} ->\r\n  (forall x, count_mem x s1 <= count_mem x s2).\r\nProof. by move=> s1_uniq s1_s2 x; apply/leq_uniq_countP/s1_s2. Qed.\r\n```"
      },
      {
        "author": "pi8027",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2020-11-12T07:31:52Z",
        "comment": "```suggestion\r\n    `rem_cons`, `remE`, `subseq_rem`, `leq_uniq_countP`, and\r\n    `leq_uniq_count`.\r\n```"
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "9bc96e0d82346cdd62e769332c2adfb3a12dc6b7",
        "message": "Adding some theory for `rem` and generalizing `subset_maskP`\n\n- Added helper lemmas about `rem`: `rem_cons` (to control unfolding),\n  `remE`, `count_rem`, `count_mem_rem`, and `subseq_mem`.\n  (New lemma `drop_index` briges the gap between `cat_take_drop` and `remE`).\n- `subset_maskP`, which was not released yet is generalized with\n  hypothesis `(forall x, count_mem x s1 <= count_mem x s2)`, instead of\n  `uniq s1` and `{subset s1 <= s2}`, the previous behaviour can be\n  restored with helper lemma `leq_uniq_count`\n- Its trivial consequence `subset_subseqP` has been added too.",
        "date": "2020-11-12T13:17:50Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "74eb80a663cb1e45147a67dfa8c190547ee850e2",
        "message": "Shorter proofs and suggestions by Kazuhiko\n\nCo-authored-by: Kazuhiko Sakaguchi <pi8027@gmail.com>",
        "date": "2020-11-12T13:17:50Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "94dd02febd112669b6a1543695df2eea5291dcde",
        "message": "Equivalences instead of implications for `count_maskP` and `count_subseqP`",
        "date": "2020-11-12T13:17:50Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "e0d5c492d95b6833879a920430833fdaa2d7b621",
        "message": "Apply suggestions from Kazuhiko\n\nCo-authored-by: Kazuhiko Sakaguchi <pi8027@gmail.com>",
        "date": "2020-11-12T13:17:50Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 618,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 67,
        "deletions": 24
      },
      {
        "file": "mathcomp/algebra/mxalgebra.v",
        "status": "M",
        "additions": 67,
        "deletions": 24
      },
      {
        "file": "mathcomp/algebra/mxpoly.v",
        "status": "M",
        "additions": 67,
        "deletions": 24
      }
    ],
    "state": "merged",
    "open_date": "2020-10-25T23:13:25Z",
    "update_date": "2020-10-27T09:16:17Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2020-10-26T16:21:39Z",
        "comment": "@gares @ybertot @thery can one of you assign themselves this one? It should be an easy one..."
      },
      {
        "author": "ybertot",
        "date": "2020-10-27T07:11:37Z",
        "comment": "I'd rather review it than assign myself."
      }
    ],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: enhancement",
        "description": "Issue or PR about addition of features."
      }
    ],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "50ae8e1141ee46aa24f6d4ed61def8d34b1ebcd6",
        "message": "stability by commutation",
        "date": "2020-10-26T16:19:25Z"
      }
    ]
  },
  {
    "author": "erikmd",
    "number": 614,
    "diff_summary": [
      {
        "file": ".gitlab-ci.yml",
        "status": "M",
        "additions": 49,
        "deletions": 38
      }
    ],
    "state": "merged",
    "open_date": "2020-10-12T11:50:04Z",
    "update_date": "2020-11-09T16:50:03Z",
    "discussion": [
      {
        "author": "chdoc",
        "date": "2020-11-04T14:28:48Z",
        "comment": "@erikmd @CohenCyril could one of you suggest an assignee? \r\n\r\n@erikmd I'm not sure I understand the (potential) impact of this change and how it is related to the \"overall aim\". Could you provide a bit more explanation/information for those on the mathcomp side who don't deal with Docker and CI pipelines all day long? (I assume I'm not speaking solely for myself here.) :man_shrugging: "
      },
      {
        "author": "erikmd",
        "date": "2020-11-05T00:07:46Z",
        "comment": "Hi @chdoc,\r\n> Could you provide a bit more explanation/information\r\n\r\nSure. Indeed the description was a bit terse… I'm going to elaborate on it soon (if it's still pending on Friday, feel free to ping me!)"
      },
      {
        "author": "chdoc",
        "date": "2020-11-06T19:57:43Z",
        "comment": "@erikmd PING! (Friday is nearing it's end)\r\n\r\n@CohenCyril @gares could one of you self-assign or suggest an assignee? This is the last PR milestoned for 1.12.0 that does not have an assignee. "
      },
      {
        "author": "erikmd",
        "date": "2020-11-07T02:44:07Z",
        "comment": "[sorry, I mis-clicked and sent my comment too early]"
      },
      {
        "author": "erikmd",
        "date": "2020-11-07T03:04:05Z",
        "comment": "Thanks @chdoc, so here is the wrap-up :)\r\n\r\n## The \"overall aim\" is two-fold:\r\n\r\n1. ensure that the mathcomp.dev image obtained by\r\n\r\n    ```\r\n    docker pull mathcomp/mathcomp-dev:coq-dev\r\n    ```\r\n    always brings **the latest coq master** (and not just the last nightly build).\r\n\r\n2. ensure that beyond this automatic deployment, math-comp's CI still runs the test-suite on coq-dev (to **detect regressions**).\r\n\r\nNote that point 2. is related to the recent CI enhancement done in @gares' PR https://github.com/math-comp/math-comp/pull/433\r\n\r\nPoint 1. is not directly performed by this PR #614, but this PR is a necessary ingredient for fully implementing the new architecture of the coq/docker-coq/docker-mathcomp CI/CD that we discussed recently with @Zimmi48, to get rid of the \"nightly-build limitation\" of docker images of coq & mathcomp.\r\n\r\n### To sum up, the old architecture was as follows:\r\n\r\n![2020-11_math-comp-before-pr614](https://user-images.githubusercontent.com/10367254/98430180-0ed16600-20ac-11eb-8977-e45c3bba8f49.png)\r\n\r\n### And the new architecture is as follows:\r\n\r\n![2020-11_math-comp-using-pr614](https://user-images.githubusercontent.com/10367254/98430202-45a77c00-20ac-11eb-91d5-080da46bd32b.png)\r\n\r\n## Regarding the positioning of this PR #614:\r\n\r\nAs shown above in the figures, a key change is that the automatically triggered pipeline in math-comp CI from coq-community CI **cannot be a scheduled pipeline**. Hence the use of a special environment variable `CRON_MODE`.\r\n\r\nThis is the core change of this PR.\r\n\r\nIt also does one refactoring and a small fix :\r\n\r\n1. Use only:refs, except:refs (no change intended, but replace old GitLab syntax with GitLab 10.0+ syntax)\r\n\r\n2. Fix (to have better clarity in the GitLab CI deployment browser) the environment deployment names related to the `deploy` stage jobs for the `master` protected branch (see the commit message for more details if need be).\r\n\r\n## Additional details\r\n\r\nFYI I've just tested the behavior of this PR on a temporary separate repo: https://gitlab.com/erikmd/math-comp-ci-preflight\r\n\r\nThe main thing that had to be checked was *whether the created stages and jobs were OK* in the following three configurations:\r\n\r\n* pr-0 (non-protected branch) → **full** build+test [(url)](https://gitlab.com/erikmd/math-comp-ci-preflight/-/pipelines/213003576)\r\n* master (protected branch), regular pipeline → **full** build+deploy+test [(url)](https://gitlab.com/erikmd/math-comp-ci-preflight/-/pipelines/213003062)\r\n* master (protected branch), regular pipeline triggered with CRON_MODE → **coq-dev** build+deploy+test [(url)](https://gitlab.com/erikmd/math-comp-ci-preflight/-/pipelines/213003632)"
      },
      {
        "author": "erikmd",
        "date": "2020-11-07T23:36:41Z",
        "comment": "@CohenCyril I've just proposed you'd be the assignee of this PR\r\n(but I was unsure if that triggered a notification, hence this comment :)"
      },
      {
        "author": "CohenCyril",
        "date": "2020-11-08T00:21:31Z",
        "comment": "Thanks @erikmd!! I'll merge on monday, in the morning, so that if a failure occur we can fix it within the day."
      },
      {
        "author": "erikmd",
        "date": "2020-11-09T16:42:50Z",
        "comment": "Hi @CohenCyril, do you believe you could merge #614 today? otherwise no worries! tomorrow morning would be very fine."
      },
      {
        "author": "CohenCyril",
        "date": "2020-11-09T16:50:01Z",
        "comment": "> Hi @CohenCyril, do you believe you could merge #614 today? otherwise no worries! tomorrow morning would be very fine.\r\n\r\nI will now!"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "erikmd",
        "committer": "erikmd",
        "hash": "8338973e2741baf7f9bbfd3bbcf5982c3963830c",
        "message": "feat: Update only/except rules\n\n* Use only:refs, except:refs (available since GitLab 10.0)\n\n* Add except:variables/($CRON_MODE == \"nightly\")\n  so coqbot can trigger the jobs currently chosen for scheduled pipelines,\n  with a regular pipeline on master with variable CRON_MODE := nightly\n\n* Overall aim: rebuild coqorg/coq:dev & mathcomp/mathcomp-dev:coq-dev\n  on GitLab CI after each successful update of coq.dev, using coqbot.",
        "date": "2020-10-12T11:48:55Z"
      },
      {
        "author": "erikmd",
        "committer": "erikmd",
        "hash": "8da589737cbb81889c26037eeed856f8a00ff667",
        "message": "fix: Deploy each image w.r.t. a separate GitLab CI environment name\n\nto fully benefit from the \"forward_deployment_failure\" feature\ncf. https://docs.gitlab.com/ee/ci/environments/deployment_safety.html#skip-outdated-deployment-jobs\n\nRemark on environment names:\n> Caution: Some characters are not allowed in environment names. Use\n> only letters, numbers, spaces, and '-', '_', '/', '{', '}', or '.'.\n> Also, it must not start nor end with '/'.\ncf. https://docs.gitlab.com/ee/ci/environments/index.html",
        "date": "2020-11-07T01:44:21Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 612,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 24,
        "deletions": 7
      },
      {
        "file": "mathcomp/algebra/ssralg.v",
        "status": "M",
        "additions": 24,
        "deletions": 7
      }
    ],
    "state": "merged",
    "open_date": "2020-10-10T09:51:19Z",
    "update_date": "2020-10-25T12:20:25Z",
    "discussion": [
      {
        "author": "pi8027",
        "date": "2020-10-10T09:55:52Z",
        "comment": "BTW, as an alternative to `iter_addr_0`, the following lemma is slightly general and seems to be useful.\r\n```coq\r\nLemma iter_addr n (m : V) p : iter n (+%R m) p = m *+ n + p.\r\nProof. by elim: n => [|n ih]; rewrite ?add0r //= ih mulrS addrA. Qed.\r\n```"
      },
      {
        "author": "CohenCyril",
        "date": "2020-10-22T10:04:49Z",
        "comment": "> BTW, as an alternative to `iter_addr_0`, the following lemma is slightly general and seems to be useful.\r\n> \r\n> ```coq\r\n> Lemma iter_addr n (m : V) p : iter n (+%R m) p = m *+ n + p.\r\n> Proof. by elim: n => [|n ih]; rewrite ?add0r //= ih mulrS addrA. Qed.\r\n> ```\r\n\r\nSure, we should have both as for `iter_addn`. BTW, while you're at it, would you mind adding the same for `mul` both in `ssrnat.v` and `ssralg.v`?"
      },
      {
        "author": "pi8027",
        "date": "2020-10-23T05:17:33Z",
        "comment": "> BTW, while you're at it, would you mind adding the same for `mul` both in `ssrnat.v` and `ssralg.v`?\r\n\r\nWill do, but we already have ones for `muln`. https://github.com/math-comp/math-comp/blob/2b97a257956d307e7cb9ad7d4920fb5db969b69b/mathcomp/ssreflect/ssrnat.v#L1143-L1147\r\n"
      },
      {
        "author": "pi8027",
        "date": "2020-10-23T08:35:25Z",
        "comment": "Done."
      }
    ],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: enhancement",
        "description": "Issue or PR about addition of features."
      },
      {
        "tag": "kind: fix",
        "description": "PR that fixes a bug. Please refer to the appropriate issue(s) if relevant."
      }
    ],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "06b3e9011984666dde6a74b7b7a08b470763bd67",
        "message": "New iteration/bigop lemmas in ssralg\n\n- Add `iter_addr`, `iter_mulr(_1)`, and `prodr_const_nat`.\n- Export `iter_addr_0`, `sumr_const_nat`, and the above lemmas from\n  `GRing.Theory`.",
        "date": "2020-10-23T08:48:47Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 611,
    "diff_summary": [],
    "state": "closed",
    "open_date": "2020-10-09T17:38:12Z",
    "update_date": "2020-10-10T15:06:14Z",
    "discussion": [
      {
        "author": "pi8027",
        "date": "2020-10-10T13:30:08Z",
        "comment": "I will squash my suggestions and merge when CI passes."
      },
      {
        "author": "pi8027",
        "date": "2020-10-10T15:41:54Z",
        "comment": "Sorry I made a mistake on the merging process but this has been merged (not closed) actually.😔"
      }
    ],
    "review_discussion": [
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-10-10T10:25:50Z",
        "comment": "The following alternative seems to be slightly general:\r\n```suggestion\r\nLemma in_mask x m s :\r\n  uniq s -> x \\in mask m s = (x \\in s) && nth false m (index x s).\r\nProof.\r\nelim: s m => [|y s IHs] [|[] m]//= /andP[yNs ?]; rewrite ?in_cons ?IHs //=;\r\nby have [->|neq_xy] //= := eqVneq; rewrite ?andbF // (negPf yNs).\r\nQed.\r\n```"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-10-10T10:27:02Z",
        "comment": "```suggestion\r\nLemma cons_subseq s1 s2 x : subseq (x :: s1) s2 -> subseq s1 s2.\r\nProof. exact/subseq_trans/subseq_cons. Qed.\r\n```"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-10-10T10:31:30Z",
        "comment": "```suggestion\r\nLemma undup_subseq s : subseq (undup s) s.\r\nProof.\r\nelim: s => //= x s; case: (_ \\in _); last by rewrite eqxx.\r\nby case: (undup s) => //= y u; case: (_ == _) => //=; apply: cons_subseq.\r\nQed.\r\n```"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-10-10T10:44:09Z",
        "comment": "This lemma can also be a corollary of `mask_subseq` and the following `undup_mask`.\r\n```coq\r\nLemma undup_mask (T : eqType) (s : seq T) : {m | undup s = mask m s}.\r\n```"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-10-10T11:47:03Z",
        "comment": "```suggestion\r\nexists m; rewrite // -s1'_eq; apply: uniq_perm => // [|x].\r\n  by rewrite filter_uniq ?undup_uniq.\r\nby rewrite mem_filter mem_undup; have [/sub_s1_s2|] := boolP (x \\in s1).\r\n```"
      }
    ],
    "tags": [],
    "commits": []
  },
  {
    "author": "pi8027",
    "number": 610,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 9,
        "deletions": 0
      },
      {
        "file": "mathcomp/ssreflect/ssrnat.v",
        "status": "M",
        "additions": 9,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2020-10-09T17:13:08Z",
    "update_date": "2020-10-30T17:51:49Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "5f430f0d093c8b16a172ef686aa9d194e69f412c",
        "message": "Add new lemmas iterM and iterX in ssrnat",
        "date": "2020-10-29T02:50:13Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 607,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 534,
        "deletions": 320
      },
      {
        "file": "mathcomp/algebra/intdiv.v",
        "status": "M",
        "additions": 534,
        "deletions": 320
      },
      {
        "file": "mathcomp/algebra/matrix.v",
        "status": "M",
        "additions": 534,
        "deletions": 320
      },
      {
        "file": "mathcomp/algebra/mxalgebra.v",
        "status": "M",
        "additions": 534,
        "deletions": 320
      },
      {
        "file": "mathcomp/algebra/mxpoly.v",
        "status": "M",
        "additions": 534,
        "deletions": 320
      },
      {
        "file": "mathcomp/algebra/poly.v",
        "status": "M",
        "additions": 534,
        "deletions": 320
      },
      {
        "file": "mathcomp/algebra/polyXY.v",
        "status": "M",
        "additions": 534,
        "deletions": 320
      },
      {
        "file": "mathcomp/algebra/polydiv.v",
        "status": "M",
        "additions": 534,
        "deletions": 320
      },
      {
        "file": "mathcomp/algebra/ssralg.v",
        "status": "M",
        "additions": 534,
        "deletions": 320
      },
      {
        "file": "mathcomp/algebra/ssrint.v",
        "status": "M",
        "additions": 534,
        "deletions": 320
      },
      {
        "file": "mathcomp/algebra/vector.v",
        "status": "M",
        "additions": 534,
        "deletions": 320
      },
      {
        "file": "mathcomp/algebra/zmodp.v",
        "status": "M",
        "additions": 534,
        "deletions": 320
      },
      {
        "file": "mathcomp/character/inertia.v",
        "status": "M",
        "additions": 534,
        "deletions": 320
      },
      {
        "file": "mathcomp/character/integral_char.v",
        "status": "M",
        "additions": 534,
        "deletions": 320
      },
      {
        "file": "mathcomp/character/mxabelem.v",
        "status": "M",
        "additions": 534,
        "deletions": 320
      },
      {
        "file": "mathcomp/character/mxrepresentation.v",
        "status": "M",
        "additions": 534,
        "deletions": 320
      },
      {
        "file": "mathcomp/field/algebraics_fundamentals.v",
        "status": "M",
        "additions": 534,
        "deletions": 320
      },
      {
        "file": "mathcomp/field/closed_field.v",
        "status": "M",
        "additions": 534,
        "deletions": 320
      },
      {
        "file": "mathcomp/field/cyclotomic.v",
        "status": "M",
        "additions": 534,
        "deletions": 320
      },
      {
        "file": "mathcomp/field/falgebra.v",
        "status": "M",
        "additions": 534,
        "deletions": 320
      },
      {
        "file": "mathcomp/field/fieldext.v",
        "status": "M",
        "additions": 534,
        "deletions": 320
      },
      {
        "file": "mathcomp/field/separable.v",
        "status": "M",
        "additions": 534,
        "deletions": 320
      },
      {
        "file": "mathcomp/fingroup/gproduct.v",
        "status": "M",
        "additions": 534,
        "deletions": 320
      },
      {
        "file": "mathcomp/solvable/abelian.v",
        "status": "M",
        "additions": 534,
        "deletions": 320
      },
      {
        "file": "mathcomp/solvable/extraspecial.v",
        "status": "M",
        "additions": 534,
        "deletions": 320
      },
      {
        "file": "mathcomp/solvable/extremal.v",
        "status": "M",
        "additions": 534,
        "deletions": 320
      },
      {
        "file": "mathcomp/solvable/gseries.v",
        "status": "M",
        "additions": 534,
        "deletions": 320
      },
      {
        "file": "mathcomp/solvable/hall.v",
        "status": "M",
        "additions": 534,
        "deletions": 320
      },
      {
        "file": "mathcomp/solvable/maximal.v",
        "status": "M",
        "additions": 534,
        "deletions": 320
      },
      {
        "file": "mathcomp/solvable/pgroup.v",
        "status": "M",
        "additions": 534,
        "deletions": 320
      },
      {
        "file": "mathcomp/solvable/sylow.v",
        "status": "M",
        "additions": 534,
        "deletions": 320
      },
      {
        "file": "mathcomp/ssreflect/bigop.v",
        "status": "M",
        "additions": 534,
        "deletions": 320
      },
      {
        "file": "mathcomp/ssreflect/div.v",
        "status": "M",
        "additions": 534,
        "deletions": 320
      },
      {
        "file": "mathcomp/ssreflect/fingraph.v",
        "status": "M",
        "additions": 534,
        "deletions": 320
      },
      {
        "file": "mathcomp/ssreflect/finset.v",
        "status": "M",
        "additions": 534,
        "deletions": 320
      },
      {
        "file": "mathcomp/ssreflect/fintype.v",
        "status": "M",
        "additions": 534,
        "deletions": 320
      },
      {
        "file": "mathcomp/ssreflect/path.v",
        "status": "M",
        "additions": 534,
        "deletions": 320
      },
      {
        "file": "mathcomp/ssreflect/prime.v",
        "status": "M",
        "additions": 534,
        "deletions": 320
      },
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 534,
        "deletions": 320
      },
      {
        "file": "mathcomp/ssreflect/ssrnat.v",
        "status": "M",
        "additions": 534,
        "deletions": 320
      }
    ],
    "state": "merged",
    "open_date": "2020-10-08T15:29:11Z",
    "update_date": "2020-10-30T17:50:56Z",
    "discussion": [
      {
        "author": "pi8027",
        "date": "2020-10-09T08:41:39Z",
        "comment": "https://github.com/math-comp/math-comp/blob/9bfc9834b46c1e492aaaf257cfa811d1e5e39065/mathcomp/ssreflect/div.v#L950-L963\r\nThe latter two should probably be `coprimeX(l|r)` but I'm not sure about the former two. Should they be `coprime_pX(l|r)` or is it too much to do?"
      },
      {
        "author": "pi8027",
        "date": "2020-10-12T11:10:39Z",
        "comment": "Done. Ready for review except CHANGELOG."
      },
      {
        "author": "CohenCyril",
        "date": "2020-10-25T12:32:46Z",
        "comment": "~~I'm wondering whether lemmas such as `mulnDl`, `mulnDr` and the like should be renamed using \"positional suffixes\" (e.g. `mulDn` for left and `mulnD` for right) instead of `l` and `r`... Or would it be too much of a change...~~\r\nThis is actually a distinct issue that I posted independently in #617."
      },
      {
        "author": "pi8027",
        "date": "2020-10-29T06:54:49Z",
        "comment": "Done."
      },
      {
        "author": "CohenCyril",
        "date": "2020-10-29T11:30:47Z",
        "comment": "> The latter two should probably be `coprimeX(l|r)` but I'm not sure about the former two. Should they be `coprime_pX(l|r)` or is it too much to do?\r\n\r\nI think it is too much indeed, let's keep it (as you did)."
      },
      {
        "author": "herbelin",
        "date": "2020-11-01T09:19:58Z",
        "comment": "For the record, it seems that the change around `iota_add` -> `iotaD` breaks the compilation of Coquelicot on Coq CI (e.g. [here](https://gitlab.com/coq/coq/-/jobs/822996322)). Something related to `hide` not propagating the scopes of `iota_add`. In particular, `(ssreflect.Deprecation.hide (fun iota_add iotaD => _) iotaD (m - n) n)` interprets `m - n` in the ambiant stack of scopes (thus in `R_scope` in the case of Coquelicot) while it is expected to be interpreted in `nat_scope`."
      },
      {
        "author": "CohenCyril",
        "date": "2020-11-01T13:01:01Z",
        "comment": "Thanks @herbelin !"
      }
    ],
    "review_discussion": [
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/poly.v",
        "date": "2020-10-09T17:58:02Z",
        "comment": "Since `X` stands for a variable `polyX` in the polynomial theory, using it in `poly.v` for exponentiation may not be a good idea."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/poly.v",
        "date": "2020-10-25T12:24:17Z",
        "comment": "Yes indeed there is a tough call to make here... I'd say when there is no ambiguity (like here) we could keep `X`. @thery, @amahboubi  do you have an opinion on this?"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/polydiv.v",
        "date": "2020-10-25T12:36:33Z",
        "comment": "To be consistent:\r\n```suggestion\r\nLemma dvdpNr d p : d %| (- p) = (d %| p).\r\n```\r\nand also add missing `dvdpNl`?"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/poly.v",
        "date": "2020-10-29T11:30:11Z",
        "comment": "I think, at least for now, we should keep `exp` for polynomials."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/poly.v",
        "date": "2020-10-30T03:14:14Z",
        "comment": "Done. I have also reverted `coprimepX(l|r)` to `coprimep_exp(l|r)`."
      }
    ],
    "tags": [
      {
        "tag": "kind: refactoring",
        "description": "Issue or PR about a refactoring. (reorganizing the code, reusing theorems, simplifications...)"
      }
    ],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "c6e0d703165b0c60c270672eb542aa8934929bfe",
        "message": "Switch from long suffixes to short suffixes",
        "date": "2020-10-29T03:31:31Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "8be036afb4445cdc009bfb244fbf593dacbe95b7",
        "message": "Add `dvdpNl` and rename `dvdpN` to `dvdpNr`\n\nCo-authored-by: Cyril Cohen <CohenCyril@users.noreply.github.com>",
        "date": "2020-10-29T03:31:31Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "a9767fcd4713fc37e57fc9cc2a7864879effbf73",
        "message": "Add CHANGELOG entries",
        "date": "2020-10-29T06:54:20Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "bd02346e4038871f4d4021dd84df384fc8cf9aa4",
        "message": "Use `exp` rather than `X` for exponents of polynomials",
        "date": "2020-10-30T03:12:26Z"
      }
    ]
  },
  {
    "author": "thery",
    "number": 605,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 31,
        "deletions": 8
      },
      {
        "file": "mathcomp/algebra/ssralg.v",
        "status": "M",
        "additions": 31,
        "deletions": 8
      },
      {
        "file": "mathcomp/algebra/ssrnum.v",
        "status": "M",
        "additions": 31,
        "deletions": 8
      }
    ],
    "state": "merged",
    "open_date": "2020-10-04T12:48:16Z",
    "update_date": "2020-10-29T02:59:59Z",
    "discussion": [
      {
        "author": "pi8027",
        "date": "2020-10-30T00:57:08Z",
        "comment": "Please open an issue to address the remaining TODO."
      }
    ],
    "review_discussion": [
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2020-10-04T12:52:42Z",
        "comment": "`exact:`?"
      },
      {
        "author": "thery",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2020-10-04T13:05:34Z",
        "comment": "done"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2020-10-04T16:44:42Z",
        "comment": "I meant that you may replace `by apply:` with `exact:` since `exact:` is a terminator."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2020-10-05T12:08:16Z",
        "comment": "I'm not fond of the `2` in the name here, it is more reminicent of `x *+ 2` than the current one.\r\nIdeally I'd prefer `prodrMn` for this one, and `prodrMn_const` for the other one.\r\nAn alternative would be to use the name `prodr_natmul` "
      },
      {
        "author": "thery",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2020-10-05T12:18:01Z",
        "comment": "I agree/ As a matter of fact, I am not so sure prodrMn_const is still needed (it is just a combination of 2 rewrite).\r\nDoes this mean I have to do another instance of multiple PR to rename and add a theorem? "
      },
      {
        "author": "thery",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2020-10-05T21:34:38Z",
        "comment": "ok I've renamed`prodrM2n` into `prodr_natmul` and rename `prodrMn` intro `prodrMn_const`"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2020-10-06T04:43:23Z",
        "comment": "This lemma has also to be exported from `GRing.Theory` (L. 5667)."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2020-10-06T04:49:47Z",
        "comment": "I think this should be located in the `GRing.Theory` module. (Please make sure that `ssrnum.v` before this change emits deprecation warnings but still compiles.)"
      },
      {
        "author": "thery",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2020-10-06T06:39:08Z",
        "comment": "thanks. Should be ok now"
      },
      {
        "author": "thery",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2020-10-06T06:39:46Z",
        "comment": "done"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2020-10-10T12:47:15Z",
        "comment": "```suggestion\r\nby elim/big_rec3: _ => // i y1 y2 y3 _ ->; rewrite mulrnAr mulrnAl -mulrnA.\r\n```"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2020-10-10T13:22:58Z",
        "comment": "Coq says that this notation is not reversible so:\r\n```suggestion\r\n  (fun n A F => deprecate prodrMn prodrMn_const _ n _ A F) (only parsing).\r\n```"
      },
      {
        "author": "pi8027",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2020-10-10T13:26:32Z",
        "comment": "Did we reach a consensus on this 2 step renamings/deprecations? @CohenCyril "
      },
      {
        "author": "CohenCyril",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2020-10-25T12:38:17Z",
        "comment": "Yes I think we did!"
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "thery",
        "committer": "thery",
        "hash": "96a540fcd58dd37ef464a89ac7dc6f5cb7e2dd65",
        "message": "Adding bigop lemmas for ring : expr_sum and prodr_natmul",
        "date": "2020-10-10T13:47:22Z"
      }
    ]
  },
  {
    "author": "chdoc",
    "number": 604,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 104,
        "deletions": 1
      },
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 104,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2020-10-01T16:17:52Z",
    "update_date": "2020-11-11T21:20:52Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2020-10-30T17:14:18Z",
        "comment": "> @CohenCyril I chose `_pivot` for the `s1 ++ x :: s2` pattern, but I am open to suggestions. I would favor this pattern over `rcons s1 x ++ s2`, because the former arises naturally when using `rot_to_arc` (`x` being the beginning of the second arc).\r\n\r\nAll right, I never noticed this before, this is a bit unfortunate since `splitP` chooses the other pattern :disappointed: "
      },
      {
        "author": "chdoc",
        "date": "2020-10-30T19:08:44Z",
        "comment": "Well, just ran a count on my graph-theory development and I have about the same number of uses of `path.splitP` (if one imports `all_ssreflect`, `splitP` ends up being the one for ordinals) and of `splitPr`. The former is more useful when dealing with paths, where one usually cares about the last element, so `splitP` allows rewriting with `last_rcons`. The latter is more useful when dealing with arcs, where the \"end\" of the arc is actually part of the other arc (i.e, `arc s x y` contains `x` but not `y`). "
      },
      {
        "author": "chdoc",
        "date": "2020-11-04T19:45:04Z",
        "comment": "@CohenCyril , I rebased, but I kept the changes following your review in a separate commit. Please ping me before merging, even if you are okay with my alternative choice of names, so that I can squash the commits. "
      },
      {
        "author": "chdoc",
        "date": "2020-11-06T19:51:05Z",
        "comment": "@CohenCyril I committed your suggestions and added a fixup commit to make it compile and update the change log. Who would be a good second reviewer? "
      },
      {
        "author": "CohenCyril",
        "date": "2020-11-07T23:18:59Z",
        "comment": "I guess it's time to summon @pi8027..."
      },
      {
        "author": "chdoc",
        "date": "2020-11-11T19:40:37Z",
        "comment": "And another rebase to resolve the conflicts with the other recent additions to `seq.v`..."
      },
      {
        "author": "CohenCyril",
        "date": "2020-11-11T19:43:44Z",
        "comment": "> And another rebase to resolve the conflicts with the other recent additions to `seq.v`...\r\n\r\nIt might very well have been the last one though."
      }
    ],
    "review_discussion": [
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-10-29T22:27:18Z",
        "comment": "`x \\notin s3 ++ s4` seems sufficient"
      },
      {
        "author": "chdoc",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-10-30T08:07:42Z",
        "comment": "I guess you're right, the statement was motivated by what's available at the point of use in `subseq_pivot`. There, I suppose, the same criticism applies. I will have a look later; the proof of `subseq_pivot` is based on `subseq_uniqP`..."
      },
      {
        "author": "chdoc",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-10-31T13:53:54Z",
        "comment": "On second thought, I'm not sure what the ideal statement for this lemma is. The proposed `x \\notin x3 ++ s4` is clearly sufficient. But then one has to go via `count (pred1 x)` to recover `x \\notin s1` to prove the lemma. In fact, that would be the only purpose of assuming `x \\notin s4`. So one could weaken the assumption even further to assume `x \\notin s1` and `x \\notin s3`. On the other hand, this would make the lemma even more cumersome to use if one only has `uniq (s3 ++ x :: s4)` in the context. In my setting, almost all occurring sequences are duplicate free.  :thinking: "
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-04T13:41:48Z",
        "comment": "> On second thought, I'm not sure what the ideal statement for this lemma is. The proposed `x \\notin x3 ++ s4` is clearly sufficient. But then one has to go via `count (pred1 x)` to recover `x \\notin s1` to prove the lemma. In fact, that would be the only purpose of assuming `x \\notin s4`. So one could weaken the assumption even further to assume `x \\notin s1` and `x \\notin s3`. On the other hand, this would make the lemma even more cumersome to use if one only has `uniq (s3 ++ x :: s4)` in the context. In my setting, almost all occurring sequences are duplicate free.\r\n\r\nThen let's keep this one and rename it `eqseq_uniq_pivotr`? (the `r` standing for the uniq holding on the right pivot)\r\n\r\nAdditionally, the 80 character limit is exceeded."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-04T15:42:10Z",
        "comment": "```suggestion\r\nLemma rev_mask m s : size m = size s -> rev (mask m s) = mask (rev m) (rev s).\r\nProof.\r\nmove: m s; apply: seq_ind2 => //= b x m s eq_size_sm IH.\r\nby case: b; rewrite !rev_cons mask_rcons ?IH ?size_rev// (cats1, cats0).\r\nQed.\r\n```\r\nprovided you also add\r\n```coq\r\nLemma mask_rcons b m x s : size m = size s ->\r\n  mask (rcons m b) (rcons s x) = mask m s ++ nseq b x.\r\nProof. by move=> ms; rewrite -!cats1 mask_cat//; case: b. Qed.\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-04T15:45:29Z",
        "comment": "I suggest `subseq_uniq_pivot` (using the same convention as `eqseq_uniq_pivotr`, but omitting the `r` because there would never be a `l` version)"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-04T15:49:42Z",
        "comment": "```suggestion\r\nLemma eqseq_uniq_pivotr s1 s2 s3 s4 x : uniq (s3 ++ x :: s4) ->\r\n  s1 ++ x :: s2 == s3 ++ x :: s4 = (s1 == s3) && (s2 == s4).\r\n```"
      },
      {
        "author": "chdoc",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-04T16:04:30Z",
        "comment": "Hmm, according to `mainSymbol_suffixes(_condition)?` I would rather name this `eqseq_pivot_uniqr`. The \"pivot\" is `x` and the `pivot` is to describe the `_ ++ _ :: _` pattern. (I guess neither of us wants to call it `uniqr_eqseq_pivot` after the `(condition_)?mainSymbol_suffixes` convention.). I guess a `uniql` variant doesn't hurt either."
      },
      {
        "author": "chdoc",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-04T16:10:48Z",
        "comment": "Hmm, if I follow my argument from above, I end up at `subseq_pivot_uniq` which is ambiguous as uniq is unary predicate. So maybe `uniq_subseq_pivot` is more appropriate. Maybe naming the other one `uniqr_eqseq_pivot` isn't that bad a choice after all. @CohenCyril What do you think?"
      },
      {
        "author": "chdoc",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-04T16:13:16Z",
        "comment": "(Hmm, there was no \"Reply...\" for your first comment, so I commented after clicking on \"view changes\", but this comment isn't shown above :thinking: )"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-04T21:13:34Z",
        "comment": "While we are at it, we could include all the following variations and side lemmas:\r\n(and for the sake of uniformity, with `uniq_subseq_pivot` I would prefer the names `uniq_eqseq_pivotl` and `uniq_eqseq_pivotr`)\r\n```suggestion\r\nLemma index_pivot x s1 s2 (s := s1 ++ x :: s2) : x \\notin s1 -> \r\n  index x s = size s1.\r\nProof. by rewrite index_cat/= eqxx addn0; case: ifPn. Qed.\r\n\r\nLemma take_pivot x s2 s1 (s := s1 ++ x :: s2) : x \\notin s1 -> \r\n  take (index x s) s = s1.\r\nProof. by move=> /index_pivot->; rewrite take_size_cat. Qed.\r\n\r\nLemma rev_pivot x s1 s2 : rev (s1 ++ x :: s2) = rev s2 ++ x :: rev s1.\r\nProof. by rewrite rev_cat rev_cons cat_rcons. Qed.\r\n\r\nLemma eqseq_pivot2l x s1 s2 s3 s4 : x \\notin s1 -> x \\notin s3 ->\r\n  (s1 ++ x :: s2 == s3 ++ x :: s4) = (s1 == s3) && (s2 == s4).\r\nProof.\r\nmove=> xNs1 xNs3; apply/idP/idP => [E|/andP[/eqP-> /eqP->]//].\r\nsuff S : size s1 = size s3 by rewrite eqseq_cat// eqseq_cons eqxx in E.\r\nby rewrite -(index_pivot s2 xNs1) (eqP E) index_pivot.\r\nQed.\r\n\r\nLemma eqseq_pivot2r x s1 s2 s3 s4 : x \\notin s2 -> x \\notin s4 ->\r\n  (s1 ++ x :: s2 == s3 ++ x :: s4) = (s1 == s3) && (s2 == s4).\r\nProof.\r\nmove=> xNs2 xNs4; rewrite -(can_eq revK) !rev_pivot.\r\nby rewrite eqseq_pivot2l ?mem_rev// !(can_eq revK) andbC.\r\nQed.\r\n\r\nLemma eqseq_pivotl x s1 s2 s3 s4 : x \\notin s1 -> x \\notin s2 ->\r\n  (s1 ++ x :: s2 == s3 ++ x :: s4) = (s1 == s3) && (s2 == s4).\r\nProof.\r\nmove=> xNs1 xNs2; apply/idP/idP => [E|/andP[/eqP-> /eqP->]//].\r\nrewrite -(@eqseq_pivot2l x)//; have /eqP/(congr1 (count_mem x)) := E.\r\nrewrite !count_cat/= eqxx !addnS (count_memPn _ _ xNs1) (count_memPn _ _ xNs2).\r\nby move=> -[/esym/eqP]; rewrite addn_eq0 => /andP[/eqP/count_memPn].\r\nQed.\r\n\r\nLemma eqseq_pivotr x s1 s2 s3 s4 : x \\notin s3 -> x \\notin s4 ->\r\n  (s1 ++ x :: s2 == s3 ++ x :: s4) = (s1 == s3) && (s2 == s4).\r\nProof.\r\nby move=> *; rewrite eq_sym eqseq_pivotl// [s3 == _]eq_sym [s4 == _]eq_sym.\r\nQed.\r\n\r\nLemma uniq_eqseq_pivotl x s1 s2 s3 s4 : uniq (s1 ++ x :: s2) ->\r\n  (s1 ++ x :: s2 == s3 ++ x :: s4) = (s1 == s3) && (s2 == s4).\r\nProof.\r\nby rewrite uniq_catC/= mem_cat => /andP[/norP[? ?] _]; rewrite eqseq_pivotl.\r\nQed.\r\n\r\nLemma uniq_eqseq_pivotr x s1 s2 s3 s4 : uniq (s3 ++ x :: s4) ->\r\n  (s1 ++ x :: s2 == s3 ++ x :: s4) = (s1 == s3) && (s2 == s4).\r\nProof.\r\nby move=> ?; rewrite eq_sym uniq_eqseq_pivotl// [s3 == _]eq_sym [s4 == _]eq_sym.\r\nQed.\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-04T21:15:24Z",
        "comment": "same proof, shorter script:\r\n```suggestion\r\nby rewrite (leq_trans (count_size _ _))// size_take; case: ltnP.\r\n```"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-08T16:45:34Z",
        "comment": "```suggestion\r\nProof. by move/index_pivot->; rewrite take_size_cat. Qed.\r\n```"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-08T17:11:28Z",
        "comment": "```suggestion\r\nProof. by move=> *; rewrite eq_sym eqseq_pivotl//; case: eqVneq => /=. Qed.\r\n```"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-08T17:11:56Z",
        "comment": "```suggestion\r\nProof. by move=> ?; rewrite eq_sym uniq_eqseq_pivotl//; case: eqVneq => /=. Qed.\r\n```"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-08T20:07:32Z",
        "comment": "```suggestion\r\nby case/subseqP => m size_m ->; rewrite rev_mask // mask_subseq.\r\n```"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-08T20:11:48Z",
        "comment": "```suggestion\r\ncase/subseqP=> m size_m ->.\r\n```"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-08T20:55:33Z",
        "comment": "There is an `Implicit Types` declaration for `s` in this section.\r\n```suggestion\r\nLemma subseq_cat2l s s1 s2 : subseq (s ++ s1) (s ++ s2) = subseq s1 s2.\r\n```"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-08T20:56:03Z",
        "comment": "```suggestion\r\nLemma subseq_cat2r s s1 s2 : subseq (s1 ++ s) (s2 ++ s) = subseq s1 s2.\r\n```"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-08T20:57:33Z",
        "comment": "The conclusion can be an equation rather than implication.\r\n```suggestion\r\nLemma uniq_subseq_pivot s1 s2 s3 s4 x (s := s3 ++ x :: s4) :\r\n  uniq s -> subseq (s1 ++ x :: s2) s = (subseq s1 s3 && subseq s2 s4).\r\nProof.\r\nmove=> uniq_s; apply/idP/idP; last first.\r\n  case/andP=> /subseqP [m1 size_m1 ->] /subseqP [m2 size_m2 ->].\r\n  by rewrite -(mask_cat (true :: _) (_ :: _)) // mask_subseq.\r\nmove=> sub_s'_s; have uniq_s' := subseq_uniq sub_s'_s uniq_s.\r\nhave/eqP {sub_s'_s uniq_s} := subseq_uniqP _ uniq_s sub_s'_s.\r\nrewrite filter_cat /= mem_cat mem_head orbT /= uniq_eqseq_pivotl //.\r\nby case/andP=> /eqP -> /eqP ->; rewrite !filter_subseq.\r\nQed.\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-08T23:39:10Z",
        "comment": "I prefer the former."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-09T01:39:45Z",
        "comment": "except for the extra spaces\r\n```suggestion\r\nmove=> /subseqP[m size_m ->].\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2020-11-09T01:43:55Z",
        "comment": "```suggestion\r\n  `uniq_eqseq_pivotl`, `uniq_eqseq_pivotr`, `mask_rcons`, `rev_mask`,\r\n```"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-09T07:30:32Z",
        "comment": "> I prefer the former.\r\n\r\nWhy do you think so?"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-09T07:30:36Z",
        "comment": "@CohenCyril You may prefer `move=> /subseqP[m size_m ->]` over my suggestion here too."
      },
      {
        "author": "chdoc",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-09T10:31:51Z",
        "comment": "Of course, this could be an equality, but I don't think the direction from left to right is of much use. In particular, the direction from right to left can (after intros) be simplified to `by rewrite cat_subseq //= eqxx.` The main use of this lemma is to split the complicated assumption into simpler (more useful) ones. "
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-10T08:12:13Z",
        "comment": "If you want to use it mainly as a view lemma, stating it using an equation can lengthen proof scripts a bit indeed. On the other hand, if you have only the implication version of this lemma and want to rewrite a subterm of the goal or hypotheses with it, I think it will be even costly."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-10T08:14:00Z",
        "comment": "At least, I prefer to use `&&` for conjunctions of boolean values and to perform `case/andP` when needed."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-10T15:37:53Z",
        "comment": "The syntax `move/view` and `case/view` is the historical syntax, views in intro pattern came later AFAIR , and for the sake of teaching, we usually only teach the latter, so whenever it does not save a line, I personally prefer when the view, case and dispatch are all regrouped in the intro pattern as in `/view[stuff]`, it looks more \"modern\" to me."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-10T15:53:03Z",
        "comment": "@CohenCyril I didn't know that. Thanks!"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-10T16:04:15Z",
        "comment": "I'm not sure which one I like best, but if one keeps the implication, I'd rather have a `prod` than a  `and` in the conclusion, so as to rewrite with it, at least. BTW the variable `x` should come first in case it needs to be specified.\r\n\r\nPS: On second thoughts I think I prefer the equality, since it is more versatile, even though there is a slight overhead when one wants to transform the hypothesis, (hopefully it might be fixed by #501 someday)"
      },
      {
        "author": "chdoc",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-11T17:08:10Z",
        "comment": "Fine, you get your equality. "
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-11T19:30:39Z",
        "comment": "One last detail: `x` should come first."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-11T19:30:55Z",
        "comment": "```suggestion\r\nLemma uniq_subseq_pivot x (s1 s2 s3 s4 : seq T) (s := s3 ++ x :: s4) :\r\n```"
      },
      {
        "author": "chdoc",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-11T19:32:04Z",
        "comment": "I knew I forgot something ... "
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-11T19:41:51Z",
        "comment": "Yes, but it's all right, it's just a preference, not a requirement."
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "chdoc",
        "committer": "chdoc",
        "hash": "7bef434688cea376694fbde648f31867d04d8d88",
        "message": "lemmas on subseq and rot",
        "date": "2020-11-11T19:34:26Z"
      },
      {
        "author": "chdoc",
        "committer": "chdoc",
        "hash": "188ffa169aeaf83fe111753380699f0f20915ce9",
        "message": "suggestions from Cyril",
        "date": "2020-11-11T19:36:39Z"
      },
      {
        "author": "chdoc",
        "committer": "chdoc",
        "hash": "cde6e5af0d272081884f3dc1813ebbbabc0198c3",
        "message": "Apply suggestions from code review\n\nCo-authored-by: Cyril Cohen <CohenCyril@users.noreply.github.com>",
        "date": "2020-11-11T19:36:39Z"
      },
      {
        "author": "chdoc",
        "committer": "chdoc",
        "hash": "2acb66dcb2d8e571b3edfecf70099893187a169f",
        "message": "fixup after feedback from Cyril",
        "date": "2020-11-11T19:36:39Z"
      },
      {
        "author": "chdoc",
        "committer": "chdoc",
        "hash": "cd8f803281d5e62fb474192605f1de455c21bc4b",
        "message": "Apply suggestions from code review\n\nCo-authored-by: Cyril Cohen <CohenCyril@users.noreply.github.com>\nCo-authored-by: Kazuhiko Sakaguchi <pi8027@gmail.com>",
        "date": "2020-11-11T19:36:39Z"
      },
      {
        "author": "chdoc",
        "committer": "chdoc",
        "hash": "85aee7ba9a19dceccc49c16b3d9eb295c60de774",
        "message": "turn uniq_subseq_pivot into equality",
        "date": "2020-11-11T19:36:39Z"
      },
      {
        "author": "chdoc",
        "committer": "chdoc",
        "hash": "b408b52bcb89468c7d61c4c56c2e7c02d8f458a8",
        "message": "make pivot the first argument in uniq_subseq_pivot\n\nCo-authored-by: Cyril Cohen <CohenCyril@users.noreply.github.com>",
        "date": "2020-11-11T19:38:49Z"
      }
    ]
  },
  {
    "author": "chdoc",
    "number": 603,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 25,
        "deletions": 7
      },
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 25,
        "deletions": 7
      }
    ],
    "state": "merged",
    "open_date": "2020-10-01T15:23:06Z",
    "update_date": "2020-11-03T15:25:53Z",
    "discussion": [],
    "review_discussion": [
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-10-11T15:56:21Z",
        "comment": "```suggestion\r\nProof.\r\nby unlock rot_sum; case: ifP; rewrite // leq_subLR leq_add // geq_minr.\r\n```"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-10-11T16:00:01Z",
        "comment": "```suggestion\r\nProof.\r\n```"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-10-11T16:00:49Z",
        "comment": "Not from this PR, but:\r\n```suggestion\r\nProof. by rewrite [RHS]/rotr size_rot rot_rot. Qed.\r\n```"
      },
      {
        "author": "chdoc",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-10-12T19:24:10Z",
        "comment": "Nice! "
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-10-30T17:54:47Z",
        "comment": "Do you need such a thing in your own developments?\r\nIf not, I suggest you make it a local `Let` together with the lemmas that mention it in their statements..."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-10-30T17:55:16Z",
        "comment": "And `sum` is dedicated to `\\big[add/0]`, please switch to `add`"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-10-30T17:56:43Z",
        "comment": "On the other hand, if it is really needed in your developments, I suggest you give it a proper meaning as soon as `div` is available.."
      },
      {
        "author": "chdoc",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-10-30T18:49:16Z",
        "comment": "Well, the use case is any kind of reasoning where one want's to gather `rot n (rot m s)` into `rot k s` for some `k <= size s` without imposing any bounds on `n` and `m`. Just compare the old proof of `rot_rot` (which in the GitHub diff looks like an old proof of `leq_rot_sum`) with the new one-line proof. Nobody should look at the definition of `rot_sum`, but it can be handy to know that such a number exists. Having it as a definition, rather than as a lemma, allows for useful rewrite rules such as `rot_rot_sum`. "
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-01T13:35:25Z",
        "comment": "```suggestion\r\nDefinition rot_add s n m (k := size s) (p := minn m k + minn n k) :=\r\n  locked (if p <= k then p else p - k).\r\n```\r\nor else\r\n```suggestion\r\nDefinition rot_add s n m (k := size s) (p := minn m k + minn n k) :=\r\n  locked (p - (p <= k) * k).\r\n```"
      },
      {
        "author": "chdoc",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-01T16:32:32Z",
        "comment": "Common sub-expression elimination FTW :+1: \r\n\r\nI opted for the first one, because I am not a big fan of booleans in arithmetic expressions."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-02T07:39:38Z",
        "comment": "@chdoc It seems that you reverted my suggestions."
      },
      {
        "author": "chdoc",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-02T10:36:07Z",
        "comment": "@pi8027 yes, sorry about that. Should be fixed now. "
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "chdoc",
        "committer": "chdoc",
        "hash": "e13e96e00c681d1b9109302e0f5ea0979442bd0a",
        "message": "lemmas for reasoing about \"rot n (rot m s)\"",
        "date": "2020-11-02T10:33:58Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 601,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 290,
        "deletions": 18
      },
      {
        "file": "mathcomp/ssreflect/path.v",
        "status": "M",
        "additions": 290,
        "deletions": 18
      },
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 290,
        "deletions": 18
      },
      {
        "file": "mathcomp/ssreflect/ssrbool.v",
        "status": "M",
        "additions": 290,
        "deletions": 18
      }
    ],
    "state": "merged",
    "open_date": "2020-09-30T11:19:29Z",
    "update_date": "2020-11-25T09:34:25Z",
    "discussion": [
      {
        "author": "pi8027",
        "date": "2020-10-07T16:20:22Z",
        "comment": "There are naming inconsistencies in `eq_(path|sorted)(_in)` lemmas. :(\r\n```coq\r\neq_path\r\n     : forall (T : Type) (e e' : T -> T -> bool), e =2 e' -> path e =2 path e'\r\n\r\neq_path_in\r\n     : forall (T : eqType) (e e' : rel T) (x : T) (s : seq T),\r\n       {in x :: s &, e =2 e'} -> path e x s = path e' x s\r\n\r\neq_sorted\r\n     : forall (T : eqType) (leT : rel T),\r\n       transitive leT ->\r\n       antisymmetric leT ->\r\n       forall s1 s2 : seq T,\r\n       sorted leT s1 -> sorted leT s2 -> perm_eq s1 s2 -> s1 = s2\r\n\r\neq_sorted_in\r\n     : forall (T : eqType) (leT : rel T) (s1 : seq_predType T) (s2 : seq T),\r\n       {in s1 & &, transitive leT} ->\r\n       {in s1 &, antisymmetric leT} ->\r\n       sorted leT s1 -> sorted leT s2 -> perm_eq s1 s2 -> s1 = s2\r\n```"
      },
      {
        "author": "pi8027",
        "date": "2020-10-07T17:12:38Z",
        "comment": "~Also `path`, `cycle`, and `sorted` share some similar properties but many of them are actually missing as lemmas, e.g., the `cycle` variant of `eq_path_in` and `(homo|mono)_path(_in)`, and the `sorted` variants of `eq_path(_in)`. I guess it would be nice to move `sorted` right after the definition of `cycle` to get a better view.~ Done."
      },
      {
        "author": "pi8027",
        "date": "2020-10-10T08:08:06Z",
        "comment": "I don't think I can make more progress without some feedback. May I have some comment on the above points (naming inconsistencies, a possible generalization of `sub_path_in`, and its naming convention)?"
      },
      {
        "author": "CohenCyril",
        "date": "2020-10-30T19:49:36Z",
        "comment": "> There are naming inconsistencies in `eq_(path|sorted)(_in)` lemmas. :(\r\n\r\nNevermind, yes there is an inconsistency... I guess  `eq_sorted` should be renamed `sorted_eq` then..."
      },
      {
        "author": "pi8027",
        "date": "2020-10-30T19:56:37Z",
        "comment": "> Nevermind, yes there is an inconsistency... I guess `eq_sorted` should be renamed `sorted_eq` then...\r\n\r\nSure. So we will be able to add `eq_sorted(_in)` consistent with `eq_path(_in)` in 1.13."
      },
      {
        "author": "pi8027",
        "date": "2020-10-31T12:11:27Z",
        "comment": "FTR, deprecating `eq_sorted_irr` breaks fcsl-pcm and lemma-overloading because the deprecation facility does not support the `(ident := term)` syntax for explicit applications. https://github.com/imdea-software/fcsl-pcm/blob/1d5b78248fb1d5bec3553d64f92656e973f2b6de/pcm/unionmap.v#L3573 https://github.com/coq-community/lemma-overloading/blob/05a9f467049822eb14b3784ddaa21ddc0252c92a/theories/heaps.v#L1199"
      },
      {
        "author": "pi8027",
        "date": "2020-11-04T07:05:57Z",
        "comment": "I will write CHANGELOG entries later today. This PR is ready for review except for that."
      },
      {
        "author": "pi8027",
        "date": "2020-11-04T14:51:19Z",
        "comment": "> I will write CHANGELOG entries later today. This PR is ready for review except for that.\r\n\r\nDone."
      },
      {
        "author": "pi8027",
        "date": "2020-11-05T07:44:26Z",
        "comment": "> Moreover, it looks to me that this PR changes (much) more than just generalize the sorting lemmas. I would advocate for splitting this PR into more focused (and hence smaller) PRs, so that each part can be given proper consideration.\r\n\r\n@chdoc Sure. I separated off the first part of this PR as #632."
      },
      {
        "author": "chdoc",
        "date": "2020-11-12T15:00:32Z",
        "comment": "@pi8027 , is this PR ready for review now?"
      },
      {
        "author": "pi8027",
        "date": "2020-11-12T16:41:34Z",
        "comment": "> @pi8027 , is this PR ready for review now?\r\n\r\n@chdoc Yes."
      },
      {
        "author": "pi8027",
        "date": "2020-11-12T18:54:40Z",
        "comment": "Now I think `perm_iota_sort` is not convenient enough to perform the `mkseq` technique for `sort`. I actually rather use `mkseq_nth` often. Let me investigate before review."
      },
      {
        "author": "CohenCyril",
        "date": "2020-11-12T20:07:44Z",
        "comment": "There are two ways to add the `_in` variants,\r\n- one way is exactly what you did: prove the `_in` versions first, and then apply them to the not `_in` counterparts.\r\n- the other one is to keep the original code as such and extend it to the `_in` variants, by applying the original lemmas to `sig P` and using parametricity results (such as `path_map`, `sorted_map`, `sort_map`, etc)\r\n\r\nI wonder if the second approach wouldn't be more compact, maybe at the cost of some reusable machinery... (like `inW` etc), @pi8027 did you try it?"
      },
      {
        "author": "pi8027",
        "date": "2020-11-12T21:13:27Z",
        "comment": "@CohenCyril I thought about the second possibility but did not try it yet. Let me try. Also, I intend to separate off the renaming of `eq_sorted` lemmas as another PR to make it easy to compare these two approaches."
      },
      {
        "author": "pi8027",
        "date": "2020-11-12T21:53:40Z",
        "comment": "CI fails since coq.inria.fr is down🤦‍♂️"
      },
      {
        "author": "pi8027",
        "date": "2020-11-13T15:34:18Z",
        "comment": "Progress report: before working on another approach to add the `_in` lemmas suggested by @CohenCyril, I'm discovering some possible simplifications and generalizations of existing proofs (namely the first commit of this PR). I will probably open it as another PR."
      },
      {
        "author": "pi8027",
        "date": "2020-11-19T09:48:17Z",
        "comment": ">  the other one is to keep the original code as such and extend it to the `_in` variants, by applying the original lemmas to `sig P` and using parametricity results (such as `path_map`, `sorted_map`, `sort_map`, etc)\r\n\r\nThis one seems quite successful (see https://github.com/pi8027/math-comp/commit/4c794d28703abe14c60fce540374a8ad7a5808af). Since these lemmas will not likely to be used frequently and their proofs are reasonably short, we probably don't have to add them in `path.v`. But, at least, I would like to document this proof technique somewhere. Would `sort_map(_in)` be a good example?"
      },
      {
        "author": "CohenCyril",
        "date": "2020-11-19T09:55:07Z",
        "comment": "> This one seems quite successful (see [pi8027@4c794d2](https://github.com/pi8027/math-comp/commit/4c794d28703abe14c60fce540374a8ad7a5808af)). Since these lemmas will not likely to be used frequently and their proofs are reasonably short, we probably don't have to add them in `path.v`. But, at least, I would like to document this proof technique somewhere. Would `sort_map(_in)` be a good example?\r\n\r\nActually, I think the best documentation would come from factoring out the proofs that transitivity, totality, reflexivity, irreflexivity, antisymmetry (and the ones I maybe forgot) \"in\" `P`, propagate to `sig P` and documenting the proof technique there and pointing to `sort_map(_in)` for an example of usage.\r\n\r\n(e.g. in https://github.com/pi8027/math-comp/commit/4c794d28703abe14c60fce540374a8ad7a5808af#diff-6905d3e9b2a18e19466feaed83bec790025fdc134ccc5ebba787bf9d63653544R891 and https://github.com/pi8027/math-comp/commit/4c794d28703abe14c60fce540374a8ad7a5808af#diff-6905d3e9b2a18e19466feaed83bec790025fdc134ccc5ebba787bf9d63653544R1103 the end of the line is the same and could be factored using a lemma `in_sig3 : {in A & B & C, P T1 T2 T3} -> P (sig A) (sig B) (sig C)` or something like that)"
      },
      {
        "author": "CohenCyril",
        "date": "2020-11-19T17:04:19Z",
        "comment": "cf https://github.com/CohenCyril/math-comp/commit/12ead9c5db6694d75db8a123f5a6c600cc58be99\r\n"
      },
      {
        "author": "CohenCyril",
        "date": "2020-11-20T10:05:48Z",
        "comment": "My impression is that in previous versions of this, you had many more `_in` variants. I cannot find the previous changelog anymore to compare, but is that right?"
      },
      {
        "author": "pi8027",
        "date": "2020-11-20T10:22:41Z",
        "comment": "> My impression is that in previous versions of this, you had many more `_in` variants. I cannot find the previous changelog anymore to compare, but is that right?\r\n\r\nRight. Here I have a previous version: https://github.com/pi8027/math-comp/commit/024cb1b6455fa40ea7cb902909a311033fb30108. I will put some of them back, but I'm not sure if we need all of them."
      },
      {
        "author": "CohenCyril",
        "date": "2020-11-24T16:49:30Z",
        "comment": "@chdoc I'm happy with the current state of this PR, if you are too, I will merge."
      }
    ],
    "review_discussion": [
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2020-10-08T07:51:08Z",
        "comment": "Since my previous comment has become outdated, I repeat it. I think that the following generalization of `sub_path_in` is useful:\r\n```coq\r\nLemma sub_path_in (T T' : Type) (P : {pred T}) (e e' : rel T) x s :\r\n  P x -> all P x -> {in P &, subrel e e'} -> path e x s -> path e' x s.\r\n```\r\nThis generalization may apply to all the lemmas in this section. Does it make sense? What should be the naming convention for these two variants of the `_in` lemmas? (I have the same issue in the new lemmas, e.g., `sort_sorted_in`.)"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2020-10-30T19:45:45Z",
        "comment": "Yes!"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2020-10-30T20:03:47Z",
        "comment": "Also, I had a hard time to generalize this lemma. The point is that the current proof uses `perm_eq` of `seq T'`, so `T'` is currently required to be an `eqType` but it shouldn't. `T` can also be generalized to a `Type` by introducing a predicate `P : {pred T}`."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2020-10-30T20:05:42Z",
        "comment": "I think I'd state it as \r\n```coq\r\nLemma sub_path_in (T T' : Type) (P : {pred T}) (e e' : rel T) x s :\r\n  all P (x :: s) -> {in P &, subrel e e'} -> path e x s -> path e' x s.\r\n```\r\nso that we can apply it to\r\n```coq\r\nLemma all_seq {T : eqType} {s : seq T} : all (mem s) s. Proof. exact/allP. Qed.\r\n```\r\nand get back the previous behaviour..."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2020-10-30T20:07:14Z",
        "comment": "On second thought, I'm wondering whether the more general versions should be in a separate module, because applying `all_seq` by hand all the time seems a little bit... costly :confused: "
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2020-10-31T09:58:46Z",
        "comment": "It seems that both `all (mem s) s` and `all (pred_of_seq s) s` appear in goals, and then the above `all_seq` can be problematic. :(\r\n```coq\r\nRequire Import all_ssreflect.\r\n\r\nLemma allss (T : eqType) (s : seq T) : all (mem s) s. Proof. exact/allP. Qed.\r\n\r\nGoal forall (T : eqType) (x : T) s, all (pred_of_seq (x :: s)) (x :: s).\r\nProof.\r\nmove=> T x s.\r\nFail apply: allss. (* ! *)\r\nexact: (allss _ (x :: s)).\r\nQed.\r\n```\r\nI think that the above `Fail apply:` reduces `pred_of_seq (x :: s)` to `(fun y => (y == x) || pred_of_seq s y)` first and then fails to unify it with `@mem _ (seq_predType _) _`."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2020-10-31T12:07:47Z",
        "comment": "I found a solution to make `allss` work both for `all (mem s) s` and `all (pred_of_seq s) s` and declared it as a hint. See `seq.v`."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2020-11-03T15:33:47Z",
        "comment": "Except for this point, this PR seems to be almost good enough to merge. So I would remove this lemma for now and try to add it later in another PR if there is no immediate solution."
      },
      {
        "author": "chdoc",
        "file": "mathcomp/ssreflect/order.v",
        "date": "2020-11-04T14:53:19Z",
        "comment": "What's the rationale for `sorted_eq_lt` vs `sorted_lt_eq`? "
      },
      {
        "author": "chdoc",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-04T15:09:17Z",
        "comment": "Is it really necessary to add a global external hint for this? "
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/order.v",
        "date": "2020-11-05T10:51:03Z",
        "comment": "I replaced `eq_sorted` with `sorted_eq` blindly, but `sorted_(le|lt)_eq` seems to make much sense here because they state properties of lists sorted by `<=%O` and `<%O`. So should we also rename `sorted_eq_irr(_in)` to `sorted_irr_eq(_in)`? What do you think, @CohenCyril?"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/order.v",
        "date": "2020-11-11T20:41:01Z",
        "comment": "These names do not make sense to me, `sorted` and `lt`/`le` must be next to each other.\r\nI liked `eq_sorted_(le|lt)`, but I would be fine with `sorted_(le|lt)_eq` too."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/order.v",
        "date": "2020-11-11T20:41:43Z",
        "comment": "(and same rationale with `sorted_eq_irr`)"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-11T21:34:55Z",
        "comment": "I guess it follows from a problem from @pi8027 encountered and that I cannot find on github :disappointed: \r\nHowever, it is forbidden to use `exact:` in a `Hint Extern`, since `exact` might call `ssrdone` which calls use of level 0 hints, potentially causing a loop in some weird cases. You may use `solve [apply: stuff]` instead.\r\n(BTW I notice `exact:` is used in `ssrnum.v` which I accidentally let through...)"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-11T21:36:26Z",
        "comment": "It should probably be documented as a comment in the code though..."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-11-12T00:45:27Z",
        "comment": "> I guess it follows from a problem from @pi8027 encountered and that I cannot find on github \r\n\r\nThe problem I observed in the discussion following from https://github.com/math-comp/math-comp/pull/601#discussion_r501516139 was that both `all (mem s) s` and `all (pred_of_seq s) s` appear in goals and do not reduce to each other. So stating `allss` in the form of one of them makes `apply: allss` failing for the other case. Since both `mem` and `pred_of_seq` reduce to `mem_seq`, I had to put this explicit type annotation here. Since the `Hint` facility lets us use syntactic matching to find the rules to apply, I had also to use `Hint Extern` to give that pattern explicitly (see #319).\r\n\r\n> However, it is forbidden to use `exact:` in a `Hint Extern`, since `exact` might call `ssrdone` which calls use of level 0 hints, potentially causing a loop in some weird cases. You may use `solve [apply: stuff]` instead.\r\n> (BTW I notice `exact:` is used in `ssrnum.v` which I accidentally let through...)\r\n\r\n~Sure. I will fix them.~ Done."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/order.v",
        "date": "2020-11-12T09:45:32Z",
        "comment": "Fixed."
      },
      {
        "author": "chdoc",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2020-11-12T14:59:08Z",
        "comment": "This is another instance where it would be really useful to be able to use the fact that `sort s` and `s` have the same elements, even if one does not have a decidable equality (#638). This isn't a blocker, I'm merely collecting examples for the aforementioned issue."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2020-11-12T18:43:03Z",
        "comment": "As in https://github.com/math-comp/math-comp/pull/632#discussion_r520492284, `mkseq_nth` is useful to avoid induction here.\r\n```coq\r\nLemma all_sort (T : Type) (P : {pred T}) (leT : rel T) s :\r\n  all P (sort leT s) = all P s.\r\nProof.\r\ncase: s => // x s; move: (x :: s) => {s} s.\r\nrewrite -(mkseq_nth x s) sort_map !all_map.\r\nby apply: perm_all; rewrite perm_sort.\r\nQed.\r\n```"
      },
      {
        "author": "chdoc",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2020-11-12T19:28:29Z",
        "comment": "3 (short) lines rather than 6, that's much better. Also, the use of `mkseq_nth` makes it easier to find this should there ever be list membership without decidable equality in mathcomp. Great! "
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2020-11-13T18:00:14Z",
        "comment": "The names of these lemmas `(ltn|leq)_index` are too short in my opinion. Shouldn't we rename them to `sorted_(ltn|leq)_index`, so that these properties specialized to a `porderType` can be called `(le|lt)_sorted_(ltn|leq)_index`?"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2020-11-13T18:21:02Z",
        "comment": "Yes indeed, note that `lt_sorted_` versions, or more generally either \"irreflexive versions\" or \"reflexive + uniq versions\" should be stronger, i.e. we should get an equality i.e. a `mono`, (and also `mono` for `sorted_le_nth` variants which should be named e.g. `uniq_sorted_nth` and `sorted_irr_nth`) under the same conditions). I was planning to add it one day, and I will do it in another PR (unless you desire to do it instead, if so please tell me), and from this perspective the renaming you suggest is a nice anticipation and maybe it should even go further renaming the current `sorted_lt_nth` to `sorted_ltn_nth` (so that `sorted_lt_nth` becomes available for the specialization of `sorted_irr_nth` to `<%O`)."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2020-11-13T18:30:27Z",
        "comment": "Sure. I will rename them, but will not add the irreflexive versions of them by myself (at least for now). I'm also preparing a PR to address #622 at the same time, but I will not touch this part (including `sorted_(le|lt)_nth` lemmas)."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2020-11-13T19:35:05Z",
        "comment": "> ... from this perspective the renaming you suggest is a nice anticipation and maybe it should even go further renaming the current `sorted_lt_nth` to `sorted_ltn_nth` (so that `sorted_lt_nth` becomes available for the specialization of `sorted_irr_nth` to `<%O`).\r\n\r\n`lt`/`le` of `sorted_(lt|le)_nth` is about indices, not about elements of `s`. So I think `irr` should come before `sorted` (e.g., `irr_sorted_lt_nth`), but it would still be nice to replace these `lt` and `le` with `ltn` and `leq` respectively."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2020-11-18T21:45:50Z",
        "comment": "Addressed in #650."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2020-11-23T02:38:46Z",
        "comment": "FTR, the behavior of this intro pattern has been changed between Coq 8.11 and Coq 8.12.🙁\r\n\r\nIn Coq 8.11:\r\n```\r\n  perm_s12 : perm_eq s1 s2\r\n  ============================\r\n  sorted leT s1 -> sorted leT s2 -> perm_eq s1 s2 -> s1 = s2\r\n```\r\n\r\nIn Coq 8.12:\r\n```\r\n  perm_s12 : perm_eq s1 s2\r\n  ============================\r\n  perm_eq s1 s2 -> sorted leT s1 -> sorted leT s2 -> s1 = s2\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2020-11-23T09:12:31Z",
        "comment": "CC @gares "
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2020-11-23T09:13:17Z",
        "comment": "The behaviour in 8.12 is not the right one... This kind of calls for a backport..."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2020-11-23T11:10:48Z",
        "comment": "```suggestion\r\nmove=> /in3_sig leT_tr /in2_sig/(_ _ _ _)/val_inj leT_anti ss1 ss2 s1s2.\r\nmove: ss1 ss2 (s1s2); have /all_sigP[s1' ->] := allss s1.\r\nhave /all_sigP[{s1s2}s2 ->] : all (mem s1) s2 by rewrite -(perm_all _ s1s2).\r\nby rewrite !sorted_map => ss1' ss2 /(perm_map_inj val_inj)/(sorted_eq leT_tr)->.\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2020-11-23T11:27:12Z",
        "comment": "Even if it is slightly longer, this documents the proof in a better way.\r\n```suggestion\r\nmove=> /in3_sig leT_tr /in1_sig leT_irr + + s1s2; move: (s1s2).\r\nhave /all_sigP[s1' ->] := allss s1.\r\nhave /all_sigP[s2' ->] : all (mem s1) s2 by rewrite -(eq_all_r s1s2).\r\nrewrite !sorted_map => {}s1s2 s1_sorted s2_sorted; congr map.\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2020-11-23T11:27:51Z",
        "comment": "```suggestion\r\n  by move=> _ js _; apply/all_nthP/js/order_path_min_in.\r\nby apply/ihs/path_sorted/path_xs; case/andP: Pxs.\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2020-11-23T11:29:09Z",
        "comment": "I'd rather keep `perm_sortP` untouched, and add\r\n```coq\r\nLemma perm_sort_inP (T : eqType) (leT : rel T) (s1 s2 : seq T) :\r\n  {in s1 &, total leT} -> {in s1 & &, transitive leT} ->\r\n  {in s1 &, antisymmetric leT} ->\r\n  reflect (sort leT s1 = sort leT s2) (perm_eq s1 s2).\r\nProof.\r\nmove=> /in2_sig leT_total /in3_sig leT_tr /in2_sig/(_ _ _ _)/val_inj leT_asym.\r\napply: (iffP idP) => s1s2; last by rewrite -(perm_sort leT) s1s2 perm_sort.\r\nmove: (s1s2); have /all_sigP[s1' ->] := allss s1.\r\nhave /all_sigP[{s1s2}s2 ->] : all (mem s1) s2 by rewrite -(perm_all _ s1s2).\r\nby rewrite !sort_map => /(perm_map_inj val_inj) /(perm_sortP leT_total)->.\r\nQed.\r\n```\r\nafter the end of the section."
      }
    ],
    "tags": [
      {
        "tag": "kind: enhancement",
        "description": "Issue or PR about addition of features."
      }
    ],
    "commits": [
      {
        "author": "pi8027",
        "committer": "CohenCyril",
        "hash": "a18a03452a84e1f54716ce20accca4e16715e382",
        "message": "Add `_in` lemmas for `sort`",
        "date": "2020-11-24T01:14:20Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "a0f3506f41b038d8a9935afa1e587b1ac10f7fe4",
        "message": "factoring out in_sig",
        "date": "2020-11-24T01:14:20Z"
      },
      {
        "author": "pi8027",
        "committer": "CohenCyril",
        "hash": "c42c0678c5de1db9f3e747a7e3b553242719d82c",
        "message": "`in11(1)_sig` subsumes `in(2|3)_sig`",
        "date": "2020-11-24T01:14:20Z"
      },
      {
        "author": "pi8027",
        "committer": "CohenCyril",
        "hash": "95cbf3b00c2d3709b2db9cff16c321012ff4fe62",
        "message": "Add more `_in` lemmas and CHANGELOG entries",
        "date": "2020-11-24T01:14:20Z"
      },
      {
        "author": "pi8027",
        "committer": "CohenCyril",
        "hash": "84d3168ae3436acec2df0b6f83e85ae7c5310ce1",
        "message": "Apply suggestions from code review\n\nCo-authored-by: Cyril Cohen <CohenCyril@users.noreply.github.com>",
        "date": "2020-11-24T01:14:20Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "ac30dae7377f9762ceba1c5553f0542831a0bb5c",
        "message": "Using [dup] in path",
        "date": "2020-11-24T01:15:48Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 600,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 6,
        "deletions": 2
      },
      {
        "file": "mathcomp/algebra/interval.v",
        "status": "M",
        "additions": 6,
        "deletions": 2
      }
    ],
    "state": "merged",
    "open_date": "2020-09-29T06:12:37Z",
    "update_date": "2020-09-29T10:57:17Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: fix",
        "description": "PR that fixes a bug. Please refer to the appropriate issue(s) if relevant."
      }
    ],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "04fbe5e3bb858f0931cfe0b1d9722a8d872ada50",
        "message": "Generalize interval lemmas\n\n- Generalize `mem0_itv(cc|oo)_xNx` and `oppr_itv(|oo|co|oc|cc)` lemmas from\n  `numFieldType` to `numDomainType`, which have been specialized in PR #458\n  accidentally.\n- Generalize `mid_in_itv(|oo|cc)` lemmas from `realFieldType` to `numFieldType`.",
        "date": "2020-09-29T08:35:30Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 599,
    "diff_summary": [
      {
        "file": ".gitlab-ci.yml",
        "status": "A",
        "additions": 84,
        "deletions": 47
      },
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "A",
        "additions": 84,
        "deletions": 47
      },
      {
        "file": "mathcomp/algebra/ssrnum.v",
        "status": "A",
        "additions": 84,
        "deletions": 47
      },
      {
        "file": "mathcomp/ssreflect/ssreflect.v",
        "status": "A",
        "additions": 84,
        "deletions": 47
      },
      {
        "file": "mathcomp/test_suite/test_intro_rw.v",
        "status": "A",
        "additions": 84,
        "deletions": 47
      }
    ],
    "state": "merged",
    "open_date": "2020-09-27T13:35:01Z",
    "update_date": "2020-11-18T09:38:42Z",
    "discussion": [
      {
        "author": "gares",
        "date": "2020-10-21T08:19:21Z",
        "comment": "Please open the corresponding PR in Coq"
      },
      {
        "author": "gares",
        "date": "2020-11-04T09:43:24Z",
        "comment": "Please open the corresponding PR in Coq and rebase"
      },
      {
        "author": "gares",
        "date": "2020-11-06T09:08:21Z",
        "comment": "Apparently this PR got some appreciation here: https://coq.zulipchat.com/#narrow/stream/237977-Coq-users/topic/ssr.20views\r\n@CohenCyril can you open the PR on Coq and rebase so that we can merge this?\r\nCoq is freezing very soon!"
      },
      {
        "author": "gares",
        "date": "2020-11-16T20:06:03Z",
        "comment": "I guess we shall wait the next call to discuss the 8.9 drop business."
      }
    ],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: enhancement",
        "description": "Issue or PR about addition of features."
      },
      {
        "tag": "drops: coq 8.9",
        "description": "Addressing this issue or merging this PR requires to drop support for coq 8.9"
      }
    ],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "d84c26fa2eeeeb0029a56bac37bf1bae9f10882a",
        "message": "Intro pattern extensions for dup, swap and apply",
        "date": "2020-11-11T22:22:12Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 598,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 7,
        "deletions": 2
      },
      {
        "file": "mathcomp/algebra/matrix.v",
        "status": "M",
        "additions": 7,
        "deletions": 2
      }
    ],
    "state": "merged",
    "open_date": "2020-09-24T15:08:17Z",
    "update_date": "2020-09-28T06:41:59Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "9eb54ad40f57b90d9c3b611a930994f99a46c7ea",
        "message": "Adding `det_mx11`",
        "date": "2020-09-24T15:07:52Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 597,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 24,
        "deletions": 4
      },
      {
        "file": "mathcomp/algebra/mxalgebra.v",
        "status": "M",
        "additions": 24,
        "deletions": 4
      },
      {
        "file": "mathcomp/algebra/ssralg.v",
        "status": "M",
        "additions": 24,
        "deletions": 4
      }
    ],
    "state": "merged",
    "open_date": "2020-09-24T15:03:47Z",
    "update_date": "2020-09-28T14:01:57Z",
    "discussion": [
      {
        "author": "affeldt-aist",
        "date": "2020-09-28T01:29:01Z",
        "comment": "Lemmas `raddf_inj` and `raddf_eq0` look like they could be merged in a single lemma stated with an equivalence but i suspect that it would make it less practical, is that correct? "
      },
      {
        "author": "CohenCyril",
        "date": "2020-09-28T08:20:17Z",
        "comment": "> Lemmas `raddf_inj` and `raddf_eq0` look like they could be merged in a single lemma stated with an equivalence but i suspect that it would make it less practical, is that correct?\r\n\r\nYes indeed. From injectivity one may want to rewrite, but to prove it, one would rather prove a single implication."
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "97ccfcfb1e48d7a203ee61543e882baa3f71895f",
        "message": "Injectivity for additive functions and mulmxr.",
        "date": "2020-09-28T08:32:11Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 596,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 4,
        "deletions": 0
      },
      {
        "file": "mathcomp/algebra/ssralg.v",
        "status": "M",
        "additions": 4,
        "deletions": 0
      }
    ],
    "state": "closed",
    "open_date": "2020-09-24T14:07:16Z",
    "update_date": "2020-10-13T16:55:45Z",
    "discussion": [
      {
        "author": "chdoc",
        "date": "2020-09-29T09:29:23Z",
        "comment": "This looks a bit bespoke to me, what's the motivation or where is this useful? "
      },
      {
        "author": "CohenCyril",
        "date": "2020-09-29T10:43:56Z",
        "comment": "https://github.com/CohenCyril/signdet/blob/master/signdet.v#L318, ideally that would be `mulrn x` is injective, but that's true only if the characteristic of the ring is `0`. With `b` it's always true. Morever `x *+ b` is a shorthand for `if b then x else 0`, and this boolean might be a membership or an equality, so the injectivity allows to traceback the truthvalue of the said boolean proposition, according to whether the result was zero or not. Thus, I think it can be of general interest."
      },
      {
        "author": "chdoc",
        "date": "2020-09-29T11:30:27Z",
        "comment": "@CohenCyril I can't merge this, so what should I do now? Who, apart from you, is most familiar with that part of the library?"
      },
      {
        "author": "CohenCyril",
        "date": "2020-09-29T11:37:10Z",
        "comment": "woops, I think @thery, @gares, @pi8027, @strub might all be good candidates"
      },
      {
        "author": "thery",
        "date": "2020-09-29T20:14:15Z",
        "comment": "@CohenCyril sorry too cryptic for me, don't see how this could be a reusable theorem.\r\n"
      },
      {
        "author": "CohenCyril",
        "date": "2020-09-30T12:06:59Z",
        "comment": "> @CohenCyril sorry too cryptic for me, don't see how this could be a reusable theorem.\r\n\r\nWell I do think it is reusable. Let me try to explain it another way.\r\n\r\nThe construction `x *+ b` is `x` if `b` otherwise `0`, it is frequently used in combination with membership (e.g. `x \\in G`) or Kronecker symbol (`i == j`), the latter gives a \"Dirac\" function `fun j => x *+ (i == j)` which is thus injective through `mulrIb`.\r\nThis is used pervasively in the representation of diagonal matrices `\\matrix_(i, j) (d 0 i *+ (i == j))`, and this lemma helps identifying nonzero values of the matrix with elements of the diagonal.\r\n\r\nIn other words again, this lemma, explains these \"Dirac/weight function\" are injective on  `b` as long as `x` is nonzero, which allows to infer the validity of `b` (i.e.  `i == j`, or `i \\in G`, depending on the use cases) from the nullity of `x`."
      },
      {
        "author": "thery",
        "date": "2020-09-30T13:42:34Z",
        "comment": "@CohenCyril I've understood what it is your use case, but I just doubt it will be reused in other places."
      },
      {
        "author": "CohenCyril",
        "date": "2020-10-01T10:06:35Z",
        "comment": "What is the conclusion?"
      },
      {
        "author": "thery",
        "date": "2020-10-01T11:23:02Z",
        "comment": "not a fan\r\n"
      },
      {
        "author": "chdoc",
        "date": "2020-10-13T09:30:05Z",
        "comment": "@thery @CohenCyril As the assignee for this PR, I would be happy if we could make progress towards either merging or closing this PR. Personally, I don't think this one-liner will hurt, so I would be in favor of merging it, even if it may be slightly bespoke. \r\n\r\n@CohenCyril How often is this lemma used in your developments?"
      },
      {
        "author": "thery",
        "date": "2020-10-13T09:58:41Z",
        "comment": "@chdoc as I said I am not a big fan, but it will not keep me from sleeping at night if it is merged. My only point if If it is a general construction it should at least be documented. \r\nAs a naive user I would  have missed the theorem, as I would have coded the gard as\r\n`(b%:R * e)` as I feel more at ease manipulating `*` than `*+`\r\n "
      },
      {
        "author": "CohenCyril",
        "date": "2020-10-13T16:48:20Z",
        "comment": "I use it only once so far. Let's close it, I will reopen it if another occurence pops up"
      }
    ],
    "review_discussion": [
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2020-10-06T04:53:17Z",
        "comment": "I have no opinion on how it is useful, but this should be exported from `GRing.Theory`.\r\n"
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "44427ba49ff61c3c403f708ffd3f8619a4d69807",
        "message": "Adding `mulrIb`",
        "date": "2020-09-28T14:17:51Z"
      }
    ]
  },
  {
    "author": "chdoc",
    "number": 594,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 12,
        "deletions": 4
      },
      {
        "file": "mathcomp/ssreflect/eqtype.v",
        "status": "M",
        "additions": 12,
        "deletions": 4
      }
    ],
    "state": "merged",
    "open_date": "2020-09-16T10:10:43Z",
    "update_date": "2020-09-16T18:56:59Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2020-09-16T10:35:46Z",
        "comment": "To be merged as soon as CI passes."
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "chdoc",
        "committer": "chdoc",
        "hash": "ddac4a5d1e560458c61faf81c14db8abfdd06a0c",
        "message": "add missing contra lemmas (fixes #587)",
        "date": "2020-09-16T10:08:45Z"
      }
    ]
  },
  {
    "author": "affeldt-aist",
    "number": 593,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 89,
        "deletions": 48
      },
      {
        "file": "mathcomp/algebra/ssrnum.v",
        "status": "M",
        "additions": 89,
        "deletions": 48
      },
      {
        "file": "mathcomp/ssreflect/order.v",
        "status": "M",
        "additions": 89,
        "deletions": 48
      }
    ],
    "state": "merged",
    "open_date": "2020-09-12T08:04:22Z",
    "update_date": "2020-10-22T10:02:50Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2020-09-15T15:22:43Z",
        "comment": "I think a similar result should appear in `order.v` for comparable elements."
      },
      {
        "author": "affeldt-aist",
        "date": "2020-09-15T16:44:40Z",
        "comment": "> I think a similar result should appear in `order.v` for comparable elements.\r\n\r\nI guess that's not what you want, I'll investigate more tomorrow."
      },
      {
        "author": "CohenCyril",
        "date": "2020-09-15T17:24:15Z",
        "comment": "> > I think a similar result should appear in `order.v` for comparable elements.\r\n> \r\n> I guess that's not what you want, I'll investigate more tomorrow.\r\n\r\nnot at all indeed ... It should look like:\r\n```coq\r\n{in P, forall x, x >=< x0} -> {in P &, forall i j, f x >=< f y} ->\r\nall (>=< \\big[max/x0]_(i <- s | P i) f i) (x :: s).\r\n```\r\nWith perhaps a particular case for `x` and for `s` when `I` is an `eqType`."
      },
      {
        "author": "CohenCyril",
        "date": "2020-09-17T11:11:41Z",
        "comment": "Subsidiary question: shouldn't we have a generic `comparable_big` which generalizes both `comparable_bigmax` and  `comparable_bigmin` under the assumption that the iterated operation preserves comparability?"
      },
      {
        "author": "affeldt-aist",
        "date": "2020-09-17T14:48:38Z",
        "comment": "> Subsidiary question: shouldn't we have a generic `comparable_big` which generalizes both `comparable_bigmax` and `comparable_bigmin` under the assumption that the iterated operation preserves comparability?\r\n\r\nIndeed. But with the new `comparable_big`, the old `comparable_bigmax`\r\nis not exactly `comparable_big comparable_maxl` because of the order of arguments of `comparable_maxl`.\r\n(BTW, I changed the notation `>=< x` because it looked counter-intuitive to me.)\r\n"
      },
      {
        "author": "CohenCyril",
        "date": "2020-09-26T20:54:20Z",
        "comment": "> > Subsidiary question: shouldn't we have a generic `comparable_big` which generalizes both `comparable_bigmax` and `comparable_bigmin` under the assumption that the iterated operation preserves comparability?\r\n> \r\n> Indeed. But with the new `comparable_big`, the old `comparable_bigmax`\r\n> is not exactly `comparable_big comparable_maxl` because of the order of arguments of `comparable_maxl`.\r\n\r\nThen swap the arguments ;)\r\n\r\n> (BTW, I changed the notation `>=< x` because it looked counter-intuitive to me.)\r\n\r\nYou are right!\r\n\r\n"
      },
      {
        "author": "CohenCyril",
        "date": "2020-09-26T21:58:20Z",
        "comment": "BTW, making `comparable_minl` and `comparable_maxl` hints make `rewrite comparable_big//` simplify side conditions automatically if one rephrases them. I took the liberty to patch your PR, ~but I cannot seem to push in your branch, did you authorize pushs from maintainers?~ (my mistake)"
      },
      {
        "author": "CohenCyril",
        "date": "2020-09-26T22:06:56Z",
        "comment": "and ... rebased"
      },
      {
        "author": "CohenCyril",
        "date": "2020-10-09T11:40:03Z",
        "comment": "> The definition of `>=< y` in ssrnum should also be changed.\r\n\r\n@affeldt-aist do you think you can do it?"
      },
      {
        "author": "affeldt-aist",
        "date": "2020-10-09T12:11:42Z",
        "comment": "> > The definition of `>=< y` in ssrnum should also be changed.\r\n> \r\n> @affeldt-aist do you think you can do it?\r\n\r\nI'll try to by monday.\r\n"
      },
      {
        "author": "pi8027",
        "date": "2020-10-22T02:21:31Z",
        "comment": "@CohenCyril Can you confirm the last commit and merge this PR?"
      }
    ],
    "review_discussion": [
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2020-09-14T16:40:56Z",
        "comment": "```suggestion\r\nLemma max_real x y : x \\is real -> y \\is real -> max x y \\is real.\r\nProof. by case: leP. Qed.\r\n\r\nLemma min_real x y : x \\is real -> y \\is real -> min x y \\is real.\r\nProof. by case: leP. Qed.\r\n```"
      },
      {
        "author": "pi8027",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2020-09-15T05:16:42Z",
        "comment": "\"Do not edit former entries.\""
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2020-09-15T05:20:15Z",
        "comment": "In this section, `R` is a `realDomainType`. They should be located in a section that assumes `R : numDomainType` (e.g., somewhere after `Lemma real_ltgt0P` in `NumDomainOperationTheory`)."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2020-09-15T05:46:43Z",
        "comment": "So `case: leP` should not be applicable to prove them. Use `real_leP` instead."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2020-09-15T09:40:18Z",
        "comment": "```suggestion\r\n  x \\is real -> {in D, forall t : T, f t \\is real} ->\r\n```\r\nShould we also have `bigmin_real`?"
      },
      {
        "author": "pi8027",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2020-09-15T09:40:53Z",
        "comment": "```suggestion\r\n- in `ssrnum.v`, new lemmas `max_real`, `min_real`, `bigmax_real`\r\n\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2020-09-15T11:46:25Z",
        "comment": "Yes we should."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2020-09-15T11:47:30Z",
        "comment": "There are two possible phrasing for `forall t : T, t \\in D -> f t \\is real` :\r\n- either `{in D, forall t : T, f t \\is real}`,\r\n- or `{homo f : x / D >-> mem real}`\r\n"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2020-09-15T12:46:24Z",
        "comment": "~I suspect (and hope) this to be a one-liner in `T^d`, e.g.~\r\n~`Proof. exact: (@bigmax_real [eqType of T^d]). Qed.`~\r\nEdit: nop sorry, my bad."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2020-09-15T15:20:20Z",
        "comment": "The best practice is to have a conditional big with a `in` on the predicate, this allows the index type (renamed from `T` to `I`) to be any type (not necessarily an `eqType`). One can recover the desired behavior thanks to `big_seq_cond`.\r\n```suggestion\r\nLemma bigmax_real I x0 (r : seq I) (P : pred I) (f : I -> R):\r\n  x0 \\is real -> {in P, forall i, f i \\is real} ->\r\n  \\big[max/x0]_(i <- r | P i) f i \\is real.\r\nProof.\r\nby move=> x0r Pr; elim/big_rec : _ => // i x Pi xr; rewrite max_real ?Pr.\r\nQed.\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2020-09-15T15:21:07Z",
        "comment": "Same remark:\r\n```suggestion\r\nLemma bigmin_real I x0 (r : seq I) (P : pred I) (f : I -> R):\r\n  x0 \\is real -> {in P, forall i, f i \\is real} ->\r\n  \\big[min/x0]_(i <- r | P i) f i \\is real.\r\nProof.\r\nby move=> x0r Pr; elim/big_rec : _ => // i x Pi xr; rewrite min_real ?Pr.\r\nQed.\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/order.v",
        "date": "2020-09-17T11:05:14Z",
        "comment": "Given the nice phrasing you found for `comparable_bigmin` these `all` variants seem useless to me. If needed, it's easy to prove on the spot without induction.\r\n```suggestion\r\n\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/order.v",
        "date": "2020-09-17T11:06:49Z",
        "comment": "```suggestion\r\nLemma comparable_bigmax x x0 I (P : pred I) (s : seq I) F :\r\n   x0 >=< x -> {in P, forall i, F i >=< x} ->\r\n  \\big[max/x0]_(i <- s | P i) F i >=< x.\r\nProof. by move=> ? ?; elim/big_ind : _ => // y z; exact: comparable_maxl. Qed.\r\n\r\nLemma comparable_bigmin x x0 I (P : pred I) (s : seq I) F :\r\n   x0 >=< x -> {in P, forall i, f i >=< x} ->\r\n  \\big[min/x0]_(i <- s | P i) f i >=< x.\r\nProof. by move=> ? ?; elim/big_ind : _ => // y z; exact: comparable_minl. Qed.\r\n```\r\ncosmetics + reordering arguments according to my intuition of what might be most useful..."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2020-09-17T11:10:05Z",
        "comment": "Naive question is this simply `exact: comparable_bigmax`, `exact: comparable_bigmin` now?"
      },
      {
        "author": "affeldt-aist",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2020-09-17T14:43:23Z",
        "comment": "Almost. Modulo `comparabler0` rewrites which make the script longer than a single line. "
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2020-09-26T20:55:56Z",
        "comment": "But now with `comparable_big` isn't it better?"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/order.v",
        "date": "2020-09-26T21:22:21Z",
        "comment": "This hypothesis is too weak..."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2020-09-26T22:29:39Z",
        "comment": "it is, with `comparable_bigr` !"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/order.v",
        "date": "2020-09-26T22:30:51Z",
        "comment": "better now"
      },
      {
        "author": "pi8027",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2020-09-27T02:01:24Z",
        "comment": "```suggestion\r\n  `max_real`, `min_real`, `bigmax_real`, and `bigmin_real`.\r\n```"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/order.v",
        "date": "2020-09-27T02:06:37Z",
        "comment": "The ordering of arguments of `comparable` has been changed here. This should be recorded in CHANGELOG in my opinion. Otherwise, this should be `comparable y x`.\r\n\r\nBTW, I don't see why we define `>=< _` twice in here and L.1157 (but not from this PR)."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/order.v",
        "date": "2020-09-27T11:11:12Z",
        "comment": "> The ordering of arguments of `comparable` has been changed here. This should be recorded in CHANGELOG in my opinion. Otherwise, this should be `comparable y x`.\r\n\r\nYes, it must be documented and the change is intentional.\r\n\r\n> BTW, I don't see why we define `>=< _` twice in here and L.1157 (but not from this PR).\r\n\r\nI think this is the unfortunate result of a copy paste from `<=` and `>=` and the fact the symbol  `>=<` is symmetric.\r\n\r\n"
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "1cacfb8f5dd8307adbc48b67474055ce455a168d",
        "message": "lemma used in mathcomp-analysis\n\nCo-authored-by: Cyril Cohen <cohen@crans.org>\nCo-authored-by: Kazuhiko Sakaguchi <pi8027@gmail.com>",
        "date": "2020-10-12T00:22:18Z"
      },
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "e2fb620d4a2bb6da26d344b69f22befdde09b1d0",
        "message": "comparable_big lemma in order.v",
        "date": "2020-10-12T00:25:40Z"
      },
      {
        "author": "CohenCyril",
        "committer": "affeldt-aist",
        "hash": "bf736cf6aaec0bca0d0202b8686d253123bf4af2",
        "message": "Reorganizing relation between comparability/real and big",
        "date": "2020-10-12T00:25:40Z"
      },
      {
        "author": "CohenCyril",
        "committer": "affeldt-aist",
        "hash": "6f0f46fc2249023924f62d4400014a500474e1b0",
        "message": "Update CHANGELOG_UNRELEASED.md\n\nCo-authored-by: Kazuhiko Sakaguchi <pi8027@gmail.com>",
        "date": "2020-10-12T00:25:40Z"
      },
      {
        "author": "CohenCyril",
        "committer": "affeldt-aist",
        "hash": "f5840a92d26d4436582e05b60bcd6fcf2a2a18ff",
        "message": "Fixing and documenting the change of meaning of `>=< y`",
        "date": "2020-10-12T00:31:22Z"
      },
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "d02fbd82f7bfe06c37dfe5edb05d0ed36a82811b",
        "message": "fix the >=< notation in ssrnum as well",
        "date": "2020-10-12T03:55:06Z"
      }
    ]
  },
  {
    "author": "chdoc",
    "number": 592,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 141,
        "deletions": 115
      },
      {
        "file": "mathcomp/character/classfun.v",
        "status": "M",
        "additions": 141,
        "deletions": 115
      },
      {
        "file": "mathcomp/character/inertia.v",
        "status": "M",
        "additions": 141,
        "deletions": 115
      },
      {
        "file": "mathcomp/character/integral_char.v",
        "status": "M",
        "additions": 141,
        "deletions": 115
      },
      {
        "file": "mathcomp/character/vcharacter.v",
        "status": "M",
        "additions": 141,
        "deletions": 115
      },
      {
        "file": "mathcomp/fingroup/action.v",
        "status": "M",
        "additions": 141,
        "deletions": 115
      },
      {
        "file": "mathcomp/fingroup/automorphism.v",
        "status": "M",
        "additions": 141,
        "deletions": 115
      },
      {
        "file": "mathcomp/fingroup/fingroup.v",
        "status": "M",
        "additions": 141,
        "deletions": 115
      },
      {
        "file": "mathcomp/fingroup/gproduct.v",
        "status": "M",
        "additions": 141,
        "deletions": 115
      },
      {
        "file": "mathcomp/fingroup/morphism.v",
        "status": "M",
        "additions": 141,
        "deletions": 115
      },
      {
        "file": "mathcomp/fingroup/perm.v",
        "status": "M",
        "additions": 141,
        "deletions": 115
      },
      {
        "file": "mathcomp/fingroup/quotient.v",
        "status": "M",
        "additions": 141,
        "deletions": 115
      },
      {
        "file": "mathcomp/solvable/abelian.v",
        "status": "M",
        "additions": 141,
        "deletions": 115
      },
      {
        "file": "mathcomp/solvable/center.v",
        "status": "M",
        "additions": 141,
        "deletions": 115
      },
      {
        "file": "mathcomp/solvable/commutator.v",
        "status": "M",
        "additions": 141,
        "deletions": 115
      },
      {
        "file": "mathcomp/solvable/cyclic.v",
        "status": "M",
        "additions": 141,
        "deletions": 115
      },
      {
        "file": "mathcomp/solvable/extremal.v",
        "status": "M",
        "additions": 141,
        "deletions": 115
      },
      {
        "file": "mathcomp/solvable/finmodule.v",
        "status": "M",
        "additions": 141,
        "deletions": 115
      },
      {
        "file": "mathcomp/solvable/hall.v",
        "status": "M",
        "additions": 141,
        "deletions": 115
      },
      {
        "file": "mathcomp/solvable/jordanholder.v",
        "status": "M",
        "additions": 141,
        "deletions": 115
      },
      {
        "file": "mathcomp/solvable/maximal.v",
        "status": "M",
        "additions": 141,
        "deletions": 115
      },
      {
        "file": "mathcomp/solvable/primitive_action.v",
        "status": "M",
        "additions": 141,
        "deletions": 115
      },
      {
        "file": "mathcomp/ssreflect/binomial.v",
        "status": "M",
        "additions": 141,
        "deletions": 115
      },
      {
        "file": "mathcomp/ssreflect/finset.v",
        "status": "M",
        "additions": 141,
        "deletions": 115
      },
      {
        "file": "mathcomp/ssreflect/ssrfun.v",
        "status": "M",
        "additions": 141,
        "deletions": 115
      }
    ],
    "state": "merged",
    "open_date": "2020-09-10T17:01:40Z",
    "update_date": "2020-09-29T11:24:57Z",
    "discussion": [
      {
        "author": "chdoc",
        "date": "2020-09-16T10:13:54Z",
        "comment": "@CohenCyril @gares can I get an assignee? "
      },
      {
        "author": "CohenCyril",
        "date": "2020-09-16T10:30:16Z",
        "comment": "@ggonthier @thery could you review this PR?"
      },
      {
        "author": "thery",
        "date": "2020-09-29T07:02:01Z",
        "comment": "@chdoc if you change the wording as sugested by @gares I think we can merge this PR"
      },
      {
        "author": "chdoc",
        "date": "2020-09-29T09:15:18Z",
        "comment": "Reworded and rebased. "
      },
      {
        "author": "CohenCyril",
        "date": "2020-09-29T10:51:16Z",
        "comment": "@thery waiting for your \"green tick\"  :heavy_check_mark:  :wink:"
      },
      {
        "author": "thery",
        "date": "2020-09-29T10:53:14Z",
        "comment": ":heavy_check_mark:\r\n"
      },
      {
        "author": "CohenCyril",
        "date": "2020-09-29T11:23:10Z",
        "comment": "... I meant \"Approve PR\" and stuff, but that works for me too."
      }
    ],
    "review_discussion": [
      {
        "author": "CohenCyril",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2020-09-16T10:28:01Z",
        "comment": "tick (`` ` ``) missing"
      },
      {
        "author": "chdoc",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2020-09-16T10:37:21Z",
        "comment": "missing tick added"
      },
      {
        "author": "thery",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2020-09-28T08:56:14Z",
        "comment": "Don't like this idea of temporary name. @maximedenes how coq deals with this kind of situation?"
      },
      {
        "author": "CohenCyril",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2020-09-28T09:00:26Z",
        "comment": "This strategy was discussed [here](https://github.com/math-comp/math-comp/wiki/Minutes-June-30-2020) I cannot recall whether @maximedenes attended though..."
      },
      {
        "author": "thery",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2020-09-28T09:12:27Z",
        "comment": "I wasn't there either :wink: still not a fan of temporary names\r\n"
      },
      {
        "author": "gares",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2020-09-28T09:19:02Z",
        "comment": "You can say \"these names will lose the _eq suffix in the next release\", it may be of interest to the user. The reason why is not really helping IMO, and here you are not anyway suggesting we plan to use the ideal names in the future."
      },
      {
        "author": "gares",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2020-09-28T09:20:15Z",
        "comment": "I don't recall a case like this in Coq."
      },
      {
        "author": "thery",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2020-09-28T09:23:48Z",
        "comment": "If everybody like temporary names, then @CohenCyril could already make the next pull request for 1.13 so we are sure theses names wil disappear."
      },
      {
        "author": "chdoc",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2020-09-28T09:27:17Z",
        "comment": "> Don't like this idea of temporary name. @maximedenes how coq deals with this kind of situation?\r\n\r\nI don't like the temporary names either, but I don't see another way without causing a breaking change. And this seems to minor an issue to cause a breaking change. \r\n\r\n> You can say \"these names will lose the _eq suffix in the next release\", it may be of interest to the user. The reason why is not really helping IMO, and here you are not anyway suggesting we plan to use the ideal names in the future.\r\n\r\nI was merely following the formulations used by Cyril in #492 \r\n\r\n> If everybody like temporary names, then @CohenCyril could already make the next pull request for 1.13 so we are sure theses names wil disappear.\r\n\r\nThis is an \"after merge\" Item, again as in #492 "
      },
      {
        "author": "chdoc",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2020-09-28T09:28:29Z",
        "comment": "It can't be a pull request yet, because the things to be removed aren't there yet ..."
      },
      {
        "author": "thery",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2020-09-28T09:52:03Z",
        "comment": "@chdoc sorry I am reviewing too many pull requests by cyril I thought it was one of his too.\r\n"
      },
      {
        "author": "CohenCyril",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2020-09-28T11:57:41Z",
        "comment": "> It can't be a pull request yet, because the things to be removed aren't there yet ...\r\n\r\nActually, it could be, I did not think about it before, but it just needs to be a pr on top of this one :laughing: "
      }
    ],
    "tags": [
      {
        "tag": "kind: refactoring",
        "description": "Issue or PR about a refactoring. (reorganizing the code, reusing theorems, simplifications...)"
      }
    ],
    "commits": [
      {
        "author": "chdoc",
        "committer": "chdoc",
        "hash": "298830c5a3860c7a645df6effe7d1cc228d56150",
        "message": "rename mem_imset to imset_f (with deprecation)",
        "date": "2020-09-29T09:10:31Z"
      },
      {
        "author": "chdoc",
        "committer": "chdoc",
        "hash": "5b31a9e767694ce134fdff4461a876411eba0f2d",
        "message": "rename mem_imset2 to imset2_f (with deprecation)",
        "date": "2020-09-29T09:10:31Z"
      },
      {
        "author": "chdoc",
        "committer": "chdoc",
        "hash": "94e1bf37bbdabe3f2cf300e60a8c4eb856aa4819",
        "message": "new mem_imset lemmas",
        "date": "2020-09-29T09:10:31Z"
      },
      {
        "author": "chdoc",
        "committer": "chdoc",
        "hash": "544d89a7711be2f25c3a845130e5cede590bc766",
        "message": "CHANGELOG entries",
        "date": "2020-09-29T09:10:31Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 591,
    "diff_summary": [
      {
        "file": ".github/workflows/nix.yml",
        "status": "A",
        "additions": 1161,
        "deletions": 1197
      },
      {
        "file": ".gitlab-ci.yml",
        "status": "A",
        "additions": 1161,
        "deletions": 1197
      },
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "A",
        "additions": 1161,
        "deletions": 1197
      },
      {
        "file": "mathcomp/Make",
        "status": "A",
        "additions": 1161,
        "deletions": 1197
      },
      {
        "file": "mathcomp/Make.test-suite",
        "status": "A",
        "additions": 1161,
        "deletions": 1197
      },
      {
        "file": "mathcomp/_CoqProject",
        "status": "A",
        "additions": 1161,
        "deletions": 1197
      },
      {
        "file": "mathcomp/algebra/countalg.v",
        "status": "A",
        "additions": 1161,
        "deletions": 1197
      },
      {
        "file": "mathcomp/algebra/finalg.v",
        "status": "A",
        "additions": 1161,
        "deletions": 1197
      },
      {
        "file": "mathcomp/algebra/ssralg.v",
        "status": "A",
        "additions": 1161,
        "deletions": 1197
      },
      {
        "file": "mathcomp/algebra/ssrnum.v",
        "status": "A",
        "additions": 1161,
        "deletions": 1197
      },
      {
        "file": "mathcomp/algebra/vector.v",
        "status": "A",
        "additions": 1161,
        "deletions": 1197
      },
      {
        "file": "mathcomp/field/falgebra.v",
        "status": "A",
        "additions": 1161,
        "deletions": 1197
      },
      {
        "file": "mathcomp/field/fieldext.v",
        "status": "A",
        "additions": 1161,
        "deletions": 1197
      },
      {
        "file": "mathcomp/field/galois.v",
        "status": "A",
        "additions": 1161,
        "deletions": 1197
      },
      {
        "file": "mathcomp/ssreflect/choice.v",
        "status": "A",
        "additions": 1161,
        "deletions": 1197
      },
      {
        "file": "mathcomp/ssreflect/fintype.v",
        "status": "A",
        "additions": 1161,
        "deletions": 1197
      },
      {
        "file": "mathcomp/ssreflect/order.v",
        "status": "A",
        "additions": 1161,
        "deletions": 1197
      },
      {
        "file": "mathcomp/test_suite/test_regular_conv.v",
        "status": "A",
        "additions": 1161,
        "deletions": 1197
      }
    ],
    "state": "merged",
    "open_date": "2020-09-10T12:29:19Z",
    "update_date": "2020-10-07T22:35:54Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2020-09-10T12:37:49Z",
        "comment": "I am curious about the new performances..."
      },
      {
        "author": "pi8027",
        "date": "2020-09-10T12:44:48Z",
        "comment": "Yes. It will be nice to have benchmarks, including this commented out proof: https://github.com/math-comp/math-comp/blob/c2e7bad5c95a11f42f9f6d282ee2e5d84e27cbed/mathcomp/field/fieldext.v#L1584-L1592"
      },
      {
        "author": "pi8027",
        "date": "2020-09-10T13:09:02Z",
        "comment": "The source of CI failure seems to be coq/coq#9508 which has been fixed in coq/coq#9509. I see there is a possible fix, but since we are about to drop compatibility with Coq (< 8.10), I would rather stop supporting Coq 8.7 and 8.8."
      },
      {
        "author": "pi8027",
        "date": "2020-09-17T08:47:29Z",
        "comment": "Here are some benchmarking results using Coq 8.12.0:\r\n- MathComp `master` (c2e7bad)\r\n  ```\r\n  make test-suite  1072.06s user 20.45s system 99% cpu 18:19.47 total\r\n  ```\r\n- MathComp `primitive-class-records` (a4cb449)\r\n  ```\r\n  make test-suite  1004.05s user 21.26s system 99% cpu 17:12.96 total\r\n  ```\r\n- Odd order (689f07b) with MathComp `master`\r\n  ```\r\n  make  1323.96s user 11.20s system 99% cpu 22:24.46 total\r\n  ```\r\n- Odd order with MathComp `primitive-class-records`\r\n  ```\r\n  make  1318.69s user 11.22s system 99% cpu 22:18.43 total\r\n  ```\r\n\r\nSo it seems that this PR improves the performance of conversion and/or inference regarding packed classes."
      },
      {
        "author": "CohenCyril",
        "date": "2020-09-17T13:59:10Z",
        "comment": "> Here are some benchmarking results using Coq 8.12.0:\r\n> \r\n> * MathComp `master` ([c2e7bad](https://github.com/math-comp/math-comp/commit/c2e7bad5c95a11f42f9f6d282ee2e5d84e27cbed))\r\n>   ```\r\n>   make test-suite  1072.06s user 20.45s system 99% cpu 18:19.47 total\r\n>   ```\r\n> * MathComp `primitive-class-records` ([a4cb449](https://github.com/math-comp/math-comp/commit/a4cb44953aaf82a3e568e8577ef70cb38f4d9803))\r\n>   ```\r\n>   make test-suite  1004.05s user 21.26s system 99% cpu 17:12.96 total\r\n>   ```\r\n> * Odd order (689f07b) with MathComp `master`\r\n>   ```\r\n>   make  1323.96s user 11.20s system 99% cpu 22:24.46 total\r\n>   ```\r\n> * Odd order with MathComp `primitive-class-records`\r\n>   ```\r\n>   make  1318.69s user 11.22s system 99% cpu 22:18.43 total\r\n>   ```\r\n> \r\n> So it seems that this PR improves the performance of conversion and/or inference regarding packed classes.\r\n\r\nI would rather say the benchmark does not reveal significant impact.\r\nWhat about: https://github.com/math-comp/math-comp/blob/c2e7bad5c95a11f42f9f6d282ee2e5d84e27cbed/mathcomp/field/fieldext.v#L1584-L1592?"
      },
      {
        "author": "pi8027",
        "date": "2020-09-23T07:38:00Z",
        "comment": "> I would rather say the benchmark does not reveal significant impact.\r\n> What about:\r\n> \r\n> https://github.com/math-comp/math-comp/blob/c2e7bad5c95a11f42f9f6d282ee2e5d84e27cbed/mathcomp/field/fieldext.v#L1584-L1592\r\n> \r\n> ?\r\n\r\nIn Coq 8.12 and MathComp `master`, it takes 4.304 seconds. In this PR, it takes 3.284 seconds."
      },
      {
        "author": "CohenCyril",
        "date": "2020-09-25T12:28:58Z",
        "comment": "@ggonthier do you agree?"
      },
      {
        "author": "CohenCyril",
        "date": "2020-09-29T11:28:36Z",
        "comment": "Since merging this PR will make us drop support for Coq < 8.9, I think it should be approved in the next meeting before being merged. But as for me, it's all good."
      },
      {
        "author": "pi8027",
        "date": "2020-10-07T15:57:41Z",
        "comment": "Shall we merge?"
      }
    ],
    "review_discussion": [
      {
        "author": "pi8027",
        "file": "mathcomp/test_suite/test_regular_conv.v",
        "date": "2020-10-07T08:56:27Z",
        "comment": "I will put some comments to make it clear that which tests fail without primitive class records."
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "ad55cb4128382852370ea53d36f4d21a83274e8b",
        "message": "Turn class_of records into primitive records and get rid of the xclass idiom",
        "date": "2020-10-07T14:23:26Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "a7a8adad88825f2e5396dc8698e0b912550807c6",
        "message": "Add a CHANGELOG entry",
        "date": "2020-10-07T14:23:26Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 588,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 17,
        "deletions": 0
      },
      {
        "file": "mathcomp/ssreflect/order.v",
        "status": "M",
        "additions": 17,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2020-09-09T23:20:20Z",
    "update_date": "2020-09-17T12:45:06Z",
    "discussion": [
      {
        "author": "pi8027",
        "date": "2020-09-09T23:59:38Z",
        "comment": "Since the removal does not break compilation, I think this fix is \"indirect\" in some sense. So it is probably better to redefine these big notations using `\\big[dual_join/dual_bottom]_` and `\\big[dual_meet/dual_top]_`. BTW, why we do not have `0^d` and `1^d` notations in the `order_scope`?"
      },
      {
        "author": "CohenCyril",
        "date": "2020-09-10T00:03:18Z",
        "comment": "> Since the removal does not break compilation, I think this fix is \"indirect\" in some sense. So it is probably better to redefine these big notations using `\\big[dual_join/dual_bottom]_` and `\\big[dual_meet/dual_top]_`.\r\n\r\nI am ok with the current fix but with a comment explaining the reason for the local notations (I think I did not see the point and deleted them because of that).\r\n\r\n> BTW, why we do not have 0^d and 1^d notations in the order_scope?\r\n\r\nForgetfulness? Let's add them."
      },
      {
        "author": "pi8027",
        "date": "2020-09-10T14:05:24Z",
        "comment": "Done."
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "15e57ba36d2b0b96da80679f01c5915137b9ea77",
        "message": "Fix big meet and join notations for dual_display, and add `0^d` and `1^d` notations",
        "date": "2020-09-17T09:30:03Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 586,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 92,
        "deletions": 0
      },
      {
        "file": "mathcomp/algebra/mxalgebra.v",
        "status": "M",
        "additions": 92,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2020-09-08T20:26:45Z",
    "update_date": "2020-11-16T20:02:37Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2020-11-12T22:14:26Z",
        "comment": "@Boutry @thery do you think there is a chance you have the time to do a review before the release?"
      },
      {
        "author": "Boutry",
        "date": "2020-11-13T14:49:23Z",
        "comment": "> @Boutry @thery do you think there is a chance you have the time to do a review before the release?\r\n\r\nI will try and do it by Monday. Do you have examples of reviews? I checked some of the closed PR and there were few comments. So I am still a bit unclear about how a review should look like. (I looked at the checklist though.)"
      },
      {
        "author": "CohenCyril",
        "date": "2020-11-13T16:33:33Z",
        "comment": "I guess you could take example from similar PRs (some went through as they were, others required more work):\r\n- https://github.com/math-comp/math-comp/pull/618\r\n- https://github.com/math-comp/math-comp/pull/585\r\n- https://github.com/math-comp/math-comp/pull/574\r\n- https://github.com/math-comp/math-comp/pull/558"
      },
      {
        "author": "Boutry",
        "date": "2020-11-16T15:48:16Z",
        "comment": "> I guess you could take example from similar PRs (some went through as they were, others required more work):\r\n> \r\n> * #618\r\n> * #585\r\n> * #574\r\n> * #558\r\n\r\nThank you for the links. I believe line 284 in the Changelog belongs to another PR. Aside from that everything looks good to me."
      },
      {
        "author": "CohenCyril",
        "date": "2020-11-16T16:20:44Z",
        "comment": "@Boutry I attended the issue, thanks for pointing it out.\r\n\r\nPlease click on \"Files changed\" , then \"Review changes\", then type a review and click on \"Approve\", or if you changed your mind \"Comment\" or \"Request Changes\". Then ask a core developer to merge if you accepted, by tagging `@math-comp/core`."
      },
      {
        "author": "Boutry",
        "date": "2020-11-16T16:29:47Z",
        "comment": "Doesn't Laurent need to approve it as well?"
      },
      {
        "author": "CohenCyril",
        "date": "2020-11-16T16:43:03Z",
        "comment": "> Doesn't Laurent need to approve it as well?\r\n\r\nAsk @ybertot "
      },
      {
        "author": "Boutry",
        "date": "2020-11-16T16:45:00Z",
        "comment": "He just called me and seems fine with just my approval. Thank you for the help!"
      },
      {
        "author": "CohenCyril",
        "date": "2020-11-16T16:50:44Z",
        "comment": "@math-comp/core when CI passes, I guess you can merge. Grazie mille"
      },
      {
        "author": "Boutry",
        "date": "2020-11-16T17:33:53Z",
        "comment": "CI passed."
      },
      {
        "author": "gares",
        "date": "2020-11-16T20:02:17Z",
        "comment": "I don't get exactly how this merge process works, but I guess che posso premere il bottone"
      }
    ],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: enhancement",
        "description": "Issue or PR about addition of features."
      }
    ],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "a52c2ba1ff392d3160875e563f28a3d094011111",
        "message": "Maximal rank and full rank row submatrices",
        "date": "2020-11-16T16:16:16Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 585,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 168,
        "deletions": 0
      },
      {
        "file": "mathcomp/algebra/mxpoly.v",
        "status": "M",
        "additions": 168,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2020-09-08T19:54:17Z",
    "update_date": "2020-09-29T20:16:09Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2020-09-29T11:40:37Z",
        "comment": "@thery are you ok with a merge?"
      }
    ],
    "review_discussion": [
      {
        "author": "thery",
        "file": "mathcomp/algebra/mxpoly.v",
        "date": "2020-09-28T07:54:13Z",
        "comment": "`g` is missing in the formula"
      },
      {
        "author": "thery",
        "file": "mathcomp/algebra/mxpoly.v",
        "date": "2020-09-28T08:43:32Z",
        "comment": "Don't understand why this proof is so long.\r\nThought it was a simple elimination with ind2.\r\nUnfortunately ind2 seems to weak.\r\n"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/mxpoly.v",
        "date": "2020-09-28T08:48:39Z",
        "comment": "```suggestion\r\n(*                  := kermxpoly g ('X ^ n - a%:P) where g : 'M_n             *)\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/mxpoly.v",
        "date": "2020-09-28T08:53:42Z",
        "comment": ":laughing: I had exactly the same thoughts, in this order... but then I realized that it is not a simple elimination, because the pairwise coprimality hypothesis is used to derive coprimality with partial products, and simple inductions do not take into account partial big operators. So maybe there is a higher order induction scheme for this, but I did not figure it out, and went for an induction on the sequence instead."
      }
    ],
    "tags": [
      {
        "tag": "kind: enhancement",
        "description": "Issue or PR about addition of features."
      }
    ],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "f5f093c6a19813fc1b44080b8c07d3ca4731c14a",
        "message": "Kernel lemmas",
        "date": "2020-09-28T20:42:23Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 584,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 84,
        "deletions": 0
      },
      {
        "file": "mathcomp/algebra/mxalgebra.v",
        "status": "M",
        "additions": 84,
        "deletions": 0
      },
      {
        "file": "mathcomp/algebra/mxpoly.v",
        "status": "M",
        "additions": 84,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2020-09-08T19:50:36Z",
    "update_date": "2020-10-26T14:16:08Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2020-10-21T13:56:26Z",
        "comment": "I fixed the typo"
      },
      {
        "author": "CohenCyril",
        "date": "2020-10-25T12:40:37Z",
        "comment": "@gares any obstacle left to merging?"
      }
    ],
    "review_discussion": [
      {
        "author": "ybertot",
        "file": "mathcomp/algebra/mxalgebra.v",
        "date": "2020-10-09T09:39:22Z",
        "comment": "\"a endomorphism\" looks like an English mistake to me, \"an endomorphism\" would feel more idiomatic.\r\n"
      },
      {
        "author": "ybertot",
        "file": "mathcomp/algebra/mxalgebra.v",
        "date": "2020-10-09T09:51:58Z",
        "comment": "Out of curiosity, where was the convention for the use of 'C' for the presence of x%:M described?"
      },
      {
        "author": "gares",
        "file": "mathcomp/algebra/mxalgebra.v",
        "date": "2020-10-12T09:41:09Z",
        "comment": "```suggestion\r\n(* stablemx V f <=> the matrix f represents an endomorphism that preserves V *)\r\n```"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/mxalgebra.v",
        "date": "2020-10-16T11:10:31Z",
        "comment": "The suffix `C` is also extensively used in lemmas about `x%:P` in `poly.v`. `C` stands for \"constant\" in both cases but it has not been documented in the contribution guide."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/mxalgebra.v",
        "date": "2020-10-21T13:56:16Z",
        "comment": "fixed"
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "a635c0047ec4c5f0880046c5970d50b283361110",
        "message": "Theory of stability of a subspace by a matrix representing an endomorphism.\n\nAdded `stablemx` notation and a few lemmas about it.",
        "date": "2020-10-21T13:57:42Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 583,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 132,
        "deletions": 5
      },
      {
        "file": "mathcomp/algebra/matrix.v",
        "status": "M",
        "additions": 132,
        "deletions": 5
      },
      {
        "file": "mathcomp/algebra/mxpoly.v",
        "status": "M",
        "additions": 132,
        "deletions": 5
      }
    ],
    "state": "merged",
    "open_date": "2020-09-08T14:40:31Z",
    "update_date": "2020-10-22T01:31:28Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2020-09-09T11:58:50Z",
        "comment": "@thery, @affeldt-aist I find `commmx` particularily unreadable because of the sequence of three `m`, I just thought I could name it `mxcomm` instead. WDYT?\r\n\r\nEDIT: however, I use e.g. `mx1` and `1mx` to specify sides, how should I fix that? `mxcommx1` vs `mxcomm1x` or `mxcomm1r` vs `mxcomm1l` or  `mxcomm1` vs `mxcom1m`? Or should I just keep `commmx`?"
      },
      {
        "author": "thery",
        "date": "2020-09-09T14:28:33Z",
        "comment": "I'd prefer `comm_mx`  to `mxcomm`"
      },
      {
        "author": "affeldt-aist",
        "date": "2020-09-10T01:03:17Z",
        "comment": "> I'd prefer comm_mx to mxcomm\r\n\r\nIt also seems to me more homogeneous because there seems to be relatively few definitions that start with the `mx` prefix (`mxvec`, `mxtrace`) and even in those cases there seems to be a tendency to put `mx` as a suffix (e.g., Lemma `trace_mx11`)."
      },
      {
        "author": "CohenCyril",
        "date": "2020-09-27T12:54:46Z",
        "comment": "fixed @affeldt-aist @thery "
      },
      {
        "author": "thery",
        "date": "2020-09-28T09:17:12Z",
        "comment": "@CohenCyril do you want to squash your commit before I merge?"
      },
      {
        "author": "CohenCyril",
        "date": "2020-09-28T12:24:07Z",
        "comment": "@thery \r\n\r\n> @CohenCyril do you want to squash your commit before I merge?\r\n\r\ndone"
      },
      {
        "author": "thery",
        "date": "2020-09-29T06:55:36Z",
        "comment": "@affeldt-aist  ok to merge?"
      },
      {
        "author": "affeldt-aist",
        "date": "2020-09-29T07:06:36Z",
        "comment": "> @affeldt-aist ok to merge?\r\n\r\nAren't `scalar_mx_comm` and `comm_mxC` the same lemmas?\r\n"
      },
      {
        "author": "thery",
        "date": "2020-09-29T07:09:09Z",
        "comment": "@affeldt-aist  ok we wait for @CohenCyril reaction"
      },
      {
        "author": "affeldt-aist",
        "date": "2020-09-29T07:12:38Z",
        "comment": "> @affeldt-aist ok we wait for @CohenCyril reaction\r\n\r\nI asked the same question yesterday and was happy with the answer but know I wonder is this answer was really an answer to my question. Anyway, the code has changed in between... Sorry for the poor follow-up. :-(\r\n\r\n"
      },
      {
        "author": "CohenCyril",
        "date": "2020-09-29T10:54:46Z",
        "comment": "> > @affeldt-aist ok we wait for @CohenCyril reaction\r\n> \r\n> I asked the same question yesterday and was happy with the answer but know I wonder is this answer was really an answer to my question. Anyway, the code has changed in between... Sorry for the poor follow-up. :-(\r\n\r\nNo you are right, I misread your question...\r\n"
      },
      {
        "author": "CohenCyril",
        "date": "2020-09-29T10:56:21Z",
        "comment": "`scalar_mx_comm` and `comm_mxC` are exactly the same now! I guess `scalar_mx_comm` should be deprecated in favor of `comm_mxC`. Let me do that, and thanks for insisting."
      },
      {
        "author": "thery",
        "date": "2020-10-21T19:26:04Z",
        "comment": "@affeldt-aist  ok for merging?"
      },
      {
        "author": "affeldt-aist",
        "date": "2020-10-22T01:31:09Z",
        "comment": "> @affeldt-aist ok for merging?\r\n\r\nYes."
      }
    ],
    "review_discussion": [
      {
        "author": "thery",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2020-09-08T16:06:53Z",
        "comment": "This duplication is really sad. Is this really needed?"
      },
      {
        "author": "CohenCyril",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2020-09-08T18:13:45Z",
        "comment": "Unfortunately it is... until we have a structure for abelian categories..."
      },
      {
        "author": "CohenCyril",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2020-09-08T18:14:11Z",
        "comment": "Did you mean the duplication between `GRing.comm` and `commmx` ?"
      },
      {
        "author": "thery",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2020-09-08T19:54:32Z",
        "comment": "yep "
      },
      {
        "author": "CohenCyril",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2020-09-08T19:59:15Z",
        "comment": "Then yes, `GRing.comm` is bound to (non trivial) rings, and matrices form a (non trivial) ring only when they are square and of manifestly positive size. However during proofs in endomorphism reduction, we take restrictions, which are matrices of size `#|V|` (with `V` a matrix space) and it becomes cumbersome to state commutation between restrictions, unless we relax the setting... and this relaxation corresponds to `commmx`..."
      },
      {
        "author": "thery",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2020-09-08T20:06:40Z",
        "comment": "Is this really needed?\r\n"
      },
      {
        "author": "CohenCyril",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2020-09-08T20:09:22Z",
        "comment": "Do you see an alternative?"
      },
      {
        "author": "CohenCyril",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2020-09-08T20:16:20Z",
        "comment": "You can take a look [here](https://github.com/math-comp/math-comp/pull/207/files) to see the use cases (do not forget to expand collapsed code blocks)"
      },
      {
        "author": "thery",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2020-09-08T20:17:33Z",
        "comment": "It is difficult to say without knowing the application, naively manipulating matrices of size #|V|.-1.+1 would not work?\r\n"
      },
      {
        "author": "CohenCyril",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2020-09-08T20:22:01Z",
        "comment": "> It is difficult to say without knowing the application, naively manipulating matrices of size #|V|.-1.+1 would not work?\r\n\r\nThis is how I started, but\r\n- since `#|V|` occurs in many matrix sizes and ordinals in the context, it triggers a dependent type  nightmare with sometimes a need for `castmx` and\r\n- since the subspace is not always assumed to be nonzero, it introduces spurious case analyses on `V`'s emptyness,\r\n\r\nAll of this introduces a nonnegligible overhead in already complicated proofs, and this overhead collapses when introducing  `commmx`."
      },
      {
        "author": "affeldt-aist",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2020-09-09T03:43:37Z",
        "comment": "Shouldn't the reason for introducing `commmx` be documented in the header file? This question is likely to be asked again. I think that it is almost a matter of copy-pasting the explanations above and maybe add a link to the file of the development where the issue appears and is solved. "
      },
      {
        "author": "CohenCyril",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2020-09-09T11:43:01Z",
        "comment": "Maybe not in the header, but where `commmx` is defined."
      },
      {
        "author": "CohenCyril",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2020-09-09T11:55:13Z",
        "comment": "done"
      },
      {
        "author": "affeldt-aist",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2020-09-28T01:41:05Z",
        "comment": "```suggestion\r\nProof. exact: scalar_mx_comm. Qed.\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2020-09-28T08:37:42Z",
        "comment": "They are not exactly the same, on one side `mul_mx_scalar` is more general (non square matrices), and on the other side, `comm_mx` might be used as a head symbol for automatic proof search (or simply human readability purposes)."
      },
      {
        "author": "affeldt-aist",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2020-09-28T14:00:11Z",
        "comment": "Indeed, they are not the same lemmas, my bad.\r\n\r\nStill, there is one that is more general than the other. What you are saying is that the specialization with a head symbol might be useful for automation purposes but this is not used yet, right?"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2020-09-29T10:53:18Z",
        "comment": "Yes, actually, a hint resolve might just do the trick... maybe it should be added preemptively..."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2020-09-29T11:21:28Z",
        "comment": "Actually, my bad, the hint is there."
      },
      {
        "author": "affeldt-aist",
        "file": "mathcomp/algebra/mxpoly.v",
        "date": "2020-10-02T02:49:02Z",
        "comment": "this could be\r\n`Definition horner_mx := horner_morph (comm_mxC^~A).`\r\nprovided that\r\n`Arguments comm_mxC {R n} a A`\r\nis added at the end of the `ComMatrix` section in `matrix.v`"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/mxpoly.v",
        "date": "2020-10-21T14:10:36Z",
        "comment": "ok! fixed"
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "03cebcaaba3ec9f379b37659e8fc5556c6a9a1b6",
        "message": "Adding matrix commutation and its theory",
        "date": "2020-10-21T14:10:14Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 582,
    "diff_summary": [
      {
        "file": "mathcomp/algebra/matrix.v",
        "status": "M",
        "additions": 18,
        "deletions": 13
      }
    ],
    "state": "merged",
    "open_date": "2020-09-08T01:59:47Z",
    "update_date": "2020-09-29T11:29:41Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2020-09-28T08:42:06Z",
        "comment": "> I think `eq_map_mx_id` might be a better name, but I'm not sure. Except that, it looks good to me.\r\n\r\nThe `eq` in the name is not for the equality in the conclusion, but the equality in the hypothesis. In the same way one reads `map_mx_id` as \"`map_mx` applied to `id` is equal to something\", one should read `map_mx_eq_id` as \"`map_mx` applied to something which is equal to `id`, is equal to something\"."
      },
      {
        "author": "CohenCyril",
        "date": "2020-09-28T12:32:34Z",
        "comment": "Actually, after performing the change in `poly.v` I realized `map_poly_id` was never used, and I revised the uses of `map_mx_id` in my developments. And in fact, as I set the implicits `(map_mx_eq_id id)` does exactly the same job as `map_mx_id` which is used less often.\r\nSo ... I backtrack and I will come back with a new set of lemmas."
      }
    ],
    "review_discussion": [
      {
        "author": "thery",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2020-09-08T16:14:00Z",
        "comment": "In poly, this theorem is simply called `map_poly_id`. "
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2020-09-08T19:21:28Z",
        "comment": "`map_mx_id` is taken (see [above](https://github.com/math-comp/math-comp/blob/693a9fc82903f19770027d9b26f66de61377f221/mathcomp/algebra/matrix.v#L1051-L1052)), but maybe I could simply replace it, WDYT?"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2020-09-09T22:14:56Z",
        "comment": "For me, it seems better to replace `map_mx_id`."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2020-09-10T08:39:24Z",
        "comment": "```suggestion\r\nProof. by move/eq_map_mx->; rewrite map_mx_id. Qed.\r\n```"
      },
      {
        "author": "thery",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2020-09-10T09:09:18Z",
        "comment": "can we just remove `map_mx_id`? I think it is not much used and\r\n\r\n```\r\nLemma map_mx_id (R : Type) m n (M : 'M[R]_(m,n)) : M ^ id = M.\r\nProof. by rewrite map_mx_eq_id . Qed.\r\n```\r\n"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2020-09-26T23:03:34Z",
        "comment": "I'd rather not remove `map_mx_id`, the specialization to `id` makes `rewrite map_mx_id` possible without pointing out which one is `id` (otherwise patterns might be needed)."
      },
      {
        "author": "thery",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2020-09-28T09:02:18Z",
        "comment": "Ok but then rename the theorem in `poly` to match the one in `matrix` "
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2020-09-28T10:29:01Z",
        "comment": "> Ok but then rename the theorem in `poly` to match the one in `matrix`\r\n\r\nMake sense. @CohenCyril Please let me know whether you plan to do this in this PR or in another PR. IMO, the former is better."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2020-09-28T12:10:07Z",
        "comment": "I am looking into it right now..."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2020-09-29T03:40:14Z",
        "comment": "This lemma was iff before this change. Is it really OK?"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2020-09-29T03:51:33Z",
        "comment": "The ordering of `f` and `g` is opposite and `g` is implicit in `eq_map_poly`. Shouldn't it be the same?"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2020-09-29T11:00:46Z",
        "comment": "The iff has no advantage over `matrixP` lemma itself. But as a forward only view, one can use the rewriting left to right with an explicit `g` to give the target function."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2020-09-29T11:17:35Z",
        "comment": "It's a trade off, such a lemma can be used in four different styles:\r\n1. rewriting `eq_map_stuff` using an function equality as argument. (the most used for `eq_map_poly`)\r\n2. rewriting `eq_map_stuff` using a function `g` as argument. (the least used, but still used)\r\n3. `apply: eq_map_stuff` (the second most used, for `eq_map_poly`)\r\n4. `move=> /eq_map_stuff` (the third most used, for `eq_map_poly`)\r\n\r\nFor the last two, the choice of implicit arguments has no impact whatsoever (except arguments of type `Type` must be either `nonPropType` or maximal implicit, which I made sure of for `eq_map_mx`).\r\n\r\nNow, for 1. and 2., there is an impact, let's see it:\r\n1. a. If one lets `f` and `g` implicit, then there is no `_` and one can write `rewrite (eq_map_stuff eq_f_g)` directly.\r\nb. Otherwise, if `g` is explicit, then one needs to add one `_`, as in `rewrite (eq_map_stuff _ eq_f_g)`,  which can be bothering but will be nothing compared to what is coming in 2.\r\n2. a. If one lets `f` and `g` implicit, then then one must write `rewrite (@eq_map_stuff _ ... _ g)`. In the case of `eq_map_poly` it's three `_`, but with `eq_map_mx` without swapping the arguments (i.e. `f`, then `g`), it would be five `_` and with swapping, (i.e. `g` then `f`,) only four `_`.\r\nb. Otherwise, if `g` is explicit, one can just write `rewrite (eq_map_stuff g)`.\r\n\r\nHence my preference for option b. for matrices. For polynomials, if I changed something, I suppose it would simply be reordering `g` and `f` so that one needs to put only two `_` to explicit `g`, which would slightly improve the current situation.\r\n\r\n"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2020-09-29T11:27:59Z",
        "comment": "OK. I agree."
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "fab8ceb34957ca4e261a5ba91cf8379f694dd1b8",
        "message": "Update `map_mx_id`, fix some implicits and argument orders\n\n- Fix implicits of `eq_map_mx`, `eq_in_map_mx`, `map_mx_id_in` and `map_mx_id`,\n  in order to give more practical arguments first.\n- Generalized `map_mx_id` to take the shape f =1 id -> M ^ f = M.\n  The previous behaviour can be recovered through `map_mx_id (frefl id)` or `[_ ^ id]map_mx_id`",
        "date": "2020-09-28T14:03:52Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 578,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 262,
        "deletions": 1
      },
      {
        "file": "mathcomp/ssreflect/order.v",
        "status": "M",
        "additions": 262,
        "deletions": 1
      },
      {
        "file": "mathcomp/ssreflect/ssrnat.v",
        "status": "M",
        "additions": 262,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2020-09-03T12:23:35Z",
    "update_date": "2020-09-09T23:25:36Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2020-09-03T12:24:14Z",
        "comment": "@affeldt-aist would you be ok to merge it with #576 and document?"
      },
      {
        "author": "CohenCyril",
        "date": "2020-09-04T15:23:48Z",
        "comment": "LGTM except I'm an author too :laughing: "
      },
      {
        "author": "CohenCyril",
        "date": "2020-09-05T10:38:57Z",
        "comment": "> LGTM except I'm an author too\r\n\r\nI meant: I cannot review so the fact it looks good to me is irrelevant."
      },
      {
        "author": "CohenCyril",
        "date": "2020-09-05T14:15:51Z",
        "comment": "(squashed and rebased)"
      },
      {
        "author": "affeldt-aist",
        "date": "2020-09-05T14:43:19Z",
        "comment": "I am wondering whether the explanation for the naming of the contra lemmas shouldn't go also into the contributing guide at the root of the repo."
      },
      {
        "author": "CohenCyril",
        "date": "2020-09-05T16:53:18Z",
        "comment": "> I am wondering whether the explanation for the naming of the contra lemmas shouldn't go also into the contributing guide at the root of the repo.\r\n\r\nIt would be more appropriate in a general documentation of ssrnat/ssrnum I think. It can be done as a new PR though."
      },
      {
        "author": "CohenCyril",
        "date": "2020-09-07T07:50:42Z",
        "comment": "> LGTM. However, given the large number of largely boring lemmas, I wonder whether it would be possible to introduce a `contra:` tactic that automatically picks the right contra lemma, or even constructs it from the shape of the goal. However, I'm not sure how well that would work with the `comparable_*` lemmas.\r\n\r\nI see how we could do this using canonical structures / typeclasses ... but for now, let's keep it like this."
      },
      {
        "author": "CohenCyril",
        "date": "2020-09-07T07:51:32Z",
        "comment": "Please open an issue / feature request with your nice idea  :+1: "
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "828e60cae73eb7153d1f585f80b125f679dc0461",
        "message": "Adding contra lemmas with orders\n\n- Adding contra lemmas between `leq`, `ltn`, `Order.le` (\"le\"),\n  `Order.lt` (\"lt\"), `b` (\"T\"), `~~ b` (\"N\"), `b = false` (\"F\"),\n  and `~ P` (\"not\").\n- Changelog for contra lemmas with orders\n\nCo-authored-by: Reynald Affeldt <reynald.affeldt@aist.go.jp>",
        "date": "2020-09-05T14:17:21Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 577,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 5,
        "deletions": 0
      },
      {
        "file": "mathcomp/algebra/matrix.v",
        "status": "M",
        "additions": 5,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2020-09-03T11:02:32Z",
    "update_date": "2020-09-08T06:08:08Z",
    "discussion": [],
    "review_discussion": [
      {
        "author": "thery",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2020-09-07T16:38:33Z",
        "comment": "Should the fact that this reflection is for row vectors appear in the name of the lemma?"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2020-09-07T23:06:51Z",
        "comment": "Should it be named `mulmxrP` instead?"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2020-09-07T23:07:25Z",
        "comment": "Or `mul_rV_mxP` ?"
      },
      {
        "author": "thery",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2020-09-07T23:09:34Z",
        "comment": "rV_mulmxP?"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2020-09-07T23:31:07Z",
        "comment": "I'm afraid this name suggests we compare row vectors, but we compare full matrices by applying them to row vectors."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2020-09-07T23:31:27Z",
        "comment": "(here `A` and `B` have type `'M_(m, n)`.)"
      },
      {
        "author": "thery",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2020-09-07T23:35:22Z",
        "comment": "but we can't multiply row vectors no?"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2020-09-07T23:37:29Z",
        "comment": "... the lemma says that `A` and `B` are the same if and only if their multiplicationd with any row vector (on the left, following the diagrammatic convention of the library) `v *m A` and `v *m B` yield the same row vector."
      },
      {
        "author": "thery",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2020-09-07T23:53:16Z",
        "comment": "ok let's go with `mul_rV_mxP` but I would never have guessed the name.\r\nThe theorem will mosty be used from the right to the left to add a row multiplication on the left.  Maybe `mul_rVPl`?"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2020-09-07T23:55:37Z",
        "comment": "I'm fine with `mul_rVPl`."
      },
      {
        "author": "thery",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2020-09-07T23:59:48Z",
        "comment": "or maybe simply  `mul_rVP` and also a `mul_cVP` for the version on the right."
      },
      {
        "author": "affeldt-aist",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2020-09-08T00:07:53Z",
        "comment": "it is also reminiscent of the lemma `row_matrixP`, but `mul_rV_matrixP` is maybe a bit long... (so `mul_rVP` is a good compromise?)"
      },
      {
        "author": "thery",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2020-09-08T00:08:32Z",
        "comment": "`mul_rVPl` and `mul_rVP` are both fine with me. If you do the renaming and change the name of the PR accordingly, I'll merge it."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2020-09-08T00:11:46Z",
        "comment": ":+1:"
      },
      {
        "author": "thery",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2020-09-08T00:15:09Z",
        "comment": "@affeldt-aist I always find it difficult to figure out the name of these theorems.\r\nSpecially when does on use `matrix` or `mx`\r\n"
      },
      {
        "author": "affeldt-aist",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2020-09-08T00:24:34Z",
        "comment": "> Specially when does on use matrix or mx\r\n\r\nI am not sure either, but it looks like the default is to use `matrix` and that the `mx` prefix is reserved for naming lemmas about an identifier of the form `blah(_|)mx` (`mxE` being an obvious exception though)."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2020-09-08T00:30:08Z",
        "comment": "> Specially when does on use `matrix` or `mx`\r\n\r\nThere are actually very few (10) theorems, one notation and zero definition (except for `matrix` itself which is only used with the notation `'M_(_, _)`) with `matrix` as a substring, \r\n- `matrixP`, `row_matrixP`, `matrix_sum_delta`, `card_matrix`,`matrix_eq0`, `matrix0Pn`, `matrix_nonzero1`, `matrix_modl`, `matrix_modr` and `gal_matrix`\r\n- and `\\matrix_...`.\r\n\r\nI believe we could rename all the lemmas to use `mx` instead of `matrix`."
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "5d90649f226e80256ad903db9b8a0c21042f5a0a",
        "message": "Lemma mul_rvP",
        "date": "2020-09-08T00:11:28Z"
      }
    ]
  },
  {
    "author": "affeldt-aist",
    "number": 576,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 8,
        "deletions": 0
      },
      {
        "file": "mathcomp/ssreflect/order.v",
        "status": "M",
        "additions": 8,
        "deletions": 0
      }
    ],
    "state": "closed",
    "open_date": "2020-09-03T02:59:45Z",
    "update_date": "2020-09-04T03:52:19Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2020-09-03T09:34:04Z",
        "comment": "Oh I already have that, I just did not  PR it yet...\r\nEDIT: #578"
      },
      {
        "author": "affeldt-aist",
        "date": "2020-09-04T03:52:14Z",
        "comment": "This PR will be closed because it has been merged with PR #578 "
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "1232c2b84dab951395a6864dc3c59490d9550c26",
        "message": "variants of contra lemmas for ordered types",
        "date": "2020-09-03T02:53:29Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 575,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 156,
        "deletions": 6
      },
      {
        "file": "mathcomp/algebra/matrix.v",
        "status": "M",
        "additions": 156,
        "deletions": 6
      }
    ],
    "state": "merged",
    "open_date": "2020-09-03T02:30:11Z",
    "update_date": "2020-09-04T10:17:04Z",
    "discussion": [],
    "review_discussion": [
      {
        "author": "thery",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2020-09-03T13:23:35Z",
        "comment": "could we fix all these spaces once and for the all the files in a separate commit?"
      },
      {
        "author": "thery",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2020-09-03T13:23:48Z",
        "comment": "I would have expected A \\in .mxOver S like A \\in unitmx"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2020-09-03T13:28:46Z",
        "comment": "I keep doing this, and some commits keep reintroducing them... at least doing it bit by bit triggers less conflicts..."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2020-09-03T13:29:34Z",
        "comment": "It's more akin to\r\nhttps://github.com/math-comp/math-comp/blob/c2e5f04d24c91f2f99aa31afb466a435d431465a/mathcomp/algebra/poly.v#L39-L40"
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "9382ead7c112742c467f275b7545ae45afb10ed3",
        "message": "Adding mxOver predicate",
        "date": "2020-09-03T02:29:19Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 574,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 318,
        "deletions": 1
      },
      {
        "file": "mathcomp/algebra/matrix.v",
        "status": "M",
        "additions": 318,
        "deletions": 1
      },
      {
        "file": "mathcomp/algebra/mxalgebra.v",
        "status": "M",
        "additions": 318,
        "deletions": 1
      },
      {
        "file": "mathcomp/ssreflect/fintype.v",
        "status": "M",
        "additions": 318,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2020-09-03T00:34:59Z",
    "update_date": "2020-09-29T06:52:42Z",
    "discussion": [
      {
        "author": "thery",
        "date": "2020-09-28T09:48:36Z",
        "comment": "With all these force pushed I am a bit lost here. Is there anything that prevents to merge this one?\r\n"
      },
      {
        "author": "CohenCyril",
        "date": "2020-09-28T14:18:43Z",
        "comment": "> With all these force pushed I am a bit lost here. Is there anything that prevents to merge this one?\r\n\r\nYes, many merges happened, and I keep rebasing..."
      },
      {
        "author": "CohenCyril",
        "date": "2020-09-28T14:22:46Z",
        "comment": "@thery I rebased again."
      },
      {
        "author": "CohenCyril",
        "date": "2020-09-28T14:27:45Z",
        "comment": "Now the error is that gitlab CI is saturated with jobs (@gares that would be a good enough reason for me to just drop Coq < 8.10 support :wink:)"
      }
    ],
    "review_discussion": [
      {
        "author": "thery",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2020-09-08T15:38:28Z",
        "comment": "I think the name is a bit misleading.\r\nIn math, a submatrix is when you delete some lines or \r\ncolumns. Here you can do much more.\r\n"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2020-09-08T18:19:59Z",
        "comment": "The rationale is that `mxsub` will essentially be used with invective (or even increasing) `f` and `g`, but **numerous** (if not almost all) theorems still apply for arbitrary `f` and `g`, so it is a shame to have a separate definition and even more a shame to have theorems that require a spurious injectivity (or monotonicity) hypothesis.\r\nOf course it may happen theorems about minors will rely a bit more on injectivity, but the definition of `minor` still won't (and it would be a shame to mix definitions & proofs when it's not strictly necessary)."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2020-09-08T18:26:00Z",
        "comment": "PS: think of it as `sort`, if you don't give it a proper order relation, it still does something, but it has less properties (it still is parametric though) and it cannot be called sorting anymore..."
      },
      {
        "author": "thery",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2020-09-08T19:58:36Z",
        "comment": "yes and no I notice that when I saw `row_perm s = rowsub s`\r\n"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2020-09-08T20:09:48Z",
        "comment": "> yes and no I notive that when I saw `row_perm s = rowsub s`\r\n\r\nthis is a curiosity indeed, I am not sure how important this equation is, but I think it should still be in the library. The definition of submatrix is relaxed to (potentially trivial) submatrix, (with potential reordering), even though it does not matter in current practical use cases."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2020-09-08T20:14:45Z",
        "comment": "Moreover I vaguely recall this might be the definition that @ggonthier agreed with, when @vsiles, @maximedenes  and @mortberg were writing the [theory of minors in CoqEAL](https://github.com/CoqEAL/CoqEAL/blob/master/theory/minor.v) (that I wish to end up importing, renaming and completing)"
      },
      {
        "author": "thery",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2020-09-08T20:34:02Z",
        "comment": "so at least you should change the doc \r\n```mxsub f g A == generic submatrix  ...```\r\nby\r\n```mxsub f g A == generic sub/reindexed matrix  ...```\r\n"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2020-09-08T20:36:37Z",
        "comment": "ok"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2020-09-08T20:44:48Z",
        "comment": "done."
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "e5a87f12545cd97dea383040590d62aff068b8ad",
        "message": "Submatrix theory",
        "date": "2020-09-28T20:36:19Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 573,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 307,
        "deletions": 45
      },
      {
        "file": "mathcomp/algebra/matrix.v",
        "status": "M",
        "additions": 307,
        "deletions": 45
      },
      {
        "file": "mathcomp/algebra/mxpoly.v",
        "status": "M",
        "additions": 307,
        "deletions": 45
      }
    ],
    "state": "merged",
    "open_date": "2020-09-02T22:51:56Z",
    "update_date": "2020-09-08T09:56:21Z",
    "discussion": [],
    "review_discussion": [
      {
        "author": "thery",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2020-09-03T16:36:53Z",
        "comment": "this seems a typical proof by induction on triangular matrices.\r\nMaybe ursubmx A = 0 and is_triang_mx (lrsubmx A)\r\ncould be usefull theorems to have in the library.\r\nSame holds for diagonal matrices.\r\n\r\nAlso I have noticed that there is no doc for is_triang_mx and is_diag_mx in the header of matrix"
      },
      {
        "author": "thery",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2020-09-03T16:49:23Z",
        "comment": "in the file matrix, the style seems to have spaces before a //"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2020-09-03T17:48:19Z",
        "comment": "> this seems a typical proof by induction on triangular matrices.\r\n\r\nDo you mean we should make it an idiom?\r\n\r\n> Maybe ursubmx A = 0 and is_triang_mx (lrsubmx A)\r\n\r\nI could extract them indeed.\r\n\r\n> Same holds for diagonal matrices.\r\n\r\nSince `is_diag_mx A -> is_trig_mx A` holds, it may not be necessary... do you think we should add all variants for diagonal matrices.\r\n\r\n> Also I have noticed that there is no doc for is_triang_mx and is_diag_mx in the header of matrix\r\n\r\nI thought I did it in #571... my bad..."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2020-09-03T17:49:49Z",
        "comment": "I think the new style conventions depend on whether `//` is related to one `?id` or several... In this case, I believe you are right and we should put a space."
      },
      {
        "author": "thery",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2020-09-03T17:56:04Z",
        "comment": "too complicated for my simple brain. You mean ?thm // and ?thm// will not have the same semantic?"
      },
      {
        "author": "thery",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2020-09-03T18:05:46Z",
        "comment": "Everyone that will do a proof by induction on the size of a triangular or a diagonal matrix will have to reprove this kind  of theorems. If you turn them into lemma, I think your proof of `det_trig` will become elementary."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2020-09-07T13:08:05Z",
        "comment": "I tried to split & add many subresults. Can you tell me what you think?"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2020-09-07T13:09:29Z",
        "comment": "I mean that, even if the formal semantic is exactly the same, by convention: if `thm` alone spawned subgoals then one may write `?thm//`, but if it is the combination of  `thm1` and `thm2` then we write `?thm1 ?thm2 //`."
      },
      {
        "author": "thery",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2020-09-07T16:26:20Z",
        "comment": "very strange to me. Will someone go to all the code to adopt this convention? "
      },
      {
        "author": "thery",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2020-09-07T16:29:19Z",
        "comment": "Initially I was thinking only about the structure lemmas : how is_diag and is_trig propagates to submatrix but maybe adding ad-hoc elimination theorems is ok too. I am not sure there are lot of them in the library."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2020-09-07T22:47:12Z",
        "comment": "> Initially I was thinking only about the structure lemmas : how is_diag and is_trig propagates to submatrix\r\n\r\nThat's what I thought and did initially, but as I thought, it barely removed one line of proof. In order to become \"elementary\" I also needed to add the induction.\r\n\r\n> but maybe adding ad-hoc elimination theorems is ok too. I am not sure there are lot of them in the library.\r\n\r\nThere are a few ad-hoc theorem (e.g. `poly_ind`, `big_ind` and `last_ind`), but it is indeed not a frequent practice, and it is preferred to have \"side loading lemmas\" instead (e.g. `ubnP`), but in the case of matrices the main enemy is the conversion between `n.+1` and `1 + n`, which I do not know how to deal with as a \"side\" lemma.\r\n\r\n\r\n"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2020-09-07T22:54:58Z",
        "comment": "I don't know. Do you think I should backtrack on that?"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2020-09-07T22:56:44Z",
        "comment": "Some files already started adopting it. Maybe the PR can be accepted independently of this.\r\nWe can discuss this convention in a meeting, and then fix it uniformly (or not) depending on the outcome of the discussions."
      },
      {
        "author": "thery",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2020-09-07T23:16:35Z",
        "comment": "So maybe we should not include the induction lemmas.\r\n"
      },
      {
        "author": "thery",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2020-09-07T23:26:02Z",
        "comment": "My fear is that this non-uniformity will remain but fine with me to accept the PR once we've decided about the inclusion of the induction theorems"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2020-09-07T23:27:03Z",
        "comment": "I was going to conclude the opposite :laughing: "
      },
      {
        "author": "thery",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2020-09-07T23:28:09Z",
        "comment": "ok let's keep them"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2020-09-07T23:35:54Z",
        "comment": "I opened issue #580 and I will put it in the list of topics."
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "e7067ea1ea730fd4fd4d3daf556c6f712ffe04a8",
        "message": "Polynomial evaluation and minimal poly of a diagonal matrix",
        "date": "2020-09-07T09:27:05Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "abb204c55d28b139bb57d56fb7e3b0ae29cf5dc5",
        "message": "Refactoring proof of det_trig and spawning sublemmas",
        "date": "2020-09-07T13:18:17Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "ed040ad0db541c597a354aba126f428e42eef854",
        "message": "compat Coq < 8.10",
        "date": "2020-09-07T13:27:49Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 572,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 70,
        "deletions": 37
      },
      {
        "file": "mathcomp/algebra/matrix.v",
        "status": "M",
        "additions": 70,
        "deletions": 37
      },
      {
        "file": "mathcomp/algebra/mxpoly.v",
        "status": "M",
        "additions": 70,
        "deletions": 37
      },
      {
        "file": "mathcomp/character/character.v",
        "status": "M",
        "additions": 70,
        "deletions": 37
      },
      {
        "file": "mathcomp/field/algnum.v",
        "status": "M",
        "additions": 70,
        "deletions": 37
      },
      {
        "file": "mathcomp/ssreflect/bigop.v",
        "status": "M",
        "additions": 70,
        "deletions": 37
      },
      {
        "file": "mathcomp/ssreflect/finset.v",
        "status": "M",
        "additions": 70,
        "deletions": 37
      },
      {
        "file": "mathcomp/ssreflect/fintype.v",
        "status": "M",
        "additions": 70,
        "deletions": 37
      }
    ],
    "state": "merged",
    "open_date": "2020-09-02T21:08:43Z",
    "update_date": "2020-09-04T10:14:01Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "fbeec199e65fe7e9fd96ddd74e31aa0461c22927",
        "message": "Lemmas reindex_omap and bigD1_ord\n\n+ eq_liftF and lift_eqF\n+ proof simplificaions",
        "date": "2020-09-03T17:59:28Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "667dd52bd039a96f896b81533b0aaafe98b9f8de",
        "message": "compat Coq < 8.10",
        "date": "2020-09-03T17:59:28Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 571,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 71,
        "deletions": 0
      },
      {
        "file": "mathcomp/algebra/matrix.v",
        "status": "M",
        "additions": 71,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2020-09-02T18:36:57Z",
    "update_date": "2020-09-03T01:03:23Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "4b8456a7e0b3968864d0bc89a9886627184b9468",
        "message": "Elementary theory of diagonal and triagular matrices",
        "date": "2020-09-02T22:40:54Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 570,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 22,
        "deletions": 11
      },
      {
        "file": "mathcomp/algebra/mxalgebra.v",
        "status": "M",
        "additions": 22,
        "deletions": 11
      }
    ],
    "state": "merged",
    "open_date": "2020-09-02T18:12:31Z",
    "update_date": "2020-09-03T16:10:58Z",
    "discussion": [
      {
        "author": "affeldt-aist",
        "date": "2020-09-03T03:05:13Z",
        "comment": "This reminds me of this issue reported to real-closed: https://github.com/math-comp/real-closed/issues/1"
      },
      {
        "author": "CohenCyril",
        "date": "2020-09-03T11:26:09Z",
        "comment": "> This reminds me of this issue reported to real-closed: [math-comp/real-closed#1](https://github.com/math-comp/real-closed/issues/1)\r\n\r\nIndeed, cf #577 "
      },
      {
        "author": "thery",
        "date": "2020-09-03T16:13:38Z",
        "comment": "@CohenCyril  I ve meged this pull request, I was wondering if the CHANGELOG should be \r\nshould not collect the changes per files rather than being a list of changes."
      },
      {
        "author": "CohenCyril",
        "date": "2020-09-03T16:40:03Z",
        "comment": "Due to the new policy on changelogs, (cf minutes of the last meeting) what you say is discouraged. The editing process you described can be done at release time."
      },
      {
        "author": "thery",
        "date": "2020-09-03T16:54:42Z",
        "comment": "@CohenCyril  hope it will be done otherwise the CHANGELOG is unreadable "
      },
      {
        "author": "CohenCyril",
        "date": "2020-09-03T17:51:02Z",
        "comment": "> @CohenCyril hope it will be done otherwise the CHANGELOG is unreadable\r\n\r\nSure, I will add it to the HOWTO release."
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "c2c6c94326d4b4c11a67c5fc800c8ecd0de36474",
        "message": "Adding missing mxalgebra lemmas",
        "date": "2020-09-03T13:58:09Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 569,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 29,
        "deletions": 6
      },
      {
        "file": "mathcomp/algebra/matrix.v",
        "status": "M",
        "additions": 29,
        "deletions": 6
      },
      {
        "file": "mathcomp/algebra/mxalgebra.v",
        "status": "M",
        "additions": 29,
        "deletions": 6
      }
    ],
    "state": "merged",
    "open_date": "2020-09-02T17:48:10Z",
    "update_date": "2020-09-03T02:36:27Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2020-09-03T01:10:50Z",
        "comment": "> `Merge branch 'master' into mx0`\r\n\r\nThis is suspicious..."
      },
      {
        "author": "affeldt-aist",
        "date": "2020-09-03T01:12:39Z",
        "comment": "Indeed, this is the result of using the github interface to get rid of the conflict, this is not a useful commit, maybe better to solve the conflict offline and push force..."
      },
      {
        "author": "CohenCyril",
        "date": "2020-09-03T01:13:43Z",
        "comment": "> this is the result of using the github interface to get rid of the conflict\r\n\r\nPlease do not use github interface to solve conflict...\r\nI rebased and force pushed."
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "0bc1691f356145b895012c6f842bfe2783a3e1a2",
        "message": "Extracting a nonzero coefficient from a nonzero matrix\n\n+ shortening some proofs",
        "date": "2020-09-03T01:12:00Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 568,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 26,
        "deletions": 0
      },
      {
        "file": "mathcomp/algebra/matrix.v",
        "status": "M",
        "additions": 26,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2020-09-02T12:30:40Z",
    "update_date": "2020-09-07T07:52:46Z",
    "discussion": [
      {
        "author": "ybertot",
        "date": "2020-09-07T07:22:23Z",
        "comment": "I don't understand what is the situation with CI, I did not see any successful checks."
      },
      {
        "author": "CohenCyril",
        "date": "2020-09-07T07:28:23Z",
        "comment": "Strange... I can see it and [it is passing](https://gitlab.com/math-comp/math-comp/-/pipelines/185778684) though.  You can merge."
      },
      {
        "author": "ybertot",
        "date": "2020-09-07T07:52:35Z",
        "comment": "Concerning CI, I was not looking at the right place.  Now, I see it."
      }
    ],
    "review_discussion": [
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2020-09-02T13:51:06Z",
        "comment": "`R` can be generalized to a `Type` here."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2020-09-04T06:38:10Z",
        "comment": "Shouldn't this be `<->` rather than implication as in `eq_in_map`?"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2020-09-04T06:42:45Z",
        "comment": "```suggestion\r\nProof. by rewrite -[RHS]map_mx_id; apply: eq_in_map_mx. Qed.\r\n```"
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "ec27d03aa60cc87eabb24a832284901e2517faf1",
        "message": "Adding more map_mx lemmas",
        "date": "2020-09-04T10:39:19Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 567,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 61,
        "deletions": 6
      },
      {
        "file": "mathcomp/ssreflect/path.v",
        "status": "M",
        "additions": 61,
        "deletions": 6
      },
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 61,
        "deletions": 6
      }
    ],
    "state": "merged",
    "open_date": "2020-09-02T12:21:43Z",
    "update_date": "2020-09-08T05:14:03Z",
    "discussion": [
      {
        "author": "gares",
        "date": "2020-09-07T14:56:05Z",
        "comment": "Please rebase"
      },
      {
        "author": "chdoc",
        "date": "2020-09-07T15:04:11Z",
        "comment": "As it happens, I actually found some use of `split_find` in my development and I noticed that it is a little inconvenient to have the `s` in the `_spec` variant types to be the first argument, because the equation for `s` is the most meaningful and the equation-generating case starts counting from the right. This leads to something like: \r\n```\r\ncase def_s : _ _ _ _ / (split_find_nth x has_p) => [/= nz s1 s2 nz_p Ns2].\r\n```\r\nOn the other hand, the existing split lemmas have the same issue."
      },
      {
        "author": "CohenCyril",
        "date": "2020-09-07T16:07:37Z",
        "comment": "@chdoc, `s` is non-discriminant because it is an index which is a variable, so putting it last would screw up the search for another index."
      },
      {
        "author": "CohenCyril",
        "date": "2020-09-07T23:02:12Z",
        "comment": "> Please rebase\r\n\r\n@gares done"
      }
    ],
    "review_discussion": [
      {
        "author": "chdoc",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-09-03T08:58:30Z",
        "comment": "If these lemmas are \"generalizations\" of findP, why do they take `has p s` as argument rather than replacing it?"
      },
      {
        "author": "chdoc",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-09-03T09:03:28Z",
        "comment": "Since this is basically `find_split` with the additional replacement of `nth x0 s i`, maybe this should be called `find_split_nth`. After all, splitting is still the main thing this lemma does. "
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-09-03T11:37:42Z",
        "comment": "The comment is wrong I guess, they are generalizations of `splitP`, from `path`!\r\nAnd I refactored the proof of `splitP` to witness it."
      },
      {
        "author": "chdoc",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-09-03T11:42:18Z",
        "comment": "Well, at least I spotted that something was amiss :slightly_smiling_face: "
      },
      {
        "author": "chdoc",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2020-09-03T11:44:06Z",
        "comment": "It's `find_split` now. "
      }
    ],
    "tags": [
      {
        "tag": "kind: enhancement",
        "description": "Issue or PR about addition of features."
      }
    ],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "8710f75d73ce4f1c010f1792ebba37a08852c23b",
        "message": "split_find_nth and split_find lemmas",
        "date": "2020-09-07T23:01:57Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 566,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 15,
        "deletions": 6
      },
      {
        "file": "mathcomp/algebra/mxalgebra.v",
        "status": "M",
        "additions": 15,
        "deletions": 6
      }
    ],
    "state": "merged",
    "open_date": "2020-09-01T13:18:29Z",
    "update_date": "2020-09-08T15:53:03Z",
    "discussion": [
      {
        "author": "thery",
        "date": "2020-09-08T15:24:53Z",
        "comment": "@CohenCyril @ybertot as soon the check is green I'll merge the PR\r\n"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "4a6bb95c42c3b9097abd80d1201197bccc8bb96d",
        "message": "Adding sub_sums_genmxP (generalizes sub_sumsmxP)",
        "date": "2020-09-08T14:24:47Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 565,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 43,
        "deletions": 20
      },
      {
        "file": "mathcomp/algebra/matrix.v",
        "status": "M",
        "additions": 43,
        "deletions": 20
      },
      {
        "file": "mathcomp/ssreflect/fintype.v",
        "status": "M",
        "additions": 43,
        "deletions": 20
      }
    ],
    "state": "merged",
    "open_date": "2020-09-01T13:07:21Z",
    "update_date": "2020-09-03T13:38:56Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2020-09-01T13:08:04Z",
        "comment": "@amahboubi @LaurenceRideau @gares can one of you assign themself?"
      },
      {
        "author": "CohenCyril",
        "date": "2020-09-02T10:06:34Z",
        "comment": "@thery I removed the theorems with unintuitive names. If one finds them useful, we can think of a better name and add them back later on."
      },
      {
        "author": "CohenCyril",
        "date": "2020-09-03T13:10:58Z",
        "comment": "@gares, @thery merge?"
      },
      {
        "author": "thery",
        "date": "2020-09-03T13:33:47Z",
        "comment": "@CohenCyril fine with me"
      },
      {
        "author": "CohenCyril",
        "date": "2020-09-03T13:36:57Z",
        "comment": "> @CohenCyril fine with me\r\n\r\nYou are not the author, you can merge ;)"
      }
    ],
    "review_discussion": [
      {
        "author": "thery",
        "file": "mathcomp/ssreflect/fintype.v",
        "date": "2020-09-01T18:17:45Z",
        "comment": "I would never have guessed the name of this theorem P?"
      },
      {
        "author": "thery",
        "file": "mathcomp/ssreflect/fintype.v",
        "date": "2020-09-01T18:18:26Z",
        "comment": "why not simple apply/eqP/lrshiftP."
      },
      {
        "author": "thery",
        "file": "mathcomp/ssreflect/fintype.v",
        "date": "2020-09-01T18:18:48Z",
        "comment": "same as after "
      },
      {
        "author": "thery",
        "file": "mathcomp/ssreflect/fintype.v",
        "date": "2020-09-01T18:19:40Z",
        "comment": "same as before"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/fintype.v",
        "date": "2020-09-02T10:05:25Z",
        "comment": "It is not used, so I removed it."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/fintype.v",
        "date": "2020-09-02T10:05:32Z",
        "comment": "fixed"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/fintype.v",
        "date": "2020-09-02T10:05:41Z",
        "comment": "fixed"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/fintype.v",
        "date": "2020-09-02T10:05:50Z",
        "comment": "It is not used, so I removed it."
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "3dd5febb100b7e72c0203640309d188c27801bc8",
        "message": "Expliciting relation between split and [lr]shift",
        "date": "2020-09-03T01:18:37Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 564,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 29,
        "deletions": 0
      },
      {
        "file": "mathcomp/algebra/mxalgebra.v",
        "status": "M",
        "additions": 29,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2020-09-01T12:53:01Z",
    "update_date": "2020-09-03T12:52:37Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2020-09-01T12:53:39Z",
        "comment": "@thery @amahboubi @strub can one of you assign themself?"
      },
      {
        "author": "thery",
        "date": "2020-09-03T11:14:49Z",
        "comment": "@CohenCyril  what has changed since @ybertot  review?"
      },
      {
        "author": "CohenCyril",
        "date": "2020-09-03T11:20:01Z",
        "comment": "> @CohenCyril what has changed since @ybertot review?\r\n\r\nJust a rebase"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "96fe2105083fc61f2926ffa7a0a7427bc3145ec7",
        "message": "More pinvmx theory",
        "date": "2020-09-03T11:05:25Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 563,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 10,
        "deletions": 0
      },
      {
        "file": "mathcomp/algebra/mxpoly.v",
        "status": "M",
        "additions": 10,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2020-09-01T12:37:29Z",
    "update_date": "2020-09-03T15:40:45Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2020-09-01T12:38:19Z",
        "comment": "@LaurenceRideau @strub @amahboubi could one of you assign themself?"
      },
      {
        "author": "CohenCyril",
        "date": "2020-09-03T13:10:45Z",
        "comment": "@thery merge?"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "bb3f93b646a1a36e591a6837785e63cce7a4fa4e",
        "message": "Lemmas mxminpoly_minP and dvd_mxminpoly",
        "date": "2020-09-03T13:59:50Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 562,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 14,
        "deletions": 0
      },
      {
        "file": "mathcomp/algebra/matrix.v",
        "status": "M",
        "additions": 14,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2020-09-01T12:25:56Z",
    "update_date": "2020-09-07T19:16:50Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: enhancement",
        "description": "Issue or PR about addition of features."
      }
    ],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "c2721f5f10d5443d5a10d641a8474f00fc3d07a2",
        "message": "Adding [row|col]_[udlr]submx lemmas",
        "date": "2020-09-07T14:45:11Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 561,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 16,
        "deletions": 0
      },
      {
        "file": "mathcomp/algebra/matrix.v",
        "status": "M",
        "additions": 16,
        "deletions": 0
      }
    ],
    "state": "closed",
    "open_date": "2020-09-01T12:22:17Z",
    "update_date": "2020-09-01T12:22:29Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2020-09-01T12:22:29Z",
        "comment": "Mistake"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "8fbcb1770a75c3703c5561321354305a113cea30",
        "message": "Adding [row|col]_[udlr]submx lemmas",
        "date": "2020-09-01T12:20:43Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 560,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 8,
        "deletions": 0
      },
      {
        "file": "mathcomp/algebra/poly.v",
        "status": "M",
        "additions": 8,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2020-09-01T12:10:54Z",
    "update_date": "2020-09-03T11:15:42Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2020-09-01T12:13:06Z",
        "comment": "@thery @gares @LaurenceRideau can one of you assign themself?"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "31978e486f48b902d18c5f508e34bc016d7f47b8",
        "message": "Adding commr_horner lemma",
        "date": "2020-09-03T01:29:46Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 559,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 20,
        "deletions": 4
      },
      {
        "file": "mathcomp/ssreflect/bigop.v",
        "status": "M",
        "additions": 20,
        "deletions": 4
      }
    ],
    "state": "merged",
    "open_date": "2020-09-01T12:06:58Z",
    "update_date": "2020-09-01T17:58:18Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2020-09-01T12:08:53Z",
        "comment": "@pi8027 @thery @affeldt-aist can one of you assign themself?"
      }
    ],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: enhancement",
        "description": "Issue or PR about addition of features."
      }
    ],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "2d9c3d1775917a4e89d012efaf40539d9b0b72bd",
        "message": "Adding sig_big_dep lemma",
        "date": "2020-09-01T12:06:00Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "58efec880eeae2e3046eb798fe4b38d9572990c2",
        "message": "fix for Coq 8.7",
        "date": "2020-09-01T12:28:29Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 558,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 58,
        "deletions": 0
      },
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 58,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2020-09-01T11:20:43Z",
    "update_date": "2020-09-03T13:52:43Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2020-09-01T11:22:12Z",
        "comment": "@gares, @pi8027, @strub can one of you assign themselves?"
      },
      {
        "author": "gares",
        "date": "2020-09-01T11:51:39Z",
        "comment": "It looks ok to me, but I'm not in love with the `are_` part of the name. Is it similar to something already existing?"
      },
      {
        "author": "chdoc",
        "date": "2020-09-01T12:37:24Z",
        "comment": "Also, is it useful to have `T : nonPropType` rather than `T : eqType` while requiring `r : rel T` to be a boolean relation? I mean, the proof of `are_allpairs_cons` is nifty, but I would have expected a simpler proof based in `are_allpairsP`. "
      },
      {
        "author": "CohenCyril",
        "date": "2020-09-01T12:43:31Z",
        "comment": "> Also, is it useful to have `T : nonPropType` rather than `T : eqType` while requiring `r : rel T` to be a boolean relation? I mean, the proof of `are_allpairs_cons` is nifty, but I would have expected a simpler proof based in `are_allpairsP`.\r\n\r\nIt may happen that a relation is decidable even on some non discrete types (e.g. a pair of an ordered type with a no discrete type), and I would like to preserve the full generality of the theorem on such occurences."
      },
      {
        "author": "CohenCyril",
        "date": "2020-09-01T12:45:32Z",
        "comment": "> It looks ok to me, but I'm not in love with the `are_` part of the name. Is it similar to something already existing?\r\n\r\nI went back and forth a lot in the naming: the working name was the ugly `all11` (hence the 80 character overflow caused by sed)...\r\nI am open to suggestions on the naming but I was pretty happy with this one being meaningful (\"Are all pairs satisfying r on s?\") and exposing the implementation using `allpairs` in the name itself.."
      },
      {
        "author": "CohenCyril",
        "date": "2020-09-01T12:46:47Z",
        "comment": "Actually I would have gone for `is` except `are` is grammatically more accurate (since it is about a relation, not a predicate)."
      },
      {
        "author": "chdoc",
        "date": "2020-09-01T13:06:19Z",
        "comment": "Well, the predicate states that \"all pairs of `s` are _in_ the relation `r`\" (using the usual mathematical speak of relations as sets/predicates). So how about `allpairs_in r s`? For this one even the partial application `allpairs_in r` seems reasonable to me. Unfortunately `in` is used differently elsewhere. "
      },
      {
        "author": "chdoc",
        "date": "2020-09-01T13:58:46Z",
        "comment": "In any event, `are_allpairs r s` is a proposition not a question. So even `allpairs_are r s` (\"all pairs _are_ r(-related)\") seems preferable to me."
      },
      {
        "author": "gares",
        "date": "2020-09-01T14:07:38Z",
        "comment": "> So even `allpairs_are r s` (\"all pairs _are_ r(-related)\") seems preferable to me.\r\n\r\n+1\r\n\r\nTo me the thing is messy because `allpairs` does not really build pairs but steals the name. If we had a `pairs` thing that builds the sequence of all pairs, we could use allpairs for your new concept, eg `allpairs r xs := all (fixup r) (pairs xs xs)`."
      },
      {
        "author": "chdoc",
        "date": "2020-09-01T14:27:59Z",
        "comment": "> To me the thing is messy because `allpairs` does not really build pairs but steals the name.\r\n\r\nWhile the string \"allpairs\" appears in a considerable number of of lemmas, the definition `allpairs` seems to be virtually unused, because `allpairs` is (almost) always inlined. The only lemma about `allpairs` in `ssreflect` and `algebra` appears to be `allpairs_tupleP`. :thinking: "
      },
      {
        "author": "CohenCyril",
        "date": "2020-09-01T21:28:55Z",
        "comment": "> > To me the thing is messy because `allpairs` does not really build pairs but steals the name.\r\n> \r\n> While the string \"allpairs\" appears in a considerable number of of lemmas, the definition `allpairs` seems to be virtually unused, because `allpairs` is (almost) always inlined. The only lemma about `allpairs` in `ssreflect` and `algebra` appears to be `allpairs_tupleP`.\r\n\r\n`allpairs` actually immediately unfolds to the idiom `[seq f x y | x <- s, y <- t x]` which gives its name to the lemmas, and it is a rather historic convention (the self-expanding definition is newer as far as I remember). Moreover it indeed does not form pairs but applies a function symbol `f` to them (and this function symbol can be dependent), sometimes it's a `pair`, sometimes a `sigT` and sometimes something else, so it makes it more flexible to let `f` variable.\r\n\r\nI'm all in favor of `allpairs_are`anyway!\r\n\r\n"
      },
      {
        "author": "gares",
        "date": "2020-09-02T07:51:10Z",
        "comment": "I saw that, allpairs maps a function overs all the pairs, which could be named, to me, map_allpairs. Anyway, I'm OK with the renaming proposed by @chdoc "
      },
      {
        "author": "CohenCyril",
        "date": "2020-09-02T10:07:39Z",
        "comment": "I fixed the names, made the proof shorter and more readable and introduced the `mkseqP` idiom."
      },
      {
        "author": "CohenCyril",
        "date": "2020-09-02T11:48:13Z",
        "comment": "I have a new name suggestion: how about `allrel`?\r\nPros:\r\n- stands for \"all related\"\r\n- has `rel` and `all` in the name (and no more)\r\n- shorter\r\n"
      },
      {
        "author": "chdoc",
        "date": "2020-09-02T11:50:41Z",
        "comment": "> I have a new name suggestion: how about `allrel`?\r\n\r\nI approve, in particular because it avoids the `_`, leading to nicer lemma names. "
      },
      {
        "author": "CohenCyril",
        "date": "2020-09-03T13:13:21Z",
        "comment": "@gares all good?"
      }
    ],
    "review_discussion": [
      {
        "author": "chdoc",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-09-01T12:25:08Z",
        "comment": "I agree with @gares in not being happy with this name."
      },
      {
        "author": "chdoc",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-09-01T12:27:42Z",
        "comment": "The more natural generalization would probably be `_.+1` rather than `size xs`"
      },
      {
        "author": "chdoc",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-09-01T12:28:59Z",
        "comment": "This line has 83 characters, I suggest splitting it at the semicolon :grin: "
      },
      {
        "author": "gares",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-09-01T12:36:34Z",
        "comment": "@CohenCyril probably took my vscode configuration..."
      },
      {
        "author": "chdoc",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-09-02T11:33:06Z",
        "comment": "Do you think that generating the `s = [::]` case, which reappears a as a subcase of the `s = mkseq f n` case, is preferable to requiring some `x0 : T`? If so, maybe replace `mkseq f n` with `mkseq f n.+1`, do avoid the case duplication?"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-09-02T11:39:19Z",
        "comment": "Actually, no I'm not sure... and having `n` looks dangerous `(iota 0 n.+1)` might expand and the point of `mkseqP` was to abstract away these... Maybe I will switch to requiring `x0` here..."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-09-02T11:47:51Z",
        "comment": "@chdoc looks better now I think"
      },
      {
        "author": "chdoc",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2020-09-02T12:09:10Z",
        "comment": "which asserts _that_ / asserting _that_"
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "b81aa92716bcd19fa364911f5efaf5d0155d9376",
        "message": "Adding allrel predicate",
        "date": "2020-09-03T12:16:33Z"
      }
    ]
  },
  {
    "author": "erikmd",
    "number": 557,
    "diff_summary": [
      {
        "file": ".gitlab-ci.yml",
        "status": "M",
        "additions": 12,
        "deletions": 4
      }
    ],
    "state": "merged",
    "open_date": "2020-08-28T22:35:15Z",
    "update_date": "2020-09-07T07:53:14Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: CI",
        "description": "Issue or PR about the CI. (Gitlab CI or CI of dependencies problems linked with math-comp)"
      }
    ],
    "commits": [
      {
        "author": "erikmd",
        "committer": "erikmd",
        "hash": "2615a8979322e5a462993d90d585f18ada429d75",
        "message": "chore: refactor GitLab CI config a bit to lighten nightly builds\n\n* more precisely: jobs {coq-8.12, mathcomp-dev:coq-8.12} are unneeded\n  in the scheduled pipeline\n  https://gitlab.com/math-comp/math-comp/-/pipelines/182928354\n\n* Insert commented jobs for upcoming coq-8.13 as well.",
        "date": "2020-08-28T22:33:37Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 556,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 4,
        "deletions": 0
      },
      {
        "file": "mathcomp/ssreflect/ssrnat.v",
        "status": "M",
        "additions": 4,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2020-08-25T12:52:28Z",
    "update_date": "2020-08-28T14:17:08Z",
    "discussion": [],
    "review_discussion": [
      {
        "author": "pi8027",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2020-08-26T05:51:39Z",
        "comment": "Isn't it better to merge these two items?"
      },
      {
        "author": "CohenCyril",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2020-08-26T12:54:36Z",
        "comment": "I prefer this is done in the release phase, to minimize possible faulty merge union"
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "d56db9d3a6c098055ebea57557c1d1aaf6f0c9b6",
        "message": "Adding lemma `oddS`",
        "date": "2020-08-25T12:51:41Z"
      }
    ]
  },
  {
    "author": "chdoc",
    "number": 555,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 30,
        "deletions": 7
      },
      {
        "file": "mathcomp/ssreflect/fingraph.v",
        "status": "M",
        "additions": 30,
        "deletions": 7
      },
      {
        "file": "mathcomp/ssreflect/finset.v",
        "status": "M",
        "additions": 30,
        "deletions": 7
      },
      {
        "file": "mathcomp/ssreflect/fintype.v",
        "status": "M",
        "additions": 30,
        "deletions": 7
      }
    ],
    "state": "merged",
    "open_date": "2020-08-20T09:01:02Z",
    "update_date": "2020-09-28T19:48:48Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2020-09-27T13:49:12Z",
        "comment": "Please rebase"
      },
      {
        "author": "CohenCyril",
        "date": "2020-09-27T14:06:24Z",
        "comment": "@chdoc I will merge after the CI passes. After than could you open an issue for 1.13.0 to remove the deprecated symbol?"
      }
    ],
    "review_discussion": [
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/fintype.v",
        "date": "2020-09-02T10:40:22Z",
        "comment": "```suggestion\r\nProof. by move/pred0P/(_ x) => /=; case: (x \\in A). Qed.\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/fintype.v",
        "date": "2020-09-02T10:41:27Z",
        "comment": "```suggestion\r\nby move=> subAB subCD BD; apply/(disjointWl subAB)/(disjointWr subCD).\r\n```"
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "chdoc",
        "committer": "chdoc",
        "hash": "7a30f0625b1e3b3416e5934a0152750fd4f5398e",
        "message": "some lemmas for disjoint",
        "date": "2020-09-27T13:59:29Z"
      }
    ]
  },
  {
    "author": "chdoc",
    "number": 553,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 21,
        "deletions": 14
      },
      {
        "file": "mathcomp/ssreflect/ssrAC.v",
        "status": "M",
        "additions": 21,
        "deletions": 14
      }
    ],
    "state": "merged",
    "open_date": "2020-08-11T14:12:46Z",
    "update_date": "2020-08-13T15:19:16Z",
    "discussion": [
      {
        "author": "chdoc",
        "date": "2020-08-13T09:00:46Z",
        "comment": "@CohenCyril I just realized that this PR subsumes #527 . I needed to add some more instanced of `(only parsing)` though, to get rid of all warnings. "
      },
      {
        "author": "CohenCyril",
        "date": "2020-08-13T14:51:44Z",
        "comment": "I do not think it subsumes #527 which also added a scope to the notations..."
      },
      {
        "author": "chdoc",
        "date": "2020-08-13T15:09:20Z",
        "comment": "> I do not think it subsumes #527 which also added a scope to the notations...\r\n\r\nIndeed, I overlooked the scope annotations. Still, there are more than just the three notations modified in #527 that cause warnings. Feel free to adapt as you see fit. "
      },
      {
        "author": "CohenCyril",
        "date": "2020-08-13T15:19:03Z",
        "comment": "@chdoc I will merge this one, and we can adapt #527 later (there was an issue with the rescoping)"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "chdoc",
        "committer": "chdoc",
        "hash": "2d4885d8902280b487535c7dfc3db69c1f95443e",
        "message": "fix non-reversible-notation warnings",
        "date": "2020-08-13T08:55:02Z"
      }
    ]
  },
  {
    "author": "chdoc",
    "number": 552,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 8,
        "deletions": 2
      },
      {
        "file": "mathcomp/ssreflect/ssrbool.v",
        "status": "M",
        "additions": 8,
        "deletions": 2
      }
    ],
    "state": "merged",
    "open_date": "2020-08-11T12:37:08Z",
    "update_date": "2020-08-11T14:53:52Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "chdoc",
        "committer": "chdoc",
        "hash": "1bbfe3429a07bee2478fd15adf45b982fdfb5d2b",
        "message": "fix notation-incompatible-format warnings",
        "date": "2020-08-11T12:35:41Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 551,
    "diff_summary": [
      {
        "file": ".gitattributes",
        "status": "M",
        "additions": 1,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2020-08-11T01:56:07Z",
    "update_date": "2020-08-11T01:56:29Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "dc20e2d9c85fd90393867f816f659edee1ac8a92",
        "message": "Use union driver for CHANGELOG_UNRELEASED",
        "date": "2020-08-11T01:55:04Z"
      }
    ]
  },
  {
    "author": "jashug",
    "number": 550,
    "diff_summary": [
      {
        "file": "mathcomp/algebra/poly.v",
        "status": "M",
        "additions": 1,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2020-07-29T17:40:14Z",
    "update_date": "2020-08-20T15:35:41Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2020-08-13T15:15:15Z",
        "comment": "@jashug, thanks for your contribution! Would you mind rebasing it?"
      },
      {
        "author": "CohenCyril",
        "date": "2020-08-13T15:28:37Z",
        "comment": "Thanks @jashug "
      },
      {
        "author": "jashug",
        "date": "2020-08-19T17:08:56Z",
        "comment": "This and math-comp/odd-order#25 are ready to go."
      },
      {
        "author": "maximedenes",
        "date": "2020-08-20T14:31:03Z",
        "comment": "@CohenCyril @gares do you mind merging this? Thanks!"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "jashug",
        "committer": "jashug",
        "hash": "94efd6ebfba06d94ee5fdedbe13ea386b658ab46",
        "message": "Be robust to a change in the default argument naming algorithm.\n\nOverlay for coq/coq#12756, which changes the default argument name to\njust `S` from `S0`. This change preserves the old name; switching instead\nto use `S` may be preferable but introduces a potential impact on\ndownstream users of mathcomp.",
        "date": "2020-08-13T15:24:10Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 548,
    "diff_summary": [
      {
        "file": "mathcomp/algebra/intdiv.v",
        "status": "M",
        "additions": 164,
        "deletions": 166
      },
      {
        "file": "mathcomp/algebra/matrix.v",
        "status": "M",
        "additions": 164,
        "deletions": 166
      },
      {
        "file": "mathcomp/algebra/polydiv.v",
        "status": "M",
        "additions": 164,
        "deletions": 166
      },
      {
        "file": "mathcomp/algebra/rat.v",
        "status": "M",
        "additions": 164,
        "deletions": 166
      },
      {
        "file": "mathcomp/algebra/ssralg.v",
        "status": "M",
        "additions": 164,
        "deletions": 166
      },
      {
        "file": "mathcomp/algebra/ssrint.v",
        "status": "M",
        "additions": 164,
        "deletions": 166
      },
      {
        "file": "mathcomp/algebra/vector.v",
        "status": "M",
        "additions": 164,
        "deletions": 166
      },
      {
        "file": "mathcomp/field/falgebra.v",
        "status": "M",
        "additions": 164,
        "deletions": 166
      },
      {
        "file": "mathcomp/fingroup/fingroup.v",
        "status": "M",
        "additions": 164,
        "deletions": 166
      },
      {
        "file": "mathcomp/fingroup/perm.v",
        "status": "M",
        "additions": 164,
        "deletions": 166
      },
      {
        "file": "mathcomp/ssreflect/div.v",
        "status": "M",
        "additions": 164,
        "deletions": 166
      },
      {
        "file": "mathcomp/ssreflect/order.v",
        "status": "M",
        "additions": 164,
        "deletions": 166
      },
      {
        "file": "mathcomp/ssreflect/path.v",
        "status": "M",
        "additions": 164,
        "deletions": 166
      },
      {
        "file": "mathcomp/ssreflect/prime.v",
        "status": "M",
        "additions": 164,
        "deletions": 166
      },
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 164,
        "deletions": 166
      },
      {
        "file": "mathcomp/ssreflect/ssrnat.v",
        "status": "M",
        "additions": 164,
        "deletions": 166
      }
    ],
    "state": "open",
    "open_date": "2020-07-16T05:07:41Z",
    "update_date": "2021-10-07T10:40:08Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2020-08-13T15:11:49Z",
        "comment": "@pi8027 I'm a bit hesitant about that one, it should be discussed at the MC meeting and go hand in hand with an improvement of Coq search tool to index the delta-expansion of certain statments..."
      },
      {
        "author": "pi8027",
        "date": "2020-08-13T15:37:30Z",
        "comment": "@CohenCyril I agree. This PR also breaks odd-order by changing argument scopes of some lemmas, but putting all the scope information back by `Arguments` command seems too much to do."
      },
      {
        "author": "pi8027",
        "date": "2020-09-23T10:30:43Z",
        "comment": "For the record, there was a discussion about this PR in [the last MC call](https://github.com/math-comp/math-comp/wiki/Minutes-September-23-2020)."
      },
      {
        "author": "pi8027",
        "date": "2021-05-11T01:27:14Z",
        "comment": "Should I consider cherry-picking non-problematic and useful changes from this PR, to include in 1.13.0?"
      }
    ],
    "review_discussion": [],
    "tags": [
      {
        "tag": "needs: fix",
        "description": "PR that needs to be fix (generally because reviewers asked to)."
      }
    ],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "e4f7b981654a2766990d82a4ffb2314474f884c6",
        "message": "Use predicators even extensively",
        "date": "2021-10-07T10:38:14Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 547,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 35,
        "deletions": 34
      },
      {
        "file": "mathcomp/ssreflect/order.v",
        "status": "M",
        "additions": 35,
        "deletions": 34
      }
    ],
    "state": "merged",
    "open_date": "2020-07-14T04:38:27Z",
    "update_date": "2020-08-17T14:46:40Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2020-08-13T15:17:54Z",
        "comment": "@pi8027 can you rebase?"
      },
      {
        "author": "pi8027",
        "date": "2020-08-13T15:18:53Z",
        "comment": "@CohenCyril Yes. I will also write a changelog entry."
      },
      {
        "author": "pi8027",
        "date": "2020-08-13T15:32:50Z",
        "comment": "Done. Ready for review."
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "b73b31cdbd8e6255c3769dfe2306929792bfadb2",
        "message": "Qualify the dual_* notations with the Order module",
        "date": "2020-08-17T04:02:19Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 546,
    "diff_summary": [
      {
        "file": "mathcomp/Make.test-suite",
        "status": "A",
        "additions": 138,
        "deletions": 91
      },
      {
        "file": "mathcomp/algebra/finalg.v",
        "status": "A",
        "additions": 138,
        "deletions": 91
      },
      {
        "file": "mathcomp/algebra/ssralg.v",
        "status": "A",
        "additions": 138,
        "deletions": 91
      },
      {
        "file": "mathcomp/field/fieldext.v",
        "status": "A",
        "additions": 138,
        "deletions": 91
      },
      {
        "file": "mathcomp/field/finfield.v",
        "status": "A",
        "additions": 138,
        "deletions": 91
      },
      {
        "file": "mathcomp/test_suite/test_regular_conv.v",
        "status": "A",
        "additions": 138,
        "deletions": 91
      }
    ],
    "state": "closed",
    "open_date": "2020-07-09T21:29:26Z",
    "update_date": "2020-10-07T22:35:55Z",
    "discussion": [
      {
        "author": "pi8027",
        "date": "2020-07-10T20:55:20Z",
        "comment": "I think we have observed another similar issue in https://github.com/math-comp/analysis/pull/205#discussion_r453067372. If `class_of` objects are primitive records (or if we use the flat variant of packed classes), this is not the case anymore. See also: https://github.com/math-comp/math-comp/pull/462#issuecomment-598130155."
      },
      {
        "author": "pi8027",
        "date": "2020-07-12T20:45:36Z",
        "comment": "Now this PR also fixes the conversion issue of regular instances but is a bit painful to merge as it is. I guess it is better to turn all the `class_of` objects into primitive records."
      }
    ],
    "review_discussion": [
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2020-07-12T20:48:13Z",
        "comment": "Since the `[comUnitRingType of R]` notation does an extra record eta expansion, I had to avoid it. :("
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/field/fieldext.v",
        "date": "2020-09-09T11:37:56Z",
        "comment": "cf https://gist.github.com/CohenCyril/c2c7d87c9677ea757a5b67d56a985fb8#file-this-revision-was-meant-to-be-a-local-improvement-to.patch"
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "9924c31b188591da5d339912f00799c7957ad873",
        "message": "Fix ambiguous coercion paths in fieldext.v",
        "date": "2020-09-28T14:24:03Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "eb305e9193f72d750034d19f1216b31a42782afb",
        "message": "Solve a convertibility issue of \"regular\" instances\n\n- The algebra structures take the closest ring structure as their base to solve\n  a convertibility issue of \"regular\" instances.\n- The notation `[fieldExtType F of L for K]` is removed.\n- Some missing `comAlgType` and `comUnitAlgType` instances are added.",
        "date": "2020-09-28T14:24:03Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 545,
    "diff_summary": [
      {
        "file": "mathcomp/field/fieldext.v",
        "status": "M",
        "additions": 6,
        "deletions": 4
      }
    ],
    "state": "merged",
    "open_date": "2020-07-08T22:09:29Z",
    "update_date": "2020-08-13T15:22:21Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "c0c2fd1e679688411c0c81ceab4066f2da5486e5",
        "message": "Make [fieldExtType F of L] work for abstract instances",
        "date": "2020-08-11T15:41:42Z"
      }
    ]
  },
  {
    "author": "chdoc",
    "number": 542,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/fingraph.v",
        "status": "M",
        "additions": 2,
        "deletions": 2
      }
    ],
    "state": "merged",
    "open_date": "2020-06-26T10:56:33Z",
    "update_date": "2020-08-11T01:57:16Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "chdoc",
        "committer": "chdoc",
        "hash": "8a4ae574ed75857b9762e06c11589409874ca1a4",
        "message": "fix \"Nothing to inject\" warnings",
        "date": "2020-06-26T10:54:27Z"
      }
    ]
  },
  {
    "author": "chdoc",
    "number": 541,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 10,
        "deletions": 1
      },
      {
        "file": "mathcomp/ssreflect/finset.v",
        "status": "M",
        "additions": 10,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2020-06-26T09:26:38Z",
    "update_date": "2020-08-11T00:49:28Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "chdoc",
        "committer": "chdoc",
        "hash": "a79e8b941cfd4a3343a90f14fba3b7f70293e679",
        "message": "lemmas for proper and setC",
        "date": "2020-06-26T09:25:15Z"
      }
    ]
  },
  {
    "author": "thery",
    "number": 540,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/ssrnat.v",
        "status": "M",
        "additions": 3,
        "deletions": 3
      }
    ],
    "state": "merged",
    "open_date": "2020-06-24T15:30:11Z",
    "update_date": "2020-06-24T16:24:16Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "thery",
        "committer": "thery",
        "hash": "d5aba2075565dd855c15b73e01a3c34f8f9b2313",
        "message": "fix the doc for ubnP in ssrnat",
        "date": "2020-06-24T15:28:26Z"
      }
    ]
  },
  {
    "author": "thery",
    "number": 539,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/bigop.v",
        "status": "M",
        "additions": 1,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2020-06-24T14:05:52Z",
    "update_date": "2020-06-24T16:17:04Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "thery",
        "committer": "thery",
        "hash": "d7167e988d194e98157f7d7f837d933c7299ba2a",
        "message": "simpler proof",
        "date": "2020-06-24T14:00:24Z"
      }
    ]
  },
  {
    "author": "affeldt-aist",
    "number": 537,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 13,
        "deletions": 0
      },
      {
        "file": "mathcomp/algebra/ssralg.v",
        "status": "M",
        "additions": 13,
        "deletions": 0
      },
      {
        "file": "mathcomp/algebra/ssrnum.v",
        "status": "M",
        "additions": 13,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2020-06-16T21:47:22Z",
    "update_date": "2020-06-24T16:15:11Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2020-06-17T13:06:03Z",
        "comment": "@thery I cannot review this one as I am a coauthor. Can you review it?"
      },
      {
        "author": "thery",
        "date": "2020-06-17T13:13:20Z",
        "comment": "> @thery I cannot review this one as I am a coauthor. Can you review it?\r\n\r\nno problem"
      },
      {
        "author": "thery",
        "date": "2020-06-24T15:13:11Z",
        "comment": ":+1: if you clean the history, I merge"
      },
      {
        "author": "CohenCyril",
        "date": "2020-06-24T16:10:28Z",
        "comment": ">  if you clean the history, I merge\r\n\r\n~~You can \"Squash and merge\", to clear the history using github's functionality~~\r\n\r\nI squashed"
      }
    ],
    "review_discussion": [
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2020-06-17T12:41:39Z",
        "comment": "In ssrnum, `%O` can and must be omitted (unless I am mistaken, but if they can, they must)."
      },
      {
        "author": "thery",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2020-06-24T13:34:34Z",
        "comment": "Maybe this is simpler\r\n```\r\nLemma ler_sum_nat  (m n : nat) (F G : nat -> R) :\r\n  (forall i, (m <= i < n)%N -> F i <= G i) ->\r\n  \\sum_(m <= i < n) F i <= \\sum_(m <= i < n) G i.\r\nProof.\r\nmove=> leFG.\r\nby rewrite ![\\sum_(_ <= _ < _) _]big_nat_cond ler_sum // => i /andP[] /leFG.\r\nQed.\r\n```"
      },
      {
        "author": "thery",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2020-06-24T13:53:04Z",
        "comment": "Maybe in two moves (there is a `iter_addn_0` for `nat`)\r\n\r\n```\r\nLemma iter_addr_0 n (m : V) : iter n (+%R m) 0 = m *+ n.\r\nProof. by elim: n => //= n ->; rewrite mulrS. Qed.\r\n\r\nLemma sumr_const_nat (m n : nat) (x : V) :\r\n   \\sum_(n <= i < m) x = x *+ (m - n).\r\nProof. by rewrite big_const_nat iter_addr_0. Qed.\r\n```\r\n"
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "affeldt-aist",
        "committer": "CohenCyril",
        "hash": "85ea6531db1cbab7d0334438791c67f55b93cf6c",
        "message": "missing lemmas discovered while developing mathcomp-analysis",
        "date": "2020-06-24T16:13:39Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 536,
    "diff_summary": [
      {
        "file": "etc/utils/hierarchy.ml",
        "status": "M",
        "additions": 15,
        "deletions": 10
      },
      {
        "file": "mathcomp/Make.test-suite",
        "status": "M",
        "additions": 15,
        "deletions": 10
      },
      {
        "file": "mathcomp/Makefile.common",
        "status": "M",
        "additions": 15,
        "deletions": 10
      }
    ],
    "state": "merged",
    "open_date": "2020-06-15T17:26:19Z",
    "update_date": "2020-08-11T00:25:31Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2020-06-15T18:22:24Z",
        "comment": "@pi8027 thanks for addressing these issues!\r\n\r\n> * the `build` prerequisite of `test_suite/test_hierarchy_all.v` should be order only (right?),\r\n\r\nI did not understand this sentence, what do you mean by *order only*?\r\n"
      },
      {
        "author": "CohenCyril",
        "date": "2020-07-08T14:36:51Z",
        "comment": "@pi8027 is this PR ready for reviews?"
      },
      {
        "author": "pi8027",
        "date": "2020-07-08T14:38:36Z",
        "comment": "@CohenCyril Yes."
      },
      {
        "author": "CohenCyril",
        "date": "2020-07-08T14:39:21Z",
        "comment": "@maximedenes could you have a look or would you prefer me to ask another review?"
      },
      {
        "author": "maximedenes",
        "date": "2020-08-25T16:38:00Z",
        "comment": "> could you have a look or would you prefer me to ask another review?\r\n\r\n@CohenCyril Sorry, this went completely below my radar."
      }
    ],
    "review_discussion": [
      {
        "author": "pi8027",
        "file": "mathcomp/Makefile.common",
        "date": "2020-06-15T18:26:50Z",
        "comment": "@CohenCyril I meant \"order-only prerequisites\" in [this documentation](https://www.gnu.org/software/make/manual/html_node/Prerequisite-Types.html). If we remove this pipe symbol, repeating `make test-suite` forces us to rerun the test suite."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/Makefile.common",
        "date": "2020-06-15T18:45:07Z",
        "comment": "After re-reading the documentation, I think this is not the right solution. Sorry for the mess."
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "4a0bc9e3de7a19439f45ba59405015033607ed68",
        "message": "Fix bugs in hierarchy.ml\n\n- pass `Unix.environment ()` to `coqtop` to preserve the parent process\n  environment,\n- check the exit status of `coqtop` and report an error if it is wrong,\n- do not rely on `ssrfun.id` in the `check_join` tactic, and\n- improve the error message for missing unification hints.",
        "date": "2020-06-27T04:06:00Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "36613c83d65aa821b01a9fac38c479af65ef3589",
        "message": "Fix some Makefile issues and rename `hierarchy_test.v` to `test_hierarchy_all.v`",
        "date": "2020-06-27T04:10:12Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 535,
    "diff_summary": [
      {
        "file": "etc/utils/packager",
        "status": "M",
        "additions": 0,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2020-06-10T13:38:04Z",
    "update_date": "2020-06-10T13:38:18Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "02ca8ee07c590a86a98ebefb791a6bc1ed30a5e5",
        "message": "Generated opam packages allow coq-dev again\n\nAs a result of [a discussion on Zulip](https://coq.zulipchat.com/#narrow/stream/237665-math-comp-devs/topic/MathComp.201.2E11.2E0.20OPAM.20packages.20Coq.20compatibility)\nReverts \"removing opam `| (= \"dev\")` for released packages\"\n(commit 313e44316177c918b363c118f15297e08d13eb4e).",
        "date": "2020-06-10T13:37:16Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 534,
    "diff_summary": [
      {
        "file": "config.nix",
        "status": "M",
        "additions": 5,
        "deletions": 3
      },
      {
        "file": "default.nix",
        "status": "M",
        "additions": 5,
        "deletions": 3
      },
      {
        "file": "mathcomp/ssreflect/order.v",
        "status": "M",
        "additions": 5,
        "deletions": 3
      }
    ],
    "state": "merged",
    "open_date": "2020-06-09T13:50:52Z",
    "update_date": "2020-06-09T13:51:51Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "b13a3ab3fda84037fdea2101daff35cc88cae664",
        "message": "add lua&sed to shell and switch to coq 8.11 + fixing doc",
        "date": "2020-06-09T13:40:07Z"
      }
    ]
  },
  {
    "author": "affeldt-aist",
    "number": 533,
    "diff_summary": [
      {
        "file": "CHANGELOG.md",
        "status": "M",
        "additions": 125,
        "deletions": 113
      },
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 125,
        "deletions": 113
      }
    ],
    "state": "merged",
    "open_date": "2020-06-09T13:01:38Z",
    "update_date": "2020-06-09T13:53:13Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "4c7617bd75229acbc8592f2b2fa2e79fe9995cc4",
        "message": "edit changelogs before release",
        "date": "2020-06-09T13:11:01Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 532,
    "diff_summary": [
      {
        "file": "mathcomp/algebra/matrix.v",
        "status": "M",
        "additions": 104,
        "deletions": 122
      },
      {
        "file": "mathcomp/algebra/ssrint.v",
        "status": "M",
        "additions": 104,
        "deletions": 122
      },
      {
        "file": "mathcomp/algebra/ssrnum.v",
        "status": "M",
        "additions": 104,
        "deletions": 122
      },
      {
        "file": "mathcomp/character/classfun.v",
        "status": "M",
        "additions": 104,
        "deletions": 122
      },
      {
        "file": "mathcomp/field/cyclotomic.v",
        "status": "M",
        "additions": 104,
        "deletions": 122
      },
      {
        "file": "mathcomp/fingroup/fingroup.v",
        "status": "M",
        "additions": 104,
        "deletions": 122
      },
      {
        "file": "mathcomp/ssreflect/bigop.v",
        "status": "M",
        "additions": 104,
        "deletions": 122
      },
      {
        "file": "mathcomp/ssreflect/generic_quotient.v",
        "status": "M",
        "additions": 104,
        "deletions": 122
      },
      {
        "file": "mathcomp/ssreflect/order.v",
        "status": "M",
        "additions": 104,
        "deletions": 122
      },
      {
        "file": "mathcomp/ssreflect/ssrnotations.v",
        "status": "M",
        "additions": 104,
        "deletions": 122
      }
    ],
    "state": "merged",
    "open_date": "2020-06-08T23:17:59Z",
    "update_date": "2020-06-09T04:27:19Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "8006cbf40eeb017aacb3ecaa8c4538f9a5aaa3bf",
        "message": "fix coq 8.12 warnings",
        "date": "2020-06-09T02:45:15Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 531,
    "diff_summary": [
      {
        "file": "mathcomp/field/cyclotomic.v",
        "status": "M",
        "additions": 2,
        "deletions": 2
      }
    ],
    "state": "merged",
    "open_date": "2020-06-08T15:31:03Z",
    "update_date": "2020-06-08T20:02:26Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "6bfc094b858c7ab1c5df7f780d68e04ba0ba4c23",
        "message": "turning let into local definition",
        "date": "2020-06-08T15:27:57Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 530,
    "diff_summary": [
      {
        "file": ".gitlab-ci.yml",
        "status": "M",
        "additions": 50,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2020-06-08T14:48:23Z",
    "update_date": "2020-09-27T10:43:46Z",
    "discussion": [
      {
        "author": "pi8027",
        "date": "2020-06-16T11:46:39Z",
        "comment": "What about fcsl-pcm?"
      },
      {
        "author": "anton-trunov",
        "date": "2020-06-16T12:18:49Z",
        "comment": "FWIW, coq-fcsl-pcm is fully compatible with Coq 8.12"
      },
      {
        "author": "pi8027",
        "date": "2020-09-10T14:32:06Z",
        "comment": "I hope the issue has been disappeared thanks to math-comp/finmap#71. @CohenCyril Could you rebase to refresh CI?"
      },
      {
        "author": "pi8027",
        "date": "2020-09-27T02:28:20Z",
        "comment": "Since there is no response here, let me commit my above suggestion to see if it works."
      }
    ],
    "review_discussion": [
      {
        "author": "pi8027",
        "file": ".gitlab-ci.yml",
        "date": "2020-09-10T14:30:52Z",
        "comment": "```suggestion\r\nci-fcsl-pcm-8.12:\r\n  extends: .ci-fcsl-pcm\r\n  variables:\r\n    COQ_VERSION: \"8.12\"\r\n```"
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "3b0c55c885a34ff7b4a4f461d548afe9277b76ad",
        "message": "More CI\n\n- fourcolor 8.11 and 8.12\n- odd-order 8.11 and 8.12\n- bigenough 8.11 and 8.12\n- finmap    8.11 and 8.12",
        "date": "2020-06-08T14:48:55Z"
      },
      {
        "author": "pi8027",
        "committer": "web-flow",
        "hash": "9c4bb59c2abe19b65f08678fcb35d43d7476fdd9",
        "message": "Update .gitlab-ci.yml",
        "date": "2020-09-27T02:28:32Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 528,
    "diff_summary": [
      {
        "file": "mathcomp/algebra/Make",
        "status": "M",
        "additions": 43,
        "deletions": 0
      },
      {
        "file": "mathcomp/character/Make",
        "status": "M",
        "additions": 43,
        "deletions": 0
      },
      {
        "file": "mathcomp/field/Make",
        "status": "M",
        "additions": 43,
        "deletions": 0
      },
      {
        "file": "mathcomp/fingroup/Make",
        "status": "M",
        "additions": 43,
        "deletions": 0
      },
      {
        "file": "mathcomp/solvable/Make",
        "status": "M",
        "additions": 43,
        "deletions": 0
      },
      {
        "file": "mathcomp/ssreflect/Make",
        "status": "M",
        "additions": 43,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2020-06-08T13:17:43Z",
    "update_date": "2020-06-08T14:48:06Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "fe6a6d967a8613695fde95f1652a8fa56c4b5d28",
        "message": "silencing warnings in individual packages",
        "date": "2020-06-08T13:11:01Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 527,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/ssrAC.v",
        "status": "M",
        "additions": 3,
        "deletions": 3
      }
    ],
    "state": "open",
    "open_date": "2020-06-08T13:06:38Z",
    "update_date": "2020-09-27T13:49:27Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "2a5145a9dfc6577f4b8f5d3e668e5ffb86f0888b",
        "message": "Adding only parsong to notations in ssrAC",
        "date": "2020-06-08T13:05:43Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 525,
    "diff_summary": [
      {
        "file": ".github/workflows/nix.yml",
        "status": "M",
        "additions": 11,
        "deletions": 10
      }
    ],
    "state": "merged",
    "open_date": "2020-06-08T12:12:08Z",
    "update_date": "2020-06-08T12:47:53Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "f7cd68d60940d88f1991599489b92bc921efc12d",
        "message": "tentative fix",
        "date": "2020-06-07T16:54:36Z"
      },
      {
        "author": "CohenCyril",
        "committer": "web-flow",
        "hash": "84f21345c454a482bfb9a4928bfaa424ab2aa946",
        "message": "fixup",
        "date": "2020-06-08T11:53:25Z"
      },
      {
        "author": "CohenCyril",
        "committer": "web-flow",
        "hash": "b2aa1826c7272aca568859755a359bde9708f7cc",
        "message": "fixup",
        "date": "2020-06-08T12:23:24Z"
      },
      {
        "author": "CohenCyril",
        "committer": "web-flow",
        "hash": "a823fb046cf13e6421d0f2c639da2374b7b3d2b8",
        "message": "fixup",
        "date": "2020-06-08T12:27:35Z"
      }
    ]
  },
  {
    "author": "erikmd",
    "number": 524,
    "diff_summary": [
      {
        "file": ".gitlab-ci.yml",
        "status": "M",
        "additions": 14,
        "deletions": 1
      },
      {
        "file": "coq-mathcomp-ssreflect.opam",
        "status": "M",
        "additions": 14,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2020-06-07T19:25:55Z",
    "update_date": "2020-06-08T10:25:37Z",
    "discussion": [
      {
        "author": "erikmd",
        "date": "2020-06-07T20:47:08Z",
        "comment": "Note to @anton-trunov: in addition to the deploy jobs I had included a `ci-lemma-overloading-8.12` test job which failed just because the opam file in lemma-overloading must be updated.\r\nSo I'm going to open a PR (from the templates) in the lemma-overloading repo to support `8.12`, but before that one needs to wait that https://github.com/coq/opam-coq-archive/pull/1279 is merged."
      },
      {
        "author": "erikmd",
        "date": "2020-06-07T21:38:28Z",
        "comment": "(closing and reopening to relaunch the CI)"
      },
      {
        "author": "erikmd",
        "date": "2020-06-07T23:01:07Z",
        "comment": "the CI is green now :heavy_check_mark:"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "erikmd",
        "committer": "erikmd",
        "hash": "2b4e709b7c80e0c35734a7b9eb834cc9d133d8d6",
        "message": "[CI/CD] Deploy mathcomp/mathcomp-dev:coq-8.12 (with Coq 8.12+alpha)",
        "date": "2020-06-07T19:29:56Z"
      }
    ]
  },
  {
    "author": "affeldt-aist",
    "number": 522,
    "diff_summary": [
      {
        "file": "README.md",
        "status": "M",
        "additions": 5,
        "deletions": 9
      }
    ],
    "state": "merged",
    "open_date": "2020-06-05T23:30:28Z",
    "update_date": "2020-06-06T17:40:09Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "d50fa93d5bdddbc42bceb59a9e40cace01dfc2ba",
        "message": "change links to the wiki to links to the website",
        "date": "2020-06-05T23:32:42Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 521,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 119,
        "deletions": 8
      },
      {
        "file": "mathcomp/ssreflect/ssrbool.v",
        "status": "M",
        "additions": 119,
        "deletions": 8
      }
    ],
    "state": "merged",
    "open_date": "2020-06-04T15:12:54Z",
    "update_date": "2020-11-02T07:53:56Z",
    "discussion": [
      {
        "author": "pi8027",
        "date": "2020-11-20T02:34:21Z",
        "comment": "@CohenCyril Did you PR this one to Coq? If you didn't, I will do that."
      },
      {
        "author": "CohenCyril",
        "date": "2020-11-20T02:36:10Z",
        "comment": "I did not..."
      }
    ],
    "review_discussion": [
      {
        "author": "CohenCyril",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2020-08-11T00:41:32Z",
        "comment": "```suggestion\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2020-08-11T00:41:40Z",
        "comment": "```suggestion\r\n```"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/ssrbool.v",
        "date": "2020-09-28T05:57:57Z",
        "comment": "These notations are used only in the `LocalGlobal` section so it is better to declare them there."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/ssrbool.v",
        "date": "2020-09-28T05:58:15Z",
        "comment": "`ph` is unused."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/ssrbool.v",
        "date": "2020-09-28T16:54:56Z",
        "comment": "There are some unused `Variable`s.\r\n```suggestion\r\nVariables T1 T2 T3 : predArgType.\r\nVariables (D1 : {pred T1}) (D2 : {pred T2}).\r\nVariables (f : T1 -> T2) (h : T3).\r\nVariable Q1 : (T1 -> T2) -> T1 -> Prop.\r\nVariable Q1l : (T1 -> T2) -> T3 -> T1 -> Prop.\r\nVariable Q2 : (T1 -> T2) -> T1 -> T1 -> Prop.\r\n```"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/ssrbool.v",
        "date": "2020-09-29T04:59:05Z",
        "comment": "Since `D2` appears in their assumptions, I thought it should be implicit here."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/ssrbool.v",
        "date": "2020-09-29T10:59:06Z",
        "comment": "I think my choice was deliberate, but I cannot remember the reason. Let me figure it out again and write it in a comment. (Or change my mind if required)"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/ssrbool.v",
        "date": "2020-10-29T03:01:12Z",
        "comment": "@CohenCyril Any news?"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/ssrbool.v",
        "date": "2020-10-29T11:24:12Z",
        "comment": "Thanks for pinging me back. Yes, I stand by my choices. The rationale is that whether you apply the lemma backward or forward you should be able to provide exactly the missing data. For example if you apply `on1W_in` forward, or if you apply `on1S` backwards, you should be able to provide `D2`."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/ssrbool.v",
        "date": "2020-10-30T03:34:28Z",
        "comment": "OK. I agree."
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "f0dd790c5b142ac3afa36584551c1dd243b219ee",
        "message": "generic interactions between in and on\n\n+ Taking into account Kazuhiko's remarks\n\nCo-authored-by: Kazuhiko Sakaguchi <sakaguchi@coins.tsukuba.ac.jp>",
        "date": "2020-11-01T12:59:41Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "21897f9663ac06a3cd9517f07b7e574335773cf8",
        "message": "minimizing variables\n\nCo-authored-by: Kazuhiko Sakaguchi <pi8027@gmail.com>",
        "date": "2020-11-01T12:59:41Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 520,
    "diff_summary": [
      {
        "file": ".github/workflows/nix.yml",
        "status": "A",
        "additions": 86,
        "deletions": 18
      },
      {
        "file": "config.nix",
        "status": "A",
        "additions": 86,
        "deletions": 18
      },
      {
        "file": "default.nix",
        "status": "A",
        "additions": 86,
        "deletions": 18
      },
      {
        "file": "package.nix",
        "status": "A",
        "additions": 86,
        "deletions": 18
      }
    ],
    "state": "merged",
    "open_date": "2020-06-02T17:25:16Z",
    "update_date": "2020-06-03T14:56:40Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "42fbcdd1e937e56c4b145ff1acb7d437fa934efb",
        "message": "update default nix and setup cachix",
        "date": "2020-06-03T11:40:30Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 519,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 127,
        "deletions": 0
      },
      {
        "file": "mathcomp/ssreflect/ssrbool.v",
        "status": "M",
        "additions": 127,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2020-06-02T13:55:02Z",
    "update_date": "2020-06-08T13:10:18Z",
    "discussion": [
      {
        "author": "ybertot",
        "date": "2020-06-04T13:45:26Z",
        "comment": "It ssems to me that nothing needs to be done concerning documentation to add in the headers? @CohenCyril do you confirm?\r\nBackporting should be coq/theories/ssr/ssrbool.v should be the subject of a separate issue, not necessarily tagged with the 1.11 milestone.  Do you agree?"
      },
      {
        "author": "CohenCyril",
        "date": "2020-06-04T13:51:02Z",
        "comment": "~~@ybertot a Changelog is still needed, I did not have time to do it so far.~~\r\nOh you did it @affeldt-aist, thanks!"
      },
      {
        "author": "CohenCyril",
        "date": "2020-06-04T13:51:13Z",
        "comment": "Otherwise, your statements are correct."
      },
      {
        "author": "CohenCyril",
        "date": "2020-06-04T13:53:45Z",
        "comment": "@affeldt-aist the changelog must be fixed: `homoRL_in`, `homoLR_in`, `homo_mono_in`, `monoLR_in`, `monoRL_in`, and   `can_mono_in` were not added but changed."
      },
      {
        "author": "CohenCyril",
        "date": "2020-06-04T13:54:20Z",
        "comment": "(one cannot witness it easily unless one takes a look at `coq/theories/ssr/ssrbool.v`)"
      },
      {
        "author": "affeldt-aist",
        "date": "2020-06-07T11:03:06Z",
        "comment": "What about the following backport ?\r\n\r\nhttps://github.com/affeldt-aist/coq/blob/ssrbool_backpart_MathComp1.11/theories/ssr/ssrbool.v\r\n\r\n(Branch: https://github.com/affeldt-aist/coq/tree/ssrbool_backpart_MathComp1.11)\r\n\r\n- I haven't copy-pasted the following part of the documentation:\r\n```\r\n(* --> These will become part of the core SSReflect library with Coq 8.11.    *)\r\n(* This file also anticipates a v8.11 change in the definition of simpl_pred  *)\r\n(* to T -> simpl_pred T. This change ensures that inE expands the definition  *)\r\n(* of r : simpl_rel along with the \\in, when rewriting in y \\in r x.          *)\r\n```\r\n- I changed the name of the constructor of `predType` to avoid a clash.\r\n- I could compile Coq, MathComp's master, and Analysis' maxr branch\r\n  + I observed that a few Grab Existential Variables are not need anymore\r\n\r\nSill, I haven't tested Analysis' ereal_pseudometric branch, that would be a better test but requires a merge with Analysis' maxr branch.\r\n"
      },
      {
        "author": "CohenCyril",
        "date": "2020-06-07T16:57:22Z",
        "comment": "@affeldt-aist please do not touch anything else than what is added in this PR.\r\nIn particular the `predType` stuff you can find in `math-comp/mathcomp/ssreflect/ssrbool.v` is a backward compatibility machinery for older versions of Coq and it is thus not necessary to copy to the Coq repo.\r\nIf there really is a bug, please do it in a separate commit."
      },
      {
        "author": "affeldt-aist",
        "date": "2020-06-07T18:13:52Z",
        "comment": "(Update of previous comment.) (Updated to include `Section HomoMonoMorphismFlip` and to fix a typo in the branch name.)\r\n\r\nhttps://github.com/affeldt-aist/coq/blob/ssrbool_backport_MathComp1.11/theories/ssr/ssrbool.v\r\n\r\n(Branch: https://github.com/affeldt-aist/coq/tree/ssrbool_backport_MathComp1.11)\r\n\r\nContains:\r\n- `Section CancelOn.` coming from this PR\r\n- `Section inj_can_sym_in_on.` coming from this PR\r\n- `Section MonoHomoMorphismTheory_in.` that comes from this PR (and that updates the homonymous section that was already in Coq's `ssrbool.v`)\r\n- `Section HomoMonoMorphismFlip.` that comes from MathComp's master\r\n\r\nIt does not contain:\r\n- the documentation updates\r\n- the code about `pred` and `rel` that shall stay in MathComp's master\r\n\r\nAs a matter of test, I could compile Coq, MathComp's master, and Analysis' maxr branch.\r\nI observed that a few Grab Existential Variables are not need anymore.\r\nSill, I haven't tested Analysis' ereal_pseudometric branch, that would be a better test but requires a merge with Analysis' maxr branch."
      },
      {
        "author": "CohenCyril",
        "date": "2020-06-07T19:14:57Z",
        "comment": "> * `Section HomoMonoMorphismFlip.` that is in MathComp's master\r\n\r\nI forgot about this, I guess it could be included too actually..."
      },
      {
        "author": "affeldt-aist",
        "date": "2020-06-08T11:59:21Z",
        "comment": "@CohenCyril is ok to merge this PR (so that we can do the release) and to PR (today?) to Coq with https://github.com/affeldt-aist/coq/tree/ssrbool_backport_MathComp1.11 "
      },
      {
        "author": "CohenCyril",
        "date": "2020-06-08T12:02:57Z",
        "comment": "As for #513 the PR to Coq is not so urgent."
      },
      {
        "author": "CohenCyril",
        "date": "2020-06-08T12:03:38Z",
        "comment": "We can open an issue as soon as this is merged, to backport both #513 and this."
      },
      {
        "author": "CohenCyril",
        "date": "2020-06-08T12:13:48Z",
        "comment": "> As a matter of test, I could compile Coq, MathComp's master, and Analysis' maxr branch.\r\n\r\nBTW I do not know how you tested but the proper test would be to compile (Coq with fixes) + (Mathcomp removing fixes) + stuff"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "344207b5925cb82ab46798d3ca3c13d3926fa0cb",
        "message": "Missing homo_mono lemmas",
        "date": "2020-06-06T17:37:55Z"
      },
      {
        "author": "affeldt-aist",
        "committer": "CohenCyril",
        "hash": "0a4c927087ef2c3f6f0e20f6ad65ca932d9d3f6d",
        "message": "add new lemmas to the changelog",
        "date": "2020-06-06T17:38:55Z"
      },
      {
        "author": "affeldt-aist",
        "committer": "CohenCyril",
        "hash": "19a798cfaaa7875e7406c0283166fb5a97a0153c",
        "message": "fix the changelog",
        "date": "2020-06-06T17:39:35Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "9e73d5dffc48db33323a9bafb6cd9f497ed71414",
        "message": "bugfix",
        "date": "2020-06-06T17:39:37Z"
      },
      {
        "author": "CohenCyril",
        "committer": "web-flow",
        "hash": "c07a2c8a189e2870129f6d0831310849a89fbbee",
        "message": "Documenting addition policy to coq.",
        "date": "2020-06-08T10:32:53Z"
      }
    ]
  },
  {
    "author": "thery",
    "number": 517,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 15,
        "deletions": 0
      },
      {
        "file": "mathcomp/ssreflect/ssrnat.v",
        "status": "M",
        "additions": 15,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2020-05-31T14:42:14Z",
    "update_date": "2020-08-16T18:59:12Z",
    "discussion": [],
    "review_discussion": [
      {
        "author": "CohenCyril",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2020-08-11T00:27:03Z",
        "comment": "```suggestion\r\n       `subn_minr` `subn_maxr` in `ssrnat.v`\r\n```"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/ssrnat.v",
        "date": "2020-08-13T16:55:14Z",
        "comment": "If suffixes `l` and `r` stand for left and right distributivity, this should be named `subn_maxl`."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/ssrnat.v",
        "date": "2020-08-13T16:58:07Z",
        "comment": "`leqP` has been relocated in #429 after `maxn`/`minn` lemmas, so this does not work. I guess we should use `leq_total` instead here."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/ssrnat.v",
        "date": "2020-08-13T16:58:39Z",
        "comment": "`subn_minl` ?"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/ssrnat.v",
        "date": "2020-08-13T20:58:00Z",
        "comment": "```suggestion\r\nmove=> m n p; apply/eqP.\r\nrewrite eqn_leq !geq_max !leq_sub2r leq_max ?leqnn ?andbT ?orbT // /maxn.\r\nby case: (_ < _); rewrite leqnn // orbT.\r\n```"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/ssrnat.v",
        "date": "2020-08-13T20:58:45Z",
        "comment": "```suggestion\r\nmove=> m n p; apply/eqP.\r\nrewrite eqn_leq !leq_min !leq_sub2r geq_min ?leqnn ?orbT //= /minn.\r\nby case: (_ < _); rewrite leqnn // orbT.\r\n```"
      },
      {
        "author": "pi8027",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2020-08-15T06:47:52Z",
        "comment": "```suggestion\r\n- Added theorems about subtraction and min and max :\r\n       `subn_minl` and `subn_maxl` in `ssrnat.v`\r\n```"
      },
      {
        "author": "thery",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2020-08-15T09:43:57Z",
        "comment": ":see_no_evil: Thanks!"
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "thery",
        "committer": "thery",
        "hash": "a79d4d915f64d0eb8d2da4a0ba4d29048b94306b",
        "message": "Extra theorems about subn min and max",
        "date": "2020-08-15T09:40:53Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 516,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 1191,
        "deletions": 619
      },
      {
        "file": "mathcomp/algebra/interval.v",
        "status": "M",
        "additions": 1191,
        "deletions": 619
      },
      {
        "file": "mathcomp/algebra/ssrnum.v",
        "status": "M",
        "additions": 1191,
        "deletions": 619
      },
      {
        "file": "mathcomp/field/algebraics_fundamentals.v",
        "status": "M",
        "additions": 1191,
        "deletions": 619
      },
      {
        "file": "mathcomp/field/finfield.v",
        "status": "M",
        "additions": 1191,
        "deletions": 619
      },
      {
        "file": "mathcomp/solvable/abelian.v",
        "status": "M",
        "additions": 1191,
        "deletions": 619
      },
      {
        "file": "mathcomp/ssreflect/bigop.v",
        "status": "M",
        "additions": 1191,
        "deletions": 619
      },
      {
        "file": "mathcomp/ssreflect/fintype.v",
        "status": "M",
        "additions": 1191,
        "deletions": 619
      },
      {
        "file": "mathcomp/ssreflect/order.v",
        "status": "M",
        "additions": 1191,
        "deletions": 619
      }
    ],
    "state": "merged",
    "open_date": "2020-05-30T03:47:51Z",
    "update_date": "2020-06-06T08:09:24Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2020-05-30T03:48:02Z",
        "comment": "@affeldt-aist see the TODO"
      },
      {
        "author": "pi8027",
        "date": "2020-06-04T06:02:39Z",
        "comment": "I hope I will give a detailed review next week if it is not too late for 1.11.0."
      },
      {
        "author": "affeldt-aist",
        "date": "2020-06-04T13:29:04Z",
        "comment": "@CohenCyril @pi8027 Are we confident that the bugfix is ok? (We saw that it was tested with real-closed at least). Since we are late for the release, we would like to merge. Is it ok to defer further reviews to later?"
      },
      {
        "author": "CohenCyril",
        "date": "2020-06-04T13:31:26Z",
        "comment": "@affeldt-aist the bugfix is not okay until I finish porting math-comp/analysis, which is almost done."
      },
      {
        "author": "CohenCyril",
        "date": "2020-06-04T22:57:31Z",
        "comment": "@ybertot @affeldt-aist tested on analysis, this ready."
      }
    ],
    "review_discussion": [
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/order.v",
        "date": "2020-06-02T09:32:25Z",
        "comment": "If we wish to make it compatible as much as possible with `minr` and `maxr` of version 1.10.0, shouldn't we use `<=` rather than `<`? https://github.com/math-comp/math-comp/blob/mathcomp-1.10.0/mathcomp/algebra/ssrnum.v#L256-L257"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/order.v",
        "date": "2020-06-02T09:38:50Z",
        "comment": "`minn` and `maxn` are defined using `<` and `<=`, I'd rather loose backward compatibility than convertibility with `nat` definitions."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/order.v",
        "date": "2020-06-02T09:45:41Z",
        "comment": "OK. That's fine (as I said in a MC call)."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2020-06-02T16:04:45Z",
        "comment": "I think this was left as a comment on purpose. See L.293 (and L.351 which you may also want to remove)."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2020-06-02T16:14:43Z",
        "comment": ":+1: I withdrew this deletion from the PR, since it was an accidental removal unrelated to the changes in this PR, maybe we can open an issue to document or remove this comment."
      },
      {
        "author": "pi8027",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2020-06-04T15:27:33Z",
        "comment": "```suggestion\r\n  `join`, and providing a theory about for min and max, hence generalizing\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/order.v",
        "date": "2020-06-04T22:58:39Z",
        "comment": "```suggestion\r\n(*   [arg min_(i < i0 | P) M] == a value i : T minimizing M : R, subject to   *)\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/order.v",
        "date": "2020-06-04T23:00:28Z",
        "comment": "```suggestion\r\n(*   [arg max_(i > i0 | P) M] == a value i maximizing M subject to P and      *)\r\n```"
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "04e78bbeefe509bd8b84cb222a1322774ce03aec",
        "message": "Generalizing max and min to porderType\n\n- max and min are not defined in terms or meet and join anymore\n- extremum_inP is a generalization of extremum suitable for a partial order\n- arg_min and arg_max are usable in a porderType\n- equivalences between min and meet, and max and join are proven for orderType\n- leP, ltP, ltgtP, and `[l]?comparable_.*P` lemmas have been generalized to take this into account\n- total_display was completely removed",
        "date": "2020-06-05T23:43:35Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "19d189999527434c51b1dabe9d073c673e1fd1cf",
        "message": "Increasing definitional equalities\n\n- `Order.max` and `Order.min`  are now convertible to `maxn` and `minn`\n- Inserting `(fun _ _ => erefl)` in `LeOrderMixin` and `LtOrderMixin`\n  gives `meet`/`join` which are convertible to `min`/`max`\n- `Order.max` and `Order.min` are not convertible to former `Num.max` and `Num.min`",
        "date": "2020-06-05T23:43:35Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "efed1800a4f2eaa942704ab8bebc60d9a3ac8dfd",
        "message": "General theory of min and max, and use in ssrnum\n\n- min and max can now be used in a partial order (sometimes under preconditions)\n- min and max can now be used in a numDomainType (sometimes under preconditions)",
        "date": "2020-06-05T23:43:35Z"
      },
      {
        "author": "affeldt-aist",
        "committer": "CohenCyril",
        "hash": "7f355343ee30f72d8ab3ce87f897dc0092e43c29",
        "message": "tentative changelog\n\n- mostly gathered the changes from previous commits\n- add `minrC`\n- minor doc addition to `order.v`",
        "date": "2020-06-05T23:44:09Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "ccea59192ab383a9a0009d5ac5873e53f115c867",
        "message": "Improvements\n\n- deprecating `fintype.arg_(min|max)P`\n- removing dangling comments connecting min max and meet join\n- better compatibility module\n- removing broken notations with `\\min` and `\\max` (no neutral available)\n- fixing `incompare` and `incomparel` in order.v\n- adding missing elimination lemmas (`(comparable_)?(max|min)E[lg][et]`)\n- adding missing `(comparable|real)_arg(min|max)P`\n- CHANGELOG update",
        "date": "2020-06-05T23:45:04Z"
      }
    ]
  },
  {
    "author": "affeldt-aist",
    "number": 514,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 85,
        "deletions": 8
      },
      {
        "file": "CONTRIBUTING.md",
        "status": "M",
        "additions": 85,
        "deletions": 8
      },
      {
        "file": "mathcomp/algebra/ssrnum.v",
        "status": "M",
        "additions": 85,
        "deletions": 8
      }
    ],
    "state": "merged",
    "open_date": "2020-05-21T14:39:17Z",
    "update_date": "2020-06-05T06:55:09Z",
    "discussion": [
      {
        "author": "affeldt-aist",
        "date": "2020-06-04T13:14:01Z",
        "comment": "@CohenCyril Is the last change ok?"
      },
      {
        "author": "CohenCyril",
        "date": "2020-06-04T15:35:56Z",
        "comment": "@affeldt-aist `C` should qualify `dist` not `add` or `sub`"
      },
      {
        "author": "ybertot",
        "date": "2020-06-05T06:54:47Z",
        "comment": "Thanks to authors and reviewers!"
      }
    ],
    "review_discussion": [
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2020-05-21T16:30:33Z",
        "comment": "This lemma was already generalized and added as `subrKA` (just above), math-comp analysis should use it instead now."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2020-05-21T16:33:11Z",
        "comment": "I believe the naming I picked in mathcomp analysis is wrong, and we should provide a more complete interface the following lemmas:\r\n- `` `|x - y| < e -> y - e < x``\r\n- `` `|x - y| < e -> x < y + e``\r\n- `` `|x - y| < e -> y < x + e``\r\n- same with `<=`\r\n\r\nand the naming convention should encompass all these variants\r\n"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2020-05-21T16:35:43Z",
        "comment": "maybe something like `(g[et]r|l[et]r)_distlW[lr]`? WDYT?"
      },
      {
        "author": "affeldt-aist",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2020-05-21T18:59:05Z",
        "comment": "I couldn't make sense of it right away so I looked for an alternative (also for the sake of the conversation). What about?\r\n\r\n- `ltr_dist_addl` : on the model of `ltr_subl_addl` because it looks the same\r\n- `ltr_dist_subl` : `sub` instead of `add` (does not change the order between `x` and `y`)\r\n- `ltr_distr_{addl,subl}` : because it is just a matter of reversing the dist\r\n"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2020-06-02T09:31:46Z",
        "comment": "The prefix `n` for `norm` does not exist yet, and I am not in favor if it. I suggest this is renamed `gt_norm_eqF`."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2020-06-02T12:12:29Z",
        "comment": "@affeldt-aist I edited my comment by the mail you might have received was not. I prefer `gt_norm_eqF`"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2020-06-02T13:58:34Z",
        "comment": "```suggestion\r\nLemma gt_norm_eqF (x y : R) : `|x| < y -> (x == - y = false) * (x == y = false).\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2020-06-02T14:10:27Z",
        "comment": "For consistency, we should also add\r\n```coq\r\nLemma gtr_norm : `|x| < y -> x < y.\r\nLemma gtrNnorm : `|x| < y -> - y < x.\r\nLemma ger_norm : `|x| <= y -> x <= y.\r\nLemma gerNnorm : `|x| <= y -> - y <= x.\r\n```\r\nand all the `real_` variants...\r\n"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2020-06-04T03:00:14Z",
        "comment": "Actually I believe this one should be removed from the library and obtained by letting the user compose manually a `gtr_norm` lemma with `gt_eqF`, otherwise there are two many variants and multi-rules to take into account."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2020-06-04T03:11:18Z",
        "comment": "I do not like the lack of symmetry between `dist` and `distr`, (the former should then be `distl`), but actually all of them must be `distl` because `dist` is on the left side of `<`, swapping arguments of `dist` should be replaced with the use of suffix `C`.\r\n\r\nBTW I noticed a discrepancy introduced by this PR: \r\n- the current convention is that: `norm` on the right of `<` is `ltr_normr`\r\n- the current convention is that: `norm` on the left of `<` is `ltr_norml`, while this PR introduces the convention `gt_norm`. I'd rather keep the old convention for `1.11` and do a global pass for `1.12`. In which case we cannot keep `gtr_norm` and we should go for e.g. `ltr_normlW`."
      },
      {
        "author": "pi8027",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2020-06-04T10:36:43Z",
        "comment": "Using `(real_)` rather than `{real_,}` would be consistent with the released changelog. See, e.g.: https://github.com/math-comp/math-comp/blob/master/CHANGELOG.md#renamed"
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "83e8892161c8ef3903e302c82a2a7a43f2708d67",
        "message": "three lemmas that we found useful in the context of the\nmathcomp-analysis project",
        "date": "2020-05-21T14:32:46Z"
      },
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "a65958322cb6ee84f3ebbb68d1fb4867749cf1a0",
        "message": "tentative change of naming convention and add variants",
        "date": "2020-05-21T18:54:55Z"
      },
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "3d77e498c075af6f642b3239acf4b18503c1e6bc",
        "message": "another lemma about norm from mathcomp-analysis",
        "date": "2020-06-02T10:53:11Z"
      },
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "e5165bd0bb3ba31c7ecc95f99e1c43353feca987",
        "message": "add real_* variants",
        "date": "2020-06-02T19:48:09Z"
      },
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "0a999b90fb9517849b70a8bb28895b0e905af2b4",
        "message": "fix naming",
        "date": "2020-06-04T10:25:53Z"
      },
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "86c72a2a0164b8af1a95eb3799a8055cfa8fbe2a",
        "message": "fix md formatting",
        "date": "2020-06-04T10:28:19Z"
      },
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "33c29d4653ac5be781823ae5ede47c361f13d80f",
        "message": "fix changelog",
        "date": "2020-06-04T11:45:53Z"
      },
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "847cc0eab00c004b52195f8d63a763725524fe2f",
        "message": "fix naming",
        "date": "2020-06-04T15:49:15Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 513,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 127,
        "deletions": 1
      },
      {
        "file": "mathcomp/ssreflect/order.v",
        "status": "M",
        "additions": 127,
        "deletions": 1
      },
      {
        "file": "mathcomp/ssreflect/ssrbool.v",
        "status": "M",
        "additions": 127,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2020-05-20T18:53:53Z",
    "update_date": "2020-06-04T15:35:26Z",
    "discussion": [
      {
        "author": "affeldt-aist",
        "date": "2020-06-04T13:15:44Z",
        "comment": "@CohenCyril Is it ok to merge or do you want to squash it before?"
      },
      {
        "author": "CohenCyril",
        "date": "2020-06-04T15:33:44Z",
        "comment": "you can hit the squash a merge button"
      }
    ],
    "review_discussion": [
      {
        "author": "ybertot",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2020-05-29T06:20:41Z",
        "comment": "grammar mistake here."
      },
      {
        "author": "CohenCyril",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2020-05-29T15:34:24Z",
        "comment": "done?"
      },
      {
        "author": "ybertot",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2020-05-29T16:38:20Z",
        "comment": "Good for me!"
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "bb8611db5a4faaf449312e61ff000c724a99e708",
        "message": "Missing mono lemmas",
        "date": "2020-05-20T18:50:40Z"
      },
      {
        "author": "CohenCyril",
        "committer": "web-flow",
        "hash": "6ee5cb8b1ed29f2766ecafa942c7e3a9e64a6bad",
        "message": "fixup",
        "date": "2020-05-29T15:33:51Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 511,
    "diff_summary": [
      {
        "file": "default.nix",
        "status": "A",
        "additions": 81,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2020-05-15T01:26:30Z",
    "update_date": "2020-05-28T14:33:18Z",
    "discussion": [
      {
        "author": "affeldt-aist",
        "date": "2020-05-15T07:40:12Z",
        "comment": "@CohenCyril what about adding it to the 1.11.0 milestone? (This is a low-risk PR.)"
      },
      {
        "author": "ybertot",
        "date": "2020-05-15T07:42:34Z",
        "comment": "Putting it in releases early will improve chances of collecting feedback from other users of nix (which are rare in the core math-comp dev team).\r\n"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "7186019366bd9654e6d02ae7abe7a36d526b3c95",
        "message": "adding default nix shell",
        "date": "2020-05-15T01:25:30Z"
      }
    ]
  },
  {
    "author": "chdoc",
    "number": 509,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 100,
        "deletions": 6
      },
      {
        "file": "mathcomp/ssreflect/fingraph.v",
        "status": "M",
        "additions": 100,
        "deletions": 6
      },
      {
        "file": "mathcomp/ssreflect/finset.v",
        "status": "M",
        "additions": 100,
        "deletions": 6
      },
      {
        "file": "mathcomp/ssreflect/fintype.v",
        "status": "M",
        "additions": 100,
        "deletions": 6
      },
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 100,
        "deletions": 6
      }
    ],
    "state": "merged",
    "open_date": "2020-05-14T18:11:59Z",
    "update_date": "2020-06-19T02:59:41Z",
    "discussion": [
      {
        "author": "chdoc",
        "date": "2020-05-26T10:14:05Z",
        "comment": "I tried to incorporate the feedback from @CohenCyril , and I found two more lemmas `fcard_gt0P` and `fcard_gt1P`. The proof of the latter naturally makes use of `card_gt1P`. These are adapted/simplified from the `fourcolor` development, where one can find a specific instance for each of them (`fcard0P` and `fcard1P`)."
      },
      {
        "author": "chdoc",
        "date": "2020-06-17T12:21:23Z",
        "comment": "I wasn't sure about this, because the line already had 82 characters, now it gained another 6. And yes, I want a linter, too. :smile: "
      },
      {
        "author": "CohenCyril",
        "date": "2020-06-17T12:25:43Z",
        "comment": "> I wasn't sure about this, because the line already had 82 characters, now it gained another 6. And yes, I want a linter, too.\r\n\r\nOh ok, I should really checkout locally.\r\nIn the core mathcomp repo there is a strict rule about the 80 characters per line limit. So this line should be split anyway."
      },
      {
        "author": "chdoc",
        "date": "2020-06-17T12:31:18Z",
        "comment": "Well, running a `grep -n '.\\{81\\}' ssreflect/*.v` made me believe that the rule is not _that_ strict."
      },
      {
        "author": "CohenCyril",
        "date": "2020-06-17T12:33:42Z",
        "comment": "> Well, running a `grep -n '.\\{81\\}' ssreflect/*.v` made me believe that the rule is not _that_ strict.\r\n\r\nIt used to be, this is outrageous :wink:\r\nI will revive #163 ASAP."
      }
    ],
    "review_discussion": [
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/fintype.v",
        "date": "2020-05-14T20:22:03Z",
        "comment": "In thought I did that one when I added `fintype_le1P` tomorrow. :laughing: I will double check tomorrow, if I forgot to push something."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/finset.v",
        "date": "2020-05-14T20:28:17Z",
        "comment": "Nice one to have indeed, I think there is a lot of refactoring to do with all the `card_*` lemma you added, through `enum` (which is `uniq` which size is the cardinal of the considered set). Indeed, I think `card_eqP` would be almost a one liner and `card_geqP`, and `cards2P` is a simple twice case analysis (the main step being something like `case: (enum A) (enum_uniq A) (size_enum A) => [|x [|y []]//; exists x; exists y`).\r\nI also think it would be nice to have le/lt variants and `pred` variants."
      },
      {
        "author": "chdoc",
        "file": "mathcomp/ssreflect/finset.v",
        "date": "2020-05-15T08:33:29Z",
        "comment": "I'm not sure I follow. There is no `card_eqP` (yet) and indeed I'm not sure that would be useful, since `enum A` has already good lemma support. And `card_geqP` is about encapsulating the picking of a subsequence of `enum A`, if one only has a lower bound. \r\nAdmittedly, using the `_gt?P` lemmas to prove `cards2P` may be overkill. "
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/finset.v",
        "date": "2020-05-15T13:10:35Z",
        "comment": "Here is an elaboration of what I had in mind:\r\n```coq\r\nLemma set_enum A : [set x | x \\in enum A] = A.\r\nProof. by apply/setP => x; rewrite inE mem_enum. Qed.\r\n\r\nVariant cards_eq_spec A : seq T -> {set T} -> nat -> Type :=\r\n| CardEq (s : seq T) & uniq s : cards_eq_spec A s [set x | x \\in s] (size s).\r\n\r\nLemma cards_eqP A : cards_eq_spec A (enum A) A #|A|.\r\nProof.\r\nby move: (enum A) (cardE A) (set_enum A) (enum_uniq A) => s -> <-; constructor.\r\nQed.\r\n\r\nLemma cards1P A : reflect (exists x, A = [set x]) (#|A| == 1).\r\nProof.\r\napply: (iffP idP) => [|[x ->]]; last by rewrite cards1.\r\nby have [[|x []]// _] := cards_eqP; exists x; apply/setP => y; rewrite !inE.\r\nQed.\r\n\r\nLemma cards2P A : reflect (exists x y : T, x != y /\\ A = [set x; y]) (#|A| == 2).\r\nProof.\r\napply: (iffP idP) => [|[x] [y] [xy ->]]; last by rewrite cards2 xy.\r\nhave [[|x [|y []]]//=] := cards_eqP; rewrite !inE andbT => neq_xy.\r\nby exists x, y; split=> //; apply/setP => z; rewrite !inE.\r\nQed.\r\n```\r\nand something like this for fintype..."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/finset.v",
        "date": "2020-05-15T13:16:16Z",
        "comment": "> And `card_geqP` is about encapsulating the picking of a subsequence of `enum A`, if one only has a lower bound.\r\n\r\nIndeed, I missed that..."
      },
      {
        "author": "chdoc",
        "file": "mathcomp/ssreflect/finset.v",
        "date": "2020-05-19T16:14:28Z",
        "comment": "Okay, for `{set _}` what you propose is indeed more general and more direct than what I had proposed. However, I'm not sure it transfers all that well to predicates: due to the lack of extensionality, one cannot pull the `[set x | x \\in enum A]` trick. One could instead generate `s =i A` as an assumption, but I'm not sure this view would be all that useful. \r\n\r\nThe same goes for lower bounds, albeit for a different reason: there one doesn't even want to replace the original predicate/set. "
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-06-07T02:09:05Z",
        "comment": "if you are going to add `take_uniq`, also add `drop_uniq`"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/fintype.v",
        "date": "2020-06-07T02:09:19Z",
        "comment": "```suggestion\r\n  by exists x, y, z; rewrite xDy yDz eq_sym xDz !subA ?inE ?eqxx ?orbT.\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/fintype.v",
        "date": "2020-06-07T02:09:37Z",
        "comment": "```suggestion\r\nexists [:: x; y; z]; rewrite /= !inE negb_or xDy xDz eq_sym yDz; split=> // u.\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/fintype.v",
        "date": "2020-06-07T02:10:04Z",
        "comment": "```suggestion\r\n  by exists a, b; rewrite aDb !subD ?inE ?eqxx ?orbT.\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/fintype.v",
        "date": "2020-06-07T02:10:16Z",
        "comment": "```suggestion\r\nby exists [:: x; y]; rewrite /= !inE xDy ; split=> // z; rewrite !inE => /pred2P[]->.\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/fintype.v",
        "date": "2020-06-07T02:10:57Z",
        "comment": "```suggestion\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/fintype.v",
        "date": "2020-06-07T02:12:27Z",
        "comment": "```suggestion\r\nProof. apply: (iffP (card_le1_eqP {:T})); [exact: in2T | exact: in2W]. Qed.\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/fintype.v",
        "date": "2020-06-07T02:12:46Z",
        "comment": "```suggestion\r\n  reflect {in A &, forall x, all_equal_to x} (#|A| <= 1).\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/fingraph.v",
        "date": "2020-06-07T02:14:20Z",
        "comment": "```suggestion\r\n  move=> [x] [y] [/andP [/= rfx xA]] [/andP[/= rfy yA] xDy].\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/fingraph.v",
        "date": "2020-06-07T02:15:05Z",
        "comment": "```suggestion\r\n  by exists x; do 1?exists y; rewrite // -root_connect // (eqP rfx) (eqP rfy).\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/fintype.v",
        "date": "2020-06-07T02:15:46Z",
        "comment": "```suggestion\r\n  case: s => [|x [|y [|z []]]]//=; rewrite !inE !andbT negb_or -andbA.\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/fintype.v",
        "date": "2020-06-07T02:16:33Z",
        "comment": "```suggestion\r\nby rewrite !inE => /or3P [] /eqP->.\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/fintype.v",
        "date": "2020-06-07T02:17:45Z",
        "comment": "```suggestion\r\n  case: s => [|a [|b []]]//=; rewrite inE andbT => aDb _ subD.\r\n```"
      },
      {
        "author": "chdoc",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-06-07T09:08:25Z",
        "comment": "Will do."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/fingraph.v",
        "date": "2020-06-08T12:08:30Z",
        "comment": "this is not resolved..."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/fingraph.v",
        "date": "2020-06-08T12:09:04Z",
        "comment": "```suggestion\r\nmove=> clfA; apply: (iffP card_gt0P) => [[x /andP[]]|[x xA]]; first by exists x.\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/fintype.v",
        "date": "2020-06-08T12:10:19Z",
        "comment": "This change I suggested apparently causes an overflow of the 80 character liimit, I suggest splitting the line as follows:\r\n```suggestion\r\nexists [:: x; y]; rewrite /= !inE xDy.\r\nby split=> // z; rewrite !inE => /pred2P[]->.\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/fintype.v",
        "date": "2020-06-17T12:08:42Z",
        "comment": "One last nitpicking that I did not see (we should really have a linter):\r\n```suggestion\r\n  reflect (exists x y z, [/\\ x \\in A, y \\in A & z \\in A] /\\ [/\\ x != y, y != z & z != x])\r\n```"
      }
    ],
    "tags": [
      {
        "tag": "kind: enhancement",
        "description": "Issue or PR about addition of features."
      },
      {
        "tag": "kind: refactoring",
        "description": "Issue or PR about a refactoring. (reorganizing the code, reusing theorems, simplifications...)"
      }
    ],
    "commits": [
      {
        "author": "chdoc",
        "committer": "chdoc",
        "hash": "18edd0a87f8cc8bfd3a7c7aaaafa3d2cfdf5d165",
        "message": "cardinality lemmas for #|A| <= 1 and n <= #|A|",
        "date": "2020-06-18T14:45:03Z"
      },
      {
        "author": "chdoc",
        "committer": "chdoc",
        "hash": "1ac0240534077301fa837233b2a8e4bbeef119a8",
        "message": "cards_eqP and cards2P",
        "date": "2020-06-18T14:45:03Z"
      },
      {
        "author": "chdoc",
        "committer": "chdoc",
        "hash": "5b4b9ad71794cc68f9c94520e91fd8ab56a5b577",
        "message": "add fcard_gt?P lemmas found in fourcolor",
        "date": "2020-06-18T14:45:03Z"
      },
      {
        "author": "chdoc",
        "committer": "chdoc",
        "hash": "96efc4fa2a3b643c6c4ea19047c3e633c5af145f",
        "message": "drop_uniq / CHANGELOG",
        "date": "2020-06-18T14:46:23Z"
      },
      {
        "author": "chdoc",
        "committer": "chdoc",
        "hash": "555655f227c4d154f72b352b3437a1c275be2920",
        "message": "Apply suggestions from code review\n\nCo-authored-by: Cyril Cohen <CohenCyril@users.noreply.github.com>",
        "date": "2020-06-18T14:46:23Z"
      },
      {
        "author": "CohenCyril",
        "committer": "chdoc",
        "hash": "c5008933e4f17c122a0b23e6e6cfe8d198423214",
        "message": "fixup spacing",
        "date": "2020-06-18T14:46:23Z"
      },
      {
        "author": "chdoc",
        "committer": "chdoc",
        "hash": "7fd6f9ba051ecc7be7bd95ca3e31bb1a798598ba",
        "message": "conform to 80 chars limit",
        "date": "2020-06-18T14:46:23Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 507,
    "diff_summary": [
      {
        "file": "mathcomp/test_suite/test_guard.v",
        "status": "M",
        "additions": 39,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2020-05-13T14:31:27Z",
    "update_date": "2020-08-11T09:31:11Z",
    "discussion": [
      {
        "author": "pi8027",
        "date": "2020-06-16T13:48:36Z",
        "comment": "Since I do not find a way to test the above 6 functions and think there is no reasonable test, this PR is ready for review."
      },
      {
        "author": "pi8027",
        "date": "2020-08-11T04:39:43Z",
        "comment": "Shall we merge this?"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "1e9eda65256af1f60547d067187d33f1d7cc1645",
        "message": "Add more test cases for higher-order recursive functions in seq.v w.r.t. the guard condition",
        "date": "2020-06-13T11:44:29Z"
      }
    ]
  },
  {
    "author": "anton-trunov",
    "number": 506,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 13,
        "deletions": 0
      },
      {
        "file": "mathcomp/ssreflect/ssrnat.v",
        "status": "M",
        "additions": 13,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2020-05-13T14:26:45Z",
    "update_date": "2020-09-29T18:44:06Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2020-09-27T14:22:19Z",
        "comment": "Thanks @anton-trunov and sorry for the delay.\r\n\r\n> * `subnA`: the name was suggested by @CohenCyril in [this comment](https://github.com/math-comp/math-comp/issues/212#issuecomment-420657654);\r\n\r\nI still agree with this naming\r\n\r\n> * `addnCAC`: I call this \"central commutativity\", hence the name, but I'm happy to change it to anything else (this applies to any name in this PR);\r\n\r\nI'm not fond of the name, but I cannot find better now.\r\n\r\n> * `addnAl`: \"left cyclic associativity\" (right cyclic associativity is just commutativity in this case);\r\n\r\nThe fact suffix `C` is not present disturbs me, how about `addnACl` or `addCnA`?\r\n\r\n> * `addnCB`\r\n\r\nSince a variable is repeated, how about `addnBn`?\r\n\r\n> I find `addnCAC` and `addnAl` sometimes convenient because having them in the library might save several rewrites once in a while.\r\n\r\nSure, I am all in favor of having these little helper lemmas.\r\n\r\n"
      },
      {
        "author": "anton-trunov",
        "date": "2020-09-28T08:38:53Z",
        "comment": "@CohenCyril Thank you very much for your suggestions, I applied them in a separate commit. I also rebased and resolved conflicts in `CHANGELOG_UNRELEASED.md`."
      },
      {
        "author": "anton-trunov",
        "date": "2020-09-29T10:54:15Z",
        "comment": "CI is green now! @CohenCyril thanks for catching the CHANGELOG bug :)"
      },
      {
        "author": "CohenCyril",
        "date": "2020-09-29T11:25:32Z",
        "comment": "Woops @anton-trunov one more rebase and we're good to go."
      },
      {
        "author": "anton-trunov",
        "date": "2020-09-29T17:15:41Z",
        "comment": "@CohenCyril Rebased, CI is green :)"
      }
    ],
    "review_discussion": [
      {
        "author": "CohenCyril",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2020-09-28T08:56:50Z",
        "comment": "```suggestion\r\n- in `ssrnat.v`, new lemmas: `subnA`, `addnBn`, `addnCAC`, `addnACl`\r\n```"
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "anton-trunov",
        "committer": "anton-trunov",
        "hash": "dad78be41d2852dd563333b69dc3f240056a95da",
        "message": "ssrnat: add subnA, addnCB, addnCAC, addnAl lemmas",
        "date": "2020-09-29T14:59:45Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 504,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/bigop.v",
        "status": "M",
        "additions": 179,
        "deletions": 226
      },
      {
        "file": "mathcomp/ssreflect/binomial.v",
        "status": "M",
        "additions": 179,
        "deletions": 226
      },
      {
        "file": "mathcomp/ssreflect/choice.v",
        "status": "M",
        "additions": 179,
        "deletions": 226
      },
      {
        "file": "mathcomp/ssreflect/div.v",
        "status": "M",
        "additions": 179,
        "deletions": 226
      },
      {
        "file": "mathcomp/ssreflect/eqtype.v",
        "status": "M",
        "additions": 179,
        "deletions": 226
      },
      {
        "file": "mathcomp/ssreflect/fingraph.v",
        "status": "M",
        "additions": 179,
        "deletions": 226
      },
      {
        "file": "mathcomp/ssreflect/finset.v",
        "status": "M",
        "additions": 179,
        "deletions": 226
      },
      {
        "file": "mathcomp/ssreflect/fintype.v",
        "status": "M",
        "additions": 179,
        "deletions": 226
      },
      {
        "file": "mathcomp/ssreflect/generic_quotient.v",
        "status": "M",
        "additions": 179,
        "deletions": 226
      },
      {
        "file": "mathcomp/ssreflect/path.v",
        "status": "M",
        "additions": 179,
        "deletions": 226
      },
      {
        "file": "mathcomp/ssreflect/prime.v",
        "status": "M",
        "additions": 179,
        "deletions": 226
      },
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 179,
        "deletions": 226
      },
      {
        "file": "mathcomp/ssreflect/ssrnat.v",
        "status": "M",
        "additions": 179,
        "deletions": 226
      },
      {
        "file": "mathcomp/ssreflect/tuple.v",
        "status": "M",
        "additions": 179,
        "deletions": 226
      }
    ],
    "state": "merged",
    "open_date": "2020-05-13T04:39:52Z",
    "update_date": "2020-05-28T14:24:39Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2020-05-13T12:57:16Z",
        "comment": "Great! Thanks. I personally vouch for integration in 1.11.0"
      }
    ],
    "review_discussion": [
      {
        "author": "ybertot",
        "file": "mathcomp/ssreflect/prime.v",
        "date": "2020-05-15T08:30:50Z",
        "comment": "In other contexts you would write `-[RHS]partnT // ...` would it be suitable here?"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/prime.v",
        "date": "2020-05-16T00:01:46Z",
        "comment": "That's right."
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "35bd8708dacfb508f896d957d7b1189ca7decb3e",
        "message": "Revise proofs in ssreflect/*.v\n\nThis change reduces\n- use of numerical occurrence selectors (#436) and\n- use of non ssreflect tactics such as `auto`,\nand improves use of comparison predicates such as `posnP`, `leqP`, `ltnP`,\n`ltngtP`, and `eqVneq`.",
        "date": "2020-05-13T05:09:09Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "37a49513f22a3f792a1ac3241962a7d17455f7e5",
        "message": "A few more revisions",
        "date": "2020-05-16T00:30:39Z"
      }
    ]
  },
  {
    "author": "chdoc",
    "number": 503,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/fingraph.v",
        "status": "M",
        "additions": 35,
        "deletions": 26
      }
    ],
    "state": "open",
    "open_date": "2020-05-11T13:03:52Z",
    "update_date": "2021-06-16T08:22:39Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2020-10-09T11:41:50Z",
        "comment": "@thery, @ggonthier does not seem to be available, would you mind reviewing this PR?"
      },
      {
        "author": "chdoc",
        "date": "2020-11-04T10:48:01Z",
        "comment": "I still didn't get around to to checking how big the impact on this change would be for `fourcolor`. My fear is that the impact would be significant. Hence, I'm not sure it's reasonable to milestone this for 1.12.0. "
      },
      {
        "author": "CohenCyril",
        "date": "2021-06-02T09:07:42Z",
        "comment": "Let's see the impact on fourcolor before we take a decision\r\n"
      },
      {
        "author": "CohenCyril",
        "date": "2021-06-08T14:40:59Z",
        "comment": "Nix CI did not fail this time because I had forgotten to add fourcolor. Once you rebase this is fixed. \r\nHowever, you do **not** need to rebase to test it via the command `nix-shell --argstr job fourcolor` it should anyway (otherwise, rebase)."
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "chdoc",
        "committer": "chdoc",
        "hash": "769b6cd3fc7caca122eed8a530ac320317d03abb",
        "message": "closed/closure for non-symmetric relations",
        "date": "2021-06-08T10:26:37Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 502,
    "diff_summary": [
      {
        "file": ".gitlab-ci.yml",
        "status": "M",
        "additions": 542,
        "deletions": 461
      },
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 542,
        "deletions": 461
      },
      {
        "file": "mathcomp/algebra/finalg.v",
        "status": "M",
        "additions": 542,
        "deletions": 461
      },
      {
        "file": "mathcomp/algebra/intdiv.v",
        "status": "M",
        "additions": 542,
        "deletions": 461
      },
      {
        "file": "mathcomp/algebra/matrix.v",
        "status": "M",
        "additions": 542,
        "deletions": 461
      },
      {
        "file": "mathcomp/algebra/mxalgebra.v",
        "status": "M",
        "additions": 542,
        "deletions": 461
      },
      {
        "file": "mathcomp/algebra/mxpoly.v",
        "status": "M",
        "additions": 542,
        "deletions": 461
      },
      {
        "file": "mathcomp/algebra/ssrnum.v",
        "status": "M",
        "additions": 542,
        "deletions": 461
      },
      {
        "file": "mathcomp/algebra/vector.v",
        "status": "M",
        "additions": 542,
        "deletions": 461
      },
      {
        "file": "mathcomp/character/character.v",
        "status": "M",
        "additions": 542,
        "deletions": 461
      },
      {
        "file": "mathcomp/character/classfun.v",
        "status": "M",
        "additions": 542,
        "deletions": 461
      },
      {
        "file": "mathcomp/character/inertia.v",
        "status": "M",
        "additions": 542,
        "deletions": 461
      },
      {
        "file": "mathcomp/character/integral_char.v",
        "status": "M",
        "additions": 542,
        "deletions": 461
      },
      {
        "file": "mathcomp/character/mxabelem.v",
        "status": "M",
        "additions": 542,
        "deletions": 461
      },
      {
        "file": "mathcomp/character/mxrepresentation.v",
        "status": "M",
        "additions": 542,
        "deletions": 461
      },
      {
        "file": "mathcomp/field/algebraics_fundamentals.v",
        "status": "M",
        "additions": 542,
        "deletions": 461
      },
      {
        "file": "mathcomp/field/algnum.v",
        "status": "M",
        "additions": 542,
        "deletions": 461
      },
      {
        "file": "mathcomp/field/fieldext.v",
        "status": "M",
        "additions": 542,
        "deletions": 461
      },
      {
        "file": "mathcomp/field/finfield.v",
        "status": "M",
        "additions": 542,
        "deletions": 461
      },
      {
        "file": "mathcomp/field/galois.v",
        "status": "M",
        "additions": 542,
        "deletions": 461
      },
      {
        "file": "mathcomp/fingroup/action.v",
        "status": "M",
        "additions": 542,
        "deletions": 461
      },
      {
        "file": "mathcomp/fingroup/automorphism.v",
        "status": "M",
        "additions": 542,
        "deletions": 461
      },
      {
        "file": "mathcomp/fingroup/fingroup.v",
        "status": "M",
        "additions": 542,
        "deletions": 461
      },
      {
        "file": "mathcomp/fingroup/gproduct.v",
        "status": "M",
        "additions": 542,
        "deletions": 461
      },
      {
        "file": "mathcomp/fingroup/morphism.v",
        "status": "M",
        "additions": 542,
        "deletions": 461
      },
      {
        "file": "mathcomp/fingroup/perm.v",
        "status": "M",
        "additions": 542,
        "deletions": 461
      },
      {
        "file": "mathcomp/fingroup/quotient.v",
        "status": "M",
        "additions": 542,
        "deletions": 461
      },
      {
        "file": "mathcomp/solvable/abelian.v",
        "status": "M",
        "additions": 542,
        "deletions": 461
      },
      {
        "file": "mathcomp/solvable/alt.v",
        "status": "M",
        "additions": 542,
        "deletions": 461
      },
      {
        "file": "mathcomp/solvable/burnside_app.v",
        "status": "M",
        "additions": 542,
        "deletions": 461
      },
      {
        "file": "mathcomp/solvable/center.v",
        "status": "M",
        "additions": 542,
        "deletions": 461
      },
      {
        "file": "mathcomp/solvable/cyclic.v",
        "status": "M",
        "additions": 542,
        "deletions": 461
      },
      {
        "file": "mathcomp/solvable/extraspecial.v",
        "status": "M",
        "additions": 542,
        "deletions": 461
      },
      {
        "file": "mathcomp/solvable/extremal.v",
        "status": "M",
        "additions": 542,
        "deletions": 461
      },
      {
        "file": "mathcomp/solvable/finmodule.v",
        "status": "M",
        "additions": 542,
        "deletions": 461
      },
      {
        "file": "mathcomp/solvable/frobenius.v",
        "status": "M",
        "additions": 542,
        "deletions": 461
      },
      {
        "file": "mathcomp/solvable/jordanholder.v",
        "status": "M",
        "additions": 542,
        "deletions": 461
      },
      {
        "file": "mathcomp/solvable/maximal.v",
        "status": "M",
        "additions": 542,
        "deletions": 461
      },
      {
        "file": "mathcomp/solvable/primitive_action.v",
        "status": "M",
        "additions": 542,
        "deletions": 461
      },
      {
        "file": "mathcomp/solvable/sylow.v",
        "status": "M",
        "additions": 542,
        "deletions": 461
      },
      {
        "file": "mathcomp/ssreflect/bigop.v",
        "status": "M",
        "additions": 542,
        "deletions": 461
      },
      {
        "file": "mathcomp/ssreflect/binomial.v",
        "status": "M",
        "additions": 542,
        "deletions": 461
      },
      {
        "file": "mathcomp/ssreflect/fingraph.v",
        "status": "M",
        "additions": 542,
        "deletions": 461
      },
      {
        "file": "mathcomp/ssreflect/finset.v",
        "status": "M",
        "additions": 542,
        "deletions": 461
      },
      {
        "file": "mathcomp/ssreflect/fintype.v",
        "status": "M",
        "additions": 542,
        "deletions": 461
      },
      {
        "file": "mathcomp/ssreflect/order.v",
        "status": "M",
        "additions": 542,
        "deletions": 461
      },
      {
        "file": "mathcomp/ssreflect/path.v",
        "status": "M",
        "additions": 542,
        "deletions": 461
      },
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 542,
        "deletions": 461
      },
      {
        "file": "mathcomp/ssreflect/ssreflect.v",
        "status": "M",
        "additions": 542,
        "deletions": 461
      }
    ],
    "state": "open",
    "open_date": "2020-05-08T22:50:20Z",
    "update_date": "2020-11-12T20:23:54Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [
      {
        "tag": "drops: coq 8.9",
        "description": "Addressing this issue or merging this PR requires to drop support for coq 8.9"
      }
    ],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "749ecc1081d27c23963539a8a4e60e0de6352cbf",
        "message": "Intro pattern extensions for rewrite, dup, swap and apply",
        "date": "2020-05-08T22:38:32Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "899a318a59fffe05e0a941114bd60eb659b845ae",
        "message": "updating gitlab ci",
        "date": "2020-05-08T22:46:24Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "f2c4992259ac5b4bde9ed3d8b884ad787c544d01",
        "message": "discharge and rewrite intro patterns",
        "date": "2020-05-08T22:47:58Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 501,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 303,
        "deletions": 350
      },
      {
        "file": "mathcomp/algebra/finalg.v",
        "status": "M",
        "additions": 303,
        "deletions": 350
      },
      {
        "file": "mathcomp/algebra/intdiv.v",
        "status": "M",
        "additions": 303,
        "deletions": 350
      },
      {
        "file": "mathcomp/algebra/matrix.v",
        "status": "M",
        "additions": 303,
        "deletions": 350
      },
      {
        "file": "mathcomp/algebra/mxpoly.v",
        "status": "M",
        "additions": 303,
        "deletions": 350
      },
      {
        "file": "mathcomp/algebra/ssrnum.v",
        "status": "M",
        "additions": 303,
        "deletions": 350
      },
      {
        "file": "mathcomp/character/character.v",
        "status": "M",
        "additions": 303,
        "deletions": 350
      },
      {
        "file": "mathcomp/character/classfun.v",
        "status": "M",
        "additions": 303,
        "deletions": 350
      },
      {
        "file": "mathcomp/character/inertia.v",
        "status": "M",
        "additions": 303,
        "deletions": 350
      },
      {
        "file": "mathcomp/character/integral_char.v",
        "status": "M",
        "additions": 303,
        "deletions": 350
      },
      {
        "file": "mathcomp/character/mxabelem.v",
        "status": "M",
        "additions": 303,
        "deletions": 350
      },
      {
        "file": "mathcomp/character/mxrepresentation.v",
        "status": "M",
        "additions": 303,
        "deletions": 350
      },
      {
        "file": "mathcomp/field/algebraics_fundamentals.v",
        "status": "M",
        "additions": 303,
        "deletions": 350
      },
      {
        "file": "mathcomp/field/algnum.v",
        "status": "M",
        "additions": 303,
        "deletions": 350
      },
      {
        "file": "mathcomp/field/falgebra.v",
        "status": "M",
        "additions": 303,
        "deletions": 350
      },
      {
        "file": "mathcomp/field/finfield.v",
        "status": "M",
        "additions": 303,
        "deletions": 350
      },
      {
        "file": "mathcomp/field/galois.v",
        "status": "M",
        "additions": 303,
        "deletions": 350
      },
      {
        "file": "mathcomp/field/separable.v",
        "status": "M",
        "additions": 303,
        "deletions": 350
      },
      {
        "file": "mathcomp/fingroup/action.v",
        "status": "M",
        "additions": 303,
        "deletions": 350
      },
      {
        "file": "mathcomp/fingroup/automorphism.v",
        "status": "M",
        "additions": 303,
        "deletions": 350
      },
      {
        "file": "mathcomp/fingroup/fingroup.v",
        "status": "M",
        "additions": 303,
        "deletions": 350
      },
      {
        "file": "mathcomp/fingroup/gproduct.v",
        "status": "M",
        "additions": 303,
        "deletions": 350
      },
      {
        "file": "mathcomp/fingroup/morphism.v",
        "status": "M",
        "additions": 303,
        "deletions": 350
      },
      {
        "file": "mathcomp/fingroup/perm.v",
        "status": "M",
        "additions": 303,
        "deletions": 350
      },
      {
        "file": "mathcomp/solvable/abelian.v",
        "status": "M",
        "additions": 303,
        "deletions": 350
      },
      {
        "file": "mathcomp/solvable/alt.v",
        "status": "M",
        "additions": 303,
        "deletions": 350
      },
      {
        "file": "mathcomp/solvable/burnside_app.v",
        "status": "M",
        "additions": 303,
        "deletions": 350
      },
      {
        "file": "mathcomp/solvable/center.v",
        "status": "M",
        "additions": 303,
        "deletions": 350
      },
      {
        "file": "mathcomp/solvable/cyclic.v",
        "status": "M",
        "additions": 303,
        "deletions": 350
      },
      {
        "file": "mathcomp/solvable/extraspecial.v",
        "status": "M",
        "additions": 303,
        "deletions": 350
      },
      {
        "file": "mathcomp/solvable/extremal.v",
        "status": "M",
        "additions": 303,
        "deletions": 350
      },
      {
        "file": "mathcomp/solvable/finmodule.v",
        "status": "M",
        "additions": 303,
        "deletions": 350
      },
      {
        "file": "mathcomp/solvable/frobenius.v",
        "status": "M",
        "additions": 303,
        "deletions": 350
      },
      {
        "file": "mathcomp/solvable/gseries.v",
        "status": "M",
        "additions": 303,
        "deletions": 350
      },
      {
        "file": "mathcomp/solvable/jordanholder.v",
        "status": "M",
        "additions": 303,
        "deletions": 350
      },
      {
        "file": "mathcomp/solvable/maximal.v",
        "status": "M",
        "additions": 303,
        "deletions": 350
      },
      {
        "file": "mathcomp/solvable/primitive_action.v",
        "status": "M",
        "additions": 303,
        "deletions": 350
      },
      {
        "file": "mathcomp/solvable/sylow.v",
        "status": "M",
        "additions": 303,
        "deletions": 350
      },
      {
        "file": "mathcomp/ssreflect/bigop.v",
        "status": "M",
        "additions": 303,
        "deletions": 350
      },
      {
        "file": "mathcomp/ssreflect/binomial.v",
        "status": "M",
        "additions": 303,
        "deletions": 350
      },
      {
        "file": "mathcomp/ssreflect/eqtype.v",
        "status": "M",
        "additions": 303,
        "deletions": 350
      },
      {
        "file": "mathcomp/ssreflect/finfun.v",
        "status": "M",
        "additions": 303,
        "deletions": 350
      },
      {
        "file": "mathcomp/ssreflect/fingraph.v",
        "status": "M",
        "additions": 303,
        "deletions": 350
      },
      {
        "file": "mathcomp/ssreflect/finset.v",
        "status": "M",
        "additions": 303,
        "deletions": 350
      },
      {
        "file": "mathcomp/ssreflect/fintype.v",
        "status": "M",
        "additions": 303,
        "deletions": 350
      },
      {
        "file": "mathcomp/ssreflect/path.v",
        "status": "M",
        "additions": 303,
        "deletions": 350
      },
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 303,
        "deletions": 350
      },
      {
        "file": "mathcomp/ssreflect/ssrbool.v",
        "status": "M",
        "additions": 303,
        "deletions": 350
      },
      {
        "file": "mathcomp/ssreflect/ssreflect.v",
        "status": "M",
        "additions": 303,
        "deletions": 350
      }
    ],
    "state": "merged",
    "open_date": "2020-05-08T22:20:23Z",
    "update_date": "2021-07-07T09:19:25Z",
    "discussion": [
      {
        "author": "gares",
        "date": "2020-05-09T07:12:54Z",
        "comment": "doc is incomplete, the RHS is always the same"
      },
      {
        "author": "chdoc",
        "date": "2020-05-09T09:25:00Z",
        "comment": "I'm a bit skeptical as it comes to the chosen syntax. Is `/[ ... ]` currently a valid intro pattern? If it is not, why not use:\r\n\r\n- `=> /[rules]` : perform `rewrite rules` (where `rules` may include `!`, `?`, and  `-` as usual?)\r\n\r\nAlso, what's the expected behavior if there is a lemma or local assumption called `apply`, `dup`, or `swap`. Can one still use them as views?"
      },
      {
        "author": "CohenCyril",
        "date": "2020-05-09T19:45:33Z",
        "comment": "@gares\r\n> doc is incomplete, the RHS is always the same\r\n\r\nI do not understand. What do you want to add to the doc?\r\n\r\n\r\n@chdoc for now I will send you [here](https://github.com/math-comp/math-comp/pull/372#issuecomment-513786319), and on monday we could talk.\r\n"
      },
      {
        "author": "gares",
        "date": "2020-05-09T20:48:42Z",
        "comment": "In the top post you say \"foo does bar\" but bar is always the same. It is clear what you mean, I was just warning to not copy that doc as is "
      },
      {
        "author": "CohenCyril",
        "date": "2020-05-09T21:52:32Z",
        "comment": "> In the top post you say \"foo does bar\" but bar is always the same. It is clear what you mean, I was just warning to not copy that doc as is\r\n\r\nAh sh** I updated the commit but forgot the PR OP..."
      },
      {
        "author": "soraros",
        "date": "2020-05-11T00:36:58Z",
        "comment": "Maybe /apply etc. should be capitalized since they have predefined magical meaning?"
      },
      {
        "author": "gares",
        "date": "2020-05-11T07:54:47Z",
        "comment": "I think such a change should be discussed at a meeting. I'm supportive but the notation design can only benefit from multiple scrutiny. For example the `/[1rule]` thing with no space and no `!` is kind of odd.\r\n\r\nI'd like to see a few tests added to the test suite (and later backported to Coq), for example to test the rewrite notation with inlined multi-rules."
      },
      {
        "author": "CohenCyril",
        "date": "2020-05-11T12:10:32Z",
        "comment": "> For example the `/[1rule]` thing with no space and no `!` is kind of odd.\r\n\r\nI agree we could have `/[1!rule]` instead, it would indeed look nicer!\r\n(moreover, the largest use is `!rule`, and just sometimes, it needs to be done only once...)"
      },
      {
        "author": "chdoc",
        "date": "2021-06-03T09:20:37Z",
        "comment": "After a cursory look, I'm not entirely convinced that replacing every occurrence of `; rewrite inE` with `=> /[1!inE]` is really that big an improvement, in particular when replacing `by apply: foo; rewrite inE` with `by apply: foo => /[1!inE]` (found some instances in `action.v`, but there are probably many others). IMHO, the `/[!inE]` pattern should mainly be used if it becomes part of another into pattern (or when necessary to stay within the 80 characters limit). \r\n\r\n@CohenCyril , what's your opinion or rationale for this?"
      },
      {
        "author": "CohenCyril",
        "date": "2021-07-06T15:39:48Z",
        "comment": "@chdoc finally updated :)"
      },
      {
        "author": "gares",
        "date": "2021-07-07T09:18:44Z",
        "comment": "OK, I'm merging this one.\r\nI wonder if the notation could be improved further to allow for `[!inE, other, ..]` since the `()` serve really little purpose (syntactically). But that would be for another PR."
      }
    ],
    "review_discussion": [
      {
        "author": "gares",
        "file": "mathcomp/algebra/intdiv.v",
        "date": "2021-05-19T08:32:32Z",
        "comment": "maybe a space after /rowP ?"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/intdiv.v",
        "date": "2021-05-19T08:37:42Z",
        "comment": "why?"
      },
      {
        "author": "gares",
        "file": "mathcomp/algebra/intdiv.v",
        "date": "2021-05-19T14:51:03Z",
        "comment": "because `/v1/v2/../vn` has a meaning,  all views are applied and typechecked together, while `/(_ i)` an `/[!mxE]` are separate steps. I'd write\r\n```coq\r\nby have /eqP/rowP /(_ i) /[!mxE] -> := Zv; rewrite mulr1.\r\n```\r\nand eat the spaces only if they help being < 80"
      },
      {
        "author": "gares",
        "file": "mathcomp/algebra/intdiv.v",
        "date": "2021-05-19T14:52:05Z",
        "comment": "Anyway, not really important..."
      }
    ],
    "tags": [
      {
        "tag": "kind: enhancement",
        "description": "Issue or PR about addition of features."
      },
      {
        "tag": "drops: coq 8.9",
        "description": "Addressing this issue or merging this PR requires to drop support for coq 8.9"
      }
    ],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "052448e1524a46648d6947a25661641cede8d6c2",
        "message": "Intro pattern extensions for rewrite",
        "date": "2021-07-06T15:38:00Z"
      }
    ]
  },
  {
    "author": "chdoc",
    "number": 499,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 53,
        "deletions": 1
      },
      {
        "file": "mathcomp/ssreflect/eqtype.v",
        "status": "M",
        "additions": 53,
        "deletions": 1
      },
      {
        "file": "mathcomp/ssreflect/ssrbool.v",
        "status": "M",
        "additions": 53,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2020-05-04T16:19:55Z",
    "update_date": "2020-06-17T12:47:52Z",
    "discussion": [],
    "review_discussion": [
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/eqtype.v",
        "date": "2020-06-15T19:59:54Z",
        "comment": "`auto` has an impredictable behavior wrt the use of the section context. So I'd recommend doing the proof by hand or writing an explicit `Proof using T1.` to make sure `T2` is not pulled in by accident..."
      },
      {
        "author": "chdoc",
        "file": "mathcomp/ssreflect/eqtype.v",
        "date": "2020-06-17T08:50:25Z",
        "comment": "Done."
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "chdoc",
        "committer": "chdoc",
        "hash": "ff0120b48802578db0a46ebd10205e433915844f",
        "message": "contra lemmas involving propositions",
        "date": "2020-06-17T08:31:43Z"
      }
    ]
  },
  {
    "author": "chdoc",
    "number": 498,
    "diff_summary": [
      {
        "file": "CONTRIBUTING.md",
        "status": "M",
        "additions": 7,
        "deletions": 2
      }
    ],
    "state": "merged",
    "open_date": "2020-05-04T13:53:44Z",
    "update_date": "2020-05-04T14:22:46Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "chdoc",
        "committer": "chdoc",
        "hash": "df0662036fe5a8ff6410876ee4a441f97ba0907c",
        "message": "document 'in_' and 'mem_' prefixes for infix membership",
        "date": "2020-05-04T13:50:18Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 495,
    "diff_summary": [
      {
        "file": "CHANGELOG.md",
        "status": "M",
        "additions": 3,
        "deletions": 31
      }
    ],
    "state": "merged",
    "open_date": "2020-05-04T08:43:01Z",
    "update_date": "2020-05-05T22:21:23Z",
    "discussion": [
      {
        "author": "gares",
        "date": "2020-05-04T09:21:36Z",
        "comment": "As per WG this need an update (instead of removing the entry, write how to migrate)"
      },
      {
        "author": "pi8027",
        "date": "2020-05-05T20:12:02Z",
        "comment": "Done."
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "6658910a5f4da49907562473577f442088b3b052",
        "message": "Reword a CHANGELOG entry introduced in #429\n\nthat explains an incompatibility between development versions",
        "date": "2020-05-05T20:10:24Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 494,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 508,
        "deletions": 317
      },
      {
        "file": "mathcomp/algebra/ssrnum.v",
        "status": "M",
        "additions": 508,
        "deletions": 317
      },
      {
        "file": "mathcomp/ssreflect/order.v",
        "status": "M",
        "additions": 508,
        "deletions": 317
      }
    ],
    "state": "merged",
    "open_date": "2020-05-04T03:10:41Z",
    "update_date": "2020-08-13T15:16:00Z",
    "discussion": [
      {
        "author": "pi8027",
        "date": "2020-05-04T10:08:11Z",
        "comment": "@CohenCyril Could you assign yourself? Also, this one should target 1.12.0."
      },
      {
        "author": "pi8027",
        "date": "2020-06-27T04:32:54Z",
        "comment": "Since I finished the documentation work, this PR is ready for review."
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "642182cf6d076cf6c3f435f95ef042fd1ed378af",
        "message": "Get rid of displays in class fields and mixin parameters\n\n- In the definition of structures in order.v, displays are removed from\n  parameters of mixins and fields of classes internally and now only appear in\n  parameters of structures. Consequently, each mixin is now parameterized by a\n  class rather than a structure, and the corresponding factory parameterized by\n  a structure is provided to replace the use of the mixin. These factories have\n  the same names as in the mixins before this change except that `bLatticeMixin`\n  and `tbLatticeMixin` have been renamed to `bottomMixin` and `topMixin`\n  respectively.\n- Added a factory `distrLatticePOrderMixin` in order.v to build a\n  `distrLatticeType` from a `porderType`.",
        "date": "2020-08-11T15:40:25Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 493,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/order.v",
        "status": "M",
        "additions": 0,
        "deletions": 14
      }
    ],
    "state": "merged",
    "open_date": "2020-05-04T02:58:44Z",
    "update_date": "2020-05-04T11:16:47Z",
    "discussion": [
      {
        "author": "gares",
        "date": "2020-05-04T09:24:08Z",
        "comment": "WG: seems safe to merge, easy to fix if you adopt these lemmas since the beta (just import tuples)"
      },
      {
        "author": "pi8027",
        "date": "2020-05-04T10:08:25Z",
        "comment": "@CohenCyril Could you assign yourself?"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "3548a49db7f9ddc181a27ba0762686b2f2aee30c",
        "message": "Remove the tuple extensions in order.v that is available in tuple.v",
        "date": "2020-05-04T02:46:30Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 492,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 36,
        "deletions": 3
      },
      {
        "file": "mathcomp/ssreflect/bigop.v",
        "status": "M",
        "additions": 36,
        "deletions": 3
      }
    ],
    "state": "merged",
    "open_date": "2020-05-01T17:52:09Z",
    "update_date": "2020-09-09T23:49:42Z",
    "discussion": [
      {
        "author": "pi8027",
        "date": "2020-09-09T23:41:31Z",
        "comment": "@CohenCyril Could you take care of the remaining TODO? If you are happy with the current status, I will merge."
      },
      {
        "author": "CohenCyril",
        "date": "2020-09-09T23:48:24Z",
        "comment": "> @CohenCyril Could you take care of the remaining TODO? If you are happy with the current status, I will merge.\r\n\r\nIt's a todo \"after merge\" ;)"
      },
      {
        "author": "CohenCyril",
        "date": "2020-09-09T23:48:46Z",
        "comment": "> It's a todo \"after merge\" ;)\r\n\r\nonce you merge, I do it"
      },
      {
        "author": "pi8027",
        "date": "2020-09-09T23:49:54Z",
        "comment": "@CohenCyril Thanks!"
      }
    ],
    "review_discussion": [
      {
        "author": "pi8027",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2020-09-03T08:57:10Z",
        "comment": "`bigop.v`"
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "1107e774914cd9b764a0cf4bf2162854b8488ab0",
        "message": "New `big_uncond` and `big_rmcond -> big_rmcond_in`\n\n- Lemma `big_rmcond` has been renamed `big_rmcomd_in` and the variant which does not require an `eqType` has been added and named `big_uncond`.\n- The name `big_rmcond` is deprecated and will be reused for `big_uncond` in the next version of math-comp\n- Additionally `big_uncond_in` is made available for uniformity, but is already deprecated.",
        "date": "2020-09-03T11:27:15Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 490,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/order.v",
        "status": "M",
        "additions": 6,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2020-04-20T17:01:22Z",
    "update_date": "2020-05-04T11:16:07Z",
    "discussion": [
      {
        "author": "pi8027",
        "date": "2020-04-20T17:03:23Z",
        "comment": "~`dual_finOrderType` seems also to be broken. Let me check.~ OK now it is correct.\r\n```coq\r\ndual_finOrderType: forall d : unit, finOrderType d -> finOrderType d\r\n```"
      },
      {
        "author": "CohenCyril",
        "date": "2020-05-01T08:49:42Z",
        "comment": "Here is an alternative for displays: instead of unit, we use\r\n```coq \r\nInductive display := Simple of unit | Dual of display.\r\n```\r\n\r\nThen displays are `Simple u` for opaque elements of `u` of type `unit`, except for\r\n```coq\r\nDefinition dual_display d := if d is Dual d' then d' else Dual d.\r\nArguments dual_display d /.\r\n```\r\n\r\nThat way,\r\n- `dual_display d ` is still not convertible to d\r\n- `dual_display (dual_display d)` reduces (through simpl) to `d`"
      },
      {
        "author": "pi8027",
        "date": "2020-05-01T09:16:20Z",
        "comment": "@CohenCyril This does not work:\r\n```coq\r\nCheck (fun d : display => erefl d : d = dual_display (dual_display d)).\r\n```"
      },
      {
        "author": "CohenCyril",
        "date": "2020-05-01T09:18:53Z",
        "comment": "A variant\r\n\r\n```coq\r\nInductive display := Simple of unit | Dual of unit.\r\n\r\nNotation dual_display :=\r\n  (fun d => match d with Simple u => Dual u | Dual u => Simple u end).\r\n\r\nDefinition x of display := unit.\r\n\r\nCheck (fun u => erefl (Simple u) : Simple u = dual_display (dual_display (Simple u))).\r\n\r\nNotation simple_unit := (x (Simple tt)). \r\nNotation dual_unit := (x (dual_display (Simple tt))).\r\nGoal x (dual_display (dual_display (Simple tt))) = unit.\r\nsimpl.\r\nAbort.\r\n````"
      },
      {
        "author": "pi8027",
        "date": "2020-05-01T09:30:50Z",
        "comment": "BTW, the PR about definitionally involutive duals is #464, not this one. This PR is just a small bug fix for 1.11.0..."
      },
      {
        "author": "pi8027",
        "date": "2020-05-04T10:08:36Z",
        "comment": "@CohenCyril Could you assign yourself?"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "c67dde4080b9c4470b8ab4ff828707fb0044d3dc",
        "message": "Add dual_finLatticeType and fix dual_finDistrLatticeType\n\nThis fixes two issues:\n- dual_finLatticeType was missing, and\n- dual_finDistrLatticeType was just an identity function.",
        "date": "2020-04-20T16:52:32Z"
      }
    ]
  },
  {
    "author": "affeldt-aist",
    "number": 487,
    "diff_summary": [
      {
        "file": "CHANGELOG.md",
        "status": "M",
        "additions": 215,
        "deletions": 201
      },
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 215,
        "deletions": 201
      }
    ],
    "state": "merged",
    "open_date": "2020-04-15T14:00:32Z",
    "update_date": "2020-04-15T14:24:47Z",
    "discussion": [],
    "review_discussion": [
      {
        "author": "CohenCyril",
        "file": "CHANGELOG.md",
        "date": "2020-04-15T14:03:12Z",
        "comment": "@affeldt-aist you should add an entry to last releases"
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "090009e4e395008e00649ee1710b9c44abc4638e",
        "message": "preparing changelogs to release 1.11.0+beta1",
        "date": "2020-04-15T14:15:01Z"
      }
    ]
  },
  {
    "author": "affeldt-aist",
    "number": 485,
    "diff_summary": [
      {
        "file": "CHANGELOG.md",
        "status": "M",
        "additions": 185,
        "deletions": 174
      },
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 185,
        "deletions": 174
      }
    ],
    "state": "closed",
    "open_date": "2020-04-15T09:40:59Z",
    "update_date": "2020-04-15T12:11:21Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "8d3c8ce4ac119f373240036db3c4d4cd3445cd12",
        "message": "edit changelogs for the release",
        "date": "2020-04-15T09:38:35Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 484,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 10,
        "deletions": 4
      },
      {
        "file": "mathcomp/algebra/zmodp.v",
        "status": "M",
        "additions": 10,
        "deletions": 4
      },
      {
        "file": "mathcomp/fingroup/perm.v",
        "status": "M",
        "additions": 10,
        "deletions": 4
      },
      {
        "file": "mathcomp/ssreflect/fintype.v",
        "status": "M",
        "additions": 10,
        "deletions": 4
      }
    ],
    "state": "merged",
    "open_date": "2020-04-10T10:01:51Z",
    "update_date": "2020-09-28T09:49:09Z",
    "discussion": [],
    "review_discussion": [
      {
        "author": "pi8027",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2020-09-28T04:30:51Z",
        "comment": "```suggestion\r\n```"
      }
    ],
    "tags": [
      {
        "tag": "kind: enhancement",
        "description": "Issue or PR about addition of features."
      }
    ],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "4241f07301e8d84186ae2c80d5c32118a90f6847",
        "message": "Putting ord1 in fintype\n\nord1 is in zmodp, but it does not really require the zmodType structure of 'I_n to be stated and proven if we state it with ord0. We still keep the variant in zmodp with 0 instead of ord0 (for readability purposes).",
        "date": "2020-09-27T13:09:15Z"
      },
      {
        "author": "CohenCyril",
        "committer": "web-flow",
        "hash": "e41cb4f8b30181d3b144b57fc46cb89407f632d8",
        "message": "Update CHANGELOG_UNRELEASED.md\n\nCo-authored-by: Kazuhiko Sakaguchi <pi8027@gmail.com>",
        "date": "2020-09-28T08:16:37Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 483,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 4,
        "deletions": 0
      },
      {
        "file": "mathcomp/fingroup/perm.v",
        "status": "M",
        "additions": 4,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2020-04-10T09:59:29Z",
    "update_date": "2020-11-02T15:44:53Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2020-09-28T08:22:18Z",
        "comment": "@affeldt-aist I thought I authored this one, did I screw up a rebase and attributed a commit that belongs to me, to you?"
      },
      {
        "author": "affeldt-aist",
        "date": "2020-09-28T13:55:30Z",
        "comment": "> @affeldt-aist I thought I authored this one, did I screw up a rebase and attributed a commit that belongs to me, to you?\r\n\r\nI have not contributed to this PR (PR #483 ).\r\nMaybe it comes from the fact that I committed to PR #221 and you squashed parts of it? "
      },
      {
        "author": "pi8027",
        "date": "2020-11-02T08:01:42Z",
        "comment": "Is there any obstacle to merging this PR other than the conflict in CHANGELOG?"
      },
      {
        "author": "thery",
        "date": "2020-11-02T14:06:58Z",
        "comment": "@CohenCyril  as soon as it is rebased I merge"
      }
    ],
    "review_discussion": [
      {
        "author": "thery",
        "file": "mathcomp/fingroup/perm.v",
        "date": "2020-09-28T07:02:48Z",
        "comment": "don't like the name but could not find similar theorem in the library."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/fingroup/perm.v",
        "date": "2020-09-28T08:21:01Z",
        "comment": "`permS01` ?"
      },
      {
        "author": "thery",
        "file": "mathcomp/fingroup/perm.v",
        "date": "2020-09-28T09:42:43Z",
        "comment": "ok"
      }
    ],
    "tags": [
      {
        "tag": "kind: enhancement",
        "description": "Issue or PR about addition of features."
      }
    ],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "486e08591c443093cdb602de7f603f84df72be42",
        "message": "Adding `permS01`",
        "date": "2020-11-02T14:23:56Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 482,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 264,
        "deletions": 79
      },
      {
        "file": "mathcomp/fingroup/action.v",
        "status": "M",
        "additions": 264,
        "deletions": 79
      },
      {
        "file": "mathcomp/fingroup/perm.v",
        "status": "M",
        "additions": 264,
        "deletions": 79
      },
      {
        "file": "mathcomp/solvable/finmodule.v",
        "status": "M",
        "additions": 264,
        "deletions": 79
      }
    ],
    "state": "closed",
    "open_date": "2020-04-10T09:49:18Z",
    "update_date": "2020-04-13T13:50:17Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2020-04-10T09:50:10Z",
        "comment": "@affeldt-aist and @ybertot this PR should be merge right after #221 is merged, I am not adding it directy to #221 not to disrupt the CI status while Assia is potentially reviewing it."
      },
      {
        "author": "CohenCyril",
        "date": "2020-04-13T13:50:15Z",
        "comment": "> @affeldt-aist and @ybertot this PR should be merge right after #221 is merged, I am not adding it directy to #221 not to disrupt the CI status while Assia is potentially reviewing it.\r\n\r\nI changer my mind. The change is small enough I pushed directly to #221."
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "hivert",
        "committer": "CohenCyril",
        "hash": "9cd391db83172904452d5863ef7a5e4bd454968e",
        "message": "Some more lemmas on permutations",
        "date": "2020-04-09T14:56:27Z"
      },
      {
        "author": "affeldt-aist",
        "committer": "CohenCyril",
        "hash": "363096709ebd1dbe2c2d58465444295746edac42",
        "message": "addressing comments about PR#221 of mathcomp",
        "date": "2020-04-09T14:57:28Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "a6d8fa56652b0a66f0ef525d7b8af53874e1e113",
        "message": "reworking new proofs in perm and action and adding missing ones",
        "date": "2020-04-09T14:57:28Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "662af3bf879f3d67fdec46531e491d8d81ba9cd7",
        "message": "Rephrased permS0 and permS1 with all_equal_to",
        "date": "2020-04-10T09:42:59Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 479,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 274,
        "deletions": 80
      },
      {
        "file": "mathcomp/algebra/zmodp.v",
        "status": "M",
        "additions": 274,
        "deletions": 80
      },
      {
        "file": "mathcomp/fingroup/action.v",
        "status": "M",
        "additions": 274,
        "deletions": 80
      },
      {
        "file": "mathcomp/fingroup/perm.v",
        "status": "M",
        "additions": 274,
        "deletions": 80
      },
      {
        "file": "mathcomp/solvable/finmodule.v",
        "status": "M",
        "additions": 274,
        "deletions": 80
      },
      {
        "file": "mathcomp/ssreflect/fintype.v",
        "status": "M",
        "additions": 274,
        "deletions": 80
      }
    ],
    "state": "closed",
    "open_date": "2020-04-09T15:12:10Z",
    "update_date": "2020-04-10T09:51:32Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: enhancement",
        "description": "Issue or PR about addition of features."
      },
      {
        "tag": "needs: merge of dependencies",
        "description": "PR that depends on another. Documented in the original post of the PR. Review only the increment."
      }
    ],
    "commits": [
      {
        "author": "hivert",
        "committer": "CohenCyril",
        "hash": "9cd391db83172904452d5863ef7a5e4bd454968e",
        "message": "Some more lemmas on permutations",
        "date": "2020-04-09T14:56:27Z"
      },
      {
        "author": "affeldt-aist",
        "committer": "CohenCyril",
        "hash": "363096709ebd1dbe2c2d58465444295746edac42",
        "message": "addressing comments about PR#221 of mathcomp",
        "date": "2020-04-09T14:57:28Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "a6d8fa56652b0a66f0ef525d7b8af53874e1e113",
        "message": "reworking new proofs in perm and action and adding missing ones",
        "date": "2020-04-09T14:57:28Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "265f27d8e7225baad6fccd7ca420e35746912a6a",
        "message": "Backporting ord1 to fintype and using it in perm.\n\n- also rephrased permS0 and permS1 in a better way\n- added permSleq1",
        "date": "2020-04-09T15:09:44Z"
      }
    ]
  },
  {
    "author": "affeldt-aist",
    "number": 477,
    "diff_summary": [
      {
        "file": "CONTRIBUTING.md",
        "status": "M",
        "additions": 17,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2020-04-09T07:53:43Z",
    "update_date": "2020-04-10T13:29:39Z",
    "discussion": [
      {
        "author": "affeldt-aist",
        "date": "2020-04-09T07:55:00Z",
        "comment": "@CohenCyril I'll update the wiki accordingly if we merge"
      }
    ],
    "review_discussion": [
      {
        "author": "anton-trunov",
        "file": "CONTRIBUTING.md",
        "date": "2020-04-09T10:01:18Z",
        "comment": "Does it mean these macros should be used consistently across Mathcomp? Because right now it's not precisely the case. E.g. `cat0s`, `cats0`, `catA` in `seq` or a bunch of lemmas for set operations in `finset`. I can open an issue about that if you feel this is something worth doing."
      },
      {
        "author": "anton-trunov",
        "file": "CONTRIBUTING.md",
        "date": "2020-04-09T10:01:43Z",
        "comment": "```suggestion\r\n  + Polymorphic variables should be named `x`, ...\r\n```"
      },
      {
        "author": "anton-trunov",
        "file": "CONTRIBUTING.md",
        "date": "2020-04-09T10:02:39Z",
        "comment": "Maybe an example would help here to clarify this for newcomers?"
      },
      {
        "author": "affeldt-aist",
        "file": "CONTRIBUTING.md",
        "date": "2020-04-09T13:42:22Z",
        "comment": "I rephrase to avoid giving the impression that there is a rule here."
      },
      {
        "author": "affeldt-aist",
        "file": "CONTRIBUTING.md",
        "date": "2020-04-09T14:04:33Z",
        "comment": "I am not sure but let my add a link for the sake of discussion."
      },
      {
        "author": "anton-trunov",
        "file": "CONTRIBUTING.md",
        "date": "2020-04-09T15:53:10Z",
        "comment": "@affeldt-aist Thank you!"
      }
    ],
    "tags": [
      {
        "tag": "kind: documentation",
        "description": "Issue or PR about documentation mistakes, deficiencies, enhancements, ..."
      }
    ],
    "commits": [
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "533dd3525b67278e770bbdb848a2568466cc3a65",
        "message": "move the contents of\nhttps://github.com/math-comp/math-comp/wiki/good-practices\nto\nCONTRIBUTING.md",
        "date": "2020-04-09T14:05:09Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 475,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 23,
        "deletions": 2
      },
      {
        "file": "mathcomp/ssreflect/ssrnat.v",
        "status": "M",
        "additions": 23,
        "deletions": 2
      }
    ],
    "state": "merged",
    "open_date": "2020-04-08T17:01:11Z",
    "update_date": "2020-04-15T06:23:35Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2020-04-08T17:01:19Z",
        "comment": "@affeldt-aist "
      },
      {
        "author": "gares",
        "date": "2020-04-08T21:56:19Z",
        "comment": "Please open an issue about removing deprecated aliases mentioning this commit hash and put it the 1.12 milestone.\r\n\r\nWe should probably make this a policy."
      },
      {
        "author": "affeldt-aist",
        "date": "2020-04-08T23:21:30Z",
        "comment": "Done as issue #476."
      },
      {
        "author": "CohenCyril",
        "date": "2020-04-09T15:52:50Z",
        "comment": "@ybertot  I failed with my rebase, but it should be fixed now."
      },
      {
        "author": "CohenCyril",
        "date": "2020-04-14T16:11:34Z",
        "comment": "ping @ybertot"
      }
    ],
    "review_discussion": [
      {
        "author": "ybertot",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2020-04-09T14:38:07Z",
        "comment": "```suggestion\r\n  + `(inc|dec)r_inj(_in)` -> `(inc|dec)n_inj(_in)`\r\n```"
      },
      {
        "author": "ybertot",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2020-04-09T14:56:57Z",
        "comment": "Please change this small typo."
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "ea6d5dba608a37a8c418638847905202da6d1ab3",
        "message": "adding depreciations in ssrnat",
        "date": "2020-04-10T13:34:31Z"
      }
    ]
  },
  {
    "author": "llelf",
    "number": 474,
    "diff_summary": [
      {
        "file": "mathcomp/algebra/matrix.v",
        "status": "M",
        "additions": 55,
        "deletions": 55
      },
      {
        "file": "mathcomp/algebra/poly.v",
        "status": "M",
        "additions": 55,
        "deletions": 55
      },
      {
        "file": "mathcomp/character/integral_char.v",
        "status": "M",
        "additions": 55,
        "deletions": 55
      },
      {
        "file": "mathcomp/character/mxabelem.v",
        "status": "M",
        "additions": 55,
        "deletions": 55
      },
      {
        "file": "mathcomp/field/algnum.v",
        "status": "M",
        "additions": 55,
        "deletions": 55
      },
      {
        "file": "mathcomp/ssreflect/bigop.v",
        "status": "M",
        "additions": 55,
        "deletions": 55
      },
      {
        "file": "mathcomp/ssreflect/binomial.v",
        "status": "M",
        "additions": 55,
        "deletions": 55
      },
      {
        "file": "mathcomp/ssreflect/eqtype.v",
        "status": "M",
        "additions": 55,
        "deletions": 55
      },
      {
        "file": "mathcomp/ssreflect/finfun.v",
        "status": "M",
        "additions": 55,
        "deletions": 55
      },
      {
        "file": "mathcomp/ssreflect/fingraph.v",
        "status": "M",
        "additions": 55,
        "deletions": 55
      },
      {
        "file": "mathcomp/ssreflect/finset.v",
        "status": "M",
        "additions": 55,
        "deletions": 55
      },
      {
        "file": "mathcomp/ssreflect/fintype.v",
        "status": "M",
        "additions": 55,
        "deletions": 55
      },
      {
        "file": "mathcomp/ssreflect/generic_quotient.v",
        "status": "M",
        "additions": 55,
        "deletions": 55
      },
      {
        "file": "mathcomp/ssreflect/order.v",
        "status": "M",
        "additions": 55,
        "deletions": 55
      },
      {
        "file": "mathcomp/ssreflect/path.v",
        "status": "M",
        "additions": 55,
        "deletions": 55
      },
      {
        "file": "mathcomp/ssreflect/prime.v",
        "status": "M",
        "additions": 55,
        "deletions": 55
      },
      {
        "file": "mathcomp/ssreflect/ssrnat.v",
        "status": "M",
        "additions": 55,
        "deletions": 55
      },
      {
        "file": "mathcomp/ssreflect/ssrnotations.v",
        "status": "M",
        "additions": 55,
        "deletions": 55
      },
      {
        "file": "mathcomp/ssreflect/tuple.v",
        "status": "M",
        "additions": 55,
        "deletions": 55
      }
    ],
    "state": "merged",
    "open_date": "2020-04-07T21:35:25Z",
    "update_date": "2020-04-09T11:43:33Z",
    "discussion": [
      {
        "author": "affeldt-aist",
        "date": "2020-04-08T15:45:01Z",
        "comment": "For me, this PR can be merged as it is. (Thanks @llelf .)"
      },
      {
        "author": "ybertot",
        "date": "2020-04-09T13:58:42Z",
        "comment": "Thanks a lot @llelf, it was great working with you on this pull request."
      }
    ],
    "review_discussion": [
      {
        "author": "ybertot",
        "file": "mathcomp/ssreflect/ssrnat.v",
        "date": "2020-04-09T06:29:50Z",
        "comment": "```suggestion\r\n(*         file prime.v (the suffix is not used in this file).                 *)\r\n```"
      },
      {
        "author": "ybertot",
        "file": "mathcomp/ssreflect/tuple.v",
        "date": "2020-04-09T06:33:10Z",
        "comment": "I disagree with this modification.  I don't see why adding a period here will help.  Can you elaborate the need for this change?"
      },
      {
        "author": "ybertot",
        "file": "mathcomp/ssreflect/eqtype.v",
        "date": "2020-04-09T06:36:44Z",
        "comment": "While you are at it, you should correct line 440 of the same file:\r\n(* The invariant of an function ... *)  --> invariant of a function"
      },
      {
        "author": "llelf",
        "file": "mathcomp/ssreflect/tuple.v",
        "date": "2020-04-09T06:53:32Z",
        "comment": "For consistency. `foo.-tuple` (as a notation for `tuple_of`) is used everywhere in this file's header."
      },
      {
        "author": "llelf",
        "file": "mathcomp/ssreflect/tuple.v",
        "date": "2020-04-09T06:58:32Z",
        "comment": "it should be even `the m.-tuple t cast as an n.-tuple` then.\r\n@ybertot apply or remove?"
      },
      {
        "author": "ybertot",
        "file": "mathcomp/ssreflect/tuple.v",
        "date": "2020-04-09T07:05:29Z",
        "comment": "@llelf You convinced me, and you are right about the second correction on the same line: --> \"n.tuple\"\r\n"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/tuple.v",
        "date": "2020-04-09T07:10:18Z",
        "comment": "So I propose to fix L.16: `(size s)-tuple` -> `(size s).-tuple`."
      },
      {
        "author": "llelf",
        "file": "mathcomp/ssreflect/tuple.v",
        "date": "2020-04-09T07:15:33Z",
        "comment": "fixed both"
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "llelf",
        "committer": "llelf",
        "hash": "815d3cbfa2bf98b4b8f2bcd14819a20eca843e78",
        "message": "fix typos in documentation: text",
        "date": "2020-04-07T21:13:13Z"
      },
      {
        "author": "llelf",
        "committer": "llelf",
        "hash": "bfd4b28b835e6918d7f4dea848c8b94f4c1c6f7f",
        "message": "fix typos in documentation: formulae",
        "date": "2020-04-07T21:34:03Z"
      },
      {
        "author": "llelf",
        "committer": "web-flow",
        "hash": "52e091587f9fa65f6184ae5e4c6b63677281376b",
        "message": "Update mathcomp/ssreflect/ssrnat.v\r\n\r\nthe->this\n\nCo-Authored-By: Yves Bertot <yves.bertot@inria.fr>",
        "date": "2020-04-09T06:48:04Z"
      },
      {
        "author": "llelf",
        "committer": "llelf",
        "hash": "7d6e46ec9c8067553e9a82b5345778f00cf3c1e9",
        "message": "more typos",
        "date": "2020-04-09T06:54:37Z"
      },
      {
        "author": "llelf",
        "committer": "llelf",
        "hash": "31dec18a2539cfdac70fd87401db2b4b14d81d16",
        "message": "docs: more \".-tuple\" fixes",
        "date": "2020-04-09T07:12:47Z"
      }
    ]
  },
  {
    "author": "affeldt-aist",
    "number": 473,
    "diff_summary": [
      {
        "file": ".gitlab-ci.yml",
        "status": "M",
        "additions": 35,
        "deletions": 23
      },
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 35,
        "deletions": 23
      },
      {
        "file": "mathcomp/algebra/matrix.v",
        "status": "M",
        "additions": 35,
        "deletions": 23
      },
      {
        "file": "mathcomp/algebra/mxpoly.v",
        "status": "M",
        "additions": 35,
        "deletions": 23
      },
      {
        "file": "mathcomp/fingroup/perm.v",
        "status": "M",
        "additions": 35,
        "deletions": 23
      },
      {
        "file": "mathcomp/ssreflect/div.v",
        "status": "M",
        "additions": 35,
        "deletions": 23
      },
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 35,
        "deletions": 23
      },
      {
        "file": "mathcomp/ssreflect/ssrnat.v",
        "status": "M",
        "additions": 35,
        "deletions": 23
      }
    ],
    "state": "merged",
    "open_date": "2020-04-07T15:50:14Z",
    "update_date": "2020-04-09T14:21:31Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2020-04-07T16:54:06Z",
        "comment": "@affeldt-aist looks like fourcolour needs an overlay"
      },
      {
        "author": "pi8027",
        "date": "2020-04-08T04:21:58Z",
        "comment": "Hello. Shouldn't we use the deprecation facility rather than having overlays? https://github.com/math-comp/math-comp/blob/5d7bd2ea2a0a28fb275da8ba2e2c0dc5a33d1034/mathcomp/ssreflect/ssreflect.v#L15-L28"
      },
      {
        "author": "affeldt-aist",
        "date": "2020-04-08T14:20:57Z",
        "comment": "> Hello. Shouldn't we use the deprecation facility rather than having overlays? \r\n\r\nIndeed. Will do."
      }
    ],
    "review_discussion": [
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-04-08T04:23:11Z",
        "comment": "```suggestion\r\nProof. by elim: n => // n IHn; rewrite -[in LHS]addn1 nseqD rev_cat IHn. Qed.\r\n```"
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "691e0c20a8934343a6840f2a19735acea6e79d05",
        "message": "- switching long suffixes to short suffixes\n  + `odd_add` -> `oddD`\n  + `odd_sub` -> `oddB`\n  + `take_addn` -> `takeD`\n  + `rot_addn` -> `rotD`\n  + `nseq_addn` -> `nseqD`\n\nfixes #359",
        "date": "2020-04-09T11:58:12Z"
      }
    ]
  },
  {
    "author": "affeldt-aist",
    "number": 472,
    "diff_summary": [
      {
        "file": "mathcomp/solvable/finmodule.v",
        "status": "M",
        "additions": 2,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2020-04-05T23:23:24Z",
    "update_date": "2020-04-06T12:28:21Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: documentation",
        "description": "Issue or PR about documentation mistakes, deficiencies, enhancements, ..."
      }
    ],
    "commits": [
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "942109a5fc1da2f26c58ad13eda095350eb390ff",
        "message": "minor documentation fix",
        "date": "2020-04-05T23:21:41Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 471,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "A",
        "additions": 15,
        "deletions": 5
      },
      {
        "file": "mathcomp/Make.test-suite",
        "status": "A",
        "additions": 15,
        "deletions": 5
      },
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "A",
        "additions": 15,
        "deletions": 5
      },
      {
        "file": "mathcomp/test_suite/test_guard.v",
        "status": "A",
        "additions": 15,
        "deletions": 5
      }
    ],
    "state": "merged",
    "open_date": "2020-04-05T23:03:53Z",
    "update_date": "2020-04-10T13:31:35Z",
    "discussion": [
      {
        "author": "pi8027",
        "date": "2020-04-09T01:05:06Z",
        "comment": "It would be nice to have a comment about the guard condition not to revert this change later, but this may be more general and placed somewhere else. I think what we should say here, in general, is that we should try to factor out function arguments of higher-order, polymorphic, recursive functions. For example, can we reproduce the same issue with the `map` function?"
      },
      {
        "author": "pi8027",
        "date": "2020-04-09T01:36:34Z",
        "comment": "> For example, can we reproduce the same issue with the `map` function?\r\n\r\nI self-answer this question. It is possible:\r\n```coq\r\nFrom mathcomp Require Import all_ssreflect.\r\n\r\nSet Implicit Arguments.\r\nUnset Strict Implicit.\r\nUnset Printing Implicit Defensive.\r\n\r\nInductive tree (A : Type) := singleton of A | branch of list (tree A).\r\n\r\nModule Bad.\r\n\r\nFixpoint map (A B : Type) (f : A -> B) (xs : list A) : list B :=\r\n  if xs is x :: xs then f x :: map f xs else [::].\r\n\r\nFail Fixpoint tmap (A B : Type) (f : A -> B) (t : tree A) : tree B :=\r\n  match t with\r\n    | singleton x => singleton (f x)\r\n    | branch ts => branch (map (tmap f) ts)\r\n  end.\r\n\r\nEnd Bad.\r\n\r\nModule Good.\r\n\r\nDefinition map (A B : Type) (f : A -> B) :=\r\n  fix map' (xs : list A) := if xs is x :: xs then f x :: map' xs else [::].\r\n\r\nDefinition tmap (A B : Type) (f : A -> B) := fix tmap' (t : tree A) : tree B :=\r\n  match t with\r\n    | singleton x => singleton (f x)\r\n    | branch ts => branch (map tmap' ts)\r\n  end.\r\n\r\nEnd Good.\r\n```\r\n\r\nTo conclude, if this is not a commonly known technique to write terminating functions, it would worth documenting it somewhere."
      },
      {
        "author": "affeldt-aist",
        "date": "2020-04-09T07:31:45Z",
        "comment": "> To conclude, if this is not a commonly known technique to write terminating functions, it would worth\r\n> documenting it somewhere.\r\n\r\nI would say https://github.com/math-comp/math-comp/blob/master/CONTRIBUTING.md."
      },
      {
        "author": "pi8027",
        "date": "2020-04-09T12:21:55Z",
        "comment": "@affeldt-aist Sure. Also, we can do that in a separate PR."
      },
      {
        "author": "CohenCyril",
        "date": "2020-04-09T12:52:07Z",
        "comment": "> ```coq\r\n> Definition tmap (A B : Type) (f : A -> B) := fix tmap' (t : tree A) : tree B :=\r\n>   match t with\r\n>     | singleton x => singleton (f x)\r\n>     | branch ts => branch (map tmap' ts)\r\n>   end.\r\n> ```\r\n> \r\n> To conclude, if this is not a commonly known technique to write terminating functions, it would worth documenting it somewhere.\r\n\r\nI think such code should be added to the test-suite, in order to detect possible reverts..."
      },
      {
        "author": "pi8027",
        "date": "2020-04-09T13:14:50Z",
        "comment": "@CohenCyril \r\n> I think such code should be added to the test-suite, in order to detect possible reverts...\r\n\r\nSo true. Could you add a test case for `all2`? I will add more test cases later."
      },
      {
        "author": "CohenCyril",
        "date": "2020-04-10T09:02:26Z",
        "comment": "> Looks good to me, modulo a test case. Since we can add it later, it should not block the release.\r\n\r\nI added the test case.\r\n"
      },
      {
        "author": "CohenCyril",
        "date": "2020-04-10T13:30:13Z",
        "comment": "@affeldt-aist we reached consensus, you can merge"
      }
    ],
    "review_discussion": [
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-04-09T00:58:38Z",
        "comment": "I suggest moving `all2` before `all2E` and use `Variable` to factor out `r`. This allows us to use `Fixpoint` rather than `Definition` and then slightly improves the readability."
      },
      {
        "author": "affeldt-aist",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-04-09T07:19:49Z",
        "comment": "I would agree."
      },
      {
        "author": "affeldt-aist",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-04-09T12:08:19Z",
        "comment": "@CohenCyril Which solution do you think is best? (1) The change proposed by @pi8027 (with a comment to say that it is crucial that the `Fixpoint` be inside a `Section`) or (2) add a comment just before the `Definition` using `fix`?"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2020-04-09T12:49:22Z",
        "comment": "The third alternative is to move nothing but add a section variable, as in the new commit I just pushed."
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "378422bcb7de688ac201a70668a3e33b88bdae42",
        "message": "Make `all2` better wrt the guard condition\n\nfixes #469",
        "date": "2020-04-10T09:00:55Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "b4673a3f6d06a4ff38789fd82f33dd517186eb44",
        "message": "adding guard conditions check to the test_suite",
        "date": "2020-04-10T10:25:12Z"
      }
    ]
  },
  {
    "author": "ybertot",
    "number": 468,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 14,
        "deletions": 26
      },
      {
        "file": "mathcomp/fingroup/perm.v",
        "status": "M",
        "additions": 14,
        "deletions": 26
      },
      {
        "file": "mathcomp/ssreflect/bigop.v",
        "status": "M",
        "additions": 14,
        "deletions": 26
      },
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 14,
        "deletions": 26
      }
    ],
    "state": "merged",
    "open_date": "2020-03-31T15:59:19Z",
    "update_date": "2020-04-02T10:14:13Z",
    "discussion": [
      {
        "author": "gares",
        "date": "2020-04-01T07:29:06Z",
        "comment": "@CohenCyril what do you think about the failure of finmap? I know we are close to integrate finmap in MC (1.12) but for MC 1.11 there seem not to be any working version. Do you want to make a release."
      },
      {
        "author": "ybertot",
        "date": "2020-04-01T11:11:11Z",
        "comment": "Failure of the ci-fourcolour-dev job is due to computation taking more than 1 hour, but recompilation on a dedicated machine succeeded."
      },
      {
        "author": "gares",
        "date": "2020-04-01T11:33:45Z",
        "comment": "Let me restart the job, since it usually takes 45 minutes"
      },
      {
        "author": "gares",
        "date": "2020-04-01T11:35:25Z",
        "comment": "@CohenCyril  told me that he shall make a pass on finmap & co to remove the use of deprecated aliases.\r\n\r\n@CohenCyril could you write here what to do with this PR? Are you planning to update finmap soonish?"
      },
      {
        "author": "ybertot",
        "date": "2020-04-01T13:35:08Z",
        "comment": "@CohenCyril For your information, I tried testing quickly with the following process to replace the offending lemmas, but this does not compile, apparently for a reason independent from the change in this PR.\r\n\r\n    git clone git@github.com:math-comp/finmap.git\r\n    cd finmap\r\n    for i in $(find . -name '*.v') ; do perl -npi.bak -e 's/eq_big_perm/permP/;' \\\r\n     -e 's/perm_eq_mem/perm_mem/; s/perm_eqP/permP/; s/perm_eq_size/perm_size/;' \\\r\n     -e 's/perm_eq_small/perm_small_eq/; s/perm_eq_sym/perm_sym/;' \\\r\n     -e 's/perm_eq_trans/perm_trans/; s/perm_eq_uniq/perm_uniq/;' \\\r\n     -e 's/uniq_perm_eq/uniq_perm/' $i ; done\r\nThe offending line is at 2277 in finmap.v\r\n"
      },
      {
        "author": "CohenCyril",
        "date": "2020-04-01T22:23:40Z",
        "comment": "The culprit is\r\n>  `s/eq_big_perm/permP/`\r\n\r\nwhich should be `s/eq_big_perm/perm_big/`\r\n\r\n"
      },
      {
        "author": "CohenCyril",
        "date": "2020-04-01T23:07:38Z",
        "comment": "> @CohenCyril told me that he shall make a pass on finmap & co to remove the use of deprecated aliases.\r\n> \r\n> @CohenCyril could you write here what to do with this PR? Are you planning to update finmap soonish?\r\n\r\ndone, all lights are green now\r\n"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "ybertot",
        "committer": "ybertot",
        "hash": "a8c8fd1f52f90606f5aaf4f4b810b70aabc9caa2",
        "message": "remove deprecated commands whose deprecation was introduced in release 1.9.0\nfixes #418",
        "date": "2020-03-31T15:55:10Z"
      }
    ]
  },
  {
    "author": "erikmd",
    "number": 465,
    "diff_summary": [
      {
        "file": ".gitlab-ci.yml",
        "status": "M",
        "additions": 24,
        "deletions": 38
      },
      {
        "file": "Dockerfile",
        "status": "M",
        "additions": 24,
        "deletions": 38
      },
      {
        "file": "Dockerfile.make",
        "status": "M",
        "additions": 24,
        "deletions": 38
      },
      {
        "file": "coq-mathcomp-ssreflect.opam",
        "status": "M",
        "additions": 24,
        "deletions": 38
      }
    ],
    "state": "merged",
    "open_date": "2020-03-08T15:53:36Z",
    "update_date": "2020-03-12T10:52:58Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "erikmd",
        "committer": "erikmd",
        "hash": "a7f4eb76935157112aa844b6c5ac29a36898235f",
        "message": "Revert \"Don't run \"opam clean -c\" to workaround ocaml/opam#3828\"\n\nThis reverts commit a03e0cb0ff40afabcaccba7f764076355ca82962.",
        "date": "2020-01-17T15:14:38Z"
      },
      {
        "author": "erikmd",
        "committer": "erikmd",
        "hash": "563f395e1a41caf4978fe9881250ec68796e36a0",
        "message": "refactor: Simplify the Dockerfiles\n\n* the CLI option --build-arg=compiler=\"${OPAM_SWITCH}\" is now useless\n  (it had been introduced to be able to compile Coq versions < 8.7,\n  while mathcomp-dev now requires Coq 8.7+)\n\n* the \"coqorg/base:bare\" image now contains the two environment vars\n  COMPILER and COMPILER_EDGE => clear COMPILER=\"\" in mathcomp-dev's\n  Dockerfile multi-stage build.",
        "date": "2020-03-08T14:51:14Z"
      },
      {
        "author": "erikmd",
        "committer": "erikmd",
        "hash": "3ae871fff2165c27b8bb389f1829766a4d6f00d9",
        "message": "Fix CI (coq-lemma-overloading dropped compatibility with Coq < 8.10)",
        "date": "2020-03-08T15:15:05Z"
      },
      {
        "author": "erikmd",
        "committer": "erikmd",
        "hash": "53d9b14fd642e4b97f70c47c47bc8b243523dbbd",
        "message": "[ci] Build mathcomp/mathcomp-dev:8.11\n\nand test coq-lemma-overloading accordingly.",
        "date": "2020-03-08T16:00:28Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 464,
    "diff_summary": [
      {
        "file": ".gitlab-ci.yml",
        "status": "A",
        "additions": 7224,
        "deletions": 2150
      },
      {
        "file": "mathcomp/Make.test-suite",
        "status": "A",
        "additions": 7224,
        "deletions": 2150
      },
      {
        "file": "mathcomp/algebra/interval.v",
        "status": "A",
        "additions": 7224,
        "deletions": 2150
      },
      {
        "file": "mathcomp/algebra/rat.v",
        "status": "A",
        "additions": 7224,
        "deletions": 2150
      },
      {
        "file": "mathcomp/algebra/ssrint.v",
        "status": "A",
        "additions": 7224,
        "deletions": 2150
      },
      {
        "file": "mathcomp/algebra/ssrnum.v",
        "status": "A",
        "additions": 7224,
        "deletions": 2150
      },
      {
        "file": "mathcomp/ssreflect/order.v",
        "status": "A",
        "additions": 7224,
        "deletions": 2150
      },
      {
        "file": "mathcomp/test_suite/test_order_conv.v",
        "status": "A",
        "additions": 7224,
        "deletions": 2150
      }
    ],
    "state": "open",
    "open_date": "2020-03-04T06:50:07Z",
    "update_date": "2023-02-24T23:25:14Z",
    "discussion": [
      {
        "author": "spitters",
        "date": "2020-04-26T16:50:55Z",
        "comment": "Did you consider also join semilattices? Perhaps as an meet semilattice on the opposite order."
      },
      {
        "author": "pi8027",
        "date": "2020-04-26T18:52:17Z",
        "comment": "@spitters We did not consider adding a structure of join semilattices because the canonical `meetSemilatticeType` instance of `T^d` should work as the canonical join semilattice of `T` where `^d` stands for dual. But, actually, I see that making this design choice work requires some more work, and I do not fully understand how to do that yet."
      },
      {
        "author": "spitters",
        "date": "2020-04-27T17:00:43Z",
        "comment": "It's done using duality in Corn.\nThe HoTT library has duality for categories.\n\nWhat are the issues in math-comp?\n\nOn Sun, Apr 26, 2020 at 8:52 PM Kazuhiko Sakaguchi <notifications@github.com>\nwrote:\n\n> @spitters <https://github.com/spitters> We did not consider adding a\n> structure of join semilattices because the canonical meetSemilatticeType\n> instance of T^d should work as the canonical join semilattice of T where\n> ^d stands for dual. But, actually, I see that making this design choice\n> work requires some more work, and I do not fully understand how to do that\n> yet.\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/math-comp/math-comp/pull/464#issuecomment-619604982>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AABTNTU5JCSNCKHDD5CTDMDROR7G3ANCNFSM4LA5HSLQ>\n> .\n>\n"
      },
      {
        "author": "pi8027",
        "date": "2020-04-28T08:59:10Z",
        "comment": "The first issue is that the class record of `latticeType` should include two semilattice mixins to implement proper inheritance from join semilattices to lattices, but now actually it does not. In packed classes, inheritance should be implemented by inclusion rather than construction. See our IJCAR '20 papers for details:\r\n- [Competing inheritance paths in dependent type theory: a case study in functional analysis](https://hal.inria.fr/hal-02463336),\r\n- [Validating Mathematical Structures](https://arxiv.org/abs/2002.00620).\r\n\r\nThe second issue is that I do not see how to implement structure inference of join semilattices and lattices without having the actual interface for join semilattices. We probably should have the join semilattice structure to implement complete duality between meet/join semilattices, but it is still unclear to me.\r\n\r\nAlso, since this PR now features several new improvements from immediately useful ones to experimental and incomplete ones, I would rather split this PR into some fragments and merge a preliminary part before working on the complete implementation of duality."
      },
      {
        "author": "pi8027",
        "date": "2020-05-01T09:37:05Z",
        "comment": "Thinking about definitionally involutive duals, I also believe that `[latticeType of (A *p B)^d]` and `[latticeType of A^d *p B^d]` should be convertible."
      },
      {
        "author": "CohenCyril",
        "date": "2020-05-01T09:44:27Z",
        "comment": "Suggestion: (follow-up of comments wrongly placed in #490)\r\n```coq\r\nFrom Coq Require Import ssreflect ssrfun ssrbool.\r\n\r\nInductive display := Simple of unit | Dual of display.\r\nNotation dual_display d := (if d is Dual d then d else Dual d).\r\n\r\nRecord pt (d : display) := PT {sort :> Type; elt1 : sort; elt2 : sort}.\r\nArguments elt1 {d} : simpl never.\r\nArguments elt2 {d} : simpl never.\r\n\r\nNotation tt_display := (Simple tt).\r\nNotation default_display := (Simple _).\r\nFact prod_key : unit. Proof. exact: tt. Qed.\r\nNotation prod_display := (Simple prod_key).\r\n\r\nDefinition dual {d} (T : pt d) : pt (dual_display d) := @PT _ T (elt2 T) (elt1 T).\r\nDefinition dprod {d1 d2} (T1 : pt d1) (T2 : pt d2) : pt prod_display :=\r\n @PT _ (T1 * T2) (elt1 T1, elt1 T2) (elt2 T1, elt2 T2).\r\n\r\nDefinition pt_bool : pt tt_display := @PT _ bool false true.\r\nNotation simple_elt1 := (@elt1 default_display). \r\nNotation dual_elt1 := (@elt1 (Dual default_display)). \r\nNotation simple_elt2 := (@elt2 default_display). \r\nNotation dual_elt2 := (@elt2 (Dual default_display)). \r\n\r\nGoal dual (dual (pt_bool)) = pt_bool.\r\nreflexivity.\r\nQed.\r\n\r\nGoal elt1 (dual (dual pt_bool)) = elt2 (dual pt_bool).\r\nreflexivity.\r\nQed.\r\n\r\nGoal elt1 (dprod pt_bool (dual pt_bool)) = elt2 (dual (dprod (dual pt_bool) pt_bool)).\r\nFail reflexivity. (* it is not supposed to work at all *)\r\nAbort.\r\n```"
      },
      {
        "author": "pi8027",
        "date": "2020-05-01T09:51:17Z",
        "comment": "`dual (dual T) = T` holds for some particular instances, but in general, it does not.\r\n```coq\r\nGoal forall d (T : pt d), dual (dual T) = T.\r\nreflexivity.\r\nQed.\r\n```"
      },
      {
        "author": "CohenCyril",
        "date": "2020-05-01T10:03:18Z",
        "comment": "```coq\r\nFrom Coq Require Import ssreflect ssrfun ssrbool.\r\n\r\nSet Primitive Projections.\r\nRecord display := Display { is_dual : bool; disp : unit }.\r\nUnset Primitive Projections.\r\nArguments is_dual _ /.\r\n\r\nNotation dual_display d := (let: Display n u := d in @Display (~~ n) u).\r\n\r\nRecord pt (d : display) := PT {sort :> Type; elt1 : sort; elt2 : sort}.\r\nArguments elt1 {d} : simpl never.\r\nArguments elt2 {d} : simpl never.\r\n\r\nNotation tt_display := (Display false tt).\r\n\r\nFact prod_key : unit. Proof. exact: tt. Qed.\r\nNotation prod_display := (Display false prod_key).\r\n\r\nDefinition dual {d} (T : pt d) : pt (dual_display d) := @PT _ T (elt2 T) (elt1 T).\r\nDefinition dprod {d1 d2} (T1 : pt d1) (T2 : pt d2) : pt prod_display :=\r\n @PT _ (T1 * T2) (elt1 T1, elt1 T2) (elt2 T1, elt2 T2).\r\n\r\nDefinition pt_bool : pt tt_display := @PT _ bool false true.\r\nNotation simple_elt1 := (@elt1 (Display false _)). \r\nNotation dual_elt1 := (@elt1 (Display true _)). \r\nNotation simple_elt2 := (@elt2 (Display false _)). \r\nNotation dual_elt2 := (@elt2 (Display true _)). \r\n\r\nGoal dual (dual (pt_bool)) = pt_bool.\r\nreflexivity.\r\nQed.\r\n\r\nGoal elt1 (pt_bool) = elt2 (dual pt_bool).\r\nsimpl.\r\nreflexivity.\r\nQed.\r\n\r\nGoal elt1 (dual (dual pt_bool)) = elt2 (dual pt_bool).\r\nsimpl.\r\nreflexivity.\r\nQed.\r\n\r\nGoal elt1 (dprod pt_bool (dual pt_bool)) = elt2 (dual (dprod (dual pt_bool) pt_bool)).\r\nsimpl.\r\nFail reflexivity. (* products are not primitive records, so this does not work *)\r\nAbort.\r\n\r\nFail Goal forall d (T : pt d), dual (dual T) = T.\r\n(* Would work with definitional ~~ (~~ b) = b *)\r\n```"
      },
      {
        "author": "CohenCyril",
        "date": "2020-05-01T10:08:34Z",
        "comment": "> `dual (dual T) = T` holds for some particular instances, but in general, it does not.\r\n\r\nThis theorem will hold for every concrete instance."
      },
      {
        "author": "pi8027",
        "date": "2020-10-16T10:50:09Z",
        "comment": "I have attempted to implement a complete duality of structures without having some dual structures, but my conclusion is that it seems impossible. For example, we have `porderType`, `bPorderType`, and `tbPorderType`, then `bPorderType (dual_display disp)` can be seen as `tPorderType disp`, and we can define `1%O` as the dual of `0%O`. When we write `(0 = 1)%O`, we expect a `tbPorderType` to be inferred as the type of `0` and `1`, but it can never happen in this setting. So we have to declare all the dual structures anyway. Does this make sense?"
      },
      {
        "author": "pi8027",
        "date": "2020-10-20T10:04:15Z",
        "comment": "I have added join-semilattice structures and some order structures with a top but without a bottom anyway. I hope this will be helpful to implement the order structures and definitionally involutive duals using Hierarchy Builder even if we will not merge this as it is. It seems that it also simplifies the theory part of order.v by accident."
      },
      {
        "author": "pi8027",
        "date": "2020-10-29T07:02:40Z",
        "comment": "Documentation is not done yet and finmap has to be fixed. Except that, this PR is ready for review. But we have an option not to merge this PR and rather reimplement it using HB."
      },
      {
        "author": "pi8027",
        "date": "2020-11-04T10:59:49Z",
        "comment": "@CohenCyril Would you like to review and merge this PR soon? I'm not requesting to include this in 1.12. But I would like to know whether it is reasonable to rework #281 after merging this, or I should not wait for that."
      },
      {
        "author": "CohenCyril",
        "date": "2020-11-04T15:28:07Z",
        "comment": "> @CohenCyril Would you like to review and merge this PR soon? I'm not requesting to include this in 1.12. But I would like to know whether it is reasonable to rework #281 after merging this, or I should not wait for that.\r\n\r\nDear @pi8027, I am afraid I will not have the time to review this PR this month since it is a pretty big one, and I would need the changelog as a guideline to read the diff... I think we should reschedule it to 1.13..."
      },
      {
        "author": "CohenCyril",
        "date": "2020-11-04T15:30:34Z",
        "comment": "BTW, I came across a problem recently: I could not make `'I_n` a `finOrderType` for any `n` (not manifestly positive), because our phrasing of `finOrderType` inherits structures with bottom and top. I remember making this choice consciously in your office last year, but nowadays I think we should backtrack on that. Are you doing it in this PR?"
      },
      {
        "author": "pi8027",
        "date": "2020-11-04T15:38:52Z",
        "comment": "> Dear @pi8027, I am afraid I will not have the time to review this PR this month since it is a pretty big one, and I would need the changelog as a guideline to read the diff... I think we should reschedule it to 1.13...\r\n\r\n@CohenCyril Sure. So I will finish the documentation work first anyway.\r\n\r\n> BTW, I came across a problem recently: I could not make `'I_n` a `finOrderType` for any `n` (not manifestly positive), because our phrasing of `finOrderType` inherits structures with bottom and top. I remember making this choice consciously in your office last year, but nowadays I think we should backtrack on that. Are you doing it in this PR?\r\n\r\nThis choice has been made because a nonempty finite lattice always has the top and the bottom, but I think what you say makes sense. This PR currently does not do that, but I can do it."
      },
      {
        "author": "pi8027",
        "date": "2020-11-16T04:29:13Z",
        "comment": "> > BTW, I came across a problem recently: I could not make `'I_n` a `finOrderType` for any `n` (not manifestly positive), because our phrasing of `finOrderType` inherits structures with bottom and top. I remember making this choice consciously in your office last year, but nowadays I think we should backtrack on that. Are you doing it in this PR?\r\n> \r\n> This choice has been made because a nonempty finite lattice always has the top and the bottom, but I think what you say makes sense. This PR currently does not do that, but I can do it.\r\n\r\nDone. The diagram of the new hierarchy is attached. I still have to do the documentation work.\r\n\r\n![hierarchy_ssreflect](https://user-images.githubusercontent.com/111003/99212893-94bd8180-280f-11eb-84c6-7703f3828156.png)\r\n"
      },
      {
        "author": "pi8027",
        "date": "2020-12-07T00:57:58Z",
        "comment": "I finished documentation and this PR is ready for review. But, we probably have to separate the finite counterparts off as `finorder.v` since `order.v` became too large (approx. 12k lines)."
      },
      {
        "author": "pi8027",
        "date": "2021-01-15T16:05:06Z",
        "comment": "Since `(meet|join)Semilattice` is too long, I'm thinking about replacing them with `(meet|join)Order`, e.g., `meetOrderType`. Any opinion?"
      }
    ],
    "review_discussion": [
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/order.v",
        "date": "2021-01-10T06:23:58Z",
        "comment": "They are redundant and can be replaced with:\r\n```coq\r\n  le_anti : forall x y, le x y -> le y x -> x = y;\r\n```"
      }
    ],
    "tags": [
      {
        "tag": "kind: enhancement",
        "description": "Issue or PR about addition of features."
      }
    ],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "b26abe87b46af2417f0fb798e77853951dc571a3",
        "message": "Fix `\\meet^p` and `\\join^p` notations and the scope of n.-tuplelexi notation",
        "date": "2023-02-24T23:10:49Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "804f155e0fee7d3b6448198eb902f434f32a08e6",
        "message": "Redefine the lattice structure with fewer axioms\n\nthat also eliminate the interaction between meet and join, so that it can also\nbe redefined as the join of meet-semilattice and join-semilattice structures\nwithout extra mixin.",
        "date": "2023-02-24T23:10:49Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "aed9dc0e0e5bc86df3b47e0cf5afb280f211fca4",
        "message": "Add some order structures and implement definitionally involutive duals\n\n- Add meet and join semilattice structures\n- Add some order structures with a top but without a bottom\n- T^d^d is definitionally equal to T where T is an ordered type instance",
        "date": "2023-02-24T23:10:49Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "fd8732c50e835c544443915ce76f05d1b255a86c",
        "message": "Add some more order structures\n\n- The following order structures have been added:\n  + `(b|t|tb)OrderType`,\n  + `fin(B)MeetSemilatticeType`, and\n  + `fin(T)JoinSemilatticeType`.\n- Since a finite lattice has lower and upper bounds if it is nonempty, the\n  finite lattice structures `finLatticeType`, `finDistrLatticeType`,\n  `finOrderType`, and `finCDistrLatticeType` were equipped with bounds before\n  this change. They have been renamed to `finTBLatticeType`,\n  `finTBDistrLatticeType`, `finTBOrderType`, and `finCTBDistrLatticeType` and\n  the original ones except for `finCDistrLatticeType` have been redefined as\n  possibly empty ones, which allows us, e.g., to make a finite ordinal `'I_n`\n  a `finOrderType` for any `n`.",
        "date": "2023-02-24T23:10:49Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "d37495aa8ebe9e0d594046e90c4aa256f8b813b8",
        "message": "Documentation",
        "date": "2023-02-24T23:10:49Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "93250a5f9056fda5f16bf2035da42598e2dbfae9",
        "message": "Refactor the order theory\n\n- Refactor the order theory,\n- Redefine `porderType` with fewer axioms, and\n- Rename `(meet|join)SemilatticeMixin` to `(meet|join)Mixin`.",
        "date": "2023-02-24T23:10:49Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "c315edd8fe3abbfdfe8a915ff95edda967f4e6a6",
        "message": "Add CI overlays",
        "date": "2023-02-24T23:10:49Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 463,
    "diff_summary": [
      {
        "file": "etc/utils/hierarchy.ml",
        "status": "M",
        "additions": 23,
        "deletions": 10
      }
    ],
    "state": "merged",
    "open_date": "2020-03-01T21:40:42Z",
    "update_date": "2020-03-19T08:35:11Z",
    "discussion": [
      {
        "author": "pi8027",
        "date": "2020-03-18T08:33:49Z",
        "comment": "@gares Hello. Could you assign yourself to this PR?"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "07c4a344fb6db89acb33f4d38a11bdd4aed047da",
        "message": "Fix hierarchy.ml to compute the transitive closure of a hierarchy",
        "date": "2020-03-15T05:10:22Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 462,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/order.v",
        "status": "M",
        "additions": 79,
        "deletions": 78
      }
    ],
    "state": "closed",
    "open_date": "2020-03-01T17:35:18Z",
    "update_date": "2020-04-22T08:39:32Z",
    "discussion": [
      {
        "author": "ggonthier",
        "date": "2020-03-12T11:09:31Z",
        "comment": "  This PR is meant to demonstrate that `Canonical Structures` can work with primitive records.\r\nThe demonstration is only partial because the `#[canonical(false)]` pragmas are syntax errors in all released versions of Coq - this could be easily remedied as these are non-essential optimisation of the `Canonical Projections` table. Also, this PR does not implement the intended application of the switch to primitive records - convertibility between order structures and their bidual.\r\n  Looking deeper into the matter, it seems that this works because the current version of Coq only partially implements eta-conversion for primitive records; it may not be prudent to sort relying on this.\r\n  Specifically, Coq implements eta-convertibility `p ~ (fst p, snd p)`, eta-expansion during unification (reduce `p ~ (a, b)` to `fst p ~ a`, `snd p ~ b`) but not pattern unification for records\r\n(solve `fst ?p ~ a` with `?p := (a, ?s)`). It's the latter that is at odds with `Canonical Structure` inference, since it is tantamount to _always_ resolving structures, as one would by declaring a default instance (as with, e.g., `Canonical Pack.`). This can result in unnatural behaviour and poor diagnostics for erroneous inputs, which are not tested by recompiling (error-free) libraries. It would also break more elaborate uses of `Canonical Structures` that rely on the failure of structure inference to force the expansion of tags or insert coercions (e.g., for `predType`).\r\n  Perhaps we can get some assurance that Coq will never implement unification patterns for records, but this seems unlikely. For one thing, this makes unification sensitive to eta-expansion: `?p ~ (0, 1)` succeeds, but `(fst ?p, snd ?p) ~ (0, 1)` reduces to `fst ?p ~ 0`, `snd ?p ~ 1`, which fail...\r\n  There are also differences in reduction strategy between classical and primitive records, namely that explicit `match` on records are iota-reduces eagerly, whereas primitive projections are not. The `xclass` idiom in packed classes relies on this to mitigate the exponential complexity of term comparison (the details are in the extensive log entry of the commit that introduces that idiom, but that's in the `CoqFinitGroup` svn repository, which has disappeared from `forge` - hopefully @gares still has a copy). The good news is that that particular idiom may no longer be needed if `class_of` objects are primitive records, because the type parameter of `class_of`, which is the cause of the divergent complexity, would be implicit.\r\n  Finally, the intended application does not seem all that compelling. In any concrete use of the order interface, the order structures will be explicit records that will be convertible to their bidual in all cases. This, the change would only improve facilitate writing library code for abstract orders. Further, there is a workaround even for this case, namely using primitive records for classes and some mixins, and parametrising the development that needs bidual convertibility on a manifest `Pack` of `Type` and `class_of` parameters, e.g.,\r\n  ``Context typeT classT (T := @Pack typeT classT).``\r\n  To summarize, perhaps the best course of action would be to switch to primitive records for `class_of` records only, _if_ this removes the need for `xclass`, but keep classical records for `Structures`, and use the idiom above if eta convertibility is needed.\r\n"
      },
      {
        "author": "pi8027",
        "date": "2020-04-22T08:39:32Z",
        "comment": "@ggonthier Thank you for the feedback. I finished what I planned here (`L^d^d = L`) in #464 by following your suggestions. I think that your comments are useful alongside my diff to understand the inference mechanism, in particular, the `xclass` idiom. So I close this PR and keep it for a record."
      },
      {
        "author": "CohenCyril",
        "date": "2020-09-09T11:24:24Z",
        "comment": "BTW, here is the designated commit log message:\r\n\r\n> Author: gonthier <gonthier@305884b8-be16-0410-aa53-a3be2363cef1>  2012-03-19 22:21:11\r\n>\r\n>     This revision was meant to be a local improvement to falgbra <-> galois, but\r\n>     it uncovered a major inefficiency of the processing of packed class declarations\r\n>     by the Coq kernel, which could only be mitigated by adjusting the packed class\r\n>     idiom.\r\n>       The problem arises from the interference of several questionable design\r\n>     choices in the Coq kernel, in particular the blind maximal sharing of\r\n>     \"reductions\" (which turn out to be full expansions here). The diagnosis was\r\n>     prompted by the anomalous behaviour of line 302 of galois.v, which took over 3\r\n>     minutes of user time to execute. This line attempts to use an eqP view on an\r\n>     assumption of the form root p x. This is convertible to p.[x] == 0, but the\r\n>     unfolding heuristic of Coq causes it to unfold the definition of (_ == _) in\r\n>     the eqP statement instead, only turning to Hy once it has reached a head normal\r\n>     form for the (_ == _), and thus having to unfold root p x to head normal form as\r\n>     well. Though unnecessary, by itself this should not be a problem, even though we\r\n>     are 9 levels deep in the hierarchy (eqType >-> fieldExtType). Things break down\r\n>     because the kernel cannot manage to compare the structurally identical terms\r\n>     that result from this expansion. These have the form\r\n>        let: Equality.Mixin op _ :=\r\n>          let: Choice.Class bc _ :=\r\n>            ....\r\n>            let: FieldExt.Class feb _ _ _ :=\r\n>              let: FieldExt.Pack _ fec _ := L return FieldExt.class_of L in fec\r\n>            in feb\r\n>            ...\r\n>          in bc\r\n>        in op.\r\n>     so the problem is not immediately obvious... until one recalls that\r\n>     non-dependent matches also carry explicit return type annotations. Thus the\r\n>     term is in fact\r\n>        let: Equality.Mixin op _  :=\r\n>          let: Choice.Class bc _\r\n>            ....\r\n>            let: FieldExt.Class feb _ _ _ :=\r\n>              let: FieldExt.Pack _ fec _ := L return FieldExt.class_of L in fec\r\n>            return Falgebra.class_of F0 (Phant F0) (FieldExt.sort L)\r\n>            in feb\r\n>            ...\r\n>          return Equality.class_of (Equality.sort Feq)) :=\r\n>          in bc\r\n>          return rel (Equality.sort Feq)\r\n>        in op.\r\n>     where Feq is the eqType structure that was passed explicitly to eq_op.\r\n>     Feq is the result of several type inference refinements, so is is not\r\n>     obtained directly as FieldExt.eqType F0 L, but rather as a composite\r\n>        Zmodule.eqType (Ring.zmodType\r\n>          (Lalgebra.ringType (Falgebra.vect_lalgType (FieldExt.FalgType L))))\r\n>     that evaluates ot the same normal form as FieldExt.eqType F0 L.\r\n>       If the comparison was based on this (slightly complicated) version of Feq\r\n>     there would be no problem. However, to arrive at the chain of lets above the\r\n>     Coq kernel has had to expand the definition of Feq -- and it then proceeds to\r\n>     share this expansion maximally across the entire expression. Feq is thus\r\n>     now a fairly large graph, where each of  Zmodule.eqType, Ring.zmodType, etc\r\n>     have been expanded, and the \"base\" coercions have been expanded: the class\r\n>     components are subterms of the top \"let:\" chain, e.g., the class component\r\n>     of Feq is the let: Choice.class ... subterm. As the kernel \"optimizes\" the\r\n>     comparison of Equality.sort (Equality.Pack <monster record>)\r\n>                    =  Equality.sort (Equality.Pack <monster record>)\r\n>     by not evaluating the projection and comparing all the <monster record>\r\n>     rather that just the sort field, does so by expanding the (shared) term graph\r\n>     into an (unshared) tree, and these type constraints occur everywhere inside the\r\n>     let: chain (including in the invisible lambda binders of the predicates and\r\n>     branch subterms), the diverging behavior is unsurprising.\r\n>       Note that it is the kernel that diverges here: evarconv unification has\r\n>     absolutely no problem here, because it uses a different heuristic which does\r\n>     not allow sharing to interfere with comparison; indeed, it backtracks over\r\n>     the reduction of the argument of a blocked match, effectively allowing the\r\n>     expansion to \"align\" on the topmost match, without having to expose the others.\r\n>       Our partial workaround to this conundrum is to replace, as much as possible,\r\n>     unexpanded projections like Equality.sort with exposed matches. This causes the\r\n>     kernel to evaluate the projection when it propagates an expanded value for the\r\n>     record, rather than going into the op-described tailspin. The workaround is\r\n>     only partial because some explicit constants must remain to let unification find\r\n>     canonical instances, e.g., the Choice.sort field of Choice.eqType, though\r\n>     fortunately (in this case) evaluation makes most of these vanish. Alas, the\r\n>     largest instance (the Equality.sort _)cannot be made to simplify in this way:\r\n>     it is needed for Canonical Structure unification of, say (x \\in pred1 y) with\r\n>     x and y in a finType, with ?x == ?y. The problem here is that evarconv unifies\r\n>     left to right in the Coq v5-7 term order, where the predicate came before the\r\n>     match (the called \"case\") statement, so it has to infer the eqType for ?x and ?y\r\n>     on the basis of the let: return type.\r\n>       In practice, this means that the packed class idiom gets two extra lines\r\n>      Let xT := let: Pack T _ _ := cT in T.\r\n>      Notation xclass := (class : class_of xT).\r\n>     and that the various canonical \"inheritance\" instances should now use\r\n>     an explicit cT value for the sort, xclass for the class, and xT for the tag,\r\n>     e.g.,\r\n>       Definition zmodType := @Zmodule.Pack cT xclass xT.\r\n>     The fix seems reasonably effective in spite of these shrotcomings: time for\r\n>     line 302 in galois drops from 167s to 1s user time, which is more acceptable\r\n>     (but still 2 to 3 orders of magnitude too slow!).\r\n>     \r\n>     Other changes in this revision:\r\n>       - \"Lagrange\" spelling corrected\r\n>       - the Falgebra interface now contains the UnitRing interface (as an Falgebra\r\n>         always has a unitRingType structure -- there is a lemma proving this).\r\n>       - based fieldExtType on Falgebra rather than Field, as this allows all mixins\r\n>         to be in Prop.\r\n>       - added construction of simple field extension from an irreducible polynomial,\r\n>         used it to remove the separability condition in the proof that splitting\r\n>         fields are normal.\r\n>     \r\n>     \r\n>     \r\n>     git-svn-id: svn+ssh://scm.gforge.inria.fr/svn/coqfinitgroup/trunk@3751 305884b8-be16-0410-aa53-a3be2363cef1"
      },
      {
        "author": "CohenCyril",
        "date": "2020-09-09T11:37:14Z",
        "comment": "https://gist.github.com/CohenCyril/c2c7d87c9677ea757a5b67d56a985fb8#file-this-revision-was-meant-to-be-a-local-improvement-to.patch"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "d4c8b95689da23a8014658604325c911ab9430f3",
        "message": "Using primitive records with packed classes in order.v",
        "date": "2020-03-01T17:31:01Z"
      }
    ]
  },
  {
    "author": "gares",
    "number": 461,
    "diff_summary": [
      {
        "file": "mathcomp/Make",
        "status": "A",
        "additions": 11988,
        "deletions": 0
      },
      {
        "file": "mathcomp/ssreflect/Make",
        "status": "A",
        "additions": 11988,
        "deletions": 0
      },
      {
        "file": "mathcomp/ssreflect/mini_div.v",
        "status": "A",
        "additions": 11988,
        "deletions": 0
      },
      {
        "file": "mathcomp/ssreflect/mini_eqtype.v",
        "status": "A",
        "additions": 11988,
        "deletions": 0
      },
      {
        "file": "mathcomp/ssreflect/mini_path.v",
        "status": "A",
        "additions": 11988,
        "deletions": 0
      },
      {
        "file": "mathcomp/ssreflect/mini_prime.v",
        "status": "A",
        "additions": 11988,
        "deletions": 0
      },
      {
        "file": "mathcomp/ssreflect/mini_seq.v",
        "status": "A",
        "additions": 11988,
        "deletions": 0
      },
      {
        "file": "mathcomp/ssreflect/mini_ssrbool.v",
        "status": "A",
        "additions": 11988,
        "deletions": 0
      },
      {
        "file": "mathcomp/ssreflect/mini_ssreflect.v",
        "status": "A",
        "additions": 11988,
        "deletions": 0
      },
      {
        "file": "mathcomp/ssreflect/mini_ssrfun.v",
        "status": "A",
        "additions": 11988,
        "deletions": 0
      },
      {
        "file": "mathcomp/ssreflect/mini_ssrnat.v",
        "status": "A",
        "additions": 11988,
        "deletions": 0
      },
      {
        "file": "mathcomp/ssreflect/mini_sum.v",
        "status": "A",
        "additions": 11988,
        "deletions": 0
      }
    ],
    "state": "open",
    "open_date": "2020-02-21T17:00:38Z",
    "update_date": "2020-02-21T17:01:17Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "gares",
        "committer": "gares",
        "hash": "8d75e5000cd9f908ba155ec317a1481b6ec84cac",
        "message": "add mini bool and nat",
        "date": "2020-02-21T16:51:27Z"
      },
      {
        "author": "gares",
        "committer": "gares",
        "hash": "dd11fa9cdf601afd7df95e246847f0d2471a95c8",
        "message": "remove dep on binnum",
        "date": "2020-02-21T16:51:27Z"
      },
      {
        "author": "gares",
        "committer": "gares",
        "hash": "832a6698e0e5e265928e9072e6493e16b73e1e78",
        "message": "more mini",
        "date": "2020-02-21T16:51:27Z"
      },
      {
        "author": "gares",
        "committer": "gares",
        "hash": "e9135da73e6eadb129662aaf58ad1a3293d256f5",
        "message": "up to seq",
        "date": "2020-02-21T16:51:27Z"
      },
      {
        "author": "gares",
        "committer": "gares",
        "hash": "2b23dfd3f3a07debd92de3f3c0a388335730071c",
        "message": "attempt",
        "date": "2020-02-21T16:51:27Z"
      },
      {
        "author": "gares",
        "committer": "gares",
        "hash": "979d7b6e2fda81bdd2587f10fca7a5255bc7f89b",
        "message": "ok, putting only parsing in reserve notation does not have the desired effect",
        "date": "2020-02-21T16:51:27Z"
      },
      {
        "author": "CohenCyril",
        "committer": "gares",
        "hash": "457fab4cd985c112b0033f471a12fe17143748f9",
        "message": "fixes",
        "date": "2020-02-21T16:51:27Z"
      },
      {
        "author": "gares",
        "committer": "gares",
        "hash": "c8276828af24334d681dabd98141624487a25ee7",
        "message": "kill id",
        "date": "2020-02-21T16:51:27Z"
      },
      {
        "author": "CohenCyril",
        "committer": "gares",
        "hash": "2cbdb591309d83c7a7c4ea1899210fc9965b48e5",
        "message": "mini_div based on mini_*",
        "date": "2020-02-21T16:51:27Z"
      },
      {
        "author": "CohenCyril",
        "committer": "gares",
        "hash": "5c577d951487973054bad640e6efc7d0e0f76adc",
        "message": "adding to Make(s)",
        "date": "2020-02-21T16:51:27Z"
      },
      {
        "author": "CohenCyril",
        "committer": "gares",
        "hash": "4e95e19aeaee2333457805d85373982b053b2cc6",
        "message": "only parsing half and double",
        "date": "2020-02-21T16:51:27Z"
      },
      {
        "author": "gares",
        "committer": "gares",
        "hash": "88f8478fbaec59adb11c7290b7564511b8fd6edd",
        "message": "disable map notations",
        "date": "2020-02-21T16:51:27Z"
      },
      {
        "author": "gares",
        "committer": "gares",
        "hash": "c868eee4e917db9c85f27a9facfb722c930c19f8",
        "message": "no more <",
        "date": "2020-02-21T16:51:27Z"
      },
      {
        "author": "gares",
        "committer": "gares",
        "hash": "8b25b4df6fb5a7a62e4edbfacddb01655805e18c",
        "message": "lets try to help Search",
        "date": "2020-02-21T16:51:27Z"
      },
      {
        "author": "gares",
        "committer": "gares",
        "hash": "1501c62c22ca9bf4b6f08f8d936962c2bb914efe",
        "message": "attempt at building a safe space MC for \"Search .... in MC\"",
        "date": "2020-02-21T16:51:27Z"
      },
      {
        "author": "gares",
        "committer": "gares",
        "hash": "8ab011da897abd01c353e3a000b88603fd7a6f8b",
        "message": "all < removed",
        "date": "2020-02-21T16:51:27Z"
      },
      {
        "author": "gares",
        "committer": "gares",
        "hash": "fd3535abe5a579f90ca099b8eae8c88f13bfbb73",
        "message": "let's also purge a <= b <= c",
        "date": "2020-02-21T16:51:27Z"
      },
      {
        "author": "CohenCyril",
        "committer": "gares",
        "hash": "bd525302b88dedf9a7dbfc4d44e9ed34aec30ab1",
        "message": "stuff",
        "date": "2020-02-21T16:51:27Z"
      },
      {
        "author": "CohenCyril",
        "committer": "gares",
        "hash": "39b3a6cdd4cb52b77e4102462227a55f666f5a4e",
        "message": "wip",
        "date": "2020-02-21T16:51:27Z"
      },
      {
        "author": "CohenCyril",
        "committer": "gares",
        "hash": "0d2666a5487ee9838783d02959110dc72e90ecc2",
        "message": "mini_prime does not rely on bigop!\n\nimportant product are just fold",
        "date": "2020-02-21T16:51:27Z"
      },
      {
        "author": "CohenCyril",
        "committer": "gares",
        "hash": "3e4216419e90ceb72e4dca5d2b5e9ce55f50ca12",
        "message": "adding rudimentary mini_sum",
        "date": "2020-02-21T16:51:27Z"
      },
      {
        "author": "CohenCyril",
        "committer": "gares",
        "hash": "a06618d3d2f37306b93e05053286ab8bc0f7195d",
        "message": "added `prove_reflect`",
        "date": "2020-02-21T16:51:27Z"
      },
      {
        "author": "gares",
        "committer": "gares",
        "hash": "1bbd38ddb251bbb28435ad0529fd9b87f166bae4",
        "message": "including mini_(path|sum|prime) in mini_ssreflect\n\nCo-Authored-By: Cyril Cohen <cyril.cohen@inria.fr>",
        "date": "2020-02-21T16:51:27Z"
      }
    ]
  },
  {
    "author": "affeldt-aist",
    "number": 460,
    "diff_summary": [
      {
        "file": "mathcomp/algebra/ssrnum.v",
        "status": "M",
        "additions": 1,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2020-02-17T22:28:02Z",
    "update_date": "2020-03-15T23:08:41Z",
    "discussion": [
      {
        "author": "pi8027",
        "date": "2020-03-15T05:14:45Z",
        "comment": "@affeldt-aist Could you rebase to fix CI failures?"
      },
      {
        "author": "affeldt-aist",
        "date": "2020-03-15T08:59:37Z",
        "comment": "> Could you rebase to fix CI failures?\r\n\r\nDone.\r\n"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "56af8ab9d2890182ba67bb33a9561633b134b50f",
        "message": "just noticed a tentative use of a not yet existing lemma",
        "date": "2020-03-15T07:35:02Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 459,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 35,
        "deletions": 15
      },
      {
        "file": "mathcomp/ssreflect/path.v",
        "status": "M",
        "additions": 35,
        "deletions": 15
      }
    ],
    "state": "merged",
    "open_date": "2020-01-31T10:05:37Z",
    "update_date": "2020-03-18T11:39:53Z",
    "discussion": [],
    "review_discussion": [
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2020-03-16T09:50:03Z",
        "comment": "```suggestion\r\nProof. by elim: s x => //= y s <-. Qed.\r\n```"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2020-03-16T10:04:37Z",
        "comment": "I prefer to place this before `Variant split` or after `Lemma splitP` just not to separate them. Also, `eq_path_in` can be proved as a corollary of `sub_path_in`. It is maybe better to reorder lemmas and simplify proofs."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2020-03-16T10:22:38Z",
        "comment": "Parentheses on the RHS can be removed."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2020-03-16T17:21:07Z",
        "comment": "thanks, done."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2020-03-16T17:21:16Z",
        "comment": "thanks, done."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2020-03-16T17:21:24Z",
        "comment": "thanks, done."
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "d110ceca5f40a4aed136956ab9f2d2ac215d0c88",
        "message": "Link between subrelations and path/sorted",
        "date": "2020-03-16T17:01:10Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "9ff5576733fbb34f07142e17fa6835af1ab708de",
        "message": "Update mathcomp/ssreflect/path.v\n\nCo-Authored-By: Kazuhiko Sakaguchi <pi8027@gmail.com>",
        "date": "2020-03-16T17:17:26Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 458,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 1422,
        "deletions": 417
      },
      {
        "file": "mathcomp/algebra/interval.v",
        "status": "M",
        "additions": 1422,
        "deletions": 417
      },
      {
        "file": "mathcomp/algebra/ssrnum.v",
        "status": "M",
        "additions": 1422,
        "deletions": 417
      },
      {
        "file": "mathcomp/ssreflect/order.v",
        "status": "M",
        "additions": 1422,
        "deletions": 417
      }
    ],
    "state": "merged",
    "open_date": "2020-01-30T10:29:13Z",
    "update_date": "2020-09-28T14:11:49Z",
    "discussion": [
      {
        "author": "pi8027",
        "date": "2020-08-28T08:48:14Z",
        "comment": "@CohenCyril This PR is ready for review."
      },
      {
        "author": "CohenCyril",
        "date": "2020-08-28T14:02:19Z",
        "comment": "Looks great! I will try to review it next week!"
      },
      {
        "author": "pi8027",
        "date": "2020-09-23T07:03:13Z",
        "comment": "I removed `bound_ltLb`, `bound_ltbR`, `ltr_in_itv`, `ler_in_itv`, and `itv_gte` for now, added `in_itv`, and confirmed that it is not so hard to port real-closed (see math-comp/real-closed#28). (I prefer to discuss addition of more lemmas separately if needed.)\r\n\r\nI will update the compatibility layer and the CHANGELOG entries later today."
      },
      {
        "author": "pi8027",
        "date": "2020-09-25T03:05:58Z",
        "comment": "Done."
      },
      {
        "author": "pi8027",
        "date": "2020-09-26T09:05:27Z",
        "comment": "I fixed a few glitches in CHANGELOG and header documentation. It may worth to double-check."
      },
      {
        "author": "CohenCyril",
        "date": "2020-09-28T08:19:17Z",
        "comment": "I think we are close to a merge! Can you rebase?"
      },
      {
        "author": "pi8027",
        "date": "2020-09-28T08:22:22Z",
        "comment": "> I think we are close to a merge! Can you rebase?\r\n\r\nDone."
      }
    ],
    "review_discussion": [
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/interval.v",
        "date": "2020-08-29T10:28:36Z",
        "comment": "I think this result can be generalized by introducing the notion of the dimension of a lattice. I would say a lattice `L` is n-dimensional if \"∀x_0 ... x_n ∈ L. ∃i ∈ {0, ..., n}. ⋀_(0 ≦ j ≦ n) x_j = ⋀_(0 ≦ j ≦ n ∧ j ≠ i) x_j\" and its dual statement for the join hold. As a result, a totally ordered set is a 1-dimensional lattice, the product of n- and m-dimensional lattices forms an (n + m)-dimensional lattice, and the above lemma follows from these facts. The problem is that this wording is confusing with lattice points."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/interval.v",
        "date": "2020-09-03T11:39:35Z",
        "comment": "I guess this can be left for later."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/interval.v",
        "date": "2020-09-03T11:41:51Z",
        "comment": "I agree. Let me open another issue after merging this PR."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/interval.v",
        "date": "2020-09-03T11:51:37Z",
        "comment": "By doing this you make `le_boundl` the canonical relation between bounds (whereas `le_boundr` is \"the other one\").\r\n\r\nI think it is desirable that there is a canonical one, but I think that as such we are in big trouble.\r\n\r\nMoreover, after doing some filters in `analysis`, and sign tables in `real-closed`, I have come to think that it might be desirable to switch the `BClose_if` representation to a `BLeft_if` (with two infinities `-oo = BLInfty_if false` and `+oo = BLInfty_if true`) representation, so as to deduplicate comparison, join, etc ...\r\n\r\n```coq\r\nDefinition pred_of_itv i : pred T :=\r\n  [pred x | let: Interval l u := i in\r\n      match l with\r\n        | BLeft_if b lb => lb < x ?<= if b\r\n        | BLInfty_if b => b\r\n      end &&\r\n      match u with\r\n        | BLeft_if b ub => x < ub ?<= if ~~ b\r\n        | BLInfty_if b => ~~ b\r\n      end].\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/interval.v",
        "date": "2020-09-03T11:55:22Z",
        "comment": "It could even become \r\n```coq\r\nDefinition pred_of_itv i : pred T :=\r\n  [pred x | let: Interval l u := i in (l <= BLeft_if x false) && (BLeft_if x true <= u)].\r\n```\r\n(where `Inductive bound T := BLeft_if of bool & T | BLInfty_if of bool` is canonically ordered \"from left to right\")"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/interval.v",
        "date": "2020-09-04T08:55:48Z",
        "comment": "I agree with this. It also gives us the canonical `tb(Distr)LatticeType` instance of lattices. Let me do that."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/interval.v",
        "date": "2020-09-06T04:12:37Z",
        "comment": "I think it is better to redefine `pred_of_itv` as follows:\r\n```coq\r\nDefinition pred_of_itv i : pred T := [pred x | `[x, x] <= i].\r\n```"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/interval.v",
        "date": "2020-09-11T22:23:25Z",
        "comment": "Done."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/interval.v",
        "date": "2020-09-17T12:48:57Z",
        "comment": "-> `bound_lexx` ?"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/interval.v",
        "date": "2020-09-17T12:50:55Z",
        "comment": "move to `ssrnum.v` ?"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/interval.v",
        "date": "2020-09-17T12:51:23Z",
        "comment": "```suggestion\r\n  BSide of bool & T | BInfty of bool.\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/interval.v",
        "date": "2020-09-17T12:56:24Z",
        "comment": "In my previous review the choice of \"left if\" was intentional: it respects the convention of signs i.e. negative = true because `(-1) ^+ b` is negative iff `b` is true. That's why I'd pick `BLeft = BSide true` and `'-oo' = BInfty true`.\r\nWas there a clear advantage to use the opposite convention?"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/interval.v",
        "date": "2020-09-17T13:00:20Z",
        "comment": "```suggestion\r\nby [apply/lteif_imply: (lteif_trans ha ha'); case: b1 b2 ha ha' => [][] |\r\n    apply/lteif_imply: (lteif_trans hb' hb); case: b1' b2' hb hb' => [][]].\r\n```\r\n?"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/interval.v",
        "date": "2020-09-17T13:06:31Z",
        "comment": "Actually, I'm not sure what is the best \"default rule\" to write here.\r\nMaybe for the first one it is `true = true` and the second one `forall b, keyed b = false`? (since `x \\in Interval +oo y = false` anyway)."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/interval.v",
        "date": "2020-09-17T13:11:53Z",
        "comment": "I guess a generalization to `itv_gte` could be added, e.g. perhaps\r\n```coq\r\nLemma itv_ge b1 b2 : ~~ (b1 < b2) -> Interval b1 b2 =i pred0.\r\n```\r\n(if I got it right).\r\nThis looks like a consequence of `lt_in_itv : x \\in Interval b1 b2 -> b1 < b2`"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/interval.v",
        "date": "2020-09-17T13:15:39Z",
        "comment": "I guess top and bottom should be denoted to `+oo%bound` and `-oo%bound` in this display. "
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/interval.v",
        "date": "2020-09-17T13:19:40Z",
        "comment": "```suggestion\r\n  by [|apply: ltW | move: (lteif_trans ha hb) => //=; exact: ltW].\r\n```\r\nshould work"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/interval.v",
        "date": "2020-09-17T13:21:26Z",
        "comment": "Maybe add the general version `lt_in_itv : x \\in Interval b1 b2 -> b1 < b2` too."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/interval.v",
        "date": "2020-09-17T13:34:39Z",
        "comment": "Splitting lemmas could now take a bound as argument instead of separate arguments of type `T` and `bool`. Would it more be convenient?\r\n```suggestion\r\nLemma itv_splitU c a b : a <= c <= b ->\r\n  forall y, y \\in Interval a b = (y \\in Interval a c) || (y \\in Interval c b).\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/interval.v",
        "date": "2020-09-17T13:53:20Z",
        "comment": "This statement is not informative enough: the trivial case should be isolated from the meaningful cases by assuming the sequence is non empty. The better alternative would be to add a predicate `P` and check that `has P s` when stating the lemma:\r\n```suggestion\r\nLemma itv_total_meets_condE (I : Type) (s : seq I) (P : pred I) (F : I -> interval T) (sP : filter P s):\r\n  has P s -> \\meet_(i <- s | P i) F i \\in [seq F i `&` F j | i <- sP, j <- sP].\r\n```\r\n\r\nwith consequence:\r\n```coq\r\nLemma itv_total_meetsE (I : Type) (s : seq I) (F : I -> interval T) :\r\n  (size s > 0)%N -> \\meet_(i <- s) F i \\in [seq F i `&` F j | i <- s, j <- s].\r\n```\r\n\r\nMaybe a more general formulation would go through a function `itv_meet_seq : forall (I : Type), (I -> interval T) -> seq I -> seq I`, such that `size (itv_meet_seq s) <= 2`, `subseq (itv_meet_seq s) s` and `\\meet_(i <- s) F i = \\meet_(i <- itv_meet_seq s) F i`... I guess it depends on your usecases... can you point them out?"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/interval.v",
        "date": "2020-09-17T13:53:47Z",
        "comment": "move to `ssrnum.v`?"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/interval.v",
        "date": "2020-09-17T13:54:59Z",
        "comment": "Move to the line just after the proof of `itv_boundlr`?"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/interval.v",
        "date": "2020-09-17T21:20:04Z",
        "comment": "Since the canonical ordering of `bool` is `false < true`, I thought \"right if\" is natural. But I have no objection."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/interval.v",
        "date": "2020-09-17T21:26:08Z",
        "comment": "I would rather move them to `order.v`."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/interval.v",
        "date": "2020-09-18T08:21:48Z",
        "comment": "It is doable but we cannot use them for interval bounds of a `porderType`, since we do not have `tbPorderType`."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/interval.v",
        "date": "2020-09-18T15:36:09Z",
        "comment": "I will remove these lemmas for now and put them back as another PR to address your comment. My use cases are quantifier elimination algorithms such as Fourier–Motzkin. Inequations and their conjunction can be seen as intervals (such as `]-oo, a]` and `[b, +oo[`) and their intersection respectively."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/interval.v",
        "date": "2020-09-21T08:31:15Z",
        "comment": "They should be renamed to `lt_in_itv` and `le_in_itv` but the former one conflicts with the above `lt_in_itv`."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/interval.v",
        "date": "2020-09-21T08:32:08Z",
        "comment": "Here. Should we rename this one to `ltb_in_itv` or `lt_bound_in_itv`? @CohenCyril "
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/interval.v",
        "date": "2020-09-21T08:40:42Z",
        "comment": "Yes! And I'm not sure if `itv_gte` is still useful."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/interval.v",
        "date": "2020-09-21T08:49:20Z",
        "comment": "The first case is the same as the present one, but it's fine to replace it with `true = true`. Also, I don't get what `keyed` do you mean here."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/interval.v",
        "date": "2020-09-21T09:17:28Z",
        "comment": "Suffix `b` is reserved for booleans. \r\nHowever, I am not completely sure about having `ltr_in_itv` anymore since it can be the composition of `lt_in_itv` and (missing) lemma `~~ C -> x < y ?<= if C -> x < y`"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/interval.v",
        "date": "2020-09-21T09:20:08Z",
        "comment": "cf my remark above"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/interval.v",
        "date": "2020-09-21T09:20:18Z",
        "comment": "Sorry, I meant `unkeyed`, cf https://github.com/coq/coq/blob/master/theories/ssr/ssreflect.v#L347-L357"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/interval.v",
        "date": "2020-09-21T09:22:39Z",
        "comment": "Anyway, I'm not 100% convinced that it is desirable... it would be nice is the goal is of the form `is_true _`, but otherwise it will just be weird, and anyway seeing `` `]+oo, x[`` in the context will obviously look wrong to anyone..."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/interval.v",
        "date": "2020-09-21T09:28:58Z",
        "comment": "I think a bettername would be `itv_splitUeq`"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/interval.v",
        "date": "2020-09-21T09:30:16Z",
        "comment": "Didn't `rewrite (@itv_splitU (BLeft x)) ... // (@itv_splitU (BRight x) _ b) ... //` lead to a shorter proof?"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/interval.v",
        "date": "2020-09-21T09:33:36Z",
        "comment": "```suggestion\r\nLemma mem0_itvcc_xNx x : (0 \\in `[- x, x]) = (0 <= x).\r\nProof. by rewrite itv_boundlr [in LHS]/<=%O /= oppr_le0 andbb. Qed.\r\n\r\nLemma mem0_itvoo_xNx x : 0 \\in `](- x), x[ = (0 < x).\r\nProof. by rewrite itv_boundlr [in LHS]/<=%O /= oppr_lt0 andbb. Qed.\r\n\r\nLemma oppr_itv ba bb (xa xb x : R) :\r\n  (- x \\in Interval (BSide ba xa) (BSide bb xb)) =\r\n  (x \\in Interval (BSide (~~ bb) (- xb)) (BSide (~~ ba) (- xa))).\r\nProof.\r\nby rewrite !itv_boundlr /<=%O /= !implybF negbK andbC lteif_oppl lteif_oppr.\r\nQed.\r\n\r\nLemma oppr_itvoo (a b x : R) : (- x \\in `]a, b[) = (x \\in `](- b), (- a)[).\r\nProof. exact: oppr_itv. Qed.\r\n\r\nLemma oppr_itvco (a b x : R) : (- x \\in `[a, b[) = (x \\in `](- b), (- a)]).\r\nProof. exact: oppr_itv. Qed.\r\n\r\nLemma oppr_itvoc (a b x : R) : (- x \\in `]a, b]) = (x \\in `[(- b), (- a)[).\r\nProof. exact: oppr_itv. Qed.\r\n\r\nLemma oppr_itvcc (a b x : R) : (- x \\in `[a, b]) = (x \\in `[(- b), (- a)]).\r\nProof. exact: oppr_itv. Qed.\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/interval.v",
        "date": "2020-09-22T13:54:29Z",
        "comment": "I'm not fond of reusing suffix `b` for `bound`, maybe we can use `d`. \r\nOr maybe if this is the only occurence, we can name these lemmas `gt_BLeft` and `lt_BRight`?"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/interval.v",
        "date": "2020-09-24T00:37:14Z",
        "comment": "Should these boolean values also be opposite?"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/interval.v",
        "date": "2020-09-24T00:39:32Z",
        "comment": "According to the previous comments, it seems so. Let me do that."
      },
      {
        "author": "CohenCyril",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2020-09-27T13:01:35Z",
        "comment": "```suggestion\r\n  + Interval bounds `itv_bound : Type -> Type` are redefined with two constructors\r\n    `BSide : bool -> T -> itv_bound T` and `BInfty : bool -> itv_bound T`.\r\n    New notations `BLeft` and `BRight` are aliases for `BSide true` and `BSide false` respectively. \r\n    `BInfty false` and `BInfty true` respectively means positive and negative infinity.\r\n    `BLeft x` and `BRight x` respectively mean close and open bounds as left bounds,\r\n    and they respectively mean open and close bounds as right bounds.\r\n    This change gives us the canonical \"left to right\" ordering of interval bounds.\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2020-09-27T13:07:02Z",
        "comment": "```suggestion\r\n  + `itv_intersection` (removed, use `Order.meet` instead)\r\n  + `itv_intersection1i` (removed, use `meet1x` instead)\r\n  + `itv_intersectioni1` (removed, use `meetx1` instead)\r\n  + `itv_intersectionii` (removed, use `meetxx` instead)\r\n  + `itv_intersectionC` (removed, use `meetC` instead)\r\n  + `itv_intersectionA` (removed, use `meetA` instead)\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2020-09-27T13:07:17Z",
        "comment": "```suggestion\r\n- in `interval.v`, we deprecate and replace the following:\r\n```"
      },
      {
        "author": "pi8027",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2020-09-27T16:33:25Z",
        "comment": "We have deprecation for them and they have not been removed yet. (But indeed, they are not replacements.)"
      },
      {
        "author": "CohenCyril",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2020-09-27T17:22:53Z",
        "comment": "`s/removed/deprecated/` then, I just wanted to outline the fact they were subsumed by generic lemmas"
      },
      {
        "author": "pi8027",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2020-09-28T03:35:53Z",
        "comment": "So I would rather say:\r\n```\r\n\r\n- in `interval.v`, we deprecate the following:\r\n  + `itv_intersection` (use `Order.meet` instead)\r\n  + `itv_intersection1i` (use `meet1x` instead)\r\n  + `itv_intersectioni1` (use `meetx1` instead)\r\n  + `itv_intersectionii` (use `meetxx` instead)\r\n  + `itv_intersectionC` (use `meetC` instead)\r\n  + `itv_intersectionA` (use `meetA` instead)\r\n```"
      },
      {
        "author": "pi8027",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2020-09-28T11:10:37Z",
        "comment": "They should be placed in the \"Removed\" section."
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "3e292da9f901e1032311181990bbc1dd160105bb",
        "message": "The new interval library\n\n- `x <= y ?< if c` (lersif) has been replaced with `x < y ?<= if c'` (lteif)\n  where `c'` is negation of `c`. This change makes statements of several lemmas\n  (e.g., `lteif_orb`) easily comprehensible.\n- The first constructor `BOpen_if` of `itv_bound` has been replaced with\n  `BClose_if` where the first argument is inverted. Now `pred_of_itv` is defined\n  by using `lteif` instead of `lersif`.\n- Intervals of `T : porderType` form a `porderType` where the ordering relation\n  is the subset relation. If `T` is a `latticeType`, intervals also form a\n  `latticeType` where the join and meet are intersection and convex hull\n  respectively. They are distributive if `T` is an `orderType`.",
        "date": "2020-09-28T11:12:56Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "1f224d39ac3e3a68652d1a6b64387c22543b2663",
        "message": "Redefine itv_bound with BRight_if and BRInfty_if",
        "date": "2020-09-28T11:12:56Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "29d37a333d417c1bb27f4910704fd388b49f9a78",
        "message": "Apply suggestions from code review\n\nCo-authored-by: Cyril Cohen <CohenCyril@users.noreply.github.com>",
        "date": "2020-09-28T11:14:02Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 457,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 43,
        "deletions": 1
      },
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 43,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2020-01-28T16:54:14Z",
    "update_date": "2020-03-31T12:41:45Z",
    "discussion": [
      {
        "author": "thery",
        "date": "2020-03-26T10:53:11Z",
        "comment": "Just one littlle remark, I am not a big fan of using ```N``` as a separator (```hasNfind``` and ```memNindex```) I think I find ```hasN_find``` and ```memN_index``` like in ```ifN_eq``` more legible"
      },
      {
        "author": "CohenCyril",
        "date": "2020-03-26T15:05:00Z",
        "comment": "> Just one littlle remark, I am not a big fan of using `N` as a separator (`hasNfind` and `memNindex`) I think I find `hasN_find` and `memN_index` like in `ifN_eq` more legible\r\n\r\nI guess that is a matter of taste, and mine is I like it better in the current way. Furthermore, it seems that the most wide spread convention is to use it as a separator as in `gtnNdvd`, `ltnNge`, `gtNdvdp` and at least 8 other occurrences of this kind... (cf `grep -e \"[a-z0-9]N[a-z0-9]\" **/*.v | grep \"Lemma\"` filtering out the numerous examples where  `N` is not a separtor) while the example you cite has exactly two occurences `ifN_eq` and `ifN_eqC`."
      },
      {
        "author": "thery",
        "date": "2020-03-26T15:14:04Z",
        "comment": "as there are so few occurrences we can still go either ways :smile:\r\nMaybe we can merge this pull request and leave the N as an issue for later\r\n"
      },
      {
        "author": "ybertot",
        "date": "2020-03-31T12:42:24Z",
        "comment": "Thanks @CohenCyril and @thery "
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "b1af144ee49faf7599385eeaf47d1d9baa633579",
        "message": "Theorems about find and index",
        "date": "2020-01-28T16:03:45Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "4e07cebda75984127bd2a37c99de3105bb28cf2e",
        "message": "Added lemmas about foldl, scanl, foldr and rcons and cons",
        "date": "2020-01-28T16:04:46Z"
      }
    ]
  },
  {
    "author": "erikmd",
    "number": 455,
    "diff_summary": [
      {
        "file": ".gitlab-ci.yml",
        "status": "M",
        "additions": 13,
        "deletions": 38
      },
      {
        "file": "Dockerfile",
        "status": "M",
        "additions": 13,
        "deletions": 38
      },
      {
        "file": "Dockerfile.make",
        "status": "M",
        "additions": 13,
        "deletions": 38
      }
    ],
    "state": "merged",
    "open_date": "2020-01-17T15:28:11Z",
    "update_date": "2020-03-12T10:52:23Z",
    "discussion": [
      {
        "author": "erikmd",
        "date": "2020-03-08T15:59:11Z",
        "comment": "Hi @CohenCyril I took the opportunity to add 2 commits in this CI-related PR, which is now threefold:\r\n\r\n* Restore the `opam clean -c` option which now works with opam 2.0.6\r\n* Simplify the 2 Dockerfiles a bit\r\n* Remove the 2 jobs ci-lemma-overloading-{8.8,8.9} (coq-lemma-overloading now requires 8.10+)\r\n\r\nRegarding the failure of the ci-finmap-dev job, this would be an upstream issue at first sight:\r\nhttps://github.com/math-comp/finmap/issues/62"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "erikmd",
        "committer": "erikmd",
        "hash": "a7f4eb76935157112aa844b6c5ac29a36898235f",
        "message": "Revert \"Don't run \"opam clean -c\" to workaround ocaml/opam#3828\"\n\nThis reverts commit a03e0cb0ff40afabcaccba7f764076355ca82962.",
        "date": "2020-01-17T15:14:38Z"
      },
      {
        "author": "erikmd",
        "committer": "erikmd",
        "hash": "563f395e1a41caf4978fe9881250ec68796e36a0",
        "message": "refactor: Simplify the Dockerfiles\n\n* the CLI option --build-arg=compiler=\"${OPAM_SWITCH}\" is now useless\n  (it had been introduced to be able to compile Coq versions < 8.7,\n  while mathcomp-dev now requires Coq 8.7+)\n\n* the \"coqorg/base:bare\" image now contains the two environment vars\n  COMPILER and COMPILER_EDGE => clear COMPILER=\"\" in mathcomp-dev's\n  Dockerfile multi-stage build.",
        "date": "2020-03-08T14:51:14Z"
      },
      {
        "author": "erikmd",
        "committer": "erikmd",
        "hash": "3ae871fff2165c27b8bb389f1829766a4d6f00d9",
        "message": "Fix CI (coq-lemma-overloading dropped compatibility with Coq < 8.10)",
        "date": "2020-03-08T15:15:05Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 454,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/order.v",
        "status": "M",
        "additions": 289,
        "deletions": 250
      }
    ],
    "state": "merged",
    "open_date": "2020-01-10T02:41:11Z",
    "update_date": "2020-01-14T15:28:44Z",
    "discussion": [
      {
        "author": "hivert",
        "date": "2020-01-10T11:11:48Z",
        "comment": "Excellent ! While you are at it, I'd like to be able to write something like:\r\n```\r\nVariable (u : unit) (Ord : orderType u).\r\nLet OrdC := [orderType of Ord^c].\r\n```\r\nHowever the notation `Ord^c` is not defined.\r\n\r\n[edit]I was using an old version of the file but even with the new one:\r\n```\r\nFrom mathcomp Require Import all_ssreflect.\r\nFrom mathcomp Require Import boolp.\r\n\r\nRequire Import order.\r\n\r\n\r\nSet Implicit Arguments.\r\nUnset Strict Implicit.\r\nUnset Printing Implicit Defensive.\r\n\r\nImport Order.Syntax.\r\nImport Order.TTheory.\r\nOpen Scope order_scope.\r\n\r\nSection Dual.\r\n\r\nVariable (u : unit) (Ord : orderType u).\r\n\r\nLet OrdC := [orderType of Ord^c].\r\n```\r\ngives: \r\n```\r\nError: The reference c was not found in the current environment.\r\n```\r\nIt seems to be defined only locally. Or is there a problem with my install ?\r\n"
      },
      {
        "author": "CohenCyril",
        "date": "2020-01-10T12:23:41Z",
        "comment": "`^c` was renamed to `^d`"
      },
      {
        "author": "hivert",
        "date": "2020-01-10T12:48:35Z",
        "comment": "> `^c` was renamed to `^d`\r\n\r\nIt doesn't work for me with the updated version.\r\n\r\n```\r\nFrom mathcomp Require Import all_ssreflect.\r\nFrom mathcomp Require Import boolp.\r\n\r\nRequire Import order.\r\n\r\n\r\nSet Implicit Arguments.\r\nUnset Strict Implicit.\r\nUnset Printing Implicit Defensive.\r\n\r\nImport Order.Syntax.\r\nImport Order.TTheory.\r\nOpen Scope order_scope.\r\n\r\nSection Dual.\r\n\r\nVariable (u : unit) (Ord : orderType u).\r\n\r\nLet OrdC := [orderType of Ord^d].\r\n```\r\nGives:\r\n```\r\nError: The reference d was not found in the current environment.\r\n```\r\nMaybe I didn't export the right module or the right scope. See my precise example above..."
      },
      {
        "author": "hivert",
        "date": "2020-01-10T12:50:17Z",
        "comment": "It seems that it is only defined as a local notation:\r\n```\r\nLocal Notation \"T ^d\" := (dual T) (at level 2, format \"T ^d\") : type_scope.\r\n```"
      },
      {
        "author": "CohenCyril",
        "date": "2020-01-10T13:08:33Z",
        "comment": "> It seems that it is only defined as a local notation:\r\n\r\noh, right, should be fixed now"
      },
      {
        "author": "hivert",
        "date": "2020-01-10T23:00:38Z",
        "comment": "Excellent ! These missing canonicals seem to fix all my issues ! Thanks for the extremely quick fix."
      }
    ],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: fix",
        "description": "PR that fixes a bug. Please refer to the appropriate issue(s) if relevant."
      }
    ],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "941b90fd72a2c65218b063ce79de9b2a4bc5ae12",
        "message": "Renaming converse to dual in order.v\n\nIndeed, the name converse and notation ^c were already taken in\nhttps://github.com/math-comp/math-comp/blob/master/mathcomp/algebra/ssralg.v#L989-L990\nWe are renaming to dual.",
        "date": "2020-01-10T02:39:24Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "95ef2d5e5b38b2c091625b6309c536da0f4e0b0f",
        "message": "Exporting T^d notation",
        "date": "2020-01-10T13:08:10Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "f1e6bef6f2c42ccb34b986fdabfa8b4b3658d4e1",
        "message": "Missing canonical structures for dual",
        "date": "2020-01-10T20:16:23Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 453,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 1413,
        "deletions": 739
      },
      {
        "file": "mathcomp/algebra/rat.v",
        "status": "M",
        "additions": 1413,
        "deletions": 739
      },
      {
        "file": "mathcomp/algebra/ssrint.v",
        "status": "M",
        "additions": 1413,
        "deletions": 739
      },
      {
        "file": "mathcomp/algebra/ssrnum.v",
        "status": "M",
        "additions": 1413,
        "deletions": 739
      },
      {
        "file": "mathcomp/field/algebraics_fundamentals.v",
        "status": "M",
        "additions": 1413,
        "deletions": 739
      },
      {
        "file": "mathcomp/ssreflect/order.v",
        "status": "M",
        "additions": 1413,
        "deletions": 739
      }
    ],
    "state": "merged",
    "open_date": "2020-01-09T07:16:53Z",
    "update_date": "2020-01-30T09:54:11Z",
    "discussion": [
      {
        "author": "pi8027",
        "date": "2020-01-09T08:58:28Z",
        "comment": "@strub Can you be the assignee?"
      },
      {
        "author": "strub",
        "date": "2020-01-09T12:31:42Z",
        "comment": "Sure"
      },
      {
        "author": "strub",
        "date": "2020-01-13T06:11:58Z",
        "comment": "Can somebody assigned me?"
      },
      {
        "author": "pi8027",
        "date": "2020-01-14T06:01:25Z",
        "comment": "@strub @CohenCyril Thank you."
      },
      {
        "author": "strub",
        "date": "2020-01-27T14:12:12Z",
        "comment": "I don't think I have that much to say about this PR. I am now using it for 1 month without any problem and the diff seems fine by me.\r\n\r\nIMO, it is ready for merge."
      },
      {
        "author": "pi8027",
        "date": "2020-01-29T06:45:58Z",
        "comment": "@strub Yes, I will do that. Since #270 has not been released yet, it can be a small change. But I also should make the header consistent with implementation."
      },
      {
        "author": "pi8027",
        "date": "2020-01-29T08:44:01Z",
        "comment": "Done. I think this should be OK, but I can wait for more feedback."
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "00f593f9361af73290443fce9b16cc0cbe9884f4",
        "message": "Non-distributive lattice",
        "date": "2020-01-15T11:27:31Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "2d98f0cd2a5f69d2b3da77b738376cc812510ec7",
        "message": "Documentation work for (non-distributive) latticeType",
        "date": "2020-01-29T07:03:31Z"
      }
    ]
  },
  {
    "author": "SimonBoulier",
    "number": 452,
    "diff_summary": [
      {
        "file": "mathcomp/algebra/mxalgebra.v",
        "status": "M",
        "additions": 6,
        "deletions": 6
      },
      {
        "file": "mathcomp/fingroup/fingroup.v",
        "status": "M",
        "additions": 6,
        "deletions": 6
      },
      {
        "file": "mathcomp/ssreflect/bigop.v",
        "status": "M",
        "additions": 6,
        "deletions": 6
      }
    ],
    "state": "merged",
    "open_date": "2020-01-08T11:00:11Z",
    "update_date": "2020-01-21T06:49:43Z",
    "discussion": [
      {
        "author": "herbelin",
        "date": "2020-01-19T18:18:53Z",
        "comment": "This backward-compatible PR can be merged. Actually, #11368 being now merged to Coq, it would be better to merge it without too much delay if possible in order to remain synchronous with Coq CI. Thanks in advance."
      },
      {
        "author": "ejgallego",
        "date": "2020-01-20T17:01:58Z",
        "comment": "Ping math-comp devs."
      },
      {
        "author": "ppedrot",
        "date": "2020-01-21T05:57:34Z",
        "comment": "Maybe a named ping to @gares is more efficient?"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "SimonBoulier",
        "committer": "SimonBoulier",
        "hash": "faa2b32bac7454bcec366d9790b6f14331e297b0",
        "message": "Adapt to coq/coq#11368 (Turn trailing implicit warning into an error)",
        "date": "2020-01-08T11:01:31Z"
      }
    ]
  },
  {
    "author": "erikmd",
    "number": 451,
    "diff_summary": [
      {
        "file": ".gitlab-ci.yml",
        "status": "M",
        "additions": 8,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2019-12-15T00:25:44Z",
    "update_date": "2019-12-17T08:21:17Z",
    "discussion": [
      {
        "author": "erikmd",
        "date": "2019-12-16T18:51:10Z",
        "comment": "Hi @CohenCyril, could you be the assignee of this PR?"
      },
      {
        "author": "erikmd",
        "date": "2019-12-17T11:40:35Z",
        "comment": "Thanks @CohenCyril ! so I've just updated the wiki accordingly:\r\nhttps://github.com/math-comp/math-comp/wiki/How-to-add-overlays-for-PRs"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "erikmd",
        "committer": "erikmd",
        "hash": "172a97da12ef741e8f2819473d3d4a115c744862",
        "message": "fix: Add missing \"except: schedules\"\n\nIt seems adding an \"except:\" rule in a job that \"extends:\" another one\n*overwrites* the except rule, so we were getting too many jobs in the\nmathcomp-dev scheduled pipeline.\n\nOnce merged, this patch should fix this.",
        "date": "2019-12-15T00:12:12Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 450,
    "diff_summary": [
      {
        "file": ".gitlab-ci.yml",
        "status": "M",
        "additions": 1,
        "deletions": 78
      }
    ],
    "state": "merged",
    "open_date": "2019-12-12T13:37:30Z",
    "update_date": "2019-12-26T11:41:02Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "6fe83f3bb1e6c12c40cee1e40dc00354f7f24e4b",
        "message": "Remove CI overlay for PR #270",
        "date": "2019-12-18T00:22:33Z"
      }
    ]
  },
  {
    "author": "ybertot",
    "number": 447,
    "diff_summary": [
      {
        "file": "mathcomp/Make",
        "status": "M",
        "additions": 9,
        "deletions": 6
      },
      {
        "file": "mathcomp/_CoqProject",
        "status": "M",
        "additions": 9,
        "deletions": 6
      },
      {
        "file": "mathcomp/algebra/mxalgebra.v",
        "status": "M",
        "additions": 9,
        "deletions": 6
      },
      {
        "file": "mathcomp/fingroup/fingroup.v",
        "status": "M",
        "additions": 9,
        "deletions": 6
      },
      {
        "file": "mathcomp/ssreflect/bigop.v",
        "status": "M",
        "additions": 9,
        "deletions": 6
      }
    ],
    "state": "closed",
    "open_date": "2019-12-04T12:03:46Z",
    "update_date": "2020-06-08T14:48:06Z",
    "discussion": [
      {
        "author": "pi8027",
        "date": "2020-01-09T07:39:38Z",
        "comment": "By the way, what about turning treated deprecation warnings to errors by adding `-arg -w -arg +...` so that we do not introduce the use of deprecated features, e.g., #438?"
      },
      {
        "author": "CohenCyril",
        "date": "2020-06-08T12:20:46Z",
        "comment": "@ybertot sorry this PR went completely under my radar for a while... @affeldt-aist why is this for 1.12.0 rather than 1.11.0 ?"
      }
    ],
    "review_discussion": [
      {
        "author": "CohenCyril",
        "file": "mathcomp/_CoqProject",
        "date": "2020-01-03T13:52:38Z",
        "comment": "Is this silencing \"undeclared-scope\" warnings? If so it is not completely clear to me that we want to do this rather than fixing it..."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/mxalgebra.v",
        "date": "2020-01-03T13:52:40Z",
        "comment": "Why do you declare `{A f}` as maximal implicits?\r\nI think these were really mean to be \"on demand\" so that a naked `mxrank_injP` is still applied implicitly `F m n` (for view compositions if I am correct) but not applied to `A f` unless we give `p`...\r\nSame question for all the following changes."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/_CoqProject",
        "date": "2020-01-09T07:36:40Z",
        "comment": "IMO, we should be aware of ambiguous paths with regard to packed classes. Also, I'm trying to reduce the number of ambiguous paths reported so that we can remove this from `mathcomp/Make` (see #297, coq/coq#11258, and coq/coq#11381)."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/_CoqProject",
        "date": "2020-04-06T15:28:09Z",
        "comment": "Oh, after re-reading myself, it seems obvious that the reason is backward compatibility. My bad..."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/mxalgebra.v",
        "date": "2020-04-06T15:28:37Z",
        "comment": "@ybertot I still do not understand the motivation behind this change though"
      },
      {
        "author": "anton-trunov",
        "file": "mathcomp/algebra/mxalgebra.v",
        "date": "2020-04-06T17:17:12Z",
        "comment": "I think that the change is needed, because, unless I'm mistaken, non-maximal implicits are forced only if the term is applied to at least one more argument after them. So the trailing implicits only make sense if they are maximal."
      },
      {
        "author": "ybertot",
        "file": "mathcomp/algebra/mxalgebra.v",
        "date": "2020-04-07T08:25:11Z",
        "comment": "Not making this argument maximal provokes another warning:\r\n\r\n`Warning: Argument number 4 is a trailing implicit so must be maximal`"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/mxalgebra.v",
        "date": "2020-04-08T04:29:04Z",
        "comment": "Those changes have already been merged in #452."
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "ybertot",
        "committer": "ybertot",
        "hash": "384aa63127fabf939d2b221923a3da9b51c0b353",
        "message": "treating deprecation warnings that appear with coq-8.10",
        "date": "2019-12-04T10:36:43Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 446,
    "diff_summary": [
      {
        "file": ".gitlab-ci.yml",
        "status": "M",
        "additions": 32,
        "deletions": 11
      },
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 32,
        "deletions": 11
      },
      {
        "file": "mathcomp/algebra/ssrnum.v",
        "status": "M",
        "additions": 32,
        "deletions": 11
      }
    ],
    "state": "merged",
    "open_date": "2019-12-03T14:20:49Z",
    "update_date": "2019-12-03T16:14:16Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "88c429ccba52249fe0ab14ac45a8aa4fb515b6d5",
        "message": "The compatibility module in ssrnum should now be for version 1.10",
        "date": "2019-12-03T14:11:03Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "cc0b6ec1383802b46ab19f7f5f0d19fa7be03a55",
        "message": "Fix CI",
        "date": "2019-12-03T14:54:55Z"
      }
    ]
  },
  {
    "author": "ybertot",
    "number": 445,
    "diff_summary": [
      {
        "file": "coq-mathcomp-algebra.opam",
        "status": "M",
        "additions": 6,
        "deletions": 13
      },
      {
        "file": "coq-mathcomp-character.opam",
        "status": "M",
        "additions": 6,
        "deletions": 13
      },
      {
        "file": "coq-mathcomp-field.opam",
        "status": "M",
        "additions": 6,
        "deletions": 13
      },
      {
        "file": "coq-mathcomp-fingroup.opam",
        "status": "M",
        "additions": 6,
        "deletions": 13
      },
      {
        "file": "coq-mathcomp-solvable.opam",
        "status": "M",
        "additions": 6,
        "deletions": 13
      },
      {
        "file": "coq-mathcomp-ssreflect.opam",
        "status": "M",
        "additions": 6,
        "deletions": 13
      },
      {
        "file": "etc/utils/packager",
        "status": "M",
        "additions": 6,
        "deletions": 13
      }
    ],
    "state": "merged",
    "open_date": "2019-12-02T13:01:12Z",
    "update_date": "2019-12-11T17:24:15Z",
    "discussion": [
      {
        "author": "gares",
        "date": "2019-12-11T17:24:18Z",
        "comment": "I don't think we want a changelog entry for this fix, so I'm merging as is."
      }
    ],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: tool",
        "description": "Issue or PR about a tool. (e.g. packager or hierarchy_diagram)"
      }
    ],
    "commits": [
      {
        "author": "ybertot",
        "committer": "ybertot",
        "hash": "0cfd17ed2c13ef8e88384b0135501f159d49bb90",
        "message": "take advantage of opam variables and their default values",
        "date": "2019-12-02T12:49:07Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 444,
    "diff_summary": [
      {
        "file": "mathcomp/Makefile.common",
        "status": "M",
        "additions": 1,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2019-11-29T03:53:36Z",
    "update_date": "2019-11-29T07:50:05Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "96d30e3170e01484b21b019186135fc2d6ebcc53",
        "message": "Fix Makefile",
        "date": "2019-11-29T03:49:37Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 443,
    "diff_summary": [
      {
        "file": "mathcomp/algebra/finalg.v",
        "status": "M",
        "additions": 765,
        "deletions": 990
      },
      {
        "file": "mathcomp/algebra/intdiv.v",
        "status": "M",
        "additions": 765,
        "deletions": 990
      },
      {
        "file": "mathcomp/algebra/matrix.v",
        "status": "M",
        "additions": 765,
        "deletions": 990
      },
      {
        "file": "mathcomp/algebra/mxalgebra.v",
        "status": "M",
        "additions": 765,
        "deletions": 990
      },
      {
        "file": "mathcomp/algebra/mxpoly.v",
        "status": "M",
        "additions": 765,
        "deletions": 990
      },
      {
        "file": "mathcomp/algebra/poly.v",
        "status": "M",
        "additions": 765,
        "deletions": 990
      },
      {
        "file": "mathcomp/algebra/polydiv.v",
        "status": "M",
        "additions": 765,
        "deletions": 990
      },
      {
        "file": "mathcomp/algebra/rat.v",
        "status": "M",
        "additions": 765,
        "deletions": 990
      },
      {
        "file": "mathcomp/algebra/ssralg.v",
        "status": "M",
        "additions": 765,
        "deletions": 990
      },
      {
        "file": "mathcomp/algebra/ssrint.v",
        "status": "M",
        "additions": 765,
        "deletions": 990
      },
      {
        "file": "mathcomp/algebra/ssrnum.v",
        "status": "M",
        "additions": 765,
        "deletions": 990
      },
      {
        "file": "mathcomp/algebra/vector.v",
        "status": "M",
        "additions": 765,
        "deletions": 990
      },
      {
        "file": "mathcomp/character/character.v",
        "status": "M",
        "additions": 765,
        "deletions": 990
      },
      {
        "file": "mathcomp/character/classfun.v",
        "status": "M",
        "additions": 765,
        "deletions": 990
      },
      {
        "file": "mathcomp/character/integral_char.v",
        "status": "M",
        "additions": 765,
        "deletions": 990
      },
      {
        "file": "mathcomp/character/mxabelem.v",
        "status": "M",
        "additions": 765,
        "deletions": 990
      },
      {
        "file": "mathcomp/character/mxrepresentation.v",
        "status": "M",
        "additions": 765,
        "deletions": 990
      },
      {
        "file": "mathcomp/field/algC.v",
        "status": "M",
        "additions": 765,
        "deletions": 990
      },
      {
        "file": "mathcomp/field/algebraics_fundamentals.v",
        "status": "M",
        "additions": 765,
        "deletions": 990
      },
      {
        "file": "mathcomp/field/algnum.v",
        "status": "M",
        "additions": 765,
        "deletions": 990
      },
      {
        "file": "mathcomp/field/fieldext.v",
        "status": "M",
        "additions": 765,
        "deletions": 990
      },
      {
        "file": "mathcomp/field/galois.v",
        "status": "M",
        "additions": 765,
        "deletions": 990
      },
      {
        "file": "mathcomp/fingroup/perm.v",
        "status": "M",
        "additions": 765,
        "deletions": 990
      },
      {
        "file": "mathcomp/solvable/abelian.v",
        "status": "M",
        "additions": 765,
        "deletions": 990
      },
      {
        "file": "mathcomp/solvable/alt.v",
        "status": "M",
        "additions": 765,
        "deletions": 990
      },
      {
        "file": "mathcomp/solvable/cyclic.v",
        "status": "M",
        "additions": 765,
        "deletions": 990
      },
      {
        "file": "mathcomp/solvable/frobenius.v",
        "status": "M",
        "additions": 765,
        "deletions": 990
      },
      {
        "file": "mathcomp/solvable/sylow.v",
        "status": "M",
        "additions": 765,
        "deletions": 990
      },
      {
        "file": "mathcomp/ssreflect/bigop.v",
        "status": "M",
        "additions": 765,
        "deletions": 990
      },
      {
        "file": "mathcomp/ssreflect/binomial.v",
        "status": "M",
        "additions": 765,
        "deletions": 990
      },
      {
        "file": "mathcomp/ssreflect/eqtype.v",
        "status": "M",
        "additions": 765,
        "deletions": 990
      },
      {
        "file": "mathcomp/ssreflect/finset.v",
        "status": "M",
        "additions": 765,
        "deletions": 990
      },
      {
        "file": "mathcomp/ssreflect/fintype.v",
        "status": "M",
        "additions": 765,
        "deletions": 990
      },
      {
        "file": "mathcomp/ssreflect/order.v",
        "status": "M",
        "additions": 765,
        "deletions": 990
      },
      {
        "file": "mathcomp/ssreflect/path.v",
        "status": "M",
        "additions": 765,
        "deletions": 990
      },
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 765,
        "deletions": 990
      }
    ],
    "state": "merged",
    "open_date": "2019-11-28T16:39:48Z",
    "update_date": "2020-01-03T13:45:54Z",
    "discussion": [
      {
        "author": "pi8027",
        "date": "2019-12-02T11:59:09Z",
        "comment": "I have discovered many different kinds of redundancies mainly in `polydiv` so reduced them. I marked this PR as a draft just to do not merge before #270 so that we do not introduce new conflicts in #270."
      },
      {
        "author": "CohenCyril",
        "date": "2019-12-26T12:01:11Z",
        "comment": "@pi8027 thanks, I think this is overall a great improvement. However I have a small doubt on the style of `have stuff : ... := ...`, and I will ask others about it...\r\n\r\n@ggonthier @gares @amahboubi  is there an (unwritten?) invariant of the ssreflect tactic language stating that the intro pattern occurring right after the `have` keyword must/should only consume elements of the stack introduced by the statement occuring after `:`. Or is it ok to also introduce (or case or use a forward view on, etc) hypothesis that were there before the `have`, as in https://github.com/math-comp/math-comp/pull/443/files#diff-dd7d7be19aa85c8361134ccf162dca93R1177."
      },
      {
        "author": "gares",
        "date": "2019-12-26T13:07:29Z",
        "comment": "Apparently the invariant is not enforced. It makes sense to me, but I have no idea if the lack of enforcement was widely exploited or if there are good use cases. Correct me if I'm wrong, but in this PR it is a bit borderline.\r\n\r\nWhat I think is enforced is that you do one case split, no more, but then nothing prevents you to introduce more than what comes from the case in each branch..."
      },
      {
        "author": "pi8027",
        "date": "2019-12-27T18:28:51Z",
        "comment": "Since I probably need to rebase some patches on top of this, I would like to revert that kind of use of `have` so that we can merge this PR without more discussion on that point."
      },
      {
        "author": "pi8027",
        "date": "2019-12-28T08:47:45Z",
        "comment": "> Since I probably need to rebase some patches on top of this, I would like to revert that kind of use of `have` so that we can merge this PR without more discussion on that point.\r\n\r\nDone. @CohenCyril "
      }
    ],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: refactoring",
        "description": "Issue or PR about a refactoring. (reorganizing the code, reusing theorems, simplifications...)"
      }
    ],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "a06d61a8e226eeabc52f1a22e469dca1e6077065",
        "message": "Refactoring and linting especially polydiv\n\n- Replace `altP eqP` and `altP (_ =P _)` with `eqVneq`:\n  The improved `eqVneq` lemma (#351) is redesigned as a comparison predicate and\n  introduces a hypothesis in the form of `x != y` in the second case. Thus,\n  `case: (altP eqP)`, `case: (altP (x =P _))` and `case: (altP (x =P y))` idioms\n  can be replaced with `case: eqVneq`, `case: (eqVneq x)` and\n  `case: (eqVneq x y)` respectively. This replacement slightly simplifies and\n  reduces proof scripts.\n- use `have [] :=` rather than `case` if it is better.\n- `by apply:` -> `exact:`.\n- `apply/lem1; apply/lem2` or `apply: lem1; apply: lem2` -> `apply/lem1/lem2`.\n- `move/lem1; move/lem2` -> `move/lem1/lem2`.\n- Remove `GRing.` prefix if applicable.\n- `negbTE` -> `negPf`, `eq_refl` -> `eqxx` and `sym_equal` -> `esym`.",
        "date": "2019-12-28T08:45:40Z"
      }
    ]
  },
  {
    "author": "ggonthier",
    "number": 441,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 224,
        "deletions": 146
      },
      {
        "file": "mathcomp/algebra/mxalgebra.v",
        "status": "M",
        "additions": 224,
        "deletions": 146
      },
      {
        "file": "mathcomp/algebra/mxpoly.v",
        "status": "M",
        "additions": 224,
        "deletions": 146
      },
      {
        "file": "mathcomp/algebra/poly.v",
        "status": "M",
        "additions": 224,
        "deletions": 146
      },
      {
        "file": "mathcomp/algebra/vector.v",
        "status": "M",
        "additions": 224,
        "deletions": 146
      },
      {
        "file": "mathcomp/character/classfun.v",
        "status": "M",
        "additions": 224,
        "deletions": 146
      },
      {
        "file": "mathcomp/character/inertia.v",
        "status": "M",
        "additions": 224,
        "deletions": 146
      },
      {
        "file": "mathcomp/character/integral_char.v",
        "status": "M",
        "additions": 224,
        "deletions": 146
      },
      {
        "file": "mathcomp/character/vcharacter.v",
        "status": "M",
        "additions": 224,
        "deletions": 146
      },
      {
        "file": "mathcomp/field/algebraics_fundamentals.v",
        "status": "M",
        "additions": 224,
        "deletions": 146
      },
      {
        "file": "mathcomp/field/cyclotomic.v",
        "status": "M",
        "additions": 224,
        "deletions": 146
      },
      {
        "file": "mathcomp/field/finfield.v",
        "status": "M",
        "additions": 224,
        "deletions": 146
      },
      {
        "file": "mathcomp/field/galois.v",
        "status": "M",
        "additions": 224,
        "deletions": 146
      },
      {
        "file": "mathcomp/fingroup/fingroup.v",
        "status": "M",
        "additions": 224,
        "deletions": 146
      },
      {
        "file": "mathcomp/fingroup/gproduct.v",
        "status": "M",
        "additions": 224,
        "deletions": 146
      },
      {
        "file": "mathcomp/ssreflect/bigop.v",
        "status": "M",
        "additions": 224,
        "deletions": 146
      },
      {
        "file": "mathcomp/ssreflect/binomial.v",
        "status": "M",
        "additions": 224,
        "deletions": 146
      }
    ],
    "state": "merged",
    "open_date": "2019-11-26T16:30:19Z",
    "update_date": "2019-11-27T17:47:28Z",
    "discussion": [
      {
        "author": "ggonthier",
        "date": "2019-11-27T15:07:13Z",
        "comment": "I've implemented the documentation and deprecation improvements, and rebased."
      }
    ],
    "review_discussion": [
      {
        "author": "CohenCyril",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2019-11-27T12:59:02Z",
        "comment": "- missing opening `` ` `` before `big_enum`\r\n- Make PR an hyper link\r\n\r\n```suggestion\r\n   `filter A (index_enum T)` with more explicit lemmas `big_enumP`, `big_enum`, `big_enum_cond`, `big_image` added to the `bigop` library. This convertibilty, and indeed equality may no longer hold in future `mathcomp` releases when sets over `finType`s are generalised to finite sets over `choiceType`s, so client libraraies should stop relying on this convertibility, as well as the `filter_index_enum` lemma. File `bigop.v` has some boilerplate to help with the port; also see PR [#441](https://github.com/math-comp/math-comp/pull/441) for examples.\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2019-11-27T12:59:25Z",
        "comment": "missing opening `` ` `` before `big_image_cond`\r\n```suggestion\r\n - Restricted `big_image`, `big_image_cond`, `big_image_id` and `big_image_cond_id`\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2019-11-27T13:02:18Z",
        "comment": "Make PR an hyper link\r\n\r\n```suggestion\r\n   This change anticipates an expected evolution of `fintype` to integrate `finmap`. It is likely that the new definition of the `#|A|` notation will hide multiple occurrences of `A`, which will break the `{-2}` induction idiom. Client libraries should update before the 1.11 release (see PR [#434](https://github.com/math-comp/math-comp/pull/434) for examples).\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2019-11-27T13:03:08Z",
        "comment": "> non-abelian instances should be dealt with a combination of `big_map` and `big_enumP`.\r\n\r\nIs there an example of this in the library right now, if so can you indicate the theorem + file in the changelog?"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/bigop.v",
        "date": "2019-11-27T13:05:57Z",
        "comment": "Should we deprecate this lemma?"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/bigop.v",
        "date": "2019-11-27T13:08:30Z",
        "comment": "Maybe reference one canonical example of use of this pattern in the existing code?"
      },
      {
        "author": "ggonthier",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2019-11-27T13:20:11Z",
        "comment": "Right; I was expecting markdown to turn the reference into a hyperlink as it does in the comments (viz. #434), but apparently that doesn't work."
      },
      {
        "author": "CohenCyril",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2019-11-27T13:26:11Z",
        "comment": "> Right; I was expecting markdown to turn the reference into a hyperlink as it does in the comments (viz. #434), but apparently that doesn't work.\r\n\r\nit works only on github :wink: but the CHANGELOG is destined to be read independently"
      },
      {
        "author": "ggonthier",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2019-11-27T13:40:33Z",
        "comment": "There isn't, and indeed none of the `big_image` lemmas were used in the library at any point, and almost all the instances where `big_map` + `big_filter` or `enumT` were used as a proxy for `big_image` _were_ in the abelian case, so the PR actually introduces `big_image` there. The only exception is the `split_diagA` technical lemma in `mxpoly`, but it's non-standard because I actually _define_ `diagA` to be the `map` over the enumeration that is meant to be abstracted by `big_enumP`, which means I don't use `big_enumP` to abstract over it right after I use `big_map`, as I normally should. That twist is due to the fact I can't use a lemma like `big_enumP` to create constants at the vernacular level."
      },
      {
        "author": "ggonthier",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2019-11-27T13:43:23Z",
        "comment": "Since we've switched to markdown the CHANGELOG is going to be hard to read outside GitHub anyway.., but it actually doesn't even work when viewing the LOG file on GitHub."
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/ssreflect/bigop.v",
        "date": "2019-11-27T14:15:22Z",
        "comment": "Yes, indeed this did cross my mind, but I thought the bespoke `deprecate` we use (until we can rely on 8.10) would print the wrong indication. You've just reminded me my own contraption can actually be made to do the right thing."
      },
      {
        "author": "CohenCyril",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2019-11-27T15:22:23Z",
        "comment": "The proper syntax for hyperlinks in markdown (to be printed nicely on github) is [text](url).\r\nYou could simply click to commit my suggestion below:\r\n```suggestion\r\n   `filter A (index_enum T)` with more explicit lemmas `big_enumP`, `big_enum`, `big_enum_cond`, `big_image` added to the `bigop` library, and deprecated the `filter_index_enum` lemma that states the corresponding equality. Both convertibility and equality may no longer hold in future `mathcomp` releases when sets over `finType`s are generalised to finite sets over `choiceType`s, so client libraries should stop relying on this identity. File `bigop.v` has some boilerplate to help with the port; also see [PR #441](https://github.com/math-comp/math-comp/pull/441) for examples.\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2019-11-27T15:22:50Z",
        "comment": "The proper syntax for hyperlinks in markdown (to be printed nicely on github) is `[text](url)`.\r\nYou could simply click to commit my suggestion below:\r\n```suggestion\r\n   This change anticipates an expected evolution of `fintype` to integrate `finmap`. It is likely that the new definition of the `#|A|` notation will hide multiple occurrences of `A`, which will break the `{-2}` induction idiom. Client libraries should update before the 1.11 release (see PR [#434](https://github.com/math-comp/math-comp/pull/434) for examples).\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2019-11-27T15:39:18Z",
        "comment": "Now fixed; I was trying to roll all changes together so I just snarfed the text you suggested, but missed the []. I took the opportunity to put them both around the [PR #nnn] expression."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/bigop.v",
        "date": "2019-11-27T15:44:53Z",
        "comment": "Sorry about that I got confused about the description that comes below."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/bigop.v",
        "date": "2019-11-27T15:51:22Z",
        "comment": "I believe the lemma you wanted to cite was `big_distr_big_dep`"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/ssreflect/bigop.v",
        "date": "2019-11-27T16:14:10Z",
        "comment": "Right again (& fixed...)"
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "ggonthier",
        "committer": "ggonthier",
        "hash": "4bd5ba38e4f6c6456a8fcc39364a67b51fde92f2",
        "message": "Explicit `bigop` enumeration handling\n\nAdded lemmas `big_enum_cond`, `big_enum` and `big_enumP` to handle more\nexplicitly big ops iterating over explicit enumerations in a `finType`.\n   The previous practice was to rely on the convertibility between\n`enum A` and `filter A (index_enum T)`, sometimes explicitly via the\n`filter_index_enum` equality, more often than not implicitly.\n  Both are likely to fail after the integration of `finmap`, as the\n`choiceType` theory can’t guarantee that the order in selected\nenumerations is consistent.\n  For this reason `big_enum` and the related (but currently unused)\n`big_image` lemmas are restricted to the abelian case. The `big_enumP`\nlemma can be used to handle enumerations in the non-abelian case, as\nexplained in the `bigop.v` internal documentation.\n  The Changelog entry enjoins clients to stop relying on either\n`filter_index_enum` and convertibility (though this PR still provides\nboth), and warns about the restriction of the `big_image` lemma set to\nthe abelian case, as it it a possible source of incompatibility.",
        "date": "2019-11-27T16:13:20Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 439,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 0,
        "deletions": 2
      }
    ],
    "state": "merged",
    "open_date": "2019-11-25T14:32:35Z",
    "update_date": "2019-11-28T14:49:17Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2019-11-27T02:26:48Z",
        "comment": "fixed by #261 "
      }
    ],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: fix",
        "description": "PR that fixes a bug. Please refer to the appropriate issue(s) if relevant."
      }
    ],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "web-flow",
        "hash": "bfab7af44aea55a50e09fa8a5040cb2e1ba54e4a",
        "message": "remove duplicated sentence in CHANGELOG_UNRELEASED",
        "date": "2019-11-25T14:32:10Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 438,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/finset.v",
        "status": "M",
        "additions": 2,
        "deletions": 2
      }
    ],
    "state": "merged",
    "open_date": "2019-11-24T15:59:48Z",
    "update_date": "2019-11-24T18:29:52Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "bd308dab655e37275afc3fd33ed80cb73647a9ae",
        "message": "Fix hint declarations to specify the database explicitly",
        "date": "2019-11-24T15:50:35Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 437,
    "diff_summary": [
      {
        "file": ".gitignore",
        "status": "M",
        "additions": 2,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2019-11-23T02:56:57Z",
    "update_date": "2019-11-23T14:06:01Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "c7b3c0aaee252816d78be33c4d7f1302962d4b79",
        "message": "Add *.vos and *.vok to .gitignore",
        "date": "2019-11-22T11:46:40Z"
      }
    ]
  },
  {
    "author": "anton-trunov",
    "number": 435,
    "diff_summary": [
      {
        "file": ".gitlab-ci.yml",
        "status": "M",
        "additions": 20,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2019-11-21T09:53:18Z",
    "update_date": "2020-01-09T09:09:13Z",
    "discussion": [
      {
        "author": "pi8027",
        "date": "2020-01-07T04:51:32Z",
        "comment": "@anton-trunov Could you rebase this, so that PR #429 can benefit from this? Or, can we merge this now? cc: @CohenCyril "
      },
      {
        "author": "anton-trunov",
        "date": "2020-01-07T10:12:08Z",
        "comment": "I'd be very much in favor of just merging it as it is -- the change seems to be pretty trivial and `fcsl-pcm` builds in about 35-40 seconds on my machine, so it wouldn't make much impact on the build times for Mathcomp's CI."
      },
      {
        "author": "CohenCyril",
        "date": "2020-01-07T17:59:05Z",
        "comment": "Hi, I do think we have a policy yet on what to integrate to mathcomp CI, I am fine with integrating fcsl-pcm to the CI, but I would like that it is discussed during the math-comp.\r\nAlso I prefer this is rebased just before merging to check that the current version of fcsl-pcm is indeed compatible with the latest dev version of mathcomp."
      },
      {
        "author": "anton-trunov",
        "date": "2020-01-07T18:44:15Z",
        "comment": "Hi Cyril,\r\nOh, you just wanted to restart the CI (I was confused by the fact that there was no merge conflicts).\r\nDone."
      },
      {
        "author": "CohenCyril",
        "date": "2020-01-07T19:33:31Z",
        "comment": "> Oh, you just wanted to restart the CI (I was confused by the fact that there was no merge conflicts).\r\n\r\nI wanted to restart the CI on the latest codebase (hence the need to rebase on master first)."
      },
      {
        "author": "pi8027",
        "date": "2020-01-08T01:12:05Z",
        "comment": "Thanks anyway. Now I see PR #429 doesn't break FCSL-PCM."
      },
      {
        "author": "anton-trunov",
        "date": "2020-01-08T07:52:26Z",
        "comment": "> I wanted to restart the CI on the latest codebase (hence the need to rebase on master first).\r\n\r\nIndeed, that's very reasonable (I just forgot to mention that I recently tested against the latest Mathcomp version in FCSL-PCM's own CI)\r\n\r\n> Thanks anyway. Now I see PR #429 doesn't break FCSL-PCM.\r\n\r\nAwesome! Thank you."
      }
    ],
    "review_discussion": [
      {
        "author": "ybertot",
        "file": ".gitlab-ci.yml",
        "date": "2019-11-21T13:52:21Z",
        "comment": "I will soon be preparing the release for math-comp 1.10.0.  I don't expect this Pull Request to be part of this release.  Please react if my expectation is wrong."
      },
      {
        "author": "anton-trunov",
        "file": ".gitlab-ci.yml",
        "date": "2019-11-21T13:56:38Z",
        "comment": "I think this is fine. It would be great though to merge this PR before merging some other PRs that may introduce breaking changes, e.g. #429."
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "anton-trunov",
        "committer": "anton-trunov",
        "hash": "57e132f3e42fe73d7ee0a7d263b48246bc712b67",
        "message": "Add FCSL-PCM library to CI\n\nFCSL-PCM is in Coq's CI, so this will prevent breaking Coq's CI, see\nhttps://github.com/imdea-software/fcsl-pcm/issues/17",
        "date": "2020-01-07T18:03:22Z"
      }
    ]
  },
  {
    "author": "ggonthier",
    "number": 434,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 405,
        "deletions": 379
      },
      {
        "file": "mathcomp/algebra/intdiv.v",
        "status": "M",
        "additions": 405,
        "deletions": 379
      },
      {
        "file": "mathcomp/algebra/mxalgebra.v",
        "status": "M",
        "additions": 405,
        "deletions": 379
      },
      {
        "file": "mathcomp/algebra/mxpoly.v",
        "status": "M",
        "additions": 405,
        "deletions": 379
      },
      {
        "file": "mathcomp/algebra/poly.v",
        "status": "M",
        "additions": 405,
        "deletions": 379
      },
      {
        "file": "mathcomp/algebra/polyXY.v",
        "status": "M",
        "additions": 405,
        "deletions": 379
      },
      {
        "file": "mathcomp/algebra/polydiv.v",
        "status": "M",
        "additions": 405,
        "deletions": 379
      },
      {
        "file": "mathcomp/algebra/ssrnum.v",
        "status": "M",
        "additions": 405,
        "deletions": 379
      },
      {
        "file": "mathcomp/character/mxrepresentation.v",
        "status": "M",
        "additions": 405,
        "deletions": 379
      },
      {
        "file": "mathcomp/field/algebraics_fundamentals.v",
        "status": "M",
        "additions": 405,
        "deletions": 379
      },
      {
        "file": "mathcomp/field/algnum.v",
        "status": "M",
        "additions": 405,
        "deletions": 379
      },
      {
        "file": "mathcomp/field/closed_field.v",
        "status": "M",
        "additions": 405,
        "deletions": 379
      },
      {
        "file": "mathcomp/field/cyclotomic.v",
        "status": "M",
        "additions": 405,
        "deletions": 379
      },
      {
        "file": "mathcomp/field/fieldext.v",
        "status": "M",
        "additions": 405,
        "deletions": 379
      },
      {
        "file": "mathcomp/field/galois.v",
        "status": "M",
        "additions": 405,
        "deletions": 379
      },
      {
        "file": "mathcomp/field/separable.v",
        "status": "M",
        "additions": 405,
        "deletions": 379
      },
      {
        "file": "mathcomp/fingroup/fingroup.v",
        "status": "M",
        "additions": 405,
        "deletions": 379
      },
      {
        "file": "mathcomp/fingroup/gproduct.v",
        "status": "M",
        "additions": 405,
        "deletions": 379
      },
      {
        "file": "mathcomp/fingroup/perm.v",
        "status": "M",
        "additions": 405,
        "deletions": 379
      },
      {
        "file": "mathcomp/solvable/abelian.v",
        "status": "M",
        "additions": 405,
        "deletions": 379
      },
      {
        "file": "mathcomp/solvable/alt.v",
        "status": "M",
        "additions": 405,
        "deletions": 379
      },
      {
        "file": "mathcomp/solvable/extraspecial.v",
        "status": "M",
        "additions": 405,
        "deletions": 379
      },
      {
        "file": "mathcomp/solvable/extremal.v",
        "status": "M",
        "additions": 405,
        "deletions": 379
      },
      {
        "file": "mathcomp/solvable/gseries.v",
        "status": "M",
        "additions": 405,
        "deletions": 379
      },
      {
        "file": "mathcomp/solvable/hall.v",
        "status": "M",
        "additions": 405,
        "deletions": 379
      },
      {
        "file": "mathcomp/solvable/jordanholder.v",
        "status": "M",
        "additions": 405,
        "deletions": 379
      },
      {
        "file": "mathcomp/solvable/maximal.v",
        "status": "M",
        "additions": 405,
        "deletions": 379
      },
      {
        "file": "mathcomp/solvable/nilpotent.v",
        "status": "M",
        "additions": 405,
        "deletions": 379
      },
      {
        "file": "mathcomp/solvable/pgroup.v",
        "status": "M",
        "additions": 405,
        "deletions": 379
      },
      {
        "file": "mathcomp/solvable/sylow.v",
        "status": "M",
        "additions": 405,
        "deletions": 379
      },
      {
        "file": "mathcomp/ssreflect/bigop.v",
        "status": "M",
        "additions": 405,
        "deletions": 379
      },
      {
        "file": "mathcomp/ssreflect/binomial.v",
        "status": "M",
        "additions": 405,
        "deletions": 379
      },
      {
        "file": "mathcomp/ssreflect/choice.v",
        "status": "M",
        "additions": 405,
        "deletions": 379
      },
      {
        "file": "mathcomp/ssreflect/div.v",
        "status": "M",
        "additions": 405,
        "deletions": 379
      },
      {
        "file": "mathcomp/ssreflect/path.v",
        "status": "M",
        "additions": 405,
        "deletions": 379
      },
      {
        "file": "mathcomp/ssreflect/prime.v",
        "status": "M",
        "additions": 405,
        "deletions": 379
      },
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 405,
        "deletions": 379
      },
      {
        "file": "mathcomp/ssreflect/ssrnat.v",
        "status": "M",
        "additions": 405,
        "deletions": 379
      }
    ],
    "state": "merged",
    "open_date": "2019-11-20T15:53:46Z",
    "update_date": "2019-11-22T09:02:05Z",
    "discussion": [
      {
        "author": "gares",
        "date": "2019-11-22T13:12:52Z",
        "comment": "I arrive a bit late, but my suggestion can be applied a posteriori.\r\n\r\nI believe the *diff* of this PR is very relevant for the user willing to port his files. It may be nice to have a pointer to this PR or this commit in the changelog, eg \"This commit ports math-comp to the new idiom: <link>\".\r\n\r\n"
      }
    ],
    "review_discussion": [
      {
        "author": "amahboubi",
        "file": "mathcomp/fingroup/perm.v",
        "date": "2019-11-21T07:43:55Z",
        "comment": "This idiom seems to indicate that allowing `suff <intro-pat> := ...` would be useful. "
      },
      {
        "author": "ybertot",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2019-11-21T07:46:10Z",
        "comment": "mesures --> measures"
      },
      {
        "author": "amahboubi",
        "file": "mathcomp/solvable/abelian.v",
        "date": "2019-11-21T07:49:30Z",
        "comment": "Why is this `clearbody` needed? Also, I though that the idiom would by `by clearbody n`, with `by []` used only before a dot."
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/solvable/abelian.v",
        "date": "2019-11-21T08:50:30Z",
        "comment": "The `clearbody n` is executed _after_ the `have`, whose proof relies on `n` being convertible to `#|G|`. It is needed because the following line needs to abstract `n` _after_ `G`; without it Coq would complain that \"`G` occurs in `n`\". Alternatively I could have rewritten that line\r\n```\r\nelim: {G}n (G) => // n G ...\r\n```\r\nbut I felt the `clearbody` was more self-contained.\r\nI also considered adding a helper lemma in `ssrnat` to support this idiom:\r\n```\r\nVariant ubn_leq_spec m : nat -> Type := UbnLeq n of m <= n : ubn_leq_spec m n.\r\nLemma ubnPleq m : ubn_leq_spec m m. Proof. by []. Qed.\r\n```\r\nalongside a similar one for `==`, but in the end decided against this because there were relatively few instances. I can restore them by popular demand."
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/fingroup/perm.v",
        "date": "2019-11-21T08:57:16Z",
        "comment": "It would be a somewhat awkward tactic, because `have ... := ...` does not usually generate two subgoals. It only does so here because the statement of `IHn s` has the form `premise -> inductive`. This it is very much a special case; if there were more premises more subgoals would be generated."
      },
      {
        "author": "ggonthier",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2019-11-21T09:01:51Z",
        "comment": "Well spotted; should I also include the more direct call for clients to update as well (which I added to the PR description), perhaps splitting the paragraph between the `Added` and `Changed` sections?"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/solvable/abelian.v",
        "date": "2019-11-21T09:12:01Z",
        "comment": "I prefer a helper lemma.\r\nHowever the `have [] := ubnPleq x` you suggest abstracts all occurences of `x` in the goal while `have [] := ubnP x` does not, so the apparent similarity in naming could be misleading..."
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/solvable/abelian.v",
        "date": "2019-11-21T09:19:28Z",
        "comment": "There's nothing to abstract to in `ubnP M`, because the bound produced is `M.+1`. To be precise, `have [n] := ubnP M` could only replace `M` with `n.-1`, which is fairly unnatural behaviour likely to yield unusable induction hypotheses."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/solvable/abelian.v",
        "date": "2019-11-21T09:24:01Z",
        "comment": "OK then I am all in for your `ubnPleq`."
      },
      {
        "author": "ybertot",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2019-11-21T09:27:48Z",
        "comment": "I agree adding the direct call for clients to update is a good use of the CHANGELOG file."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/solvable/abelian.v",
        "date": "2019-11-21T09:34:15Z",
        "comment": "Alternatively if you want to factor the cases for `<=` and `==`, we could have\r\n```coq\r\nVariant ub_spec T x (r : rel T) : T -> Type := UbRefl y of r x y : ub_spec x r y.\r\nLemma ubP T (r : rel T) x : r x x -> ub_spec x r x. Proof. by []. Qed.\r\n\r\nLemma test P (m : nat) : P m.\r\nhave [n] := ubP (leqnn m).\r\nRestart.\r\nhave [n] := ubP (eqxx m).\r\nAbort.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/solvable/abelian.v",
        "date": "2019-11-21T10:12:39Z",
        "comment": "I believe it would be counter-productive to have to state the proof of the (in)equality. The name `ubP` wouldn't be appropriate, because it is actually a helper lemma for selectively abstracting the argument of a bool predicate, which doesn't cover that many use cases. I'd rather use the tactic language and its context selectors in such cases. To give an example, `upP` couldn't be used to generalise `G : {group gT}` as an `H \\subset G`, because `G` actually occurs as `(mem (gval G))` in the type `G \\subset G` of `subxx G G`."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/solvable/abelian.v",
        "date": "2019-11-21T10:32:34Z",
        "comment": "Oh! right..."
      },
      {
        "author": "amahboubi",
        "file": "mathcomp/fingroup/perm.v",
        "date": "2019-11-21T14:38:32Z",
        "comment": "Oh sure, I see now that my suggestion is pointless. I guess I would have created a separate, preliminary,  `have` for the proof of the premise in this case.I'm resolving the conversation anyway."
      },
      {
        "author": "amahboubi",
        "file": "mathcomp/solvable/abelian.v",
        "date": "2019-11-21T20:21:51Z",
        "comment": "@CohenCyril is this conversation resolved?\r\n"
      },
      {
        "author": "amahboubi",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2019-11-21T20:23:11Z",
        "comment": "@ggonthier I propose to merge as soon as you implement @ybertot 's suggestion."
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/fingroup/perm.v",
        "date": "2019-11-22T01:24:38Z",
        "comment": "That last remark is actually a good stylistic improvement, which I've implemented."
      },
      {
        "author": "ggonthier",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2019-11-22T01:26:26Z",
        "comment": "Done (and squashed), along with the inclusion of the additional helpers that arose from the conversation with @CohenCyril."
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "ggonthier",
        "committer": "ggonthier",
        "hash": "311ae6a1f9e1e22866f1c6ff3afb67e03987af96",
        "message": "New generalised induction idiom\n\nReplaced the legacy generalised induction idiom with a more robust one\nthat does not rely on the `{-2}` numerical occurrence selector, using\neither new helper lemmas `ubnP` and `ltnSE` or a specific `nat`\ninduction principle `ltn_ind`.\n\nAdded (non-strict in)equality induction helper lemmas\n\n  Added `ubnP[lg]?eq` helper lemmas that abstract an integer expression\nalong with some (in)equality, in preparation for some generalised\ninduction. Note that while `ubnPleq` is very similar to `ubnP` (indeed\n`ubnP M` is basically `ubnPleq M.+1`), `ubnPgeq` is used to remember\nthat the inductive value remains below the initial one.\n  Used the change log to give notice to users to update the generalised\ninduction idioms in their proofs to one of the new forms before\nMathcomp 1.11.",
        "date": "2019-11-22T01:15:49Z"
      }
    ]
  },
  {
    "author": "gares",
    "number": 433,
    "diff_summary": [
      {
        "file": ".gitignore",
        "status": "A",
        "additions": 213,
        "deletions": 4
      },
      {
        "file": ".gitlab-ci.yml",
        "status": "A",
        "additions": 213,
        "deletions": 4
      },
      {
        "file": "mathcomp/Make.test-suite",
        "status": "A",
        "additions": 213,
        "deletions": 4
      },
      {
        "file": "mathcomp/Makefile.common",
        "status": "A",
        "additions": 213,
        "deletions": 4
      },
      {
        "file": "mathcomp/Makefile.test-suite.coq.local",
        "status": "A",
        "additions": 213,
        "deletions": 4
      },
      {
        "file": "mathcomp/test_suite/output.v",
        "status": "A",
        "additions": 213,
        "deletions": 4
      },
      {
        "file": "mathcomp/test_suite/output.v.out",
        "status": "A",
        "additions": 213,
        "deletions": 4
      },
      {
        "file": "mathcomp/test_suite/output.v.out.8.7",
        "status": "A",
        "additions": 213,
        "deletions": 4
      },
      {
        "file": "mathcomp/test_suite/output.v.out.8.8",
        "status": "A",
        "additions": 213,
        "deletions": 4
      },
      {
        "file": "mathcomp/test_suite/output.v.out.8.9",
        "status": "A",
        "additions": 213,
        "deletions": 4
      }
    ],
    "state": "merged",
    "open_date": "2019-11-18T17:02:08Z",
    "update_date": "2020-09-17T15:46:06Z",
    "discussion": [
      {
        "author": "gares",
        "date": "2019-11-18T17:11:33Z",
        "comment": "For the reviewers:\r\n- please suggest other lemmas to be printed and scopes to be opened"
      },
      {
        "author": "gares",
        "date": "2019-11-18T17:38:27Z",
        "comment": "CI should test if coq/coq#11090 (that I used as the reference output) agrees with Coq 8.9.\r\nCoq 8.10 prints coercions, so there it will fail."
      },
      {
        "author": "pi8027",
        "date": "2019-11-19T02:33:17Z",
        "comment": "Also `mathcomp/Make.test-suite` have to be changed. Currently, the test-suite facility is invoked only from `make-coq-latest` and not invoked from `coq-8.9` and `coq-8.10` in CI. (see `Dockerfile.make` and `.gitlab-ci.yml`.)"
      },
      {
        "author": "ybertot",
        "date": "2020-03-25T14:30:00Z",
        "comment": "@gares, do you confirm that this PR should be in release 1.11"
      },
      {
        "author": "gares",
        "date": "2020-03-26T16:04:18Z",
        "comment": "We don't really care since it is not for the final user, it is for us and for the coq devs.\r\n\r\nBut I completely forgot about this PR, thanks for the heads up"
      },
      {
        "author": "CohenCyril",
        "date": "2020-08-25T12:11:20Z",
        "comment": "@gares I think this PR is of extreme importance to prevent Coq regressions going under the radar.\r\n@maximedenes can I assign you to \"torture\" @gares?"
      },
      {
        "author": "maximedenes",
        "date": "2020-08-25T16:24:14Z",
        "comment": "> can I assign you to \"torture\" @gares?\r\n\r\nSure, sounds like something I could do ;)"
      },
      {
        "author": "ejgallego",
        "date": "2020-08-26T14:12:58Z",
        "comment": "Note that if #316 is merged, dune does provide some built-in support for this "
      },
      {
        "author": "gares",
        "date": "2020-09-07T14:39:57Z",
        "comment": "I've revived this. It would be nice to have a second round of review on CI & Docker since I'm really not an expert there."
      },
      {
        "author": "CohenCyril",
        "date": "2020-09-07T14:47:21Z",
        "comment": "@erikmd would you mind taking a look?"
      },
      {
        "author": "erikmd",
        "date": "2020-09-09T11:28:16Z",
        "comment": "@CohenCyril yes, I plan to have a look today (otherwise ping me!)"
      },
      {
        "author": "gares",
        "date": "2020-09-09T13:19:39Z",
        "comment": "It requires some fixes. In particular you can provide a different output reference depending on the version of Coq (plus a default one). I must have messed things up, so the reference for 8.12 is OK, the default one is wrong (my intent was to have it for < 8.12) and the 8.13 reference is wrong as well. Anyway, fixing the reference files should be orthogonal to the infrastructure."
      },
      {
        "author": "erikmd",
        "date": "2020-09-10T13:53:31Z",
        "comment": "BTW, a related question:\r\nare you interested in keeping the generated files `test_suite/output.v.out.new` as build artifacts? (e.g., with an expiration of 1 month)"
      },
      {
        "author": "gares",
        "date": "2020-09-10T14:07:01Z",
        "comment": "the diff in the log is enough I guess, but why not.\r\n"
      },
      {
        "author": "erikmd",
        "date": "2020-09-10T16:24:08Z",
        "comment": "@gares\r\n\r\n> the diff in the log is enough I guess, but why not.\r\n\r\nOK so maybe it is unnecessary (otherwise you might want to add an `artifacts` spec after these `script` lines below)\r\n\r\n```yaml\r\n  script:\r\n    - cd mathcomp\r\n    - make test-suite \r\n  artifacts:\r\n    name: \"output-test_$CI_JOB_NAME\"\r\n    when: always\r\n    paths:\r\n      - mathcomp/test_suite/*.v.out.new\r\n    expire_in: 1 month\r\n```\r\n\r\nAnyway, don't forget to remove the line\r\n```\r\n- docker run --mount \"type=bind,source=$(pwd),target=/home/coq/mathcomp\" -w /home/coq/mathcomp -t \"${IMAGE}\" /bin/bash --login -c \"set -x; cd mathcomp; make test-suite\"\r\n```\r\n(which is subsumed by the `test-*` jobs)"
      },
      {
        "author": "erikmd",
        "date": "2020-09-11T11:13:33Z",
        "comment": "It seems there are two remaining issues:\r\n\r\n1. `make test-suite` rebuilds the whole mathcomp (instead of relying on the installed `.vo`s): https://gitlab.com/math-comp/math-comp/-/jobs/732817696#L188 (this is somewhat related to the (incomplete) change https://github.com/math-comp/math-comp/pull/433/commits/ff61778018f5eff362a50e48e5b3fd30dec962d2); I guess it might be desirable that an **environment variable** commands whether `make test-suite` behaves like this by default (rebuilding/testing the local `.v`s), or does not recompile the files and assume that e.g. `make install` has already be done (?)\r\n2. for some reason, the `diff` is performed with `test_suite/output.v.out` instead of `test_suite/output.v.out.8.9` (?): https://gitlab.com/math-comp/math-comp/-/jobs/732817696#L327"
      },
      {
        "author": "gares",
        "date": "2020-09-11T12:04:06Z",
        "comment": "For 1. I miss there the dependency is. Do you know? I'm fine with the env variable thing, but I could not find where to use it."
      },
      {
        "author": "gares",
        "date": "2020-09-11T14:35:50Z",
        "comment": "I think I found it. Let's see how CI goes"
      },
      {
        "author": "erikmd",
        "date": "2020-09-11T20:26:43Z",
        "comment": "Hi @gares,\r\n\r\nthe pipeline failed (so I cancelled it to avoid running the remaining jobs needlessly)\r\nbecause IIUC, the `all.vo` file is not installed by opam install.\r\n\r\ncf. https://gitlab.com/math-comp/math-comp/-/jobs/734043221\r\n```\r\n$ make test-suite TEST_SKIP_BUILD=1\r\nCOQBIN=/home/coq/.opam/4.07.1+flambda/bin/ ocaml ../etc/utils/hierarchy.ml -verify -R . mathcomp -lib all.all > test_suite/test_hierarchy_all.v\r\n/home/coq/.opam/4.07.1+flambda/bin/coq_makefile  -f Make.test-suite -o Makefile.test-suite.coq\r\nmake -f Makefile.test-suite.coq VDFILE=\".coqdeps.test-suite\" --no-print-directory\r\nCOQDEP VFILES\r\nmake[2]: *** No rule to make target 'all/all.vo', needed by 'test_suite/test_hierarchy_all.vo'.  Stop.\r\nmake[1]: *** [Makefile.test-suite.coq:339: all] Error 2\r\nmake: *** [Makefile.common:96: this-test-suite] Error 2\r\nERROR: Job failed: exit code 1\r\n```\r\n\r\nHopefully just reverting this commit https://github.com/math-comp/math-comp/commit/ff61778018f5eff362a50e48e5b3fd30dec962d2\r\n(and keeping your other change dealing with `TEST_SKIP_BUILD=1`) would be OK, to compile `all.vo` and *just* `all.vo`(?)"
      },
      {
        "author": "pi8027",
        "date": "2020-09-11T21:24:39Z",
        "comment": "I think it is acceptable to replace this `-lib all.all` with `-lib all_ssreflect -lib all_algebra ... -lib all_character` to avoid the issue with `all.vo`.\r\nhttps://github.com/math-comp/math-comp/blob/c2e7bad5c95a11f42f9f6d282ee2e5d84e27cbed/mathcomp/Makefile.common#L60"
      },
      {
        "author": "gares",
        "date": "2020-09-12T15:36:50Z",
        "comment": "I guess I need to remove the -R as well"
      },
      {
        "author": "pi8027",
        "date": "2020-09-13T04:50:50Z",
        "comment": "> I guess I need to remove the -R as well\r\n\r\n@gares Removing `-R . mathcomp` breaks the `test-suite` target (without installation). Should we rather pass the `COQLIBS` variable of `Makefile.test-suite.coq` to `hierarchy.ml` and use it to locate libraries?"
      },
      {
        "author": "gares",
        "date": "2020-09-14T11:49:20Z",
        "comment": "I've the impression that the `Make.test-suite` is not designed work in both local and system wide modes.\r\n\r\nWhat one could do is to have the file contain no `-R` and, depending on the mode (a variable), invoke `coq_makefile -f Make.test-suite -R . mathcomp` or `coq_makefile -f Make.test-suite -R test_suite mathcomp.test_suite`.\r\n\r\nIs what you propose simpler/cleaner? (I'm not sure I get it)"
      },
      {
        "author": "gares",
        "date": "2020-09-14T18:17:41Z",
        "comment": "This looks finally ready for squash+merge!"
      },
      {
        "author": "erikmd",
        "date": "2020-09-14T20:31:12Z",
        "comment": ":+1:\r\nand the night after the squash+merge, we'll just need to check that the new job `test-coq-dev` is properly triggered in the scheduled [pipeline](https://gitlab.com/math-comp/math-comp/-/pipelines)."
      },
      {
        "author": "CohenCyril",
        "date": "2020-09-15T13:39:16Z",
        "comment": "Before merge I have few questions : how many tests should we perform? Would it be possible to test intermediate statements? (i.e. after application of a few tactics).\r\n"
      },
      {
        "author": "gares",
        "date": "2020-09-15T15:09:01Z",
        "comment": "> Before merge I have few questions : how many tests should we perform? Would it be possible to test intermediate statements? (i.e. after application of a few tactics).\r\n\r\nHow many I don't know, the only limit is about maintenance, if the statement changes or Coq changes (while staying correct) then the test reference output may need an update.\r\n\r\nYes, just start a proof and write `Show.` when you feel like the goal is interesting."
      },
      {
        "author": "gares",
        "date": "2020-09-15T15:13:46Z",
        "comment": "As a start it would help to have some tests covering rings, polynomials, lattices and matrices for example, since the statement I picked covers many group stuff, some set and seq stuff as well, but not much more. But not in this PR ;-)"
      },
      {
        "author": "gares",
        "date": "2020-09-16T08:35:59Z",
        "comment": "ping @maximedenes "
      },
      {
        "author": "CohenCyril",
        "date": "2020-09-17T15:46:02Z",
        "comment": "OK! I'm taking the lead and merging."
      }
    ],
    "review_discussion": [
      {
        "author": "pi8027",
        "file": "mathcomp/Makefile.coq.local",
        "date": "2019-11-18T23:23:12Z",
        "comment": "This should be placed at `Makefile.test-suite.local`. Currently, the use of `coq_makefile` is split into two parts: the library and test-suite, because generating `test_suite/hierarchy_test.v` requires `all/all.vo`."
      },
      {
        "author": "erikmd",
        "file": "mathcomp/Makefile.test-suite.coq.local",
        "date": "2020-09-10T11:54:08Z",
        "comment": "These two lines could be simplified/merged, doing just:\r\n\r\n```suggestion\r\n\t  if ! diff -q \"$$REFERENCE\" \"$$f.out.new\"; \\\r\n```"
      },
      {
        "author": "erikmd",
        "file": "mathcomp/Makefile.test-suite.coq.local",
        "date": "2020-09-10T11:55:55Z",
        "comment": "Then this `echo` becomes unnecessary (`diff -q something something_else` already prints:\r\n\"Files something something_else differ\")\r\n\r\n```suggestion\r\n\t    then diff -u \"$$REFERENCE\" \"$$f.out.new\"; \\\r\n```"
      },
      {
        "author": "erikmd",
        "file": ".gitlab-ci.yml",
        "date": "2020-09-10T12:04:23Z",
        "comment": "This command works but the place where it is run is suboptimal. More precisely:\r\nIt runs `make test-suite` (existing tests + notation test) for each version of Coq, which is very fine, but these tests should ideally be separated from the build job to \"separate concerns\", so that:\r\n\r\n* the other stages don't wait too much to be started (otherwise it would take [42'](https://gitlab.com/math-comp/math-comp/-/jobs/729111262) while it used to take [26'](https://gitlab.com/math-comp/math-comp/-/jobs/730243138)),\r\n* and a failure in this new notation test won't prevent other tests to be run.\r\n\r\nHowever, the change I suggest (cf. my main review post) should not prevent running these tests in the nightly build, so that we can be aware of any unexpected notation change from coq.dev."
      },
      {
        "author": "erikmd",
        "file": "mathcomp/Makefile.test-suite.coq.local",
        "date": "2020-09-10T12:07:55Z",
        "comment": "it seems [from the log](https://gitlab.com/math-comp/math-comp/-/jobs/729111262) that mathcomp is needlessly recompiled twice.\r\n\r\nI guess you should just remove the `all/all.vo` prerequisite, so that the `test_suite/output.v` compilation will rely on the existing build of mathcomp (installed by the CI job using opam)\r\n\r\n```suggestion\r\n$(OUTPUT_ARTIFACTS): %.v.out.new: %.v\r\n```"
      },
      {
        "author": "erikmd",
        "file": "mathcomp/Makefile.test-suite.coq.local",
        "date": "2020-09-11T11:26:21Z",
        "comment": "@gares \r\nI've just found the origin of issue 2. mentioned in https://github.com/math-comp/math-comp/pull/433#issuecomment-691033191 (variable name clash)\r\n\r\n```suggestion\r\nCOQ_VERSION_MINOR=$(shell $(COQC) -print-version | cut -d ' ' -f 1 | cut -d '.' -f 1-2)\r\n\r\n# Given a file f we compare its compilation output f.out.new with\r\n# f.out.COQ_VERSION_MINOR (or f.out if f.out.COQ_VERSION_MINOR does not exist)\r\npost-all:: $(OUTPUT_ARTIFACTS)\r\n\t@for f in $(OUTPUT_TESTS); do\\\r\n\t  if [ -e \"$$f.out.$(COQ_VERSION_MINOR)\" ]; then REFERENCE=\"$$f.out.$(COQ_VERSION_MINOR)\";\\\r\n```"
      }
    ],
    "tags": [
      {
        "tag": "kind: CI",
        "description": "Issue or PR about the CI. (Gitlab CI or CI of dependencies problems linked with math-comp)"
      }
    ],
    "commits": [
      {
        "author": "gares",
        "committer": "gares",
        "hash": "bc0a71056c24b29c8289395ee01740bb2ef7ad8d",
        "message": "[test suite] infrastructure to test how some statements are printed",
        "date": "2020-09-07T14:34:30Z"
      },
      {
        "author": "gares",
        "committer": "gares",
        "hash": "c0214cdb4a44261db539b48fb76dbdaded87312b",
        "message": "default reference file for < 8.12",
        "date": "2020-09-09T13:22:29Z"
      },
      {
        "author": "gares",
        "committer": "web-flow",
        "hash": "8bfcb13c1576a8d6e55dc7c732ec3bda5f5e4f7d",
        "message": "Update mathcomp/Makefile.test-suite.coq.local\n\nCo-authored-by: Erik Martin-Dorel <erik@martin-dorel.org>",
        "date": "2020-09-10T13:05:49Z"
      },
      {
        "author": "gares",
        "committer": "web-flow",
        "hash": "18edef73cdf0fb6671dbfb2e9d5829182a065919",
        "message": "Update mathcomp/Makefile.test-suite.coq.local\n\nCo-authored-by: Erik Martin-Dorel <erik@martin-dorel.org>",
        "date": "2020-09-10T13:06:07Z"
      },
      {
        "author": "gares",
        "committer": "web-flow",
        "hash": "ff61778018f5eff362a50e48e5b3fd30dec962d2",
        "message": "Update mathcomp/Makefile.test-suite.coq.local\n\nCo-authored-by: Erik Martin-Dorel <erik@martin-dorel.org>",
        "date": "2020-09-10T13:06:33Z"
      },
      {
        "author": "gares",
        "committer": "gares",
        "hash": "c7b1927d8072040d573757d543e2355e8280b9ee",
        "message": "new attempt",
        "date": "2020-09-10T15:45:13Z"
      },
      {
        "author": "gares",
        "committer": "gares",
        "hash": "39d3e313614d33b353978847f8d00d3fa2f2428f",
        "message": "fix",
        "date": "2020-09-10T15:49:43Z"
      },
      {
        "author": "gares",
        "committer": "gares",
        "hash": "8d17e971db2d29fad93443e730ee378ec768ba68",
        "message": "rm docker run",
        "date": "2020-09-11T07:49:04Z"
      },
      {
        "author": "gares",
        "committer": "gares",
        "hash": "f3ad9538962cd36d90ea3a6724125f448d7c0b10",
        "message": "fix 8.9, 8.8 and 8.7",
        "date": "2020-09-11T07:53:53Z"
      },
      {
        "author": "gares",
        "committer": "gares",
        "hash": "4c35b309ece8c57088dffd7bea0ef7878f1d8d12",
        "message": "coq 8.13 does not exists yet",
        "date": "2020-09-11T08:35:45Z"
      },
      {
        "author": "gares",
        "committer": "web-flow",
        "hash": "bcbf0850d771c889431fb8d3c073c41059268c05",
        "message": "Update mathcomp/Makefile.test-suite.coq.local\n\nCo-authored-by: Erik Martin-Dorel <erik@martin-dorel.org>",
        "date": "2020-09-11T11:55:40Z"
      },
      {
        "author": "gares",
        "committer": "gares",
        "hash": "a28ed91e0d3b2d03940c9b930ac516f0769f7e17",
        "message": "avoid rebuild",
        "date": "2020-09-11T20:34:58Z"
      },
      {
        "author": "gares",
        "committer": "gares",
        "hash": "cfa21928a5148f826e19aa5a78b83b5ed4e165b9",
        "message": "avoid all.vo",
        "date": "2020-09-12T11:24:47Z"
      },
      {
        "author": "gares",
        "committer": "gares",
        "hash": "755068fd34f0fa1e918123c4859aef2e89bedfca",
        "message": "test-suite works both in local and system wide mode",
        "date": "2020-09-14T11:58:24Z"
      },
      {
        "author": "gares",
        "committer": "gares",
        "hash": "38b28c7d9756da7d346a1866a4ce712b1c3472af",
        "message": "don't use all.v in output.v",
        "date": "2020-09-14T16:55:29Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 432,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 5,
        "deletions": 0
      },
      {
        "file": "mathcomp/ssreflect/ssrfun.v",
        "status": "M",
        "additions": 5,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2019-11-18T15:35:33Z",
    "update_date": "2019-11-22T10:07:28Z",
    "discussion": [
      {
        "author": "ybertot",
        "date": "2019-11-20T08:41:59Z",
        "comment": "LGTM"
      },
      {
        "author": "amahboubi",
        "date": "2019-11-22T09:04:51Z",
        "comment": "@ybertot should we merge this PR or do you want a real freeze before the upcoming release?"
      },
      {
        "author": "ybertot",
        "date": "2019-11-22T09:09:40Z",
        "comment": "My incompetence shines here.  I thought I had already merged this (and that I had made a mistake by not squashing the commits together).  If the merge is still in order, I think we should do it with a squash of the commits together.  In my opinion, this PR is perfectly fine for this release.  This why I tagged it for the milestone."
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "ec46a980d07b7fa63c093981cacad29f1734e86e",
        "message": "Added ssrfun theorem `inj_compr`",
        "date": "2019-11-18T15:34:02Z"
      }
    ]
  },
  {
    "author": "ppedrot",
    "number": 431,
    "diff_summary": [
      {
        "file": "mathcomp/algebra/mxpoly.v",
        "status": "M",
        "additions": 10,
        "deletions": 4
      },
      {
        "file": "mathcomp/field/algC.v",
        "status": "M",
        "additions": 10,
        "deletions": 4
      },
      {
        "file": "mathcomp/field/algnum.v",
        "status": "M",
        "additions": 10,
        "deletions": 4
      },
      {
        "file": "mathcomp/field/cyclotomic.v",
        "status": "M",
        "additions": 10,
        "deletions": 4
      }
    ],
    "state": "merged",
    "open_date": "2019-11-17T12:28:42Z",
    "update_date": "2020-04-09T12:10:19Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2019-11-19T16:21:17Z",
        "comment": "I am a bit nervous about this ... `Let` declarations pollute the goal display, and in this case for theorems that are `Hint Resolve`, hence meant to be transparent to the user. Is there a new \"invisible `Let`\" feature that I am not aware of?"
      },
      {
        "author": "ppedrot",
        "date": "2019-11-19T16:57:28Z",
        "comment": "@CohenCyril Alternatively we can define them inside the section if you prefer. Nonetheless, it seems that let-definitions are used pervasively in the mathcomp library."
      },
      {
        "author": "affeldt-aist",
        "date": "2020-03-25T14:41:53Z",
        "comment": "It seems to the release managers that this PR could make it to the upcoming release. Can you complete it?"
      },
      {
        "author": "affeldt-aist",
        "date": "2020-04-08T13:42:28Z",
        "comment": "We are thinking about merging this PR by tomorrow if nobody disagrees."
      }
    ],
    "review_discussion": [
      {
        "author": "gares",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2019-11-19T16:04:18Z",
        "comment": "In the rest of the PR you consistently use `Let` followed by `Local Hint` which seems fine. In this file, last two hunks, you use `Let` followed by `Hint`. Is it a problem?"
      },
      {
        "author": "gares",
        "file": "mathcomp/field/algnum.v",
        "date": "2019-11-19T16:06:30Z",
        "comment": "For example here the hint is `Local` but `intr_inj_ZtoC` stays (even if its name is always qualified)."
      },
      {
        "author": "ppedrot",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2019-11-19T16:16:16Z",
        "comment": "Doesn't matter, in a section hints are implicitly local."
      },
      {
        "author": "gares",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2019-11-19T22:24:20Z",
        "comment": "ok"
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "ppedrot",
        "committer": "affeldt-aist",
        "hash": "107954c7161e95f39c266fa7b9c2fa8d2498d724",
        "message": "Remove hint declarations using non-global definitions.",
        "date": "2020-04-07T15:13:38Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 429,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 220,
        "deletions": 186
      },
      {
        "file": "mathcomp/algebra/polydiv.v",
        "status": "M",
        "additions": 220,
        "deletions": 186
      },
      {
        "file": "mathcomp/algebra/ssrnum.v",
        "status": "M",
        "additions": 220,
        "deletions": 186
      },
      {
        "file": "mathcomp/solvable/abelian.v",
        "status": "M",
        "additions": 220,
        "deletions": 186
      },
      {
        "file": "mathcomp/solvable/extremal.v",
        "status": "M",
        "additions": 220,
        "deletions": 186
      },
      {
        "file": "mathcomp/ssreflect/div.v",
        "status": "M",
        "additions": 220,
        "deletions": 186
      },
      {
        "file": "mathcomp/ssreflect/fintype.v",
        "status": "M",
        "additions": 220,
        "deletions": 186
      },
      {
        "file": "mathcomp/ssreflect/order.v",
        "status": "M",
        "additions": 220,
        "deletions": 186
      },
      {
        "file": "mathcomp/ssreflect/prime.v",
        "status": "M",
        "additions": 220,
        "deletions": 186
      },
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 220,
        "deletions": 186
      },
      {
        "file": "mathcomp/ssreflect/ssrnat.v",
        "status": "M",
        "additions": 220,
        "deletions": 186
      }
    ],
    "state": "merged",
    "open_date": "2019-11-15T23:37:50Z",
    "update_date": "2020-04-01T11:20:33Z",
    "discussion": [
      {
        "author": "pi8027",
        "date": "2020-01-30T10:17:10Z",
        "comment": "I just changed the title and resolved a conflict with #453. Since `order.v` has not been released yet, I'm still not sure how it should be recorded in CHANGELOG."
      },
      {
        "author": "pi8027",
        "date": "2020-03-18T07:20:59Z",
        "comment": "Hello @ggonthier, @CohenCyril, can we merge this before the next beta release? Thanks."
      },
      {
        "author": "ybertot",
        "date": "2020-03-25T14:05:54Z",
        "comment": "There remains a tag \"Needs:documentation\" that is confusing for release managers.  Can you please clarify, complete the work if needed, and merge?  @CohenCyril @ggonthier "
      },
      {
        "author": "CohenCyril",
        "date": "2020-03-25T15:22:26Z",
        "comment": "> There remains a tag \"Needs:documentation\" that is confusing for release managers. Can you please clarify, complete the work if needed, and merge? @CohenCyril @ggonthier\r\n\r\nI was a bit worried about the backward compatibility issues triggered by this PR, but after @pi8027's experiments, it does not not look so bad. I also thought @ggonthier could be opposed to it for the same reasons (or others?). I think we can merge for the beta and backtrack if this causes more trouble than relief to our users (in the former case, we could have distinct spec lemmas for the enhanced cased analysis instead of overloading `leqP`...)."
      },
      {
        "author": "ybertot",
        "date": "2020-04-01T11:21:15Z",
        "comment": "Thanks @pi8027 @CohenCyril "
      }
    ],
    "review_discussion": [
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/ssrnat.v",
        "date": "2019-11-23T00:54:43Z",
        "comment": "Currently, this ordering is the same as in `order.v` but probably should be `(minn n m) (minn m n) (maxn n m) (maxn m n) (m <= n) (n < m)`."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/ssrnat.v",
        "date": "2020-01-03T15:03:17Z",
        "comment": "Done. I also changed `order.v` accordingly."
      },
      {
        "author": "pi8027",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2020-03-16T08:42:54Z",
        "comment": "So I did this documentation work. Since we decided to have a beta release, I think we should keep this entry in the beta version and remove it in the stable release."
      },
      {
        "author": "CohenCyril",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2020-03-18T11:49:30Z",
        "comment": "I agree"
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "85039b4c536a67ce936c079f519a9a8b6c33f1d6",
        "message": "Extend comparison predicates for nat with minn and maxn",
        "date": "2020-03-15T05:11:47Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "bdb23c100648a7e1b055d90a76eedbff9eef12f4",
        "message": "Reorder arguments of comparison predicates in order.v as they should",
        "date": "2020-03-15T05:11:47Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "5f1229849aa90f64cf0126f47c622152383ba118",
        "message": "Document change on comparison predicates in order.v",
        "date": "2020-03-16T08:39:00Z"
      }
    ]
  },
  {
    "author": "maximedenes",
    "number": 428,
    "diff_summary": [
      {
        "file": "etc/buildlibgraph",
        "status": "A",
        "additions": 185,
        "deletions": 2
      },
      {
        "file": "mathcomp/Makefile.common",
        "status": "A",
        "additions": 185,
        "deletions": 2
      }
    ],
    "state": "merged",
    "open_date": "2019-11-15T18:30:41Z",
    "update_date": "2019-11-27T11:48:24Z",
    "discussion": [
      {
        "author": "gares",
        "date": "2019-11-25T14:27:44Z",
        "comment": "Pending PR: https://github.com/maximedenes/math-comp/pull/2"
      },
      {
        "author": "maximedenes",
        "date": "2019-11-25T15:22:07Z",
        "comment": "I'll rebase to make the history simpler."
      },
      {
        "author": "maximedenes",
        "date": "2019-11-25T15:23:40Z",
        "comment": "done"
      },
      {
        "author": "CohenCyril",
        "date": "2019-11-25T17:05:56Z",
        "comment": "@ybertot can you review this PR since you are going to use it?"
      },
      {
        "author": "CohenCyril",
        "date": "2019-11-25T17:07:28Z",
        "comment": "PS: I guess the only review that we need would be a successful generation of the doc..."
      },
      {
        "author": "gares",
        "date": "2019-11-25T17:35:08Z",
        "comment": "Yves told me he did try locally.\r\nAt some point we should decide to run this in CI, or at least some parts of it, so that it down not bitrot."
      },
      {
        "author": "ybertot",
        "date": "2019-11-26T07:17:00Z",
        "comment": "I did the review, checked it works with several versions of Coq (8.9, 8.10, and master), and proposed corrections to @mdenes, integrated above.  I am now checking the aspect of the produced documentation.\r\n\r\nI vote against a CI test for the makefile entry to produce the documentation, because it will duplicate math-comp compilation and still not provide the actual verification that the produced files are correct."
      },
      {
        "author": "CohenCyril",
        "date": "2019-11-26T13:39:38Z",
        "comment": "@ybertot did you check the end result?"
      },
      {
        "author": "CohenCyril",
        "date": "2019-11-26T13:40:02Z",
        "comment": "(PS: if so, please approve the PR.)"
      },
      {
        "author": "ybertot",
        "date": "2019-11-26T14:11:14Z",
        "comment": "There is some strange results with new \"active\" links for some symbols which actually do not point correctly where they should.  I try to understand where they come from (our own stuff or coqdoc)."
      },
      {
        "author": "CohenCyril",
        "date": "2019-11-27T11:50:08Z",
        "comment": "@ybertot great! For further reference, here is the issue you posted https://github.com/coq/coq/issues/11194"
      },
      {
        "author": "pi8027",
        "date": "2019-11-29T03:48:27Z",
        "comment": "`make clean` fails if the doc has not been generated.\r\n```\r\n$ make clean\r\nCLEAN\r\nCLEAN *.aux *.timing\r\nCLEAN\r\nCLEAN *.aux *.timing\r\nrm -r _build_doc/\r\nrm: cannot remove '_build_doc/': No such file or directory\r\nmake: *** [Makefile.common:149: doc-clean] Error 1\r\n```"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "hash": "81802638190ade2b989f34eb7afb92a1413f59c6",
        "message": "Add Makefile target to build the doc",
        "date": "2019-11-25T15:23:11Z"
      },
      {
        "hash": "c08f721483b7d6e8da64f8f475ce68bbaff5b05c",
        "message": "Add missing dependencies\n\nSpotted by Yves.",
        "date": "2019-11-25T15:23:14Z"
      },
      {
        "author": "ybertot",
        "hash": "054024e3b03eeb2f4ce93a904d68bcc4f216d38b",
        "message": "things that are needed to make 'make doc' work",
        "date": "2019-11-25T15:23:14Z"
      },
      {
        "author": "ybertot",
        "hash": "467e24a7c00c8743c209a06ef152c14b2ea72136",
        "message": "dependency file will change name after coq-8.10",
        "date": "2019-11-25T15:23:14Z"
      },
      {
        "author": "ybertot",
        "hash": "85b9ab28d11800a7a690267dde7b44eba14505a2",
        "message": "adds a comment so that dead code can be remove when it is no longer used",
        "date": "2019-11-25T15:23:14Z"
      },
      {
        "author": "ybertot",
        "hash": "6be8dddd806c3515467526ea0e964ca4fee188ad",
        "message": "Have to change directory before checking for the dependency file",
        "date": "2019-11-25T15:23:14Z"
      }
    ]
  },
  {
    "author": "hivert",
    "number": 427,
    "diff_summary": [
      {
        "file": "mathcomp/algebra/ssralg.v",
        "status": "M",
        "additions": 3,
        "deletions": 0
      }
    ],
    "state": "closed",
    "open_date": "2019-11-15T07:25:01Z",
    "update_date": "2019-11-15T07:26:21Z",
    "discussion": [
      {
        "author": "hivert",
        "date": "2019-11-15T07:26:17Z",
        "comment": "Duplicate of https://github.com/math-comp/math-comp/pull/413 "
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "hivert",
        "committer": "hivert",
        "hash": "fc4c60c333fc732c18470d690dfc6faae236d9cf",
        "message": "Exported commrB, commr_sum, commr_prod",
        "date": "2019-11-15T07:17:16Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 426,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 17,
        "deletions": 1
      },
      {
        "file": "mathcomp/ssreflect/fintype.v",
        "status": "M",
        "additions": 17,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2019-11-14T23:53:11Z",
    "update_date": "2019-11-22T10:07:50Z",
    "discussion": [
      {
        "author": "pi8027",
        "date": "2019-11-22T09:09:29Z",
        "comment": "(Since my use case of this PR also requires #270 and #388, I'm totally fine to target 1.11.0 here.)"
      },
      {
        "author": "amahboubi",
        "date": "2019-11-22T09:09:58Z",
        "comment": "@ybertot should we merge this one now or after releasing?"
      },
      {
        "author": "ybertot",
        "date": "2019-11-22T09:23:34Z",
        "comment": "As I see, this PR is already approved, so it can be integrated (same treatment as #432)."
      }
    ],
    "review_discussion": [
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/fintype.v",
        "date": "2019-11-15T16:21:18Z",
        "comment": "I believe this is the combination of can_inj_in and enum_rankK_in so no need for a dedicated theorem..."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/fintype.v",
        "date": "2019-11-16T04:21:20Z",
        "comment": "`can_in_inj (enum_rankK_in _)` requires that `Ax` and `Ay` are the same. This `enum_rank_in_inj` is slightly general."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/fintype.v",
        "date": "2019-11-18T15:01:48Z",
        "comment": "Well if you really want to be as general as possible you should write instead:\r\n```coq\r\nLemma enum_rank_in_inj (x0 y0 : T) A (Ax0 : x0 \\in A) (Ay0 : y0 \\in A) :\r\n  {in A &, forall x y, enum_rank_in Ax0 x = enum_rank_in Ay0 y -> x = y}.\r\nProof. by move=> x y xA yA /(congr1 enum_val); rewrite !enum_rankK_in. Qed.\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/fintype.v",
        "date": "2019-11-18T15:02:49Z",
        "comment": "(Otherwise you restrict witnesses to be equal to the arguments, and it is unlikely to happen often enough...)"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/fintype.v",
        "date": "2019-11-18T15:04:59Z",
        "comment": "But then I guess it is better to provide \r\n```coq\r\nLemma eq_enum_rank_in (x0 y0 : T) A (Ax0 : x0 \\in A) (Ay0 : y0 \\in A) :\r\n  {in A, enum_rank_in Ax0 =1 enum_rank_in Ay0}.\r\nProof. by move=> x xA; apply: enum_val_inj; rewrite !enum_rankK_in. Qed.\r\n```\r\ninstead..."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/fintype.v",
        "date": "2019-11-18T15:05:48Z",
        "comment": "(to give more fine-grained control over the use of different witnesses)"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/fintype.v",
        "date": "2019-11-21T08:52:21Z",
        "comment": "That's so true. Since `eq_enum_rank_in` doesn't match with my use case well, I'd like to put both of those."
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "c27f4625fdeefbf494c3238f94b39a5abcb3b270",
        "message": "Injectivity lemmas in fintype",
        "date": "2019-11-21T08:57:58Z"
      }
    ]
  },
  {
    "author": "thery",
    "number": 423,
    "diff_summary": [
      {
        "file": "mathcomp/algebra/ssralg.v",
        "status": "M",
        "additions": 1,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2019-11-14T16:23:34Z",
    "update_date": "2019-11-14T21:02:44Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "thery",
        "committer": "thery",
        "hash": "c1b0ed734dc4ce23d9ac9233c24a7c415e2e21b4",
        "message": "typo",
        "date": "2019-11-14T16:22:01Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 421,
    "diff_summary": [
      {
        "file": "mathcomp/algebra/ssralg.v",
        "status": "M",
        "additions": 5,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2019-11-14T16:14:28Z",
    "update_date": "2019-11-15T13:28:19Z",
    "discussion": [
      {
        "author": "pi8027",
        "date": "2019-11-14T16:21:20Z",
        "comment": "Since we regularly forget to put things to `GRing.Theory`, it's probably good to check the whole diff of ssralg after the latest release to find this kind of mistake before the next release."
      },
      {
        "author": "pi8027",
        "date": "2019-11-14T16:27:04Z",
        "comment": "Actually `regular_comAlgType` and `regular_comUnitAlgType` have not been exported yet. (#406)"
      },
      {
        "author": "CohenCyril",
        "date": "2019-11-15T13:27:34Z",
        "comment": "This is a dumb fix I will self-merge now."
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "web-flow",
        "hash": "fa29e3ff845cc5d7773695b184c6e2461d5f8954",
        "message": "fix in ssralg\n\nExport the lemmas `commrB`, `commr_sum` and  `commr_prod`",
        "date": "2019-11-14T16:13:35Z"
      },
      {
        "author": "CohenCyril",
        "committer": "web-flow",
        "hash": "bc671f4fe900452c769d655bde6d329ccc21ea91",
        "message": "adding missing regular_ canonical exports",
        "date": "2019-11-14T16:31:23Z"
      },
      {
        "author": "CohenCyril",
        "committer": "web-flow",
        "hash": "31f0e6b5cbf34007abec2f7123415f84f70187c8",
        "message": "typo",
        "date": "2019-11-14T16:31:52Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 420,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 28,
        "deletions": 2
      },
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 28,
        "deletions": 2
      }
    ],
    "state": "merged",
    "open_date": "2019-11-14T16:10:53Z",
    "update_date": "2019-11-18T23:46:19Z",
    "discussion": [
      {
        "author": "pi8027",
        "date": "2019-11-18T23:50:42Z",
        "comment": "@CohenCyril Thank you!"
      }
    ],
    "review_discussion": [
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2019-11-14T16:16:57Z",
        "comment": "Please add a space between `xs` and `=>` and I think you can conclude with `case: q` without mentioning `x`. (not tested)"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2019-11-14T16:17:04Z",
        "comment": "same comment"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2019-11-14T16:20:11Z",
        "comment": "In this file, predicates are usually named `a`, `p` or `q`, could you rename `g` to one of these?"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2019-11-14T16:20:53Z",
        "comment": "please add a space between `s` and `=>`"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2019-11-14T16:26:33Z",
        "comment": "I am a bit confused by this proof script, I would find it more readable if there were less cases/splits in one go, and no introduction in the `last`.\r\ne.g.\r\n```coq\r\napply/(iffP andP)=> [[/allP ...]|His].\r\n....\r\nsplit; first by ....\r\n....\r\n```\r\nor something like that."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2019-11-14T16:32:17Z",
        "comment": "`case: q` produces `Error: q is used in conclusion.`"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2019-11-14T16:34:29Z",
        "comment": "I guess `case: {+}q` would work then, but you can keep the original form then..."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2019-11-14T16:47:08Z",
        "comment": "please prefix this line with a `by`"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2019-11-14T16:50:18Z",
        "comment": "Could you please use more meaningful names instead of `H...` (e.g. `x_in_s` or `x_s`, etc) ?"
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "6c78e2dbfda528a660c2b4d15294dc93c302c92c",
        "message": "Add all_filter, all_pmap, and all_allpairsP in seq.v",
        "date": "2019-11-14T22:23:20Z"
      }
    ]
  },
  {
    "author": "affeldt-aist",
    "number": 419,
    "diff_summary": [
      {
        "file": ".gitlab-ci.yml",
        "status": "M",
        "additions": 4,
        "deletions": 58
      },
      {
        "file": "mathcomp/algebra/ssrnum.v",
        "status": "M",
        "additions": 4,
        "deletions": 58
      }
    ],
    "state": "merged",
    "open_date": "2019-11-14T12:49:13Z",
    "update_date": "2019-11-14T14:32:55Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "3186a08bfa628f23f3c1fa8bb4e68c101eae707c",
        "message": "remove ProdNormedZmodule from ssrnum.v, it made its way to mathcomp-analysis in a generalized form (branch analysis_270) at the time of this writing",
        "date": "2019-11-14T12:41:08Z"
      },
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "87768631171512b7435807d38de15f7e2f0478b7",
        "message": "update gitlab-ci",
        "date": "2019-11-14T12:59:46Z"
      }
    ]
  },
  {
    "author": "affeldt-aist",
    "number": 417,
    "diff_summary": [
      {
        "file": ".gitlab-ci.yml",
        "status": "M",
        "additions": 166,
        "deletions": 21
      },
      {
        "file": "mathcomp/algebra/ssrnum.v",
        "status": "M",
        "additions": 166,
        "deletions": 21
      }
    ],
    "state": "closed",
    "open_date": "2019-11-13T11:17:44Z",
    "update_date": "2019-11-25T14:34:19Z",
    "discussion": [
      {
        "author": "affeldt-aist",
        "date": "2019-11-13T11:26:28Z",
        "comment": "A first version appeared in PR #416 from which it has been removed. "
      },
      {
        "author": "affeldt-aist",
        "date": "2019-11-14T01:21:46Z",
        "comment": "@pi8027 Thanks. I hope to be able to address all comments by tomorrow."
      },
      {
        "author": "pi8027",
        "date": "2019-11-14T02:45:00Z",
        "comment": "The type of non-negative numbers may allow us to use the bigop theory to reason about bigmaxr in mathcomp-analysis. This requires some more work."
      },
      {
        "author": "affeldt-aist",
        "date": "2019-11-14T08:03:01Z",
        "comment": "> The type of non-negative numbers may allow us to use the bigop theory to reason about bigmaxr in mathcomp-analysis. \r\n\r\nIt is already used in mathcomp-analysis to define a norm on matrices (see https://github.com/math-comp/analysis/tree/analysis_270, WIP).\r\n"
      },
      {
        "author": "pi8027",
        "date": "2019-11-14T08:04:46Z",
        "comment": "@affeldt-aist Great! I hope that will be integrated into mathcomp."
      },
      {
        "author": "affeldt-aist",
        "date": "2019-11-14T11:40:01Z",
        "comment": "I organize a migration of this PR to mathcomp-analysis, so that in the end it will simply turn into a removal of ProdNormedZmodule."
      },
      {
        "author": "CohenCyril",
        "date": "2019-11-25T14:28:18Z",
        "comment": "@affeldt-aist can this PR be closed?"
      },
      {
        "author": "affeldt-aist",
        "date": "2019-11-25T14:34:19Z",
        "comment": "PR closed. Contents moves to PR #270."
      }
    ],
    "review_discussion": [
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2019-11-13T22:59:28Z",
        "comment": "Since this is a canonical instance declaration, the argument `x` of `NngNum` should probably not be implicit. Additionally, `add_nng_ge0` may not be needed: `Canonical addr_nngnum x y := @NngNum _ (x%:nngnum + y%:nngnum) (addr_ge0 x y).`"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2019-11-13T23:20:04Z",
        "comment": "```coq\r\ncase: (leP x y)=> ?.\r\nrewrite andb_idl //; exact/le_trans.\r\nrewrite andb_idr //; exact/le_trans/ltW.\r\n```"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2019-11-13T23:28:46Z",
        "comment": "```coq\r\ncase: leP=> ?.\r\nrewrite andb_idl //; exact/le_lt_trans.\r\nrewrite andb_idr //; exact/lt_trans.\r\n```"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2019-11-13T23:32:18Z",
        "comment": "This can be generalized for any `normedZmodType R`:\r\n`Canonical normr_nngnum (V : normedZmodType R) (x : V) := NngNum (normr_ge0 x).`"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2019-11-13T23:33:33Z",
        "comment": "```coq\r\ncase: (leP x y)=> ?.\r\nrewrite orb_idl // => /le_trans; exact.\r\nrewrite orb_idr // => /le_trans; apply; exact/ltW.\r\n```"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2019-11-13T23:47:09Z",
        "comment": "These two notations seem to be redundant (probably because of my bad suggestion...). I think `[ge0 of x]` should have `ring_scope` or `form_scope`."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2019-11-13T23:47:34Z",
        "comment": "Missing scope (`type_scope`?)."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2019-11-14T00:20:42Z",
        "comment": "`K` is not needed to be a field. The hypothesis `a != 0` can be dropped.\r\n\r\n```coq\r\nLemma nonneg_maxr (R : numDomainType) (V : normedZmodType R)\r\n                  (x : V) (y z : {nonneg R}) :\r\n  `|x| * (maxr y z)%:nngnum =\r\n  (maxr (`|x| * y%:nngnum)%:nng (`|x| * z%:nngnum)%:nng)%:nngnum.\r\nProof.\r\nmove: y z; apply: wlog_le => y z hyz; first by rewrite joinC hyz joinC.\r\nrewrite !join_r //; apply/ler_wpmul2l => //; exact/normr_ge0.\r\nQed.\r\n```\r\nor\r\n```coq\r\nLemma nonneg_maxr (R : numDomainType) (x y z : {nonneg R}) :\r\n  x%:nngnum * (maxr y z)%:nngnum =\r\n  (maxr (x%:nngnum * y%:nngnum)%:nng (x%:nngnum * z%:nngnum)%:nng)%:nngnum.\r\nProof.\r\nmove: y z; apply: wlog_le => y z hyz; first by rewrite joinC hyz joinC.\r\nrewrite !join_r //; apply/ler_wpmul2l => //; exact/nngnum_ge0.\r\nQed.\r\n```"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2019-11-14T01:28:44Z",
        "comment": "Could you declare an `Arguments` command specifying that the second argument of `NngNum` is a non-implicit argument so that we don't need to use an explicit application here?"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2019-11-14T01:29:31Z",
        "comment": "`Canonical mulrn_nngnum x n := @NngNum _ (x%:nngnum *+ n) (mulrn_wge0 n x).`"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2019-11-14T01:31:58Z",
        "comment": "Now you may put this lemma to the `NngNum` section. Additionally, there is a simpler proof:\r\n```\r\nmove: y z; apply: wlog_le => y z hyz; first by rewrite joinC hyz joinC.\r\nrewrite !join_r //; exact/ler_wpmul2l.\r\n```"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2019-11-14T02:01:45Z",
        "comment": "The theory part (the `NngNum` section) has not been exported yet. The `NngNum` section should probably be moved after closing the `Nonneg` module."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2019-11-14T02:01:59Z",
        "comment": "`Export Nonneg.Exports`."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2019-11-14T02:03:41Z",
        "comment": "```coq\r\nCanonical zeror_nngnum := @NngNum R 0 (lexx 0).\r\nCanonical oner_nngnum := @NngNum R 1 ler01.\r\n```"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2019-11-14T02:20:06Z",
        "comment": "- `Import Nonneg Nonneg.Exports` is not necessary anymore.\r\n- I don't get why there are `norm` and `norm'`.\r\n- There are simpler proofs as follows:\r\n```coq\r\nSection ProdNormedZmodule.\r\nContext {R : numDomainType} {U V : normedZmodType R}.\r\n\r\nDefinition norm (x : U * V) : R :=\r\n  (Num.max (`| x.1 |%:nng) (`| x.2 |%:nng))%:nngnum.\r\n\r\nLemma normD x y : norm (x + y) <= norm x + norm y.\r\nProof.\r\nrewrite /norm nng_leUx /=; apply/andP; split;\r\n  case: leP => [|/ltW] Hx; case: leP => [|/ltW] Hy;\r\n  exact/(le_trans (ler_norm_add _ _))/ler_add.\r\nQed.\r\n\r\nLemma norm_eq0 x : norm x = 0 -> x = 0.\r\nProof.\r\ncase: x=> x1 x2 /eqP; rewrite eq_le nng_leUx 2!normr_le0 -andbA /=.\r\nby case/and3P => /eqP -> /eqP ->.\r\nQed.\r\n\r\nLemma normMn x n : norm (x *+ n) = norm x *+ n.\r\nProof.\r\nby rewrite /norm pairMnE /=; case: leP => [|/ltW];\r\n  rewrite nng_le /= !normrMn ler_muln2r => /predU1P [->|];\r\n  rewrite ?mulr0n // -nng_le; [case: leP | case: ltP].\r\nQed.\r\n\r\nLemma normrN x : norm (- x) = norm x.\r\nProof.\r\nby rewrite /norm /=; case: leP => [|/ltW];\r\n  rewrite nng_le /= !normrN -nng_le; [case: leP | case: ltP].\r\nQed.\r\n\r\nDefinition normedZmodMixin :\r\n  @Num.normed_mixin_of R [zmodType of U * V] (Num.NumDomain.class R) :=\r\n  @Num.NormedMixin _ _ _ norm normD norm_eq0 normMn normrN.\r\n\r\nCanonical normedZmodType := NormedZmoduleType R (U * V) normedZmodMixin.\r\n\r\nLemma prod_normE (x : normedZmodType) :\r\n  `|x| = (Num.max `|x.1|%:nng `|x.2|%:nng)%:nngnum.\r\nProof. by []. Qed.\r\n\r\nEnd ProdNormedZmodule.\r\n```"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2019-11-14T08:13:29Z",
        "comment": "The above simplification may require to generalize `absr_nngnum`. See https://github.com/math-comp/math-comp/pull/417#discussion_r346058855."
      },
      {
        "author": "affeldt-aist",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2019-11-14T08:20:12Z",
        "comment": "Yes, it does work, but the generalization of absr_nngnum breaks inference in mathcomp-analysis. I am investigating it, that's why I have not yet marked it as resolved."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2019-11-14T08:26:44Z",
        "comment": "With the absolute value function of type `froall (R : numDomainType), R -> R`, pretyping understands that the type of `0` in `|0| : R` is `R`. However, since the norm function has type `forall (R : numDomainType) (V : normedZmodType), V -> R`, `|0| : R` cannot be typed anymore. You probably should put a type annotation like `|0 : R|` in this case."
      },
      {
        "author": "affeldt-aist",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2019-11-14T08:55:15Z",
        "comment": "I solved my problem with a type annotation (^o actually)."
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "fb87a49b4a538fefca33fad2b699dfebe72c00f8",
        "message": "add non-negative numbers to generalize the type of ProdNormedZmodule",
        "date": "2019-11-13T11:11:10Z"
      },
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "aa0311d120174e2b5380c1464dca79ca135f5497",
        "message": "update .gitlab-ci.yml",
        "date": "2019-11-13T11:27:39Z"
      },
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "2c3c494b7b662ef10f8151ee896f5bc22a4e9b15",
        "message": "apply comments by @pi8027",
        "date": "2019-11-14T08:50:06Z"
      }
    ]
  },
  {
    "author": "affeldt-aist",
    "number": 416,
    "diff_summary": [
      {
        "file": ".gitlab-ci.yml",
        "status": "M",
        "additions": 20,
        "deletions": 20
      },
      {
        "file": "mathcomp/algebra/rat.v",
        "status": "M",
        "additions": 20,
        "deletions": 20
      },
      {
        "file": "mathcomp/algebra/ssrint.v",
        "status": "M",
        "additions": 20,
        "deletions": 20
      },
      {
        "file": "mathcomp/algebra/ssrnum.v",
        "status": "M",
        "additions": 20,
        "deletions": 20
      },
      {
        "file": "mathcomp/field/algC.v",
        "status": "M",
        "additions": 20,
        "deletions": 20
      }
    ],
    "state": "merged",
    "open_date": "2019-11-11T17:13:29Z",
    "update_date": "2019-11-14T11:49:45Z",
    "discussion": [
      {
        "author": "pi8027",
        "date": "2019-11-13T04:56:14Z",
        "comment": "@affeldt-aist `416` (the number of this PR) should be added to the following line and the other three occurrences to pass CI.\r\nhttps://github.com/math-comp/math-comp/blob/287585bd52f4d7d4e85b515d9b213d35c9f6863c/.gitlab-ci.yml#L148\r\n\r\nThe generalized `ProdNormedZmodule` and `nonnegnum_of` still seem to be draft. Can't we remove them temporally to merge #270 soon? cc: @CohenCyril \r\n\r\n"
      },
      {
        "author": "affeldt-aist",
        "date": "2019-11-13T07:37:53Z",
        "comment": "> 416 (the number of this PR) should be added ... to pass CI.\r\n\r\nThanks.\r\n"
      },
      {
        "author": "pi8027",
        "date": "2019-11-13T07:57:15Z",
        "comment": "> BTW, this generalization is motivated by analysis.\r\n\r\n@affeldt-aist I think you can move the draft part of this PR including `ProdNormedZmodule` to the analysis repository to continue your work, and port them to mathcomp later. (Just to clarify, I'm proposing to remove `ProdNormedZmodule` including the non-generalized one and to do not provide the `normedZmodType` instance of prod in mathcomp for now.)"
      },
      {
        "author": "affeldt-aist",
        "date": "2019-11-13T11:19:59Z",
        "comment": "> @pi8027 The generalized ProdNormedZmodule and nonnegnum_of still seem to be draft. Can't we remove them temporally to merge #270 soon? cc: @CohenCyril\r\n\r\nThe generalized ProdNormedZmodule and nonnegnum_of have been moved to PR #417 "
      },
      {
        "author": "affeldt-aist",
        "date": "2019-11-13T11:26:14Z",
        "comment": "> Just to clarify, I'm proposing ... to do not provide the normedZmodType instance of prod in mathcomp for now.\r\n\r\nI am not sure whether other developments (besides mathcomp-analysis) depend on it :-/."
      },
      {
        "author": "pi8027",
        "date": "2019-11-13T22:48:42Z",
        "comment": "> I am not sure whether other developments (besides mathcomp-analysis) depend on it :-/.\r\n\r\nAFAIK, no project other than mathcomp-analysis depends on `ProdNormedZmodule`. Since it has been introduced in #270, I think there is no problem to remove it."
      },
      {
        "author": "CohenCyril",
        "date": "2019-11-14T10:05:49Z",
        "comment": "Yes, I think `ProdNormedZmodule` should be removed all together (in its generalized and non generalized forms)."
      }
    ],
    "review_discussion": [
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2019-11-13T07:42:37Z",
        "comment": "IMO, `num_of_nonneg` should be coercion, `0`, `1`, addition, multiplication, natmul, and norms should have canonical `nonnegnum_of` instances, and the `[nonnegnum of ...]` notation as in `[tuple of ...]` should be provided."
      },
      {
        "author": "affeldt-aist",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2019-11-13T07:48:42Z",
        "comment": "See PR #417 for some progress regarding these comments."
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "ed7ccc74bad2aad6b23daa69509aa00f8d517760",
        "message": "renaming\nNormedZmoduleType -> NormedZmodType\nNormedZmoduleMixin -> NormedZmodMixin\nthat looks more homogeneous with regard to naming conventions used so far",
        "date": "2019-11-11T17:11:18Z"
      },
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "0a84f1c0a0d3f34d55b4209fd55e1599bba06cf3",
        "message": "update .gitlab-ci.yml",
        "date": "2019-11-13T08:24:33Z"
      },
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "afd113bcea3b4c581112fddf89e5b3444b50101e",
        "message": "typo",
        "date": "2019-11-13T13:16:07Z"
      }
    ]
  },
  {
    "author": "affeldt-aist",
    "number": 415,
    "diff_summary": [
      {
        "file": "CONTRIBUTING.md",
        "status": "M",
        "additions": 35,
        "deletions": 13
      }
    ],
    "state": "merged",
    "open_date": "2019-11-11T16:42:44Z",
    "update_date": "2019-11-14T09:39:48Z",
    "discussion": [
      {
        "author": "amahboubi",
        "date": "2019-11-14T09:39:20Z",
        "comment": "Thanks, this is very useful!"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "4db4931995970bcedd17e9073693795467972dcc",
        "message": "some information about naming conventions for definitions (wip)",
        "date": "2019-11-11T16:38:54Z"
      }
    ]
  },
  {
    "author": "affeldt-aist",
    "number": 414,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 22,
        "deletions": 15
      },
      {
        "file": "mathcomp/algebra/rat.v",
        "status": "M",
        "additions": 22,
        "deletions": 15
      },
      {
        "file": "mathcomp/algebra/ssrint.v",
        "status": "M",
        "additions": 22,
        "deletions": 15
      },
      {
        "file": "mathcomp/algebra/ssrnum.v",
        "status": "M",
        "additions": 22,
        "deletions": 15
      },
      {
        "file": "mathcomp/field/algC.v",
        "status": "M",
        "additions": 22,
        "deletions": 15
      }
    ],
    "state": "closed",
    "open_date": "2019-11-11T16:02:08Z",
    "update_date": "2019-11-11T16:51:19Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "pi8027",
        "committer": "CohenCyril",
        "hash": "7000ef50dfaf06e8e500f035d9be8a771b918df5",
        "message": "Revert \"Fix inheritances in ssrnum\" to rebase experiment/order\n\nThis reverts commit 7ab5c99ab4c2ecfd55702a4279392f067652e357.",
        "date": "2019-10-07T12:15:09Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "558dba75a38effdfd6b3bbc27fa2b08863aa07c5",
        "message": "First merge of order into ssrnum",
        "date": "2019-10-07T12:25:05Z"
      },
      {
        "author": "pi8027",
        "committer": "CohenCyril",
        "hash": "ef05ec8870b3d2d1a55ccc9422d05ef6da0672e9",
        "message": "Make an appropriate use of the order library everywhere (#278, #280, #282, #283, #285, #286, #288, #296, #330, #334, and #341)\n\nssrnum related changes:\n- Redefine the intermediate structure between `idomainType` and `numDomainType`,\n  which is `normedDomainType` (normed integral domain without an order).\n- Generalize (by using `normedDomainType` or the order structures), relocate\n  (to order.v), and rename ssrnum related definitions and lemmas.\n- Add a compatibility module `Num.mc_1_9` and export it to check compilation.\n- Remove the use of the deprecated definitions and lemmas from entire theories.\n- Implement factories mechanism to construct several ordered and num structures\n  from fewer axioms.\n\norder related changes:\n- Reorganize the hierarchy of finite lattice structures. Finite lattices have\n  top and bottom elements except for empty set. Therefore we removed finite\n  lattice structures without top and bottom.\n- Reorganize the theory modules in order.v:\n  + `LTheory` (lattice and partial order, without complement and totality)\n  + `CTheory` (`LTheory` + complement)\n  + `Theory` (all)\n- Give a unique head symbol for `Total.mixin_of`.\n- Replace reverse and `^r` with converse and `^c` respectively.\n- Fix packing and cloning functions and notations.\n- Provide more ordered type instances:\n  Products and lists can be ordered in two different ways: the lexicographical\n  ordering and the pointwise ordering. Now their canonical instances are not\n  exported to make the users choose them.\n- Export `Order.*.Exports` modules by default.\n- Specify the core hint database explicitly in order.v. (see #252)\n- Apply 80 chars per line restriction.\n\nGeneral changes:\n- Give consistency to shape of formulae and namings of `lt_def` and `lt_neqAle`\n  like lemmas:\n  lt_def    x y : (x < y) = (y != x) && (x <= y),\n  lt_neqAle x y : (x < y) = (x != y) && (x <= y).\n- Enable notation overloading by using scopes and displays:\n  + Define `min` and `max` notations (`minr` and `maxr` for `ring_display`) as\n    aliases of `meet` and `join` specialized for `total_display`.\n  + Provide the `ring_display` version of `le`, `lt`, `ge`, `gt`, `leif`, and\n    `comparable` notations and their explicit variants in `Num.Def`.\n  + Define 3 variants of `[arg min_(i < n | P) F]` and `[arg max_(i < n | P) F]`\n    notations in `nat_scope` (specialized for nat), `order_scope` (general\n    version), and `ring_scope` (specialized for `ring_display`).\n- Update documents and put CHANGELOG entries.",
        "date": "2019-10-07T12:25:28Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "13a5482dda600d765753912bbe75cd12e74817a1",
        "message": "fixing headers",
        "date": "2019-10-07T12:25:28Z"
      },
      {
        "author": "pi8027",
        "committer": "CohenCyril",
        "hash": "bba6fcff79a2b0a5bb76d077af4324f3c1e30b59",
        "message": "Use `deprecate` notation in ssrnum",
        "date": "2019-10-07T12:25:28Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "c6634cea72190ddbf1c0a93267174619e5b0ea4b",
        "message": "Fixes in naming, mixins, doc and canonical ordering\n\n- comparer -> compare (in order.v)\n- eq constructor of compare goes last\n- \"x < y\" is matched before \"x > y\"\n- \"x <= y\" is matched before \"x >= y\"\n- adding prod and lexi ordering on tuple\n- adding missing CS\n- edit CHANGELOG",
        "date": "2019-10-07T12:25:28Z"
      },
      {
        "author": "pi8027",
        "committer": "CohenCyril",
        "hash": "2a23d99c80bd63cb2f11ba033bd3f30db1a83c5c",
        "message": "Reorder the arguments of the comparison predicates in order.v\n\nThe comparison predicates (for nat, ordered types, ordered integral domains)\nmust have the following order of arguments:\n- leP   x y : le_xor_gt x y ... (x <= y) (y < x) ... .\n- ltP   x y : lt_xor_ge x y ... (y <= x) (x < y) ... .\n- ltgtP x y : compare   x y ... (y == x) (x == y) (x >= y) (x <= y) (x > y) (x < y) ... .",
        "date": "2019-10-07T12:25:28Z"
      },
      {
        "author": "pi8027",
        "committer": "CohenCyril",
        "hash": "9828432fb6d031a2b3d7bc8e0434ac8ebcfefa66",
        "message": "Add (meet|join)_(l|r), some renamings, and small cleanups\n\nNew lemmas:\n- meet_l, meet_r, join_l, join_r.\n\nRenamings:\n- Order.BLatticeTheory.lexUl -> disjoint_lexUl,\n- Order.BLatticeTheory.lexUr -> disjoint_lexUr,\n- Order.TBLatticeTheory.lexIl -> cover_leIxl,\n- Order.TBLatticeTheory.lexIr -> cover_leIxr.\n\nUse `Order.TTheory` instead of `Order.Theory` if applicable",
        "date": "2019-10-07T12:25:28Z"
      },
      {
        "author": "pi8027",
        "committer": "CohenCyril",
        "hash": "2942a6a9a3bb150649f7e400f3e69e649db5e103",
        "message": "Remove the use of the compatibility module and add CI overlays",
        "date": "2019-10-07T12:25:28Z"
      },
      {
        "author": "pi8027",
        "committer": "CohenCyril",
        "hash": "5a45817f229412f343ef09f9688fdac061e0bd84",
        "message": "Rename `totalLatticeMixin` to `totalPOrderMixin` and several refactor\n\n- Rename `totalLatticeMixin` to `totalPOrderMixin`.\n- Refactor num mixins.\n- Use `Num.min` and `Num.max` rather than lattice notations if applicable.",
        "date": "2019-10-08T11:05:28Z"
      },
      {
        "author": "pi8027",
        "committer": "CohenCyril",
        "hash": "4c6c021ec5ff384735284381d7752cdefb13b41d",
        "message": "Fix CI",
        "date": "2019-10-08T11:05:28Z"
      },
      {
        "author": "pi8027",
        "committer": "CohenCyril",
        "hash": "8c8a9225479b72bc00252ca24eb4338bd06e9751",
        "message": "Redefine `normedDomainType` (now `normedZmodType`) (#392)\n\n* Redefine `normedDomainType` (now `normedZmodType`)\r\n\r\n- Redefine `normedDomainType` to drop ring and integral domain axioms.\r\n- Add canonical instance of `normedZmodType` for `prod`.",
        "date": "2019-10-16T08:26:35Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "59ea0d3f57c456f41d6c5018595eb1e0f7b76369",
        "message": "order.v: remove Order.Def, export Order.Syntax by default, and put missing scopes",
        "date": "2019-10-24T11:56:19Z"
      },
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "17e6028dc671d2ffe926ce45aaf586ce8f8cbd04",
        "message": "Merge remote-tracking branch 'upstream/experiment/order' into experiment/order",
        "date": "2019-11-05T12:21:59Z"
      },
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "b88efb1276dbaf94266933af0e4ca23bdea8abe8",
        "message": "renaming\nNormedZmoduleType -> NormedZmodType\nNormedZmoduleMixin -> NormedZmodMixin\nthat looks more homogeneous with regard to naming conventions used so far",
        "date": "2019-11-11T15:54:42Z"
      }
    ]
  },
  {
    "author": "hivert",
    "number": 413,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 17,
        "deletions": 0
      },
      {
        "file": "mathcomp/algebra/ssralg.v",
        "status": "M",
        "additions": 17,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2019-11-10T09:45:29Z",
    "update_date": "2019-11-14T14:57:35Z",
    "discussion": [
      {
        "author": "hivert",
        "date": "2019-11-11T20:38:08Z",
        "comment": "@CohenCyril Done your changes."
      },
      {
        "author": "amahboubi",
        "date": "2019-11-14T09:37:24Z",
        "comment": "@CohenCyril is this ready to merge?"
      },
      {
        "author": "pi8027",
        "date": "2019-11-14T15:36:21Z",
        "comment": "Shouldn't those lemmas be exported from the `GRing.Theory` module?"
      },
      {
        "author": "CohenCyril",
        "date": "2019-11-14T16:15:07Z",
        "comment": "> Shouldn't those lemmas be exported from the `GRing.Theory` module?\r\n\r\nwell spotted @pi8027 "
      }
    ],
    "review_discussion": [
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2019-11-11T14:21:08Z",
        "comment": "Please rename `H` with `comm_x_F`."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2019-11-11T14:21:16Z",
        "comment": "Same"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2019-11-11T14:25:27Z",
        "comment": "I think one of ` rewrite big_morph`, or `eilm/big_rec : _` or `elim/big_ind : _` would do the job here."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2019-11-12T08:52:21Z",
        "comment": "Oh I forgot this one: please use `apply:` (with a colon)."
      },
      {
        "author": "hivert",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2019-11-12T09:12:31Z",
        "comment": "Done."
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "hivert",
        "committer": "hivert",
        "hash": "119a1b4f9bc1b1353cb809d09501a8ee7e123e15",
        "message": "Lemmas on commutation with big sum and prod",
        "date": "2019-11-10T09:41:25Z"
      },
      {
        "author": "hivert",
        "committer": "hivert",
        "hash": "4c2baf881261bb03dcdd0031347bedfe81a5e455",
        "message": "Added commrB Lemma",
        "date": "2019-11-10T09:55:19Z"
      },
      {
        "author": "hivert",
        "committer": "hivert",
        "hash": "14fcf82bd79f0a0a1c56c980d6548b7980f6fe21",
        "message": "@CohenCyril review",
        "date": "2019-11-11T20:35:41Z"
      },
      {
        "author": "hivert",
        "committer": "hivert",
        "hash": "d347c2cdf363c1ed1fc164f6800c25e50c5fff02",
        "message": "apply -> apply:",
        "date": "2019-11-12T09:11:37Z"
      }
    ]
  },
  {
    "author": "thery",
    "number": 412,
    "diff_summary": [
      {
        "file": "mathcomp/field/finfield.v",
        "status": "M",
        "additions": 2,
        "deletions": 2
      }
    ],
    "state": "merged",
    "open_date": "2019-11-08T10:40:53Z",
    "update_date": "2019-11-14T09:36:26Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "thery",
        "committer": "thery",
        "hash": "07deeaf6cc3de2c3c2e4fa7e651e0525141243b2",
        "message": "typo",
        "date": "2019-11-08T10:36:58Z"
      }
    ]
  },
  {
    "author": "GTaumaturgo",
    "number": 411,
    "diff_summary": [
      {
        "file": "mathcomp/algebra/zmodp.v",
        "status": "M",
        "additions": 1,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2019-11-07T03:02:21Z",
    "update_date": "2019-11-14T09:49:24Z",
    "discussion": [
      {
        "author": "amahboubi",
        "date": "2019-11-14T09:49:15Z",
        "comment": "Thanks!"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "GTaumaturgo",
        "committer": "web-flow",
        "hash": "8fc8f16e388a4c42fd611f20f85db2846fbc727a",
        "message": "Update zmodp.v",
        "date": "2019-11-07T03:01:56Z"
      }
    ]
  },
  {
    "author": "GTaumaturgo",
    "number": 410,
    "diff_summary": [
      {
        "file": "README.md",
        "status": "M",
        "additions": 1,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2019-11-04T17:47:20Z",
    "update_date": "2019-11-06T14:54:54Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2019-11-06T14:55:25Z",
        "comment": "@GTaumaturgo thanks"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "GTaumaturgo",
        "committer": "web-flow",
        "hash": "c74ff2cfee7df2a3caa31789d606f96e3a0dfb3a",
        "message": "Update README.md",
        "date": "2019-11-04T17:46:56Z"
      }
    ]
  },
  {
    "author": "chdoc",
    "number": 408,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 33,
        "deletions": 17
      },
      {
        "file": "mathcomp/algebra/intdiv.v",
        "status": "M",
        "additions": 33,
        "deletions": 17
      },
      {
        "file": "mathcomp/algebra/mxalgebra.v",
        "status": "M",
        "additions": 33,
        "deletions": 17
      },
      {
        "file": "mathcomp/algebra/ssralg.v",
        "status": "M",
        "additions": 33,
        "deletions": 17
      },
      {
        "file": "mathcomp/algebra/ssrnum.v",
        "status": "M",
        "additions": 33,
        "deletions": 17
      },
      {
        "file": "mathcomp/character/character.v",
        "status": "M",
        "additions": 33,
        "deletions": 17
      },
      {
        "file": "mathcomp/character/integral_char.v",
        "status": "M",
        "additions": 33,
        "deletions": 17
      },
      {
        "file": "mathcomp/field/galois.v",
        "status": "M",
        "additions": 33,
        "deletions": 17
      },
      {
        "file": "mathcomp/ssreflect/finset.v",
        "status": "M",
        "additions": 33,
        "deletions": 17
      },
      {
        "file": "mathcomp/ssreflect/fintype.v",
        "status": "M",
        "additions": 33,
        "deletions": 17
      }
    ],
    "state": "merged",
    "open_date": "2019-11-04T10:25:35Z",
    "update_date": "2019-11-06T14:54:03Z",
    "discussion": [],
    "review_discussion": [
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/intdiv.v",
        "date": "2019-11-04T12:05:02Z",
        "comment": "could be something like: `have [_ IH|/forallPn/sigW/IHa IH _] := altP forallP; exact: IH.`"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/intdiv.v",
        "date": "2019-11-04T12:06:12Z",
        "comment": "could be `have [_|/forallPn/sigW [[i j] /= a'Mij] _] := altP forallP; first exact.`"
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "chdoc",
        "hash": "185ea5895b1e89eaf6f741d560910a24541c62eb",
        "message": "add existsPn/forallPn lemmas",
        "date": "2019-11-04T10:10:11Z"
      },
      {
        "hash": "ad84fa64677463ab27a10bcd4d0081fd06693945",
        "message": "minor revision",
        "date": "2019-11-04T12:46:12Z"
      }
    ]
  },
  {
    "author": "hivert",
    "number": 406,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 289,
        "deletions": 18
      },
      {
        "file": "mathcomp/algebra/poly.v",
        "status": "M",
        "additions": 289,
        "deletions": 18
      },
      {
        "file": "mathcomp/algebra/ssralg.v",
        "status": "M",
        "additions": 289,
        "deletions": 18
      },
      {
        "file": "mathcomp/field/fieldext.v",
        "status": "M",
        "additions": 289,
        "deletions": 18
      },
      {
        "file": "mathcomp/field/galois.v",
        "status": "M",
        "additions": 289,
        "deletions": 18
      }
    ],
    "state": "merged",
    "open_date": "2019-11-01T15:25:28Z",
    "update_date": "2019-11-06T14:53:41Z",
    "discussion": [
      {
        "author": "hivert",
        "date": "2019-11-01T15:25:54Z",
        "comment": "This pull request is currently not ready to merge : I'd like to add commutative unitary algebras too. I'm currently having some difficulties with the diamond inheritance, I'll commit the change when I'm done solving those problems. If you prefer, I can add them in another PR."
      },
      {
        "author": "hivert",
        "date": "2019-11-01T16:27:45Z",
        "comment": "Actually, even with ComAlgType I've some problems with where pointed out by travisCI..."
      },
      {
        "author": "pi8027",
        "date": "2019-11-01T20:03:48Z",
        "comment": "@hivert Hello. I think you should make `fieldExtType` inheriting `comAlgType` (and `comUnitAlgType`). I can write a patch if you need."
      },
      {
        "author": "hivert",
        "date": "2019-11-02T20:39:09Z",
        "comment": "@pi8027 Thanks for the review. As I said, the PR is not yet ready for integration. I was trying to find and resolve all these problems... Anyway, a big thanks for the help ! I think I'm starting to understand the inheritance mechanism !"
      },
      {
        "author": "hivert",
        "date": "2019-11-03T00:39:06Z",
        "comment": "It should be ok now. sorry for the mess. I still need to update the changelog (will do tomorrow)."
      },
      {
        "author": "hivert",
        "date": "2019-11-03T09:28:52Z",
        "comment": "The PR is now ready for review. "
      },
      {
        "author": "pi8027",
        "date": "2019-11-05T13:37:43Z",
        "comment": "All the issues I discovered have been addressed. cc: @CohenCyril @amahboubi "
      },
      {
        "author": "hivert",
        "date": "2019-11-05T17:37:00Z",
        "comment": "Excellent ! Thanks for the help understanding the hierarchy !"
      }
    ],
    "review_discussion": [
      {
        "author": "pi8027",
        "file": "mathcomp/field/fieldext.v",
        "date": "2019-11-02T19:22:52Z",
        "comment": "These `comAlgType` and `comUnitAlgType` should be exported from the `Exports` module as both coercions and canonical projections."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/field/fieldext.v",
        "date": "2019-11-02T19:26:12Z",
        "comment": "The join of `comUnitAlgType` and `(unit)RingType` should be `comUnitAlgType`. The above two lines are incorrect."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/field/fieldext.v",
        "date": "2019-11-02T19:26:45Z",
        "comment": "The above two lines are correct, but should be exported from the `Exports` module."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/field/fieldext.v",
        "date": "2019-11-02T19:33:22Z",
        "comment": "The join of `unitAlgType` and `com(Unit)RingType` should now be `comUnitAlgType`. So the above two lines should be removed."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/field/fieldext.v",
        "date": "2019-11-02T19:41:28Z",
        "comment": "The above two lines are incorrect."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/field/fieldext.v",
        "date": "2019-11-02T19:41:46Z",
        "comment": "The above two lines should be removed. `(lalg|lmod)_com(Unit)RingType` should also be removed."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2019-11-02T20:10:34Z",
        "comment": "`Coercion unitRingType : ...` and `Canonical unitRingType` are missing here."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2019-11-02T20:11:17Z",
        "comment": "`Canonical unitAlgType` is missing."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2019-11-03T11:07:10Z",
        "comment": "`comUnitAlgType` should be `comAlgType` here."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2019-11-03T11:07:58Z",
        "comment": "Conversely, `comAlgType` should be `comUnitAlgType` here."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2019-11-03T19:40:15Z",
        "comment": "`base3` is needed here because `comUnitAlgType` directly inherits `unitAlgType` (without any intermediate structure). So you may remove this comment."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2019-11-03T20:02:34Z",
        "comment": "In the current implementation, the regular `comUnitAlgType` of `R : comUnitRingType` will not be inferred automatically. This probably should be added just after the declaration of `regular_unitAlgType`."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2019-11-03T20:57:45Z",
        "comment": "The actual implementation of `[comAlgType R of V]` (with a small fix I suggested below) merges canonical `comAlgType R` and `unitRingType` on `V`."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2019-11-03T21:02:13Z",
        "comment": "This `pack` is broken. `Algebra.class` should be replaced with `ComAlgebra.class`."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/field/fieldext.v",
        "date": "2019-11-03T21:20:35Z",
        "comment": "Conversely, `base1`, `base2`, `base3`, and `base5` are not necessary here because there are intermediate structures between `fieldExtType` and `comRingType`, `comUnitRingType`, `idomainType`, and `comAlgType`. (I think there is no problem to have these redundant coercions and I'm not suggesting to remove them. I'm just trying to provide some information to understand packed classes.)"
      },
      {
        "author": "hivert",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2019-11-04T10:54:34Z",
        "comment": "Good catch ! I mixed up the doc..."
      },
      {
        "author": "hivert",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2019-11-04T10:55:08Z",
        "comment": "Thanks ! This means I'm starting to get the thing at last !"
      },
      {
        "author": "hivert",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2019-11-04T10:59:52Z",
        "comment": "Good catch again"
      },
      {
        "author": "hivert",
        "file": "mathcomp/field/fieldext.v",
        "date": "2019-11-04T11:02:26Z",
        "comment": "Thanks for the explanation !"
      },
      {
        "author": "hivert",
        "file": "mathcomp/field/fieldext.v",
        "date": "2019-11-04T11:17:35Z",
        "comment": "However, I think that the coercion `base6` should be exported to allow for inheritance of `xclass`. Is that right ?"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/field/fieldext.v",
        "date": "2019-11-04T11:57:24Z",
        "comment": "@hivert Yes. At least `base`, `base4`, ~`base5`,~ and `base6` should be exported here."
      },
      {
        "author": "hivert",
        "file": "mathcomp/field/fieldext.v",
        "date": "2019-11-04T12:41:10Z",
        "comment": "Good ! That was my guess ! Uploading a fix..."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2019-11-04T12:58:17Z",
        "comment": "This line has not been fixed yet. Please replace two occurrences of `comAlgType` with `comUnitAlgType`."
      },
      {
        "author": "hivert",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2019-11-04T14:50:54Z",
        "comment": "Sorry ! Going too fast..."
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "hivert",
        "committer": "hivert",
        "hash": "8150209d2aaa0034b3dca9d82be1aeb11a12b5ea",
        "message": "Interface for commutative and commutative-unitary algebras\nInitial properties of polynomials in R-algebras",
        "date": "2019-11-03T08:26:12Z"
      },
      {
        "author": "hivert",
        "committer": "hivert",
        "hash": "6ba0e77cd7f8d68647790fe2b704f35ae76ad1f8",
        "message": "Fixed inheritance of fieldExt / fieldOver / splitting field",
        "date": "2019-11-04T12:42:59Z"
      },
      {
        "author": "hivert",
        "committer": "hivert",
        "hash": "d20f0750b11fc1b5ba83d9b40c04df6e9e30e69a",
        "message": "Fixed the documentation",
        "date": "2019-11-04T14:50:27Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 405,
    "diff_summary": [
      {
        "file": ".gitlab-ci.yml",
        "status": "M",
        "additions": 147,
        "deletions": 140
      },
      {
        "file": "mathcomp/algebra/ssrnum.v",
        "status": "M",
        "additions": 147,
        "deletions": 140
      },
      {
        "file": "mathcomp/ssreflect/order.v",
        "status": "M",
        "additions": 147,
        "deletions": 140
      }
    ],
    "state": "merged",
    "open_date": "2019-10-31T12:18:22Z",
    "update_date": "2019-10-31T15:42:58Z",
    "discussion": [],
    "review_discussion": [
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/order.v",
        "date": "2019-10-31T13:10:04Z",
        "comment": "Notations ending with `%O` in order.v and with `%R` in ssrnum.v should be in scope `fun_scope` as well."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/order.v",
        "date": "2019-10-31T13:21:58Z",
        "comment": "Yes. Fixed."
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "42d11b96b9784816f40b8be67dae546d841f9428",
        "message": "Fix notation modifiers and scopes",
        "date": "2019-10-31T13:24:12Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "fe7851ac17cddfda11ba22a8dfc235d17cadd818",
        "message": "Fix CI",
        "date": "2019-10-31T13:24:16Z"
      }
    ]
  },
  {
    "author": "anton-trunov",
    "number": 403,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 6,
        "deletions": 4
      },
      {
        "file": "mathcomp/ssreflect/fingraph.v",
        "status": "M",
        "additions": 6,
        "deletions": 4
      }
    ],
    "state": "merged",
    "open_date": "2019-10-30T21:38:30Z",
    "update_date": "2019-11-14T14:58:19Z",
    "discussion": [
      {
        "author": "amahboubi",
        "date": "2019-11-14T10:01:29Z",
        "comment": "Good catch!"
      },
      {
        "author": "amahboubi",
        "date": "2019-11-14T10:05:21Z",
        "comment": "Unfortunately, with the recent merge of other PR, the change log now has a silly conflict. Could you resolve it ? I will then merge right away. Thanks and sorry for the inconvenience."
      },
      {
        "author": "anton-trunov",
        "date": "2019-11-14T12:25:27Z",
        "comment": "@amahboubi No worries :) I rebased on top of `master`. Should be good to go."
      },
      {
        "author": "amahboubi",
        "date": "2019-11-14T14:58:13Z",
        "comment": "Thanks @anton-trunov !"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "anton-trunov",
        "committer": "anton-trunov",
        "hash": "d2bd05682cce7502f569bbb02e483a86655305d0",
        "message": "fingraph: remove fin_inj_bij lemma as duplicate of injF_bij from fintype",
        "date": "2019-11-14T12:23:22Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 402,
    "diff_summary": [
      {
        "file": ".gitlab-ci.yml",
        "status": "M",
        "additions": 850,
        "deletions": 774
      },
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 850,
        "deletions": 774
      },
      {
        "file": "mathcomp/algebra/rat.v",
        "status": "M",
        "additions": 850,
        "deletions": 774
      },
      {
        "file": "mathcomp/algebra/ssrint.v",
        "status": "M",
        "additions": 850,
        "deletions": 774
      },
      {
        "file": "mathcomp/algebra/ssrnum.v",
        "status": "M",
        "additions": 850,
        "deletions": 774
      },
      {
        "file": "mathcomp/field/algebraics_fundamentals.v",
        "status": "M",
        "additions": 850,
        "deletions": 774
      },
      {
        "file": "mathcomp/ssreflect/order.v",
        "status": "M",
        "additions": 850,
        "deletions": 774
      }
    ],
    "state": "merged",
    "open_date": "2019-10-30T13:49:48Z",
    "update_date": "2019-10-30T17:28:59Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2019-10-30T13:51:25Z",
        "comment": "@pi8027 great! However I am afraid you will have to patch all the dependencies :cry: "
      },
      {
        "author": "pi8027",
        "date": "2019-10-30T13:52:24Z",
        "comment": "@CohenCyril I think I need to patch only real-closed."
      },
      {
        "author": "pi8027",
        "date": "2019-10-30T14:38:50Z",
        "comment": "> I think I need to patch only real-closed.\r\n\r\nFixed in math-comp/real-closed#16."
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "a5bc4ee1eb2b7d856d3a892dbdc37e976b4208a4",
        "message": "Rename: (l|L)attice -> (d|D)istrLattice",
        "date": "2019-10-30T13:48:06Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "ee6ef399e4cbfe952fc76c146960b8eabbf7d7ce",
        "message": "Fix CI",
        "date": "2019-10-30T13:48:11Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 400,
    "diff_summary": [
      {
        "file": "mathcomp/algebra/ssralg.v",
        "status": "M",
        "additions": 1,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2019-10-26T14:37:04Z",
    "update_date": "2019-10-30T13:47:59Z",
    "discussion": [
      {
        "author": "ejgallego",
        "date": "2019-10-30T18:35:48Z",
        "comment": "Hi folks,\r\n\r\nthis PR seems to have broken GeoCoq:\r\n```\r\nFile \"./Meta_theory/Models/POF_to_Tarski.v\", line 432, characters 0-61:\r\nError: The RHS of scalerBr\r\n    (_ *: _ - _ *: _)\r\ndoes not match any subterm of the goal\r\n```\r\nwhere the code is:\r\nhttps://github.com/GeoCoq/GeoCoq/blob/ae5b7aecd1ab587e2c039904a20b55610f136753/Meta_theory/Models/POF_to_Tarski.v#L425-L434\r\n```coq\r\nLemma extension_contraction x y z k:\r\n  k != 0 -> extension x y k == z = (contraction x z k == y).\r\nProof.\r\nmove=> k_neq0; rewrite /extension /contraction.\r\nsuffices: (k*:(k^-1 *: (y - x) + x) == k*:z) = (k^-1 *: (y - x) + x == z).\r\n  move<-; rewrite scalerDr scalerA divff // scale1r eq_sym -subr_eq.\r\n  by rewrite -subr_eq opprK -scalerBr.\r\nrewrite -subr_eq0 -[X in _ = X]subr_eq0 -scalerBr scaler_eq0. (* <- bad line *)\r\nby move/negPf: k_neq0 ->; rewrite orFb.\r\nQed.\r\n```\r\nGoal in the broken state is:\r\n```\r\n  (k *: (k^-1 *: (y - x) + x) == k *: z) = (k^-1 *: (y - x) + x == z)\r\n```\r\nIn particular now `-subr_eq0` doesn't match the first `k *: _ == _` as it did before. I wonder what's going on, the fix upstream is easy, just letting you know.\r\n\r\nFixed tactic:\r\n```\r\nrewrite -[k *: _ == _]subr_eq0 -[X in _ = X]subr_eq0 -scalerBr scaler_eq0.\r\n```"
      },
      {
        "author": "pi8027",
        "date": "2019-10-31T22:52:36Z",
        "comment": "Dear @ejgallego, thank you so much for fixing the issue I exposed. This is a variant of the subterm selection problem: #289. `rewrite -[LHS]subr_eq0 -[RHS]subr_eq0 -scalerBr scaler_eq0` might be a smart fix, but anyway, currently we have no solution other than giving patterns explicitly to indicate which subterm to rewrite."
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "a4d04cdad0a52db675eeab21dec3d46468ea657c",
        "message": "Add an explicit type annotation to GRing.scale\n\n`V` was wrongly eta-expanded before:\nGRing.scale\n     : forall (R : ringType) (V : lmodType R),\n       R -> GRing.Zmodule.Pack (GRing.Lmodule.class V) ->\n       GRing.Zmodule.Pack (GRing.Lmodule.class V)",
        "date": "2019-10-26T14:32:30Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 399,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 28,
        "deletions": 17
      },
      {
        "file": "CONTRIBUTING.md",
        "status": "M",
        "additions": 28,
        "deletions": 17
      },
      {
        "file": "mathcomp/ssreflect/ssrnat.v",
        "status": "M",
        "additions": 28,
        "deletions": 17
      }
    ],
    "state": "merged",
    "open_date": "2019-10-25T18:32:49Z",
    "update_date": "2019-11-20T15:19:11Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2019-11-14T15:07:10Z",
        "comment": "@ybertot this PR is now ready for review"
      },
      {
        "author": "CohenCyril",
        "date": "2019-11-15T15:28:56Z",
        "comment": "@ybertot fixed.\r\nI would like to get @ggonthier's opinion on the renaming though..."
      },
      {
        "author": "ggonthier",
        "date": "2019-11-15T16:25:51Z",
        "comment": "@CohenCyril I have to disagree with the naming convention you use. `l` and `r` are used to refer to the sides of a binary operators; for a relation `L` and `R` are used, though often omitted when the side is unambiguous. For inequalities we also use `ge` of `gt` to indicate the operation is on the small (left-hand) side of a comparison, so a more reasonable renaming would be `leq_subr -> geq_subr`. But given how disruptive renaming with allocation of such a widely used lemma is, I'm fairly reluctant - the new lemma will be nowhere nearly as useful, so it can have a somewhat less natural name."
      },
      {
        "author": "ggonthier",
        "date": "2019-11-15T16:31:49Z",
        "comment": "A technical point: `<`, `<=`, and `=` are all at level 70, which is in principle non-associative. Though camlp5 does not implement this (equating it to left associative), you should not take advantage of this, and parenthesise the left-hand side of equations of the form `(m < m - n) = false`."
      },
      {
        "author": "CohenCyril",
        "date": "2019-11-18T14:43:11Z",
        "comment": "@ybertot @ggonthier I took @ggonthier into account and documented https://github.com/math-comp/math-comp/pull/399#issuecomment-554429326 in the CONTRIBUTING.md"
      },
      {
        "author": "ybertot",
        "date": "2019-11-20T08:33:02Z",
        "comment": "@ggonthier Can you confirm you approve the new naming scheme?"
      },
      {
        "author": "ggonthier",
        "date": "2019-11-20T09:44:29Z",
        "comment": "@ybertot @CohenCyril The new naming looks good to me."
      },
      {
        "author": "ybertot",
        "date": "2019-11-20T15:19:26Z",
        "comment": "Thanks"
      }
    ],
    "review_discussion": [
      {
        "author": "anton-trunov",
        "file": "mathcomp/ssreflect/ssrnat.v",
        "date": "2019-10-28T20:07:49Z",
        "comment": "I think `ltn_subl` should have `F` suffix because of `false`. Maybe something like `ltn_subrF`?"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/ssrnat.v",
        "date": "2019-10-29T09:10:10Z",
        "comment": "The `F` suffix is there when there could be an ambiguity... so indeed if we reuse the name `ltn_subr`, yes we should, but I am not convinced..."
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "f6d25edde35e9e1fe6260c7bd3a0717147560d40",
        "message": "More arithmetic theorems\n\n- Generalizing `ltn_subr`\n- Adding `ltn_subl` and `ltn_subr`\n- Changing conclusion of `ltn_predl` to `0 < n` instead of `n != 0`",
        "date": "2019-11-18T14:20:15Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "359abfc1d67843216b0362d2fee3b8d650ff7ec0",
        "message": "Documenting `L` and `R` in `CONTRIBUTING.md`",
        "date": "2019-11-18T14:20:15Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "95e69d88e9f629c043939b8315e73dbb58852d9a",
        "message": "fixing CHANGELOG and ltn_pred lemmas",
        "date": "2019-11-18T14:39:33Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 397,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 3,
        "deletions": 6
      },
      {
        "file": "mathcomp/ssreflect/ssrnat.v",
        "status": "M",
        "additions": 3,
        "deletions": 6
      }
    ],
    "state": "merged",
    "open_date": "2019-10-25T17:10:30Z",
    "update_date": "2019-10-26T11:02:59Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "45b92eabb37cf1f8465ed2f3abe13666096c5c27",
        "message": "Removing duplicate lemma `addnKC` (= `addKn`)",
        "date": "2019-10-25T17:10:18Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 396,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 162,
        "deletions": 6
      },
      {
        "file": "mathcomp/ssreflect/div.v",
        "status": "M",
        "additions": 162,
        "deletions": 6
      },
      {
        "file": "mathcomp/ssreflect/ssrnat.v",
        "status": "M",
        "additions": 162,
        "deletions": 6
      }
    ],
    "state": "merged",
    "open_date": "2019-10-25T00:01:58Z",
    "update_date": "2019-10-25T10:36:52Z",
    "discussion": [
      {
        "author": "amahboubi",
        "date": "2019-10-25T07:50:36Z",
        "comment": "I am about to be mostly offline for one week and I have no time to check this today. But I expect this one to be easy. @thery can you have a look?"
      }
    ],
    "review_discussion": [
      {
        "author": "llelf",
        "file": "mathcomp/ssreflect/ssrnat.v",
        "date": "2019-10-25T16:34:53Z",
        "comment": "Isn’t that `addKn`?"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/ssrnat.v",
        "date": "2019-10-25T17:05:18Z",
        "comment": "Yes you are right. I will remove it."
      },
      {
        "author": "anton-trunov",
        "file": "mathcomp/ssreflect/ssrnat.v",
        "date": "2019-10-28T13:05:21Z",
        "comment": "@CohenCyril There is an equivalence like `ltn_subr` lemma: `(n - m < n) = (m > 0) && (n > 0)`. Do you think it's worth it to add the equivalence too?"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/ssrnat.v",
        "date": "2019-10-28T18:30:10Z",
        "comment": "cf #399 and #398 "
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "30e7fe9f41fc7d5c4741257914c78c183926f02c",
        "message": "More arithmetic theorems\n\nIn ssrnat:\n- some trivial results in ssrnat `addnKC`, `ltn_predl`, `ltn_predr`, `ltn_subr` and `predn_sub`\n- theorems about `n <=/< p +/- m`  and `m +/- n <=/< p`\n  `leq_psubRL`, `ltn_psubLR`, `leq_subRL`, `ltn_subLR`,\n  `leq_subCl`, `leq_psubCr`, `leq_subCr`, `ltn_subCr`, `ltn_psubCl` and `ltn_subCl`\n\nIn div:\n- theorems about the euclidean division of additions and subtraction,\n  + without preconditions of divisibility:\n    `edivnD`, `edivnB`, `divnD`, `divnB`, `modnD`, `modnB`\n  + with divisibility of one argument:\n    `divnDMl`, `divnMBl`, `divnBMl`, `divnBl` and `divnBr`\n  + specialization of the former theorems for .+1 and .-1:\n    `edivnS`, `divnS`, `modnS`, `edivn_pred`, `divn_pred` and `modn_pred`",
        "date": "2019-10-25T00:00:48Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 395,
    "diff_summary": [
      {
        "file": ".gitlab-ci.yml",
        "status": "M",
        "additions": 174,
        "deletions": 195
      },
      {
        "file": "mathcomp/algebra/interval.v",
        "status": "M",
        "additions": 174,
        "deletions": 195
      },
      {
        "file": "mathcomp/algebra/ssrnum.v",
        "status": "M",
        "additions": 174,
        "deletions": 195
      },
      {
        "file": "mathcomp/field/algebraics_fundamentals.v",
        "status": "M",
        "additions": 174,
        "deletions": 195
      },
      {
        "file": "mathcomp/ssreflect/order.v",
        "status": "M",
        "additions": 174,
        "deletions": 195
      }
    ],
    "state": "merged",
    "open_date": "2019-10-24T16:18:23Z",
    "update_date": "2019-10-24T22:59:40Z",
    "discussion": [
      {
        "author": "amahboubi",
        "date": "2019-10-24T17:01:46Z",
        "comment": "@pi8027 Could you explain this PR?"
      },
      {
        "author": "pi8027",
        "date": "2019-10-24T18:39:05Z",
        "comment": "@amahboubi Yes. This PR partially addresses TODOs listed in https://github.com/math-comp/math-comp/pull/270#issuecomment-545343995.\r\n\r\n> TODO list on order.v:\r\n> \r\n> * header:  remove misleading sentences, list the notations and definitions introduced by the library\r\n> * header: improve the documentation of what you get by importing selected of sub-modules\r\n\r\nDone by @affeldt-aist. The `Order.Def` is removed and the `Order.Syntax` is exported from `ssreflect.order` so I think we don't need to explain them.\r\n\r\n> * header: document better the tagging mechanism allowing to work with different order structures on a same type. This could be in the header and/or in later in the file\r\n\r\nNot done yet. This will be addressed by explaining \"instances for division on nat\".\r\n\r\n> * remove the no-op last Import\r\n> * BTW do we need Order.Def?\r\n\r\nDone. `Def` modules (`Order.Def`, `Order.POrderDef`, ...) are removed so that definitions should be accessed by using their qualified names (`Order.le`, `Order.lt`, ...).\r\n\r\n> * What about importing Order.Syntax in all of the subsequent Order.LTheory, Order.TTheory, etc. Note: a Syntax module is only useful to solve potential grammar conflicts. Which does not seem to be the case here.\r\n\r\nNow `Order.Syntax` is exported by default.\r\n\r\n> * ensure all notations do have a scope\r\n\r\nDone.\r\n\r\n> * declare instances for division on nat inside this file, and use this as a documentation/template\r\n\r\nThat `porderType` instance is provided but not explained yet. I have a problem with proving `left_distributive gcdn lcmn` so there is no `latticeType` instance for this now."
      },
      {
        "author": "CohenCyril",
        "date": "2019-10-24T19:05:16Z",
        "comment": "@amahboubi \r\n> @pi8027 Could you explain this PR?\r\n\r\nThis is a PR on top of https://github.com/math-comp/math-comp/tree/experiment/order to amend it. If @pi8027 had commit rights to mathcomp he would commit directly there. Hence IMO, the only explanation this commit should have is: \"Contribution to PR #270: @CohenCyril have a look and add it to #270 unless you see something obviously wrong.\""
      },
      {
        "author": "amahboubi",
        "date": "2019-10-25T07:04:50Z",
        "comment": "@pi8027 Many thanks for the detailed explanation, I really appreciate.\r\n@CohenCyril \r\n> Hence IMO, the only explanation this commit should have is: ...\r\n\r\nWhatever level of explanation, it's important for others to have a line of comment describing its role/status. This one had none.\r\n"
      },
      {
        "author": "CohenCyril",
        "date": "2019-10-25T07:24:53Z",
        "comment": "> Whatever level of explanation, it's important for others to have a line of comment describing its role/status. This one had none.\r\n\r\nYes, I agreed."
      }
    ],
    "review_discussion": [
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/order.v",
        "date": "2019-10-24T19:11:25Z",
        "comment": "Can you leave this out? I have a more complete alternative for this already."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/order.v",
        "date": "2019-10-24T19:19:10Z",
        "comment": "Sure."
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "58653c1b940b45d450dd9bba1727375dba898017",
        "message": "order.v: remove Order.Def, export Order.Syntax by default, and put missing scopes",
        "date": "2019-10-24T19:16:15Z"
      },
      {
        "author": "affeldt-aist",
        "committer": "pi8027",
        "hash": "90be88532d79f35d4b8c106cef0e9aff76970967",
        "message": "editing documentation in order.v and ssrnum.v",
        "date": "2019-10-24T19:16:25Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "182b4341cd65e2676bc0e819a7c7e6acf659332f",
        "message": "Fix CI",
        "date": "2019-10-24T19:16:35Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 394,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 18,
        "deletions": 3
      },
      {
        "file": "mathcomp/ssreflect/div.v",
        "status": "M",
        "additions": 18,
        "deletions": 3
      }
    ],
    "state": "merged",
    "open_date": "2019-10-22T19:22:37Z",
    "update_date": "2019-10-24T12:16:24Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2019-10-23T17:51:50Z",
        "comment": "Ready to merge?"
      }
    ],
    "review_discussion": [
      {
        "author": "amahboubi",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2019-10-23T12:35:20Z",
        "comment": "I do not know what \"natural\" means. I just write \"new arithmetic theorems\"."
      },
      {
        "author": "CohenCyril",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2019-10-23T13:43:13Z",
        "comment": "fixed"
      }
    ],
    "tags": [
      {
        "tag": "kind: enhancement",
        "description": "Issue or PR about addition of features."
      }
    ],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "c99c89637757ac578ad80f99e211b74c6e69a223",
        "message": "Added and generalized arithmetic theorems.\n\n- Added: `modn_divl` and `divn_modl`.\n- Generalized `muln_modr` and `muln_modl` removing hypothesis `0 < p`.",
        "date": "2019-10-23T13:41:15Z"
      }
    ]
  },
  {
    "author": "arthuraa",
    "number": 393,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 33,
        "deletions": 2
      },
      {
        "file": "mathcomp/ssreflect/choice.v",
        "status": "M",
        "additions": 33,
        "deletions": 2
      },
      {
        "file": "mathcomp/ssreflect/eqtype.v",
        "status": "M",
        "additions": 33,
        "deletions": 2
      },
      {
        "file": "mathcomp/ssreflect/fintype.v",
        "status": "M",
        "additions": 33,
        "deletions": 2
      },
      {
        "file": "mathcomp/ssreflect/ssrfun.v",
        "status": "M",
        "additions": 33,
        "deletions": 2
      }
    ],
    "state": "merged",
    "open_date": "2019-10-19T19:58:26Z",
    "update_date": "2019-10-25T07:47:31Z",
    "discussion": [
      {
        "author": "amahboubi",
        "date": "2019-10-21T07:47:58Z",
        "comment": "Hi @arthuraa, thanks for your contribution! Regarding your question:\r\n> The notation is defined in ssrfun. Since most of this file lives in the Coq source now, I did not add a corresponding entry there. Would it make sense to do so?\r\n\r\nI think you should add a header to mathcomp's ssrfun, since you introduced the notation here. This is what happens, e.g., in file [ssreflect.v](https://github.com/math-comp/math-comp/blob/5c4328261edace427e7cad73fdca288f6d73b87d/mathcomp/ssreflect/ssreflect.v#L9). I will merge as soon as you add this documentation."
      },
      {
        "author": "arthuraa",
        "date": "2019-10-21T14:24:22Z",
        "comment": "@amahboubi Sounds good! How does this look?"
      },
      {
        "author": "amahboubi",
        "date": "2019-10-21T14:32:07Z",
        "comment": "It looks great."
      },
      {
        "author": "CohenCyril",
        "date": "2019-10-21T15:46:23Z",
        "comment": "Oh, but if you add something to the local `ssrfun` you should also add it to Coq's... did you? If not, could you do it?"
      },
      {
        "author": "arthuraa",
        "date": "2019-10-22T14:03:33Z",
        "comment": "@CohenCyril Just did: https://github.com/coq/coq/pull/10932."
      },
      {
        "author": "amahboubi",
        "date": "2019-10-24T12:15:52Z",
        "comment": "@CohenCyril, the PR has been merged in Coq. Anything else you would like @arthuraa to do before we merge?"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "arthuraa",
        "committer": "arthuraa",
        "hash": "bce20a51c4be68cd23ea4289035f5eb54f24c360",
        "message": "Add notation and instances for empty type.",
        "date": "2019-10-19T19:43:44Z"
      },
      {
        "author": "arthuraa",
        "committer": "arthuraa",
        "hash": "3c94716d3c875d8ef0458e25f7059e1487f91e43",
        "message": "Update change log.",
        "date": "2019-10-19T19:49:11Z"
      },
      {
        "author": "arthuraa",
        "committer": "arthuraa",
        "hash": "04db470cba59fcebdbdbe5595e56f647c32c3d7c",
        "message": "Mention void in fintype header.",
        "date": "2019-10-19T19:51:49Z"
      },
      {
        "author": "arthuraa",
        "committer": "arthuraa",
        "hash": "847532a38003e3c9efeb60d522744257410ad4e5",
        "message": "Remove unnecessary explicit argument.",
        "date": "2019-10-21T14:21:49Z"
      },
      {
        "author": "arthuraa",
        "committer": "arthuraa",
        "hash": "058aa7bb585bac2bbadf27ffb1d55eb76be23ef0",
        "message": "Documentation header for void.",
        "date": "2019-10-21T14:22:13Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 392,
    "diff_summary": [
      {
        "file": ".gitlab-ci.yml",
        "status": "M",
        "additions": 176,
        "deletions": 113
      },
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 176,
        "deletions": 113
      },
      {
        "file": "mathcomp/algebra/rat.v",
        "status": "M",
        "additions": 176,
        "deletions": 113
      },
      {
        "file": "mathcomp/algebra/ssralg.v",
        "status": "M",
        "additions": 176,
        "deletions": 113
      },
      {
        "file": "mathcomp/algebra/ssrint.v",
        "status": "M",
        "additions": 176,
        "deletions": 113
      },
      {
        "file": "mathcomp/algebra/ssrnum.v",
        "status": "M",
        "additions": 176,
        "deletions": 113
      },
      {
        "file": "mathcomp/field/algC.v",
        "status": "M",
        "additions": 176,
        "deletions": 113
      }
    ],
    "state": "merged",
    "open_date": "2019-10-15T09:09:32Z",
    "update_date": "2019-10-16T08:26:36Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "cad2d94fda7740a6c4c55298d44923a8c59a6275",
        "message": "Redefine `normedDomainType` (now `normedZmodType`)\n\n- Redefine `normedDomainType` to drop ring and integral domain axioms.\n- Add canonical instance of `normedZmodType` for `prod`.",
        "date": "2019-10-15T18:51:52Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "3a580f9b5dc37f2cfd27f0e9451ba5b60fa0b183",
        "message": "Fix CI",
        "date": "2019-10-15T18:52:26Z"
      }
    ]
  },
  {
    "author": "erikmd",
    "number": 391,
    "diff_summary": [
      {
        "file": ".gitlab-ci.yml",
        "status": "M",
        "additions": 38,
        "deletions": 13
      },
      {
        "file": "coq-mathcomp-algebra.opam",
        "status": "M",
        "additions": 38,
        "deletions": 13
      },
      {
        "file": "coq-mathcomp-character.opam",
        "status": "M",
        "additions": 38,
        "deletions": 13
      },
      {
        "file": "coq-mathcomp-field.opam",
        "status": "M",
        "additions": 38,
        "deletions": 13
      },
      {
        "file": "coq-mathcomp-fingroup.opam",
        "status": "M",
        "additions": 38,
        "deletions": 13
      },
      {
        "file": "coq-mathcomp-solvable.opam",
        "status": "M",
        "additions": 38,
        "deletions": 13
      },
      {
        "file": "coq-mathcomp-ssreflect.opam",
        "status": "M",
        "additions": 38,
        "deletions": 13
      }
    ],
    "state": "merged",
    "open_date": "2019-10-15T06:53:45Z",
    "update_date": "2019-10-18T09:34:06Z",
    "discussion": [
      {
        "author": "erikmd",
        "date": "2019-10-17T21:46:19Z",
        "comment": "Hi @CohenCyril, do you agree to merge this PR (or do you have some changes to suggest)?\r\nKind regards."
      },
      {
        "author": "CohenCyril",
        "date": "2019-10-18T09:33:27Z",
        "comment": "We did not get the chance to discuss compatibility dropping at the last dev meeting, we should put it on the agenda of the next one. Meanwhile let's not drop any Coq."
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "erikmd",
        "committer": "erikmd",
        "hash": "b31b32b7bcef4179566a4f707705d5c7055c521d",
        "message": "feat: Add build for mathcomp/mathcomp-dev:coq-8.10",
        "date": "2019-10-15T06:43:43Z"
      },
      {
        "author": "erikmd",
        "committer": "erikmd",
        "hash": "67972344866b62f1f4b06d479e29d3eee695bc60",
        "message": "fix(coq-mathcomp-ssreflect.opam): Bump coq upper bound",
        "date": "2019-10-15T08:03:02Z"
      },
      {
        "author": "erikmd",
        "committer": "erikmd",
        "hash": "3e1eeb04d9bf837fcdd8c771e023d1ca16c8aaeb",
        "message": "fix(*.opam): Remove \"remove\" directive\n\nhref: coq/opam-coq-archive#703",
        "date": "2019-10-15T08:16:35Z"
      }
    ]
  },
  {
    "author": "thery",
    "number": 390,
    "diff_summary": [
      {
        "file": "mathcomp/algebra/ssralg.v",
        "status": "M",
        "additions": 1,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2019-10-14T16:08:48Z",
    "update_date": "2019-10-15T10:36:11Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "thery",
        "committer": "thery",
        "hash": "e48f266b9f2418a619fc1217250fd2942854dcbe",
        "message": "typo",
        "date": "2019-10-14T16:06:30Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 389,
    "diff_summary": [
      {
        "file": ".gitlab-ci.yml",
        "status": "M",
        "additions": 66,
        "deletions": 155
      },
      {
        "file": "mathcomp/algebra/ssrnum.v",
        "status": "M",
        "additions": 66,
        "deletions": 155
      },
      {
        "file": "mathcomp/field/algebraics_fundamentals.v",
        "status": "M",
        "additions": 66,
        "deletions": 155
      },
      {
        "file": "mathcomp/ssreflect/order.v",
        "status": "M",
        "additions": 66,
        "deletions": 155
      }
    ],
    "state": "merged",
    "open_date": "2019-10-08T09:15:14Z",
    "update_date": "2019-10-08T11:05:29Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "e722116080eb0c6fd53818c86178e6048516da0e",
        "message": "Rename `totalLatticeMixin` to `totalPOrderMixin` and several refactor\n\n- Rename `totalLatticeMixin` to `totalPOrderMixin`.\n- Refactor num mixins.\n- Use `Num.min` and `Num.max` rather than lattice notations if applicable.",
        "date": "2019-10-08T08:11:06Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "9ead8721380de19f9927f5fd5f1e3b587aa1a326",
        "message": "Fix CI",
        "date": "2019-10-08T09:11:34Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 388,
    "diff_summary": [
      {
        "file": "mathcomp/algebra/rat.v",
        "status": "M",
        "additions": 1384,
        "deletions": 701
      },
      {
        "file": "mathcomp/algebra/ssrint.v",
        "status": "M",
        "additions": 1384,
        "deletions": 701
      },
      {
        "file": "mathcomp/algebra/ssrnum.v",
        "status": "M",
        "additions": 1384,
        "deletions": 701
      },
      {
        "file": "mathcomp/field/algebraics_fundamentals.v",
        "status": "M",
        "additions": 1384,
        "deletions": 701
      },
      {
        "file": "mathcomp/ssreflect/order.v",
        "status": "M",
        "additions": 1384,
        "deletions": 701
      }
    ],
    "state": "closed",
    "open_date": "2019-10-07T12:32:39Z",
    "update_date": "2019-12-12T21:57:01Z",
    "discussion": [
      {
        "author": "amahboubi",
        "date": "2019-10-24T12:44:12Z",
        "comment": "This PR needs an assignee : @CohenCyril ? @strub ?"
      },
      {
        "author": "strub",
        "date": "2019-10-24T12:45:19Z",
        "comment": "Since I'd like to build on top, I am ok to take the role."
      },
      {
        "author": "amahboubi",
        "date": "2019-10-24T12:48:37Z",
        "comment": "Cool, thanks @strub ! I am marking you as such."
      },
      {
        "author": "CohenCyril",
        "date": "2019-10-24T19:02:23Z",
        "comment": "@amahboubi @strub this PR is a draft, I do not think it should have assignee (or that the assignee should be taking actions) before @pi8027 decides it's ready..."
      },
      {
        "author": "pi8027",
        "date": "2019-10-25T11:58:02Z",
        "comment": "I hope I will make this PR ready to merge soon. So it's good to have an assignee. Thank you @strub!"
      },
      {
        "author": "pi8027",
        "date": "2019-12-12T21:57:01Z",
        "comment": "Since I did not find how to change the target branch of an existing PR, I close this PR and open another one to retarget `math-comp:master`."
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "amahboubi",
        "committer": "web-flow",
        "hash": "bb8f291fc40668f987c8ea5cf3941980342e46b2",
        "message": "Merge pull request #270 from math-comp/experiment/order\n\nDispatching order and norm, and anticipating normed modules.",
        "date": "2019-12-11T15:46:11Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "61e144015226b46d479de4c5650d0adf4a429a5f",
        "message": "Non-distributive lattice",
        "date": "2019-12-11T16:27:44Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 387,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 35,
        "deletions": 32
      },
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 35,
        "deletions": 32
      }
    ],
    "state": "merged",
    "open_date": "2019-10-03T10:55:43Z",
    "update_date": "2019-10-07T08:30:09Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "11d76d1ac43adb987ea4c7b7667e63a9e30fdcce",
        "message": "Add flatten_map1 and allpairs_consr",
        "date": "2019-10-05T12:40:59Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 386,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 12,
        "deletions": 9
      },
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 12,
        "deletions": 9
      }
    ],
    "state": "merged",
    "open_date": "2019-09-30T15:41:36Z",
    "update_date": "2019-10-01T11:02:59Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2019-09-30T16:12:58Z",
        "comment": "LGTM, merge when CI passes."
      }
    ],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: enhancement",
        "description": "Issue or PR about addition of features."
      }
    ],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "24f5bdefd58fa3c9e3c31eb26443ff0f5eee30ed",
        "message": "Generalize `allpairs_catr` to non-`eqType`s",
        "date": "2019-09-30T20:19:55Z"
      }
    ]
  },
  {
    "author": "llelf",
    "number": 385,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/ssrnat.v",
        "status": "M",
        "additions": 1,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2019-09-28T19:40:29Z",
    "update_date": "2019-09-28T20:35:27Z",
    "discussion": [
      {
        "author": "amahboubi",
        "date": "2019-09-28T20:34:40Z",
        "comment": "Thanks!"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "llelf",
        "committer": "llelf",
        "hash": "c729ee3725fe9c0a4a47423ec7109dddaa4a0bdd",
        "message": "maxn comment fix",
        "date": "2019-09-28T19:37:52Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 384,
    "diff_summary": [
      {
        "file": ".dockerignore",
        "status": "D",
        "additions": 61,
        "deletions": 15
      },
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "D",
        "additions": 61,
        "deletions": 15
      },
      {
        "file": "Dockerfile.make",
        "status": "D",
        "additions": 61,
        "deletions": 15
      },
      {
        "file": "etc/utils/hierarchy.ml",
        "status": "D",
        "additions": 61,
        "deletions": 15
      },
      {
        "file": "mathcomp/Make.test-suite",
        "status": "D",
        "additions": 61,
        "deletions": 15
      },
      {
        "file": "mathcomp/Makefile.common",
        "status": "D",
        "additions": 61,
        "deletions": 15
      },
      {
        "file": "mathcomp/Makefile.coq.local",
        "status": "D",
        "additions": 61,
        "deletions": 15
      }
    ],
    "state": "merged",
    "open_date": "2019-09-26T08:09:45Z",
    "update_date": "2019-10-07T09:09:13Z",
    "discussion": [
      {
        "author": "erikmd",
        "date": "2019-10-01T11:20:09Z",
        "comment": "Hi @pi8027 \r\n[sorry for late reply]\r\n\r\n> Should we add CI support for the test suite? (Currently I don't see how to do it.)\r\n\r\nYes, sounds good:\r\n\r\nyou just need to: add one (or several) job(s) that trigger the proper `make` command, or extend an existing job (such as **`make-coq-latest:`**, i.e. MathComp with the latest stable release of Coq) to do this.\r\n\r\nIf you choose that last option, you'd just need to add the following in the end of file `Dockerfile.make` (not tested though, I assume `make test-suite` is the relevant line to add here):\r\n\r\n```bash\r\n  …\r\n  && cd mathcomp \\\r\n  && make Makefile.coq \\\r\n  && make -f Makefile.coq -j ${NJOBS} all \\\r\n  && make -f Makefile.coq install \\\r\n  && make test-suite\"]\r\n```\r\n\r\nand the GitLab CI job `make-coq-latest:` will essentially do this:\r\n\r\n`docker build -f Dockerfile.make --pull --build-arg=coq_image=\"coqorg/coq:latest\" --build-arg=compiler=\"edge\" -t \"mathcomp-dev:make_coq-latest\" .`"
      },
      {
        "author": "pi8027",
        "date": "2019-10-01T17:33:56Z",
        "comment": "Hi @erikmd, thank you for the answer. I changed `Dockerfile.make` as you said. Let see how it runs."
      },
      {
        "author": "pi8027",
        "date": "2019-10-01T18:28:07Z",
        "comment": "```\r\n+ make test-suite\r\n/home/coq/.opam/4.07.1+flambda/bin/coq_makefile  -f Make -o Makefile.coq\r\nmake -f Makefile.coq --no-print-directory\r\nmake[2]: Nothing to be done for 'real-all'.\r\nCOQBIN=/home/coq/.opam/4.07.1+flambda/bin/ ocaml ../etc/utils/hierarchy.ml -verify -R . mathcomp -lib all.all > test_suite/hierarchy_test.v\r\nCannot find file ../etc/utils/hierarchy.ml.\r\nmake: *** [Makefile.common:60: test_suite/hierarchy_test.v] Error 2\r\n```\r\nHmm... How can I call my utility in `etc` from `make` in this setting? I guess I need to declare a new variable in `Makefile.common` for the path of `hierarchy.ml` then use it to specify that path from `Dockerfile.make`."
      },
      {
        "author": "erikmd",
        "date": "2019-10-01T18:40:24Z",
        "comment": "Hi, very probably the issue is that the path ../etc/... was ignored by the .dockerignore file (which is mandatory to have so that the so-called Docker build context contains exactly the source code files... but not the .git folder and so on)\n\nLe 1 octobre 2019 20:28:08 GMT+02:00, Kazuhiko Sakaguchi <notifications@github.com> a écrit :\n>```\n>+ make test-suite\n>/home/coq/.opam/4.07.1+flambda/bin/coq_makefile  -f Make -o\n>Makefile.coq\n>make -f Makefile.coq --no-print-directory\n>make[2]: Nothing to be done for 'real-all'.\n>COQBIN=/home/coq/.opam/4.07.1+flambda/bin/ ocaml\n>../etc/utils/hierarchy.ml -verify -R . mathcomp -lib all.all >\n>test_suite/hierarchy_test.v\n>Cannot find file ../etc/utils/hierarchy.ml.\n>make: *** [Makefile.common:60: test_suite/hierarchy_test.v] Error 2\n>```\n>Hmm... How can I call my utility in `etc` from `make` in this setting?\n>I guess I need to declare a new variable in `Makefile.common` for the\n>path of `hierarchy.ml` then use it to specify that path from\n>`Dockerfile.make`.\n"
      },
      {
        "author": "erikmd",
        "date": "2019-10-01T20:08:18Z",
        "comment": "The CI is now green, but there is a [warning](https://gitlab.com/math-comp/math-comp/-/jobs/309186276):\r\n\r\n*/home/coq/.opam/4.07.1+flambda/bin/coq_makefile  -f Make -o Makefile.coqmake -f Makefile.coq --no-print-directorymake[2]: Nothing to be done for 'real-all'.COQBIN=/home/coq/.opam/4.07.1+flambda/bin/ ocaml ../etc/utils/hierarchy.ml -verify -R . mathcomp -lib all.all > test_suite/hierarchy_test.vcd test_suite; /home/coq/.opam/4.07.1+flambda/bin/coq_makefile  -f Make -o Makefile.coq **Warning: .. (used in -R or -Q) is not a subdirectory of the current directory***\r\n\r\nDo you think these lines should be refactored to avoid `..`? or is it a benign issue.\r\nhttps://github.com/math-comp/math-comp/blob/a4594c56cce42d4f3a110e0958cbecb851076d10/mathcomp/test_suite/Make#L3-L4"
      },
      {
        "author": "pi8027",
        "date": "2019-10-02T09:01:35Z",
        "comment": "@erikmd I moved `test_suite/Make` and `test_suite/Makefile.coq` to `Make.test-suite` and ~`Makefile.test-suite`~ `Makefile.test-suite.coq` respectively to avoid that warning. If I place more than two `Makefile`s generated by the `coq_makefile` utility in the same directory, the name of their dependency file `.coqdep.d` will conflict. But this name can be given from outside like this:\r\nhttps://github.com/math-comp/math-comp/pull/384/files#diff-9c0cdc05f486cab3d6cace8379825a57R34"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "a899bb7ef1d6a2c35b1b9a646dfeae332972f5f6",
        "message": "Fix and improve the test suite and Makefile\n\n- improve an error message produced by the `check_join` tactic,\n- fix the build of the test suite: `make test-suite`, and\n- add a new rule `only` to build a subset of MathComp.",
        "date": "2019-10-02T09:23:14Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 383,
    "diff_summary": [
      {
        "file": ".gitlab-ci.yml",
        "status": "M",
        "additions": 35,
        "deletions": 32
      },
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 35,
        "deletions": 32
      },
      {
        "file": "mathcomp/algebra/ssrnum.v",
        "status": "M",
        "additions": 35,
        "deletions": 32
      },
      {
        "file": "mathcomp/field/algebraics_fundamentals.v",
        "status": "M",
        "additions": 35,
        "deletions": 32
      },
      {
        "file": "mathcomp/ssreflect/order.v",
        "status": "M",
        "additions": 35,
        "deletions": 32
      }
    ],
    "state": "merged",
    "open_date": "2019-09-24T12:21:13Z",
    "update_date": "2019-10-07T08:28:20Z",
    "discussion": [
      {
        "author": "pi8027",
        "date": "2019-09-24T14:52:28Z",
        "comment": "Passed CI. ping: @CohenCyril "
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "30e8c01a794e53634371cfe2ef1165e7372ae156",
        "message": "Add (meet|join)_(l|r), some renamings, and small cleanup on section variables\n\nNew lemmas:\n- meet_l, meet_r, join_l, join_r.\n\nRenamings:\n- Order.BLatticeTheory.lexUl -> disjoint_lexUl,\n- Order.BLatticeTheory.lexUr -> disjoint_lexUr,\n- Order.TBLatticeTheory.lexIl -> cover_leIxl,\n- Order.TBLatticeTheory.lexIr -> cover_leIxr.",
        "date": "2019-10-05T13:04:52Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "2e03577d9ec274ae15c906eaf1a709b7bd019cde",
        "message": "fix CI",
        "date": "2019-10-05T13:04:58Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 382,
    "diff_summary": [
      {
        "file": ".gitlab-ci.yml",
        "status": "M",
        "additions": 8,
        "deletions": 4
      }
    ],
    "state": "merged",
    "open_date": "2019-09-06T11:08:00Z",
    "update_date": "2019-09-09T14:37:11Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "066106a2868734d9afa230963875a042a9fa6319",
        "message": "Fix CI overlays",
        "date": "2019-09-06T11:04:23Z"
      }
    ]
  },
  {
    "author": "hivert",
    "number": 381,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 63,
        "deletions": 2
      },
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 63,
        "deletions": 2
      }
    ],
    "state": "merged",
    "open_date": "2019-09-03T21:11:27Z",
    "update_date": "2019-11-18T08:54:24Z",
    "discussion": [
      {
        "author": "amahboubi",
        "date": "2019-10-24T12:37:07Z",
        "comment": "@hivert , thanks for contributing! @pi8027 @anton-trunov thanks for your comments! Are we ready to merge?\r\n"
      },
      {
        "author": "amahboubi",
        "date": "2019-10-24T12:38:28Z",
        "comment": "If so,  @hivert could you add a line to the change log listing the names of the lemmas added by this PR?"
      },
      {
        "author": "CohenCyril",
        "date": "2019-10-24T19:42:30Z",
        "comment": "@hivert thanks for contributing, I asked a few more script changes. Although I did them without Coq, I feel pretty confident. If one (or several) of my suggestions fails, 1. sorry for the inconvenience, 2. Tell me and I will take the time to download and try my changes."
      },
      {
        "author": "hivert",
        "date": "2019-10-27T08:48:13Z",
        "comment": "@CohenCyril I closed the change you requested that I manage to apply I commented the two remaining one. Since they are just minor comment I think I've taken care of all your requests. Please resolve the remaining conversations if you agree. I'm now  updating the changelog as asked by @amahboubi and resubmitting my PR. Thanks for the comments and the tips."
      },
      {
        "author": "CohenCyril",
        "date": "2019-11-06T14:57:11Z",
        "comment": "@hivert thanks for your update. I missed your update of the changelog, I am afraid you have to rebase and solve the conflict in the changelog now, sorry."
      },
      {
        "author": "hivert",
        "date": "2019-11-06T20:21:46Z",
        "comment": "This is a first time I resolve a conflict with the github interface. I hope this is Ok. \r\n\r\nBy the way, do you need me to squash all the change in a unique commit ?"
      },
      {
        "author": "CohenCyril",
        "date": "2019-11-14T11:51:45Z",
        "comment": "@hivert \r\n> This is a first time I resolve a conflict with the github interface. I hope this is Ok.\r\n\r\nAs with any git subtle manipulation done through the github interface, the result is not ok. (indeed it created a merge commit inside the branch). Can you please rebase this branch on top of master instead?\r\n\r\nThanks for your patience."
      },
      {
        "author": "CohenCyril",
        "date": "2019-11-14T11:52:18Z",
        "comment": "> By the way, do you need me to squash all the change in a unique commit ?\r\n\r\nAlso, yes, please squash. :smile: \r\n\r\n"
      },
      {
        "author": "ybertot",
        "date": "2019-11-18T08:54:54Z",
        "comment": "Thanks"
      }
    ],
    "review_discussion": [
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2019-09-04T07:12:11Z",
        "comment": "I prefer this one:\r\n```coq\r\nLemma take_take i j s : take i (take j s) = take (minn i j) s.\r\n```\r\n\r\nThen `takeC` can be a corollary of `take_take`.\r\n```coq\r\nLemma takeC i j s : take i (take j s) = take j (take i s).\r\nProof. by rewrite !take_take minnC. Qed.\r\n```"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2019-09-04T07:14:08Z",
        "comment": "We could also have:\r\n```coq\r\nLemma drop_take i j s : drop i (take j s) = take (j - i) (drop i s).\r\n```\r\n\r\nThen `take_drop` can be a corollary of `drop_take`.\r\n```coq\r\nLemma take_drop i j s : take i (drop j s) = drop j (take (i + j) s).\r\nProof. by rewrite drop_take addnK. Qed.\r\n```"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2019-09-04T08:15:42Z",
        "comment": "If `size_take` is changed as follows, we wouldn't need `size_take_leq`. (Indeed this change is backward incompatible.)\r\n```coq\r\nLemma size_take s : size (take n0 s) = minn n0 (size s).\r\n```"
      },
      {
        "author": "hivert",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2019-09-04T08:53:09Z",
        "comment": "In my opinion, my form of statement is slightly easier to use. Indeed, in the other case (i.e. when `i >= j`), one conclude instantaneously with `take_oversize`. Your form of statement is good when you don't know the relative order of `i` and `j` which is the case for  `takeC` but, in my experience, occur very rarely. Hence my choice of statement.\r\n\r\nAnyway, I would gladly put the two statements, provided we agree on the names.\r\n\r\nWhat do you think ?"
      },
      {
        "author": "hivert",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2019-09-04T08:57:40Z",
        "comment": "Again, this second form is only useful when `j >= i` otherwise one conclude with `drop_oversize`. And when `j >= i`, passing from `drop_take` to `take_drop` is just a matter of rewriting with `subnK`...\r\n\r\nAgain, if there is an agreement, I'm ok to add both.  "
      },
      {
        "author": "hivert",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2019-09-04T09:17:03Z",
        "comment": "In my code, I have dozens of occurrence of `size (take n0 s)` under the assumption that `le : n0 <= size s)`.  Currently we have to write \r\n```    rewrite size_map size_take -/(minn _ _) (minn_idPl le).``` \r\nwhich is not so bad, except that I can't manage to remember the name `minn_idPl`. I figured out that \r\n```    rewrite size_take_leq le.``` \r\nwas the easiest and fastest way to do it. With `minn` you'll have to do \r\n```    rewrite size_take_minn (minn_idPl le).```\r\n\r\nAgain, we could include more than one statement if we agree on the name. If the maintainers don't want to have yet another lemma, I'll also fully understand. "
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2019-09-04T09:21:52Z",
        "comment": "> In my code, I have dozens of occurrence of `size (take n0 s)` under the assumption that `le : n0 <= size s`.\r\n\r\nYou should be using `size_takel`, then."
      },
      {
        "author": "hivert",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2019-09-04T09:33:03Z",
        "comment": "So true ! Ok ! Let's remove this one."
      },
      {
        "author": "anton-trunov",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2019-09-04T14:51:13Z",
        "comment": "Here is an alternative one-line proof of `take_addn` showing that the lemma currently named `take_take` is useful, because it does not enforce a particular form of one of `take`'s arguments:\r\n```coq\r\nby rewrite take_drop addnC -(take_take i (j + i)) ?leq_addl ?cat_take_drop.\r\n```"
      },
      {
        "author": "anton-trunov",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2019-09-04T15:51:04Z",
        "comment": "I like this proof! By the way, by using `subnKC` it's possible to shave off `addnC` here:\r\n```coq\r\nmove=>/subnKC <-; move: (j-i) => d.\r\nby rewrite nseqD take_size_cat // size_nseq.\r\n```"
      },
      {
        "author": "anton-trunov",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2019-09-04T16:25:45Z",
        "comment": "Let me share a trick I sometimes use. Often times we'd like to weaken our hypothesis on the top of the goal stack in two different ways. We can define a duplicating lemma like this one:\r\n```coq\r\nLemma duP {A : Type} : A -> A * A.\r\nProof. by []. Qed.\r\n```\r\nwhich can be later used like so:\r\n```coq\r\ncase: (leqP i j) => [/subnKC {1}<- | /ltnW /duP[j_le_i /eqP->]].\r\n- by rewrite nseqD drop_size_cat // size_nseq.\r\nby rewrite drop_oversize // size_nseq.\r\n```\r\nThis, admittedly, may result in less readable proofs, but it lets one make less context shuffling steps."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2019-09-04T21:46:29Z",
        "comment": "I found my old proofs which use my version of `take_take` and `drop_take`. But I really didn't use them so much, and I did know `i <=j` does hold when I use `take_take`, as you said. Now I think both my suggestions were useless, so please close them freely."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2019-09-05T09:35:31Z",
        "comment": "Now I think `drop_take` is useless, but there is a one-line proof of `take_drop` without using `drop_take`:\r\n```coq\r\nProof. by rewrite addnC; elim: s i j => // x s IHs [|i] [|j] /=. Qed.\r\n```"
      },
      {
        "author": "hivert",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2019-09-20T19:40:28Z",
        "comment": "Thanks for the short proof ! I'm updated my PR."
      },
      {
        "author": "hivert",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2019-09-20T19:48:15Z",
        "comment": "Unfortunately at the point of the script where `take_addn` is natural, I can't use `cat_take_drop` without closing and reopening the sequence section. Indeed  `cat_take_drop` only works with the section variable `n0`. Since the induction proof is not that complicated, I decided to stick with it."
      },
      {
        "author": "hivert",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2019-09-20T19:51:39Z",
        "comment": "Yes ! Thanks ."
      },
      {
        "author": "hivert",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2019-09-20T19:56:23Z",
        "comment": "Good trick ! However, I'd rather not use such a trick in a single place of the `mathcomp` code. I'll gladly use it provided the `mathcomp` guys agree to make it standard (i.e.: decide where to put your `duP` lemma.   "
      },
      {
        "author": "anton-trunov",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2019-09-21T08:14:22Z",
        "comment": "Thank you. I'll leave a useful link for the future reference here: when PR #372 is merged we will get that duplicating view (although implemented in a different way) in `ssreflect` -- https://github.com/math-comp/math-comp/pull/372/files#diff-a6f6aa5ebb042f5ccd8936b292342547R172"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2019-10-24T19:28:31Z",
        "comment": "Just a small comment, you either can write `apply: leq_trans i_le_j` (no parenthesis and no implicit) or else chain with the previous rewrite by rewriting `(leq_trans _ i_le_j)//` (untested)"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2019-10-24T19:28:55Z",
        "comment": "please put spaces around the `-` symbol"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2019-10-24T19:30:27Z",
        "comment": "I am not sure why you need to generalize `(j - i)`, without running the code, it seems to me that you could just prove the thing with:Proof.\r\n```coq\r\nProof. by move/subnKC<-; rewrite nseqD take_size_cat// size_nseq. Qed.\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2019-10-24T19:33:37Z",
        "comment": "The preferred style with two subgoals is no bullet (indent the first subgoal and not the second). Additionally no need to make the detour by `-subn_eq0`, since comparison is convertible to the boolean counterpart of the equation you want to get, so you could solve the last subgoal\r\n`by rewrite  drop_oversize ?size_nseq// (eqP j_le_i).`\r\n(again not tested, sorry)"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2019-10-24T19:36:12Z",
        "comment": "you could inline the cases in the elim by doing:\r\n```coq\r\nelim: k n H m => [|k IHk] [|n]//= H m; rewrite IHk.\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2019-10-24T19:37:10Z",
        "comment": "In mathcomp `H` is reserved for names of groups, hypothesis should bare relevant names (here I guess `lt_something_somthing`)"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2019-10-24T19:37:26Z",
        "comment": "also `by apply:` is abbreviated `exact:`"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2019-10-24T19:38:35Z",
        "comment": "Since you do a case on n in both cases I guess you could do:\r\n```coq\r\nby elim: k m n => [|k IHk] m [|n]//=; rewrite ?addn0// IHk addSn addnS subSS.\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2019-10-24T19:40:01Z",
        "comment": "This `ltnS` is maybe not necessary."
      },
      {
        "author": "hivert",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2019-10-27T08:34:13Z",
        "comment": "@CohenCyril True... Fixed the proof"
      },
      {
        "author": "hivert",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2019-10-27T08:40:17Z",
        "comment": "@CohenCyril \r\n\r\nThe abbreviation `exact:` for `by apply:` doesn't work if there is something following like in `by apply: take_oversize; rewrite size_iota.` Does it ?"
      },
      {
        "author": "hivert",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2019-10-27T08:44:01Z",
        "comment": "Just `move => /IHs ->` doesn't work..."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2019-11-14T11:54:21Z",
        "comment": "oh and I just realized `take_addn` should rather be named `takeD`"
      },
      {
        "author": "hivert",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2019-11-14T23:04:54Z",
        "comment": "This is not consistent with `rot_addn`. It should probably be renamed `rotD`, shouldn't it ?"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2019-11-15T01:25:40Z",
        "comment": "Mmmh, ok my mistake then... can you revert to the previous state? The change of suffix should be done in one go to answer #359 in order to maintain consistency of the whole library..."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2019-11-15T09:10:18Z",
        "comment": "for consistency within this file, I believe this one should be named `nseq_addn`"
      },
      {
        "author": "hivert",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2019-11-15T20:29:16Z",
        "comment": "Done"
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "hivert",
        "committer": "hivert",
        "hash": "7ea7cd6ef399cdb8ed4eb25485cde1a4d604943f",
        "message": "More lemmas on seqs",
        "date": "2019-11-15T20:28:20Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 380,
    "diff_summary": [
      {
        "file": "mathcomp/algebra/ssrnum.v",
        "status": "M",
        "additions": 1,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2019-09-03T14:46:53Z",
    "update_date": "2019-09-24T12:27:41Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "3ad8a9418dc5d39ef553033f5c8f581525a3aae3",
        "message": "Fix a typo: ring_core_scope -> ring_scope",
        "date": "2019-09-18T08:13:31Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 378,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 51,
        "deletions": 30
      },
      {
        "file": "mathcomp/algebra/polydiv.v",
        "status": "M",
        "additions": 51,
        "deletions": 30
      },
      {
        "file": "mathcomp/algebra/ssrint.v",
        "status": "M",
        "additions": 51,
        "deletions": 30
      },
      {
        "file": "mathcomp/field/algnum.v",
        "status": "M",
        "additions": 51,
        "deletions": 30
      },
      {
        "file": "mathcomp/solvable/abelian.v",
        "status": "M",
        "additions": 51,
        "deletions": 30
      },
      {
        "file": "mathcomp/solvable/burnside_app.v",
        "status": "M",
        "additions": 51,
        "deletions": 30
      },
      {
        "file": "mathcomp/solvable/extremal.v",
        "status": "M",
        "additions": 51,
        "deletions": 30
      },
      {
        "file": "mathcomp/ssreflect/path.v",
        "status": "M",
        "additions": 51,
        "deletions": 30
      },
      {
        "file": "mathcomp/ssreflect/prime.v",
        "status": "M",
        "additions": 51,
        "deletions": 30
      },
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 51,
        "deletions": 30
      },
      {
        "file": "mathcomp/ssreflect/ssrnat.v",
        "status": "M",
        "additions": 51,
        "deletions": 30
      }
    ],
    "state": "merged",
    "open_date": "2019-08-30T11:34:43Z",
    "update_date": "2019-10-31T18:07:16Z",
    "discussion": [
      {
        "author": "pi8027",
        "date": "2019-09-02T13:39:36Z",
        "comment": "I think we can continue some discussion about the following [Cyril's remark](https://github.com/math-comp/math-comp/pull/270#issuecomment-503000130) here, if needed.\r\n\r\n> But, @ggonthier, @amahboubi, @thery, @gares, @LaurenceRideau, @pi8027 there is an issue for which I cannot take a light decision: `ltgtP` and `ltrgtP` do not follow the same structure as the `ltngtP` lemma from ssrnat:\r\n> in `ltgtP` (and `ltrgtP`) lemma, the operators come in the following order `==`, `<=`, `<` while in `ltngtP` it is `<=`, `<` and `==`. For consistency they should be ordered in the same way, and thus there are now two options:\r\n> \r\n> 1. For (more) backward compatibility they should be in the order  [`<=`, `<`, `==`] (as in `ltngtP`),\r\n> 2. but for the sake of intuition as noted by @thery and @gares in #233 it should rather be [`==`, `<=`, `<`] everywhere (as in `ltgtP`) because the last item is matched first. I think I a missing a part of the history of the lemma in order to take a decision.\r\n> \r\n> Which of 1. and 2. would be best?\r\n> \r\n> Also, in `leqP`, `leP` ..., operators are in the order `<=` first, and `<` while the same intuition as in the paragraph above would lead to think it should be the converse.\r\n\r\nActually this PR fixes `compare_nat` and `ltngtP` as option 2 indicated. As a result, I also needed to patch fourcolor: math-comp/fourcolor#18. Any other libraries haven't been broken in CI."
      },
      {
        "author": "CohenCyril",
        "date": "2019-09-02T14:05:42Z",
        "comment": "I'm fine with your changes"
      },
      {
        "author": "pi8027",
        "date": "2019-09-04T13:47:52Z",
        "comment": "BTW, having `minn` and `maxn` in the arguments of `leqP`, `ltnP`, and `ltngtP` could be nice. But we need to reorder definitions and lemmas in ssrnat. (In this case, how should we order their arguments?)"
      },
      {
        "author": "amahboubi",
        "date": "2019-09-28T20:37:38Z",
        "comment": "Hi. I did not review this PR. What is blocking the merge here?"
      },
      {
        "author": "pi8027",
        "date": "2019-09-30T14:22:33Z",
        "comment": "@amahboubi This is a compatibility breaking change. There was a discussion on this change in #233, but it has never realized before. So we probably should have more discussion before merging. (But personally I'm fine with this change as it is.)"
      },
      {
        "author": "amahboubi",
        "date": "2019-09-30T14:26:07Z",
        "comment": "@pi8027 Thanks for the answer. Could you please add this item to the agenda of the next dev meeting?"
      },
      {
        "author": "pi8027",
        "date": "2019-09-30T14:27:43Z",
        "comment": "@amahboubi Yes, I will do that."
      },
      {
        "author": "pi8027",
        "date": "2019-10-31T15:13:22Z",
        "comment": "I will remove CI overlay before merging."
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "d60c67b8f33f55e11ca159246d2a447102f10f20",
        "message": "Change the order of arguments in `ltngtP`\n\nfrom\n`ltngtP m n : compare_nat m n (m <= n) (n <= m) (m < n) (n < m) (n == m) (m == n)`\nto\n`ltngtP m n : compare_nat m n (n == m) (m == n) (n <= m) (m <= n) (n < m) (m < n)`,\nto make it tries to match subterms with `m < n` first, `m <= n`, then `m == n`.",
        "date": "2019-10-30T22:19:33Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 377,
    "diff_summary": [
      {
        "file": ".gitlab-ci.yml",
        "status": "M",
        "additions": 83,
        "deletions": 43
      },
      {
        "file": "mathcomp/algebra/intdiv.v",
        "status": "M",
        "additions": 83,
        "deletions": 43
      },
      {
        "file": "mathcomp/algebra/interval.v",
        "status": "M",
        "additions": 83,
        "deletions": 43
      },
      {
        "file": "mathcomp/algebra/rat.v",
        "status": "M",
        "additions": 83,
        "deletions": 43
      },
      {
        "file": "mathcomp/algebra/ssrint.v",
        "status": "M",
        "additions": 83,
        "deletions": 43
      },
      {
        "file": "mathcomp/algebra/ssrnum.v",
        "status": "M",
        "additions": 83,
        "deletions": 43
      },
      {
        "file": "mathcomp/character/vcharacter.v",
        "status": "M",
        "additions": 83,
        "deletions": 43
      },
      {
        "file": "mathcomp/field/algC.v",
        "status": "M",
        "additions": 83,
        "deletions": 43
      },
      {
        "file": "mathcomp/field/finfield.v",
        "status": "M",
        "additions": 83,
        "deletions": 43
      },
      {
        "file": "mathcomp/ssreflect/order.v",
        "status": "M",
        "additions": 83,
        "deletions": 43
      }
    ],
    "state": "merged",
    "open_date": "2019-08-27T17:08:34Z",
    "update_date": "2019-09-05T11:54:01Z",
    "discussion": [
      {
        "author": "pi8027",
        "date": "2019-09-05T11:51:06Z",
        "comment": "@CohenCyril Could you please merge this one?"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "f30150772ffc096105181fd807ba2d0eafc939f9",
        "message": "Reorder the arguments of the comparison predicates in order.v\n\nThe comparison predicates (for nat, ordered types, ordered integral domains)\nmust have the following order of arguments:\n- leP   x y : le_xor_gt x y ... (x <= y) (y < x) ... .\n- ltP   x y : lt_xor_ge x y ... (y <= x) (x < y) ... .\n- ltgtP x y : compare   x y ... (y == x) (x == y) (x >= y) (x <= y) (x > y) (x < y) ... .",
        "date": "2019-09-02T13:47:53Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "3fd26872be603c59ea0af1a7cafde30241c047eb",
        "message": "Use `Order.TTheory` instead of `Order.Theory` if applicable",
        "date": "2019-09-03T15:07:44Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "4779e587dcc0d7c1027444095c603113a5cf1cde",
        "message": "Remove the use of the compatibility module and add CI overlays",
        "date": "2019-09-03T15:11:15Z"
      }
    ]
  },
  {
    "author": "erikmd",
    "number": 376,
    "diff_summary": [
      {
        "file": ".gitlab-ci.yml",
        "status": "M",
        "additions": 1,
        "deletions": 2
      }
    ],
    "state": "merged",
    "open_date": "2019-08-10T12:55:58Z",
    "update_date": "2019-08-12T13:18:40Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "erikmd",
        "committer": "erikmd",
        "hash": "bc8c277880e5181399f4a561913637a7fc5a57b2",
        "message": "fix(.gitlab-ci.yml): duplicated \"variables:\" entry\n\nThis could explain why the change in b8eadb8603b83c053a313b39c2a8f268385d8942\nwas not taken into account.",
        "date": "2019-08-10T12:43:20Z"
      }
    ]
  },
  {
    "author": "thery",
    "number": 375,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 10,
        "deletions": 3
      },
      {
        "file": "mathcomp/ssreflect/prime.v",
        "status": "M",
        "additions": 10,
        "deletions": 3
      }
    ],
    "state": "merged",
    "open_date": "2019-08-02T19:49:19Z",
    "update_date": "2019-09-30T10:42:02Z",
    "discussion": [
      {
        "author": "amahboubi",
        "date": "2019-09-28T20:40:34Z",
        "comment": "@thery @pi8027 Is this PR ready for merging? From the outside it seems so."
      },
      {
        "author": "pi8027",
        "date": "2019-09-30T10:41:08Z",
        "comment": "@amahboubi @thery This looks good to me."
      }
    ],
    "review_discussion": [
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/prime.v",
        "date": "2019-09-17T10:12:27Z",
        "comment": "How about this proof?:\r\n```coq\r\nmove=> ?; apply: big_morph=> [? ?|]; [exact: Euclid_dvdM | exact: Euclid_dvd1].\r\n```\r\nI think reformulating `Euclid_dvdM` with the `{morph ...}` notation might be better."
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "thery",
        "committer": "thery",
        "hash": "76440688fba5927a7b76c6173d249647054189a9",
        "message": "Euclid theorem for product",
        "date": "2019-09-17T11:36:39Z"
      }
    ]
  },
  {
    "author": "thery",
    "number": 374,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 9,
        "deletions": 1
      },
      {
        "file": "mathcomp/ssreflect/binomial.v",
        "status": "M",
        "additions": 9,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2019-08-02T18:53:39Z",
    "update_date": "2019-09-30T07:27:15Z",
    "discussion": [
      {
        "author": "amahboubi",
        "date": "2019-09-28T20:44:59Z",
        "comment": "@thery  your change log is now in conflict. I will merge as soon as you resolve it."
      },
      {
        "author": "thery",
        "date": "2019-09-29T12:39:05Z",
        "comment": ":sweat:"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "thery",
        "committer": "thery",
        "hash": "8e087dd765abad03f86ba2e7ad645f267aaef8a4",
        "message": "ffact as a product similar to fact_prod",
        "date": "2019-09-29T12:40:40Z"
      }
    ]
  },
  {
    "author": "erikmd",
    "number": 373,
    "diff_summary": [
      {
        "file": ".gitlab-ci.yml",
        "status": "M",
        "additions": 38,
        "deletions": 13
      }
    ],
    "state": "merged",
    "open_date": "2019-07-30T19:48:51Z",
    "update_date": "2019-08-02T12:10:08Z",
    "discussion": [
      {
        "author": "erikmd",
        "date": "2019-07-30T20:00:19Z",
        "comment": "FYI I also added a section `Related links` in the docker-coq wiki:\r\nhttps://github.com/coq-community/docker-coq/wiki/CI-setup#related-links\r\n(as the availability of the [`mathcomp`](https://hub.docker.com/u/mathcomp/) specific images was not described beforehand in docker-coq)\r\n\r\nCc @Zimmi48 @anton-trunov @palmskog @ejgallego"
      },
      {
        "author": "erikmd",
        "date": "2019-08-02T09:41:40Z",
        "comment": "@CohenCyril friendly ping"
      },
      {
        "author": "erikmd",
        "date": "2019-08-02T13:40:17Z",
        "comment": "FYI @CohenCyril I've just configured a so-called *scheduled pipeline* here:\r\nhttps://gitlab.com/math-comp/math-comp/pipeline_schedules (every night at ~03:15 Paris time)\r\nand I've successfully tested it: its first run triggerred the following pipeline with the 2 wished jobs:\r\nhttps://gitlab.com/math-comp/math-comp/pipelines/74413621\r\n\r\nAs a result, even if no math-comp PR is merged for a while, `mathcomp/mathcomp-dev:coq-dev` will stay in sync with `coqorg/coq:dev` (itself rebuilt every night at ~00:15 Paris time)."
      },
      {
        "author": "CohenCyril",
        "date": "2019-08-02T15:48:50Z",
        "comment": "> FYI @CohenCyril I've just configured a so-called _scheduled pipeline_ here:\r\n> https://gitlab.com/math-comp/math-comp/pipeline_schedules (every night at ~03:15 Paris time)\r\n\r\n~~https://gitlab.com/math-comp/math-comp/pipeline_schedules~~\r\n~~Error 404 page not found...~~\r\nNever mind, I logged in and problem solved :laughing: "
      },
      {
        "author": "CohenCyril",
        "date": "2019-08-02T15:50:33Z",
        "comment": "Thanks again for your work on CI and docker @erikmd "
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "erikmd",
        "committer": "erikmd",
        "hash": "1624bfe8406017cff82904ebab3d06a9dec17153",
        "message": "style: fix indentation detail",
        "date": "2019-07-29T21:34:16Z"
      },
      {
        "author": "erikmd",
        "committer": "erikmd",
        "hash": "b8eadb8603b83c053a313b39c2a8f268385d8942",
        "message": "refactor: deploy jobs need not clone the repo\n\n* Set \"GIT_STRATEGY: none\" accordingly",
        "date": "2019-07-30T10:54:58Z"
      },
      {
        "author": "erikmd",
        "committer": "erikmd",
        "hash": "d5ac333d1ee1b4f3a8d38dc0238c661dcc4a89f7",
        "message": "[ci] Add jobs {ci-fourcolor-8.9, ci-odd-order-8.9}\n\n* Add {fourcolor, odd-order} test builds with latest Coq release (8.9)\n\n* As a result, the math-comp CI config w.r.t. {fourcolor, odd-order}\n  will be similar to that of the upstream repos:\n  - https://github.com/math-comp/fourcolor/blob/master/.travis.yml\n  - https://github.com/math-comp/odd-order/pull/16",
        "date": "2019-07-30T10:55:06Z"
      },
      {
        "author": "erikmd",
        "committer": "erikmd",
        "hash": "5bccaf10977a1cb86e00fc2e986bfbe1ac86ad1b",
        "message": "[ci] Adapt the GitLab CI config to allow scheduled builds for coq-dev\n\n* Normal builds (branches & GitHub PRs) are not impacted\n\n* Triggering a scheduled pipeline will only run {coq-dev, mathcomp-dev:coq-dev}\n  to build and deploy the corresponding image to mathcomp/mathcomp-dev:coq-dev.\n\n* href: https://docs.gitlab.com/ce/user/project/pipelines/schedules.html",
        "date": "2019-07-30T14:56:45Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 372,
    "diff_summary": [
      {
        "file": ".gitlab-ci.yml",
        "status": "M",
        "additions": 339,
        "deletions": 387
      },
      {
        "file": "mathcomp/algebra/finalg.v",
        "status": "M",
        "additions": 339,
        "deletions": 387
      },
      {
        "file": "mathcomp/algebra/fraction.v",
        "status": "M",
        "additions": 339,
        "deletions": 387
      },
      {
        "file": "mathcomp/algebra/intdiv.v",
        "status": "M",
        "additions": 339,
        "deletions": 387
      },
      {
        "file": "mathcomp/algebra/matrix.v",
        "status": "M",
        "additions": 339,
        "deletions": 387
      },
      {
        "file": "mathcomp/algebra/mxalgebra.v",
        "status": "M",
        "additions": 339,
        "deletions": 387
      },
      {
        "file": "mathcomp/algebra/mxpoly.v",
        "status": "M",
        "additions": 339,
        "deletions": 387
      },
      {
        "file": "mathcomp/algebra/poly.v",
        "status": "M",
        "additions": 339,
        "deletions": 387
      },
      {
        "file": "mathcomp/algebra/ssrnum.v",
        "status": "M",
        "additions": 339,
        "deletions": 387
      },
      {
        "file": "mathcomp/character/character.v",
        "status": "M",
        "additions": 339,
        "deletions": 387
      },
      {
        "file": "mathcomp/character/classfun.v",
        "status": "M",
        "additions": 339,
        "deletions": 387
      },
      {
        "file": "mathcomp/character/integral_char.v",
        "status": "M",
        "additions": 339,
        "deletions": 387
      },
      {
        "file": "mathcomp/character/mxabelem.v",
        "status": "M",
        "additions": 339,
        "deletions": 387
      },
      {
        "file": "mathcomp/character/mxrepresentation.v",
        "status": "M",
        "additions": 339,
        "deletions": 387
      },
      {
        "file": "mathcomp/field/algebraics_fundamentals.v",
        "status": "M",
        "additions": 339,
        "deletions": 387
      },
      {
        "file": "mathcomp/field/algnum.v",
        "status": "M",
        "additions": 339,
        "deletions": 387
      },
      {
        "file": "mathcomp/field/closed_field.v",
        "status": "M",
        "additions": 339,
        "deletions": 387
      },
      {
        "file": "mathcomp/field/fieldext.v",
        "status": "M",
        "additions": 339,
        "deletions": 387
      },
      {
        "file": "mathcomp/field/finfield.v",
        "status": "M",
        "additions": 339,
        "deletions": 387
      },
      {
        "file": "mathcomp/field/galois.v",
        "status": "M",
        "additions": 339,
        "deletions": 387
      },
      {
        "file": "mathcomp/fingroup/action.v",
        "status": "M",
        "additions": 339,
        "deletions": 387
      },
      {
        "file": "mathcomp/fingroup/automorphism.v",
        "status": "M",
        "additions": 339,
        "deletions": 387
      },
      {
        "file": "mathcomp/fingroup/fingroup.v",
        "status": "M",
        "additions": 339,
        "deletions": 387
      },
      {
        "file": "mathcomp/fingroup/gproduct.v",
        "status": "M",
        "additions": 339,
        "deletions": 387
      },
      {
        "file": "mathcomp/fingroup/morphism.v",
        "status": "M",
        "additions": 339,
        "deletions": 387
      },
      {
        "file": "mathcomp/fingroup/perm.v",
        "status": "M",
        "additions": 339,
        "deletions": 387
      },
      {
        "file": "mathcomp/solvable/abelian.v",
        "status": "M",
        "additions": 339,
        "deletions": 387
      },
      {
        "file": "mathcomp/solvable/alt.v",
        "status": "M",
        "additions": 339,
        "deletions": 387
      },
      {
        "file": "mathcomp/solvable/burnside_app.v",
        "status": "M",
        "additions": 339,
        "deletions": 387
      },
      {
        "file": "mathcomp/solvable/center.v",
        "status": "M",
        "additions": 339,
        "deletions": 387
      },
      {
        "file": "mathcomp/solvable/cyclic.v",
        "status": "M",
        "additions": 339,
        "deletions": 387
      },
      {
        "file": "mathcomp/solvable/extremal.v",
        "status": "M",
        "additions": 339,
        "deletions": 387
      },
      {
        "file": "mathcomp/solvable/frobenius.v",
        "status": "M",
        "additions": 339,
        "deletions": 387
      },
      {
        "file": "mathcomp/solvable/jordanholder.v",
        "status": "M",
        "additions": 339,
        "deletions": 387
      },
      {
        "file": "mathcomp/solvable/maximal.v",
        "status": "M",
        "additions": 339,
        "deletions": 387
      },
      {
        "file": "mathcomp/solvable/primitive_action.v",
        "status": "M",
        "additions": 339,
        "deletions": 387
      },
      {
        "file": "mathcomp/solvable/sylow.v",
        "status": "M",
        "additions": 339,
        "deletions": 387
      },
      {
        "file": "mathcomp/ssreflect/div.v",
        "status": "M",
        "additions": 339,
        "deletions": 387
      },
      {
        "file": "mathcomp/ssreflect/eqtype.v",
        "status": "M",
        "additions": 339,
        "deletions": 387
      },
      {
        "file": "mathcomp/ssreflect/fingraph.v",
        "status": "M",
        "additions": 339,
        "deletions": 387
      },
      {
        "file": "mathcomp/ssreflect/finset.v",
        "status": "M",
        "additions": 339,
        "deletions": 387
      },
      {
        "file": "mathcomp/ssreflect/fintype.v",
        "status": "M",
        "additions": 339,
        "deletions": 387
      },
      {
        "file": "mathcomp/ssreflect/prime.v",
        "status": "M",
        "additions": 339,
        "deletions": 387
      },
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 339,
        "deletions": 387
      },
      {
        "file": "mathcomp/ssreflect/ssrbool.v",
        "status": "M",
        "additions": 339,
        "deletions": 387
      },
      {
        "file": "mathcomp/ssreflect/ssreflect.v",
        "status": "M",
        "additions": 339,
        "deletions": 387
      },
      {
        "file": "mathcomp/ssreflect/ssrnat.v",
        "status": "M",
        "additions": 339,
        "deletions": 387
      }
    ],
    "state": "closed",
    "open_date": "2019-07-18T16:40:37Z",
    "update_date": "2020-06-04T15:15:05Z",
    "discussion": [
      {
        "author": "gares",
        "date": "2019-07-18T18:00:37Z",
        "comment": "Can't you just say that `/[x]` stands for \"rewrite ! x\" and that `->` is special in that context and means `{}top in *`? It is just that `/!inE` is not much shorter than `/[inE]` and the latter is a bit more future proof, eg you may need to apply the rewrite rule to specialize it, or write a multi rule (assuming you can define a notation for `[x,y,..,z]` in there)."
      },
      {
        "author": "CohenCyril",
        "date": "2019-07-22T13:15:44Z",
        "comment": "> Can't you just say that `/[x]` stands for \"rewrite ! x\" and that `->` is special in that context and means `{}top in *`? It is just that `/!inE` is not much shorter than `/[inE]` and the latter is a bit more future proof, eg you may need to apply the rewrite rule to specialize it, or write a multi rule (assuming you can define a notation for `[x,y,..,z]` in there).\r\n\r\nSometimes it is with `!` sometimes it is without, moreover a general design pattern of mathcomp is that bracketed notations start with a keyword/symbol as in `[&& ..]`, `[:: ...]`, `[seq ...]`, `[tuple ...]`, `[eqType ...]` ... so using `[ rule ]` for rewriting breaks this pattern. At the very least it should be `[! rule]` (for bang) `[1 rule]` for once... and maybe it is alright... let me see."
      },
      {
        "author": "CohenCyril",
        "date": "2019-07-24T08:03:16Z",
        "comment": "@gares \r\n> `[->]` means `rewrite {}top in *`\r\n\r\nIt's more like `elim: _ / top in *` except I found no stable enough way of reverting all the local context (with exceptions or renamings for section hyps) and introducing everything back consistently  :disappointed:\r\n\r\nSee my commit: the current version seems to work but is a bit broken for hypothesis that depend on others, where I have to default to Coq's less powerful `fold` tactic with a `in` and potentially screwing up section hypothesis... moreover it does not handle multi-rules and quantified rules...\r\n\r\nI have tried more clever versions since then... and my last attempt, which is supposed to handle everything is:\r\n```coq\r\nLtac discharge_all_but x := do ![match goal with \r\n  H : _ |- _ => (* discharges a let in which is not x *)\r\n                (move: x @H => x)\r\n                 (* otherwise discharges a n assumption which is not x *)\r\n                || (move: x H => x);\r\n                (* tests whether H is still there, which means it is a section hypothesis *)\r\n                tryif move: H => _\r\n                then fail else idtac\r\n  end].\r\n\r\nLemma lock_goal A : locked A -> A.\r\nProof. by rewrite -lock. Qed.\r\nLemma unlock_goal A : A -> locked A.\r\nProof. by rewrite -lock. Qed.\r\n\r\n(* implementation of `/[<-]` *)\r\nLtac subst_eq :=\r\n  let top_eq := fresh \"_top_eq_\" in move=> top_eq;\r\n  apply: lock_goal; discharge_all_but top_eq;\r\n  (* try dependent elim, otherwise (if it's a multirule) rewriting *)\r\n  ((elim: _ / top_eq) || (rewrite -!{}top_eq));\r\n  (* the `intros` here assumes that `move:` discharged hyps with\r\n  the names they used to have, which seems like a decent invariant\r\n  unfortunately, it seems to break with hyps introduced by `=> +` *)\r\n  intros; apply: unlock_goal.\r\n```\r\nwhich works very well, except in the presence of `=> +` (see comment)\r\n\r\n"
      },
      {
        "author": "gares",
        "date": "2019-07-24T08:40:26Z",
        "comment": "I thought you were calling the primitive `subst` tactic for `/[->]`.\r\nTo my knowledge, any context manipulation in ltac1 is very hard to write, so I would not even try."
      },
      {
        "author": "amahboubi",
        "date": "2019-10-24T12:49:49Z",
        "comment": "This PR needs an assignee. @gares ?"
      },
      {
        "author": "gares",
        "date": "2019-10-24T13:22:15Z",
        "comment": "The more I think about this, the more I've the impression that you try to be too generic.\r\n\r\nEg many of the use cases that seem very legit could be also covered by `=> /mxE /inE`, that is ad hoc calls to `rewrite ! lemma` (and at some extent they are unfolding lemmas, so `/e` reminds me that, but maybe it's too confusing for a newcomer). What do you think about this? It's a baby step but still useful I believe.\r\n\r\nThe `subst` thing seems ahead of time: with Ltac2 (or anything else than ltac1) you can surely code something sensible, if the already existing `subst` does not behave as you like. I'm not sure we want that ltac code around."
      },
      {
        "author": "affeldt-aist",
        "date": "2020-03-25T14:46:39Z",
        "comment": "The relaease managers propose to put this PR in the 1.12.0 miletone. Are you ok?"
      },
      {
        "author": "CohenCyril",
        "date": "2020-03-25T15:25:57Z",
        "comment": "> The relaease managers propose to put this PR in the 1.12.0 miletone. Are you ok?\r\n\r\nI agree"
      },
      {
        "author": "CohenCyril",
        "date": "2020-03-25T15:26:54Z",
        "comment": "As a side note, it was discussed in a math-comp meeting that substitution should mention the context hypotheses  explicitly anyway."
      },
      {
        "author": "CohenCyril",
        "date": "2020-05-08T22:42:05Z",
        "comment": "I splitted this PR in bits. The first bit is available as #501, the second as #502."
      }
    ],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: enhancement",
        "description": "Issue or PR about addition of features."
      },
      {
        "tag": "needs: discussion",
        "description": "Issue or PR that needs discussion. Please come in a give your opinion."
      }
    ],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "1decc8c7f3565833369e106069e12529d5cb7736",
        "message": "Experimented with new features of coq 8.10",
        "date": "2019-07-18T16:35:46Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "d354ab49c6db588b12919f7f193544aa267a2d37",
        "message": "updating gitlab ci",
        "date": "2019-07-18T16:35:49Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "87e0c9f0ab76a57b796fea668858fbef15504c87",
        "message": "switching to [!rule] syntax and better [->]",
        "date": "2019-07-23T08:24:12Z"
      }
    ]
  },
  {
    "author": "thery",
    "number": 369,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 5,
        "deletions": 0
      },
      {
        "file": "mathcomp/ssreflect/prime.v",
        "status": "M",
        "additions": 5,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2019-07-09T15:14:35Z",
    "update_date": "2019-07-10T22:13:45Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2019-07-10T07:26:43Z",
        "comment": "@thery please mention it in CHANGELOG_UNRELEASED and we are good to go."
      },
      {
        "author": "thery",
        "date": "2019-07-10T13:16:05Z",
        "comment": "@CohenCyril done"
      }
    ],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: enhancement",
        "description": "Issue or PR about addition of features."
      }
    ],
    "commits": [
      {
        "author": "thery",
        "committer": "thery",
        "hash": "c09c3c86b5eab6f16a67fdd9b70618741e0c1727",
        "message": "totient for prime",
        "date": "2019-07-10T12:28:34Z"
      }
    ]
  },
  {
    "author": "thery",
    "number": 368,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 17,
        "deletions": 0
      },
      {
        "file": "mathcomp/ssreflect/binomial.v",
        "status": "M",
        "additions": 17,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2019-07-09T13:53:57Z",
    "update_date": "2019-09-16T08:21:10Z",
    "discussion": [],
    "review_discussion": [
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/binomial.v",
        "date": "2019-09-05T18:46:20Z",
        "comment": "Here is a simpler proof of `prime_modn_expSn`:\r\n```\r\ncase: p => // p pP.\r\nrewrite -[(_ ^ _).+1]addn0 (expnDn 1) big_ord_recr big_ord_recl /=.\r\nrewrite subnn binn exp1n !mul1n addnAC -modnDmr; congr ((_ + _) %% _).\r\napply/eqP/dvdn_sum => -[i ?] _; exact/dvdn_mulr/prime_dvd_bin.\r\n```"
      },
      {
        "author": "thery",
        "file": "mathcomp/ssreflect/binomial.v",
        "date": "2019-09-09T11:51:12Z",
        "comment": ":+1:"
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "thery",
        "committer": "thery",
        "hash": "d0e32e1c3950b4bed5973767aee87118d1cf3077",
        "message": "fermat little theorem",
        "date": "2019-09-09T11:49:50Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 365,
    "diff_summary": [
      {
        "file": "docs/README.md",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/Makefile",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/buildlibgraph",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/coqdoc.css",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/depend",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/depend.js",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_abbreviation_*.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_abbreviation_A.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_abbreviation_B.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_abbreviation_C.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_abbreviation_D.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_abbreviation_E.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_abbreviation_F.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_abbreviation_G.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_abbreviation_H.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_abbreviation_I.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_abbreviation_J.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_abbreviation_K.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_abbreviation_L.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_abbreviation_M.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_abbreviation_N.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_abbreviation_O.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_abbreviation_P.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_abbreviation_Q.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_abbreviation_R.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_abbreviation_S.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_abbreviation_T.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_abbreviation_U.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_abbreviation_V.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_abbreviation_W.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_abbreviation_X.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_abbreviation_Y.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_abbreviation_Z.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_abbreviation__.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_axiom_*.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_axiom_A.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_axiom_B.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_axiom_C.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_axiom_D.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_axiom_E.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_axiom_F.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_axiom_G.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_axiom_H.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_axiom_I.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_axiom_J.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_axiom_K.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_axiom_L.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_axiom_M.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_axiom_N.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_axiom_O.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_axiom_P.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_axiom_Q.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_axiom_R.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_axiom_S.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_axiom_T.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_axiom_U.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_axiom_V.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_axiom_W.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_axiom_X.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_axiom_Y.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_axiom_Z.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_axiom__.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_constructor_*.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_constructor_A.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_constructor_B.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_constructor_C.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_constructor_D.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_constructor_E.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_constructor_F.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_constructor_G.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_constructor_H.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_constructor_I.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_constructor_J.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_constructor_K.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_constructor_L.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_constructor_M.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_constructor_N.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_constructor_O.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_constructor_P.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_constructor_Q.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_constructor_R.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_constructor_S.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_constructor_T.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_constructor_U.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_constructor_V.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_constructor_W.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_constructor_X.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_constructor_Y.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_constructor_Z.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_constructor__.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_definition_*.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_definition_A.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_definition_B.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_definition_C.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_definition_D.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_definition_E.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_definition_F.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_definition_G.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_definition_H.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_definition_I.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_definition_J.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_definition_K.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_definition_L.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_definition_M.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_definition_N.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_definition_O.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_definition_P.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_definition_Q.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_definition_R.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_definition_S.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_definition_T.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_definition_U.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_definition_V.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_definition_W.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_definition_X.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_definition_Y.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_definition_Z.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_definition__.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_global_*.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_global_A.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_global_B.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_global_C.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_global_D.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_global_E.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_global_F.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_global_G.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_global_H.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_global_I.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_global_J.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_global_K.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_global_L.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_global_M.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_global_N.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_global_O.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_global_P.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_global_Q.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_global_R.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_global_S.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_global_T.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_global_U.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_global_V.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_global_W.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_global_X.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_global_Y.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_global_Z.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_global__.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_inductive_*.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_inductive_A.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_inductive_B.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_inductive_C.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_inductive_D.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_inductive_E.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_inductive_F.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_inductive_G.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_inductive_H.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_inductive_I.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_inductive_J.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_inductive_K.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_inductive_L.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_inductive_M.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_inductive_N.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_inductive_O.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_inductive_P.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_inductive_Q.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_inductive_R.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_inductive_S.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_inductive_T.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_inductive_U.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_inductive_V.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_inductive_W.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_inductive_X.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_inductive_Y.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_inductive_Z.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_inductive__.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_lemma_*.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_lemma_A.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_lemma_B.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_lemma_C.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_lemma_D.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_lemma_E.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_lemma_F.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_lemma_G.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_lemma_H.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_lemma_I.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_lemma_J.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_lemma_K.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_lemma_L.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_lemma_M.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_lemma_N.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_lemma_O.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_lemma_P.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_lemma_Q.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_lemma_R.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_lemma_S.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_lemma_T.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_lemma_U.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_lemma_V.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_lemma_W.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_lemma_X.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_lemma_Y.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_lemma_Z.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_lemma__.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_library_*.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_library_A.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_library_B.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_library_C.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_library_D.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_library_E.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_library_F.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_library_G.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_library_H.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_library_I.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_library_J.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_library_K.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_library_L.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_library_M.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_library_N.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_library_O.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_library_P.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_library_Q.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_library_R.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_library_S.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_library_T.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_library_U.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_library_V.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_library_W.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_library_X.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_library_Y.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_library_Z.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_library__.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_module_*.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_module_A.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_module_B.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_module_C.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_module_D.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_module_E.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_module_F.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_module_G.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_module_H.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_module_I.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_module_J.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_module_K.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_module_L.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_module_M.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_module_N.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_module_O.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_module_P.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_module_Q.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_module_R.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_module_S.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_module_T.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_module_U.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_module_V.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_module_W.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_module_X.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_module_Y.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_module_Z.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_module__.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_notation_*.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_notation_A.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_notation_B.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_notation_C.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_notation_D.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_notation_E.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_notation_F.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_notation_G.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_notation_H.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_notation_I.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_notation_J.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_notation_K.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_notation_L.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_notation_M.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_notation_N.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_notation_O.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_notation_P.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_notation_Q.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_notation_R.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_notation_S.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_notation_T.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_notation_U.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_notation_V.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_notation_W.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_notation_X.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_notation_Y.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_notation_Z.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_notation__.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_projection_*.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_projection_A.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_projection_B.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_projection_C.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_projection_D.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_projection_E.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_projection_F.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_projection_G.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_projection_H.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_projection_I.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_projection_J.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_projection_K.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_projection_L.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_projection_M.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_projection_N.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_projection_O.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_projection_P.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_projection_Q.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_projection_R.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_projection_S.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_projection_T.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_projection_U.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_projection_V.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_projection_W.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_projection_X.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_projection_Y.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_projection_Z.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_projection__.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_record_*.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_record_A.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_record_B.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_record_C.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_record_D.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_record_E.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_record_F.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_record_G.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_record_H.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_record_I.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_record_J.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_record_K.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_record_L.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_record_M.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_record_N.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_record_O.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_record_P.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_record_Q.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_record_R.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_record_S.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_record_T.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_record_U.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_record_V.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_record_W.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_record_X.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_record_Y.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_record_Z.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_record__.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_section_*.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_section_A.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_section_B.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_section_C.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_section_D.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_section_E.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_section_F.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_section_G.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_section_H.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_section_I.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_section_J.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_section_K.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_section_L.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_section_M.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_section_N.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_section_O.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_section_P.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_section_Q.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_section_R.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_section_S.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_section_T.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_section_U.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_section_V.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_section_W.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_section_X.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_section_Y.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_section_Z.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_section__.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_variable_*.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_variable_A.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_variable_B.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_variable_C.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_variable_D.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_variable_E.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_variable_F.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_variable_G.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_variable_H.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_variable_I.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_variable_J.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_variable_K.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_variable_L.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_variable_M.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_variable_N.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_variable_O.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_variable_P.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_variable_Q.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_variable_R.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_variable_S.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_variable_T.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_variable_U.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_variable_V.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_variable_W.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_variable_X.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_variable_Y.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_variable_Z.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/index_variable__.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/js/cytoscape-dagre.js",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/js/cytoscape-panzoom.js",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/js/cytoscape-qtip.js",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/js/cytoscape.js",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/js/cytoscape.js-panzoom.css",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/js/cytoscape.min.js",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/js/dagre.js",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/js/dagre.min.js",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/js/jquery-2.0.3.js",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/js/jquery-2.0.3.min.js",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/js/jquery.qtip.css",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/js/jquery.qtip.js",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/js/jquery.qtip.min.css",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/js/jquery.qtip.min.js",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/libgraph.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/mathcomp.algebra.all_algebra.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/mathcomp.algebra.countalg.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/mathcomp.algebra.finalg.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/mathcomp.algebra.fraction.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/mathcomp.algebra.intdiv.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/mathcomp.algebra.interval.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/mathcomp.algebra.matrix.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/mathcomp.algebra.mxalgebra.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/mathcomp.algebra.mxpoly.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/mathcomp.algebra.poly.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/mathcomp.algebra.polyXY.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/mathcomp.algebra.polydiv.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/mathcomp.algebra.rat.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/mathcomp.algebra.ring_quotient.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/mathcomp.algebra.ssralg.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/mathcomp.algebra.ssrint.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/mathcomp.algebra.ssrnum.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/mathcomp.algebra.vector.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/mathcomp.algebra.zmodp.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/mathcomp.all.all.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/mathcomp.character.all_character.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/mathcomp.character.character.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/mathcomp.character.classfun.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/mathcomp.character.inertia.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/mathcomp.character.integral_char.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/mathcomp.character.mxabelem.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/mathcomp.character.mxrepresentation.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/mathcomp.character.vcharacter.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/mathcomp.field.algC.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/mathcomp.field.algebraics_fundamentals.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/mathcomp.field.algnum.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/mathcomp.field.all_field.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/mathcomp.field.closed_field.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/mathcomp.field.countalg.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/mathcomp.field.cyclotomic.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/mathcomp.field.falgebra.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/mathcomp.field.fieldext.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/mathcomp.field.finfield.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/mathcomp.field.galois.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/mathcomp.field.separable.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/mathcomp.fingroup.action.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/mathcomp.fingroup.all_fingroup.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/mathcomp.fingroup.automorphism.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/mathcomp.fingroup.fingroup.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/mathcomp.fingroup.gproduct.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/mathcomp.fingroup.morphism.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/mathcomp.fingroup.perm.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/mathcomp.fingroup.presentation.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/mathcomp.fingroup.quotient.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/mathcomp.solvable.abelian.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/mathcomp.solvable.all_solvable.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/mathcomp.solvable.alt.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/mathcomp.solvable.burnside_app.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/mathcomp.solvable.center.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/mathcomp.solvable.commutator.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/mathcomp.solvable.cyclic.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/mathcomp.solvable.extraspecial.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/mathcomp.solvable.extremal.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/mathcomp.solvable.finmodule.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/mathcomp.solvable.frobenius.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/mathcomp.solvable.gfunctor.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/mathcomp.solvable.gseries.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/mathcomp.solvable.hall.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/mathcomp.solvable.jordanholder.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/mathcomp.solvable.maximal.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/mathcomp.solvable.nilpotent.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/mathcomp.solvable.pgroup.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/mathcomp.solvable.primitive_action.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/mathcomp.solvable.sylow.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/mathcomp.ssreflect.all_ssreflect.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/mathcomp.ssreflect.bigop.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/mathcomp.ssreflect.binomial.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/mathcomp.ssreflect.choice.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/mathcomp.ssreflect.div.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/mathcomp.ssreflect.eqtype.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/mathcomp.ssreflect.finfun.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/mathcomp.ssreflect.fingraph.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/mathcomp.ssreflect.finset.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/mathcomp.ssreflect.fintype.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/mathcomp.ssreflect.generic_quotient.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/mathcomp.ssreflect.path.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/mathcomp.ssreflect.prime.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/mathcomp.ssreflect.seq.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/mathcomp.ssreflect.ssrbool.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/mathcomp.ssreflect.ssreflect.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/mathcomp.ssreflect.ssrfun.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/mathcomp.ssreflect.ssrmatching.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/mathcomp.ssreflect.ssrnat.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/mathcomp.ssreflect.ssrnotations.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/mathcomp.ssreflect.tuple.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/htmldoc/mathcomp.test_suite.hierarchy_test.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/index.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/javascripts/scale.fix.js",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/logo-MS-Research-Inria-Joint-Centre.png",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/oo.html",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/params.json",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/stylesheets/github-light.css",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      },
      {
        "file": "docs/stylesheets/styles.css",
        "status": "D",
        "additions": 1,
        "deletions": 434737
      }
    ],
    "state": "merged",
    "open_date": "2019-07-02T20:53:28Z",
    "update_date": "2019-10-21T13:49:13Z",
    "discussion": [
      {
        "author": "maximedenes",
        "date": "2019-10-16T09:22:28Z",
        "comment": "Please remove other pages than `index.html`, otherwise outdated information will still be visible.\r\n\r\nAlternatively, you can also make a redirection for each page, but that's more work."
      },
      {
        "author": "maximedenes",
        "date": "2019-10-17T14:19:08Z",
        "comment": "The failure looks spurious, but I don't have the rights to restart the job, it seems. Who can I ask?"
      },
      {
        "author": "maximedenes",
        "date": "2019-10-17T14:20:23Z",
        "comment": "It seems you have enough permissions to add me to the gitlab mathcomp organization, @CohenCyril."
      },
      {
        "author": "maximedenes",
        "date": "2019-10-17T14:20:47Z",
        "comment": "It would be better to add all mathcomp developers, btw, restarting builds is very useful."
      },
      {
        "author": "amahboubi",
        "date": "2019-10-17T14:24:32Z",
        "comment": "@maximedenes do you really mean gitlab? BTW you are member of math-comp core, what permission do you need exactly?"
      },
      {
        "author": "CohenCyril",
        "date": "2019-10-17T14:29:55Z",
        "comment": "> @maximedenes do you really mean gitlab? BTW you are member of math-comp core, what permission do you need exactly?\r\n\r\nyes he really means gitlab for the CI"
      },
      {
        "author": "amahboubi",
        "date": "2019-10-17T14:31:05Z",
        "comment": "Ah ok, sorry for the noise. So I let you handle this."
      },
      {
        "author": "CohenCyril",
        "date": "2019-10-17T14:31:28Z",
        "comment": "> It seems you have enough permissions to add me to the gitlab mathcomp organization, @CohenCyril.\r\n\r\ndone"
      },
      {
        "author": "CohenCyril",
        "date": "2019-10-17T14:32:11Z",
        "comment": "> It would be better to add all mathcomp developers, btw, restarting builds is very useful.\r\n\r\nnot all mathcomp dev have a gitlab account :-/"
      },
      {
        "author": "maximedenes",
        "date": "2019-10-17T14:34:49Z",
        "comment": "> done\r\n\r\nThanks!\r\n\r\n> not all mathcomp dev have a gitlab account :-/\r\n\r\nCould be worth sending a reminder on mathcomp-dev, I guess."
      },
      {
        "author": "amahboubi",
        "date": "2019-10-17T14:45:15Z",
        "comment": "> not all mathcomp dev have a gitlab account :-/\r\n\r\nI think we were never prompted to create one. Should we? Is it a gitlab or gitlab.inria account which is needed?"
      },
      {
        "author": "maximedenes",
        "date": "2019-10-17T14:46:32Z",
        "comment": "> I think we were never prompted to create one. Should we? Is it a gitlab or gitlab.inria account which is needed?\r\n\r\nIt's a gitlab.com account. I think it is likely to be useful for all developers, at least of you want to be able to launch / restart CI builds."
      },
      {
        "author": "amahboubi",
        "date": "2019-10-17T14:50:30Z",
        "comment": "Done for me. @CohenCyril can you grant me access ?"
      },
      {
        "author": "amahboubi",
        "date": "2019-10-18T08:52:27Z",
        "comment": "Ping @CohenCyril . Can you add me to the gitlab organization?"
      },
      {
        "author": "CohenCyril",
        "date": "2019-10-18T09:31:08Z",
        "comment": "> Ping @CohenCyril . Can you add me to the gitlab organization?\r\n\r\ndone\r\n"
      },
      {
        "author": "CohenCyril",
        "date": "2019-10-21T12:00:18Z",
        "comment": "@maximedenes is there a reason not to merge this anymore?"
      },
      {
        "author": "maximedenes",
        "date": "2019-10-21T13:49:06Z",
        "comment": "> is there a reason not to merge this anymore?\r\n\r\nNot that I know of :)"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "dd82aaeae7e9478efc178ce8430986649555b032",
        "message": "Redirects to math-comp.github.io\n\nMerge only after solving issue https://github.com/math-comp/math-comp/issues/361",
        "date": "2019-09-05T11:59:04Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "6b59540a2460633df4e3d8347cb4dfe2fb3a3afb",
        "message": "removing everything but index which redirects to the new page",
        "date": "2019-10-16T09:26:43Z"
      }
    ]
  },
  {
    "author": "erikmd",
    "number": 364,
    "diff_summary": [
      {
        "file": "CHANGELOG.md",
        "status": "M",
        "additions": 4,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2019-06-25T23:00:45Z",
    "update_date": "2019-06-26T11:31:14Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "erikmd",
        "committer": "erikmd",
        "hash": "5fc787004d260051100ed28c061671680387b037",
        "message": "docs: Add missing entry in CHANGELOG.md\n\nhref: math-comp/math-comp#292",
        "date": "2019-06-25T22:54:13Z"
      }
    ]
  },
  {
    "author": "erikmd",
    "number": 363,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 23,
        "deletions": 0
      },
      {
        "file": "mathcomp/ssreflect/finfun.v",
        "status": "M",
        "additions": 23,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2019-06-25T22:38:41Z",
    "update_date": "2019-07-05T11:06:05Z",
    "discussion": [
      {
        "author": "erikmd",
        "date": "2019-07-05T12:39:14Z",
        "comment": "One of the CI jobs in `master` (for [coq 8.7](https://gitlab.com/math-comp/math-comp/-/jobs/246126645)) failed (in a spurious way at first sight) so I restarted it."
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "erikmd",
        "hash": "9420a0fd8c995514f85b006c264a1adc71439d52",
        "message": "feat(finfun.v): Add tuple_of_finfun, finfun_of_tuple & cancel lemmas",
        "date": "2019-06-25T22:32:03Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 358,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 539,
        "deletions": 115
      },
      {
        "file": "mathcomp/algebra/intdiv.v",
        "status": "M",
        "additions": 539,
        "deletions": 115
      },
      {
        "file": "mathcomp/ssreflect/path.v",
        "status": "M",
        "additions": 539,
        "deletions": 115
      },
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 539,
        "deletions": 115
      }
    ],
    "state": "merged",
    "open_date": "2019-06-13T09:15:57Z",
    "update_date": "2019-10-25T07:46:35Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2019-06-13T16:58:15Z",
        "comment": "@pi8027 great PR! which I do not fully read yet... Just one bureaucratic comment so far:\r\n\r\n> * [ ]  merge dependency: #328\r\n\r\nSince #328 is not going to be merged without #358, I prefer that this PR substitutes #328 completely.\r\nPlease add \"closes #328\" to the original post and rebase all the commits on master (without caring about #328)."
      },
      {
        "author": "pi8027",
        "date": "2019-06-14T12:26:19Z",
        "comment": "@CohenCyril OK. I did it. I may need help on diffs coming from #328."
      },
      {
        "author": "pi8027",
        "date": "2019-06-16T13:25:33Z",
        "comment": "I have proved the following lemmas. `mask_sort'` and `subseq_sort'` can be derived as their corollaries.\r\n```coq\r\nsorted_sort\r\n     : forall (T : Type) (leT : rel T),\r\n       transitive leT -> forall s : seq T, sorted leT s -> sort leT s = s\r\nmask_sort\r\n     : forall (T : Type) (leT : rel T), total leT -> transitive leT ->\r\n       forall (s : seq T) (m : bitseq),\r\n       {m_s : bitseq | mask m_s (sort leT s) = sort leT (mask m s)}\r\nsubseq_sort\r\n     : forall (T : eqType) (leT : rel T),\r\n       total leT -> transitive leT -> {homo sort leT : t s / subseq t s}\r\n```"
      },
      {
        "author": "pi8027",
        "date": "2019-06-19T11:21:41Z",
        "comment": "I have finished all the improvements I could do now except for documentation."
      },
      {
        "author": "amahboubi",
        "date": "2019-07-10T08:17:21Z",
        "comment": "Hi @pi8027 , @CohenCyril, could you clarify the status of this PR today? Thanks in advance!"
      },
      {
        "author": "pi8027",
        "date": "2019-07-10T12:56:20Z",
        "comment": "@amahboubi @CohenCyril Currently, `sort_map_in` is not general enough and some hypothesis of it could be dropped; however, a generalized version seems to be difficult to prove. (see: https://github.com/math-comp/math-comp/pull/358#discussion_r294975535)\r\nSo I'd like to drop `sort_map_in` from this PR and add it later, if @CohenCyril cannot generalize it before long."
      },
      {
        "author": "amahboubi",
        "date": "2019-07-10T13:02:06Z",
        "comment": "Hello @pi8027, thanks for the feedback. Your plan looks sensible, please go ahead. However, it seems to me that your remark is orthogonal to CI failure, isn't it?"
      },
      {
        "author": "pi8027",
        "date": "2019-07-10T19:18:14Z",
        "comment": "Hello @amahboubi, I have removed `sort_map_in` and updated documentation. There is no CI failure now. So this PR is ready for review."
      },
      {
        "author": "pi8027",
        "date": "2019-07-11T17:04:54Z",
        "comment": "Lemmas `mask_sort'` and `subseq_sort'` could have better names."
      },
      {
        "author": "amahboubi",
        "date": "2019-10-24T12:42:47Z",
        "comment": "@pi8027 sorry for the lag: in the end do you want to change the names of  `mask_sort'` and `subseq_sort'` before we merge? @CohenCyril @anton-trunov @ggonthier do you see anything blocking the merge of this PR?"
      },
      {
        "author": "pi8027",
        "date": "2019-10-24T13:42:35Z",
        "comment": "@amahboubi I think `sorted_mask_sort` and `sorted_subseq_sort` would be better (but a bit redundant) because they are corollaries of `mask_sort` and `subseq_sort` where the case of masked sequence and subsequence are sorted. If no other names are suggested, I will rename them and rebase again."
      },
      {
        "author": "pi8027",
        "date": "2019-10-24T21:26:07Z",
        "comment": "Renamed & ready to merge."
      }
    ],
    "review_discussion": [
      {
        "author": "anton-trunov",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2019-06-13T12:17:29Z",
        "comment": "Just a comment. Here is an alternative proof of `mem2E` lemma that does not use nested induction:\r\n\r\n```coq\r\nLemma mem2E s x y :\r\n  mem2 s x y = subseq (if x == y then [:: x] else [:: x; y]) s.\r\nProof.\r\nelim: s => [| h s]; first by case: ifP.\r\nrewrite mem2_cons => ->.\r\ndo ! rewrite !(fun_if subseq) !if_arg !sub1seq /= ?inE.\r\nby case: eqVneq => [-> |]; case: eqVneq.\r\nQed.\r\n```\r\n\r\nPlease feel free to use it or completely ignore it."
      },
      {
        "author": "anton-trunov",
        "file": "mathcomp/solvable/abelian.v",
        "date": "2019-06-13T13:34:58Z",
        "comment": "```suggestion\r\ncase/andP=> _ /(order_path_min _) min_y.\r\n```\r\nFor uniformity with the rest of the patch."
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/solvable/abelian.v",
        "date": "2019-06-13T14:54:30Z",
        "comment": "Actually the proper fix is to make the implicits of `order_path_min` maximal, and _not_ modifying `abelian.v`, as I commented in #328"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2019-06-14T11:58:12Z",
        "comment": "Thank you so much! I have replaced the proof."
      },
      {
        "author": "anton-trunov",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2019-06-14T12:03:53Z",
        "comment": "I'm glad you liked it! Let me thank you for this great PR!"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2019-06-14T12:13:54Z",
        "comment": "Now I have a better conjecture to replace this but feel difficulties to prove it. :(\r\n```coq\r\nConjecture subseq_sort : {homo sort leT : t s / subseq t s}.\r\n```"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2019-06-18T18:46:45Z",
        "comment": "Section variables of `EqHomoPath` and `EqHomoSortSeq` are differently ordered, but can be the same and could have more uniformity. @CohenCyril Unless you did it intentionally, I would like to change it."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2019-06-18T18:52:10Z",
        "comment": "@CohenCyril Can you manage to prove this with fewer assumptions as I suggested in https://github.com/math-comp/math-comp/pull/328#discussion_r293323946?"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2019-06-19T08:42:51Z",
        "comment": "@pi8027 yes please go ahead and let `f` be a section variable everywhere."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/solvable/abelian.v",
        "date": "2019-06-19T11:17:14Z",
        "comment": "I don't see the proper fix of this issue as @anton-trunov mentioned in https://github.com/math-comp/math-comp/pull/328#discussion_r293436129."
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/solvable/abelian.v",
        "date": "2019-06-19T12:00:11Z",
        "comment": "Indeed, you need to make the implicits of `order_path_min` both maximal _and prenex_, i.e., either make `transitive leT` an explicit rather than a section hypothesis (use `Implicit Type` if you don't want to repeat the statement/intro everywhere), or also make it a maximal implicit (which I don't recommend). The reason is that Coq doesn't alway insert maximal implicits; it requires all previous non-implicit arguments to be present.\r\n   An alternative solution would be to declare the section variable `T` as a `nonPropType`.\r\nI'll put a pointer in #328."
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "ybertot",
        "committer": "pi8027",
        "hash": "9798c42f50d8a2ca905babe8fb7833e2420b89e7",
        "message": "Modified the definition of sort to work on any type",
        "date": "2019-10-24T16:51:21Z"
      },
      {
        "author": "CohenCyril",
        "committer": "pi8027",
        "hash": "e7fe888b2894e8ded7a24a85c2176b1d1fba53b6",
        "message": "Other Generalizations, fixes and CHANGELOG entry",
        "date": "2019-10-24T16:52:26Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "a426db7fae5b308d9fa0423f57f01335067a3c1e",
        "message": "Avoid some eta-expansions",
        "date": "2019-10-24T16:52:26Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "9952444a63dec63819dd0eb891ba4d178855eca6",
        "message": "Add stability lemmas for `path.sort`\n\n- Inverse the comparison in `merge` and swap arguments of it everywhere.\n- Add `sort_rec1` and `sortE` to simplify inductive proofs on `sort`.\n- Add `seq.mask_filter`, `mem2E`, `path_mask`, `path_filter`, and `sorted_mask`.\n- Generalize `sorted_filter`, `homo_path_in`, `mono_path_in`, `homo_sorted_in`,\n  and `mono_sorted_in` to non-`eqType`s.\n- Add the following lemmas to state the stability of `path.merge` and `path.sort`.\n\nsorted_merge\n     : forall (T : Type) (leT : rel T),\n       transitive leT ->\n       forall s t : seq T, sorted leT (s ++ t) -> merge leT s t = s ++ t\n\nmerge_stable_path\n     : forall (T : Type) (leT leT' : rel T),\n       total leT ->\n       forall (x : T) (s1 s2 : seq T),\n       all (fun y : T => all (leT' y) s2) s1 ->\n       path [rel x0 y | leT x0 y && (leT y x0 ==> leT' x0 y)] x s1 ->\n       path [rel x0 y | leT x0 y && (leT y x0 ==> leT' x0 y)] x s2 ->\n       path [rel x0 y | leT x0 y && (leT y x0 ==> leT' x0 y)] x\n         (merge leT s1 s2)\n\nmerge_stable_sorted\n     : forall (T : Type) (leT leT' : rel T),\n       total leT ->\n       forall s1 s2 : seq T,\n       all (fun x : T => all (leT' x) s2) s1 ->\n       sorted [rel x y | leT x y && (leT y x ==> leT' x y)] s1 ->\n       sorted [rel x y | leT x y && (leT y x ==> leT' x y)] s2 ->\n       sorted [rel x y | leT x y && (leT y x ==> leT' x y)] (merge leT s1 s2)\n\nsorted_sort\n     : forall (T : Type) (leT : rel T),\n       transitive leT -> forall s : seq T, sorted leT s -> sort leT s = s\n\nsort_stable\n     : forall (T : Type) (leT leT' : rel T),\n       total leT -> transitive leT' ->\n       forall s : seq T,\n       sorted leT' s ->\n       sorted [rel x y | leT x y && (leT y x ==> leT' x y)] (sort leT s)\n\nfilter_sort\n     : forall (T : Type) (leT : rel T),\n       total leT -> transitive leT ->\n       forall (p : pred T) (s : seq T),\n       [seq x <- sort leT s | p x] = sort leT [seq x <- s | p x]\n\nmask_sort\n     : forall (T : Type) (leT : rel T),\n       total leT -> transitive leT ->\n       forall (s : seq T) (m : bitseq),\n       {m_s : bitseq | mask m_s (sort leT s) = sort leT (mask m s)}\n\nmask_sort'\n     : forall (T : Type) (leT : rel T),\n       total leT -> transitive leT ->\n       forall (s : seq T) (m : bitseq),\n       sorted leT (mask m s) ->\n       {m_s : bitseq | mask m_s (sort leT s) = mask m s}\n\nsubseq_sort\n     : forall (T : eqType) (leT : rel T),\n       total leT -> transitive leT -> {homo sort leT : t s / subseq t s}\n\nsubseq_sort'\n     : forall (T : eqType) (leT : rel T),\n       total leT -> transitive leT ->\n       forall t s : seq T, subseq t s -> sorted leT t -> subseq t (sort leT s)\n\nmem2_sort\n     : forall (T : eqType) (leT : rel T),\n       total leT -> transitive leT ->\n       forall (s : seq T) (x y : T),\n       leT x y -> mem2 s x y -> mem2 (sort leT s) x y",
        "date": "2019-10-24T16:52:26Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "2d737d93dfaa929075885fc2f31fc8da491b670d",
        "message": "Get the proper fix of `order_path_min` and remove `sort_map_in`",
        "date": "2019-10-24T16:52:26Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "46b97156094cad886861e92278721dd7e9efde82",
        "message": "Update documentation and CHANGELOG entries",
        "date": "2019-10-24T16:53:10Z"
      }
    ]
  },
  {
    "author": "lucienRakotomalala",
    "number": 357,
    "diff_summary": [
      {
        "file": "mathcomp/algebra/dioid.v",
        "status": "A",
        "additions": 1689,
        "deletions": 0
      },
      {
        "file": "mathcomp/algebra/kleene.v",
        "status": "A",
        "additions": 1689,
        "deletions": 0
      }
    ],
    "state": "closed",
    "open_date": "2019-06-07T09:29:43Z",
    "update_date": "2020-08-26T10:26:05Z",
    "discussion": [
      {
        "author": "amahboubi",
        "date": "2019-07-05T11:26:33Z",
        "comment": "Dear @lucienRakotomalala, many thanks for submitting this PR! This work is really nice and looks definitely interesting. However, I think that, at least for now, it would be more relevant to have it as an independent library. Indeed, this is not just an addition to an existing component but rather a proposal for a new component. We would need thus need to evaluate and discuss the relevance of the inclusion first. This is the standard procedure, even for our own (= dev's) contribution. See e.g. the `finmap` project in the organization."
      },
      {
        "author": "amahboubi",
        "date": "2019-07-05T11:33:27Z",
        "comment": "I have nonetheless written a short review with a few style comments on your code. Do not hesitate to ask more questions here, or on [gitter](https://gitter.im/math-comp) or [Discourse](https://coq.discourse.group/).\r\n\r\nFor instance, the two questions you have in the header would fit well in Discourse I think. \r\n\r\n @hivert, main author of the [Coq-Combi](https://github.com/hivert/Coq-Combi) project, might also give feedback about this topic.\r\n\r\n"
      },
      {
        "author": "hivert",
        "date": "2019-07-05T20:46:51Z",
        "comment": "@amahboubi, I'm not sure I've that much to say here. It would be worth to have semi-ring inserted in the algebraic hierarchy if it does not impact performance. Then, part of the matrix theory could be generalized to semirings (everything which doesn't use the minus sign...). \r\n\r\nOn the other hand I'm not familiar with the dioid theory, but a lot of Kleene's result seems be some higher level abstraction of the corresponding result in language theory.   @lucienRakotomalala could your formalized result be applied/reused for some language and automata theory ?\r\n\r\nAnyway: congratulation for the substantial work with a lot of new algebraic structures. This is for me a place where mathcomp is not so easy to extend ! "
      },
      {
        "author": "pi8027",
        "date": "2019-07-24T08:54:16Z",
        "comment": "Hello @lucienRakotomalala,\r\n\r\n> rings are semirings, should we formalize it?\r\n\r\nI would say yes (if we merge this PR to MathComp). So I think that `ringType` should be redefined to inherit `semiRingType`, and moreover, `dioidType` should inherit `porderType` of #270; however, this change makes the join of `porderType` and `semiRingType` ambiguous: `dioidType` or `numDomainType`. So we need to introduce an intermediate structure of \"partially-ordered semirings\" to disambiguate it, but this kind of changes could introduce new performance issues...\r\nAnyway, if you need some help to do those changes, I would like to provide it. But I'm not sure when I can do it."
      },
      {
        "author": "proux01",
        "date": "2019-07-26T15:07:51Z",
        "comment": "@amahboubi thanks for your answer and the detailed comments, @lucienRakotomalala is looking at them.\r\n\r\n> I think that, at least for now, it would be more relevant to have it as an independent library. Indeed, this is not just an addition to an existing component but rather a proposal for a new component. We would need thus need to evaluate and discuss the relevance of the inclusion first. This is the standard procedure, even for our own (= dev's) contribution. See e.g. the finmap project in the organization.\r\n\r\nSure, how would you recommend to proceed in practice ? Close this PR and put the code somewhere else ?\r\n\r\n> Do not hesitate to ask more questions here, or on gitter or Discourse.\r\nFor instance, the two questions you have in the header would fit well in Discourse I think.\r\n\r\nThanks for the advice, we should indeed launch these discussions there.\r\n\r\n@hivert thanks for your answer\r\n> It would be worth to have semi-ring inserted in the algebraic hierarchy if it does not impact performance. Then, part of the matrix theory could be generalized to semirings (everything which doesn't use the minus sign...).\r\n\r\nI guess the only way to know is to try. Do you have an idea of what could be a good benchmark to test the performance impact ? just compiling mathcomp-algebra ?\r\n\r\n> could your formalized result be applied/reused for some language and automata theory ?\r\n\r\nI guess so, although the user would have to assume an eqType/choiceType over (possibly infinite) languages.\r\n\r\n> Anyway: congratulation for the substantial work with a lot of new algebraic structures. This is for me a place where mathcomp is not so easy to extend !\r\n\r\nThe mathcomp book was of great help, as well as this lesson from @CohenCyril http://www-sop.inria.fr/teams/marelle/advanced-coq-16-17/exercise5.html\r\n\r\n@pi8027 \r\n> if you need some help to do those changes, I would like to provide it. But I'm not sure when I can do it.\r\n\r\nThanks for the offer. I'd like to prototype that first. I'll then ask you if I have questions. But don't expect anything before at least next month.\r\n"
      },
      {
        "author": "affeldt-aist",
        "date": "2020-03-25T14:58:02Z",
        "comment": "The release managers for release 1.11.0 are thinking about closing this PR but would like to make sure that the code is still available, e.g., as a opam package. Can you confirm? @proux01 @lucienRakotomalala "
      },
      {
        "author": "thery",
        "date": "2020-08-26T10:26:05Z",
        "comment": "@proux01 @lucienRakotomalala  we have discussed this pull request at the \r\nlast math-comp meeting https://github.com/math-comp/math-comp/wiki/Minutes-August-25-2020\r\nUnfortunately we are not in a situation where we can merge this pull request in the main library\r\neasily. So we are going to close this pull request. We are really sorry about that. \r\nIf you have any question how to turn your code into an external library, don't hesitate to contact us.\r\n"
      },
      {
        "author": "proux01",
        "date": "2020-08-27T14:38:33Z",
        "comment": "Sorry for not responding. I agree this is not mergeable and had to be closed.\r\n\r\nThe main obstacles seem to be:\r\n* addressing above comments (should be easy)\r\n* lack of semirings in `ssralg` (they seem to be a common example for [Hierarchy Builder](https://github.com/math-comp/hierarchy-builder), what are the plans here wrt Mathcomp?)\r\n* lack of complete lattices (since 1.11 we have lattices (binary meet and joins) in `order` which is great but complete lattices (meet and joins over arbitrary sets) would need to be added)\r\n\r\nI also agree this should be distributed separately, hence these two questions:\r\n* how should it be named: `coq-dioids` or `coq-mathcomp-dioids` (@CohenCyril may have an opinion here)\r\n* where should it be hosted: in the [math-comp](https://github.com/math-comp) github organization? anywhere else?\r\n"
      },
      {
        "author": "CohenCyril",
        "date": "2020-08-27T16:30:33Z",
        "comment": "> Sorry for not responding. I agree this is not mergeable and had to be closed.\r\n> \r\n> The main obstacles seem to be:\r\n> \r\n> * addressing above comments (should be easy)\r\n> * lack of semirings in `ssralg` (they seem to be a common example for [Hierarchy Builder](https://github.com/math-comp/hierarchy-builder), what are the plans here wrt Mathcomp?)\r\n\r\nAbout HB and mathcomp, there are long terms plans that must not be blocking any contribution, since for the time being we cannot predict if and when math-comp would rely on HB.\r\n\r\nHowever meanwhile, the addition of an intermediate structure between `eqType` and `fieldExtType` might critically impact the compiltation type of some files (or at least I believe this was the case in the past). One could put that to the test in recent versions of Coq though...\r\n\r\n> * lack of complete lattices (since 1.11 we have lattices (binary meet and joins) in `order` which is great but complete lattices (meet and joins over arbitrary sets) would need to be added)\r\n> \r\n> I also agree this should be distributed separately, hence these two questions:\r\n> \r\n> * how should it be named: `coq-dioids` or `coq-mathcomp-dioids` (@CohenCyril may have an opinion here)\r\n\r\nWe [discussed this in June](https://github.com/math-comp/math-comp/wiki/Minutes-June-16-2020) and there was no consensus. The objective criterion that made it to the minutes is the hosting by the `math-comp` organization (cf next bullet). In my own opinion, every library that depends on mathcomp and brings a library component in mathcomp style should be prefixed by `mathcomp`.\r\n\r\n> * where should it be hosted: in the [math-comp](https://github.com/math-comp) github organization? anywhere else?\r\n\r\nSure we would be glad to open a new repository in the mathcomp organization, we actually made that clearer in [the last meeting actually](https://github.com/math-comp/math-comp/wiki/Minutes-August-25-2020).\r\n\r\n"
      },
      {
        "author": "pi8027",
        "date": "2020-08-27T17:13:55Z",
        "comment": "> However meanwhile, the addition of an intermediate structure between `eqType` and `fieldExtType` might critically impact the compiltation type of some files (or at least I believe this was the case in the past). One could put that to the test in recent versions of Coq though...\r\n\r\nThis issue has been observed in https://github.com/math-comp/math-comp/pull/270#issuecomment-482152101."
      },
      {
        "author": "proux01",
        "date": "2020-08-28T11:44:08Z",
        "comment": "Thanks for the detailed explanations!\r\n\r\n> Sure we would be glad to open a new repository in the mathcomp organization, we actually made that clearer in the last meeting actually.\r\n\r\nGoing this way would be fine for me, I can then maintain it and publish opam packages.\r\n"
      },
      {
        "author": "CohenCyril",
        "date": "2020-08-28T13:56:01Z",
        "comment": "I can open it and name it with the name of your choice (`diod` and make you maintainer)"
      },
      {
        "author": "CohenCyril",
        "date": "2020-08-28T13:57:29Z",
        "comment": "Would you be ok to try to keep it as close as possible to math-comp coding conventions?"
      },
      {
        "author": "proux01",
        "date": "2020-08-28T14:02:10Z",
        "comment": "`dioid` is fine. I'll address Assia's comments above and try to do my best t adhere the coding conventions but feel free to criticize, I'm not perfectly used to them."
      },
      {
        "author": "CohenCyril",
        "date": "2020-08-28T14:07:04Z",
        "comment": "It would be a great opportunity for us to improve https://github.com/math-comp/math-comp/blob/master/CONTRIBUTING.md"
      },
      {
        "author": "CohenCyril",
        "date": "2020-08-28T14:11:25Z",
        "comment": "https://github.com/math-comp/dioid @proux01 you are admin of this repository now."
      },
      {
        "author": "proux01",
        "date": "2020-08-31T15:39:19Z",
        "comment": "Thanks!\r\n* code imported\r\n* I revised all proofs for coding conventions, according to comments above and the contribution guide\r\n(there may still remain some strange things though, feel free to point them)\r\n* CI set up\r\n* OPAM packages published (`coq-mathcomp-dioid.0.1` and `coq-mathcomp-dioid.dev`)\r\n\r\nI still have to make dioids a `porderType` as pointed above by @pi8027 "
      }
    ],
    "review_discussion": [
      {
        "author": "amahboubi",
        "file": "mathcomp/algebra/dioid.v",
        "date": "2019-07-05T11:10:40Z",
        "comment": "Why do you feel the need to change the done tactic?"
      },
      {
        "author": "amahboubi",
        "file": "mathcomp/algebra/kleene.v",
        "date": "2019-07-05T11:11:59Z",
        "comment": "The style of  this proof (and of others below) is not idiomatic. E.g. please use the ssreflect bullets and chain tactics so as to take better benefit of the 80 character long line. Ideally, one meaningful proof step takes a single line."
      },
      {
        "author": "amahboubi",
        "file": "mathcomp/algebra/kleene.v",
        "date": "2019-07-05T11:14:06Z",
        "comment": "replace `by apply` by `exact:`"
      },
      {
        "author": "amahboubi",
        "file": "mathcomp/algebra/kleene.v",
        "date": "2019-07-05T11:14:26Z",
        "comment": "Please use `apply:` instead of `apply`"
      },
      {
        "author": "amahboubi",
        "file": "mathcomp/algebra/kleene.v",
        "date": "2019-07-05T11:17:17Z",
        "comment": "This would be better written:\r\n\r\n`elim=> [ | i iHk]; first by rewrite set_add_0`\r\n\r\nSeveral things happen here:\r\n- `move=> i; elim: i` is just `elim`\r\n- `first by` is used to remove one indentation\r\n- the final simplification switch `/=' is superseded by the prefix `by`."
      },
      {
        "author": "amahboubi",
        "file": "mathcomp/algebra/kleene.v",
        "date": "2019-07-05T11:18:11Z",
        "comment": "Deal with the shorted proof first, i.e. do not use `last first` in this case."
      },
      {
        "author": "amahboubi",
        "file": "mathcomp/algebra/kleene.v",
        "date": "2019-07-05T11:19:36Z",
        "comment": "You probably want two lemmas here, one for each component of the conjunction. Otherwise users of the result will always have to break the statement into its two components before starting using it."
      }
    ],
    "tags": [],
    "commits": [
      {
        "hash": "7a3384cc6c5ac2cb3cf30771852c89a4916b2fe3",
        "message": "Algebraic structure of dioid",
        "date": "2019-06-07T09:26:41Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 356,
    "diff_summary": [
      {
        "file": "mathcomp/algebra/ssrnum.v",
        "status": "M",
        "additions": 96,
        "deletions": 40
      },
      {
        "file": "mathcomp/character/classfun.v",
        "status": "M",
        "additions": 96,
        "deletions": 40
      }
    ],
    "state": "merged",
    "open_date": "2019-06-04T12:58:05Z",
    "update_date": "2019-06-04T15:13:50Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "079f3ac59136446aba1e9ab28bbd0dceacc28492",
        "message": "Fix deprecation",
        "date": "2019-06-04T12:54:34Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 354,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "A",
        "additions": 4670,
        "deletions": 1
      },
      {
        "file": "mathcomp/Make",
        "status": "A",
        "additions": 4670,
        "deletions": 1
      },
      {
        "file": "mathcomp/ssreflect/Make",
        "status": "A",
        "additions": 4670,
        "deletions": 1
      },
      {
        "file": "mathcomp/ssreflect/all_ssreflect.v",
        "status": "A",
        "additions": 4670,
        "deletions": 1
      },
      {
        "file": "mathcomp/ssreflect/finmap.v",
        "status": "A",
        "additions": 4670,
        "deletions": 1
      },
      {
        "file": "mathcomp/ssreflect/finset.v",
        "status": "A",
        "additions": 4670,
        "deletions": 1
      },
      {
        "file": "mathcomp/ssreflect/multiset.v",
        "status": "A",
        "additions": 4670,
        "deletions": 1
      },
      {
        "file": "mathcomp/ssreflect/ssrnat.v",
        "status": "A",
        "additions": 4670,
        "deletions": 1
      }
    ],
    "state": "open",
    "open_date": "2019-05-29T17:17:28Z",
    "update_date": "2021-05-19T08:18:15Z",
    "discussion": [
      {
        "author": "affeldt-aist",
        "date": "2020-03-25T15:04:06Z",
        "comment": "The release managers for 1.11.0 think that the status of this PR is not clear. It looks that it depends on PR#259. Should it be postponed to milestone 1.12.0?"
      },
      {
        "author": "CohenCyril",
        "date": "2020-03-25T15:27:32Z",
        "comment": "> The release managers for 1.11.0 think that the status of this PR is not clear. It looks that it depends on PR#259. Should it be postponed to milestone 1.12.0?\r\n\r\nyes, absolutely"
      }
    ],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: enhancement",
        "description": "Issue or PR about addition of features."
      },
      {
        "tag": "needs: merge of dependencies",
        "description": "PR that depends on another. Documented in the original post of the PR. Review only the increment."
      },
      {
        "tag": "needs: assignee",
        "description": "Issue or PR that needs an assignee. Please volunteer."
      }
    ],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "c63d0699ce496e8bc81247cffe82d89ee2e66d9a",
        "message": "Fixpoint theorems in finset",
        "date": "2019-05-29T17:09:57Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "aff14182f5f21304be9717ab2c85a04d1a61be9e",
        "message": "Adding finmap to mathcomp",
        "date": "2019-05-29T17:09:59Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "96afc5595c006af6cae77fc238f8a597dfbdea94",
        "message": "Adding multiset to mathcomp",
        "date": "2019-05-29T17:09:59Z"
      }
    ]
  },
  {
    "author": "anton-trunov",
    "number": 353,
    "diff_summary": [
      {
        "file": ".travis.yml",
        "status": "D",
        "additions": 0,
        "deletions": 44
      }
    ],
    "state": "merged",
    "open_date": "2019-05-29T16:42:07Z",
    "update_date": "2019-05-29T17:21:31Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2019-05-29T16:45:31Z",
        "comment": "Dear @anton-trunov the failure in #351 was legitimate, and we do not use travis anymore (but gitlab-ci synced with coqbot), so you might as well remove `.travis.yml` altogether."
      },
      {
        "author": "anton-trunov",
        "date": "2019-05-29T16:47:45Z",
        "comment": "> Dear @anton-trunov the failure in #351 was legitimate\r\n\r\nDear @CohenCyril, I agree that the last one was legitimate due to finmap relying on `sumbool` type for `eqVneq`, I meant some failures before that.\r\n\r\n> we do not use travis anymore (but gitlab-ci synced with coqbot), so you might as well remove .travis.yml altogether.\r\n\r\nI wasn't aware of that, will remove it."
      },
      {
        "author": "anton-trunov",
        "date": "2019-05-29T16:50:27Z",
        "comment": "Yesterday I got a bunch of emails from Travis, saying that the build was failing for Coq 8.6. It would feel nice not to get those :)"
      },
      {
        "author": "CohenCyril",
        "date": "2019-05-29T17:11:57Z",
        "comment": "> Yesterday I got a bunch of emails from Travis, saying that the build was failing for Coq 8.6. It would feel nice not to get those :)\r\n\r\nI think it is your personal travis running. I agree let's get rid of it."
      },
      {
        "author": "anton-trunov",
        "date": "2019-05-29T17:12:48Z",
        "comment": "Oh, I see now. Thanks."
      }
    ],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: CI",
        "description": "Issue or PR about the CI. (Gitlab CI or CI of dependencies problems linked with math-comp)"
      }
    ],
    "commits": [
      {
        "author": "anton-trunov",
        "committer": "anton-trunov",
        "hash": "5596cd2a457926419b408a5356f2a8da060b2208",
        "message": "Remove support for Travis CI\n\nMathcomp switched to Gitlab CI via coqbot, see here:\nhttps://github.com/math-comp/math-comp/pull/353#issuecomment-497017174",
        "date": "2019-05-29T16:48:13Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 352,
    "diff_summary": [
      {
        "file": ".github/pull_request_template.md",
        "status": "A",
        "additions": 20,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2019-05-29T12:41:04Z",
    "update_date": "2019-05-29T13:46:14Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "b5cf3e104aa81fa28b5210203921ba272c300790",
        "message": "pr template",
        "date": "2019-05-29T12:40:46Z"
      },
      {
        "author": "CohenCyril",
        "committer": "web-flow",
        "hash": "507c437fd3c030c710b35d41ba1ff52a2a424ab1",
        "message": "Update pull_request_template.md",
        "date": "2019-05-29T12:42:33Z"
      }
    ]
  },
  {
    "author": "anton-trunov",
    "number": 351,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "A",
        "additions": 71,
        "deletions": 47
      },
      {
        "file": "mathcomp/algebra/intdiv.v",
        "status": "A",
        "additions": 71,
        "deletions": 47
      },
      {
        "file": "mathcomp/algebra/matrix.v",
        "status": "A",
        "additions": 71,
        "deletions": 47
      },
      {
        "file": "mathcomp/algebra/poly.v",
        "status": "A",
        "additions": 71,
        "deletions": 47
      },
      {
        "file": "mathcomp/algebra/polydiv.v",
        "status": "A",
        "additions": 71,
        "deletions": 47
      },
      {
        "file": "mathcomp/fingroup/perm.v",
        "status": "A",
        "additions": 71,
        "deletions": 47
      },
      {
        "file": "mathcomp/solvable/abelian.v",
        "status": "A",
        "additions": 71,
        "deletions": 47
      },
      {
        "file": "mathcomp/solvable/burnside_app.v",
        "status": "A",
        "additions": 71,
        "deletions": 47
      },
      {
        "file": "mathcomp/solvable/extraspecial.v",
        "status": "A",
        "additions": 71,
        "deletions": 47
      },
      {
        "file": "mathcomp/solvable/maximal.v",
        "status": "A",
        "additions": 71,
        "deletions": 47
      },
      {
        "file": "mathcomp/ssreflect/eqtype.v",
        "status": "A",
        "additions": 71,
        "deletions": 47
      },
      {
        "file": "mathcomp/ssreflect/finset.v",
        "status": "A",
        "additions": 71,
        "deletions": 47
      },
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "A",
        "additions": 71,
        "deletions": 47
      }
    ],
    "state": "merged",
    "open_date": "2019-05-28T20:04:56Z",
    "update_date": "2019-05-29T16:48:39Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2019-05-29T08:16:32Z",
        "comment": "I am in favor of adding this lemma, as it looks useful. But given how many times it is used I would prefer a longer name, that contains the word `sym` rather than just `s`, as in `eqPsym` (which I prefer) or `eq_symP`."
      },
      {
        "author": "anton-trunov",
        "date": "2019-05-29T08:39:10Z",
        "comment": "Thank you @CohenCyril. I'm happy to change names to anything that make more sense than the current preliminary naming.\r\nI've always thought that `P` should be the last character for views. Are there any exceptions in mathcomp?\r\n"
      },
      {
        "author": "CohenCyril",
        "date": "2019-05-29T09:36:12Z",
        "comment": "> I've always thought that `P` should be the last character for views. Are there any exceptions in mathcomp?\r\n\r\nYes, suffixes `Pl` (for left), `Pr` (for right), `Pn` (for neg), and more recently `Pdep`"
      },
      {
        "author": "thery",
        "date": "2019-05-29T09:38:49Z",
        "comment": "we should use machine learning to automatically generate names :smiley:"
      },
      {
        "author": "CohenCyril",
        "date": "2019-05-29T11:34:56Z",
        "comment": "> there is already an eqVneq lemma stating the x=y / x!=y alternative, so replacing that lemma would be preferable.\r\n\r\nI agree, I think it would be great to rename `eqPsym` to `eqVneq` and remove the old `eqVneq` lemma\r\n(and same for `eqsVneq`).\r\n"
      },
      {
        "author": "anton-trunov",
        "date": "2019-05-29T12:18:28Z",
        "comment": "Great suggestions, thank you @ggonthier and @CohenCyril. Please take a look if I missed anything."
      },
      {
        "author": "CohenCyril",
        "date": "2019-05-29T13:31:10Z",
        "comment": "I will squash and merge."
      },
      {
        "author": "anton-trunov",
        "date": "2019-05-29T13:32:07Z",
        "comment": "Great! Thanks to everyone for your time, patience and the great suggestions!"
      }
    ],
    "review_discussion": [
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/eqtype.v",
        "date": "2019-05-28T20:24:03Z",
        "comment": "`case: eqsP` finds the first occurrence of `?y == ?x` and generates a hypothesis `?x = ?y` or `?x <> ?y`. So `eq_xor_neq_sym x y (y == x) (x == y)` might be better as the type of `eqsP`. It could be possible to replace `eqP` with `eqsP` with this small change."
      },
      {
        "author": "anton-trunov",
        "file": "mathcomp/ssreflect/eqtype.v",
        "date": "2019-05-28T20:36:40Z",
        "comment": "@pi8027 Good catch! Thank you very much."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/eqtype.v",
        "date": "2019-05-29T09:38:55Z",
        "comment": "Also, the canonical way of expressing dis-equality on an `eqType` is `x != y`, so constructor `NeqNotEqSym` should be modified accordingly. (The reason why it differs from `eqP` here is because `eqP` is a `reflect` lemma, that one should compose with combinators such as `altP`)"
      },
      {
        "author": "anton-trunov",
        "file": "mathcomp/ssreflect/eqtype.v",
        "date": "2019-05-29T10:13:02Z",
        "comment": "Thank you for the feedback, fixed now. I'm keeping recent changes as separate commits to make the review process easier. I'll squash the commits later."
      },
      {
        "author": "CohenCyril",
        "file": "CHANGELOG.md",
        "date": "2019-05-29T12:27:57Z",
        "comment": "I would remove the comparison with `eqP` which is less relevant than the comparison to `eqVneq`."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/polydiv.v",
        "date": "2019-05-29T12:28:41Z",
        "comment": "this can even be shorted to `case: eqVneq => // pn0; case: eqVneq => // qn0`"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/eqtype.v",
        "date": "2019-05-29T12:31:50Z",
        "comment": "`by rewrite eq_sym; case: (altP eqP); constructor.`"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/solvable/abelian.v",
        "date": "2019-05-29T12:33:11Z",
        "comment": "`case: (trivgVpdiv G) => [/eqP->// | [p p_pr]].`"
      },
      {
        "author": "CohenCyril",
        "file": "CHANGELOG.md",
        "date": "2019-05-29T12:35:08Z",
        "comment": "As per https://github.com/math-comp/math-comp/wiki/Agenda-of-the-April-23rd-2019-meeting-9h30-to-12h30#avoiding-issues-with-changelog new changelog entries now go to `CHANGELOG_UNRELEASED.md`"
      },
      {
        "author": "anton-trunov",
        "file": "CHANGELOG.md",
        "date": "2019-05-29T12:43:49Z",
        "comment": "done"
      },
      {
        "author": "anton-trunov",
        "file": "mathcomp/algebra/polydiv.v",
        "date": "2019-05-29T12:44:08Z",
        "comment": "much better, thanks"
      },
      {
        "author": "anton-trunov",
        "file": "mathcomp/ssreflect/eqtype.v",
        "date": "2019-05-29T12:44:27Z",
        "comment": "I keep forgetting about `altP`, thanks"
      },
      {
        "author": "anton-trunov",
        "file": "mathcomp/solvable/abelian.v",
        "date": "2019-05-29T12:44:46Z",
        "comment": "done"
      },
      {
        "author": "anton-trunov",
        "file": "CHANGELOG.md",
        "date": "2019-05-29T12:46:42Z",
        "comment": "I created the file, keeping `## [Unreleased]` section, which looks a bit weird since the whole file is devoted to unreleased stuff, but I think it should make it easier to move entries from `CHANGELOG_UNRELEASED.md` to `CHANGELOG.md`. I can change that if you'd like, though."
      },
      {
        "author": "CohenCyril",
        "file": "CHANGELOG.md",
        "date": "2019-05-29T12:50:57Z",
        "comment": "I think this is fine"
      },
      {
        "author": "CohenCyril",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2019-05-29T12:56:29Z",
        "comment": "One last comment: I do not think this counts as a view, so you could write:\r\n- `eqVneq` lemma is changed from `{x = y} + {x != y}` to `eq_xor_neq x y (y == x) (x == y)`, on which a case analysis performs simultaneous replacement of expressions of the form `x == y` and `y == x` by `true` or `false`, while keeping the ability to use it in the way it was used before."
      },
      {
        "author": "anton-trunov",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2019-05-29T13:05:59Z",
        "comment": "done!"
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "anton-trunov",
        "committer": "anton-trunov",
        "hash": "eac1d28204c93f082771dedb90fc5a1edec6e6f8",
        "message": "Add eqsP view to destruct not only x == y, but also y == x",
        "date": "2019-05-28T20:56:19Z"
      },
      {
        "author": "anton-trunov",
        "committer": "anton-trunov",
        "hash": "c7c344f2f08f3910c884d9c3bb1bd5cfe3c2a1d7",
        "message": "Rename eqsP to eqPsym as suggested by @CohenCyril",
        "date": "2019-05-29T09:38:48Z"
      },
      {
        "author": "anton-trunov",
        "committer": "anton-trunov",
        "hash": "1aa27b589c437b88cc6fb556edfceac42da449ea",
        "message": "Canonical way of expressing dis-equality on an eqType is x != y\n\nAddressing a suggestion by @CohenCyril",
        "date": "2019-05-29T09:52:42Z"
      },
      {
        "author": "anton-trunov",
        "committer": "anton-trunov",
        "hash": "42db44ce8df9f24d90c321d57e81e2d5bf83bd48",
        "message": "Replace eqVneq with eqPsym\n\nAlso changed eqsVneq.",
        "date": "2019-05-29T12:17:39Z"
      },
      {
        "author": "anton-trunov",
        "committer": "anton-trunov",
        "hash": "e9c284b97b76e214f417ccc33907853bc0b8aa8e",
        "message": "incorporate new suggestions by @CohenCyril",
        "date": "2019-05-29T12:37:31Z"
      },
      {
        "author": "anton-trunov",
        "committer": "anton-trunov",
        "hash": "3db164c8410dfbb3204c7d02d057356d22044c0d",
        "message": "Move unreleased changelog entries to CHANGELOG_UNRELEASED.md",
        "date": "2019-05-29T12:42:30Z"
      },
      {
        "author": "anton-trunov",
        "committer": "anton-trunov",
        "hash": "ccceb6fbd3bd811b728f6e11dad3cf255a577801",
        "message": "reword entry in CHANGELOG_UNRELEASED.md",
        "date": "2019-05-29T13:05:39Z"
      }
    ]
  },
  {
    "author": "gares",
    "number": 350,
    "diff_summary": [],
    "state": "closed",
    "open_date": "2019-05-26T19:22:04Z",
    "update_date": "2019-11-14T21:17:44Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2019-05-29T17:23:05Z",
        "comment": "@gares we should add `--ignore-constraints-on` in the CI file for coq-dev."
      },
      {
        "author": "gares",
        "date": "2019-05-29T20:22:10Z",
        "comment": "yup, you are right"
      },
      {
        "author": "CohenCyril",
        "date": "2019-11-05T16:39:49Z",
        "comment": "@gares can you revive this PR? (Rebase + required fix for coq-dev?)"
      },
      {
        "author": "gares",
        "date": "2019-11-14T21:19:45Z",
        "comment": "I've rebased it and it turned out to be a no-op (in some way the changes are already in master).\r\nHence github thinks the PR was merged, since it's tip is contained in master (it is actually master).\r\nwell..."
      }
    ],
    "review_discussion": [],
    "tags": [
      {
        "tag": "needs: fix",
        "description": "PR that needs to be fix (generally because reviewers asked to)."
      }
    ],
    "commits": []
  },
  {
    "author": "pi8027",
    "number": 348,
    "diff_summary": [],
    "state": "merged",
    "open_date": "2019-05-22T09:38:18Z",
    "update_date": "2019-05-29T08:06:22Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [
      {
        "tag": "needs: rebase",
        "description": "PR which is not rebased: check the target is appropriate (generally master) and rebase on top of it."
      }
    ],
    "commits": []
  },
  {
    "author": "palmskog",
    "number": 346,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/path.v",
        "status": "M",
        "additions": 24,
        "deletions": 0
      }
    ],
    "state": "closed",
    "open_date": "2019-05-10T17:31:43Z",
    "update_date": "2020-11-18T10:34:49Z",
    "discussion": [
      {
        "author": "ggonthier",
        "date": "2019-05-21T10:31:48Z",
        "comment": "My main issue with this PR is that it introduces a fair amount of material for a result that is ultimately only useful as documentation of the algorithm (as MathComp does not provide facilities for reasoning about algorithmic complexity), while still not providing any actual natural language of the algorithm it purports to document.\r\n  At the very least there needs to be an explanatory comment describing the algorithm (along the lines of what Hugo wrote in the Coq standard library implementation of the very same), and the proof itself should be clearly marked as a documentary result and be self-contained -- see my suggestion above.\r\n   I'd actually written this review last week, but somehow failed to post it... sorry."
      },
      {
        "author": "ybertot",
        "date": "2020-04-01T14:29:10Z",
        "comment": "Dear @palmskog , we are currently looking at this PR for potential inclusion in the next release.  I just performed a rebase locally and we would mostly need to add the documentation that @ggonthier mentioned.  Will you have time to work on this on the next few days?"
      },
      {
        "author": "ybertot",
        "date": "2020-04-01T14:47:54Z",
        "comment": "For the record, the result of the rebase is visible at https://github.com/ybertot/math-comp/tree/merge-sort-push-invariant\r\nWe could work together on adding the right comment to document the behavior of `merge_sort_push` that is illustrated by your added lemma."
      },
      {
        "author": "CohenCyril",
        "date": "2020-04-10T09:55:45Z",
        "comment": "> For the record, the result of the rebase is visible at https://github.com/ybertot/math-comp/tree/merge-sort-push-invariant\r\n\r\nI think this `Remark` by @ggonthier should be merged, regardless of which other additions are planned."
      }
    ],
    "review_discussion": [
      {
        "author": "ggonthier",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2019-05-13T12:18:08Z",
        "comment": "A more compact formalisation and proof that `merge_sort_push` maintains a graded list stack.\r\n```\r\nLocal Remark size_merge_sort_push s1 :\r\n  let graded ss := forall i, size (nth [::] ss i) \\in pred2 0 (2 ^ (i + 1)) in\r\n  size s1 = 2 -> {homo merge_sort_push s1 : ss / graded ss}.\r\nProof.\r\nset n := {2}1; rewrite -[RHS]/(2 ^ n) => graded sz_s1 ss.\r\nelim: ss => [|s2 ss IHss] in (n) graded s1 sz_s1 * => sz_ss i //=.\r\n  by case: i => [|[]] //; rewrite sz_s1 inE eqxx orbT.\r\ncase: s2 i => [|x s2] [|i] //= in sz_ss *; first by rewrite sz_s1 inE eqxx orbT.\r\n  exact: (sz_ss i.+1).\r\nrewrite addSnnS; apply: IHss i => [|i]; last by rewrite -addSnnS (sz_ss i.+1).\r\nby rewrite size_merge size_cat sz_s1 (eqnP (sz_ss 0)) addnn expnS mul2n.\r\nQed.\r\n```"
      },
      {
        "author": "ejgallego",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2019-05-13T22:10:54Z",
        "comment": "Maybe you could fold the case inside the intro pattern `move=> nsize2s [] //= n`."
      },
      {
        "author": "ejgallego",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2019-05-13T22:17:29Z",
        "comment": "You may want to intro the pattern a bit more: `elim: ss s1 n => [|s2 ss ihss] s1 n sizen`"
      },
      {
        "author": "ejgallego",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2019-05-13T22:17:46Z",
        "comment": "Last `move` seems unnecessary."
      },
      {
        "author": "ejgallego",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2019-05-13T22:18:12Z",
        "comment": "In the sense that you are already on the intro pattern `case: s1 sizen => //= _ s ->`"
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "palmskog",
        "committer": "palmskog",
        "hash": "d43ad40d18a2ab64404a970bbdd274608446ebe3",
        "message": "add lemma on merge_sort_push invariant",
        "date": "2019-05-13T22:28:38Z"
      }
    ]
  },
  {
    "author": "ggonthier",
    "number": 345,
    "diff_summary": [
      {
        "file": "CHANGELOG.md",
        "status": "M",
        "additions": 552,
        "deletions": 265
      },
      {
        "file": "mathcomp/Make",
        "status": "M",
        "additions": 552,
        "deletions": 265
      },
      {
        "file": "mathcomp/_CoqProject",
        "status": "M",
        "additions": 552,
        "deletions": 265
      },
      {
        "file": "mathcomp/algebra/ssrnum.v",
        "status": "M",
        "additions": 552,
        "deletions": 265
      },
      {
        "file": "mathcomp/algebra/vector.v",
        "status": "M",
        "additions": 552,
        "deletions": 265
      },
      {
        "file": "mathcomp/character/classfun.v",
        "status": "M",
        "additions": 552,
        "deletions": 265
      },
      {
        "file": "mathcomp/character/inertia.v",
        "status": "M",
        "additions": 552,
        "deletions": 265
      },
      {
        "file": "mathcomp/character/vcharacter.v",
        "status": "M",
        "additions": 552,
        "deletions": 265
      },
      {
        "file": "mathcomp/field/algebraics_fundamentals.v",
        "status": "M",
        "additions": 552,
        "deletions": 265
      },
      {
        "file": "mathcomp/field/finfield.v",
        "status": "M",
        "additions": 552,
        "deletions": 265
      },
      {
        "file": "mathcomp/field/galois.v",
        "status": "M",
        "additions": 552,
        "deletions": 265
      },
      {
        "file": "mathcomp/fingroup/gproduct.v",
        "status": "M",
        "additions": 552,
        "deletions": 265
      },
      {
        "file": "mathcomp/fingroup/perm.v",
        "status": "M",
        "additions": 552,
        "deletions": 265
      },
      {
        "file": "mathcomp/solvable/abelian.v",
        "status": "M",
        "additions": 552,
        "deletions": 265
      },
      {
        "file": "mathcomp/solvable/extremal.v",
        "status": "M",
        "additions": 552,
        "deletions": 265
      },
      {
        "file": "mathcomp/solvable/jordanholder.v",
        "status": "M",
        "additions": 552,
        "deletions": 265
      },
      {
        "file": "mathcomp/ssreflect/bigop.v",
        "status": "M",
        "additions": 552,
        "deletions": 265
      },
      {
        "file": "mathcomp/ssreflect/path.v",
        "status": "M",
        "additions": 552,
        "deletions": 265
      },
      {
        "file": "mathcomp/ssreflect/prime.v",
        "status": "M",
        "additions": 552,
        "deletions": 265
      },
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 552,
        "deletions": 265
      },
      {
        "file": "mathcomp/ssreflect/ssreflect.v",
        "status": "M",
        "additions": 552,
        "deletions": 265
      }
    ],
    "state": "merged",
    "open_date": "2019-05-07T00:27:23Z",
    "update_date": "2019-05-17T10:56:12Z",
    "discussion": [
      {
        "author": "ggonthier",
        "date": "2019-05-08T22:34:36Z",
        "comment": "For the record: the latest (and hopefully last) CI failure appears to have a similar cause to the one discussed in #342, namely incomplete processing of unification constraints by the SSReflect plugin code; thus the problem may still be present in the current version of the code. Here it was solved by changing the `eq_big_perm` legacy notation from\r\n```\r\nNotation eq_big_perm :=\r\n  ((fun P F r2 => @perm_big _ _ _ _ _ r2 P F) _ _) (only parsing).\r\n```\r\nto\r\n```\r\nNotation eq_big_perm :=\r\n  ((fun R idx op I r1 P F r2 => @perm_big R idx op r1 r2 P F)\r\n           _    _   _   _  _ _ _) (only parsing).\r\n```\r\nwhich are nearly identical: the one difference is that the evars for the holes inside the `fun ... => ...` expression in the first version have additional `(P := nil)` and `(F := nil)` in their context, and\r\nperhaps this causes the unification algorithm to delay some constraints.\r\n"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "ggonthier",
        "committer": "ggonthier",
        "hash": "5d7bd2ea2a0a28fb275da8ba2e2c0dc5a33d1034",
        "message": "refactor `seq` permutation theory\n\n- Change the naming of permutation lemmas so they conform to a\nconsistent policy: `perm_eq` lemmas have a `perm_` (_not_ `perm_eq`)\nprefix, or sometimes a `_perm` suffix for lemmas that _prove_ `perm_eq`\nusing a property when there is also a lemma _using_ `perm_eq` for the\nsame property. Lemmas that do not concern `perm_eq` do _not_ have\n`perm` in their name.\n- Change the definition of `permutations` for a time- and space-\nback-to-front generation algorithm.\n- Add frequency tally operations `tally`, `incr_tally`, `wf_tally` and\n`tally_seq`, used by the improved `permutation` algorithm.\n- add deprecated aliases for renamed lemmas",
        "date": "2019-05-17T07:04:50Z"
      }
    ]
  },
  {
    "author": "soraros",
    "number": 344,
    "diff_summary": [
      {
        "file": "mathcomp/algebra/mxalgebra.v",
        "status": "M",
        "additions": 28,
        "deletions": 25
      },
      {
        "file": "mathcomp/algebra/ssrint.v",
        "status": "M",
        "additions": 28,
        "deletions": 25
      },
      {
        "file": "mathcomp/ssreflect/binomial.v",
        "status": "M",
        "additions": 28,
        "deletions": 25
      },
      {
        "file": "mathcomp/ssreflect/div.v",
        "status": "M",
        "additions": 28,
        "deletions": 25
      },
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 28,
        "deletions": 25
      },
      {
        "file": "mathcomp/ssreflect/ssrnat.v",
        "status": "M",
        "additions": 28,
        "deletions": 25
      }
    ],
    "state": "merged",
    "open_date": "2019-05-06T19:01:13Z",
    "update_date": "2019-05-08T07:38:03Z",
    "discussion": [
      {
        "author": "soraros",
        "date": "2019-05-06T20:22:46Z",
        "comment": "> By \"check\" I just meant trying to see how much of rest of the library compiles with your Remove Hints command, but we can leave that experiment for another PR.\r\n\r\n@ggonthier this is easier than I thought"
      },
      {
        "author": "soraros",
        "date": "2019-05-08T08:17:26Z",
        "comment": "@ggonthier Thank you for your guidance!"
      },
      {
        "author": "RalfJung",
        "date": "2019-08-01T12:00:47Z",
        "comment": "This affects all proofs using `auto`/`eauto` as well in any development where ssreflect is (transitively) imported, right? So, e.g. anything using Iris now will also not have these hints in the `core` database any more?\r\n\r\nOr does this only affect developments using the parts of ssreflect that are not shipped with Coq?\r\n\r\nIt would be good if such global side-effects of ssreflect could at least be documented, similar to [what std++ does](https://gitlab.mpi-sws.org/iris/stdpp/#side-effects)."
      }
    ],
    "review_discussion": [
      {
        "author": "soraros",
        "file": "mathcomp/ssreflect/ssrnat.v",
        "date": "2019-05-06T20:24:32Z",
        "comment": "I add this lemma so the proof script for `nat_of_mul_bin` is similar to `nat_of_add_bin`"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/ssreflect/ssreflect.v",
        "date": "2019-05-07T12:09:44Z",
        "comment": "Please put this in `ssrnat.v` rather than `ssreflect.v`. The latter is meant to be a proxy for `Coq/plugins/ssr/ssreflect`, so apart from the `Require Import` it should only contain parameter settings and local advance copies of upcoming features (as we angle for backward compatibility with 2 prior versions of Coq). An conceivably some MathComp users might choose not to use `ssrnat` (e.g., to make it easier to use some of the not-so-parametrisable arithmetic automation), and those would expect to have these hints available."
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/ssreflect/ssrnat.v",
        "date": "2019-05-07T12:15:37Z",
        "comment": "Perhaps `rewrite addnC; elim: n => //= n ->` or `rewrite addnC; apply/eqP; elim: n` would be more elegant."
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/ssreflect/ssrnat.v",
        "date": "2019-05-07T12:25:37Z",
        "comment": "Well, `nat_of_addn_gt0` was not meant as a user-facing lemma, and was only there to factor a subproof common to `nat_of_add_bin` and `nat_of_add_mul`; Coq lacked the facilities (`Local Lemma`) to express that at the time this was written.\r\n  I'm fine with switching to export `nat_of_[succ|addn|muln]_gt0`, but they need better names.\r\n`nat_of_[succ|add|mul]_pos` seems the obvious choice."
      },
      {
        "author": "soraros",
        "file": "mathcomp/ssreflect/ssreflect.v",
        "date": "2019-05-07T13:24:21Z",
        "comment": "This is never meant to stay at merge time. I just add it here to make sure(during CI) the we are really clean from arith lemmas.\r\nNow moved."
      },
      {
        "author": "soraros",
        "file": "mathcomp/ssreflect/ssrnat.v",
        "date": "2019-05-07T13:43:34Z",
        "comment": "Wow!"
      },
      {
        "author": "soraros",
        "file": "mathcomp/ssreflect/ssrnat.v",
        "date": "2019-05-07T13:45:02Z",
        "comment": "Not so sure where to place this line in ssrnat."
      },
      {
        "author": "soraros",
        "file": "mathcomp/ssreflect/ssrnat.v",
        "date": "2019-05-07T13:49:37Z",
        "comment": "Changed to `nat_of_[succ|add|mul]_pos`."
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/ssreflect/ssrnat.v",
        "date": "2019-05-07T13:59:06Z",
        "comment": "The top of the file seems as good a place as any. Do separate this from the boilerplate flags with at least an empty line, and preferably a short rationale comment such as \"Disable Coq prelude hints to improve proof script robustness.\""
      },
      {
        "author": "soraros",
        "file": "mathcomp/ssreflect/ssrnat.v",
        "date": "2019-05-07T15:09:26Z",
        "comment": "@ggonthier, Is this what you mean?"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/ssreflect/ssrnat.v",
        "date": "2019-05-07T15:31:28Z",
        "comment": "Yes, that's perfect."
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "soraros",
        "committer": "soraros",
        "hash": "6c4382c69e72b81fb7e81b0b753e5d3c83b1064a",
        "message": "suppress use of `Arith` hints",
        "date": "2019-05-07T21:37:41Z"
      }
    ]
  },
  {
    "author": "soraros",
    "number": 343,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/ssrnat.v",
        "status": "M",
        "additions": 1,
        "deletions": 1
      }
    ],
    "state": "closed",
    "open_date": "2019-05-05T18:49:59Z",
    "update_date": "2019-05-06T18:58:51Z",
    "discussion": [
      {
        "author": "ggonthier",
        "date": "2019-05-06T07:17:18Z",
        "comment": "Good catch! The `finmap-dev` failure is actually a `finmap` bug, now corrected by math-comp/finmap#38; unfortunately GitLab doesn't let you rerun checks manually.\r\nIdeally, we also should try to remove the `plus_n_Sm` hint, to see if it's being accidentally used elsewhere."
      },
      {
        "author": "soraros",
        "date": "2019-05-06T08:08:56Z",
        "comment": "It is used elsewhere. \r\nI removed the hints by adding the following line to ssrnat (these are the ones in `core` that I think maybe troublesome, others are just definition unfolding and things)\r\n```coq\r\nRemove Hints\r\n       n_Sn O_S\r\n       not_eq_S not_eq_sym\r\n       plus_n_O plus_n_Sm\r\n       mult_n_O mult_n_Sm\r\n       eq_add_S\r\n       f_equal_nat f_equal2_mult\r\n  : core.\r\n```\r\nhere are other dependences I found in `ssrnat`(they are picked up by `by ...`, so maybe we need to re-add some of their ssr counterparts):\r\n\r\n- `iter_succn` -> `plus_n_O`, `plus_n_Sm`\r\n- `nat_of_add_bin` -> `plus_n_O`\r\n- `nat_of_mul_bin` -> `mult_n_O`\r\n\r\nAlso, this might be useful:\r\n```coq\r\nCheck n_Sn : forall n : nat, n <> S n.\r\nCheck O_S : forall n : nat, 0 <> S n.\r\n\r\nCheck not_eq_S : forall n m : nat, n <> m -> S n <> S m.\r\nCheck not_eq_sym : forall (A : Type) (x y : A), x <> y -> y <> x.\r\n\r\nCheck plus_n_O : forall n : nat, n = n + 0.\r\nCheck plus_n_Sm : forall n m : nat, S (n + m) = n + S m.\r\nCheck mult_n_Sm : forall n m : nat, n * m + n = n * S m.\r\nCheck mult_n_O : forall n : nat, 0 = n * 0.\r\n\r\nCheck eq_add_S : forall n m : nat, S n = S m -> n = m.\r\nCheck f_equal_nat : forall (B : Type) (f : nat -> B) (x y : nat), x = y -> f x = f y.\r\nCheck f_equal2_mult : forall x1 y1 x2 y2 : nat, x1 = y1 -> x2 = y2 -> x1 * x2 = y1 * y2.\r\n```"
      },
      {
        "author": "soraros",
        "date": "2019-05-06T08:12:38Z",
        "comment": "The output of `Print HintDb core.`\r\n```\r\nNon-discriminated database\r\nUnfoldable variable definitions: none\r\nUnfoldable constant definitions: none\r\nCut: emp\r\nFor any goal ->   \r\nFor CompSpec ->   unfold CompSpec(level 4, id 0) \r\nFor CompSpecT ->   unfold CompSpecT(level 4, id 0) \r\nFor ge ->   unfold ge(level 4, id 0) \r\nFor gt ->   unfold gt(level 4, id 0) \r\nFor lt ->   unfold lt(level 4, id 0) \r\nFor not ->   simple apply n_Sn(level 0, pattern ?META105 <> S ?META105, id 0)\r\n             simple apply O_S(level 0, pattern 0 <> S ?META103, id 0)\r\n             simple apply not_eq_S(level 1, pattern S ?META97 <> S ?META98, id 0)\r\n             simple apply not_eq_sym ; trivial(level 1, pattern \r\n             ?META51 <> ?META50 :> ?META49, id 0) unfold not(level 4, id 0) \r\nFor notT ->   simple apply not_identity_sym ; trivial(level 1, pattern \r\n              notT (identity ?META87 ?META86), id 0) \r\nFor BoolSpec ->   simple apply BoolSpecF(level 1, pattern \r\n                  BoolSpec ?META48 ?META49 false, id 0)\r\n                  simple apply BoolSpecT(level 1, pattern \r\n                  BoolSpec ?META45 ?META46 true, id 0) \r\nFor CompareSpec ->   simple apply CompGt(level 1, pattern \r\n                     CompareSpec ?META85 ?META86 ?META87 Gt, id 0)\r\n                     simple apply CompLt(level 1, pattern \r\n                     CompareSpec ?META81 ?META82 ?META83 Lt, id 0)\r\n                     simple apply CompEq(level 1, pattern \r\n                     CompareSpec ?META77 ?META78 ?META79 Eq, id 0) \r\nFor CompareSpecT ->   simple apply CompGtT(level 1, pattern \r\n                      CompareSpecT ?META109 ?META110 ?META111 Gt, id 0)\r\n                      simple apply CompLtT(level 1, pattern \r\n                      CompareSpecT ?META105 ?META106 ?META107 Lt, id 0)\r\n                      simple apply CompEqT(level 1, pattern \r\n                      CompareSpecT ?META101 ?META102 ?META103 Eq, id 0) \r\nFor True ->   exact I(level 0, pattern True, id 0) \r\nFor and ->   simple apply conj(level 2, pattern ?META1 /\\ ?META2, id 0) \r\nFor eq ->   simple apply mult_n_Sm(level 0, pattern ?META147 * ?META148 + ?META147 =\r\n                                                    ?META147 * S ?META148, id 0)\r\n            simple apply mult_n_O(level 0, pattern 0 = ?META145 * 0, id 0)\r\n            simple apply plus_n_Sm(level 0, pattern S (?META129 + ?META130) =\r\n                                                    ?META129 + S ?META130, id 0)\r\n            simple apply @eq_refl(level 0, pattern ?META125 = ?META125 :> ?META124, id 0)\r\n            simple apply plus_n_O(level 0, pattern ?META123 = ?META123 + 0, id 0)\r\n            simple apply eq_add_S ; trivial(level 1, pattern \r\n            ?META91 = ?META92, id 0)\r\n            simple apply f_equal_nat(level 1, pattern ?META82 ?META83 =\r\n                                                      ?META82 ?META84 :> \r\n                                                      ?META81, id 0)\r\n            simple apply eq_sym ; trivial(level 1, pattern \r\n            ?META47 = ?META46 :> ?META45, id 0)\r\n            simple apply f_equal2_mult(level 2, pattern ?META133 * ?META135 =\r\n                                                        ?META134 * ?META136, id 0)\r\n            simple apply f_equal2_nat(level 2, pattern ?META108 ?META109 ?META111 =\r\n                                                       ?META108 ?META110 ?META112 :>\r\n                                                       ?META107, id 0) \r\nFor ex ->   simple eapply ex_intro(level 2, pattern ex ?META26, id 0) \r\nFor ex2 ->   simple eapply ex_intro2(level 3, pattern exists2 x : \r\n                                                      ?META29, \r\n                                                      ?META30 x & ?META31 x, id 0) \r\nFor identity ->   simple apply identity_refl(level 0, pattern \r\n                  identity ?META126 ?META126, id 0)\r\n                  simple apply identity_sym ; trivial(level 1, pattern \r\n                  identity ?META83 ?META82, id 0) \r\nFor inhabited ->   simple apply inhabits(level 1, pattern inhabited ?META61, id 0) \r\nFor le ->   simple apply le_n(level 0, pattern ?META151 <= ?META151, id 0)\r\n            simple apply le_S(level 1, pattern ?META152 <= S ?META153, id 0) \r\nFor or ->   simple apply or_intror(level 1, pattern ?META8 \\/ ?META9, id 0)\r\n            simple apply or_introl(level 1, pattern ?META5 \\/ ?META6, id 0) \r\nFor prod ->   simple apply @pair(level 2, pattern (?META57 * ?META58)%type, id 0) \r\nFor sig ->   simple eapply exist(level 2, pattern {x : ?META105 | ?META106 x}, id 0) \r\nFor sig2 ->   simple eapply exist2(level 3, pattern {x : ?META109 | \r\n                                                    ?META110 x & \r\n                                                    ?META111 x}, id 0) \r\nFor sigT ->   simple eapply existT(level 2, pattern {x : ?META115 & ?META116 x}, id 0) \r\nFor sigT2 ->   simple eapply existT2(level 3, pattern {x : \r\n                                                      ?META119 & \r\n                                                      ?META120 x & \r\n                                                      ?META121 x}, id 0) \r\nFor sum ->   simple apply @inr(level 1, pattern (?META64 + ?META65)%type, id 0)\r\n             simple apply @inl(level 1, pattern (?META61 + ?META62)%type, id 0) \r\nFor sumbool ->   simple apply @right(level 1, pattern {?META84} + {?META85}, id 0)\r\n                 simple apply @left(level 1, pattern {?META81} + {?META82}, id 0) \r\nFor sumor ->   simple apply @inright(level 1, pattern ?META90 + {?META91}, id 0)\r\n               simple apply @inleft(level 1, pattern ?META87 + {?META88}, id 0) \r\n```"
      },
      {
        "author": "ggonthier",
        "date": "2019-05-06T14:55:46Z",
        "comment": "@soraros, thanks for taking a closer look; the only hints we should be concerned with are `plus_n_0`, `plus_n_Sm`, `mult_n_0` and `mult_n_Sm`. The others are irrelevant to `by ...` because they are either at level > 0 and thus not used by `trivial`, and/or otherwise covered by the default `done` (for example, via `discriminate` or `split`).\r\n  We should certainly get rid of them within `ssrnat.v`, and it would be useful to check whether we can do so for the rest of MathComp, or if we should add some of `addn0`, `addnS`, `muln0` and `mulnS` to replace them, perhaps as `Extern` hints that warn against their use."
      },
      {
        "author": "soraros",
        "date": "2019-05-06T15:40:57Z",
        "comment": "@ggonthier, thank you for clarifying. However, I'm quite new to ssr and coq so I'm afraid I'm incompetent to do any of the things you suggested properly.\r\nSo, shall I close this PR?"
      },
      {
        "author": "ggonthier",
        "date": "2019-05-06T16:23:37Z",
        "comment": "@soraros, I'm fine with you just completing this PR by removing all other uses of `Arith` lemmas from `ssrnat`. By \"check\" I just meant trying to see how much of rest of the library compiles with your `Remove Hints` command, but we can leave that experiment for another PR."
      },
      {
        "author": "soraros",
        "date": "2019-05-06T19:08:37Z",
        "comment": "Sorry, I accidentally close the PR (changed the branch name and the pr got closed).\r\nAnyway, I created a new one at [#344](https://github.com/math-comp/math-comp/pull/344)."
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "soraros",
        "committer": "web-flow",
        "hash": "eb35517485ddb5371f42b4853561a2cc1c6fde44",
        "message": "remove addnS's dependence on plus_n_Sm",
        "date": "2019-05-05T18:49:43Z"
      }
    ]
  },
  {
    "author": "ggonthier",
    "number": 342,
    "diff_summary": [
      {
        "file": ".gitlab-ci.yml",
        "status": "M",
        "additions": 113,
        "deletions": 15
      },
      {
        "file": "CHANGELOG.md",
        "status": "M",
        "additions": 113,
        "deletions": 15
      },
      {
        "file": "mathcomp/character/classfun.v",
        "status": "M",
        "additions": 113,
        "deletions": 15
      },
      {
        "file": "mathcomp/field/galois.v",
        "status": "M",
        "additions": 113,
        "deletions": 15
      },
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 113,
        "deletions": 15
      },
      {
        "file": "mathcomp/ssreflect/ssrbool.v",
        "status": "M",
        "additions": 113,
        "deletions": 15
      },
      {
        "file": "mathcomp/ssreflect/ssreflect.v",
        "status": "M",
        "additions": 113,
        "deletions": 15
      },
      {
        "file": "mathcomp/ssreflect/ssrnotations.v",
        "status": "M",
        "additions": 113,
        "deletions": 15
      }
    ],
    "state": "merged",
    "open_date": "2019-05-05T16:33:14Z",
    "update_date": "2019-05-06T16:04:48Z",
    "discussion": [
      {
        "author": "ggonthier",
        "date": "2019-05-06T07:23:52Z",
        "comment": "@gares: will try, but as this is a Coq < 8.9 only error it may be a diminishing return effort. I suspect it has to do with the ssr view abstraction code not purging delayed unification constraints before reabstracting evars, and Coq delaying the `return` predicate constraints for all `match`es in those old versions. It'll take me a while to check, as I'm not set up right now to debug with Coq 8.7.\r\n"
      },
      {
        "author": "gares",
        "date": "2019-05-06T07:41:18Z",
        "comment": "Oh, btw the code dealing with views was mostly rewritten in the new tactic monad in 8.9 to support the new intro patterns including the tactic one, so it may be the case that it changed behavior in a subtle way. If you say the new behavior is better or even just ok, then It may not be worth spending much time on it (8.10beta is to be released this week)."
      },
      {
        "author": "ggonthier",
        "date": "2019-05-06T13:31:15Z",
        "comment": "Ok, @gares, I somewhat tracked down the issue. It is specific to coq v8.7, so on the one hand it could go away as we drop 8.7 support. On the other hand, it's _not_ something that was fixed by the SSReflect view code refactoring as that was only in 8.9, and the characteristics of the issue are fairly alarming, so it might still be worth looking into, to make sure the root cause has indeed been fixed.\r\n```\r\nRequire Import ssreflect.\r\nLemma foo U (l1 l2 : list U) : l1 = nil -> (l1 = nil -> l2 = nil) -> True. Proof. split. Qed.\r\nLemma bar T (t S : list T) : (t = nil -> S = nil) -> True.\r\nmove/(fun s1_0 ss21 => foo _ _ _ s1_0 ss21).\r\n```\r\ngenerates\r\n```\r\nError:\r\nLtac call to \"move (ssrmovearg) (ssrclauses)\" failed.\r\nIllegal application: \r\nThe term\r\n \"fun (s1_0 : t = nil) (ss21 : t = nil -> l = nil) => foo T t l s1_0 ss21\"\r\nof type \"t = nil -> (t = nil -> l = nil) -> True\"\r\ncannot be applied to the terms\r\n \"e\" : \"t = nil\"\r\n \"_top_assumption_\" : \"t = nil -> S = nil\"\r\nThe 2nd term has type \"t = nil -> S = nil\" which should be coercible to\r\n \"t = nil -> l = nil\".\r\n```\r\nThe most alarming is that this bug is _name-sensitive_; the error does not occur unless the name of the third parameter of `bar` _starts with an_ `S` !!! Also, replacing the abstract `T` with any fixed type makes the issue disappear. I'm quite at a loss as to what might cause such mischief.\r\nI've not raised an issue Coq-side because of this being tied to both an old Coq version and to an SSReflect feature, but you may want to do so if the bug turns out to be on the Coq side."
      },
      {
        "author": "ggonthier",
        "date": "2019-05-06T15:49:51Z",
        "comment": "Unless someone objects, I'll merge this as soon as CI completes, as this PR is holding up a more substantial revision of the `perm_eq` lemmas. It was split off to allow reusing the (misnamed, and little used) `perm_uniq` lemma name without requiring an overlay for `fourcolor`: the plan is to first deprecate (here) the old `perm_uniq`, then update `fourcolor`, submit the main `perm_eq` PR, and finally update all clients to the new lemma names."
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "ggonthier",
        "committer": "ggonthier",
        "hash": "b59653a5b377f91a21e8036bf0b5d98a35fc4963",
        "message": "add `deprecate` helper notation; no `perm` in non-`perm_eq` lemma names\n\n- add notation support for lemma renaming PRs, helping clients adjust\nto the name change by emitting warning or raising errors when the old\nname is used. The default is to emit warnings, but clients can change\nthis to silence (if electing to delay migration) or errors (to help\nwith actual migration). Usage:\n  Notation old_id := (deprecate old_id new_id) (only parsing).\n—> Caveat 1: only prenex maximal implicit of `new_id` are preserved, so,\nas `Notation` does not support on-demand implicits, the latter should\nbe added explicitly as in `(deprecate old new _ _)`.\n—> Caveat 2: the warnings are emitted by a tactic-in-term, which\nis interpreted during type elaboration. As the SSReflect elaborator may\nre-infer type in arguments multiple times (notably, views and arguments\nto `apply` and `rewrite`), clients may see duplicate warnings.\n- use the `deprecate` facility to introduce the first part of the\nrefactoring of `seq` permutation lemmas : only lemmas concerning\n`perm_eq` should have `perm` as a component of their name.\n- document local additions in `ssreflect.v` and `ssrbool.v`\n- add 8.8 `odd-order` regression\n- the explicit beta-redex idiom use in the `perm_uniq` and\n`leq_min_perm` aliases avoids a strange name-sensitive bug of view\ninterpretation in Coq 8.7.",
        "date": "2019-05-06T14:16:24Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 341,
    "diff_summary": [],
    "state": "merged",
    "open_date": "2019-05-02T15:34:41Z",
    "update_date": "2019-05-15T09:44:42Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": []
  },
  {
    "author": "pi8027",
    "number": 340,
    "diff_summary": [
      {
        "file": ".gitignore",
        "status": "D",
        "additions": 273,
        "deletions": 1724
      },
      {
        "file": "etc/utils/hierarchy-diagram",
        "status": "D",
        "additions": 273,
        "deletions": 1724
      },
      {
        "file": "etc/utils/hierarchy.ml",
        "status": "D",
        "additions": 273,
        "deletions": 1724
      },
      {
        "file": "etc/utils/hierarchy_test.py",
        "status": "D",
        "additions": 273,
        "deletions": 1724
      },
      {
        "file": "mathcomp/Make",
        "status": "D",
        "additions": 273,
        "deletions": 1724
      },
      {
        "file": "mathcomp/Makefile.coq.local",
        "status": "D",
        "additions": 273,
        "deletions": 1724
      },
      {
        "file": "mathcomp/test_suite/hierarchy_test.v",
        "status": "D",
        "additions": 273,
        "deletions": 1724
      }
    ],
    "state": "merged",
    "open_date": "2019-04-30T13:26:41Z",
    "update_date": "2019-06-18T14:54:41Z",
    "discussion": [
      {
        "author": "pi8027",
        "date": "2019-04-30T13:38:04Z",
        "comment": "Hmm. I may need to remove `test_suite/hierarchy_test.v` from `Make` to generate `.coqdeps.d`..."
      },
      {
        "author": "CohenCyril",
        "date": "2019-05-02T10:24:46Z",
        "comment": "Hi, wouldn't it better/possible to use Coq API rather than `coqtop` + string processing to generate the graph?"
      },
      {
        "author": "pi8027",
        "date": "2019-05-02T19:09:38Z",
        "comment": "@CohenCyril Yes, I think so. I would have time to attempt it in June or July."
      },
      {
        "author": "CohenCyril",
        "date": "2019-05-06T10:37:57Z",
        "comment": "@gares do you think it is a good idea?"
      },
      {
        "author": "gares",
        "date": "2019-05-06T11:14:15Z",
        "comment": "Yes, it is doable but it is not so trivial. I see two options:\r\n- make a plugin defining a new command and then compiler a script that says\r\n  ```coq\r\n  Declare ML Module \"my_plugin\".\r\n  Require Import all.v.\r\n  MyCommand.\r\n  ```\r\n- build a new toplevel by linking coq (as a library). Initializing Coq is not trivial either (and you need to initialize it and require all .vo files). Something like serapi (we may even use it directly, but we may need to extend it with the queryes we want).\r\n\r\nSo for now I'd use this code and live with the text based interaction with Coq."
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "2d31a42aa3c2dacabc0cf005b45fc7bb4e6383e9",
        "message": "Reimplement the hierarchy related tools in OCaml\n\nThe functionalities of the structure hierarchy related tools `hierarchy-diagram`\nand `hierarchy_test.py` are provided by an OCaml script `hierarchy.ml`.\n`test_suite/hierarchy_test.v` is deleted. Now make can generate it.",
        "date": "2019-04-30T13:23:27Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "ff21700ded850be87349979e0cc6f7570223fc90",
        "message": "Ad-hoc fix",
        "date": "2019-04-30T16:39:51Z"
      }
    ]
  },
  {
    "author": "ggonthier",
    "number": 339,
    "diff_summary": [
      {
        "file": ".gitlab-ci.yml",
        "status": "M",
        "additions": 0,
        "deletions": 8
      }
    ],
    "state": "merged",
    "open_date": "2019-04-30T11:18:58Z",
    "update_date": "2019-04-30T12:40:32Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "ggonthier",
        "committer": "ggonthier",
        "hash": "ee28b40acc5517b1c19bf4e309e035bb491de9f2",
        "message": "Restore CI with `finmap master`\n\nFollowing merge of math-comp/finmap#36",
        "date": "2019-04-30T11:18:30Z"
      }
    ]
  },
  {
    "author": "ggonthier",
    "number": 338,
    "diff_summary": [
      {
        "file": ".gitlab-ci.yml",
        "status": "M",
        "additions": 10,
        "deletions": 1
      },
      {
        "file": "mathcomp/ssreflect/ssrfun.v",
        "status": "M",
        "additions": 10,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2019-04-29T21:21:17Z",
    "update_date": "2019-04-30T02:09:57Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: fix",
        "description": "PR that fixes a bug. Please refer to the appropriate issue(s) if relevant."
      }
    ],
    "commits": [
      {
        "author": "ggonthier",
        "committer": "ggonthier",
        "hash": "c30500ff4db56b6b3ad77dad811e3da766b26e19",
        "message": "Fix compatibility for #237\n\n- reprove rather than specialize `Some_inj` to allow for redefinition\nof `nonPropType` in `mathcomp.ssreflect.ssreflect`\n- retarget finmap CI to coq-9995-compatibility",
        "date": "2019-04-30T00:49:38Z"
      }
    ]
  },
  {
    "author": "ggonthier",
    "number": 337,
    "diff_summary": [
      {
        "file": "mathcomp/algebra/interval.v",
        "status": "M",
        "additions": 283,
        "deletions": 229
      },
      {
        "file": "mathcomp/algebra/poly.v",
        "status": "M",
        "additions": 283,
        "deletions": 229
      },
      {
        "file": "mathcomp/algebra/rat.v",
        "status": "M",
        "additions": 283,
        "deletions": 229
      },
      {
        "file": "mathcomp/algebra/ring_quotient.v",
        "status": "M",
        "additions": 283,
        "deletions": 229
      },
      {
        "file": "mathcomp/algebra/ssralg.v",
        "status": "M",
        "additions": 283,
        "deletions": 229
      },
      {
        "file": "mathcomp/algebra/ssrnum.v",
        "status": "M",
        "additions": 283,
        "deletions": 229
      },
      {
        "file": "mathcomp/algebra/vector.v",
        "status": "M",
        "additions": 283,
        "deletions": 229
      },
      {
        "file": "mathcomp/character/character.v",
        "status": "M",
        "additions": 283,
        "deletions": 229
      },
      {
        "file": "mathcomp/character/classfun.v",
        "status": "M",
        "additions": 283,
        "deletions": 229
      },
      {
        "file": "mathcomp/character/vcharacter.v",
        "status": "M",
        "additions": 283,
        "deletions": 229
      },
      {
        "file": "mathcomp/field/algC.v",
        "status": "M",
        "additions": 283,
        "deletions": 229
      },
      {
        "file": "mathcomp/field/algnum.v",
        "status": "M",
        "additions": 283,
        "deletions": 229
      },
      {
        "file": "mathcomp/fingroup/fingroup.v",
        "status": "M",
        "additions": 283,
        "deletions": 229
      },
      {
        "file": "mathcomp/solvable/gfunctor.v",
        "status": "M",
        "additions": 283,
        "deletions": 229
      },
      {
        "file": "mathcomp/ssreflect/finfun.v",
        "status": "M",
        "additions": 283,
        "deletions": 229
      },
      {
        "file": "mathcomp/ssreflect/fingraph.v",
        "status": "M",
        "additions": 283,
        "deletions": 229
      },
      {
        "file": "mathcomp/ssreflect/finset.v",
        "status": "M",
        "additions": 283,
        "deletions": 229
      },
      {
        "file": "mathcomp/ssreflect/fintype.v",
        "status": "M",
        "additions": 283,
        "deletions": 229
      },
      {
        "file": "mathcomp/ssreflect/prime.v",
        "status": "M",
        "additions": 283,
        "deletions": 229
      },
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 283,
        "deletions": 229
      },
      {
        "file": "mathcomp/ssreflect/ssrbool.v",
        "status": "M",
        "additions": 283,
        "deletions": 229
      },
      {
        "file": "mathcomp/ssreflect/ssreflect.v",
        "status": "M",
        "additions": 283,
        "deletions": 229
      },
      {
        "file": "mathcomp/ssreflect/ssrfun.v",
        "status": "M",
        "additions": 283,
        "deletions": 229
      },
      {
        "file": "mathcomp/ssreflect/ssrnat.v",
        "status": "M",
        "additions": 283,
        "deletions": 229
      },
      {
        "file": "mathcomp/ssreflect/tuple.v",
        "status": "M",
        "additions": 283,
        "deletions": 229
      }
    ],
    "state": "merged",
    "open_date": "2019-04-28T22:52:22Z",
    "update_date": "2019-04-29T15:59:15Z",
    "discussion": [
      {
        "author": "ggonthier",
        "date": "2019-04-29T15:27:28Z",
        "comment": "@CohenCyril : failure of `finmap` seem to be due to the latter inlining the low-level representation of `predType` to construct a series of undocumented sub- packed classes, and directly using the low-level `predType` constructor. This is incompatible with coq/coq#9995, which changes that representation. I'm going to submit a patch for `finmap`, but in the meantime, unless you object, I'm going to forge ahead and merge this PR, as it it holding up the final commit in coq/coq#9995."
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "ggonthier",
        "committer": "ggonthier",
        "hash": "6be8fd5c67949a59bde7083e81401263986e7a4e",
        "message": "Generalise use of `{pred T}` from coq/coq#9995\n\nUse `{pred T}` systematically for generic _collective_ boolean\npredicate.\nUse `PredType` to construct `predType` instances.\nInstrument core `ssreflect` files to replicate these and other new\nfeatures introduces by coq/coq#9555 (`nonPropType` interface,\n`simpl_rel` that simplifies with `inE`).",
        "date": "2019-04-28T22:26:36Z"
      },
      {
        "author": "ggonthier",
        "committer": "ggonthier",
        "hash": "dae54440f08364552e1a82ac7984f35d1864f1e5",
        "message": "reinstate token catenation hack in `prime.v`\n\nAppears to be needed fo v8.7 compatibility, to avert some bug in early\n`only printing` implementation whose fix was not back ported.",
        "date": "2019-04-29T15:51:05Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 336,
    "diff_summary": [
      {
        "file": "mathcomp/algebra/countalg.v",
        "status": "M",
        "additions": 288,
        "deletions": 529
      },
      {
        "file": "mathcomp/algebra/finalg.v",
        "status": "M",
        "additions": 288,
        "deletions": 529
      },
      {
        "file": "mathcomp/algebra/fraction.v",
        "status": "M",
        "additions": 288,
        "deletions": 529
      },
      {
        "file": "mathcomp/algebra/intdiv.v",
        "status": "M",
        "additions": 288,
        "deletions": 529
      },
      {
        "file": "mathcomp/algebra/interval.v",
        "status": "M",
        "additions": 288,
        "deletions": 529
      },
      {
        "file": "mathcomp/algebra/matrix.v",
        "status": "M",
        "additions": 288,
        "deletions": 529
      },
      {
        "file": "mathcomp/algebra/mxalgebra.v",
        "status": "M",
        "additions": 288,
        "deletions": 529
      },
      {
        "file": "mathcomp/algebra/mxpoly.v",
        "status": "M",
        "additions": 288,
        "deletions": 529
      },
      {
        "file": "mathcomp/algebra/poly.v",
        "status": "M",
        "additions": 288,
        "deletions": 529
      },
      {
        "file": "mathcomp/algebra/polyXY.v",
        "status": "M",
        "additions": 288,
        "deletions": 529
      },
      {
        "file": "mathcomp/algebra/polydiv.v",
        "status": "M",
        "additions": 288,
        "deletions": 529
      },
      {
        "file": "mathcomp/algebra/rat.v",
        "status": "M",
        "additions": 288,
        "deletions": 529
      },
      {
        "file": "mathcomp/algebra/ring_quotient.v",
        "status": "M",
        "additions": 288,
        "deletions": 529
      },
      {
        "file": "mathcomp/algebra/ssralg.v",
        "status": "M",
        "additions": 288,
        "deletions": 529
      },
      {
        "file": "mathcomp/algebra/ssrint.v",
        "status": "M",
        "additions": 288,
        "deletions": 529
      },
      {
        "file": "mathcomp/algebra/ssrnum.v",
        "status": "M",
        "additions": 288,
        "deletions": 529
      },
      {
        "file": "mathcomp/algebra/vector.v",
        "status": "M",
        "additions": 288,
        "deletions": 529
      },
      {
        "file": "mathcomp/algebra/zmodp.v",
        "status": "M",
        "additions": 288,
        "deletions": 529
      },
      {
        "file": "mathcomp/character/character.v",
        "status": "M",
        "additions": 288,
        "deletions": 529
      },
      {
        "file": "mathcomp/character/classfun.v",
        "status": "M",
        "additions": 288,
        "deletions": 529
      },
      {
        "file": "mathcomp/character/inertia.v",
        "status": "M",
        "additions": 288,
        "deletions": 529
      },
      {
        "file": "mathcomp/character/integral_char.v",
        "status": "M",
        "additions": 288,
        "deletions": 529
      },
      {
        "file": "mathcomp/character/mxabelem.v",
        "status": "M",
        "additions": 288,
        "deletions": 529
      },
      {
        "file": "mathcomp/character/mxrepresentation.v",
        "status": "M",
        "additions": 288,
        "deletions": 529
      },
      {
        "file": "mathcomp/character/vcharacter.v",
        "status": "M",
        "additions": 288,
        "deletions": 529
      },
      {
        "file": "mathcomp/field/algC.v",
        "status": "M",
        "additions": 288,
        "deletions": 529
      },
      {
        "file": "mathcomp/field/algebraics_fundamentals.v",
        "status": "M",
        "additions": 288,
        "deletions": 529
      },
      {
        "file": "mathcomp/field/algnum.v",
        "status": "M",
        "additions": 288,
        "deletions": 529
      },
      {
        "file": "mathcomp/field/closed_field.v",
        "status": "M",
        "additions": 288,
        "deletions": 529
      },
      {
        "file": "mathcomp/field/cyclotomic.v",
        "status": "M",
        "additions": 288,
        "deletions": 529
      },
      {
        "file": "mathcomp/field/falgebra.v",
        "status": "M",
        "additions": 288,
        "deletions": 529
      },
      {
        "file": "mathcomp/field/fieldext.v",
        "status": "M",
        "additions": 288,
        "deletions": 529
      },
      {
        "file": "mathcomp/field/finfield.v",
        "status": "M",
        "additions": 288,
        "deletions": 529
      },
      {
        "file": "mathcomp/field/galois.v",
        "status": "M",
        "additions": 288,
        "deletions": 529
      },
      {
        "file": "mathcomp/field/separable.v",
        "status": "M",
        "additions": 288,
        "deletions": 529
      },
      {
        "file": "mathcomp/fingroup/action.v",
        "status": "M",
        "additions": 288,
        "deletions": 529
      },
      {
        "file": "mathcomp/fingroup/automorphism.v",
        "status": "M",
        "additions": 288,
        "deletions": 529
      },
      {
        "file": "mathcomp/fingroup/fingroup.v",
        "status": "M",
        "additions": 288,
        "deletions": 529
      },
      {
        "file": "mathcomp/fingroup/gproduct.v",
        "status": "M",
        "additions": 288,
        "deletions": 529
      },
      {
        "file": "mathcomp/fingroup/morphism.v",
        "status": "M",
        "additions": 288,
        "deletions": 529
      },
      {
        "file": "mathcomp/fingroup/perm.v",
        "status": "M",
        "additions": 288,
        "deletions": 529
      },
      {
        "file": "mathcomp/fingroup/presentation.v",
        "status": "M",
        "additions": 288,
        "deletions": 529
      },
      {
        "file": "mathcomp/fingroup/quotient.v",
        "status": "M",
        "additions": 288,
        "deletions": 529
      },
      {
        "file": "mathcomp/solvable/abelian.v",
        "status": "M",
        "additions": 288,
        "deletions": 529
      },
      {
        "file": "mathcomp/solvable/alt.v",
        "status": "M",
        "additions": 288,
        "deletions": 529
      },
      {
        "file": "mathcomp/solvable/burnside_app.v",
        "status": "M",
        "additions": 288,
        "deletions": 529
      },
      {
        "file": "mathcomp/solvable/center.v",
        "status": "M",
        "additions": 288,
        "deletions": 529
      },
      {
        "file": "mathcomp/solvable/commutator.v",
        "status": "M",
        "additions": 288,
        "deletions": 529
      },
      {
        "file": "mathcomp/solvable/cyclic.v",
        "status": "M",
        "additions": 288,
        "deletions": 529
      },
      {
        "file": "mathcomp/solvable/extraspecial.v",
        "status": "M",
        "additions": 288,
        "deletions": 529
      },
      {
        "file": "mathcomp/solvable/extremal.v",
        "status": "M",
        "additions": 288,
        "deletions": 529
      },
      {
        "file": "mathcomp/solvable/finmodule.v",
        "status": "M",
        "additions": 288,
        "deletions": 529
      },
      {
        "file": "mathcomp/solvable/frobenius.v",
        "status": "M",
        "additions": 288,
        "deletions": 529
      },
      {
        "file": "mathcomp/solvable/gfunctor.v",
        "status": "M",
        "additions": 288,
        "deletions": 529
      },
      {
        "file": "mathcomp/solvable/gseries.v",
        "status": "M",
        "additions": 288,
        "deletions": 529
      },
      {
        "file": "mathcomp/solvable/hall.v",
        "status": "M",
        "additions": 288,
        "deletions": 529
      },
      {
        "file": "mathcomp/solvable/jordanholder.v",
        "status": "M",
        "additions": 288,
        "deletions": 529
      },
      {
        "file": "mathcomp/solvable/maximal.v",
        "status": "M",
        "additions": 288,
        "deletions": 529
      },
      {
        "file": "mathcomp/solvable/nilpotent.v",
        "status": "M",
        "additions": 288,
        "deletions": 529
      },
      {
        "file": "mathcomp/solvable/pgroup.v",
        "status": "M",
        "additions": 288,
        "deletions": 529
      },
      {
        "file": "mathcomp/solvable/primitive_action.v",
        "status": "M",
        "additions": 288,
        "deletions": 529
      },
      {
        "file": "mathcomp/solvable/sylow.v",
        "status": "M",
        "additions": 288,
        "deletions": 529
      },
      {
        "file": "mathcomp/ssreflect/bigop.v",
        "status": "M",
        "additions": 288,
        "deletions": 529
      },
      {
        "file": "mathcomp/ssreflect/binomial.v",
        "status": "M",
        "additions": 288,
        "deletions": 529
      },
      {
        "file": "mathcomp/ssreflect/choice.v",
        "status": "M",
        "additions": 288,
        "deletions": 529
      },
      {
        "file": "mathcomp/ssreflect/div.v",
        "status": "M",
        "additions": 288,
        "deletions": 529
      },
      {
        "file": "mathcomp/ssreflect/eqtype.v",
        "status": "M",
        "additions": 288,
        "deletions": 529
      },
      {
        "file": "mathcomp/ssreflect/finfun.v",
        "status": "M",
        "additions": 288,
        "deletions": 529
      },
      {
        "file": "mathcomp/ssreflect/fingraph.v",
        "status": "M",
        "additions": 288,
        "deletions": 529
      },
      {
        "file": "mathcomp/ssreflect/finset.v",
        "status": "M",
        "additions": 288,
        "deletions": 529
      },
      {
        "file": "mathcomp/ssreflect/fintype.v",
        "status": "M",
        "additions": 288,
        "deletions": 529
      },
      {
        "file": "mathcomp/ssreflect/generic_quotient.v",
        "status": "M",
        "additions": 288,
        "deletions": 529
      },
      {
        "file": "mathcomp/ssreflect/path.v",
        "status": "M",
        "additions": 288,
        "deletions": 529
      },
      {
        "file": "mathcomp/ssreflect/prime.v",
        "status": "M",
        "additions": 288,
        "deletions": 529
      },
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 288,
        "deletions": 529
      },
      {
        "file": "mathcomp/ssreflect/ssrnat.v",
        "status": "M",
        "additions": 288,
        "deletions": 529
      },
      {
        "file": "mathcomp/ssreflect/tuple.v",
        "status": "M",
        "additions": 288,
        "deletions": 529
      }
    ],
    "state": "merged",
    "open_date": "2019-04-26T12:19:17Z",
    "update_date": "2019-04-28T09:31:12Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "22c182b681c2852afa13efc2bc1d6d083646f061",
        "message": "Cleaning Require and Require Imports",
        "date": "2019-04-26T13:08:48Z"
      }
    ]
  },
  {
    "author": "ggonthier",
    "number": 335,
    "diff_summary": [
      {
        "file": "mathcomp/algebra/ssrnum.v",
        "status": "M",
        "additions": 1,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2019-04-24T21:17:15Z",
    "update_date": "2019-04-24T22:40:16Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: fix",
        "description": "PR that fixes a bug. Please refer to the appropriate issue(s) if relevant."
      }
    ],
    "commits": [
      {
        "author": "ggonthier",
        "committer": "ggonthier",
        "hash": "c0f6dcdb111e6b77c06678dd033a0239aa8e2891",
        "message": "remove deprecated use of `if ... return`\n\nReplace improper use of non-dependent `return` clause in `if` with a\ntype cast; an upcoming coq-side PR will discontinue support for this,\nin order to support dependent return clauses with an implicit `as`\nannotation.",
        "date": "2019-04-24T21:15:56Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 334,
    "diff_summary": [],
    "state": "merged",
    "open_date": "2019-04-23T09:29:36Z",
    "update_date": "2019-04-23T15:56:10Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [
      {
        "tag": "needs: rebase",
        "description": "PR which is not rebased: check the target is appropriate (generally master) and rebase on top of it."
      }
    ],
    "commits": []
  },
  {
    "author": "pi8027",
    "number": 332,
    "diff_summary": [
      {
        "file": "mathcomp/algebra/interval.v",
        "status": "M",
        "additions": 1,
        "deletions": 2
      }
    ],
    "state": "merged",
    "open_date": "2019-04-18T13:38:16Z",
    "update_date": "2019-04-23T06:43:09Z",
    "discussion": [],
    "review_discussion": [
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/interval.v",
        "date": "2019-04-18T14:19:21Z",
        "comment": "We should remove this directive. It was useless and it will remain so."
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "10e688f72239e75fbe8d8ea0c84c468569f49a96",
        "message": "Remove unused `Require`s and a hint directive from interval.v",
        "date": "2019-04-18T14:22:48Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 331,
    "diff_summary": [
      {
        "file": "mathcomp/algebra/ssrnum.v",
        "status": "M",
        "additions": 1,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2019-04-17T20:47:52Z",
    "update_date": "2019-04-18T08:26:46Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "4e33a068c5451a37d36d94714c966232bc130626",
        "message": "ssrnum doesn't use zmodp",
        "date": "2019-04-17T20:43:56Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 330,
    "diff_summary": [],
    "state": "merged",
    "open_date": "2019-04-17T17:15:07Z",
    "update_date": "2019-04-18T08:37:20Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2019-04-18T08:38:28Z",
        "comment": "I forced-push in math-comp experiment/order in order to trigger the CI."
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": []
  },
  {
    "author": "ybertot",
    "number": 328,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 281,
        "deletions": 90
      },
      {
        "file": "mathcomp/algebra/intdiv.v",
        "status": "M",
        "additions": 281,
        "deletions": 90
      },
      {
        "file": "mathcomp/solvable/abelian.v",
        "status": "M",
        "additions": 281,
        "deletions": 90
      },
      {
        "file": "mathcomp/ssreflect/path.v",
        "status": "M",
        "additions": 281,
        "deletions": 90
      }
    ],
    "state": "closed",
    "open_date": "2019-04-12T15:10:08Z",
    "update_date": "2019-10-25T07:46:35Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2019-04-16T11:12:42Z",
        "comment": "@ybertot can you squash everything in one single commit and force push.\r\nAlso, the CI was not triggered I am wondering why... perhaps force-pushing will trigger it again?"
      },
      {
        "author": "CohenCyril",
        "date": "2019-04-16T11:55:59Z",
        "comment": "The CI is runnnig on gitlab, but there is no display here... @erikmd would you know why?"
      },
      {
        "author": "ggonthier",
        "date": "2019-04-16T12:50:34Z",
        "comment": "I'm not sure I agree entirely with the basic motivation for this PR: there's little sense in a formal proof library, in providing algorithms stripped of their definitional properties, i.e., in this case providing a function that purports to sort a sequence but leave the user of the library to his own devices when it comes to show that the sorted sequence contains the same items as the initial one, and is not some arbitrary sorted sequence of the same length. The only plausible use case I can come up for this is reflection decision procedures, where sorting is used for performance or the result is checked after interpretation; I have a hard time believing that this would be useful for parametricity and extraction, in this particular case, because the quaint sorting algorithm defined here is hardly high-performance...\r\n   Thus because permutation is quite unwieldy to characterise without the `perm_eq` predicate and its theory, I'd just given up on defining sorting on non-`eqType` sequences. That said, there is a decent way out of this through parametricity: on can and _should_ prove the \"free\" parametric lemmas\r\n```\r\nmerge_map f s1 s2 : merge leT (map f s1) (map f s2) = map f (merge leTf s1 s2)\r\nsort_map f s : sort leT (map f s) = map f (sort leTf s)\r\nsorted_map f s : sorted leT (map f s) = sorted leTf s\r\n```\r\nwhere `leTf := [rel x y | leT (f x) (f y)].`\r\n   Then permutation can be characterised via the `mkseq_nth` lemma:\r\n```\r\nperm_iota_sort x0 leT s : {i_s | perm_eq i_s (iota 0 (size s)) & sort leT s = map (nth x0 s) i_s}\r\n```\r\nwhich is proved by taking `i_s := sort [rel i j | leT (nth x0 s i) (nth x0 s j)]`. This lemma can also be used\r\nto derive `size_sort` rather than prove it from scratch.\r\n"
      },
      {
        "author": "ggonthier",
        "date": "2019-04-16T13:07:40Z",
        "comment": "   While you are looking into `sort`, perhaps you could try to address stability. If you look closely you might notice that `merge` shuffles in a somewhat strange order, so as to ensure that `sort` is actually stable. It would make sense to exchange the arguments of `merge` to get a more natural definition, and actually _prove_ stability properties. I've put a plural because I can think of four ways of characterising stability, and think perhaps we should provide all:\r\n```\r\nHypothesis leT_tr : transitive leT.\r\nmem2_sort s x y : mem2 s x y -> leT x y -> mem2 (sort leT s) x y\r\nsubseq_sort t s : subseq t s -> sorted leT t -> subseq t (sort leT s).\r\nmask_sort m s : sorted leT (mask m s) -> {m_s | mask m_s (sort leT s) = mask m s}.\r\nsort_stable leT1 s : sorted leT1 s -> sorted [rel x y | leT x y && (leT y x ==> leT1 x y)] (sort leT s).\r\n```\r\nDo note that the first two require an `eqType` to be stated. I'd lean towards showing the second one first, then deriving the three others as either special cases and/or parametricity.\r\nAddendum: showing `sort_stable` requires `leT` being total (as it implies sort_sorted!), and `leT1` being transitive."
      },
      {
        "author": "CohenCyril",
        "date": "2019-04-16T13:36:13Z",
        "comment": "> I have a hard time believing that this would be useful for parametricity\r\n\r\nThe automatic parametricity translation of `sort` involves translations of `eqType`, making its statement very involved. The initial motivation of @ybertot was to make sure the algorithm does not rely on unnecessary structures. After I asked to extend the theory too, to some extent. That said, I see your point now.\r\n\r\nIf I understand correctly, you would be ok with the algorithms relying on `Type` but the theorems should all require a `eqType` and the user who wants to be on a bare `Type` would use `perm_iota_sort`...\r\n(PS: And we provide the same ones that I asked @ybertot to generalize, but using your trick when it gets ugly. BTW except for `size_sort` the generalizations were rather trivial...)\r\n\r\nBesides stability, I had also the intention to provide these:\r\n```coq\r\n(* on Type *)\r\nLemma homo_sorted f s : {homo f : x y / leT x y >-> leT' x y} ->\r\n  sorted leT s -> sorted leT' [seq f x | x <- s].\r\n\r\n(* on Type *)\r\nLemma mono_sorted f s : {mono f : x y / leT x y >-> leT' x y} ->\r\n  sorted leT' [seq f x | x <- s] = sorted leT s.\r\n\r\n(* on eqType *)\r\nLemma homo_sorted_in f s : {in s &, {homo f : x y / leT x y >-> leT' x y}} ->\r\n  sorted leT s -> sorted leT' [seq f x | x <- s].\r\n\r\n(* on eqType *)\r\nLemma mono_sorted_in f s : {in s &, {mono f : x y / leT x y >-> leT' x y}} ->\r\n  sorted leT' [seq f x | x <- s] = sorted leT s.\r\n\r\n(* on eqType *)\r\nLemma homo_sort_map_in f s : {in s &, {homo f : x y / leT x y >-> leT' x y}} ->\r\n  sort leT' [seq f x | x <- s] = [seq f x | x <- sort leT s].\r\n```\r\nafter @ybertot has finished. (And I believe the last one would indeed require stability to reduce the number of hypothesis, and your trick to get it on `Type` without the `in`)"
      },
      {
        "author": "CohenCyril",
        "date": "2019-04-16T13:46:01Z",
        "comment": "@ybertot please tell me if you want to go through with @ggonthier's recommendations or if you prefer that I do it. "
      },
      {
        "author": "ybertot",
        "date": "2019-04-16T14:37:37Z",
        "comment": "Sorry, I was in a meeting all afternoon."
      },
      {
        "author": "ybertot",
        "date": "2019-04-16T18:45:23Z",
        "comment": "I think sorted_map is not provable with this statement: counter example: `f x = 0`, `leT = leq`"
      },
      {
        "author": "ybertot",
        "date": "2019-04-16T18:46:40Z",
        "comment": "Sorry, not a counterexample."
      },
      {
        "author": "ybertot",
        "date": "2019-04-17T06:15:09Z",
        "comment": "This comment follows commit https://github.com/math-comp/math-comp/pull/328/commits/73dd3cae8098dc38be0dc999b067aab1a3fecffd\r\n\r\nThere is one unsatisfactory feature:  the definition leTf, which I took directly from @ggonthier's post (like all the rest) but should probably have a better name.\r\nI don't plan to work on the stability lemmas."
      },
      {
        "author": "CohenCyril",
        "date": "2019-04-17T07:13:40Z",
        "comment": "> There is one unsatisfactory feature: the definition leTf, which I took directly from @ggonthier's post (like all the rest) but should probably have a better name.\r\n\r\nI believe @ggonthier intended this definition to be local (i.e. either as a `Let` or as a `let`, or even a `leTf := ...` in the local context before `:` in the statement).\r\n\r\nI guess my reply was not clear, I would personally prefer `leT` and `leT'` together with `{homo f : x y / leT x y >-> leT' x y}` and the variant with `{mono f : x y / leT x y >-> leT' x y}` which cover the case of `leTf`...  and I need these general parmetricity theorem for some other development I am currently doing (e.g. to prove `[seq - x | x <- s]` is reverse sorted because `GRing.opp` is decreasing).\r\n\r\n\r\n\r\n> I don't plan to work on the stability lemmas.\r\n\r\nI can do it after this PR is merged"
      },
      {
        "author": "ggonthier",
        "date": "2019-04-17T09:00:32Z",
        "comment": "Short remarks:\r\n  - I indended leTf to be a `Let`, not a `Definition`, hence the short name (and no documentation requirement). If it were a definition it would have to be in `ssrbool` (relation preimage, alongside predicate preimage), but the latter is no longer part of MathComp.\r\n  - `order_path_min` should really have `x` and `s` as maximal implicits, as should most lemmas that can be used as views and have totally polymorphic arguments.\r\n  - The precondition for `path_min_sorted` could be stated with `all` rather than `{in ...}`; this would make it possible to prove the lemma in the non-`eqType` section, alongside `order_path_min`. You'll have to insert an instance of `apply/allP` where it is used however (once, in `intdiv`).\r\n  - @CohenCyril, you can add your homomorphism lemmas later, but I don't think they're a substitute  for `sort_map` and `sorted_map`, as they can't be used casually as rewrite rules."
      },
      {
        "author": "CohenCyril",
        "date": "2019-04-17T09:11:03Z",
        "comment": "> * @CohenCyril, you can add your homomorphism lemmas later, but I don't think they're a substitute  for `sort_map` and `sorted_map`, as they can't be used casually as rewrite rules.\r\n\r\nI agree that they cannot be a substitute, but from them one can deduce `sort_map` and `sorted_map` as special cases (of the `{mono ...}` lemmas).\r\n\r\n~EDIT: or vice versa... I guess~"
      },
      {
        "author": "CohenCyril",
        "date": "2019-04-17T09:13:48Z",
        "comment": "> * The precondition for `path_min_sorted` could be stated with `all` rather than `{in ...}`; this would make it possible to prove the lemma in the non-`eqType` section, alongside `order_path_min`. You'll have to insert an instance of `apply/allP` where it is used however (once, in `intdiv`).\r\n\r\n@ggonthier This would make the patch non backward compatible but desirable... should we have this theorem under a new name, or should we target 1.9.0 instead?"
      },
      {
        "author": "ggonthier",
        "date": "2019-04-17T09:20:06Z",
        "comment": "I suggest `path_min_sorted` and `order_path_min` should be kept together. Just generalising the latter is going to be backward incompatible (this PR has a patch in `abelian`!), but in a minor way. I thought this was for 1.9 anyway (it's not patching any bugs, right?)"
      },
      {
        "author": "CohenCyril",
        "date": "2019-04-17T09:30:12Z",
        "comment": "@ggonthier 1.8.1 may contain backward compatible addition...\r\nI did not notice that it broke `abelian.v` anyway!\r\nSo yes let's go nuts, do the full changes and target 1.9.0 instead.\r\nWas there a reason why `size_merge`'s RHS was `size (s1 ++ s2)` rather than `size s1 + size s2` or could we change that as well?"
      },
      {
        "author": "ggonthier",
        "date": "2019-04-17T09:39:09Z",
        "comment": "`lemma_overloading` seems broken as well... (though giving `path_order_min` maximal implicit may solve this.\r\nI'm not sure why I preferred not to simplify the RHS of `size_merge`, other than consistency with `perm_merge` and `merge_uniq`. One reason, though, would be to avoid unwanted simplification if `s2` is an explicit cons, and make it easier to use `map_cat` and similar."
      },
      {
        "author": "pi8027",
        "date": "2019-04-23T12:19:41Z",
        "comment": "@ybertot @CohenCyril \r\n\r\n>> I don't plan to work on the stability lemmas.\r\n>\r\n> I can do it after this PR is merged\r\n\r\nI can provide the stability lemmas too if needed because I did it for a more complicated sorting algorithm based on push/pop mechanism. I guess that stability proofs for this algorithm are relatively easy."
      },
      {
        "author": "CohenCyril",
        "date": "2019-04-23T15:49:50Z",
        "comment": "Just for the record, I wish the following lemmas to be integrated in 1.9.0 whether in this PR or another:\r\n```coq\r\nSection HomoSortSeq.\r\nVariables (T T' : Type) (leT : rel T) (leT' : rel T') (f : T -> T').\r\n\r\nLemma homo_sorted : {homo f : x y / leT x y >-> leT' x y} ->\r\n  {homo map f : s / sorted leT s >-> sorted leT' s}.\r\nProof. by move=> /homo_path f_path [|//= x s]. Qed.\r\n\r\nSection Mono.\r\nHypothesis f_mono : {mono f : x y / leT x y >-> leT' x y}.\r\n\r\nLemma mono_sorted : {mono map f : s / sorted leT s >-> sorted leT' s}.\r\nProof. by case=> //= x s; rewrite (mono_path f_mono). Qed.\r\n\r\nLemma map_merge : {morph map f : s1 s2 / merge leT s1 s2 >-> merge leT' s1 s2}.\r\nProof.\r\nelim=> //= x s1 IHs1; elim => [|y s2 IHs2] //=; rewrite f_mono.\r\nby case: leT; rewrite /= ?IHs1 ?IHs2.\r\nQed.\r\n\r\nLemma map_sort : {morph map f : s1 / sort leT s1 >-> sort leT' s1}.\r\nProof.\r\nhave map_pop s1 ss : map f (merge_sort_pop leT s1 ss) =\r\n                     merge_sort_pop leT' (map f s1) (map (map f) ss).\r\n  by elim: ss s1 => //= x ss IHss s1; rewrite IHss map_merge.\r\nhave map_push s1 ss : map (map f) (merge_sort_push leT s1 ss) =\r\n                     merge_sort_push leT' (map f s1) (map (map f) ss).\r\n  by elim: ss s1 => [|[|y s2] ss IHss s1]//=; rewrite IHss map_merge.\r\nmove=> s; rewrite /sort -[[::] in RHS]/(map (map f) [::]).\r\nelim: {s}_.+1 {-2}s [::] (ltnSn (size s)) => // n IHn s ss.\r\ncase: s => [|x [|y s]]/=; rewrite ?map_pop//=.\r\nby move=> /ltnW s_small; rewrite IHn ?map_push// f_mono//; case: leT.\r\nQed.\r\n\r\nEnd Mono.\r\n\r\nEnd HomoSortSeq.\r\n\r\nArguments homo_sorted {T T' leT leT'}.\r\nArguments mono_sorted {T T' leT leT'}.\r\nArguments map_merge {T T' leT leT'}.\r\nArguments map_sort {T T' leT leT'}.\r\n```"
      },
      {
        "author": "ybertot",
        "date": "2019-05-29T13:41:35Z",
        "comment": "I have no time to work on this PR currently, please proceed without me."
      },
      {
        "author": "CohenCyril",
        "date": "2019-05-29T13:42:53Z",
        "comment": "> I have no time to work on this PR currently, please proceed without me.\r\n\r\nI will take ownership of this PR and do the some changes so that it gets integrated. Further changes can come later."
      },
      {
        "author": "CohenCyril",
        "date": "2019-05-29T17:41:48Z",
        "comment": "I will let @pi8027 prove stability (cf https://github.com/math-comp/math-comp/pull/328#issuecomment-485778757) in another PR."
      },
      {
        "author": "CohenCyril",
        "date": "2019-05-31T13:25:17Z",
        "comment": "@ggonthier could we merge this one and let @pi8027 do the stability proofs in a subsequent PR?"
      },
      {
        "author": "pi8027",
        "date": "2019-06-11T09:01:26Z",
        "comment": "I have proved the stability lemmas. https://github.com/pi8027/math-comp/tree/more-abstract-sort-april-19"
      },
      {
        "author": "CohenCyril",
        "date": "2019-06-12T17:19:42Z",
        "comment": "> I have proved the stability lemmas. https://github.com/pi8027/math-comp/tree/more-abstract-sort-april-19\r\n\r\n@pi8027 please open a new PR."
      },
      {
        "author": "amahboubi",
        "date": "2019-10-24T12:47:24Z",
        "comment": "@CohenCyril @pi8027 It would be great to write a comment here clarifying the status of this PR with respect to #358 "
      },
      {
        "author": "CohenCyril",
        "date": "2019-10-25T07:48:53Z",
        "comment": "> @CohenCyril @pi8027 It would be great to write a comment here clarifying the status of this PR with respect to #358\r\n\r\nThis PR was subsumed by #358, so it is now closed."
      }
    ],
    "review_discussion": [
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2019-04-12T17:59:59Z",
        "comment": "Please, rename section `SortSeq`"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2019-04-12T18:00:46Z",
        "comment": "Please merge with the previous `Variable` (and hence use `Variables`)"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2019-04-12T18:06:16Z",
        "comment": "While you are at it, you could add to this section everything else that does not depend on `T` being an `eqType`, so at least:\r\n- `sorted` and `path_sorted`,\r\n- and under `Hypothesis leT_total : ...`, put also `merge_path`, `merge_sorted` and `sort_sorted`, and just after the end of the section `rev_sorted` (because the relation changes).\r\n\r\nAdditionally, you could also try to put `order_path_min`, `sorted_filter`, `size_merge` and `size_sort`  that have a fake dependency in `T` being discrete."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2019-04-12T18:06:47Z",
        "comment": "You could merge these two `Variable` commands."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2019-04-12T18:06:59Z",
        "comment": "Please rename to (e.g.) `EqSortSeq`."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2019-04-12T18:13:03Z",
        "comment": "Keep only `merge`, `sort` and `sorted` (when it is here) and remove empty lines from inbetween `Local Notation` commands."
      },
      {
        "author": "ybertot",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2019-04-12T18:49:01Z",
        "comment": "So \"abstract_sort -> SortSeq\"  and \"SortSeq -> EqSortSeq\" right?\r\nThe rest seems clear."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2019-04-12T18:50:40Z",
        "comment": "yes"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2019-04-16T09:00:11Z",
        "comment": "In order for this PR to be merged in 1.8.1 (should this release exist), the statement of `size_merge` should not change, so we might want to keep `size (s1 ++ s2)` and you could submit a new PR to change the RHS to `size s1 + size s2`.\r\n\r\nAlso @ggonthier  recommends to document the introduced variables (instead of using `?`), so I took the liberty to refactor it a little bit. (And we should document this style in CONTRIBUTING.md)\r\n```coq\r\nLemma size_merge s1 s2 : size (merge s1 s2) = size (s1 ++ s2).\r\nProof.\r\nrewrite size_cat; elim: s1 s2 => // x s1 IHs1; elim => //= y s2 IHs2.\r\nby case: leT; rewrite /= ?IHs1 ?IHs2.\r\nQed.\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2019-04-16T09:00:57Z",
        "comment": "Nice proof, I suggest the following refactoring:\r\n```coq\r\nLocal Notation sum_size ss := (sumn (map size ss)).\r\nLemma size_sort s : size (sort s) = size s.\r\nProof.\r\nhave size_pop r ss : size (merge_sort_pop r ss) = size r + sum_size ss.\r\n  by elim: ss => // s2 ss IHs in r *; rewrite IHs size_merge size_cat addnA.\r\nhave size_push r ss : sum_size (merge_sort_push r ss) = size r + sum_size ss.\r\n  elim: ss => [|[|x s'] ss IHss]/= in r *; rewrite ?(addn0, add0n)//.\r\n  by rewrite IHss size_merge ?size_cat/= !addnS addnA.\r\nsuff -> ss: size (merge_sort_rec ss s) = sum_size ss + size s by [].\r\nelim: {s}_.+1 {-2}s ss (ltnSn (size s)) => // n IHn.\r\ncase=> [|x [|/= y s]] ss; rewrite ?size_pop ?(addn0, addnS)//.\r\nby move=> /ltnW s_small; rewrite IHn// size_push; case: ifP.\r\nQed.\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2019-04-16T09:10:12Z",
        "comment": "As I can tell thanks to the CI, you accidentally deleted this very important lemma which should be restored in `EqSortSeq`."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2019-04-16T09:26:13Z",
        "comment": "Could you remove all local notations besides `merge`, `sort` and `sorted` (the ones that appear in the statements)."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2019-04-16T09:27:01Z",
        "comment": "`rev_sorted` should be moved at the end of section `EqSortSeq` and generalized"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2019-04-16T12:07:31Z",
        "comment": "This hypothesis comes too early, it is more informative to put it juste before `merge_path`"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2019-04-16T12:08:09Z",
        "comment": "there is one unnecessary space here."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2019-04-16T12:12:29Z",
        "comment": "`order_path_min` should also be generalized (cf https://github.com/math-comp/math-comp/pull/328#discussion_r275010699) and put here, here is the corrected proof:\r\n```coq\r\nHypothesis leT_tr : transitive leT.\r\n\r\nLemma order_path_min x s : path leT x s -> all (leT x) s.\r\nProof.\r\nelim: s => //= y [//|z s] ihs /andP[xy yz]; rewrite xy {}ihs//.\r\nby move: yz => /= /andP[/(leT_tr _)->].\r\nQed.\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2019-04-16T12:14:24Z",
        "comment": "The section hypothesis `leT_total : total leT.` can be moved just before `perm_sort` "
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2019-06-03T09:37:43Z",
        "comment": "If we're going to document the stability of `sort` and `merge`, it would be better to inverse this comparison (`leT x1 x2`), i.e., put items of `s1` before non-greater items of `s2` in the merged sequence. This requires swapping `s1` and `s2` in `merge_sort_push` and `merge_sort_pop` below, and slightly adapting the sorting proof for `merge`."
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2019-06-03T09:40:57Z",
        "comment": "Eta expanding `(leT x)` into `[pred y | leT x y]` merely adds `simpl` overhead."
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/solvable/abelian.v",
        "date": "2019-06-03T09:45:12Z",
        "comment": "This fix can be avoided by declaring the right `Arguments` (see below)."
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2019-06-03T10:09:14Z",
        "comment": "The rest of the library doesn't eta-expand generic instances of `map`, as this can lead to unwanted expansion of function operators (e.g., `f \\o g`). I do realise the Coq printer now eta-expands on display, but hopefully we'll eventually get some way to disable that behaviour when it's undesirable (as it is for `map`, `filter`, `image`, `codom`, ...)."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2019-06-05T20:53:15Z",
        "comment": "@ggonthier I have started stability proofs with following your suggestions. However, swapping `s1` and `s2` in `merge_sort_push` causes many undesirable unfolding of `merge` by `/=`. \r\n```coq\r\nFixpoint merge_sort_push s1 ss :=\r\n  match ss with\r\n  | [::] :: ss' | [::] as ss' => s1 :: ss'\r\n  | s2 :: ss' => [::] :: merge_sort_push (merge s2 s1) ss' (* `merge s2 s1` does pattern-matching on `s2` first *)\r\n  end.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2019-06-06T08:05:32Z",
        "comment": "You can always add and `Arguments` declaration so that `merge` does not simplify unless _both_ its arguments expose constructors. That said, because `merge` has an inner loop (to ensure structural recursion), some of the unfoldings will always be unwieldy - I guess you could tidy up by defining `merge_left` and `merge_right` mutually recursive functions (of type `T -> seq T -> seq T -> seq T`), but it makes little difference to the local proof, and I'm not sure of the value of adding two additional definitions in the library just for this sake."
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2019-06-06T09:50:20Z",
        "comment": "  Also, if you're looking into this, some of my indications for required premises are wrong, and it looks like the basic lemma one wants to show is one about lexicographic order. Here's my second take at it, including some tentative additions to `ssrbool` and `seq`:\r\n```\r\nSection BoolRel.\r\n\r\nContext {T : Type}.\r\n\r\nDefinition relV (r : rel T) := [rel x y | r y x].\r\n\r\nDefinition relC (r : rel T) := [rel x y | ~~ r x y].\r\n\r\nDefinition relI (r1 r2 : rel T) := [rel x y | r1 x y && r2 x y].\r\n\r\nDefinition condrel (r1 r2 : rel T) := [rel x y | r1 x y ==> r2 x y].\r\n\r\nDefinition optrel (r : rel T) := [rel x y | oapp (oapp r xpredT x) false y].\r\n\r\nDefinition lexrel (r1 r2 : rel T) := [rel x y | r1 x y && (r1 y x ==> r2 x y)].\r\n\r\nLemma lexrel_trans r1 r2 :\r\n  transitive r1 -> transitive r2 -> transitive (lexrel r1 r2).\r\nProof.\r\nmove=> r1tr r2tr y x z /andP[le1xy /implyP-le2xy] /andP[le1yz /implyP-le2yz] /=.\r\nrewrite (r1tr y) //; apply/implyP=> r1zx.\r\nby apply/(r2tr y); [apply/le2xy/(r1tr z) | apply/le2yz/(r1tr x)].\r\nQed.\r\n\r\nLemma lexrel_total r1 r2 : total r1 -> total r2 -> total (lexrel r1 r2).\r\nProof.\r\nmove=> r1T r2T x y; move: (r1T x y) (r2T x y); rewrite /total /=.\r\nby do 2!case: (r1).\r\nQed.\r\n\r\nEnd BoolRel.\r\n\r\nArguments nilp {T} s.\r\n\r\nSection SeqRel.\r\n\r\nContext {T : Type}.\r\n\r\nDefinition allrel (r : rel T) s t := all (fun x => all (r x) t) s.\r\n\r\nDefinition hasrel (r : rel T) s t := has (fun x => has (r x) t) s.\r\n\r\nLemma allrelC r s t : allrel (relC r) s t = ~~ hasrel r s t.\r\nProof. by rewrite -all_predC; apply/eq_all=> x; rewrite all_predC. Qed.\r\n\r\nLemma hasrelC r s t : hasrel (relC r) s t = ~~ allrel r s t.\r\nProof. by rewrite -has_predC; apply/eq_has=> x; rewrite has_predC. Qed.\r\n\r\nLemma allrelV r s t : allrel (relV r) t s = allrel r s t.\r\nProof.\r\nby elim: t => /= [|y t ->]; rewrite ?[RHS]all_predT // -all_predI; apply/eq_all.\r\nQed.\r\n\r\nLemma hasrelV r s t : hasrel (relV r) t s = hasrel r s t.\r\nProof. by apply/negb_inj; rewrite -!allrelC allrelV. Qed.\r\n\r\nLemma allrel_trans r: transitive r -> {in predC nilp, transitive (allrel r)}.\r\nProof.\r\nmove=> r_tr [|y t] //= _ s u rst /andP[ryu _].\r\nby apply: sub_all rst => x /andP[rxy _]; apply: sub_all ryu => z; apply: r_tr.\r\nQed.\r\n\r\nLemma all_mask (a : pred T) m s : all a s -> all a (mask m s).\r\nProof. by apply: contraLR; rewrite -!has_predC => /has_mask. Qed.\r\n\r\nLemma pathI (e1 e2 : rel T) x p :\r\n  path (relI e1 e2) x p = path e1 x p && path e2 x p.\r\nProof. by elim: p x => //= y p IHp x; rewrite andbACA -IHp. Qed.\r\n\r\nEnd SeqRel.\r\n\r\nSection Sorted.\r\n\r\nVariables (T : Type) (leT : rel T).\r\n\r\nDefinition sorted s := if s is x :: s' then path leT x s' else true.\r\n\r\nLemma path_sorted x s : path leT x s -> sorted s.\r\nProof. by case: s => //= y s /andP[]. Qed.\r\n\r\nLemma path_min_sorted x s : all (leT x) s -> path leT x s = sorted s.\r\nProof. by case: s => //= y s /andP[->]. Qed.\r\n\r\nLemma cat_sorted_r s1 s2 : sorted (s1 ++ s2) -> sorted s1 /\\ sorted s2.\r\nProof.\r\nby elim: s1 => //= x1 s1 IHs; rewrite cat_path => /andP[-> /path_sorted].\r\nQed.\r\n\r\nHypothesis leT_tr : transitive leT.\r\n\r\nLemma path_sortedP {x s} : reflect (all (leT x) s /\\ sorted s) (path leT x s).\r\nProof.\r\nelim: s x => [|y s IHs] x; [by left | rewrite /= -{IHs}(sameP andP (IHs y))].\r\napply: (iffP andP) => [[leTxy]|[]] /andP[// leTys ->]; rewrite leTxy leTys.\r\nby rewrite (sub_all _ leTys) // => z; apply: leT_tr leTxy.\r\nQed.\r\n\r\nLemma order_path_min x s : path leT x s -> all (leT x) s.\r\nProof. by case/path_sortedP. Qed.\r\n\r\nLemma cat_sorted s1 s2 :\r\n  sorted (s1 ++ s2) = [&& sorted s1, sorted s2 & allrel leT s1 s2].\r\nProof.\r\nelim: s1 => [|x1 s1 IHs] /=; first by rewrite andbT.\r\nby rewrite !(sameP path_sortedP andP) all_cat IHs -!andbA !(andbCA (all _ s2)).\r\nQed.\r\n\r\nLemma mask_sorted m s : sorted s -> sorted (mask m s).\r\nProof.\r\nelim: s m => [|x s IHs] [|b m] //; rewrite mask_cons cat_sorted /allrel /=.\r\nby rewrite all_nseq => /path_sortedP[/all_mask-> /IHs->]; case: b.\r\nQed.\r\n\r\nLemma filter_sorted a s : sorted s -> sorted (filter a s).\r\nProof. by move=> ord_s; rewrite filter_mask mask_sorted. Qed.\r\n\r\nEnd Sorted.\r\n\r\nLemma sortedI {T} (r1 r2 : rel T) s :\r\n  sorted (relI r1 r2) s = sorted r1 s && sorted r2 s.\r\nProof. by case: s => //= x s; rewrite pathI. Qed.\r\n\r\nSection EqSorted.\r\n\r\nContext {T : eqType} (leT : rel T).\r\nHypothesis leT_tr : transitive leT.\r\n\r\nLemma subseq_sorted s1 s2 : subseq s1 s2 -> sorted leT s2 -> sorted leT s1.\r\nProof. by case/subseqP=> m _ -> /mask_sorted->. Qed.\r\n\r\nLemma eq_sorted (leT_asym : antisymmetric leT) s1 s2 :\r\n  sorted leT s1 -> sorted leT s2 -> perm_eq s1 s2 -> s1 = s2.\r\nProof.\r\nelim: s2 s1 => [|x2 s2 IHs] s1 ord_s1; first by move=> _ /perm_nilP.\r\ncase/path_sortedP=> // leTxs2 ord_s2 eq_s12.\r\nhave: x2 \\in s1 by rewrite (perm_mem eq_s12) mem_head.\r\ncase: s1 ord_s1 => //= x1 s1 /path_sortedP[//|leTxs1 ord_s1] in eq_s12 *.\r\nhave: x1 \\in x2 :: s2 by rewrite -(perm_mem eq_s12) mem_head.\r\nrewrite !inE eq_sym; case: eqP eq_s12 => [-> | x1'2 _ /= s2x1 s1x2].\r\n  by rewrite perm_cons => /IHs->.\r\nby case: x1'2; apply/leT_asym; rewrite (allP leTxs2) ?(allP leTxs1).\r\nQed.\r\n\r\nHypothesis leT_irr : irreflexive leT.\r\n\r\nLemma sorted_uniq s : sorted leT s -> uniq s.\r\nProof.\r\nelim: s => //= x s IHs /path_sortedP[//|/allP-leTxs /IHs->].\r\nby rewrite (contraFN (leTxs x)) ?leT_irr.\r\nQed.\r\n\r\nLemma eq_sorted_irr s1 s2 :\r\n  sorted leT s1 -> sorted leT s2 -> s1 =i s2 -> s1 = s2.\r\nProof.\r\nmove=> ord_s1 ord_s2 eq_s12; apply/eq_sorted=> // [x y /andP[ltxy ltyx]|].\r\n  by have:= leT_irr x; rewrite (leT_tr ltxy ltyx).\r\nby apply/uniq_perm=> //; apply: sorted_uniq.\r\nQed.\r\n\r\nEnd EqSorted.\r\n\r\nSection MergeSort.\r\n\r\nContext {T : Type} (leT : rel T).\r\n\r\nFixpoint merge s1 :=\r\n  if s1 isn't x1 :: s1r then id else fix merge_s1 s2 :=\r\n  if s2 isn't x2 :: s2r then s1 else\r\n  if leT x1 x2 then x1 :: merge s1r s2 else x2 :: merge_s1 s2r.\r\n\r\nLocal Fixpoint merge_sort_push s1 ss :=\r\n  match ss with\r\n  | [::] :: ss' | [::] as ss' => s1 :: ss'\r\n  | s2 :: ss' => [::] :: merge_sort_push (merge s2 s1) ss'\r\n  end.\r\n\r\nLocal Fixpoint merge_sort_pop s1 ss :=\r\n  if ss is s2 :: ss' then merge_sort_pop (merge s2 s1) ss' else s1.\r\n\r\nLocal Fixpoint merge_sort_rec ss s :=\r\n  if s is [:: x1, x2 & s'] then\r\n    let s1 := if leT x1 x2 then [:: x1; x2] else [:: x2; x1] in\r\n    merge_sort_rec (merge_sort_push s1 ss) s'\r\n  else merge_sort_pop s ss.\r\n\r\nDefinition sort := merge_sort_rec [::].\r\n\r\nLemma count_merge a s1 s2 : count a (merge s1 s2) = count a s1 + count a s2.\r\nProof.\r\nelim: s1 s2 => //= x1 s1 IHs1; elim=> [|x2 s2 IHs2] /=; first by rewrite addn0. \r\nby case: leT => /=; [rewrite IHs1 addnA | rewrite IHs2 addnCA].\r\nQed.\r\n\r\nLemma size_merge s1 s2 : size (merge s1 s2) = size s1 + size s2.\r\nProof. by rewrite -!count_predT count_merge. Qed.\r\n\r\nLet allrel_merge r s t u (sr := (allrel r)^~ u) : sr (merge s t) = sr s && sr t.\r\nProof.\r\nrewrite -all_cat all_count count_cat size_cat.\r\nby rewrite [LHS]all_count count_merge size_merge.\r\nQed.\r\n\r\nLet sort_rec1 := fix sort_rec1 ss s :=\r\n  if s is x :: s then sort_rec1 (merge_sort_push [:: x] ss) s else\r\n  merge_sort_pop [::] ss.\r\n\r\nLet sortE s : sort s = sort_rec1 [::] s.\r\nProof.\r\ntransitivity (sort_rec1 [:: nil] s); last by case: s.\r\nrewrite /sort; move: [::] {2}_.+1 (ltnSn (size s)./2) => ss n.\r\nby elim: n => // n IHn in ss s *; case: s => [|x [|y s]] //= /IHn->.\r\nQed.\r\n\r\nLemma count_sort a s : count a (sort s) = count a s.\r\nProof.\r\nrewrite -[RHS]/(sumn (map (count a) [::]) + count a s) sortE.\r\nelim: s [::] => [|x s IHs] ss /=.\r\n  set s1 := [::]; rewrite -[0]/(count a s1); elim: ss s1 => //= s2 ss IHss s1.\r\n  by rewrite addnAC addnC -count_merge -IHss.\r\nrewrite {}IHs addnA -(muln1 (a x)) -count_nseq [nseq 1 x]/=; congr (_ + _).\r\nelim: ss {x}[:: x] => [|[|x s2] ss IHss] s1 //=; try by rewrite addnC.\r\nby rewrite IHss (count_merge a (_ :: _)) add0n addnCA addnA.\r\nQed.\r\n\r\nLocal Remark size_merge_sort_push s1 :\r\n  let graded ss := forall i, size (nth [::] ss i) \\in pred2 0 (2 ^ (i + 1)) in\r\n  size s1 = 2 -> {homo merge_sort_push s1 : ss / graded ss}.\r\nProof.\r\nset n := {2}1; rewrite -[RHS]/(2 ^ n) => graded sz_s1 ss.\r\nelim: ss => [|s2 ss IHss] in (n) graded s1 sz_s1 * => sz_ss i //=.\r\n  by case: i => [|[]] //; rewrite sz_s1 inE eqxx orbT.\r\ncase: s2 i => [|x s2] [|i] // in sz_ss *; first by rewrite sz_s1 inE eqxx orbT.\r\n  exact: (sz_ss i.+1).\r\nrewrite addSnnS; apply: IHss i => [|i]; last by rewrite -addSnnS (sz_ss i.+1).\r\nby rewrite size_merge sz_s1 (eqnP (sz_ss 0)) addnn expnS mul2n.\r\nQed.\r\n\r\nSection Stable.\r\n\r\nVariable leT0 : rel T.\r\n\r\nNotation leT0s := (allrel leT0).\r\nLet leT1 := relU (relC (relV leT)) (relI leT leT0).\r\nLet leTlex := lexrel leT leT0.\r\n\r\nLemma merge_stable s1 s2 :\r\n  leT0s s1 s2 -> sorted leT1 s1 -> sorted leT1 s2 -> sorted leT1 (merge s1 s2).\r\nProof.\r\nhave sorted_opt s : sorted leT1 s = path (optrel leT1) None (map Some s).\r\n  by case: s => //= x s; elim: s x => //= y s IHs x; rewrite IHs.\r\nrewrite !sorted_opt; elim: s1 s2 None => //= x s IHs; elim=> //= y t IHt w.\r\ncase/andP=> /andP[le0xy le0xt] le0st /andP[le1wx le1xs] /andP[le1wy le1yt].\r\nhave [leTxy | le'xy] /= := ifP; first by rewrite le1wx IHs //= leTxy le0xy orbT.\r\nby rewrite le1wy IHt /= ?le'xy // le0xt; apply: sub_all le0st => z /andP[].\r\nQed.\r\n\r\nHypothesis leT0_tr : transitive leT0.\r\n\r\nLemma sort_stable s : sorted leT0 s -> sorted leT1 (sort s).\r\nProof.\r\npose no_nil := filter (predC (@nilp T)); pose leT0s_tr := allrel_trans leT0_tr.\r\npose stackp t ss := all (sorted leT1) ss && path (relV leT0s) t (no_nil ss).\r\nhave stackp_rec t u v ss: stackp t (u :: v :: ss) -> stackp t (merge v u :: ss).\r\n  case: v u => // y v [] // x u; rewrite /stackp [y :: v]lock [x :: u]lock /=.\r\n  rewrite !ifT /= -!lock //; last by rewrite -lt0n size_merge.\r\n  case/and4P=> /and3P[le1yv le1xu ->] le0ut le0vu; rewrite merge_stable //.\r\n  rewrite allrel_merge (leT0s_tr (x :: u)) // le0ut [y :: v]lock.\r\n  case/no_nil: ss => //= w ss; rewrite -lock => /andP[le0wv {ss}->].\r\n  by rewrite -allrelV allrel_merge 2!allrelV le0wv (leT0s_tr (y :: v)).\r\nrewrite sortE; elim: s [::] (isT : stackp s [::]) => /= [|x s IHs] ss ssP.\r\n  clear 1; set s := [::]; rewrite -[stackp _ _]/(stackp [::] (s :: ss)) in ssP.\r\n  elim: ss => [|t ss IHss] in (s) ssP *; first by case/andP: ssP => /andP[].\r\n  exact/IHss/stackp_rec.\r\nset t := [:: x] => /path_sortedP[//|leT0xs]; apply: IHs.\r\nhave{ssP leT0xs}: stackp s (t :: ss).\r\n  case/andP: ssP; rewrite /stackp /= leT0xs => ->; case/no_nil: ss => //= w ss.\r\n  by rewrite -!(allrelV leT0) /= andbT andbAC => /andP[].\r\nby elim: ss => [|[|y u] ss IHss] // in {x}(t) * => /stackp_rec/IHss.\r\nQed.\r\n\r\nHypothesis leT_total : total leT.\r\n\r\nLet leTlexE s : sorted leTlex s = sorted leT1 s.\r\nProof.\r\ncase: s => // x0 s; apply/eq_path=> x y {x0 s} /=.\r\nby rewrite implybE; case: (leT x y) (leT_total x y) => //= ->.\r\nQed.\r\n\r\nLemma merge_lex_sorted s1 s2 :\r\n    leT0s s1 s2 -> sorted leTlex s1 -> sorted leTlex s2 ->\r\n  sorted leTlex (merge s1 s2).\r\nProof. by rewrite !leTlexE; apply: merge_stable. Qed.\r\n\r\nLemma sort_lex_sorted s : sorted leT0 s -> sorted leTlex (sort s).\r\nProof. by rewrite leTlexE; apply: sort_stable. Qed.\r\n\r\nEnd Stable.\r\n\r\nSection Sorted.\r\n\r\nHypothesis leT_total : total leT.\r\n\r\nLet relT := [rel x y : T | true].\r\nLet leTlexE s : sorted (lexrel leT relT) s = sorted leT s.\r\nProof. by case: s => // *; apply/eq_path=> x y /=; rewrite implybT andbT. Qed.\r\n\r\nLemma merge_sorted s1 s2 :\r\n  sorted leT s1 -> sorted leT s2 -> sorted leT (merge s1 s2).\r\nProof.\r\nrewrite -!leTlexE; apply: merge_lex_sorted => //.\r\nby apply: sub_all (all_predT s1) => x /=; rewrite all_predT.\r\nQed.\r\n\r\nLemma sort_sorted s : sorted leT (sort s).\r\nProof.\r\nby rewrite -!leTlexE sort_lex_sorted //; case: s => //= x s; elim: s x => /=.\r\nQed.\r\n\r\nEnd Sorted.\r\n\r\nEnd MergeSort.\r\n```\r\nI'm not entirely satisfied with this because the `leT1` relation isn't the strongest possible, and strengthening it would make it difficult to prove `merge_lex_sorted`. An alternative would be to prove the stability lemmas only for `iota` sequences, taking `leT0` = `leq` or `ltn`, and use the `map (nth ...)` theory to derive the final results.\r\n"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2019-06-07T15:20:31Z",
        "comment": "OK. I will prove the stability lemmas only for `iota` sequence, then derive others from it."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2019-06-10T15:40:05Z",
        "comment": "`T'` is not required to be `eqType` here."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2019-06-10T15:41:21Z",
        "comment": "`T` is not required to be `eqType`, at least for `homo_sorted_in` and `mono_sorted_in`."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2019-06-13T11:10:03Z",
        "comment": "One could prove `sort_map_in` without the use of `leT_total : total leT`, but one of the following variants of `sort_sorted` would be needed. :/\r\n```\r\nsort_sorted_in : forall (T : eqType) (leT : rel T) (s : seq T), {in s &, total leT} -> sorted leT (sort leT s)\r\nor\r\nsort_sorted_in : forall (T : Type) (P : pred T) (leT : rel T) (s : seq T), all P s -> {in P &, total leT} -> sorted leT (sort leT s).\r\n```"
      },
      {
        "author": "anton-trunov",
        "file": "mathcomp/solvable/abelian.v",
        "date": "2019-06-13T15:17:47Z",
        "comment": "@ggonthier It's probably some GitHub glitch, because I can't find the `Arguments` annotation for `order_path_min` you were referring to."
      },
      {
        "author": "anton-trunov",
        "file": "mathcomp/solvable/abelian.v",
        "date": "2019-06-13T15:20:10Z",
        "comment": "If that was one of the short remarks above, then it seems that just making arguments `T`, `leT`, `x` and `s` implicit and maximally inserted doesn't work.\r\n"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/solvable/abelian.v",
        "date": "2019-06-19T12:08:33Z",
        "comment": "You are right, it doesn't, because `path_min_sorted` has non-prenex implicits. See https://github.com/math-comp/math-comp/pull/358#discussion_r295259267\r\nfor possible fixes, and #220 for the main thread on this topic."
      }
    ],
    "tags": [
      {
        "tag": "kind: enhancement",
        "description": "Issue or PR about addition of features."
      }
    ],
    "commits": [
      {
        "author": "ybertot",
        "committer": "CohenCyril",
        "hash": "5ab7ac6b5f499eb9fcb4eade811f1e2d0dcdebf4",
        "message": "Modified the definition of sort to work on any type",
        "date": "2019-05-29T17:25:42Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "4a3a6c99b50384a6d454a3446fdafc3e84a66a5f",
        "message": "Other Generalizations, fixes and CHANGELOG entry",
        "date": "2019-05-29T18:26:10Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 325,
    "diff_summary": [
      {
        "file": "coq-mathcomp-algebra.opam",
        "status": "D",
        "additions": 78,
        "deletions": 70
      },
      {
        "file": "coq-mathcomp-character.opam",
        "status": "D",
        "additions": 78,
        "deletions": 70
      },
      {
        "file": "coq-mathcomp-field.opam",
        "status": "D",
        "additions": 78,
        "deletions": 70
      },
      {
        "file": "coq-mathcomp-fingroup.opam",
        "status": "D",
        "additions": 78,
        "deletions": 70
      },
      {
        "file": "coq-mathcomp-solvable.opam",
        "status": "D",
        "additions": 78,
        "deletions": 70
      },
      {
        "file": "coq-mathcomp-ssreflect.opam",
        "status": "D",
        "additions": 78,
        "deletions": 70
      },
      {
        "file": "etc/utils/packager",
        "status": "D",
        "additions": 78,
        "deletions": 70
      },
      {
        "file": "mathcomp/algebra/descr",
        "status": "D",
        "additions": 78,
        "deletions": 70
      },
      {
        "file": "mathcomp/character/descr",
        "status": "D",
        "additions": 78,
        "deletions": 70
      },
      {
        "file": "mathcomp/field/descr",
        "status": "D",
        "additions": 78,
        "deletions": 70
      },
      {
        "file": "mathcomp/fingroup/descr",
        "status": "D",
        "additions": 78,
        "deletions": 70
      },
      {
        "file": "mathcomp/solvable/descr",
        "status": "D",
        "additions": 78,
        "deletions": 70
      },
      {
        "file": "mathcomp/ssreflect/descr",
        "status": "D",
        "additions": 78,
        "deletions": 70
      }
    ],
    "state": "merged",
    "open_date": "2019-04-08T16:02:25Z",
    "update_date": "2019-04-08T19:40:35Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "78b4d07568d5df23bd684e4b21ba63e9920debaa",
        "message": "switching to opam 2.0 format",
        "date": "2019-04-08T15:59:44Z"
      }
    ]
  },
  {
    "author": "ggonthier",
    "number": 324,
    "diff_summary": [
      {
        "file": "CHANGELOG.md",
        "status": "M",
        "additions": 409,
        "deletions": 266
      },
      {
        "file": "mathcomp/solvable/primitive_action.v",
        "status": "M",
        "additions": 409,
        "deletions": 266
      },
      {
        "file": "mathcomp/ssreflect/fintype.v",
        "status": "M",
        "additions": 409,
        "deletions": 266
      },
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 409,
        "deletions": 266
      }
    ],
    "state": "merged",
    "open_date": "2019-04-04T14:52:21Z",
    "update_date": "2019-04-08T12:17:43Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2019-04-04T15:54:20Z",
        "comment": "@ggonthier I have a squashed and rebased version with resolved conflicts + cleansed spurious whitespaces. It compiles on my computer with coq 8.8. May I force-push?"
      },
      {
        "author": "ggonthier",
        "date": "2019-04-04T15:56:21Z",
        "comment": "Did you also rebase wrt the ChangeLog upheaval? Otherwise it would make sense to squash wrt that before..."
      },
      {
        "author": "CohenCyril",
        "date": "2019-04-04T15:57:37Z",
        "comment": "> Did you also rebase wrt the ChangeLog upheaval? Otherwise it would make sense to squash wrt that before...\r\n\r\nYes I did"
      },
      {
        "author": "CohenCyril",
        "date": "2019-04-04T16:08:13Z",
        "comment": "@ggonthier the result it here: https://github.com/CohenCyril/math-comp/commits/seq-permutations-allpairs"
      },
      {
        "author": "CohenCyril",
        "date": "2019-04-04T16:11:34Z",
        "comment": "I realize some comments of the commit log do not make sense anymore now it is squashed... so I am taking the liberty to rephrase slightly"
      },
      {
        "author": "ggonthier",
        "date": "2019-04-04T16:11:45Z",
        "comment": "Looks great - good to merge, I'd say; thanks!"
      },
      {
        "author": "CohenCyril",
        "date": "2019-04-04T20:11:14Z",
        "comment": "@erikmd I tried to follow your tutorial #293 but I must have missed something. Could you have a look?"
      },
      {
        "author": "erikmd",
        "date": "2019-04-04T23:29:18Z",
        "comment": "@CohenCyril I just took a look and it seems:\r\n* that your implementation of #293 was very fine: in particular:\r\n    * in https://gitlab.com/math-comp/math-comp/pipelines/55269045 there is the good number of jobs\r\n    * in https://gitlab.com/math-comp/math-comp/-/jobs/190933399 I indeed see\r\n        `$ git rev-parse --verify HEAD`  \r\n        `6fe341242be1d4e55ac23fa6f022e6d115b89bf1`\r\n* that **coqbot** reporting was imprecise because it aggregated failures from different pipelines (this is maybe a very minor issue, but I Cc @Zimmi48 just in case)\r\n* that your patch in the external branch is maybe incomplete: at first sight it should at least modify this line: https://github.com/math-comp/fourcolor/blob/master/theories/configurations.v#L2078"
      },
      {
        "author": "CohenCyril",
        "date": "2019-04-05T10:10:43Z",
        "comment": "Failures are spurious now, one can merge."
      },
      {
        "author": "ggonthier",
        "date": "2019-04-05T10:18:12Z",
        "comment": "Shouldn't we remove the patch commit before merging?"
      },
      {
        "author": "CohenCyril",
        "date": "2019-04-05T10:26:29Z",
        "comment": "> Shouldn't we remove the patch commit before merging?\r\n\r\nWe do not have to, but let's do the cleanup right now indeed."
      },
      {
        "author": "CohenCyril",
        "date": "2019-04-05T12:05:16Z",
        "comment": "Dear @ggonthier, I do not understand what happened here. Did you commit to this pr by accident?"
      },
      {
        "author": "ggonthier",
        "date": "2019-04-05T12:13:02Z",
        "comment": "Yes, and then no: my local sync didn't react too well to all those forced pushes, and then I decided to tweak the RHS of `mem_permutations` while I was at it. I'm looking into another refactoring bit (consistency renaming or `perm` lemmas) which we should do while we're at it. I'll signal when you can straighten things out again..."
      },
      {
        "author": "CohenCyril",
        "date": "2019-04-05T16:01:44Z",
        "comment": "Checks have passed. I will rebase and merge later. (After @ggonthier signals me)"
      },
      {
        "author": "Zimmi48",
        "date": "2019-04-08T12:48:22Z",
        "comment": "@erikmd Cyril pushed the branch `seq-permutations-allpairs` manually on GitLab. Thus, it ran without the overlays (since they are supposed to run only for the branch named `pr-324`). Because the recommendation is to use alternative names for building math-comp, the reported status from the CI run triggered by @coqbot did not override the status reported for the branch. Overall my recommendation is to just not push to GitLab directly unless you have a good reason to."
      },
      {
        "author": "CohenCyril",
        "date": "2019-04-08T16:14:24Z",
        "comment": "@Zimmi48 I do not even know how to push directly on gitlab, so I did not do it, or not on purpose... or at all?"
      },
      {
        "author": "erikmd",
        "date": "2019-04-08T22:47:41Z",
        "comment": "@Zimmi48 thanks for your reply!\r\n\r\nI guess the behavior is the same whether one directly push a branch to GitLab, or to GitHub because branches are mirrored to GitLab… so are you suggesting that all PRs should be opened from forks, rather than from internal, upstream branches on GitHub?\r\n(this PR #324 was indeed in the latter case, as `seq-permutations-allpairs` is an upstream branch)"
      },
      {
        "author": "Zimmi48",
        "date": "2019-04-09T09:06:30Z",
        "comment": "Thanks for the clarification. I did not realize that this branch was mirrored automatically. @erikmd You could modify your instructions in #293 to test for the branch name `pr-xxx` and also the GitHub branch name (similar to what we do in Coq's user overlays https://github.com/coq/coq/tree/master/dev/ci/user-overlays)."
      }
    ],
    "review_discussion": [
      {
        "author": "erikmd",
        "file": "mathcomp/ssreflect/.#nseq.v",
        "date": "2019-04-05T20:17:53Z",
        "comment": "@ggonthier I guess this file should not be committed"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/.#nseq.v",
        "date": "2019-04-05T21:31:38Z",
        "comment": "I will filter it out when I rebase"
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "ggonthier",
        "committer": "CohenCyril",
        "hash": "c0254eaba338a4d308b4e2f200841ff76e6b4b9a",
        "message": "Permutations and other extensions to seq; fintype documentation\n\n- Added `permutations` and some `perm_eq` lemmas suggested by @MrSet\n  in #299 (except the link to the coq lib `Permutation` predicate).\n  Use insertions to construct permutations. This definition is closer\n  to the one proposed by @MrSet, than one using rotations (it adds one\n  line to the definition of `permutations` but the proofs become a\n  little simpler.)\n\n- Added support for casts on `map` comprehension general terms.\n\n- Added `allpairs_map[lr]` suggested by @pi8027 in #314, but with\n  equational proofs; changed `allpairs_comp` to its converse\n  `map_allpairs` for consistency.\n\n- Add three `allpairs` extensionality lemmas: for the non-localised,\n  dependent localised and non-dependent localised cases; as per\n  `eq_in_map`, the latter two are equivalences.\n\n- Documented the `all2` predicate added in #224, and the view\n  combinators added in #202.\n\n- Renamed `seq2_ind` to `seq_ind2`, and weakened the induction\n  hypothesis, adding a `size` equality assumption.\n\n- Corrected the header to use `<=>` for `bool` predicate\n  documentation, and `<->` for `Prop` predicates, following the\n  library’s general convention.\n\n- Replaced the `nosimpl` in `rev` with a `Arguments simpl never`\n  directive, making it possible to merge the `Rev` section into the\n  main `Sequences` section.\n\n- Miscellaneous improvements to proof scripts and file organisation.\n\n- Correct maximal implicits of `constant`.\n\n- Fixes omitted `Prenex Implicit` declaration.\n\n- Other implicits fixes.\n\n- Fix apparent `done` regression It appears `done` now does a weaker\n  form of intros, and this broke the `dtuple_onP` proof. Updated the\n  proof to eliminate the issue.\n\n(Commit log edited by @CohenCyril during the squash.)",
        "date": "2019-04-05T23:54:16Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 323,
    "diff_summary": [
      {
        "file": "etc/utils/hierarchy_test.py",
        "status": "M",
        "additions": 699,
        "deletions": 705
      },
      {
        "file": "mathcomp/test_suite/hierarchy_test.v",
        "status": "M",
        "additions": 699,
        "deletions": 705
      }
    ],
    "state": "merged",
    "open_date": "2019-04-04T14:10:10Z",
    "update_date": "2019-04-04T18:14:30Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "6633a80f7582e050adf06157ddfd71c61533f93a",
        "message": "no output on success in test_suite/hierarchy_test.v",
        "date": "2019-04-04T14:08:53Z"
      }
    ]
  },
  {
    "author": "gares",
    "number": 322,
    "diff_summary": [
      {
        "file": "CHANGELOG.md",
        "status": "D",
        "additions": 282,
        "deletions": 271
      },
      {
        "file": "ChangeLog",
        "status": "D",
        "additions": 282,
        "deletions": 271
      }
    ],
    "state": "merged",
    "open_date": "2019-04-04T12:48:48Z",
    "update_date": "2019-04-04T15:38:04Z",
    "discussion": [
      {
        "author": "gares",
        "date": "2019-04-04T13:29:46Z",
        "comment": "I think I'm happy with the status quo.\r\nFor reviewing: https://github.com/math-comp/math-comp/blob/188c6e0c66b4b147c7fcb05aec6c3cc8d2e2bb3c/CHANGELOG.md"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "gares",
        "committer": "gares",
        "hash": "cbf4042509df8c8fa9f7359973bcce40f577d7ba",
        "message": "porting to the new format",
        "date": "2019-04-04T12:47:40Z"
      },
      {
        "committer": "web-flow",
        "hash": "657623690c9c5bb205329de4ae15715adba00961",
        "message": "Update CHANGELOG.md",
        "date": "2019-04-04T13:01:41Z"
      },
      {
        "committer": "web-flow",
        "hash": "16fb25347b21b6637b60a4c64ec8ca97e8c13d87",
        "message": "Update CHANGELOG.md",
        "date": "2019-04-04T13:11:18Z"
      },
      {
        "committer": "web-flow",
        "hash": "c0af215f92992b9d77194f21a828d240a8031f9b",
        "message": "Update CHANGELOG.md",
        "date": "2019-04-04T13:14:04Z"
      },
      {
        "committer": "web-flow",
        "hash": "bd9363f88cd1bc704a2151230ae06d4af6398c02",
        "message": "Update CHANGELOG.md",
        "date": "2019-04-04T13:17:35Z"
      },
      {
        "committer": "web-flow",
        "hash": "6fe75c881ad22d087db17aeab1ea8f2cd35d4279",
        "message": "Update CHANGELOG.md",
        "date": "2019-04-04T13:19:59Z"
      },
      {
        "committer": "web-flow",
        "hash": "c9350568da06ac29df3ad0b446612a83091f5528",
        "message": "Update CHANGELOG.md",
        "date": "2019-04-04T13:20:49Z"
      },
      {
        "committer": "web-flow",
        "hash": "9cb6b7946c346b552ed55d8737694a76cc7c2e93",
        "message": "Update CHANGELOG.md",
        "date": "2019-04-04T13:28:57Z"
      },
      {
        "committer": "web-flow",
        "hash": "42024279da1338e8853b8dbbd87dad01700d5e3f",
        "message": "Update CHANGELOG.md",
        "date": "2019-04-04T13:30:54Z"
      },
      {
        "committer": "web-flow",
        "hash": "188c6e0c66b4b147c7fcb05aec6c3cc8d2e2bb3c",
        "message": "Update CHANGELOG.md",
        "date": "2019-04-04T14:42:59Z"
      }
    ]
  },
  {
    "author": "gares",
    "number": 321,
    "diff_summary": [
      {
        "file": ".gitlab-ci.yml",
        "status": "D",
        "additions": 1,
        "deletions": 9492
      },
      {
        "file": "mathcomp/Makefile",
        "status": "D",
        "additions": 1,
        "deletions": 9492
      },
      {
        "file": "mathcomp/ssreflect/Makefile",
        "status": "D",
        "additions": 1,
        "deletions": 9492
      },
      {
        "file": "mathcomp/ssreflect/Makefile.detect-coq-version",
        "status": "D",
        "additions": 1,
        "deletions": 9492
      },
      {
        "file": "plugin/v8.6/ssrbool.v",
        "status": "D",
        "additions": 1,
        "deletions": 9492
      },
      {
        "file": "plugin/v8.6/ssreflect.ml4",
        "status": "D",
        "additions": 1,
        "deletions": 9492
      },
      {
        "file": "plugin/v8.6/ssreflect.v",
        "status": "D",
        "additions": 1,
        "deletions": 9492
      },
      {
        "file": "plugin/v8.6/ssreflect_plugin.mlpack",
        "status": "D",
        "additions": 1,
        "deletions": 9492
      },
      {
        "file": "plugin/v8.6/ssrfun.v",
        "status": "D",
        "additions": 1,
        "deletions": 9492
      }
    ],
    "state": "merged",
    "open_date": "2019-04-04T09:48:38Z",
    "update_date": "2019-04-04T14:17:52Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "gares",
        "committer": "gares",
        "hash": "2b40140bb9c9e2620214fd65144af1c0fef4083a",
        "message": "remove support for Coq 8.6",
        "date": "2019-04-04T09:48:11Z"
      }
    ]
  },
  {
    "author": "gares",
    "number": 320,
    "diff_summary": [
      {
        "file": "mathcomp/Make",
        "status": "M",
        "additions": 1,
        "deletions": 1
      },
      {
        "file": "mathcomp/test-suite/hierarchy_test.v",
        "status": "M",
        "additions": 1,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2019-04-03T13:58:46Z",
    "update_date": "2019-04-04T09:30:47Z",
    "discussion": [
      {
        "author": "maximedenes",
        "date": "2019-04-03T20:56:55Z",
        "comment": "How's that the proper fix?! What's wrong with the name \"test-suite\"?"
      },
      {
        "author": "gares",
        "date": "2019-04-03T21:42:22Z",
        "comment": "What is the real issue?"
      },
      {
        "author": "maximedenes",
        "date": "2019-04-03T21:43:25Z",
        "comment": "> What is the real issue?\r\n\r\nWell, that was my question :)"
      },
      {
        "author": "maximedenes",
        "date": "2019-04-03T21:43:49Z",
        "comment": "Is the name `test-suite` forbidden? If not, why this patch?"
      },
      {
        "author": "gares",
        "date": "2019-04-04T06:33:49Z",
        "comment": "It cannot translate to a logical path"
      },
      {
        "author": "vbgl",
        "date": "2019-04-04T08:37:19Z",
        "comment": "Will merging this make Coq CI work again? If so please do merge and investigate the root cause later. Thanks."
      },
      {
        "author": "gares",
        "date": "2019-04-04T09:30:26Z",
        "comment": "I guess so. IIRC the makefiles generated by Coq makefile ask Coq to resolve paths to logical paths for the installation in user-constribs/. Unfortunately I see no message in the log, but this directory is the only thing that changed."
      },
      {
        "author": "vbgl",
        "date": "2019-04-04T10:09:16Z",
        "comment": "Coq CI still fails:\r\n\r\n> install: cannot stat 'test_suite/hierarchy_test.glob': No such file or directory\r\nMakefile.coq:471: recipe for target 'install' failed\r\nmake[1]: *** [install] Error 1\r\nmake[1]: Leaving directory '/builds/coq/coq/_build_ci/mathcomp/mathcomp'\r\nMakefile.ci:69: recipe for target 'ci-coquelicot' failed"
      },
      {
        "author": "gares",
        "date": "2019-04-04T10:45:35Z",
        "comment": "ok, I'll at it closely then"
      },
      {
        "author": "gares",
        "date": "2019-04-04T11:18:05Z",
        "comment": "We found the culprit, @maximedenes is preparing a PR (on Coq)"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "gares",
        "committer": "gares",
        "hash": "0cdbe87262c7ca8dfabd921d9f23323990611d7a",
        "message": "rename test-suite -> test_suite to make coq happy",
        "date": "2019-04-03T13:57:34Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 318,
    "diff_summary": [
      {
        "file": "etc/utils/hierarchy-diagram",
        "status": "M",
        "additions": 1581,
        "deletions": 757
      },
      {
        "file": "etc/utils/hierarchy_test.py",
        "status": "M",
        "additions": 1581,
        "deletions": 757
      },
      {
        "file": "mathcomp/algebra/finalg.v",
        "status": "M",
        "additions": 1581,
        "deletions": 757
      },
      {
        "file": "mathcomp/solvable/extremal.v",
        "status": "M",
        "additions": 1581,
        "deletions": 757
      },
      {
        "file": "mathcomp/test_suite/hierarchy_test.v",
        "status": "M",
        "additions": 1581,
        "deletions": 757
      }
    ],
    "state": "merged",
    "open_date": "2019-04-03T11:50:24Z",
    "update_date": "2019-04-08T12:18:01Z",
    "discussion": [
      {
        "author": "pi8027",
        "date": "2019-04-05T17:20:10Z",
        "comment": "I hope that I have fixed this and found some bugs. Failures on `FinGroup.type` might be false positives.\r\nhttps://github.com/pi8027/math-comp/tree/hierarchy_test\r\n```coq\r\nFail check_join Choice.type FinGroup.type FinGroup.type.\r\nFail check_join GRing.ComRing.type CountRing.UnitRing.type CountRing.ComUnitRing.type.\r\nFail check_join Finite.type FinGroup.type FinGroup.type.\r\nFail check_join GRing.Ring.type GRing.Lmodule.type GRing.Lalgebra.type.\r\nFail check_join CountRing.ComRing.type GRing.UnitRing.type CountRing.ComUnitRing.type.\r\nFail check_join GRing.UnitRing.type CountRing.ComRing.type CountRing.ComUnitRing.type.\r\nFail check_join Countable.type FinGroup.type FinGroup.type.\r\nFail check_join CountRing.UnitRing.type GRing.ComRing.type CountRing.ComUnitRing.type.\r\nFail check_join Equality.type FinGroup.type FinGroup.type.\r\n```"
      },
      {
        "author": "pi8027",
        "date": "2019-04-05T21:43:39Z",
        "comment": "Rebased and fixed again. This one is still wrong:\r\nhttps://github.com/math-comp/math-comp/blob/6e0a9a6ad6d5022e1214a4f38348e3a8f82d45a2/mathcomp/solvable/extremal.v#L1536\r\n```\r\nCountable.sort <- Finite.sort ( extremal_group_finType )\r\n```"
      },
      {
        "author": "pi8027",
        "date": "2019-04-08T08:33:30Z",
        "comment": "@CohenCyril I think I have solved all the problems in this PR. So could you fetch my `hierarchy_test` branch and force-push here, and change the milestone to 1.8.0?"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "pi8027",
        "hash": "7583b9007c3ed23720d26a522f0d822722a11e2a",
        "message": "least common childen",
        "date": "2019-04-05T21:20:51Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "407b4c412d4a1324450d01fa09a41aad7673b1bf",
        "message": "Fix inheritance bugs in finalg and extremal",
        "date": "2019-04-05T22:04:44Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "a348deb229074be37ff31fd892a7d8835a49b566",
        "message": "New test cases generation: corrent implementation of least common children\n\nAdd a new option `-raw-inheritances` to `hierarchy-diagram` to generate an\nintermediate file for `hierarchy_test.py`. So the typical usage is:\n$ python3.5 etc/utils/hierarchy_test.py \\\n    <(etc/utils/hierarchy-diagram -raw-inheritances -R mathcomp mathcomp) \\\n    > mathcomp/test_suite/hierarchy_test.v",
        "date": "2019-04-08T08:25:00Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 317,
    "diff_summary": [
      {
        "file": "mathcomp/solvable/extremal.v",
        "status": "M",
        "additions": 744,
        "deletions": 217
      },
      {
        "file": "mathcomp/ssreflect/finfun.v",
        "status": "M",
        "additions": 744,
        "deletions": 217
      },
      {
        "file": "mathcomp/ssreflect/fintype.v",
        "status": "M",
        "additions": 744,
        "deletions": 217
      },
      {
        "file": "mathcomp/ssreflect/tuple.v",
        "status": "M",
        "additions": 744,
        "deletions": 217
      }
    ],
    "state": "open",
    "open_date": "2019-04-01T15:18:18Z",
    "update_date": "2020-11-26T05:40:48Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2019-04-01T15:59:07Z",
        "comment": "I suggested @pi8027 makes this PR of the current state of his variant of `finType` and uses this thread to follow-up on @ggonthier's remark https://github.com/math-comp/math-comp/pull/294#issuecomment-476617841 here."
      },
      {
        "author": "pi8027",
        "date": "2019-04-02T11:17:05Z",
        "comment": "@CohenCyril Thank you for the explanation.\r\n\r\n@ggonthier \r\n> I think that there are better ways of doing this that what you've experimented with,\r\n\r\nI have fixed an incompatibility issue of this. So it is better than the previous one. Do you still see any possible improvements?\r\n\r\n> however, and also that we should put some thought in making the transport reduce, if we want this to be useful for computing directly with matrices.\r\n\r\n- I don't understand \"making the transport reduce\" in this sentence.\r\n- It is experimentally confirmed that the multiplication of n×n matrices of integers can be optimized and its execution time has been improved from O(n^5) to O(n^3) in extracted code. But we would have no improvements on computations inside Coq. (CoqEAL is a better way to do it.)"
      }
    ],
    "review_discussion": [],
    "tags": [
      {
        "tag": "needs: rebase",
        "description": "PR which is not rebased: check the target is appropriate (generally master) and rebase on top of it."
      },
      {
        "tag": "needs: assignee",
        "description": "Issue or PR that needs an assignee. Please volunteer."
      }
    ],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "7ef23ddb9d70cd2c226c7f4bcb0b009257f84bd2",
        "message": "Redefine the finType by adding indexing functions to Finite.mixin_of",
        "date": "2019-11-23T03:55:40Z"
      }
    ]
  },
  {
    "author": "ejgallego",
    "number": 316,
    "diff_summary": [
      {
        "file": ".gitignore",
        "status": "A",
        "additions": 241,
        "deletions": 0
      },
      {
        "file": ".gitlab-ci.yml",
        "status": "A",
        "additions": 241,
        "deletions": 0
      },
      {
        "file": "dune-project",
        "status": "A",
        "additions": 241,
        "deletions": 0
      },
      {
        "file": "mathcomp/algebra/dune",
        "status": "A",
        "additions": 241,
        "deletions": 0
      },
      {
        "file": "mathcomp/all/dune",
        "status": "A",
        "additions": 241,
        "deletions": 0
      },
      {
        "file": "mathcomp/character/dune",
        "status": "A",
        "additions": 241,
        "deletions": 0
      },
      {
        "file": "mathcomp/dune",
        "status": "A",
        "additions": 241,
        "deletions": 0
      },
      {
        "file": "mathcomp/field/dune",
        "status": "A",
        "additions": 241,
        "deletions": 0
      },
      {
        "file": "mathcomp/fingroup/dune",
        "status": "A",
        "additions": 241,
        "deletions": 0
      },
      {
        "file": "mathcomp/solvable/dune",
        "status": "A",
        "additions": 241,
        "deletions": 0
      },
      {
        "file": "mathcomp/ssreflect/dune",
        "status": "A",
        "additions": 241,
        "deletions": 0
      }
    ],
    "state": "open",
    "open_date": "2019-03-30T17:15:52Z",
    "update_date": "2023-01-11T09:19:38Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2019-04-04T17:18:46Z",
        "comment": "@ejgallego and @gares should this be in 1.8.0 ?"
      },
      {
        "author": "ejgallego",
        "date": "2019-04-04T17:34:57Z",
        "comment": "This is experimental so people interested in the Dune build can run it, I don't think it affects the regular workflow otherwise yet."
      },
      {
        "author": "gares",
        "date": "2019-04-04T17:51:34Z",
        "comment": "This is mostly fine to me (we could merge it) but for the latter opam file. I think know why it is there, but that opam package corresponds to no real opam package. Couldn't we use the real opam packages instead (and use dune's compositional build stuff?)."
      },
      {
        "author": "ejgallego",
        "date": "2019-04-04T17:57:32Z",
        "comment": "> Couldn't we use the real opam packages instead (and use dune's compositional build stuff?).\r\n\r\nYes, in a few days, the compositional stuff is undergoing testing as we speak; so indeed I am fine to wait until I update this PR with the split package support.\r\n"
      },
      {
        "author": "CohenCyril",
        "date": "2019-04-04T18:07:29Z",
        "comment": "Let's target 1.8.1 then! Thanks"
      },
      {
        "author": "CohenCyril",
        "date": "2019-05-21T09:38:18Z",
        "comment": "Hi @ejgallego, could you please write some comments to document the build files, add tests to the CI, and maybe explain how it changes the development process (with coqide? proofgeneral?...)"
      },
      {
        "author": "ejgallego",
        "date": "2019-05-21T13:11:04Z",
        "comment": "Noted, will do @CohenCyril ."
      },
      {
        "author": "gares",
        "date": "2019-11-14T10:19:26Z",
        "comment": "ping. Also, I think that the `synopsis` field should be more precise than that."
      },
      {
        "author": "ejgallego",
        "date": "2019-11-14T11:56:16Z",
        "comment": "This is still waiting on a new Dune release for composition support."
      },
      {
        "author": "ejgallego",
        "date": "2020-03-07T04:50:18Z",
        "comment": "Ok, this is finally working, but needs an unreleased version of dune, hopefully we do a dune release soon.\r\n\r\nNote the large amount of warnings that we have to disable in order to get a clean build. A missing feature for the Coq mode is to support build profiles [that would allow a common set of flags, but I'm unsure we want it here instead of per-lib. A warning cleanup would be nice tho.\r\n\r\n> Hi @ejgallego, could you please write some comments to document the build files, add tests to the CI, and maybe explain how it changes the development process (with coqide? proofgeneral?...)\r\n\r\nI will add a CI build as soon as we get a release version of dune, I'm unsure what to write about the documentation of the build files, as far as I know these are standard and covered properly in both the Coq and dune manual.\r\n\r\nWe will add support to CoqIDE / PG very soon, that will be mostly automatic."
      },
      {
        "author": "affeldt-aist",
        "date": "2020-03-25T15:17:22Z",
        "comment": "The release managers for mathcomp 1.11.0 think that, given the fact that it depends on an unreleased version of dune (as of March 7), this PR could be postponed to milestone 1.12.0. Agreed?"
      },
      {
        "author": "ejgallego",
        "date": "2020-03-25T20:54:05Z",
        "comment": "Hi @affeldt-aist , sure, this is not urgent. Note that this PR just adds support for the dune build, I think there is still a long way before it could be considered to be the default."
      },
      {
        "author": "CohenCyril",
        "date": "2020-08-25T12:09:06Z",
        "comment": "@gares @ejgallego I do not understand the pros and cons. Do you think we could converge towards either a milestone or closure until we have a milestone?"
      },
      {
        "author": "ejgallego",
        "date": "2020-08-25T12:22:31Z",
        "comment": "No particular opinion, I guess that's a matter of preference."
      },
      {
        "author": "CohenCyril",
        "date": "2020-08-26T12:49:21Z",
        "comment": "Then I guess the switch to dune should be discussed at the next mathcomp meeting, and then possibly scheduled for some release. What do you think @ejgallego, @maximedenes, @gares, @erikmd?"
      },
      {
        "author": "ejgallego",
        "date": "2020-08-26T14:16:56Z",
        "comment": "Ok, I've updated the PR. @corwin-of-amber did some testing and found some bugs in Dune, but in principle things should work fine.\r\n\r\nPending stuff here is meta-data for the opam file generation, and reorg / cleanup of files if desired."
      },
      {
        "author": "gares",
        "date": "2020-11-15T17:08:17Z",
        "comment": "As per https://github.com/coq/ceps/pull/48#issuecomment-727585541 this PR is blocked by ocaml/dune#3210 IMO\r\nThere is also the test suite folder which does not seem to be compiled."
      }
    ],
    "review_discussion": [
      {
        "author": "gares",
        "file": ".gitlab-ci.yml",
        "date": "2020-08-26T13:28:29Z",
        "comment": "Do we really need an unreleased version of Dune?"
      },
      {
        "author": "ejgallego",
        "file": ".gitlab-ci.yml",
        "date": "2020-08-26T14:03:58Z",
        "comment": "It should work fine with recent versions, but the PR needs updating."
      },
      {
        "author": "ejgallego",
        "file": ".gitlab-ci.yml",
        "date": "2020-08-26T14:21:53Z",
        "comment": "Updated."
      },
      {
        "author": "gares",
        "file": "mathcomp/algebra/dune",
        "date": "2020-11-04T09:21:33Z",
        "comment": "The metadata is sketchy, the one in the opam files is much better. Example:\r\n```\r\nsynopsis: \"Mathematical Components Library on Algebra\"\r\ndescription: \"\"\"\r\nThis library contains definitions and theorems about discrete\r\n(i.e. with decidable equality) algebraic structures : ring, fields,\r\nordered fields, real fields,  modules, algebras, integers, rational\r\nnumbers, polynomials, matrices, vector spaces...\r\n\"\"\"\r\n```"
      },
      {
        "author": "gares",
        "file": "mathcomp/algebra/dune",
        "date": "2020-11-04T09:22:14Z",
        "comment": "I guess this metadata is used in order to generate the opam packages, but I may be wrong."
      },
      {
        "author": "ejgallego",
        "file": "mathcomp/algebra/dune",
        "date": "2020-11-04T14:31:54Z",
        "comment": "Oh indeed I didn't go the effort to update the metadata until you folks discussed if this would be accepted. Will fix."
      },
      {
        "author": "ejgallego",
        "file": "mathcomp/algebra/dune",
        "date": "2020-11-13T23:22:36Z",
        "comment": "Ok, meta-data updated, noted that I didn't enable the opam file generation yet as it would overwrite the opam files in the repos."
      },
      {
        "author": "ejgallego",
        "file": "mathcomp/algebra/dune",
        "date": "2020-11-13T23:24:41Z",
        "comment": "Actually the meta-data here is for the META file, which is not relevant here. If we have something similar to META files for Coq one day it would become relevant."
      },
      {
        "author": "gares",
        "file": ".gitlab-ci.yml",
        "date": "2022-06-01T19:51:18Z",
        "comment": "Is this branch of dune a requirement?"
      },
      {
        "author": "ejgallego",
        "file": ".gitlab-ci.yml",
        "date": "2022-06-02T08:55:24Z",
        "comment": "I guess so, if you want just a developer build (even with native) Dune 2.8 is fine, however, if you want to use Dune in Opam, detection of libraries in `user-contrib` will be in Dune 3.3 only."
      },
      {
        "author": "Alizter",
        "file": "dune-project",
        "date": "2022-06-03T10:52:16Z",
        "comment": "What are the `<>` for? Will you fill these with emails later or something?"
      },
      {
        "author": "Alizter",
        "file": ".gitlab-ci.yml",
        "date": "2022-06-05T22:40:51Z",
        "comment": "To be clear, detection of libraries in user-contrib hasn't been implemented yet, only inter-project composition of coq dune projects. Adding deps on installed libs is the next step, but I am not certain if this will make 3.3."
      },
      {
        "author": "gares",
        "file": "dune-project",
        "date": "2022-06-07T09:19:35Z",
        "comment": "The AUTHORS file got emails stripped. Imo `<>` should just be dropped"
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "ejgallego",
        "committer": "ejgallego",
        "hash": "fa60114be6b11268b12053993d28d041fac70946",
        "message": "[build] Preliminary support for building with Dune.\n\nThis PR provides preliminary support for building math-comp with Dune.\n\nWe make each library its own package, so they can be installed\nseparately.",
        "date": "2022-06-01T17:43:09Z"
      },
      {
        "author": "ejgallego",
        "committer": "ejgallego",
        "hash": "55367d8e5fda25ad54dc36d011596b5766dfaced",
        "message": "[gitlab] Temporal CI support for dune.\n\nThis would likely need more work, in particular I'd be good if the\nupstream docker image included it.",
        "date": "2022-06-01T17:44:44Z"
      },
      {
        "author": "ejgallego",
        "committer": "ejgallego",
        "hash": "9887dfa093c039f78acbcc48b69b047be11fbe9c",
        "message": "fixup",
        "date": "2022-06-04T11:42:33Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 314,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 24,
        "deletions": 0
      }
    ],
    "state": "closed",
    "open_date": "2019-03-27T12:39:13Z",
    "update_date": "2019-04-08T12:17:43Z",
    "discussion": [
      {
        "author": "pi8027",
        "date": "2019-04-03T14:02:53Z",
        "comment": "@CohenCyril If you need to fix and merge this PR asap, I'd like to give you ownership of it. I may not be able to work on this in this week."
      },
      {
        "author": "CohenCyril",
        "date": "2019-04-04T08:21:47Z",
        "comment": "> @CohenCyril If you need to fix and merge this PR asap, I'd like to give you ownership of it. I may not be able to work on this in this week.\r\n\r\nok taking ownership now"
      },
      {
        "author": "ggonthier",
        "date": "2019-04-04T08:28:22Z",
        "comment": "Actually, I've been working on a bit of refactoring of `seq` while looking into implementing some of @MrSet's suggestions #299, which has uncovered a few loose threads in `seq`: missing implicits and documentation. I've also got @pi8027 's `allpairs` extension in, so perhaps I can do the hijacking (leaving out the `permutations` development, which requires a bit more work)."
      },
      {
        "author": "CohenCyril",
        "date": "2019-04-04T11:14:55Z",
        "comment": "> Actually, I've been working on a bit of refactoring of `seq` while looking into implementing some of @MrSet's suggestions #299, which has uncovered a few loose threads in `seq`: missing implicits and documentation. I've also got @pi8027 's `allpairs` extension in, so perhaps I can do the hijacking (leaving out the `permutations` development, which requires a bit more work).\r\n\r\nDo you think it will be ready soon? with @gares we planned to release this afternoon..."
      },
      {
        "author": "CohenCyril",
        "date": "2019-04-04T11:16:37Z",
        "comment": "PS: I did not see your comment, so I did this: https://github.com/CohenCyril/math-comp/blob/allpairs-lemma/mathcomp/ssreflect/seq.v"
      },
      {
        "author": "ggonthier",
        "date": "2019-04-04T11:34:03Z",
        "comment": "I've been working on a separate branch, which I've just published (sew-permutations-allpairs). I'm just checking the MC compile, then you can either push it here or turn it into a PR that replaces this one.\r\n"
      },
      {
        "author": "ggonthier",
        "date": "2019-04-04T11:37:58Z",
        "comment": "There are still improvements I want to explore with `permutations`, but that can become a later PR."
      },
      {
        "author": "CohenCyril",
        "date": "2019-04-04T12:04:23Z",
        "comment": "> I'm just checking the MC compile\r\n\r\nIt does not compile.\r\nCould you please submit a PR rebased on master?"
      },
      {
        "author": "ggonthier",
        "date": "2019-04-04T12:10:35Z",
        "comment": "I did notice, and I'm digging into it because I am merged with master, and things break in an unrelated file."
      },
      {
        "author": "ggonthier",
        "date": "2019-04-04T12:46:19Z",
        "comment": "Fine, @CohenCyril, it's rebased and compiles. Not sure what happened in `primitive_action`; could be an issue with `trivial` rather than `intro`.\r\n   On a separate issue, would it be possible for `hierarchy_test` _NOT_ to dump tons of diagnostics on successful compilations?"
      },
      {
        "author": "CohenCyril",
        "date": "2019-04-04T12:51:59Z",
        "comment": "> On a separate issue, would it be possible for `hierarchy_test` _NOT_ to dump tons of diagnostics on successful compilations?\r\n\r\nyes!"
      },
      {
        "author": "CohenCyril",
        "date": "2019-04-04T13:42:21Z",
        "comment": "Dear @ggonthier, the branch https://github.com/math-comp/math-comp/compare/seq-permutations-allpairs looks like it is *merged* with master and not *rebased* on it.\r\nAdditionally it is failing because of the use of the new ssreflect clear behavior, which was not yet available in 8.7 and 8.8 (we are dropping support for 8.6 in PR #321)."
      },
      {
        "author": "CohenCyril",
        "date": "2019-04-04T14:10:55Z",
        "comment": "> > On a separate issue, would it be possible for `hierarchy_test` _NOT_ to dump tons of diagnostics on successful compilations?\r\n> \r\n> yes!\r\n\r\nI addressed it in #323 "
      },
      {
        "author": "ggonthier",
        "date": "2019-04-04T15:05:00Z",
        "comment": "I've rebased (turns out git had inserted a no-op back merge of the remote, which threw off any further rebasing) and turned a branch into a PR, so I can tell where the offending clear is...\r\nI'll probably en up using the auto squash, since my git -i install on macOS is broken (sic)."
      },
      {
        "author": "CohenCyril",
        "date": "2019-04-04T15:10:40Z",
        "comment": "> I'll probably en up using the auto squash, since my git -i install on macOS is broken (sic).\r\n\r\nI can squash it for you. (I will also chase spurious spaces (some remained in your previous commits))\r\n\r\nAlso, I think you did not take into account my last remark:\r\n\r\n> Additionally it is failing because of the use of the new ssreflect clear behavior, which was not yet available in 8.7 and 8.8 (we are dropping support for 8.6 in PR #321).\r\n\r\nso the CI will fail again on 8.7 and 8.8..."
      },
      {
        "author": "ggonthier",
        "date": "2019-04-04T15:12:35Z",
        "comment": "I did - I'm waiting for the CI to fail so I know what to fix."
      },
      {
        "author": "CohenCyril",
        "date": "2019-04-04T15:14:34Z",
        "comment": "> I did - I'm waiting for the CI to fail so I know what to fix.\r\n\r\nI know what to fix:\r\n\r\n```coq\r\n-elim: s => //= x s IHs /andP[s'x {}/IHs-IHs]; rewrite factS -IHs mulnC.\r\n+elim: s => //= x s IHs /andP[s'x /IHs-{IHs}IHs]; rewrite factS -IHs mulnC.\r\n```\r\n \r\n```coq\r\n-  by move=> m n /subnK<-; elim: {n}(n - m) => // n IHn {}/IHn; apply: PsS.\r\n+  by move=> m n /subnK<-; elim: {n}(n - m) => // n IHn /IHn; apply: PsS.\r\n```"
      },
      {
        "author": "CohenCyril",
        "date": "2019-04-04T15:15:54Z",
        "comment": "maybe you want to fix it in a slightly different way so that no *duplication of clear* warnings are triggered on Coq 8.9 :laughing: "
      },
      {
        "author": "ggonthier",
        "date": "2019-04-04T15:22:40Z",
        "comment": "Ok, fixed (blindly)."
      },
      {
        "author": "ggonthier",
        "date": "2019-04-04T15:58:43Z",
        "comment": "Please do go ahead, then, by all means."
      }
    ],
    "review_discussion": [
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2019-04-03T12:28:46Z",
        "comment": "I think one can omit the `_dep_` here since high order unification in the non-dependent case will fall in Miller pattern unification while rewriting both ways... @ggonthier am I right?"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2019-04-03T12:29:03Z",
        "comment": "same here"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2019-04-03T12:45:15Z",
        "comment": "the proof is a one liner but the statement can be generalized:\r\n```coq\r\nLemma eq_in_allpairs R (f g : forall x, T x -> R) s t :\r\n  (forall x, x \\in s -> {in t x, f x =1 g x}) <->\r\n  [seq f x y | x <- s, y <- t x] = [seq g x y | x <- s, y <- t x].\r\nProof.\r\nsplit=> fg; first by congr (flatten _); do 2!apply/eq_in_map=> ??; apply: fg.\r\nmove=> x xs; apply/eq_in_map; apply/eq_in_map: x xs.\r\napply: eq_from_flatten_shape => //.\r\nby rewrite /shape -!map_comp/=; apply: eq_map => x/=; rewrite !size_map.\r\nQed.\r\n```\r\nand specialized to extensional equality everywhere\r\n```coq\r\nLemma eq_allpairs R (f g : forall x, T x -> R) s t : (forall x, f x =1 g x) ->\r\n  [seq f x y | x <- s, y <- t x] = [seq g x y | x <- s, y <- t x].\r\nProof. by move=> fg; apply/eq_in_allpairs => ????; apply: fg. Qed.\r\n```\r\n"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2019-04-03T13:13:08Z",
        "comment": "Correct; also, this should go straight in the `AllPairsDep` section, and the proof should be `rewrite -map_comp`."
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2019-04-03T13:18:38Z",
        "comment": "Likewise, and the proof should be `rewrite -(eq_map (fun=> map_comp _ _))`\r\nAlso, the `allpairs_comp` lemma should be taken out of the section, proved with `rewrite map_flatten allpairs_mapl allpairs_mapr.`, replaced by its converse (exchanging LHS and RHS), and renamed `map_allpairs`: it cannot be used left-to-right, because the `funcomp` constant does not appear."
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2019-04-03T13:23:18Z",
        "comment": "That's not right, because `eq_allpairs` should not require `T : eqType`.\r\nAlso, there is a point to have a non-dependent version of `eq_in_allpairs`, because the function equality can be stated differently in this case as `{in s & t, f =2 g}`, so the lemma above should be called `eq_in_allpairs_dep`."
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2019-04-03T13:27:47Z",
        "comment": "Also, I strongly object to your practice of juxtaposing `?` patterns as in `????` above:\r\n(a) This is inviting trouble should either Coq or user libraries define a `??` symbol.\r\n(b) It forgoes a basically free opportunity to better document the proof script."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2019-04-03T13:48:58Z",
        "comment": "> renamed `map_allpairs`:\r\n\r\nbecause of this, I suggest this goes in 1.8.0 in order not to introduce backward incompatibilities with a future 1.8.1 version"
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "9e2a9d338cd8d29bdce972423f40a290e20d4be9",
        "message": "Add allpairs_dep_map(l|r) and eq_in_allpairs",
        "date": "2019-04-02T08:47:40Z"
      }
    ]
  },
  {
    "author": "erikmd",
    "number": 307,
    "diff_summary": [
      {
        "file": ".gitlab-ci.yml",
        "status": "M",
        "additions": 210,
        "deletions": 37
      },
      {
        "file": "Dockerfile",
        "status": "M",
        "additions": 210,
        "deletions": 37
      },
      {
        "file": "Dockerfile.make",
        "status": "M",
        "additions": 210,
        "deletions": 37
      }
    ],
    "state": "merged",
    "open_date": "2019-03-22T03:58:08Z",
    "update_date": "2019-04-17T13:31:28Z",
    "discussion": [
      {
        "author": "erikmd",
        "date": "2019-03-22T12:05:32Z",
        "comment": "Rebased on #306"
      },
      {
        "author": "CohenCyril",
        "date": "2019-04-17T11:18:50Z",
        "comment": "Waiting for #306's merge into master to be green..."
      },
      {
        "author": "erikmd",
        "date": "2019-04-17T13:18:34Z",
        "comment": "@CohenCyril\r\n> Waiting for #306's merge into master to be green...\r\n\r\nThanks Cyril ! this is indeed the case:\r\nhttps://gitlab.com/math-comp/math-comp/pipelines/57204553\r\nand the images have been successfully pushed to https://hub.docker.com/r/mathcomp/mathcomp-dev/tags"
      },
      {
        "author": "CohenCyril",
        "date": "2019-04-17T13:32:01Z",
        "comment": "@erikmd done! thank you for all of this :+1: "
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "erikmd",
        "committer": "erikmd",
        "hash": "19ab5bad5ceece0680d94114f3bef9b2a4b0c195",
        "message": "Add commentary sections & Swap order of .make-build, .opam-build",
        "date": "2019-04-16T13:22:28Z"
      },
      {
        "author": "erikmd",
        "committer": "erikmd",
        "hash": "c84bc1c92a9e77103a88a60d05f9f6ad07b64b5c",
        "message": "Refactor jobs: Split .opam-build & Create .docker-deploy\n\n* The latter template job is trusted and only runs:\n  - in branch master,\n  - if all build *and* test jobs were successful\n    (major change in the deployment's condition)\n\n* The other jobs are not tagged with \"environment: name: deployment\",\n  so they won't be able to read scoped protected variables.\n\n* href: https://gitlab.com/help/ci/variables/README.md#limiting-environment-scopes-of-variables-premium",
        "date": "2019-04-16T13:23:06Z"
      },
      {
        "author": "erikmd",
        "committer": "erikmd",
        "hash": "f4cc7395ed95e433e836f6cfcf65d849e7629024",
        "message": "Print more debug information",
        "date": "2019-04-16T13:23:06Z"
      },
      {
        "author": "erikmd",
        "committer": "erikmd",
        "hash": "77ed8b94fd552e24de6b6824aab4996bf1731aa5",
        "message": "Swap the deploy and test stages\n\nso the images:\n- mathcomp/mathcomp-dev:coq-8.7\n- mathcomp/mathcomp-dev:coq-8.8\n- mathcomp/mathcomp-dev:coq-8.9\n- mathcomp/mathcomp-dev:coq-dev\nwill be pushed to Docker Hub even if a third-party library CI fails.",
        "date": "2019-04-16T13:23:32Z"
      },
      {
        "author": "erikmd",
        "committer": "erikmd",
        "hash": "a03e0cb0ff40afabcaccba7f764076355ca82962",
        "message": "Don't run \"opam clean -c\" to workaround ocaml/opam#3828",
        "date": "2019-04-16T13:41:16Z"
      },
      {
        "author": "erikmd",
        "committer": "erikmd",
        "hash": "76559870c8a81a9e3ba3f1242e60ff8e5f53c03a",
        "message": "Detail: Print a more legible description for the cloned external libraries",
        "date": "2019-04-16T13:42:52Z"
      },
      {
        "author": "erikmd",
        "committer": "erikmd",
        "hash": "c11764ca767ce6c306fef3892a78f0114e5e818c",
        "message": "[ci] Add tests with more libraries\n\n- coq-mathcomp-odd-order.dev + coq.dev\n- coq-mathcomp-bigenough.dev, coq-{8.7, 8.8, 8.9, dev}\n- coq-mathcomp-finmap.dev, coq-{8.7, 8.8, 8.9, dev}\n\nThe configs below are commented-out as the upstream repos' opam is not\nyet marked as compatible with mathcomp.dev (and Travis CI doesn't test\nit with mathcomp-dev images)\n\n # - coq-mathcomp-real-closed.dev, coq-{8.7, 8.8, 8.9, dev}\n # - coq-mathcomp-analysis.dev, coq-{8.8, 8.9, dev}\n\nClose math-comp/math-comp#245",
        "date": "2019-04-16T13:42:52Z"
      }
    ]
  },
  {
    "author": "erikmd",
    "number": 306,
    "diff_summary": [
      {
        "file": ".gitlab-ci.yml",
        "status": "M",
        "additions": 86,
        "deletions": 37
      },
      {
        "file": "Dockerfile",
        "status": "M",
        "additions": 86,
        "deletions": 37
      },
      {
        "file": "Dockerfile.make",
        "status": "M",
        "additions": 86,
        "deletions": 37
      }
    ],
    "state": "merged",
    "open_date": "2019-03-22T03:52:54Z",
    "update_date": "2019-04-17T09:20:33Z",
    "discussion": [
      {
        "author": "ejgallego",
        "date": "2019-03-22T04:08:43Z",
        "comment": "I'd say it looks really good, congrats!\r\n\r\nAbout testing, I'm ccing @vbgl and @SkySkimmer who are experts here and may know a bit better how they do test."
      },
      {
        "author": "SkySkimmer",
        "date": "2019-03-22T08:22:26Z",
        "comment": ">the semantics of the CI is slightly changed as mathcomp-dev for coq-(8.6, 8.7, 8.8, 8.9, dev) will be pushed to Docker Hub only if the build stage and the test stage were both successful. This is the breaking change of the PR, but I put it in the Pros list as it seems something desirable (?)\r\n\r\nIf you end up considering it a con you should be able to change it by using `when: always` https://docs.gitlab.com/ee/ci/yaml/#when\r\n\r\nI have no expertise in deploy/environment."
      },
      {
        "author": "erikmd",
        "date": "2019-03-22T12:04:16Z",
        "comment": "@SkySkimmer \r\n> If you end up considering it a con you should be able to change it by using `when: always`\r\n\r\nThanks! this could be a useful work-around, but on the other hand, if a job from `build` with a given version of Coq fails:\r\n* all other images would be pushed, which might be unwanted,\r\n* and 2 jobs would be failing (e.g. coq-8.7 and mathcomp-dev:coq-8.7), which would clutter a bit coqbot's report.\r\n\r\nSo I end up implementing another solution (swapping the `deploy` and `test` stages) that should address these two drawbacks…"
      },
      {
        "author": "erikmd",
        "date": "2019-04-02T15:43:15Z",
        "comment": "@CohenCyril I've noted that #307 now has a conflict so FYI I first rebased #306 on master and took the opportunity to improve details (removing unnecessary `=` in echo commands) and push a clone of the repo in a temporary public gitlab repo to test the new deployment procedure (temporarily to https://hub.docker.com/r/erikmd/math-comp-env-1). If this works I'll rebase #307 on #306 this evening and you'll be able to merge both PRs..."
      },
      {
        "author": "erikmd",
        "date": "2019-04-02T23:54:42Z",
        "comment": "@CohenCyril it was a good idea to test the new deployment procedure, because it seems it didn't work out of the box :)\r\nI identified two small issues (one regarding a spurious quote character, and one regarding the procedure itself, following @ejgallego's advice to rely on a deployment `environment`)\r\nI fixed the first issue but I'll need more time to finish this on tomorrow; anyway this approach indeed seems promising.\r\nSee you, Erik"
      },
      {
        "author": "CohenCyril",
        "date": "2019-04-03T07:46:40Z",
        "comment": "Thanks a lot @erikmd, waiting for your next input."
      },
      {
        "author": "CohenCyril",
        "date": "2019-04-08T10:53:29Z",
        "comment": "Hi! @erikmd any news?"
      },
      {
        "author": "erikmd",
        "date": "2019-04-08T22:07:35Z",
        "comment": "Hi @CohenCyril ! sorry, I've not had enough time to debug/finalize the new CI deployment setup…\r\nBut this task is in my todo list for this week."
      },
      {
        "author": "erikmd",
        "date": "2019-04-16T14:01:01Z",
        "comment": "Hi @CohenCyril, I've finished upgrading the `coqorg/coq` images so they now rely on opam 2.0.4:\r\n- https://hub.docker.com/r/coqorg/base\r\n- https://hub.docker.com/r/coqorg/coq\r\n\r\nand the `coqorg/coq:dev` images now contain some metadata labels to know more easily what is the underlying git commit hash of coq: https://microbadger.com/images/coqorg/coq:dev\r\n\r\nThen I pursued my experiments on #306 and #307 and the deploy configuration seems very fine now…\r\ni've rebased on `master` (to take into account the removal of `coq-8.6` jobs) and force-pushed so these two CI pipelines are now pending:\r\n- https://gitlab.com/math-comp/math-comp/pipelines/57070048 (for #306)\r\n- https://gitlab.com/math-comp/math-comp/pipelines/57070300 (for #307)\r\n\r\nFYI I've switched again the protected variables related to Docker Hub to *scoped protected variable*s w.r.t. the deployment environment, which implies this PR should be merged in `master` **before** other PRs (so that upcoming merges can benefit from the deploy to <https://hub.docker.com/r/mathcomp/mathcomp-dev>).\r\n\r\nI propose that you merge #306 then #307 when the corresponding pipelines will be green…\r\n\r\nKind regards, Erik"
      },
      {
        "author": "CohenCyril",
        "date": "2019-04-16T14:09:35Z",
        "comment": "@erikmd CI status are not displayed in PRs anymore... (they did this morning AFAIK) would you know why?"
      },
      {
        "author": "erikmd",
        "date": "2019-04-16T14:16:12Z",
        "comment": "@CohenCyril indeed, I don't know why…\r\nI checked the items from [this checklist](https://github.com/coq/bot#rely-on-coqbot-to-synchronize-your-github-prs-with-your-gitlab-project) (for the GitLab side) and saw nothing special…\r\n\r\n@Zimmi48 do you have an idea of what could cause that lack of CI status reporting?"
      },
      {
        "author": "Zimmi48",
        "date": "2019-04-16T14:58:53Z",
        "comment": "Sorry I didn't see the issue. Can you link me to a PR where there is a problem?"
      },
      {
        "author": "CohenCyril",
        "date": "2019-04-16T15:03:11Z",
        "comment": "> Sorry I didn't see the issue. Can you link me to a PR where there is a problem?\r\n\r\n@Zimmi48 The problem lasted the whole afternoon, but now it seems solved: I cannot find a PR with this problem anymore..."
      },
      {
        "author": "Zimmi48",
        "date": "2019-04-16T15:18:25Z",
        "comment": "I had a look at the log. It looks like GitLab didn't send any webhooks during the afternoon, until 16:30 when a lot of delayed webhooks were emitted. Confirmed this is was a general GitLab problem: https://twitter.com/gitlabstatus/status/1118076245688737793"
      },
      {
        "author": "erikmd",
        "date": "2019-04-16T16:21:32Z",
        "comment": ":+1: The CI for this first PR was green :)"
      },
      {
        "author": "erikmd",
        "date": "2019-04-16T17:01:37Z",
        "comment": "And that of #307 was green as well; so I guess both PRs are ready.\r\nCc @CohenCyril "
      },
      {
        "author": "CohenCyril",
        "date": "2019-04-17T09:19:17Z",
        "comment": "Thanks @erikmd !!\r\nDo you know how to configure github to alert users that changes to this file might leak a secret variable and should hence be handled very carefully?"
      },
      {
        "author": "ejgallego",
        "date": "2019-04-17T09:38:05Z",
        "comment": "@CohenCyril you can use a codeowners file so every commit touching gitlab-ci.yml requires a review; other than there is not further check.\r\n\r\nMaybe a worthwhile feature request for gitlab would be to require a signed gitlab-ci.yml file"
      },
      {
        "author": "erikmd",
        "date": "2019-04-17T09:41:54Z",
        "comment": ">Do you know how to configure github to alert users that changes to this file might leak a secret variable and should hence be handled very carefully?\r\n\r\nBeyond Emilio's very relevant suggestion on codeowners, there are now three restrictions to prevent something like `echo $HUB_TOKEN` to be effective in an external PR or in `master`:\r\n\r\n- `$HUB_TOKEN` is only available in the protected branch `master` (so, after the review+merge);\r\n- it is only available in jobs at the end of the file, which contain the `environment: …` key;\r\n- and finally I enabled a recently implemented protection in GitLab to mask the corresponding value if ever it were printed in the log:\r\n    - https://gitlab.com/gitlab-org/gitlab-ce/issues/13784\r\n    - https://gitlab.com/gitlab-org/gitlab-ce/merge_requests/25476\r\n    - https://gitlab.com/gitlab-org/gitlab-ce/merge_requests/26751"
      },
      {
        "author": "ejgallego",
        "date": "2019-04-17T09:44:27Z",
        "comment": "Yes so indeed as @erikmd points out, the main purpose of the PR is that now the change leaking information would have to reach master, thus indeed committers to the main branch should be careful of course with changes to the CI setup."
      },
      {
        "author": "CohenCyril",
        "date": "2019-04-17T11:17:17Z",
        "comment": "@ejgallego \r\n> indeed committers to the main branch should be careful of course with changes to the CI setup.\r\n\r\nthis was my point\r\n\r\n@erikmd \r\n\r\n\r\n> and finally I enabled a recently implemented protection in GitLab to mask the corresponding value if ever it were printed in the log:\r\n\r\nwow ok, I did not know about this... very useful (but I guess it would only prevent mistakes, not deliberate hacking attempts, which could encore the token so that gitlab does not filter it out?)"
      },
      {
        "author": "Zimmi48",
        "date": "2019-04-17T12:14:40Z",
        "comment": "Cool new feature indeed! Unfortunately, we can't use it for our secret variables in the Coq project because they don't respect the acceptable format. So we'll have to continue relying on protected + environment restricted + being careful about not printing the environment in deployment jobs."
      },
      {
        "author": "erikmd",
        "date": "2019-04-17T15:25:37Z",
        "comment": "Just to complement @ejgallego's comment:\r\n> the main purpose of the PR is that now the change leaking information would have to reach master\r\n\r\nthis was already the case thanks to the protected variables, but now only privileged `deploy` jobs can read  that variable in `master` builds.\r\n\r\nAlso, another useful change is brought by #306: the deployment of `mathcomp/mathcomp-dev:coq-{8.7,8.8,8.9,dev}` will occur only if the `build` stage of math-comp succeeds for these 4 versions of Coq, so this ensures that the version of math-comp available in the 4 Docker images stays consistent anytime. But of course, this deployment condition does not require that the `test` stage succeeds.\r\n\r\n@CohenCyril \r\n> (but I guess it would only prevent mistakes, not deliberate hacking attempts, which could encore the token so that gitlab does not filter it out?)\r\n\r\nIndeed, but these hacking attempts should anyway be implemented by adding code in the deploy jobs of the `.gitlab-ci.yml` file… so this would be noticeable for the person that merges the PR."
      },
      {
        "author": "CohenCyril",
        "date": "2019-04-17T15:56:37Z",
        "comment": "> Indeed, but these hacking attempts should anyway be implemented by adding code in the deploy jobs of the `.gitlab-ci.yml` file… so this would be noticeable for the person that merges the PR\r\n\r\n@erikmd this assumes that anyone with merge rights is aware of this security breach... and it is not the case yet."
      },
      {
        "author": "ejgallego",
        "date": "2019-04-17T16:02:09Z",
        "comment": "@CohenCyril well people with merge rights should certainly refuse to merge if they don't understand what a change in gitlab-ci.yml is doing, right?"
      },
      {
        "author": "CohenCyril",
        "date": "2019-04-17T16:06:27Z",
        "comment": "> @CohenCyril well people with merge rights should certain refuse to merge if they don't understand what a change in gitlab-ci.yml is doing, right?\r\n\r\nright!"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "erikmd",
        "committer": "erikmd",
        "hash": "19ab5bad5ceece0680d94114f3bef9b2a4b0c195",
        "message": "Add commentary sections & Swap order of .make-build, .opam-build",
        "date": "2019-04-16T13:22:28Z"
      },
      {
        "author": "erikmd",
        "committer": "erikmd",
        "hash": "c84bc1c92a9e77103a88a60d05f9f6ad07b64b5c",
        "message": "Refactor jobs: Split .opam-build & Create .docker-deploy\n\n* The latter template job is trusted and only runs:\n  - in branch master,\n  - if all build *and* test jobs were successful\n    (major change in the deployment's condition)\n\n* The other jobs are not tagged with \"environment: name: deployment\",\n  so they won't be able to read scoped protected variables.\n\n* href: https://gitlab.com/help/ci/variables/README.md#limiting-environment-scopes-of-variables-premium",
        "date": "2019-04-16T13:23:06Z"
      },
      {
        "author": "erikmd",
        "committer": "erikmd",
        "hash": "f4cc7395ed95e433e836f6cfcf65d849e7629024",
        "message": "Print more debug information",
        "date": "2019-04-16T13:23:06Z"
      },
      {
        "author": "erikmd",
        "committer": "erikmd",
        "hash": "77ed8b94fd552e24de6b6824aab4996bf1731aa5",
        "message": "Swap the deploy and test stages\n\nso the images:\n- mathcomp/mathcomp-dev:coq-8.7\n- mathcomp/mathcomp-dev:coq-8.8\n- mathcomp/mathcomp-dev:coq-8.9\n- mathcomp/mathcomp-dev:coq-dev\nwill be pushed to Docker Hub even if a third-party library CI fails.",
        "date": "2019-04-16T13:23:32Z"
      },
      {
        "author": "erikmd",
        "committer": "erikmd",
        "hash": "a03e0cb0ff40afabcaccba7f764076355ca82962",
        "message": "Don't run \"opam clean -c\" to workaround ocaml/opam#3828",
        "date": "2019-04-16T13:41:16Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 305,
    "diff_summary": [
      {
        "file": "ChangeLog",
        "status": "M",
        "additions": 64,
        "deletions": 17
      },
      {
        "file": "mathcomp/character/mxabelem.v",
        "status": "M",
        "additions": 64,
        "deletions": 17
      },
      {
        "file": "mathcomp/ssreflect/bigop.v",
        "status": "M",
        "additions": 64,
        "deletions": 17
      },
      {
        "file": "mathcomp/ssreflect/binomial.v",
        "status": "M",
        "additions": 64,
        "deletions": 17
      },
      {
        "file": "mathcomp/ssreflect/finset.v",
        "status": "M",
        "additions": 64,
        "deletions": 17
      }
    ],
    "state": "merged",
    "open_date": "2019-03-21T00:07:59Z",
    "update_date": "2019-03-26T12:48:39Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2019-03-21T08:09:30Z",
        "comment": "I think `sumnE : sumn r = \\sum_(i <- r) i` is missing."
      },
      {
        "author": "ggonthier",
        "date": "2019-03-21T14:10:52Z",
        "comment": "I'd say `sumnE` is the only addition that can really be justified; its proof is `rewrite unlock`. The other lemmas can be readily derived from it, perhaps with a specialisation of `big_map` to `F := id` to help with rewriting in the right-to-left direction. In the same vein we could provide a lemma to rewrite a `foldr` into a `bigop`.\r\n  Unless there's a strong use case I'm missing, it hardly seems reasonable to specialise `sumnE` to every kind of list comprehension notation under the sun. On the subject of comprehensions, the current library is missing lemmas for the `image` seq comprehension, though `finset` does have some for `imset`, so perhaps we should provide those."
      },
      {
        "author": "CohenCyril",
        "date": "2019-03-21T18:08:39Z",
        "comment": "@ggonthier I updated the PR to reflect your comment, and I agree with you about not multiplying specializations. I also added elimination of `foldr`, and also of `foldl` for completeness."
      },
      {
        "author": "CohenCyril",
        "date": "2019-03-26T08:54:55Z",
        "comment": "@ggonthier happy with the current result?"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "9c8f15339e719321d1a04360d3d2052ecd8bb5a2",
        "message": "Compat of sumn with bigop and renaming dep to cond when appropriate",
        "date": "2019-03-23T23:04:29Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 304,
    "diff_summary": [
      {
        "file": "ChangeLog",
        "status": "M",
        "additions": 134,
        "deletions": 55
      },
      {
        "file": "mathcomp/ssreflect/bigop.v",
        "status": "M",
        "additions": 134,
        "deletions": 55
      },
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 134,
        "deletions": 55
      }
    ],
    "state": "merged",
    "open_date": "2019-03-21T00:07:14Z",
    "update_date": "2019-03-26T21:19:32Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2019-03-22T21:38:06Z",
        "comment": "@ggonthier I advocate for leaving the duplications for `allpairs` for backward compatibility purposes."
      },
      {
        "author": "ggonthier",
        "date": "2019-03-23T17:06:10Z",
        "comment": "You have a point, but since the theory no longer concerns the actual `allpairs` constant, perhaps a better solution would be to repurpose it as the general tag for lemmas about the two-variable comprehension notation, using a '_dep' suffix to identify lemmas that cover the dependent case when there is a specific lemma for the non-dependent case, consistent with the rest of MathComp. That means `allsigs` would not be used, so you'll have to rename the PR..."
      },
      {
        "author": "CohenCyril",
        "date": "2019-03-26T11:54:15Z",
        "comment": "@ggonthier happy with the result?"
      }
    ],
    "review_discussion": [
      {
        "author": "ggonthier",
        "file": "mathcomp/ssreflect/bigop.v",
        "date": "2019-03-26T12:41:17Z",
        "comment": "Hadn't we agreed to generalise `sigT I2` to an arbitrary intermediate type, and `Tagged I2` to an arbitrary function?"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2019-03-26T12:42:38Z",
        "comment": "the `m` here now depends on the `x` index."
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2019-03-26T12:47:19Z",
        "comment": "This should be `eq_allpairs_dep`."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2019-03-26T12:52:57Z",
        "comment": "I hesitated, but the non dependent version is (and was) `mem_allpairs` and the LHS and RHS indeed have head symbol `_ \\in _`."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/bigop.v",
        "date": "2019-03-26T12:53:53Z",
        "comment": "Oh, yes, I forgot about this file, thanks for the reminder!"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2019-03-26T12:55:55Z",
        "comment": "Sorry, I later agreed with you and meant to erase that comment."
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2019-03-26T12:57:21Z",
        "comment": "The `/` should come after the `s` _and_ `t` arguments: we only want to auto-expand the fully applied definition."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2019-03-26T16:34:50Z",
        "comment": "actually, not only `m`, but the whole sequence..."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2019-03-26T17:13:59Z",
        "comment": "thus I rephrased once more not to give too many details..."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2019-03-26T17:14:36Z",
        "comment": "I must have been very distracted when I did this..."
      },
      {
        "author": "ggonthier",
        "file": "ChangeLog",
        "date": "2019-03-26T17:22:00Z",
        "comment": "As `all pairs_dep` is now a secondary definition, so this should be rephrased to emphasize that the notation is now central, and `allpairs` is a self-expanding definition."
      },
      {
        "author": "CohenCyril",
        "file": "ChangeLog",
        "date": "2019-03-26T18:47:29Z",
        "comment": "done"
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "d6dbcfe8edacdf00df988843ed6b74ecfc2db744",
        "message": "Refactoring allpairs to handle the dependent version as well",
        "date": "2019-03-26T18:46:39Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 303,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/finfun.v",
        "status": "M",
        "additions": 5,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2019-03-21T00:04:38Z",
    "update_date": "2019-03-22T13:52:55Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "d08fafcab966bfc5dd16adcf028219a0c83bf035",
        "message": "adding ffun0",
        "date": "2019-03-20T23:58:18Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 302,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 146,
        "deletions": 0
      },
      {
        "file": "mathcomp/ssreflect/finset.v",
        "status": "M",
        "additions": 146,
        "deletions": 0
      },
      {
        "file": "mathcomp/ssreflect/ssrnat.v",
        "status": "M",
        "additions": 146,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2019-03-21T00:04:33Z",
    "update_date": "2019-06-11T08:28:23Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2019-06-04T11:29:25Z",
        "comment": "@ggonthier let's merge?"
      },
      {
        "author": "ggonthier",
        "date": "2019-06-04T12:08:43Z",
        "comment": "@CohenCyril almost there, see last comment..."
      }
    ],
    "review_discussion": [
      {
        "author": "ggonthier",
        "file": "mathcomp/ssreflect/finset.v",
        "date": "2019-05-21T16:19:03Z",
        "comment": "It's not _the_ fixpoint of F, but the _(least)_ fixed point of F; similarly for \"cofixpoint\""
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/ssreflect/finset.v",
        "date": "2019-05-21T16:19:16Z",
        "comment": "`funsetC` should be documented"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/ssreflect/finset.v",
        "date": "2019-05-21T16:25:24Z",
        "comment": "The notations for `n` and `G` are not helpful."
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/ssreflect/finset.v",
        "date": "2019-05-21T16:32:56Z",
        "comment": "You shouldn't use the name of a local, temporary, notation as a part of a published lemma name. Find a better name (`subseq_iterS`, maybe?) or make the lemma transient (using `Let`)."
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/ssreflect/finset.v",
        "date": "2019-05-21T16:34:43Z",
        "comment": "As above, but here you do want to export the lemma; `iter_funset_mono` maybe?"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/ssreflect/finset.v",
        "date": "2019-05-21T18:14:14Z",
        "comment": "A `Let` here would yield more readable discharged lemma statements."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/finset.v",
        "date": "2019-06-03T12:07:58Z",
        "comment": "you are right! should I also rename `fixset` in `lfixset` and `cofixset` in `gfixset`?"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/ssreflect/finset.v",
        "date": "2019-06-03T12:15:57Z",
        "comment": "No, `fixset` and `cofixset` are fine; it's standard for the unqualified object to be the least one (e.g., `pdiv`). But the documentation should nevertheless be precise."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/finset.v",
        "date": "2019-06-03T12:24:09Z",
        "comment": "I am picking `subset_iter`"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/finset.v",
        "date": "2019-06-03T12:26:27Z",
        "comment": "Sadly, it did not change the discharged lemma statements."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/finset.v",
        "date": "2019-06-03T12:26:43Z",
        "comment": "I like `subset_iterS`, let's keep it."
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/ssreflect/finset.v",
        "date": "2019-06-03T14:26:03Z",
        "comment": "My bad - `Let` used to be discharged as a `let`, but now it's inlined... without beta reductions apparently. Nevertheless `Let` is more natural (with `Arguments /` if you need the auto expansion, which I suspect is not the case here)."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/finset.v",
        "date": "2019-06-03T14:27:59Z",
        "comment": "Yes, I put a `Let` anyway."
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/ssreflect/finset.v",
        "date": "2019-06-04T12:07:58Z",
        "comment": "`Let iterF i := iter i F set0` would be more idiomatic."
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "3e850fa6f1c37656b8ce019a0ffbed63663557d2",
        "message": "Fixpoint theorems in finset",
        "date": "2019-06-04T13:20:39Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 301,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 3,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2019-03-21T00:04:22Z",
    "update_date": "2019-03-26T10:46:18Z",
    "discussion": [
      {
        "author": "amahboubi",
        "date": "2019-03-21T06:35:59Z",
        "comment": "Fine with me."
      },
      {
        "author": "gares",
        "date": "2019-03-22T13:22:26Z",
        "comment": "@amahboubi you happen to be the assignee, please merge at your convenience"
      },
      {
        "author": "CohenCyril",
        "date": "2019-03-26T10:33:58Z",
        "comment": "@gares ok now?"
      }
    ],
    "review_discussion": [
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2019-03-21T08:08:45Z",
        "comment": "I am having afterthoughs. I think a better name would be `uniq_mem_remF`"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2019-03-21T14:16:45Z",
        "comment": "Perhaps `by move/mem_rem_uniq->; rewrite inE eqxx.` ?"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2019-03-21T14:16:50Z",
        "comment": "To be consistent with the lemma immediately above, it should be `mem_rem_uniqF`."
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "e093066581895bd26a60dc6b1ccc17d3f8bd3123",
        "message": "missing lemma in seq.v",
        "date": "2019-03-22T13:58:16Z"
      }
    ]
  },
  {
    "author": "erikmd",
    "number": 300,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/fingraph.v",
        "status": "M",
        "additions": 1,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2019-03-19T23:34:53Z",
    "update_date": "2019-03-20T08:57:38Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "erikmd",
        "committer": "erikmd",
        "hash": "d1d511b6b65109ed561ab158d0b231f399d4c01c",
        "message": "[doc] Mention that fingraph's connect computes the reflexive transitive closure\n\nwhile some refs (see e.g. [1]) don't assume that the \"transitive closure\" is\nreflexive; so one won't need to look at lemma \"connect0\" to figure this out.\n\n[1] https://en.wikipedia.org/wiki/Transitive_closure\n\n[ci skip]",
        "date": "2019-03-19T23:29:23Z"
      }
    ]
  },
  {
    "author": "ggonthier",
    "number": 298,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/fintype.v",
        "status": "M",
        "additions": 6,
        "deletions": 2
      }
    ],
    "state": "merged",
    "open_date": "2019-03-18T11:50:16Z",
    "update_date": "2019-03-18T22:41:21Z",
    "discussion": [
      {
        "author": "ggonthier",
        "date": "2019-03-18T13:52:21Z",
        "comment": "@CohenCyril, has something gone awry with the CI scripting? Viz. above, multiple opam failures and inconsistent outcome of the CI pipeline and individual version tests..."
      },
      {
        "author": "ppedrot",
        "date": "2019-03-18T19:09:02Z",
        "comment": "FTR, mathcomp + change of case node seem fine with this single fix, see https://gitlab.com/coq/coq/-/jobs/179538578. It's probably fine to merge thus."
      },
      {
        "author": "erikmd",
        "date": "2019-03-18T19:27:08Z",
        "comment": "@ggonthier @CohenCyril it seems there was some spurious network error, cf. this line in [coq-8.7](https://gitlab.com/math-comp/math-comp/-/jobs/179465268) job:\r\n\r\n> <><> Updating package repositories ><><><><><><><><><><><><><><><><><><><><><><>\r\n> [coq-core-dev] no changes from https://coq.inria.fr/opam/core-dev\r\n> [coq-extra-dev] no changes from https://coq.inria.fr/opam/extra-dev\r\n> [coq-released] synchronised from https://coq.inria.fr/opam/released\r\n> **[ERROR] Could not update repository \"default\": OpamDownload.Download_fail(_, \"Curl failed: \\\"/usr/bin/curl --write-out %{http_code}\\\\\\\\n --retry 3 --retry-delay 2 --user-agent opam/2.0.2 -L -o /tmp/opam-52-d2d111/index.tar.gz.part https://opam.ocaml.org/index.tar.gz\\\" exited with code 7\")**\r\n\r\nI've just relaunched the two math-comp jobs at stake, but as pointed out by @ppedrot it could be fine as well to merge this PR from now on."
      },
      {
        "author": "erikmd",
        "date": "2019-03-18T20:55:09Z",
        "comment": "> as pointed out by @ppedrot it could be fine as well to merge this PR from now on.\r\n\r\nIndeed − the final CI status is green."
      }
    ],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: fix",
        "description": "PR that fixes a bug. Please refer to the appropriate issue(s) if relevant."
      }
    ],
    "commits": [
      {
        "author": "ggonthier",
        "committer": "ggonthier",
        "hash": "7f25b156d2e33ec767732175f7030cd103e9b695",
        "message": "remove dependency on hidden case branch types\n\nAnticipating coq/coq#9170, remove numeric occurrence selector affected\nby the (invisible) presence of explicit types for variables bound in\n`match` branch patterns. The proof could be further simplified if this\nchange is implemented.",
        "date": "2019-03-18T11:49:18Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 296,
    "diff_summary": [
      {
        "file": "ChangeLog",
        "status": "M",
        "additions": 586,
        "deletions": 438
      },
      {
        "file": "mathcomp/algebra/rat.v",
        "status": "M",
        "additions": 586,
        "deletions": 438
      },
      {
        "file": "mathcomp/algebra/ssrint.v",
        "status": "M",
        "additions": 586,
        "deletions": 438
      },
      {
        "file": "mathcomp/algebra/ssrnum.v",
        "status": "M",
        "additions": 586,
        "deletions": 438
      },
      {
        "file": "mathcomp/character/character.v",
        "status": "M",
        "additions": 586,
        "deletions": 438
      },
      {
        "file": "mathcomp/character/classfun.v",
        "status": "M",
        "additions": 586,
        "deletions": 438
      },
      {
        "file": "mathcomp/character/inertia.v",
        "status": "M",
        "additions": 586,
        "deletions": 438
      },
      {
        "file": "mathcomp/character/integral_char.v",
        "status": "M",
        "additions": 586,
        "deletions": 438
      },
      {
        "file": "mathcomp/field/algC.v",
        "status": "M",
        "additions": 586,
        "deletions": 438
      },
      {
        "file": "mathcomp/field/algebraics_fundamentals.v",
        "status": "M",
        "additions": 586,
        "deletions": 438
      },
      {
        "file": "mathcomp/ssreflect/order.v",
        "status": "M",
        "additions": 586,
        "deletions": 438
      }
    ],
    "state": "merged",
    "open_date": "2019-03-06T17:24:55Z",
    "update_date": "2019-03-15T10:43:24Z",
    "discussion": [
      {
        "author": "pi8027",
        "date": "2019-03-06T17:49:06Z",
        "comment": "I discovered a very clever technique to infer instances of nested join structures without declaring canonical projections in algebraics_fundamentals.v. This method should be documented for someone who need to change this file..."
      },
      {
        "author": "pi8027",
        "date": "2019-03-14T21:59:28Z",
        "comment": "@CohenCyril This one is ready to merge and I have no more things to do on #270 now. CI failure of lemma-overloading seems to be unrelated."
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "46a42401865d4255fd23100a9c7c9b61cc3acea0",
        "message": "Small fixes on ssrnum and order\n\n- Give consistency to shape of formulae and namings of lt_def and lt_neqAle like\n  lemmas:\n  lt_def    x y : (x < y) = (y != x) && (x <= y),\n  lt_neqAle x y : (x < y) = (x != y) && (x <= y).\n- Provide the ring_display version of le, lt, ge, gt, leif, and comparable\n  notations and their explicit variants in Num.Def.\n- Implement a new factory for numDomainType to simplify algC.v.\n- Reorganize the theory modules in order.v: LTheory, CTheory, TTheory, and\n  Theory.\n- Rename standard canonical ordered type instances.\n- Export Order.*.Exports modules by default.\n- Fix cloning notations for ctblatticeType.",
        "date": "2019-03-06T17:01:10Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "a7db01b116b72275ae5480dd47e2da6a890f54ce",
        "message": "Give a unique head symbol for Total.mixin_of, fix the class of the realDomainType, and remove unnecessary packing and cloning notations for realDomainType",
        "date": "2019-03-06T17:01:10Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "6c99be09c60f01a5c53af0eb4a8a5b7a2a1d9431",
        "message": "Update doc of order and ssrnum",
        "date": "2019-03-09T19:50:02Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "ae53b12a031cc1950bf42973dec4a87a38f7b193",
        "message": "Move [arg min_(i < n | P) F] and [arg max_(i < n | P) F] notations from ssrnum to order",
        "date": "2019-03-10T17:05:41Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "670fd52bc60e7cf745eec1abd18af5b66bf62a7b",
        "message": "Fix factories\n\n- Reimplement the real_axiom >-> Order.Total.mixin_of coercion as a factory\n- Fix TotalLatticeMixin",
        "date": "2019-03-14T20:28:35Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 295,
    "diff_summary": [
      {
        "file": "mathcomp/algebra/ssralg.v",
        "status": "M",
        "additions": 2,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2019-03-05T16:14:54Z",
    "update_date": "2019-03-14T15:08:17Z",
    "discussion": [
      {
        "author": "pi8027",
        "date": "2019-03-06T17:33:35Z",
        "comment": "> Declaring all the lemmas in GRing.Theory first and exporting them in GRing would be a better way to do this. But I haven't tried yet.\r\n\r\n`GRing.*` lemmas should be used in the qualified form. So the `Export` command wouldn't work in this case. The `Include` command may work but a little bit scary."
      },
      {
        "author": "pi8027",
        "date": "2019-03-11T13:27:39Z",
        "comment": "@CohenCyril This one might require your review."
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "b5f1fecda45943ef81cb84dee85b5eda27234e65",
        "message": "Export addrKA and subrKA from GRing.Theory",
        "date": "2019-03-05T16:08:36Z"
      }
    ]
  },
  {
    "author": "ggonthier",
    "number": 294,
    "diff_summary": [
      {
        "file": ".gitlab-ci.yml",
        "status": "M",
        "additions": 328,
        "deletions": 161
      },
      {
        "file": "ChangeLog",
        "status": "M",
        "additions": 328,
        "deletions": 161
      },
      {
        "file": "mathcomp/character/character.v",
        "status": "M",
        "additions": 328,
        "deletions": 161
      },
      {
        "file": "mathcomp/character/integral_char.v",
        "status": "M",
        "additions": 328,
        "deletions": 161
      },
      {
        "file": "mathcomp/solvable/burnside_app.v",
        "status": "M",
        "additions": 328,
        "deletions": 161
      },
      {
        "file": "mathcomp/ssreflect/binomial.v",
        "status": "M",
        "additions": 328,
        "deletions": 161
      },
      {
        "file": "mathcomp/ssreflect/finfun.v",
        "status": "M",
        "additions": 328,
        "deletions": 161
      }
    ],
    "state": "merged",
    "open_date": "2019-03-04T14:38:46Z",
    "update_date": "2019-04-01T17:55:27Z",
    "discussion": [
      {
        "author": "ggonthier",
        "date": "2019-03-05T08:24:28Z",
        "comment": "There may be a problem with the way the CI pipeline is set up, since math-comp/odd-order#11, which fixes the Miller-pattern issue in odd-order, does not seem to be taken into account by the CI pipeline, even though it was merged five hours before the pipeline was restarted."
      },
      {
        "author": "ejgallego",
        "date": "2019-03-05T08:42:12Z",
        "comment": "With the current setup things are a hard to debug, I'd suggest we improve two things in the pipeline:\r\n- output configuration variables `printenv -0 | sort -z | tr '\\0' '\\n'`\r\n- output the commit hash of the contrib after checkout."
      },
      {
        "author": "erikmd",
        "date": "2019-03-05T11:35:18Z",
        "comment": "@ejgallego \r\n\r\n> output the commit hash of the contrib after checkout.\r\n\r\nIndeed! @ggonthier could you add a commit in this PR with the following change?\r\n\r\nAdding the line `- git rev-parse --verify HEAD` after that line:\r\nhttps://github.com/math-comp/math-comp/blob/e5ff94165ab722bfb77d4437a58d49aacc81683d/.gitlab-ci.yml#L112\r\n\r\nHowever I'd vote against the other suggestion by Emilio:\r\n\r\n> output configuration variables `printenv -0 | sort -z | tr '\\0' '\\n'`\r\n\r\nbecause there is some sensitive information (e.g. private tokens) among the environment variables of the build.\r\n\r\nHowever, we could of course add something like this:\r\n\r\n```\r\n- echo COQ_VERSION=${COQ_VERSION}\r\n- echo CONTRIB_URL=${CONTRIB_URL}\r\n- echo CONTRIB_VERSION=${CONTRIB_VERSION}  \r\n```"
      },
      {
        "author": "ejgallego",
        "date": "2019-03-05T11:42:13Z",
        "comment": "> there is some sensitive information (e.g. private tokens) among the environment variables of the build.\r\n\r\nOh indeed, we had this problem in the Coq setup, however note that you are somehow vulnerable if regular users can run code [which is the case here]\r\n\r\nWhat we do now in Coq is to have specific deploy jobs with a restricted `environment`, so deploy will only run in under very controlled conditions. I do indeed suggest that jobs which run \"user code\" should never ever run under an environment with protected variables."
      },
      {
        "author": "erikmd",
        "date": "2019-03-05T11:47:26Z",
        "comment": "Hi, I was not enough specific in my previous comment, yes the math-comp CI setup relies on protected variables, so if some user specifically opens a PR with `printenv`, no private info will be disclosed (unless the PR is merged in master of course)\n\nLe 5 mars 2019 12:42:14 GMT+01:00, \"Emilio Jesús Gallego Arias\" <notifications@github.com> a écrit :\n>> there is some sensitive information (e.g. private tokens) among the\n>environment variables of the build.\n>\n>Oh indeed, we had this problem in the Coq setup, however note that you\n>are somehow vulnerable if regular users can trigger that.\n>\n>What we do now in Coq is to have specific deploy jobs with a restricted\n>`environment`, so deploy will only run in under very controlled\n>conditions. I do indeed suggest that jobs which run \"user code\" should\n>never ever run under an environment with protected variables.\n>\n>-- \n>You are receiving this because you commented.\n>Reply to this email directly or view it on GitHub:\n>https://github.com/math-comp/math-comp/pull/294#issuecomment-469649603\n\n-- \nEnvoyé de mon appareil Android avec K-9 Mail. Veuillez excuser ma brièveté."
      },
      {
        "author": "ejgallego",
        "date": "2019-03-05T12:01:26Z",
        "comment": "Hi @erikmd ,\r\n\r\n> unless the PR is merged in master of course\r\n\r\nindeed I was aware of this part of the setup, but even so, if jobs inheriting from `.ci` do have private variables this is still a big security risk as they are running external code.\r\n\r\nFor example I could take over lemmas overloading and dump the vars from there.\r\n\r\nSo I suggest indeed you do restrict the private variables using `environment` and then adding `printenv` to `.ci` jobs should not be a problem. Jobs that run in the protected env should never ever run any user code [only push artifacts]."
      },
      {
        "author": "erikmd",
        "date": "2019-03-05T12:05:47Z",
        "comment": "Makes sense indeed, thanks @ejgallego! The math-comp CI jobs that clone external repos need not deploying anything...\n\nLe 5 mars 2019 13:01:28 GMT+01:00, \"Emilio Jesús Gallego Arias\" <notifications@github.com> a écrit :\n>Hi @erikmd ,\n>\n>> unless the PR is merged in master of course\n>\n>indeed I was aware of this part of the setup, but even so, if jobs\n>inheriting from `.ci` do have private variables this is still a big\n>security risk as they are running external code.\n>\n>For example I could take over lemmas overloading and dump the vars from\n>there.\n>\n>So I suggest indeed you do restrict the private variables using\n>`environment` and then adding `printenv` to `.ci` jobs should not be a\n>problem. Jobs that run in the protected env should never ever run any\n>user code [only push artifacts].\n>\n>-- \n>You are receiving this because you were mentioned.\n>Reply to this email directly or view it on GitHub:\n>https://github.com/math-comp/math-comp/pull/294#issuecomment-469654667\n\n-- \nEnvoyé de mon appareil Android avec K-9 Mail. Veuillez excuser ma brièveté."
      },
      {
        "author": "ejgallego",
        "date": "2019-03-05T12:12:52Z",
        "comment": "Cool! Let us know if you need help with that, in Coq we had great problems with the secret variables but I think we got the setup right finally.\r\n\r\nThe main invariant is that jobs that declare `enviroment` must be treated as trusted code, and thus need careful review. In jobs that don't set the restricted environment up, people can add whatever they want."
      },
      {
        "author": "CohenCyril",
        "date": "2019-03-21T00:15:12Z",
        "comment": "@ggonthier I plan to finish the review by March 29th."
      },
      {
        "author": "pi8027",
        "date": "2019-03-25T21:17:35Z",
        "comment": "Note: my modification of fintype and finfun have been successfully rebased on top of this PR without losing positivity and structurally decreasing property. So I can use finfuns as arrays whose type of elements depends on indices. https://github.com/pi8027/math-comp/tree/modified-fintype-experimental\r\n> Georges : the proposed modification may not be compatible with the way the new version of finfun works now."
      },
      {
        "author": "ggonthier",
        "date": "2019-03-26T13:01:27Z",
        "comment": "@pi8027 : you are correct, there will be a way to combine this implementation with constant-time indexing of `finTypes`. I think that there are better ways of doing this that what you've experimented with, however, and also that we should put some thought in making the transport reduce, if we want this to be useful for computing directly with matrices. All in all, that change should be a different PR."
      },
      {
        "author": "CohenCyril",
        "date": "2019-03-29T12:09:51Z",
        "comment": "Dear @ggonthier could you please rebase this branch on top of master?"
      },
      {
        "author": "CohenCyril",
        "date": "2019-03-30T20:17:46Z",
        "comment": "Dear @ggonthier there are unresolved merge remaining in the PR hence the failure...\r\nAlso, the best practice is to rebase, I did it with my own copy and resolved the conflict: I can push it if you want. Rebasing was made harder because successive commits of this PR rewrite the same piece of code... I believe this would be a justification to squash them, unless there is a specific reason why you would keep them separate?"
      },
      {
        "author": "ggonthier",
        "date": "2019-03-30T22:42:22Z",
        "comment": "@CohenCyril I've corrected the merge - I'd somehow missed the spurious conflicts in `finfun` for the one in `ChangeLog`. I do plan to squash and merge, but since several of the commits either explore different options, or work around Coq issues, it seemed preferable to keep them distinct during the discussion, and for future reference when the Coq issues are settled and we move to eliminate the work arounds."
      },
      {
        "author": "CohenCyril",
        "date": "2019-04-01T14:54:29Z",
        "comment": "@ggonthier I finally read it completely. I believe the final result would be good to merge.\r\n\r\nOne should:\r\n- [ ] open an issue on mathcomp to remind ourselves that once https://github.com/coq/coq/pull/9690 reaches two released versions of Coq, we should remove the duplication between `dffun` and `ffun`.\r\n- [ ] open an issue or a PR about generalizing `_ =1 _` to the dependent case.\r\n- [x] at least squash 162cb3f67c20d4587a2e57738ffb5b3dbb63565c with the previous commit.\r\n\r\nBut ideally:\r\n- [x] squash/fixup at least 00cadb6aad408447739cddb86dddaf1d98e7b1be, 47254118ac8a28eb1108bcf85cca9c1a1bfa9571 and 6e853635171990d48bed1f129423019860ac3102\r\n- [x] and rebase so that the history looks like (roughly, with more squashable things inside brackets) :\r\n850862dc6475bd48524a294651400df4b5b7ecf3 (master) -- df346ace8c0b5eb61f44b09abcebc193d8a0d6ac -- [ a9edbe27928858540c375c972d709df094c65d69 -- 1296cbd3d39ae04ab1ade2383f2396febb934c13 -- e64978dea1b796df8c4d827bca0fae0279b63724 ] -- 80846bf9d528e378fc2e6d809273aae676ecf964 -- cac497b28f88e8f95a42ee60e3593defcc196bad.\r\n(if so 162cb3f67c20d4587a2e57738ffb5b3dbb63565c should be dealt with during the rebase)\r\n\r\nPlease tell me if you think this is too much..."
      },
      {
        "author": "CohenCyril",
        "date": "2019-04-01T15:28:43Z",
        "comment": "@ggonthier I rebased and did the squashing I mentionned in the last part of my comment. Please tell me if you are ok with it: https://github.com/CohenCyril/math-comp/tree/dependent-positive-finfun (the git diff is empty except for some spurious spaces and one typo)\r\nIf you agree I will force-push it here and merge.\r\n\r\n~~PS: I also noticed I \"stole\" a commit (3099ccafa9c93ebdbdf653edca811f644070903b) from you... I will fix that ASAP.~~"
      },
      {
        "author": "ggonthier",
        "date": "2019-04-01T15:39:04Z",
        "comment": "   @CohenCyril everything looks fine to me now; you're clear to push, and merge after CI passes."
      },
      {
        "author": "ejgallego",
        "date": "2019-04-01T19:26:38Z",
        "comment": "That seems to have created havoc in at least fcsl-pcm https://gitlab.com/coq/coq/-/jobs/188314263"
      },
      {
        "author": "ggonthier",
        "date": "2019-04-01T22:39:41Z",
        "comment": "@ejgallego this is a documented incompatibility: due to the change of representation `fgraph` is no longer be a field accessor, nor a `subType` projector. The failing lemma at the end of `heap.v` can no longer be proved by brute force `destruct`, nor as an instance of `val_inj` (as would have been the proper way to prove it). It can now easily be proved as `can_inj fgraphK`, but if one a proof compatible with all versions, this should be used:\r\n```\r\nby move=> eq_r12; apply/ffunP=> x; rewrite -[x]enum_rankK -!tnth_fgraph eq_r12.\r\n```\r\n@anton-trunov would either be acceptable? Alternatively, we could reinstate the `fgraph` `subType` structure on non-dependent finfuns, so `val_inj` could be used throughout. This would have to be deprecated, though, as the `eqType` structure will not be compatible."
      }
    ],
    "review_discussion": [
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/finfun.v",
        "date": "2019-03-21T00:13:23Z",
        "comment": "This test should be moved to a test suite (which disapeared with the integration of ssr in coq, but we should restore it for this purpose, and a few other)"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/ssreflect/finfun.v",
        "date": "2019-03-21T14:26:26Z",
        "comment": "I'd rather keep this in the file, because it's a working demonstration of the use case mentioned in the header - I ought to have written \"example\" rather than \"test\" in the comment.\r\n  We could legitimately include this code in a test suite, however, as the MathComp library will probably not make use of this feature in the near future, and we ought to be alerted if some change in the Coq positivity or guard rules breaks it."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/finfun.v",
        "date": "2019-03-21T15:12:55Z",
        "comment": "Do you mean we should push it to Coq test-suite instead?"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/ssreflect/finfun.v",
        "date": "2019-03-21T15:43:42Z",
        "comment": "Not really, because you'd need to copy all the `finfun` code and documentation to that test, so Coq devs would understand it. Plus, they might be tempted to fix the test without fixing `finfun`, if there is some string reason for changing the guard rules. If it's in `mathcomp`, which is in the CI anyway, at least we'll be notified."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/finfun.v",
        "date": "2019-03-21T18:09:47Z",
        "comment": "I guess I did not understand the \"however\" in\r\n> We could legitimately include this code in a test suite, however, [...]"
      }
    ],
    "tags": [
      {
        "tag": "kind: enhancement",
        "description": "Issue or PR about addition of features."
      }
    ],
    "commits": [
      {
        "author": "ggonthier",
        "committer": "CohenCyril",
        "hash": "cd958350ffb6836a4e9e02716fc19b1a1d1177cd",
        "message": "Improve CI head tracking\n\nAs per @ejgallego ’s suggestion.",
        "date": "2019-04-01T15:03:44Z"
      },
      {
        "author": "ggonthier",
        "committer": "CohenCyril",
        "hash": "c2c3ceae8a2eabed33028bfff306c5664d0b42f2",
        "message": "Making {fun ...} structural and extending it to dependent functions\n\nConstruct `finfun_of` directly from a bespoke indexed inductive type,\nwhich both makes it structurally positive (and therefore usable as a\ncontainer in an `Inductive` definition), and accommodates naturally\ndependent functions.\n  This is still WIP, because this PR exposed a serious shortcoming of\nthe Coq unification algorithm’s implantation of Miller patterns. This\nbug defeats the inference of `Canonical` structures for `{ffun S -> T}`\nwhen the instances are defined in the dependent case!\n   This causes unmanageable regressions starting in `matrix.v`, so I\nhave not been able to check for any impact past that. I’m pushing this\ncommit so that the Coq issue may be addressed.\n\nMade `fun_of_fin` structurally decreasing: Changed the primitive\naccessor of `finfun_of` from `tfgraph` to the `Funclass` coercion\n`fun_of_fin`. This will make it possible to define recursive functions\non inductive types built using finite functions.  While`tfgraph` is\nstill useful to transport the tuple canonical structures to\n`finfun_of`, it is no longer central to the theory so its role has\nbeen reduced.",
        "date": "2019-04-01T15:42:28Z"
      },
      {
        "author": "ggonthier",
        "committer": "CohenCyril",
        "hash": "8a62590dd06803fca626f429271f9ad578f06a96",
        "message": "Expand sample use as container in Inductive\n\n  Clarified that the sample use provided is an example rather than a\nmisplaced unit test.\n  Added the definition of generic recursors to the examples, for both\nnon-dependent and dependent use cases.",
        "date": "2019-04-01T15:42:37Z"
      },
      {
        "author": "ggonthier",
        "committer": "CohenCyril",
        "hash": "c5763504783b51bb5def88c82f55a0b99ebf9d67",
        "message": "Compatibility fix for Coq issue coq/#9663\n\nCoq currently fails to resolve Miller patterns against open evars\n(issue coq/#9663), in particular it fails to unify `T -> ?R` with\n`forall x : T, ?dR x` even when `?dR` does not have `x` in its context.\nAs a result canonical structures and constructor notations for the\nnew generalised dependent `finfun`s fail for the non-dependent use\ncases, which is an unacceptable regression.\nThis commit mitigates the problem by specialising the canonical\ninstances and most of the constructor notation to the non-dependent\ncase, and introducing an alias of the `finfun_of` type that has\ncanonical instances for the dependent case, to allow experimentation\nwith that feature.\nWith this fix the whole `MathComp` library compiles, with a few\nminor changes. The change in `integral_char` fixes a performance issue\nthat appears to be the consequence of insufficient locking of both\n`finfun_eqType` and `cfIirr`; this will be explored in a further commit.",
        "date": "2019-04-01T15:42:37Z"
      },
      {
        "author": "ggonthier",
        "committer": "CohenCyril",
        "hash": "4d59fa0c4fb418b17394fa53fa8e8ee3f52d840f",
        "message": "locking definitions to address `integral.v` divergence\n\nLine 426 in `integral.v` diverged to over 40 minutes with the new\n`finfun.v`, because matching `mod_Iirr` to `quo_Iirr` goes into\nexponential backtracking. This is currently averted by limiting the\nrepetition of `mod_IirrE` in this `rewrite` line.\nMaking `finfun` mixing opaque brings this down to 40 seconds, and\nlocking `cfIirr` to a tractable 0.15 seconds, hopefully improving the\ninstances. This line also takes 47 seconds to execute in the master\nbranch, so this is likely an undetected Coq performance regression.",
        "date": "2019-04-01T15:42:37Z"
      },
      {
        "author": "ggonthier",
        "committer": "CohenCyril",
        "hash": "0f785cb80a555ce4109255819becb953a968cc8c",
        "message": "ChangeLog update\n\nDescribe extension and warn about incompatibilities.",
        "date": "2019-04-01T15:42:37Z"
      }
    ]
  },
  {
    "author": "erikmd",
    "number": 292,
    "diff_summary": [
      {
        "file": "mathcomp/algebra/matrix.v",
        "status": "M",
        "additions": 23,
        "deletions": 2
      },
      {
        "file": "mathcomp/algebra/poly.v",
        "status": "M",
        "additions": 23,
        "deletions": 2
      },
      {
        "file": "mathcomp/ssreflect/finfun.v",
        "status": "M",
        "additions": 23,
        "deletions": 2
      },
      {
        "file": "mathcomp/ssreflect/finset.v",
        "status": "M",
        "additions": 23,
        "deletions": 2
      },
      {
        "file": "mathcomp/ssreflect/tuple.v",
        "status": "M",
        "additions": 23,
        "deletions": 2
      }
    ],
    "state": "merged",
    "open_date": "2019-02-27T17:29:28Z",
    "update_date": "2019-03-29T12:07:26Z",
    "discussion": [
      {
        "author": "erikmd",
        "date": "2019-03-19T22:54:30Z",
        "comment": "@CohenCyril thanks for your remark! I've edited the two `Arguments` lines as you suggested (and I also edited the line for `eq_mx` as it also seemed better for consistency).\r\nI force-pushed a new commit (after rebasing on `master` even if it wasn't strictly necessary…)"
      },
      {
        "author": "erikmd",
        "date": "2019-03-29T10:57:10Z",
        "comment": "Hi @CohenCyril! as you had not tagged this PR with the 1.8.0 milestone, I wanted to ask whether you think this could be shipped with the next MC release?"
      },
      {
        "author": "CohenCyril",
        "date": "2019-03-29T12:07:48Z",
        "comment": "@erikmd this answers your question"
      }
    ],
    "review_discussion": [
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/finfun.v",
        "date": "2019-03-01T15:07:35Z",
        "comment": "I personally prefer `finfun g1 = finfun g2` instead of `[ffun x => g1 x] = [ffun x => g2 x]` because it has no eta-redex."
      },
      {
        "author": "erikmd",
        "file": "mathcomp/ssreflect/finfun.v",
        "date": "2019-03-01T15:40:08Z",
        "comment": "Indeed, thanks @pi8027! I force-pushed a new version with no eta-redex for {finfun, finset, poly}."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/finset.v",
        "date": "2019-03-19T09:43:48Z",
        "comment": "At least for consistency, I believe `T` should be made maximally implicit."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/tuple.v",
        "date": "2019-03-19T09:43:59Z",
        "comment": "At least for consistency, I believe `n` and `T` should be made maximally implicit."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2019-03-20T09:12:18Z",
        "comment": "I do not think `k` should ever be given explicitly..."
      },
      {
        "author": "erikmd",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2019-03-20T12:01:01Z",
        "comment": "@CohenCyril good point! So I've just put `k` as maximal implicit as well (but feel free to comment if you think it shouldn't be maximal…)"
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "erikmd",
        "committer": "erikmd",
        "hash": "c07f1f8d89dd1f975e06e8c45df2c7a4e6ca7fc3",
        "message": "Add extra eta lemmas for the under tactic\n\nRelated: coq/coq#9651",
        "date": "2019-03-20T11:54:26Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 291,
    "diff_summary": [
      {
        "file": "etc/utils/hierarchy_test.py",
        "status": "A",
        "additions": 1316,
        "deletions": 279
      },
      {
        "file": "mathcomp/Make",
        "status": "A",
        "additions": 1316,
        "deletions": 279
      },
      {
        "file": "mathcomp/algebra/countalg.v",
        "status": "A",
        "additions": 1316,
        "deletions": 279
      },
      {
        "file": "mathcomp/algebra/finalg.v",
        "status": "A",
        "additions": 1316,
        "deletions": 279
      },
      {
        "file": "mathcomp/algebra/ssrnum.v",
        "status": "A",
        "additions": 1316,
        "deletions": 279
      },
      {
        "file": "mathcomp/test-suite/hierarchy_test.v",
        "status": "A",
        "additions": 1316,
        "deletions": 279
      }
    ],
    "state": "merged",
    "open_date": "2019-02-27T09:00:20Z",
    "update_date": "2019-04-03T11:44:32Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2019-02-28T13:29:07Z",
        "comment": "This is blocking for the next release, @CohenCyril  when do you think you will have time to look at it?"
      },
      {
        "author": "CohenCyril",
        "date": "2019-03-14T15:19:56Z",
        "comment": "@pi8027 I will review this 1st of April."
      },
      {
        "author": "pi8027",
        "date": "2019-04-02T15:40:03Z",
        "comment": "@CohenCyril Fortunately, the first 2 cases seem to be fixed in #270."
      },
      {
        "author": "pi8027",
        "date": "2019-04-02T18:56:16Z",
        "comment": "@CohenCyril I have fixed all the other inheritances you indicated. I prefer to merge this without fixing ssrnum, rebase #270 on top of it, and see which inheritances are broken."
      },
      {
        "author": "CohenCyril",
        "date": "2019-04-02T22:24:27Z",
        "comment": "Dear @pi8027, PR #270 will probably not make it to 1.8.0 but rather 1.9.0... so I would rather see the two joins in ssrnum fixed in this PR (#291) so that we can merge and release 1.8.0 asap."
      },
      {
        "author": "pi8027",
        "date": "2019-04-03T08:08:03Z",
        "comment": "@CohenCyril Fixed. I made a commit separately to make it easy to revert 7ab5c99 and rebase #270 later."
      },
      {
        "author": "CohenCyril",
        "date": "2019-04-03T08:48:57Z",
        "comment": "> @CohenCyril Fixed. I made a commit separately to make it easy to revert [7ab5c99](https://github.com/math-comp/math-comp/commit/7ab5c99ab4c2ecfd55702a4279392f067652e357) and rebase #270 later.\r\n\r\nvery good idea!"
      }
    ],
    "review_discussion": [
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/finalg.v",
        "date": "2019-03-08T20:14:41Z",
        "comment": "We wouldn't need to export the above `base` as coercion thanks to this `base2`. Ideally, the `base` class of `finZmodType` is `countZmodType`, but actually it is `zmodType` because `Finite.mixin_of` contains `Countable.mixin_of`. I will keep this as it is and wait for some input."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/finalg.v",
        "date": "2019-03-14T15:18:27Z",
        "comment": "@pi8027 we should keep it like this for now, and open an issue, about putting the `Countable.class_of` in the `base` of `Fin.class_of` and check if math-comp still compiles, despite past timeouts..."
      }
    ],
    "tags": [
      {
        "tag": "kind: fix",
        "description": "PR that fixes a bug. Please refer to the appropriate issue(s) if relevant."
      }
    ],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "9278a127cab6ca870cf7d7b3f634488d187e6c1c",
        "message": "Fix countalg to finalg inheritances",
        "date": "2019-03-19T13:38:44Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "562da0c4beec2525db4867e56867576aaf6c0bd8",
        "message": "identifying missing joins",
        "date": "2019-04-02T14:40:14Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "beb5b00f4f35859f48f12a6e0dd9e86d65609822",
        "message": "speedup in hierarchy_test.py",
        "date": "2019-04-02T15:02:43Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "fa01cdf52c9af3f7e57a865a063e3d02f28cbf60",
        "message": "Fix inheritances in countalg and finalg (the 2nd attempt)",
        "date": "2019-04-02T18:34:01Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "7ab5c99ab4c2ecfd55702a4279392f067652e357",
        "message": "Fix inheritances in ssrnum",
        "date": "2019-04-03T08:01:50Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 290,
    "diff_summary": [
      {
        "file": "etc/utils/hierarchy-diagram",
        "status": "A",
        "additions": 136,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2019-02-22T14:38:27Z",
    "update_date": "2019-03-19T13:07:30Z",
    "discussion": [
      {
        "author": "pi8027",
        "date": "2019-02-22T16:47:25Z",
        "comment": "I have reimplemented this by using the information of coercion paths between `<module>.type` types. This one works fine.\r\n\r\nOutput: [hierarchy.pdf](https://github.com/math-comp/math-comp/files/2894903/hierarchy.pdf)\r\n"
      },
      {
        "author": "pi8027",
        "date": "2019-02-22T17:01:50Z",
        "comment": "I found that some inheritances are missing (e.g., ~~`FinGroup` -> `Finite`,~~ `FinRing.Zmodule` -> `CountRing.Zmodule`), or... did I misunderstand something?"
      },
      {
        "author": "pi8027",
        "date": "2019-02-25T13:17:34Z",
        "comment": "The edge from `FinGroup` to `Finite` was removed because of my mistake. I found a way to generate a similar diagram from canonical projections. So I will try to improve this as a checking tool detecting missing coercions and canonical projections. @CohenCyril "
      },
      {
        "author": "pi8027",
        "date": "2019-02-25T15:42:34Z",
        "comment": "Red and blue edges are coercions and canonical projections respectively. Canonical projections of join and indirect inheritances are eliminated. Output: [hierarchy.pdf](https://github.com/math-comp/math-comp/files/2901208/hierarchy.pdf)\r\n\r\nThe red edge from `FinRing.Field` to `GRing.DecidableField` seems to be not an inheritance. So checking exhaustiveness of coercions and canonical projections of join by using canonical projections of inheritances would be the right way to implement a checking tool."
      },
      {
        "author": "amahboubi",
        "date": "2019-02-28T14:13:16Z",
        "comment": "This is a great tool, thanks a lot! I guess a short documentation would be useful (e.g. your initial comment). But I do not know what is the appropriate place for this. May be a README.dev ? Or a wiki pages for the tools in the util directory? This is more a question for us I guess, @gares ? @CohenCyril ?"
      },
      {
        "author": "gares",
        "date": "2019-03-04T13:31:42Z",
        "comment": "I agree with @amahboubi it needs some doc.\r\nIMHO you could put a `usage { cat <<EOT .... EOT }` function at the beginning of the file, and if one passes `-h|--help` call this function and exit. The body of the function could contain the PR header, roughly. In this way the doc is on top of the file, if you open it with an editor, and also printed if you pass `-h`."
      },
      {
        "author": "pi8027",
        "date": "2019-03-07T11:38:06Z",
        "comment": "I have resumed this work today. Are there any desirable command line options to control output, e.g., direction, color, disabling coercion edges, libraries to `Require Import`?"
      },
      {
        "author": "amahboubi",
        "date": "2019-03-07T11:57:30Z",
        "comment": "I would say that control of the list of imported libraries would be an important feature. How would you be able to filter coercion edges? by full name? name pattern? type?"
      },
      {
        "author": "pi8027",
        "date": "2019-03-07T12:06:58Z",
        "comment": "@amahboubi I have no good idea on how to filter out some structures and edges. But an option to specify libraries instead of `all.all` can be easily implemented."
      },
      {
        "author": "amahboubi",
        "date": "2019-03-07T12:20:19Z",
        "comment": "That would be great! It would also make the tool of a more general interest than just Mathcomp."
      },
      {
        "author": "pi8027",
        "date": "2019-03-07T16:20:13Z",
        "comment": "I finished to put doc and some options to control output. I changed the direction of edges to make them the same as Fig. 3 of \"Packaging Mathematical Structures\". Examples:\r\n\r\n<pre>\r\n$ ./etc/utils/hierarchy-diagram -canonicals blue -coercions off -R mathcomp mathcomp \\\r\n    -lib ssreflect.all_ssreflect -lib fingroup.all_fingroup -lib algebra.all_algebra \\\r\n  | dot -Tpdf -o <a href=\"https://github.com/math-comp/math-comp/files/2942171/algebra-hierarchy.pdf\">algebra-hierarchy.pdf</a>\r\n$ ./etc/utils/hierarchy-diagram -canonicals blue -coercions red -R mathcomp mathcomp \\\r\n  | dot -Tpdf -o <a href=\"https://github.com/math-comp/math-comp/files/2942172/all-hierarchy.pdf\">all-hierarchy.pdf</a>\r\n</pre>\r\n\r\nI did some ad-hoc things on this utility by assuming some conventions to package mathematical structures in MathComp. Outputs might be easily broken by misimplementation of new structures. A better implementation may be obtained as a plugin. But this is useful enough as it is."
      },
      {
        "author": "CohenCyril",
        "date": "2019-03-19T09:41:06Z",
        "comment": "@gares and @amahboubi happy with the current state?"
      },
      {
        "author": "amahboubi",
        "date": "2019-03-19T09:44:31Z",
        "comment": "I will not have time to review this thoroughly before next week. But I think that merging as is will not hurt so I am fine with it. "
      }
    ],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: tool",
        "description": "Issue or PR about a tool. (e.g. packager or hierarchy_diagram)"
      }
    ],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "25a1164023a46c035411d4fe3698d1a7c9912c4f",
        "message": "Add a tool to draw the hierarchy diagram",
        "date": "2019-02-22T15:34:55Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "5d0af0cfb61b60a103456138577ec59b032e6133",
        "message": "Reimplement hierarchy-diagram by using coercions between \"<module>.type\" types",
        "date": "2019-02-22T16:44:16Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "059d01303184aaf5762bfca545c50d13ff988f6c",
        "message": "Use both coercions and canonical projections to generate the diagram",
        "date": "2019-03-07T15:36:16Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "45820be9a6bd339882d3fcb539a52cb7d26bdb66",
        "message": "Put documentation and some command line options for hierarchy-diagram",
        "date": "2019-03-07T17:06:13Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 288,
    "diff_summary": [
      {
        "file": "mathcomp/algebra/rat.v",
        "status": "M",
        "additions": 927,
        "deletions": 811
      },
      {
        "file": "mathcomp/algebra/ssralg.v",
        "status": "M",
        "additions": 927,
        "deletions": 811
      },
      {
        "file": "mathcomp/algebra/ssrint.v",
        "status": "M",
        "additions": 927,
        "deletions": 811
      },
      {
        "file": "mathcomp/algebra/ssrnum.v",
        "status": "M",
        "additions": 927,
        "deletions": 811
      },
      {
        "file": "mathcomp/character/character.v",
        "status": "M",
        "additions": 927,
        "deletions": 811
      },
      {
        "file": "mathcomp/field/algebraics_fundamentals.v",
        "status": "M",
        "additions": 927,
        "deletions": 811
      },
      {
        "file": "mathcomp/ssreflect/order.v",
        "status": "M",
        "additions": 927,
        "deletions": 811
      }
    ],
    "state": "merged",
    "open_date": "2019-02-19T10:07:39Z",
    "update_date": "2019-02-28T10:04:40Z",
    "discussion": [
      {
        "author": "pi8027",
        "date": "2019-02-21T16:07:10Z",
        "comment": "I found some fields of the above mixins are not necessary."
      },
      {
        "author": "pi8027",
        "date": "2019-02-21T16:47:01Z",
        "comment": "I have removed the unnecessary fields and added `min`/`max` notations."
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "683657b30f294822f8ba4701487b6a3f888684c5",
        "message": "Rename leIx* and lexU* lemmas",
        "date": "2019-02-15T17:05:27Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "0b2fd070dad872081d69ee06b6b46f76bf77b316",
        "message": "Update factories in order and ssrnum",
        "date": "2019-02-21T16:09:18Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "2830249eebe6c117f8965dd118f8a41fa50d98e7",
        "message": "Add total_display and min/max notations (minr/maxr for ring_display), and some cleanup",
        "date": "2019-02-25T10:33:46Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "ec740f74ff0c081186700f82a19116bcaf96fc7a",
        "message": "Put some missing things to order and ssrnum\n\n- Add the NormedModuleTheory lemmas specialized for numDomainType to the compatibility module\n- Generalize more lemmas relevant to numDomainType by using normedModType\n- Specify the core hint database explicitly in order.v (see #252)",
        "date": "2019-02-25T10:34:02Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "e2d81ff61c0c274eb891ee10c7046a42a442f152",
        "message": "Reorganize the structures of finite ordered sets, and apply 80 chars per line restriction",
        "date": "2019-02-25T10:36:13Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 287,
    "diff_summary": [
      {
        "file": "mathcomp/algebra/rat.v",
        "status": "M",
        "additions": 44,
        "deletions": 54
      },
      {
        "file": "mathcomp/algebra/ssrnum.v",
        "status": "M",
        "additions": 44,
        "deletions": 54
      },
      {
        "file": "mathcomp/character/character.v",
        "status": "M",
        "additions": 44,
        "deletions": 54
      },
      {
        "file": "mathcomp/character/classfun.v",
        "status": "M",
        "additions": 44,
        "deletions": 54
      },
      {
        "file": "mathcomp/character/integral_char.v",
        "status": "M",
        "additions": 44,
        "deletions": 54
      },
      {
        "file": "mathcomp/field/algC.v",
        "status": "M",
        "additions": 44,
        "deletions": 54
      },
      {
        "file": "mathcomp/field/algebraics_fundamentals.v",
        "status": "M",
        "additions": 44,
        "deletions": 54
      },
      {
        "file": "mathcomp/field/finfield.v",
        "status": "M",
        "additions": 44,
        "deletions": 54
      }
    ],
    "state": "closed",
    "open_date": "2019-02-14T15:54:36Z",
    "update_date": "2019-02-14T21:04:24Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "d33f6d45677c35ecf9b8cc051e0565baddf66624",
        "message": "Fix the hint rule for normr_ge0",
        "date": "2019-02-14T15:53:13Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 286,
    "diff_summary": [
      {
        "file": "mathcomp/algebra/rat.v",
        "status": "M",
        "additions": 77,
        "deletions": 75
      },
      {
        "file": "mathcomp/algebra/ssrint.v",
        "status": "M",
        "additions": 77,
        "deletions": 75
      },
      {
        "file": "mathcomp/algebra/ssrnum.v",
        "status": "M",
        "additions": 77,
        "deletions": 75
      },
      {
        "file": "mathcomp/character/character.v",
        "status": "M",
        "additions": 77,
        "deletions": 75
      },
      {
        "file": "mathcomp/character/classfun.v",
        "status": "M",
        "additions": 77,
        "deletions": 75
      },
      {
        "file": "mathcomp/character/integral_char.v",
        "status": "M",
        "additions": 77,
        "deletions": 75
      },
      {
        "file": "mathcomp/field/algC.v",
        "status": "M",
        "additions": 77,
        "deletions": 75
      },
      {
        "file": "mathcomp/field/algebraics_fundamentals.v",
        "status": "M",
        "additions": 77,
        "deletions": 75
      },
      {
        "file": "mathcomp/field/finfield.v",
        "status": "M",
        "additions": 77,
        "deletions": 75
      }
    ],
    "state": "merged",
    "open_date": "2019-02-14T15:23:46Z",
    "update_date": "2019-02-15T11:37:30Z",
    "discussion": [
      {
        "author": "pi8027",
        "date": "2019-02-14T15:51:54Z",
        "comment": "I think that CI will fail but wait for the result..."
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "d33f6d45677c35ecf9b8cc051e0565baddf66624",
        "message": "Fix the hint rule for normr_ge0",
        "date": "2019-02-14T15:53:13Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "7a5c5f78177b1c76c4552bad49209f3fd45924fb",
        "message": "Fix and export the compatibility module to check compilation",
        "date": "2019-02-14T20:54:33Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 285,
    "diff_summary": [
      {
        "file": "ChangeLog",
        "status": "M",
        "additions": 375,
        "deletions": 618
      },
      {
        "file": "mathcomp/algebra/intdiv.v",
        "status": "M",
        "additions": 375,
        "deletions": 618
      },
      {
        "file": "mathcomp/algebra/interval.v",
        "status": "M",
        "additions": 375,
        "deletions": 618
      },
      {
        "file": "mathcomp/algebra/rat.v",
        "status": "M",
        "additions": 375,
        "deletions": 618
      },
      {
        "file": "mathcomp/algebra/ssrint.v",
        "status": "M",
        "additions": 375,
        "deletions": 618
      },
      {
        "file": "mathcomp/algebra/ssrnum.v",
        "status": "M",
        "additions": 375,
        "deletions": 618
      },
      {
        "file": "mathcomp/character/character.v",
        "status": "M",
        "additions": 375,
        "deletions": 618
      },
      {
        "file": "mathcomp/character/classfun.v",
        "status": "M",
        "additions": 375,
        "deletions": 618
      },
      {
        "file": "mathcomp/character/inertia.v",
        "status": "M",
        "additions": 375,
        "deletions": 618
      },
      {
        "file": "mathcomp/character/integral_char.v",
        "status": "M",
        "additions": 375,
        "deletions": 618
      },
      {
        "file": "mathcomp/character/vcharacter.v",
        "status": "M",
        "additions": 375,
        "deletions": 618
      },
      {
        "file": "mathcomp/field/algC.v",
        "status": "M",
        "additions": 375,
        "deletions": 618
      },
      {
        "file": "mathcomp/field/algebraics_fundamentals.v",
        "status": "M",
        "additions": 375,
        "deletions": 618
      },
      {
        "file": "mathcomp/field/algnum.v",
        "status": "M",
        "additions": 375,
        "deletions": 618
      },
      {
        "file": "mathcomp/field/finfield.v",
        "status": "M",
        "additions": 375,
        "deletions": 618
      },
      {
        "file": "mathcomp/ssreflect/order.v",
        "status": "M",
        "additions": 375,
        "deletions": 618
      }
    ],
    "state": "merged",
    "open_date": "2019-02-14T09:59:59Z",
    "update_date": "2019-02-14T11:54:10Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "fc4a2d3e0a29d98d995027c96476550477a69bb4",
        "message": "Remove dependencies to the compatibility module Num.mc_1_7 and update ChangeLog",
        "date": "2019-02-14T09:58:28Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 283,
    "diff_summary": [
      {
        "file": "mathcomp/algebra/intdiv.v",
        "status": "M",
        "additions": 144,
        "deletions": 65
      },
      {
        "file": "mathcomp/algebra/interval.v",
        "status": "M",
        "additions": 144,
        "deletions": 65
      },
      {
        "file": "mathcomp/algebra/rat.v",
        "status": "M",
        "additions": 144,
        "deletions": 65
      },
      {
        "file": "mathcomp/algebra/ssrint.v",
        "status": "M",
        "additions": 144,
        "deletions": 65
      },
      {
        "file": "mathcomp/algebra/ssrnum.v",
        "status": "M",
        "additions": 144,
        "deletions": 65
      },
      {
        "file": "mathcomp/character/character.v",
        "status": "M",
        "additions": 144,
        "deletions": 65
      },
      {
        "file": "mathcomp/character/classfun.v",
        "status": "M",
        "additions": 144,
        "deletions": 65
      },
      {
        "file": "mathcomp/character/inertia.v",
        "status": "M",
        "additions": 144,
        "deletions": 65
      },
      {
        "file": "mathcomp/character/integral_char.v",
        "status": "M",
        "additions": 144,
        "deletions": 65
      },
      {
        "file": "mathcomp/character/vcharacter.v",
        "status": "M",
        "additions": 144,
        "deletions": 65
      },
      {
        "file": "mathcomp/field/algC.v",
        "status": "M",
        "additions": 144,
        "deletions": 65
      },
      {
        "file": "mathcomp/field/algebraics_fundamentals.v",
        "status": "M",
        "additions": 144,
        "deletions": 65
      },
      {
        "file": "mathcomp/field/algnum.v",
        "status": "M",
        "additions": 144,
        "deletions": 65
      },
      {
        "file": "mathcomp/field/finfield.v",
        "status": "M",
        "additions": 144,
        "deletions": 65
      },
      {
        "file": "mathcomp/ssreflect/all_ssreflect.v",
        "status": "M",
        "additions": 144,
        "deletions": 65
      }
    ],
    "state": "merged",
    "open_date": "2019-02-11T12:49:39Z",
    "update_date": "2019-02-12T17:22:54Z",
    "discussion": [
      {
        "author": "pi8027",
        "date": "2019-02-12T14:04:50Z",
        "comment": "@CohenCyril This is ready to merge. Maybe I made algC.v slower than the original one."
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "7c598f07651bda35017440c71d02b4e28082cf75",
        "message": "Fix all the proof scripts by using the compatibility module Num.mc_1_7",
        "date": "2019-02-12T12:56:28Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 282,
    "diff_summary": [],
    "state": "merged",
    "open_date": "2019-02-08T09:52:12Z",
    "update_date": "2019-02-08T13:35:58Z",
    "discussion": [
      {
        "author": "pi8027",
        "date": "2019-02-08T10:03:15Z",
        "comment": "Oh, I made more conflicts but some of them seem to have no difference... I don't understand what happened. :("
      },
      {
        "author": "pi8027",
        "date": "2019-02-08T10:10:04Z",
        "comment": "I reverted the last commit that fixes interval.v. The conflicts have decreased to one. I know how to resolve this."
      },
      {
        "author": "pi8027",
        "date": "2019-02-08T10:23:46Z",
        "comment": "I made a merge commit when I try to resolve this conflict on the web interface... So can you simply check out `pi8027:experiment/order` and `push --force` it to `math-comp:experiment/order`, or can you try to rebase `math-comp:experiment/order` on top of `math-comp:master` by resolving the conflict as follows? @CohenCyril\r\n\r\n```\r\nLemma ltr_add2l x : {mono +%R x : y z / y < z}.\r\nProof. by move=> y z /=; rewrite (leW_mono (ler_add2l _)). Qed.\r\n\r\nLemma ltr_add2r x : {mono +%R^~ x : y z / y < z}.\r\nProof. by move=> y z /=; rewrite (leW_mono (ler_add2r _)). Qed.\r\n```"
      },
      {
        "author": "pi8027",
        "date": "2019-02-08T15:06:34Z",
        "comment": "Thank you!"
      }
    ],
    "review_discussion": [],
    "tags": [
      {
        "tag": "needs: rebase",
        "description": "PR which is not rebased: check the target is appropriate (generally master) and rebase on top of it."
      }
    ],
    "commits": []
  },
  {
    "author": "Sobernard",
    "number": 281,
    "diff_summary": [
      {
        "file": "mathcomp/algebra/intdiv.v",
        "status": "M",
        "additions": 1031,
        "deletions": 454
      },
      {
        "file": "mathcomp/algebra/rat.v",
        "status": "M",
        "additions": 1031,
        "deletions": 454
      },
      {
        "file": "mathcomp/algebra/ssrint.v",
        "status": "M",
        "additions": 1031,
        "deletions": 454
      },
      {
        "file": "mathcomp/algebra/ssrnum.v",
        "status": "M",
        "additions": 1031,
        "deletions": 454
      },
      {
        "file": "mathcomp/field/algC.v",
        "status": "M",
        "additions": 1031,
        "deletions": 454
      },
      {
        "file": "mathcomp/field/algebraics_fundamentals.v",
        "status": "M",
        "additions": 1031,
        "deletions": 454
      },
      {
        "file": "mathcomp/field/cyclotomic.v",
        "status": "M",
        "additions": 1031,
        "deletions": 454
      }
    ],
    "state": "open",
    "open_date": "2019-02-07T14:34:09Z",
    "update_date": "2021-05-19T08:20:59Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2019-02-07T14:44:18Z",
        "comment": "Can you add TODO boxes ([ ]) and include a ChangeLog entry (or a TODO for it)"
      },
      {
        "author": "amahboubi",
        "date": "2019-07-10T11:40:05Z",
        "comment": "@CohenCyril, @gares I do not understand the output of CI here. Can someone explain?"
      },
      {
        "author": "gares",
        "date": "2019-07-10T19:47:05Z",
        "comment": "Looks like this pr is based on a broken ssrnum, or it introduces a notation that breaks the parser for ssrnum. I don't have time to check the details but the failure is not spurious to me."
      },
      {
        "author": "pi8027",
        "date": "2019-09-30T13:55:05Z",
        "comment": "@Sobernard @CohenCyril @amahboubi Hello. I found this PR is useful for my study on intervals and QE. If you don't plan to rebase and fix this, may I rebase this on top of #270? (I intend to do it in November or December.)"
      },
      {
        "author": "amahboubi",
        "date": "2019-09-30T14:03:56Z",
        "comment": "Hi @pi8027 . I personally have no plans to fix / modify this. I guess @Sobernard, the original author, is the one to contact. @Sobernard , if we do not hear from you before the end of October, we will take ownership of the PR. But feel free to tell us so if you want to work on it, and need more time!"
      },
      {
        "author": "pi8027",
        "date": "2020-11-04T09:41:43Z",
        "comment": "Just not to forget to rework this PR, I assign myself."
      },
      {
        "author": "pi8027",
        "date": "2020-12-03T19:25:42Z",
        "comment": "Now I'm reworking this PR. I guess one of `NumArchiClosedField` and `RealClosedArchiField` should be renamed (`ArchiClosed` or `ClosedArchi`?). *EDIT: these \"closed\" stand for different notions of closedness so probably OK. But then, this difference should be made clear in the header. I'm not sure if \"Archimedean closed field\" means \"algebraically closed field with \r\nthe Archimedean axiom\" in the usual mathematical convention. Also, \"Archimedean ... with an order and a norm\" does not make much sense to me since the Archimedean property requires an underlying order.*\r\nAlso putting `Archi` somewhere between `RealClosedField` is a bit unfortunate since it does not allow us to abbreviate it as `rcf`."
      },
      {
        "author": "CohenCyril",
        "date": "2020-12-03T20:34:37Z",
        "comment": "I guess it should be `ArchiNumClosedField` and `ArchiRealClosedField` (the abbrev could be `archiRcf`)"
      },
      {
        "author": "CohenCyril",
        "date": "2020-12-03T20:39:43Z",
        "comment": "Although these are two \"distinct notion of closeness\" they are very related, indeed `is_real_closed R <-> is_algebraically_closed R[i]` (the left to right direction is proven in `complex.v` and the other direction must be trivial). And conversely I believe `is_algebraically_closed C <-> is_real_closed {x : C | x \\is a Num.real}` should be straightforward if one shows `C` and `{x : C | x \\is a Num.real}[i]` is a `numField` isomorphism..."
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "Sobernard",
        "committer": "Sobernard",
        "hash": "4b804eeb76def599e7699090b794b7fbc5c06e9f",
        "message": "prepare for pull request : pbs with Hints, mainly for Cint1 and Cnat0",
        "date": "2018-08-31T14:46:17Z"
      },
      {
        "author": "Sobernard",
        "committer": "Sobernard",
        "hash": "a2a1ee08438150c258dc8ae6598b2cd188515598",
        "message": "Merge remote-tracking branch 'upstream/master' into archimedean_structures",
        "date": "2019-02-07T14:22:03Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 280,
    "diff_summary": [
      {
        "file": "mathcomp/algebra/intdiv.v",
        "status": "M",
        "additions": 584,
        "deletions": 81
      },
      {
        "file": "mathcomp/algebra/rat.v",
        "status": "M",
        "additions": 584,
        "deletions": 81
      },
      {
        "file": "mathcomp/algebra/ssrint.v",
        "status": "M",
        "additions": 584,
        "deletions": 81
      },
      {
        "file": "mathcomp/algebra/ssrnum.v",
        "status": "M",
        "additions": 584,
        "deletions": 81
      },
      {
        "file": "mathcomp/ssreflect/order.v",
        "status": "M",
        "additions": 584,
        "deletions": 81
      }
    ],
    "state": "merged",
    "open_date": "2019-02-07T10:23:32Z",
    "update_date": "2019-02-07T19:49:35Z",
    "discussion": [
      {
        "author": "pi8027",
        "date": "2019-02-07T13:37:26Z",
        "comment": "I also reactivated the ordering notations in `ring_scope` to solve some technical issues."
      },
      {
        "author": "CohenCyril",
        "date": "2019-02-07T15:34:54Z",
        "comment": "should I merge into #270 now?"
      },
      {
        "author": "pi8027",
        "date": "2019-02-07T15:58:38Z",
        "comment": "@CohenCyril The problem of subterm selections in `rewrite` isn't solved yet. If it is acceptable, please merge."
      },
      {
        "author": "CohenCyril",
        "date": "2019-02-07T16:02:54Z",
        "comment": "> @CohenCyril The problem of subterm selections in `rewrite` isn't solved yet. If it is acceptable, please merge.\r\n\r\nok, then please use a pattern `[X in X && _]` instead of names."
      },
      {
        "author": "pi8027",
        "date": "2019-02-07T16:22:32Z",
        "comment": "@CohenCyril I did. The problem appears the above 3 places."
      }
    ],
    "review_discussion": [
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/intdiv.v",
        "date": "2019-02-07T16:19:29Z",
        "comment": "(mark for the subterm selection problem)"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/intdiv.v",
        "date": "2019-02-07T16:20:13Z",
        "comment": "(mark for the subterm selection problem)"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/ssrint.v",
        "date": "2019-02-07T16:20:45Z",
        "comment": "(mark for the subterm selection problem)"
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "2080804ba4800262883e52402f0966066b1647fb",
        "message": "Add a compatibility module for ssrnum and MathComp 1.7.0, reactivate the ordering notations in ring_scope (Num.Syntax), and fix ssrint, rat, and intdiv by using the compatibility module",
        "date": "2019-02-07T16:17:36Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 278,
    "diff_summary": [
      {
        "file": "mathcomp/algebra/ssrnum.v",
        "status": "M",
        "additions": 1247,
        "deletions": 925
      },
      {
        "file": "mathcomp/ssreflect/order.v",
        "status": "M",
        "additions": 1247,
        "deletions": 925
      }
    ],
    "state": "merged",
    "open_date": "2019-02-05T14:07:16Z",
    "update_date": "2019-02-05T14:38:39Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "b6088406d061a1e9784c620210399394b6b2cea6",
        "message": "Merge the order library into ssrnum structures",
        "date": "2019-02-05T14:08:14Z"
      }
    ]
  },
  {
    "author": "MrSet",
    "number": 277,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 16,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2019-02-05T14:04:44Z",
    "update_date": "2019-02-07T19:58:32Z",
    "discussion": [],
    "review_discussion": [
      {
        "author": "ggonthier",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2019-02-05T14:41:16Z",
        "comment": "This is a good addition, but\r\n   - The variable names should match the rest of `seq.v`, namely `s`, `t` for sequences, and `a`, `b` for predicates.\r\n   - As in the proof of `map_filter` right above it, it's better to simplify before the `elimination` introductions, as this allows to rewrite the induction on-the-fly.\r\n   - `by` should be at the start of a proof line (except in `have` ... `by` ...), and here we have a one-liner.\r\nSuggested code\r\n```\r\nLemma pmap_cat s t : pmap (s ++ t) = pmap s ++ pmap t.\r\nProof. by elim: s => //= x s ->; case/f: x. Qed.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2019-02-05T17:14:09Z",
        "comment": "Also a good contribution, but which similarly need to be adapted to the conventions of the library:\r\n  - As above, the variable names are wrong (`x` is used for sequence elements in this file).\r\n  - MathComp _never_ uses the Coq default `Hxxx` for naming assumptions or proof steps, because `H` is a conventional name for mathematical objects such as groups.\r\n  - The script following a `have`, `suffices` or `wlog` paragraph is always outdented, never bulleted.\r\n  - The corresponding lemma for `map` is called `perm_map`, so this one should be called `perm_pmap`.\r\n  - The auxiliary equation is a combination of `count_map` and `mapS_filter` so it doesn't need to be proved by induction or case analysis, and indeed doesn't really need to be established as a substep. Indeed by using the lemmas for `count` rather than `perm_eq` then entire proof reduces to a single rewrite.\r\nSuggested code:\r\n```\r\nLemma perm_pmap s t : perm_eq s t -> perm_eq (pmap f s) (pmap f t).\r\nProof.\r\nmove/perm_eqP=> eq_st; apply/perm_eqP=> a; pose oa := oapp a false.\r\nby rewrite -!(count_map Some oa) !pmapS_filter !count_map !count_filter.\r\nQed.\r\n```\r\nOne can get marginally shorter proofs by using either of the `perm_eq` bespoke induction principles, and leveraging you `pmap_cat` identity:\r\n```\r\nmove=> eq_st; apply/perm_eqP=> a; apply/catCA_perm_subst: s t eq_st => s1 s2 s3.\r\nby rewrite !pmap_cat !count_cat addnCA.\r\n```\r\nor, without even using `perm_eqP`\r\n```\r\nmove/catCA_perm_ind=> eq_st; pattern t; apply: eq_st => //{t} t1 t2 t3.\r\nby move/perm_eqPl->; rewrite !pmap_cat perm_catCA.\r\n```\r\nHere the `pattern t` is needed to effect second-order matching of the induction principle for `t` (the vanilla Coq `apply eq_st` does this, but MathComp avoids making use of that quirk). We should be using `elim:` here (as in, `elim/eq_st: (t) => ...`) but this triggers an `Anomaly` in the `ssreflect` plugin for some reason. `perm_catCA` rewrites on the _left_ of a `perm_eq`, by convention, and the `move/perm_eqlP->` is the shortest work around this.\r\nFinally, one can also base this proof on the injectivity of `Some`:\r\n```\r\nmove=> eq_st; apply/(perm_map_inj (@Some_inj _)); rewrite !pmapS_filter.\r\nexact/perm_map/perm_filter.\r\n```\r\nbut this requires adding a `perm_map_inj` lemma at the end of `Section EqMap` (which would be a good idea anyway):\r\n```\r\nLemma perm_map_inj s t : perm_eq (map f s) (map f t) -> perm_eq s t.\r\nProof.\r\nmove/perm_eqP=> Est; apply/allP=> x _ /=.\r\nhave Dx: pred1 x =1 preim f (pred1 (f x)) by move=> y /=; rewrite inj_eq.\r\nby rewrite !(eq_count Dx) -!count_map Est.\r\nQed.\r\n```\r\nThe implicit argument to `Some_inj` has to be given explicitly because `Some_inj` has uncharacteristically 3 maximal implicits, in order to make it easier to use as a view."
      },
      {
        "author": "MrSet",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2019-02-05T19:06:24Z",
        "comment": "Thank you for the very useful feedback and suggestions. \r\n\r\nI like the idea of basing the proof on the injectivity of `Some`, so if you do not mind will I add `perm_map_inj` to this pull request as well. "
      },
      {
        "author": "MrSet",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2019-02-05T19:10:36Z",
        "comment": "Thank you for the very useful feedback."
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "MrSet",
        "committer": "MrSet",
        "hash": "0caa81bf59d827abfeceda3e8a3c74ef7c53463d",
        "message": "pmap_cat and pmap_perm added",
        "date": "2019-02-05T13:57:08Z"
      },
      {
        "author": "MrSet",
        "committer": "MrSet",
        "hash": "ebd2297dadfb9f87d58df72e0193683be9debaef",
        "message": "Merge https://github.com/math-comp/math-comp into seq-lemmas",
        "date": "2019-02-05T18:41:42Z"
      },
      {
        "author": "MrSet",
        "committer": "MrSet",
        "hash": "57818497d8c0bccb1a7aa6da466b4af1aa6f3749",
        "message": "updated variable names and perm_map_inj",
        "date": "2019-02-05T19:08:09Z"
      }
    ]
  },
  {
    "author": "gares",
    "number": 275,
    "diff_summary": [
      {
        "file": "mathcomp/Make",
        "status": "M",
        "additions": 10,
        "deletions": 1
      },
      {
        "file": "mathcomp/_CoqProject",
        "status": "M",
        "additions": 10,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2019-01-30T17:03:01Z",
    "update_date": "2019-02-05T14:42:11Z",
    "discussion": [
      {
        "author": "gares",
        "date": "2019-01-31T10:06:37Z",
        "comment": "I don't know what went wrong in CI and I don't have the rights to restart jobs. (can I get these)?"
      },
      {
        "author": "CohenCyril",
        "date": "2019-02-01T01:10:35Z",
        "comment": "@gares what is you gitlab.com username?"
      },
      {
        "author": "gares",
        "date": "2019-02-01T07:27:15Z",
        "comment": "Gares-gl iirc"
      },
      {
        "author": "erikmd",
        "date": "2019-02-02T17:49:45Z",
        "comment": "@gares, indeed the `make-coq-latest` job had failed and it seems a spurious failure as the \"main\" jobs `coq-{8.6,8.7,8.8,8.9,dev}` were ok.\r\n@CohenCyril will add you to the gitlab, and in the meantime I have re-triggered the pipeline from the page https://gitlab.com/math-comp/math-comp/pipelines (hopefully this will not only retry the failing job but also the second stage of the pipeline)"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "gares",
        "committer": "gares",
        "hash": "dfe71113bf9000f0dca9e66ba7981a6faedd4fa7",
        "message": "we silence warnings that just pollute our logs\n\nNamely:\n-projection-no-head-constant\n-redundant-canonical-projection\n-notation-overridden",
        "date": "2019-01-30T17:02:14Z"
      }
    ]
  },
  {
    "author": "gares",
    "number": 274,
    "diff_summary": [
      {
        "file": "README.md",
        "status": "M",
        "additions": 2,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2019-01-30T15:22:49Z",
    "update_date": "2019-02-07T19:54:12Z",
    "discussion": [
      {
        "author": "gares",
        "date": "2019-01-30T16:35:49Z",
        "comment": "done, dot added (I guess it should be squashed when merged, so that only 1 commit is visible)"
      }
    ],
    "review_discussion": [
      {
        "author": "amahboubi",
        "file": "README.md",
        "date": "2019-01-30T15:25:27Z",
        "comment": "Missing dot"
      }
    ],
    "tags": [],
    "commits": [
      {
        "committer": "web-flow",
        "hash": "4f42813979fb062d0862e4e768af29fddf8a3a04",
        "message": "Update README.md",
        "date": "2019-01-30T15:22:10Z"
      },
      {
        "committer": "web-flow",
        "hash": "adcc4390cfd58629c6508fe5017a52c3397163fb",
        "message": "Update README.md",
        "date": "2019-01-30T16:34:54Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 273,
    "diff_summary": [
      {
        "file": "etc/utils/packager",
        "status": "M",
        "additions": 2,
        "deletions": 3
      }
    ],
    "state": "merged",
    "open_date": "2019-01-29T12:56:18Z",
    "update_date": "2019-02-05T14:41:57Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "7370ff7a7272864bf1d070da08c3cf042658f572",
        "message": "fix etc/utils/packager",
        "date": "2019-01-29T14:53:53Z"
      }
    ]
  },
  {
    "author": "erikmd",
    "number": 272,
    "diff_summary": [
      {
        "file": ".gitlab-ci.yml",
        "status": "M",
        "additions": 62,
        "deletions": 12
      },
      {
        "file": "INSTALL.md",
        "status": "M",
        "additions": 62,
        "deletions": 12
      },
      {
        "file": "coq-mathcomp-ssreflect.opam",
        "status": "M",
        "additions": 62,
        "deletions": 12
      }
    ],
    "state": "merged",
    "open_date": "2019-01-28T17:34:47Z",
    "update_date": "2019-01-29T12:29:39Z",
    "discussion": [
      {
        "author": "erikmd",
        "date": "2019-01-28T18:46:31Z",
        "comment": "Hi @Zimmi48, it seems that **coqbot**'s report is working only for the pipeline itself, not for the individual jobs: IINM the report of the jobs should appear only if there is a job failing (?) and as soon as a job has failed; [which is the case](https://gitlab.com/math-comp/math-comp/-/jobs/152381492) − because I have forgotten the code below in the `.yml`:\r\n```\r\ncoq-8.9:\r\n  extends: .opam-build\r\n```\r\n\r\nThis jobs-reporting feature was working in #270 however… do you have an idea of the source of that issue?\r\nFYI here is a screenshot of the webhooks integration config:\r\n\r\n![2019-01-28_19-17-04_screenshot_webhooks](https://user-images.githubusercontent.com/10367254/51858448-0c69a600-2335-11e9-9440-ef707d1e42a8.png)\r\n\r\n…I don't know if this a known bug, or if I should just remove the job webhook, and add it again?"
      },
      {
        "author": "Zimmi48",
        "date": "2019-01-28T21:12:30Z",
        "comment": "@erikmd There are a few exceptions to the failures that are reported. Docker image not found is among them because it often corresponds to an outdated job whose image has been deleted. If you find this problematic, I could change that..."
      },
      {
        "author": "erikmd",
        "date": "2019-01-28T21:33:58Z",
        "comment": "@Zimmi48 OK thanks for your reply! I was not aware that **coqbot** was filtering-out the job reports depending on the failures' type.\r\n\r\nOn the one hand, I find it very convenient that individual job successes don't lead to a report (in order to avoid cluttering the PR summary) but indeed on the other hand, the fact that only `script` failures are reported is not that intuitive IMHO: adding a report for all job failures could be handy to always have a nice *shortcut* to the corresponding log… (if it's not too much work for implementing this).\r\n\r\nAnyway, if you think that changing this would have a negative impact on the workflow you are relying on in `coq` CI, forget about it!"
      },
      {
        "author": "Zimmi48",
        "date": "2019-01-29T08:04:20Z",
        "comment": ">if it's not too much work for implementing this\r\n\r\nIt's not. In fact, it's more work to do the filtering. The issue, as shown by the message of the commit which introduced it, was rather to avoid creating noise (https://github.com/coq/bot/commit/e09800677c99cd15417a31d8fb19b8ab36faefe0). But there is no reason why this should impact you negatively. I've just made this condition specific to Coq (https://github.com/coq/bot/commit/488385c4172771ba5ac27296e33b2725649b844e)."
      },
      {
        "author": "erikmd",
        "date": "2019-01-29T15:00:57Z",
        "comment": "> there is no reason why this should impact you negatively. I've just made this condition specific to Coq.\r\n\r\nGreat! Thank you @Zimmi48! and thanks @CohenCyril for the merge."
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "erikmd",
        "committer": "erikmd",
        "hash": "fc7276ec8a92ca6c76cf31511681c55fcfa23a62",
        "message": "Update INSTALL.md for installing mathcomp as local opam packages\n\nThis patch documents the change 1046da99d22462d6aeb23dd12043c2537f47abf1\nthat was required by the GitLab CI setup to be able to rely on opam 2.0.\n\nClose #251",
        "date": "2019-01-28T16:41:30Z"
      },
      {
        "author": "erikmd",
        "committer": "erikmd",
        "hash": "2f550fa5c5a52bcf963766247af04e099822aead",
        "message": "Propose to bump the required version of coq in coq-mathcomp-ssreflect.opam\n\nso the CI could use the Docker image coqorg/coq:8.9 (which is already available\nalbeit it currently is a synonymous of coqorg/coq:8.9-beta1 with the opam repos\ncoq-released + coq-core-dev + coq-extra-dev)",
        "date": "2019-01-28T17:01:38Z"
      },
      {
        "author": "erikmd",
        "committer": "erikmd",
        "hash": "bf2d8651e903d206e5e1ce360ef6b026c2933616",
        "message": "[ci] Add math-comp/odd-order and coq-community/lemma-overloading jobs\n\nRelated: math-comp/math-comp#245 and math-comp/math-comp#256",
        "date": "2019-01-28T18:32:17Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 271,
    "diff_summary": [
      {
        "file": "ChangeLog",
        "status": "M",
        "additions": 182,
        "deletions": 133
      },
      {
        "file": "mathcomp/algebra/interval.v",
        "status": "M",
        "additions": 182,
        "deletions": 133
      }
    ],
    "state": "merged",
    "open_date": "2019-01-21T15:16:50Z",
    "update_date": "2019-02-07T19:52:51Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2019-01-29T12:36:09Z",
        "comment": "@pi8027 please first squash your PR, then rebase on top of master."
      },
      {
        "author": "pi8027",
        "date": "2019-01-29T14:25:46Z",
        "comment": "@CohenCyril I did."
      },
      {
        "author": "pi8027",
        "date": "2019-02-07T09:43:28Z",
        "comment": "@CohenCyril I fixed this as you requested. Could you please check this and merge today if there is no problem? I also need to fix interval.v in #270 and such the changes would conflict with this one..."
      },
      {
        "author": "pi8027",
        "date": "2019-02-07T15:46:17Z",
        "comment": "@CohenCyril Thank you for the response. I tried to fix as you requested but didn't get satisfactory results on the following lemmas. I need to do some trial and error and think that the first one can be elegantly proved if `orderType` instances for `itv_bound` are provided. So may I contribute them as another PR after we finished #270?\r\n\r\n```\r\nLemma itv_intersectionE (x : R) (i1 i2 : interval R) :\r\n  x \\in itv_intersection i1 i2 = (x \\in i1) && (x \\in i2).\r\n\r\nLemma itv_intersection3E (i1 i2 i3 : interval R) :\r\n  exists x y, pred3 i1 i2 i3 x /\\ pred3 i1 i2 i3 y /\\\r\n              itv_intersection i1 (itv_intersection i2 i3) =\r\n              itv_intersection x y.\r\n```\r\n\r\nYour comment on the statement of `itv_intersection3E` looks good to me. I'd like to try that. :)"
      }
    ],
    "review_discussion": [
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/interval.v",
        "date": "2019-01-29T15:13:05Z",
        "comment": " `try` -> `do 1?`"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/interval.v",
        "date": "2019-01-29T15:13:38Z",
        "comment": "`case` -> `case:`"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/interval.v",
        "date": "2019-02-05T14:14:13Z",
        "comment": "Yes, I did."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/interval.v",
        "date": "2019-02-07T12:11:18Z",
        "comment": "Names `H` and `H0` should not be used, please use \"meaningful names\"."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/interval.v",
        "date": "2019-02-07T12:11:25Z",
        "comment": "Names `H` and `H0` should not be used, please use \"meaningful names\"."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/interval.v",
        "date": "2019-02-07T12:11:49Z",
        "comment": "use `do ?` instead of `try`."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/interval.v",
        "date": "2019-02-07T12:12:41Z",
        "comment": "use `do ?` instead of `try`.\r\nWhat is `auto` for? We usually do not use it as it my rely on unwanted section hypotheses and it can be unpredictable..."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/interval.v",
        "date": "2019-02-07T12:14:11Z",
        "comment": "please do not use occurence numbers (`{3}` ) in final code"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/interval.v",
        "date": "2019-02-07T12:14:32Z",
        "comment": "`try` -> `do ?`"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/interval.v",
        "date": "2019-02-07T12:14:58Z",
        "comment": "Names `H` and `H0` should not be used, please use \"meaningful names\"."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/interval.v",
        "date": "2019-02-07T12:15:12Z",
        "comment": "Names `H`  should not be used, please use \"a meaningful name\"."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/interval.v",
        "date": "2019-02-07T12:16:33Z",
        "comment": "Doing a `match goal` inside a proof is not conform to ssreflect style. please can you factor this in another way (e.g. `have gen`, `wlog`, or any intermediate lemma which would explain bedder what happens)?"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/interval.v",
        "date": "2019-02-07T12:20:49Z",
        "comment": "I would rather have somehting like ``exists2 j, {subset [::j.1; j.2] [:: i1; i2; i3]} -> i1 `&` `i2` `&` i3 = j.1 `&` j.2`` or even a more general theorem like ``exists2 j, {subset [::j.1; j.2] itvs} -> \\bigcap_(i <- itvsi) i = j.1 `&` j.2``."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/interval.v",
        "date": "2019-02-07T12:21:28Z",
        "comment": "Names begining with `H` should not be used, please use \"meaningful names\" instead."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/interval.v",
        "date": "2019-02-07T16:15:46Z",
        "comment": "`move` and `=>` should not be separated by a space."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/interval.v",
        "date": "2019-02-07T16:16:15Z",
        "comment": "there are still names begining with `h`"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/interval.v",
        "date": "2019-02-07T16:16:31Z",
        "comment": "use `apply:` never `apply`."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/interval.v",
        "date": "2019-02-07T16:16:42Z",
        "comment": "use `apply:`"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/interval.v",
        "date": "2019-02-07T16:16:52Z",
        "comment": "use `apply:`"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/interval.v",
        "date": "2019-02-07T16:17:50Z",
        "comment": "use meaningful names instead of `h`..."
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "04e8e8fb84c8ca900ecf1b997ee2cc79b6706bc9",
        "message": "Add the eqType instance for intervals, le_bound(l|r)_anti, and itv_intersection, redefine prev_of_itv and itv_decompose using lersif, extend itv_rewrite, simplify proofs",
        "date": "2019-02-07T16:51:50Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 270,
    "diff_summary": [
      {
        "file": ".gitlab-ci.yml",
        "status": "A",
        "additions": 8656,
        "deletions": 1873
      },
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "A",
        "additions": 8656,
        "deletions": 1873
      },
      {
        "file": "mathcomp/Make",
        "status": "A",
        "additions": 8656,
        "deletions": 1873
      },
      {
        "file": "mathcomp/algebra/intdiv.v",
        "status": "A",
        "additions": 8656,
        "deletions": 1873
      },
      {
        "file": "mathcomp/algebra/interval.v",
        "status": "A",
        "additions": 8656,
        "deletions": 1873
      },
      {
        "file": "mathcomp/algebra/rat.v",
        "status": "A",
        "additions": 8656,
        "deletions": 1873
      },
      {
        "file": "mathcomp/algebra/ssralg.v",
        "status": "A",
        "additions": 8656,
        "deletions": 1873
      },
      {
        "file": "mathcomp/algebra/ssrint.v",
        "status": "A",
        "additions": 8656,
        "deletions": 1873
      },
      {
        "file": "mathcomp/algebra/ssrnum.v",
        "status": "A",
        "additions": 8656,
        "deletions": 1873
      },
      {
        "file": "mathcomp/character/character.v",
        "status": "A",
        "additions": 8656,
        "deletions": 1873
      },
      {
        "file": "mathcomp/character/classfun.v",
        "status": "A",
        "additions": 8656,
        "deletions": 1873
      },
      {
        "file": "mathcomp/character/inertia.v",
        "status": "A",
        "additions": 8656,
        "deletions": 1873
      },
      {
        "file": "mathcomp/character/integral_char.v",
        "status": "A",
        "additions": 8656,
        "deletions": 1873
      },
      {
        "file": "mathcomp/character/vcharacter.v",
        "status": "A",
        "additions": 8656,
        "deletions": 1873
      },
      {
        "file": "mathcomp/field/algC.v",
        "status": "A",
        "additions": 8656,
        "deletions": 1873
      },
      {
        "file": "mathcomp/field/algebraics_fundamentals.v",
        "status": "A",
        "additions": 8656,
        "deletions": 1873
      },
      {
        "file": "mathcomp/field/algnum.v",
        "status": "A",
        "additions": 8656,
        "deletions": 1873
      },
      {
        "file": "mathcomp/field/finfield.v",
        "status": "A",
        "additions": 8656,
        "deletions": 1873
      },
      {
        "file": "mathcomp/ssreflect/Make",
        "status": "A",
        "additions": 8656,
        "deletions": 1873
      },
      {
        "file": "mathcomp/ssreflect/all_ssreflect.v",
        "status": "A",
        "additions": 8656,
        "deletions": 1873
      },
      {
        "file": "mathcomp/ssreflect/fintype.v",
        "status": "A",
        "additions": 8656,
        "deletions": 1873
      },
      {
        "file": "mathcomp/ssreflect/order.v",
        "status": "A",
        "additions": 8656,
        "deletions": 1873
      },
      {
        "file": "mathcomp/ssreflect/prime.v",
        "status": "A",
        "additions": 8656,
        "deletions": 1873
      },
      {
        "file": "mathcomp/ssreflect/ssrnat.v",
        "status": "A",
        "additions": 8656,
        "deletions": 1873
      },
      {
        "file": "mathcomp/ssreflect/tuple.v",
        "status": "A",
        "additions": 8656,
        "deletions": 1873
      }
    ],
    "state": "merged",
    "open_date": "2019-01-18T17:08:16Z",
    "update_date": "2019-12-11T15:46:11Z",
    "discussion": [
      {
        "author": "Zimmi48",
        "date": "2019-01-18T19:11:23Z",
        "comment": "@erikmd or @CohenCyril to avoid the duplicate status checks, you can disable the GitHub integration in \"Settings\" / \"Integration\" in the GitLab repo."
      },
      {
        "author": "erikmd",
        "date": "2019-01-18T19:13:02Z",
        "comment": "Hi @Zimmi48, indeed I realized a couple of minutes ago that I had forgotten to disable the \"native GitLab/GitHub integration\" for branches reporting as it is now unnecessary given @coqbot's help. This is now done.\r\nThanks!"
      },
      {
        "author": "erikmd",
        "date": "2019-01-18T19:34:35Z",
        "comment": "Finally regarding Travis, [the script run by Travis CI](https://github.com/math-comp/math-comp/blob/b0ef24be9fe47abbcc2c82e668091d4b32283c8b/.travis.yml#L41-L43) is very similar as [the one](https://github.com/math-comp/math-comp/blob/b0ef24be9fe47abbcc2c82e668091d4b32283c8b/Dockerfile.make#L26-L29) run by [this GitLab CI job](https://github.com/math-comp/math-comp/blob/b0ef24be9fe47abbcc2c82e668091d4b32283c8b/.gitlab-ci.yml#L85), so maybe it's not worth it to also rely on Travis for each CI build?  @CohenCyril what do you think?\r\n− I guess the URL to configure this is [that one](https://travis-ci.org/math-comp/math-comp/settings).\r\nKind regards, Erik"
      },
      {
        "author": "pi8027",
        "date": "2019-01-22T18:05:04Z",
        "comment": "Hi @CohenCyril, I had some progress on this PR. I need your help to fix `realDomainType`. Is `real_axiom` equivalent to the totality of `ler` for any `numDomainType`? If it is, should `realDomainType` be coercible to `orderType`? https://github.com/math-comp/math-comp/compare/experiment/order...pi8027:b7ff2ca"
      },
      {
        "author": "CohenCyril",
        "date": "2019-01-23T10:19:13Z",
        "comment": "Hi @pi8027, yes, this is equivalent to totality of the order relation. So there is a bit of restructuring to do.\r\nSo the class of `realDomainType` should include a mixin of totality from `order.v`. And the axiom `real_axiom` should not, but there should be a coercion from real_axiom to totality (which might require a repackaging of totality in its own record)."
      },
      {
        "author": "pi8027",
        "date": "2019-01-24T15:48:53Z",
        "comment": "Progress report: I have fixed all the structures in `ssrnum` and added all the missing coercions and canonical projections if my understanding is correct. I haven't ported `normedModType` and `NumDomain.pack` is still broken. https://github.com/math-comp/math-comp/compare/experiment/order...pi8027:978f25a"
      },
      {
        "author": "pi8027",
        "date": "2019-01-31T16:15:48Z",
        "comment": "@CohenCyril I finished to port `normedModType` but the following statement doesn't seem to be held.\r\n```\r\nLemma normr0 (R : numDomainType) (V : normedModType R) : `|0 : V| = 0.\r\n```\r\n\r\nA change for the 3rd axiom of `NormedModule.mixin_of` as follows would be needed. How do you think? https://github.com/math-comp/math-comp/compare/experiment/order...70250a5\r\n\r\n```\r\n  _ : forall x : T, (norm x == 0) = (x == 0)}.\r\n```"
      },
      {
        "author": "CohenCyril",
        "date": "2019-02-01T01:09:40Z",
        "comment": "@pi8027 no, unless I'm mistaken, since `0 <= 0`, we have that `'|0 : R| = 0` (by the last axiom of `numDomainType`) and then `'|0 : V| = '|0 *: 0| = '|0 : R| * '|0 : V|` using the 2nd axiom of `normedModType` and you should be done."
      },
      {
        "author": "pi8027",
        "date": "2019-02-01T09:46:37Z",
        "comment": "@CohenCyril I did it. Thank you!"
      },
      {
        "author": "pi8027",
        "date": "2019-02-02T22:08:07Z",
        "comment": "@CohenCyril I have a problem with canonical structures. I think that `F : numFieldType` should be coercible to `normedModType F` but it isn't. So `rewrite normr_eq0` and `rewrite (@normr_eq0 F F)` fail for `numFieldType`s. https://github.com/pi8027/math-comp/blob/ecb6dc515f9e0def5d541738270c1ba0c79d0afb/mathcomp/algebra/ssrnum.v#L3453\r\n\r\nI might have made a mistake on the definition of the canonical `normedModtype` instance of `numDomainType`. https://github.com/pi8027/math-comp/blob/ecb6dc515f9e0def5d541738270c1ba0c79d0afb/mathcomp/algebra/ssrnum.v#L1071"
      },
      {
        "author": "CohenCyril",
        "date": "2019-02-04T10:18:48Z",
        "comment": "@pi8027 In fact, there should be both coercions and canonical structures for each of the following structures: `numDomainType`, `numFieldType`, `realDomainType`, `realFieldType`, `archiRealType`, `rcfType` and `numClosedFieldType`."
      },
      {
        "author": "pi8027",
        "date": "2019-02-06T17:02:26Z",
        "comment": "I have written a compatibility module for `ssrnum` and attempted to fix `ssrint` with use of that module, but failed at [here](https://github.com/pi8027/math-comp/blob/1a89b19fd8ba5719c8a0563c616f32d5b08b89f4/mathcomp/algebra/ssrint.v#L1556) with the following error message:\r\n```\r\nError:\r\nIn nested Ltac calls to \"by (ssrhintarg)\", \"case (ssrcasearg) (ssrclauses)\" and\r\n\"(normrN m)\", last term evaluation failed.\r\nIn environment\r\nm : int\r\nThe term \"m\" has type \"int\" while it is expected to have type \"Num.NormedModule.sort ?V\".\r\n```\r\n\r\nThe type of `normrN` is:\r\n```\r\nnormrN\r\n     : forall (R : numDomainType) (V : normedModType R) (v : V), `|- v|%R = `|v|%R\r\n```\r\n\r\nIs this kind of rewriting by `normedModType` related lemmas for concrete instances succeed in the analysis library? I didn't find examples..."
      },
      {
        "author": "thery",
        "date": "2019-02-06T17:39:09Z",
        "comment": "@pi8027  \r\nLooks like the canonical mechanism is not able to lift an int into a Num.NormedModule.sort\r\nIf you  do \r\nPrint Canonical Projections.\r\ncan you see your int_normedModType?"
      },
      {
        "author": "pi8027",
        "date": "2019-02-06T18:49:21Z",
        "comment": "@thery You seem to be right. I saw the following line in the result of `Print Canonical Projections`. There is no other line including `int_normedModType`.\r\n```\r\nNum.NumDomain.sort <- Num.NormedModule.sort ( int_normedModType )\r\n```\r\n\r\nI have not understood how to fix this yet."
      },
      {
        "author": "CohenCyril",
        "date": "2019-02-07T00:27:57Z",
        "comment": "@pi8027 you need to use the `NormedModType` packager with explicit argument `int`, otherwise you won't get the right head symbol for the projection `Num.NormedModule.sort`. (Btw you need canonicals for `normedType` and `lmodType` as well)"
      },
      {
        "author": "thery",
        "date": "2019-02-07T08:12:30Z",
        "comment": "@pi8027 canonical structures are some kind of black magic. It would be nice to automate in some way all this boilerplate."
      },
      {
        "author": "pi8027",
        "date": "2019-02-07T08:12:53Z",
        "comment": "@CohenCyril Thank you. It was solved!"
      },
      {
        "author": "pi8027",
        "date": "2019-02-07T09:34:23Z",
        "comment": "@thery Yes, indeed. I need such the mechanism. :D"
      },
      {
        "author": "pi8027",
        "date": "2019-02-11T14:39:53Z",
        "comment": "I found the following problem:\r\n\r\nThe lemma `normr_ge0` is added to the hint database `core`. But it was sometimes not applied by `done` tactic when I need it because the goal doesn't syntactically match to the conclusion of the hint. This has appeared in #283.\r\n```\r\nnormr_ge0 : forall (R : numDomainType) (V : normedModType R) (v : V), 0 <= `|v|\r\n```\r\n"
      },
      {
        "author": "CohenCyril",
        "date": "2019-02-12T17:23:33Z",
        "comment": "> The lemma `normr_ge0` is added to the hint database `core`. But it was sometimes not applied by `done` tactic when I need it because the goal doesn't syntactically match to the conclusion of the hint. This has appeared in #283.\r\n\r\nHi! do you still have this problem?"
      },
      {
        "author": "pi8027",
        "date": "2019-02-12T18:12:41Z",
        "comment": "@CohenCyril Yes. Sometimes I need to put `?normr_ge0` before `//` in rewrite tactic."
      },
      {
        "author": "CohenCyril",
        "date": "2019-02-14T09:59:10Z",
        "comment": "> @CohenCyril Yes. Sometimes I need to put `?normr_ge0` before `//` in rewrite tactic.\r\n\r\nTry `Hint Extern 0 (is_true (0%R <= _)%O) => now (apply: normr_ge0) : core`"
      },
      {
        "author": "pi8027",
        "date": "2019-02-14T10:33:54Z",
        "comment": "@CohenCyril It does work well. Thank you!"
      },
      {
        "author": "CohenCyril",
        "date": "2019-02-14T14:53:27Z",
        "comment": "Could you export the compatibility module, just to check whether it suffices to make fourcolor and odd-order compile?"
      },
      {
        "author": "pi8027",
        "date": "2019-02-14T15:45:37Z",
        "comment": "@CohenCyril OK. I'm checking it in #286."
      },
      {
        "author": "pi8027",
        "date": "2019-02-14T17:03:41Z",
        "comment": "We have almost finished this PR and so is it time to check some missing things and TODOs? My concern is as follows:\r\n- `min` and `max` notations for `orderType`s would be needed (`meet` and `join` is a bit confusing in this case...),\r\n- naming of the following lemmas needs review: `(le|lt|lte)(xI|Ix|xU|Ux)`, `leIx_total`, and `lexU_total` in order.v,\r\n- the subterm selection problem in rewriting (see also #280),\r\n- I haven't understood the intents of some comments in ssrnum."
      },
      {
        "author": "CohenCyril",
        "date": "2019-02-15T14:49:40Z",
        "comment": "> * `min` and `max` notations for `orderType`s would be needed (`meet` and `join` is a bit confusing in this case...),\r\n\r\nI totally agree! Let us put them both in the `total_display` (to be defined)\r\n\r\n> * naming of the following lemmas needs review: `(le|lt|lte)(xI|Ix|xU|Ux)`, `leIx_total`, and `lexU_total` in order.v,\r\n\r\nI suggest:\r\n```coq\r\nLemma gel_leIx x y z : y <= x -> y `&` z <= x.\r\nLemma ger_leIx x y z : z <= x -> y `&` z <= x.\r\nLemma ge_leIx x y z : (y <= x) || (z <= x) -> y `&` z <= x.\r\nLemma leIx x y z : (y `&` z <= x) = (y <= x) || (z <= x).\r\n```\r\nand the \"same\" for `U`\r\n\r\n"
      },
      {
        "author": "CohenCyril",
        "date": "2019-02-15T14:50:58Z",
        "comment": "> I suggest:\r\n> \r\n> ```coq\r\n> Lemma gel_leIx x y z : y <= x -> y `&` z <= x.\r\n> Lemma ger_leIx x y z : z <= x -> y `&` z <= x.\r\n> Lemma ge_leIx x y z : (y <= x) || (z <= x) -> y `&` z <= x.\r\n> ```\r\n\r\nor maybe \r\n\r\n```coq\r\nLemma leIxl x y z : y <= x -> y `&` z <= x.\r\nLemma leIxr x y z : z <= x -> y `&` z <= x.\r\nLemma leIx2 x y z : (y <= x) || (z <= x) -> y `&` z <= x.\r\n```\r\n\r\n"
      },
      {
        "author": "pi8027",
        "date": "2019-02-15T14:53:36Z",
        "comment": "@CohenCyril I prefer `leIx(l|r|2)`. Thanks!"
      },
      {
        "author": "pi8027",
        "date": "2019-02-15T16:18:28Z",
        "comment": "@CohenCyril `fin*Type`s in order.v are undocumented. Should `finLatticeType`s have canonical `tblatticeType` instances? (top = join of all the elements, bottom = meet of all the elements. I'm not sure.)"
      },
      {
        "author": "pi8027",
        "date": "2019-02-19T10:16:43Z",
        "comment": "The remaining work would be only min and max notations if PR #288 is successfully merged."
      },
      {
        "author": "pi8027",
        "date": "2019-02-25T17:42:22Z",
        "comment": "The problem mentioned in the above review breaks my tool for drawing the hierarchy diagram (#290). But somehow I succeed to generate the correct hierarchy diagram. This diagram would be useful to make this development comprehensible: [hierarchy.pdf](https://github.com/math-comp/math-comp/files/2904785/hierarchy.pdf) (updated on Feb. 26).\r\n\r\n"
      },
      {
        "author": "pi8027",
        "date": "2019-03-06T11:36:31Z",
        "comment": "I'm trying to update the documentation of order and ssrnum. Why `NumClosedField` appears twice in the documentation of ssrnum? Which one is correct?"
      },
      {
        "author": "CohenCyril",
        "date": "2019-03-06T14:48:12Z",
        "comment": "> I'm trying to update the documentation of order and ssrnum. Why `NumClosedField` appears twice in the documentation of ssrnum? Which one is correct?\r\n\r\n:laughing: the one line 31 is incorrect."
      },
      {
        "author": "pi8027",
        "date": "2019-03-18T14:53:48Z",
        "comment": "I have no more things to do on this PR now; it is ready for review. CI failure of lemma-overloading seems irrelevant."
      },
      {
        "author": "pi8027",
        "date": "2019-04-08T16:18:38Z",
        "comment": "I will rebase this tomorrow. Some inheritance bugs might be found. (see #318)"
      },
      {
        "author": "pi8027",
        "date": "2019-04-11T15:03:15Z",
        "comment": "I have attempted to add an inheritance from `numDomainType` to `unitAlgType` by following some discussions with @CohenCyril . Now `algC.v` has a performance problem (compilation is very slow), and the join of `algType` and `comRingType` isn't unique: `numDomainType` and `fieldExtType`. [hierarchy.pdf](https://github.com/math-comp/math-comp/files/3069257/hierarchy.pdf)\r\n\r\nRedefining `idomainType` as the join of `comUnitRing` and `unitAlgType` might solve the second issue."
      },
      {
        "author": "CohenCyril",
        "date": "2019-04-11T15:15:17Z",
        "comment": "> Redefining `idomainType` as the join of `comUnitRing` and `unitAlgType` might solve the second issue.\r\n\r\nthis is option is not desirable"
      },
      {
        "author": "ggonthier",
        "date": "2019-04-11T15:33:50Z",
        "comment": "None of these are desirable; there's a reason the regular module structure on rings is only inferred for a specific tag, and the linear structure does _not_ require a module structure on its codomain."
      },
      {
        "author": "CohenCyril",
        "date": "2019-04-12T18:28:44Z",
        "comment": "@ggonthier \r\n> None of these are desirable; there's a reason the regular module structure on rings is only inferred for a specific tag, and the linear structure does _not_ require a module structure on its codomain.\r\n\r\nYes, yes, we decided to backtrack on that, and @pi8027 is now removing the inheritance of Lmodules everywhere. The common superstructure of `numDomainType` and `normedModule` (required in `math-comp/analysis`, but not anymore in `math-comp/math-comp`) will be a `NormedDomain`.\r\n\r\nBtw @pi8027, I believe that with `NormedDomain` there is no more need for the axiomless `Norm` structure, so you may remove it."
      },
      {
        "author": "CohenCyril",
        "date": "2019-04-12T18:35:13Z",
        "comment": "@thery \r\n> @pi8027 canonical structures are some kind of black magic. It would be nice to automate in some way all this boilerplate.\r\n\r\nwe are on it, and we have some ideas to make sure our users are less impacted by hierarchy refactorings than before, by providing systematic higher level blocks (factories, independent of the hierarchy, **public**) that are independent of basic blocks (mixins, dependent on the specific way the hierarchy is generated, **private**)."
      },
      {
        "author": "pi8027",
        "date": "2019-04-16T13:38:38Z",
        "comment": "Removing the `norm_scale` axiom from `NormedDomain` breaks some properties (e.g., `normr0`, `normrN`, `normr_id`). The following axioms might be needed.\r\n```\r\n  _ : forall n x, norm (x *+ n) = norm x *+ n;\r\n  _ : forall x, norm (- x) = norm x;\r\n```"
      },
      {
        "author": "CohenCyril",
        "date": "2019-04-16T14:04:09Z",
        "comment": "> Removing the `norm_scale` axiom from `NormedDomain` breaks some properties (e.g., `normr0`, `normrN`, `normr_id`). The following axioms might be needed.\r\n> \r\n> ```\r\n>   _ : forall n x, norm (x *+ n) = norm x *+ n;\r\n>   _ : forall x, norm (- x) = norm x;\r\n> ```\r\n\r\nyes!"
      },
      {
        "author": "pi8027",
        "date": "2019-04-23T11:40:11Z",
        "comment": "Remarks:\r\n- Now `[arg min_( i < n | P ) F]` and `[arg max_( i < n | P ) F]` notations are duplicated in `fintype.v` and `order.v`. We would need to make `fintype.v` and `bigop.v` depend on `order.v` and reshuffle some definitions and theorems to solve this duplication. This probably should be done in a separate PR.\r\n- Applying order related theorems (including `arg_minP` and `arg_maxP`) for `nat` requires rewriting by `leEnat` and `ltEnat`. Using overloaded ordering relation everywhere would solve this, but this may cause another difficulty because many proofs depend on that `(_ <= _)%N` and `(_ < _)%N` have the same head symbol `leq`...\r\n  ```coq\r\n  Lemma leEnat: le = leq.\r\n  Lemma ltEnat (n m : nat): (n < m) = (n < m)%N.\r\n  ```\r\n  I prefer to keep this as it is and to use `leEnat` and `ltEnat`."
      },
      {
        "author": "CohenCyril",
        "date": "2019-04-23T15:59:28Z",
        "comment": "> Remarks:\r\n> \r\n> * Now `[arg min_( i < n | P ) F]` and `[arg max_( i < n | P ) F]` notations are duplicated in `fintype.v` and `order.v`. We would need to make `fintype.v` and `bigop.v` depend on `order.v` and reshuffle some definitions and theorems to solve this duplication. This probably should be done in a separate PR.\r\n> * Applying order related theorems (including `arg_minP` and `arg_maxP`) for `nat` requires rewriting by `leEnat` and `ltEnat`. Using overloaded ordering relation everywhere would solve this, but this may cause another difficulty because many proofs depend on that `(_ <= _)%N` and `(_ < _)%N` have the same head symbol `leq`...\r\n>   ```coq\r\n>   Lemma leEnat: le = leq.\r\n>   Lemma ltEnat (n m : nat): (n < m) = (n < m)%N.\r\n>   ```\r\n>   \r\n>   \r\n>   I prefer to keep this as it is and to use `leEnat` and `ltEnat`.\r\n\r\n@pi8027 I think the theories of generic order on one side and `leq` on the other should be kept separate anyway. Hence we should/must have all the necessary duplicates, in the right scopes so as never to obtain a generic `le` or `lt` instead of a `leq` or `_ < _` by using the appropriate theorem in the library."
      },
      {
        "author": "pi8027",
        "date": "2019-04-23T16:16:51Z",
        "comment": "@CohenCyril Both polymorphic and monomorphic `arg_min`/`arg_max` notations should be defined in the `form_scope` (isn't it?). So it's not possible to use both notations selectively unless defining them with different keywords."
      },
      {
        "author": "pi8027",
        "date": "2019-04-24T09:17:36Z",
        "comment": "Using the polymorphic definitions and notations of `arg_min`/`arg_max` in both cases, deprecating monomorphic ones, and using the following lemmas in the case of `nat` might be a satisfactory solution.\r\n\r\n```coq\r\narg_minnP\r\n     : forall (I : finType) (i0 : I) (P : pred I) (F : I -> nat),\r\n       P i0 -> extremum_spec leq P F [arg min_(i < i0 | P i) F i]\r\narg_maxnP\r\n     : forall (I : finType) (i0 : I) (P : pred I) (F : I -> nat),\r\n       P i0 -> extremum_spec geq P F [arg max_(i > i0 | P i) F i]\r\n```"
      },
      {
        "author": "CohenCyril",
        "date": "2019-05-15T08:54:51Z",
        "comment": "@ggonthier do you see any objection for us to put `[arg min_(i < i0 | P i) F i]` both in the `nat_scope` and `order_scope` (depending on whether it is a `leq` or generic `le`), rather than only once in `form_scope`? The alternative is to rename the one for nat like this: `[arg minn_(i < i0 | P i) F i]`."
      },
      {
        "author": "ggonthier",
        "date": "2019-05-15T10:02:51Z",
        "comment": "No objections, @CohenCyril  - that seems a fairly natural overloading."
      },
      {
        "author": "pi8027",
        "date": "2019-05-16T09:06:52Z",
        "comment": "OK. So I will put `[arg (min|max)_...]` notations in `nat_scope`, `order_scope`, and `ring_scope`."
      },
      {
        "author": "pi8027",
        "date": "2019-05-16T10:00:31Z",
        "comment": "@CohenCyril Is this change fine? If it is, I will rebase and squash this and make use of `deprecate` notation in the compatibility module. https://github.com/pi8027/math-comp/commit/68c697174082268bbfe9c81d7bcdc9752c5fd088"
      },
      {
        "author": "CohenCyril",
        "date": "2019-05-16T12:16:14Z",
        "comment": "> @CohenCyril Is this change fine? If it is, I will rebase and squash this and make use of `deprecate` notation in the compatibility module. [pi8027@68c6971](https://github.com/pi8027/math-comp/commit/68c697174082268bbfe9c81d7bcdc9752c5fd088)\r\n\r\nLooks good to me."
      },
      {
        "author": "CohenCyril",
        "date": "2019-06-13T17:19:14Z",
        "comment": "@amahboubi @ggonthier @gares this PR is ready for review."
      },
      {
        "author": "CohenCyril",
        "date": "2019-06-17T13:02:08Z",
        "comment": "@amahboubi @ggonthier @gares I am currently fixing several issues in `order`, it should be finished by tomorrow."
      },
      {
        "author": "CohenCyril",
        "date": "2019-06-18T08:20:28Z",
        "comment": "Ok I fixed almost everything I spotted.\r\n\r\nBut, @ggonthier, @amahboubi, @thery, @gares, @LaurenceRideau, @pi8027  there is an issue for which I cannot take a light decision: `ltgtP` and `ltrgtP` do not follow the same structure as the `ltngtP` lemma from ssrnat:\r\nin `ltgtP` (and `ltrgtP`) lemma, the operators come in the following order `==`, `<=`, `<` while in `ltngtP` it is `<=`, `<` and `==`. For consistency they should be ordered in the same way, and thus there are now two options:\r\n1. For (more) backward compatibility they should be in the order  [`<=`, `<`, `==`] (as in `ltngtP`),\r\n2. but for the sake of intuition as noted by @thery and @gares in #233 it should rather be [`==`, `<=`, `<`] everywhere (as in `ltgtP`) because the last item is matched first. I think I a missing a part of the history of the lemma in order to take a decision.\r\n\r\nWhich of 1. and 2. would be best?\r\n\r\nAlso, in `leqP`, `leP` ..., operators are in the order `<=` first, and `<` while the same intuition as in the paragraph above would lead to think it should be the converse."
      },
      {
        "author": "gares",
        "date": "2019-06-18T08:26:34Z",
        "comment": "IMO 2 is best"
      },
      {
        "author": "pi8027",
        "date": "2019-06-18T19:35:40Z",
        "comment": "@CohenCyril It's worth trying the option 2."
      },
      {
        "author": "pi8027",
        "date": "2019-08-28T08:48:27Z",
        "comment": "I found that option 2 (reordering the type arguments of `ltngtP` to `[==, <=, <]`) doesn't break any libraries in CI other than fourcolor. We can provide a compatibility module so this is not so hard thing to do. (see #378)"
      },
      {
        "author": "pi8027",
        "date": "2019-09-09T18:40:02Z",
        "comment": "@amahboubi @ggonthier @gares @CohenCyril I think all the problems we found have been addressed. I have also patched fourcolor (math-comp/fourcolor#19), odd-order (math-comp/odd-order#17), and real-closed (math-comp/real-closed#16) without any use of the compatibility module. CI checks with these overlays have passed. So this PR is ready for review."
      },
      {
        "author": "CohenCyril",
        "date": "2019-09-10T08:51:01Z",
        "comment": "@amahboubi @ggonthier @gares @thery @LaurenceRideau @strub because of the size of the PR, the time it took to develop and the potential impact on the analysis library and other users, I would suggest of all mathcomp PR we give this one the highest priority for reviewing and integration. What do you think? If you have any question on how to proceed, you can tag, mail or call me to discuss it.\r\nBest wishes!"
      },
      {
        "author": "amahboubi",
        "date": "2019-09-10T08:56:20Z",
        "comment": "Hi @CohenCyril @pi8027! It is great to see this PR converging. In order to ease review and subsequent usage/documentation of the library, I suggest to have this PR as an item of our first mathcomp dev meeting of the year (I will send the message+poll today). It would be great to have a short presentation summarizing the previous issues and the solutions."
      },
      {
        "author": "amahboubi",
        "date": "2019-09-16T08:50:29Z",
        "comment": "@CohenCyril, I have unassigned you this PR, as it's no good practice to be at the same time main author and assignee."
      },
      {
        "author": "pi8027",
        "date": "2019-09-25T11:52:09Z",
        "comment": "There are two name conflicts of lemmas in `order.v`.\r\n```coq\r\nLocate lexUl.\r\nLocate lexUr.\r\n```\r\n```\r\nConstant mathcomp.ssreflect.order.Order.BLatticeTheory.lexUl\r\nConstant mathcomp.ssreflect.order.Order.LatticeTheoryJoin.lexUl\r\n  (shorter name to refer to it in current context is Order.LatticeTheoryJoin.lexUl)\r\n\r\nConstant mathcomp.ssreflect.order.Order.BLatticeTheory.lexUr\r\nConstant mathcomp.ssreflect.order.Order.LatticeTheoryJoin.lexUr\r\n  (shorter name to refer to it in current context is Order.LatticeTheoryJoin.lexUr)\r\n```\r\n~Symmetric ones of `Order.LatticeTheoryJoin.lexU(l|r)` are named `leIx(l|r)` so we probably should rename them to `leUx(l|r)`.~ Lemmas `Order.TBLatticeTheory.lexI(l|r)` are also wrongly named and should be `leIx(l|r)` by following the naming convention. But this change will introduce two more name conflicts. I think that lemmas `Order.BLatticeTheory.lexU(l|r)` and `Order.TBLatticeTheory.lexI(l|r)` should be renamed. I also wish to have a Coq plugin to detect name conflicts of imported unqualified names."
      },
      {
        "author": "affeldt-aist",
        "date": "2019-10-02T12:22:05Z",
        "comment": "TODO: in minr_l, minr_r, maxr_r, maxr_l (ssrnum.v), introduce lemmas to avoid (elimT ???) definitions"
      },
      {
        "author": "pi8027",
        "date": "2019-10-04T15:31:00Z",
        "comment": "[Note] I will do the following renamings to avoid the name conflicts of https://github.com/math-comp/math-comp/pull/270#issuecomment-534985132:\r\n- `Order.BLatticeTheory.lexUl` -> `disjoint_lexUl`,\r\n- `Order.BLatticeTheory.lexUr` -> `disjoint_lexUr`,\r\n- `Order.TBLatticeTheory.lexIl` -> `cover_leIxl`,\r\n- `Order.TBLatticeTheory.lexIr` -> `cover_leIxr`.\r\n\r\nIn a discussion happened today, I discovered that it would be nice to have the canonical `fin(C?)latticeType` instance of finsets ~(or fsets?)~. The above lemmas are lacking in `finset.v`. `set.v` seems to already implemented in this way, but I don't understand entirely yet."
      },
      {
        "author": "pi8027",
        "date": "2019-10-16T08:43:11Z",
        "comment": "> Hi @CohenCyril @pi8027! It is great to see this PR converging. In order to ease review and subsequent usage/documentation of the library, I suggest to have this PR as an item of our first mathcomp dev meeting of the year (I will send the message+poll today). It would be great to have a short presentation summarizing the previous issues and the solutions.\r\n\r\nHere is a summary of issues on the user side:\r\n- The subterm selection problem (typically in rewriting).\r\n  - Currently, we sometimes need to write patterns explicitly.\r\n- Since the type of norm function is now `forall (R : numDomainType) (V : normedZmodType R), V -> R`,\r\n  sometimes the type `V` cannot be inferred from context, e.g., `|0| = 0 :> R`.\r\n  - We need to put type annotations differently, e.g., `|0 : R| = 0`.\r\n\r\nIssues on the library side:\r\n- Hierarchy related issues\r\n  - Nonempty finite lattices always have bottom and top.\r\n    So we equated `fin(C)LatticeType`, `fin(C)BLatticeType`, and `fin(C)TBLatticeType`.\r\n  - Defining `normedModType` to inherit `lmodType` introduces an ambiguous join.\r\n    Now we redefined it as `normedZmodType` that inherit `zmodType` and is parameterized by `numDomainType`.\r\n    We cannot state some interactions between the norm and scale functions on that structure.\r\n  - Other several inheritance issues are solved by `hierarchy.ml`, which is now a part of CI.\r\n- Arguments ordering problem of comparison predicates, e.g., `ltngtP`.\r\n  - Will be separately addressed by #378.\r\n- `Hint Resolve` doesn't work to declare `normr_ge0` as a hint.\r\n  - Use `Hint Extern` instead.\r\n- Defining factories sometimes requires explicit record-eta expansion.\r\n\r\n(EDIT Oct 17)"
      },
      {
        "author": "CohenCyril",
        "date": "2019-10-16T13:49:17Z",
        "comment": "In addition, I edited the orignal post to try and input more high level explanations."
      },
      {
        "author": "amahboubi",
        "date": "2019-10-16T14:16:46Z",
        "comment": "@CohenCyril @pi8027 Thanks a lot, I think that what you added is very useful. "
      },
      {
        "author": "amahboubi",
        "date": "2019-10-16T14:19:03Z",
        "comment": "Can you elaborate on what\r\n> (which could be avoided by importing the compatibility module ssrnum.mc_1_9).\r\n\r\nmeans? Where is this compatibility module?"
      },
      {
        "author": "CohenCyril",
        "date": "2019-10-16T14:27:17Z",
        "comment": "> means? Where is this compatibility module?\r\n\r\nThe compatibility module is in `ssrnum.v` and may be used to recover part of an old set of  theorems, in order to facilitate migrations. The compatiblity module is not complete (especially wrt canonical instances) because it is technically impossible to my knowledge."
      },
      {
        "author": "amahboubi",
        "date": "2019-10-18T09:04:46Z",
        "comment": "> This work started by @CohenCyril and continued by @pi8027.\r\n\r\nI suggest removing this line. This is not fair to the other contributors, in locs or in discussions. E.g. the finmap math-comp repo acknowledges several influences, and in that repo, a file like [order.v](https://github.com/math-comp/finmap/blob/master/order.v) has received commits from more contributors."
      },
      {
        "author": "CohenCyril",
        "date": "2019-10-18T09:28:26Z",
        "comment": "> I suggest removing this line. This is not fair to the other contributors, in locs or in discussions. E.g. the finmap math-comp repo acknowledges several influences, and in that repo, a file like [order.v](https://github.com/math-comp/finmap/blob/master/order.v) has received commits from more contributors.\r\n\r\ndone"
      },
      {
        "author": "affeldt-aist",
        "date": "2019-10-19T17:29:03Z",
        "comment": "For information, it was possible to use this PR to rebase mathcomp-analysis on top of it, which means essentially to use the norm provided by ssrnum.v to subsume the several notions of norms that were used in the current version of mathcomp-analysis. This went well except for problems that have been reported and could be quickly fixed. This rebasing led to substantial simplifications in mathcomp-analysis. See https://github.com/math-comp/analysis/tree/analysis_270."
      },
      {
        "author": "amahboubi",
        "date": "2019-10-23T09:00:26Z",
        "comment": "TODO list on order.v:\r\n- header:  remove misleading sentences, list the notations and definitions introduced by the library\r\n- header: document better the tagging mechanism allowing to work with different order structures on a same type. This could be in the header and/or in later in the file\r\n- remove the no-op last Import\r\n- header: improve the documentation of what you get by importing selected of sub-modules \r\n- BTW do we need Order.Def?\r\n- What about importing Order.Syntax in all of the subsequent Order.LTheory, Order.TTheory, etc. Note: a Syntax module is only useful to solve potential grammar conflicts. Which does not seem to be the case here.\r\n- ensure all notations do have a scope\r\n- declare instances for division on nat inside this file, and use this as a documentation/template \r\n"
      },
      {
        "author": "amahboubi",
        "date": "2019-10-23T09:25:16Z",
        "comment": "Timline:\r\n- TODO list addressed for Oct. 25th\r\n- Merge <= Oct. 31st."
      },
      {
        "author": "pi8027",
        "date": "2019-10-23T17:52:20Z",
        "comment": "I found one more TODO. Factories in `ssrnum` are undocumented."
      },
      {
        "author": "pi8027",
        "date": "2019-10-23T20:16:10Z",
        "comment": "> * BTW do we need Order.Def?\r\n\r\nI think `Order.Def` is used only for this kind of explicit application: https://github.com/math-comp/math-comp/blob/8c8a9225479b72bc00252ca24eb4338bd06e9751/mathcomp/algebra/ssrnum.v#L371-L394 Having only *qualified* names such as `Order.le`, `Order.lt`, `Order.ge`, `Order.gt` might be enough for this.\r\n\r\n> * What about importing Order.Syntax in all of the subsequent Order.LTheory, Order.TTheory, etc. Note: a Syntax module is only useful to solve potential grammar conflicts. Which does not seem to be the case here.\r\n\r\nSince `Num.Syntax` is exported by default, doing the same for `Order.Syntax` might be better. Actually it works."
      },
      {
        "author": "CohenCyril",
        "date": "2019-10-24T07:41:55Z",
        "comment": "> I think `Order.Def` is used only for this kind of explicit application:\r\n\r\nThis can be done using scopes rather than modules and it should...\r\nAll of these notations should be in ring_scope."
      },
      {
        "author": "CohenCyril",
        "date": "2019-10-24T07:47:22Z",
        "comment": "> > I think `Order.Def` is used only for this kind of explicit application:\r\n> \r\n> This can be done using scopes rather than modules and it should...\r\n> All of these notations should be in ring_scope.\r\n\r\nOh no, it cannot... but simple notations are prefixed with their module and we maybe can \"hack\" the other ones to include it `\"@ 'Num.le' R\"` "
      },
      {
        "author": "pi8027",
        "date": "2019-10-24T11:33:07Z",
        "comment": "> Oh no, it cannot... but simple notations are prefixed with their module and we maybe can \"hack\" the other ones to include it `\"@ 'Num.le' R\"`\r\n\r\nAnyway, we need to make symbols like `Order.Def.lt` qualified or disambiguated with a suffix. Just making them qualified can be done by turning `Def` modules such as `Order.POrderDef` to sections and removing the `Order.Def` module. In this way, we don't need that hack."
      },
      {
        "author": "amahboubi",
        "date": "2019-10-24T12:33:17Z",
        "comment": "Naive question : what is this block of notation without a scope?"
      },
      {
        "author": "pi8027",
        "date": "2019-10-24T13:30:55Z",
        "comment": "@amahboubi `Num.Def.(ler|ltr|...)` were `Definition`s before this change. We need to redefine them to make the new `ssrnum` library compatible to a degree with the old one.\r\nhttps://github.com/math-comp/math-comp/blob/3ad8a9418dc5d39ef553033f5c8f581525a3aae3/mathcomp/algebra/ssrnum.v#L241-L263 In order to use order theories to reason about num structures, `<=%R` (`Num.Def.ler`) should have the same head symbol as `<=%O` without any reduction; thus, `Num.Def.(ler|ltr|...)` should be redefined as notations rather than definitions. Indeed `Notation ler := ...` things cannot be defined in a specific scope. `Notation \"@ 'ler' R\" := ...` things are declared for explicit application but their displays are fixed to `ring_display` (see https://github.com/math-comp/math-comp/pull/270#discussion_r259755442)."
      },
      {
        "author": "hivert",
        "date": "2019-10-29T22:38:39Z",
        "comment": "@CohenCyril asked me offline to comment here the naming convention. Currently `latticeType` are actually distributive lattice. It would be very uncommon in my community (combinatorics) to assume that all lattice are distributive.  So I'd rather have them called `distrLatticeType` or maybe `dlatticeType`. Note: since it's not something you'll write every line, my vote goes for the long name."
      },
      {
        "author": "pi8027",
        "date": "2019-10-30T09:18:12Z",
        "comment": "@hivert Could you confirm this renaming? Currently we don't have complemented non-distributive lattice structures in #388 and I'm not sure how interesting they are and that we should add them later.\r\n```\r\n(*           porderType == the type of partially ordered types                *)\r\n(*     distrLatticeType == the type of distributive lattices                  *)\r\n(*    bDistrLatticeType == distrLatticeType with a bottom element             *)\r\n(*   tbDistrLatticeType == distrLatticeType with both a top and a bottom      *)\r\n(*   cbDistrLatticeType == the type of sectionally complemented distributive  *)\r\n(*                         lattices                                           *)\r\n(*                         (lattices with bottom and a difference operation)  *)\r\n(*  ctbDistrLatticeType == the type of complemented distributive lattices     *)\r\n(*                         (lattices with top, bottom, difference, complement)*)\r\n(*            orderType == the type of totally ordered types                  *)\r\n(*        finPOrderType == the type of partially ordered finite types         *)\r\n(*  finDistrLatticeType == the type of nonempty finite distributive lattices  *)\r\n(* finCDistrLatticeType == the type of nonempty finite complemented           *)\r\n(*                         distributive lattices                              *)\r\n(*         finOrderType == the type of nonempty totally ordered finite types  *)\r\n```"
      },
      {
        "author": "hivert",
        "date": "2019-10-30T10:41:15Z",
        "comment": "That would be indeed my favorite naming convention. Note that I'm note sure that `sectionally complemented lattice` is a standard name. It looks that it the same as `relatively complemented distributive lattice` according to wikipedia. It moreover mention that \"A distributive lattice is complemented if and only if it is bounded and relatively complemented.\"..."
      },
      {
        "author": "pi8027",
        "date": "2019-10-30T12:48:17Z",
        "comment": "@hivert Sure. But currently, we don't have the relative complement operation \"the complement of `x` in the interval `[y, z]`\" in the library, which can easily be constructed from the sectional complement operation \"the complement of `x` in the interval `[0, y]`\"."
      },
      {
        "author": "pi8027",
        "date": "2019-10-31T20:26:11Z",
        "comment": "@CohenCyril I think you lost my last commit during the last rebasing: https://github.com/pi8027/math-comp/commit/1a2998ff78007bb508d216024864559d9882fc32. I rebased math-comp/fourcolor#19 so the CI failure on fourcolor will be disappeared."
      },
      {
        "author": "pi8027",
        "date": "2019-11-04T13:05:40Z",
        "comment": "I think we fixed all the problems discovered recently. I hope we can merge this after the next MathComp meeting!"
      },
      {
        "author": "amahboubi",
        "date": "2019-11-14T09:53:00Z",
        "comment": "This had been written long ago, but somehow I forgot to publish my review, sorry..."
      },
      {
        "author": "CohenCyril",
        "date": "2019-11-27T13:25:16Z",
        "comment": "@amahboubi are you happy with the rephrasings?"
      },
      {
        "author": "CohenCyril",
        "date": "2019-12-11T13:28:37Z",
        "comment": "@amahboubi I straightened the history. You can merge using \"Create a merge commit\" after the CI passes."
      }
    ],
    "review_discussion": [
      {
        "author": "pi8027",
        "file": "mathcomp/character/character.v",
        "date": "2019-02-20T12:08:29Z",
        "comment": "I needed to put a space here to distinguish from `@max` notation defined in order.v. It looks so bad, but I have no solution for this."
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/character/character.v",
        "date": "2019-02-25T10:13:07Z",
        "comment": "I object to this. The `@` symbol is reserved in the Coq syntax to mean explicit application, and the MathComp library should respect this and never create tokens of the form `@ident`. The only acceptable use of this kind of notation is to provide an explicit variant of an abbreviation, and it should be given as `\"@ 'ident'\"` at level 0 or `\"@ 'ident' X Y...\"` at level 10 so as to factor with the Coq grammar - see `ssrfun.v` for example. Caveat: I can't tell what the notation was meant for since it's not in the PR version of `order.v`."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/character/character.v",
        "date": "2019-02-25T10:29:48Z",
        "comment": "`@max` and `@min` are the explicit variants of overloaded max/min operators for totally ordered sets (`orderType`). Therefore as you pointed out they should be given as `\"@ 'max'\"` and `\"@ 'min'\"`. I didn't know this fact. Thank you so much."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/character/character.v",
        "date": "2019-02-25T12:01:24Z",
        "comment": "Fixed in #288"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2019-02-25T17:33:14Z",
        "comment": "To export the contents of the `ssrnum.Num` module in the `ssrnum.mc_1_7.Num` compatibility module without disabling interactive edit in PG and CoqIDE (see https://github.com/coq/coq/issues/8388), I have putted an alias of `ssrnum.Num` here. But this alias sometimes pollutes Coq responses. For example:\r\n```\r\nCoq < Check (0 <= 1)%R.\r\n0 <= 1\r\n     : bool\r\nwhere\r\n?t : [ |- mc_1_7.OrigNum.NumDomain.Exports.numDomainType]\r\n```\r\n\r\n```\r\nCoq < Print Canonical Projections.\r\n...\r\nint <- mc_1_7.OrigNum.NumDomain.sort ( int_numDomainType )\r\n...\r\n```\r\n\r\nRemoving this line and replacing all the `OrigNum` with `ssrnum.Num` solve this problem but disable interactive edit."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2019-02-26T09:44:43Z",
        "comment": "I found that some solutions have been provided for https://github.com/coq/coq/issues/8388, but we need to wait for the release of Coq 8.10 for making everything working well..."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2019-03-01T13:07:33Z",
        "comment": "@ggonthier suggestion: package on the fly to use nice symbols."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2019-03-04T15:23:34Z",
        "comment": "Is that really possible? There are no structure sharing ring operations, order, and norm before this declaration."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2019-03-04T17:40:53Z",
        "comment": "Yes, one could create a section with a variable `R : ringType` and axioms `pom : porderMixin R` and `norm_op : R -> R` do a `Let T := (R : Type)` and provide T with eq, zmod, ring, order and norm canonical structures."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2019-03-13T16:41:46Z",
        "comment": "I attempted this, but failed because of this issue: https://github.com/coq/coq/issues/9764. Types of `x` and `y` in the 5th axiom `{morph norm : x y / x * y}` cannot be inferred from implicit types declaration. (workaround: `{morph norm : x y / (x : T) * y}`)\r\n\r\nI also needed to put `Notation \"0\" := (0 : T)` because `@lt _ _ 0%R` cannot be typed before declaring a join structure of `porderType` and `zmodType`. As a conclusion, I prefer to keep this as it is and improve later."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/order.v",
        "date": "2019-03-18T14:50:40Z",
        "comment": "One may need to change this header because 1. order.v is not a draft anymore and 2. MathComp is distributed under CeCILL-B. @CohenCyril Could you please correct this as you wish?"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2019-03-19T08:28:17Z",
        "comment": "This `Export` command should be removed before merging."
      },
      {
        "author": "amahboubi",
        "file": "mathcomp/ssreflect/order.v",
        "date": "2019-11-04T13:24:37Z",
        "comment": "I suggest cutting the block l.8-13 and postpone it after the list of structures introduced by the present library."
      },
      {
        "author": "amahboubi",
        "file": "mathcomp/ssreflect/order.v",
        "date": "2019-11-04T13:26:27Z",
        "comment": "It is good practice in the doc to provide the complete list of arguments. You can still postpone the explanation of the display argument to the next paragraph."
      },
      {
        "author": "amahboubi",
        "file": "mathcomp/ssreflect/order.v",
        "date": "2019-11-04T13:27:44Z",
        "comment": "\"over these structures\" is not clear. Something like \"For x, y : <appropriate type annotation>\" would be more informative."
      },
      {
        "author": "amahboubi",
        "file": "mathcomp/ssreflect/order.v",
        "date": "2019-11-04T13:28:32Z",
        "comment": "Misleading or ambiguous semi-colon at the end of the line."
      },
      {
        "author": "amahboubi",
        "file": "mathcomp/ssreflect/order.v",
        "date": "2019-11-04T13:30:14Z",
        "comment": "Explain which structure introduces these constants, and what they mean (in particular for comparable and incomparable)."
      },
      {
        "author": "amahboubi",
        "file": "mathcomp/ssreflect/order.v",
        "date": "2019-11-04T13:32:30Z",
        "comment": "\"different structures defined on copies of one\" is not clear. On a same type?"
      },
      {
        "author": "amahboubi",
        "file": "mathcomp/ssreflect/order.v",
        "date": "2019-11-04T13:34:23Z",
        "comment": "I suggest: \"If T holds a structure of partially ordered type (e.g. if T : porderType d, for some display d)\"."
      },
      {
        "author": "amahboubi",
        "file": "mathcomp/ssreflect/order.v",
        "date": "2019-11-04T13:36:06Z",
        "comment": "I find \"copy of T\" ambiguous. The underlying type is not copied, only the structure isn't it?"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/order.v",
        "date": "2019-11-27T02:41:17Z",
        "comment": "addressed"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/order.v",
        "date": "2019-11-27T02:41:36Z",
        "comment": "fixed"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/order.v",
        "date": "2019-11-27T02:42:08Z",
        "comment": "I tried to address this."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/order.v",
        "date": "2019-11-27T02:42:54Z",
        "comment": "The suggestion was not the right explanation. I tried to rephrase."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/order.v",
        "date": "2019-11-27T02:43:04Z",
        "comment": "I tried to explain better."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/order.v",
        "date": "2019-11-27T02:53:29Z",
        "comment": "fixed"
      },
      {
        "author": "pi8027",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2019-12-03T14:04:23Z",
        "comment": "`1.9` and `mc_1_9.Num` should be `1.10` and `mc_1_10.Num`. I fix them now."
      },
      {
        "author": "amahboubi",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2019-12-04T13:04:58Z",
        "comment": "`hierarchy.ml` really?"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2019-12-04T16:04:31Z",
        "comment": "Yes cf etc/utils/hierarchy.ml (do you wish there were more explainations here?)"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2019-12-06T09:07:42Z",
        "comment": "This is because of `hierarchy.ml` constructs the inheritance graph from the output of `Print Canonical Projections` and filters out all the join of A and B where A and B do not inherit each other. If A inherits B, we usually declare the join of A and B in the `Exports` module of A, so `hierarchy.ml` filters out all the join of A and B that is not declared in the `Exports` module of A or B. However, this does not apply to `numDomainType` and `normedZmodType` if we get rid of this workaround.\r\n\r\nAnother possible solution is recognizing constants as inheritances that are declared as both canonical projections and coercions, but this does not apply to `finGroupType`."
      }
    ],
    "tags": [
      {
        "tag": "kind: enhancement",
        "description": "Issue or PR about addition of features."
      },
      {
        "tag": "kind: refactoring",
        "description": "Issue or PR about a refactoring. (reorganizing the code, reusing theorems, simplifications...)"
      }
    ],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "80bf757ad263efd615d517b68e155aaa4e68aa89",
        "message": "Initial import of order.v into mathcomp",
        "date": "2019-12-11T13:18:15Z"
      },
      {
        "author": "pi8027",
        "committer": "CohenCyril",
        "hash": "fbf0b7568b8d6231671954cba8bcae4120e591cc",
        "message": "Make an appropriate use of the order library everywhere (#278, #280, #282, #283, #285, #286, #288, #296, #330, #334, and #341)\n\nssrnum related changes:\n- Redefine the intermediate structure between `idomainType` and `numDomainType`,\n  which is `normedDomainType` (normed integral domain without an order).\n- Generalize (by using `normedDomainType` or the order structures), relocate\n  (to order.v), and rename ssrnum related definitions and lemmas.\n- Add a compatibility module `Num.mc_1_9` and export it to check compilation.\n- Remove the use of the deprecated definitions and lemmas from entire theories.\n- Implement factories mechanism to construct several ordered and num structures\n  from fewer axioms.\n\norder related changes:\n- Reorganize the hierarchy of finite lattice structures. Finite lattices have\n  top and bottom elements except for empty set. Therefore we removed finite\n  lattice structures without top and bottom.\n- Reorganize the theory modules in order.v:\n  + `LTheory` (lattice and partial order, without complement and totality)\n  + `CTheory` (`LTheory` + complement)\n  + `Theory` (all)\n- Give a unique head symbol for `Total.mixin_of`.\n- Replace reverse and `^r` with converse and `^c` respectively.\n- Fix packing and cloning functions and notations.\n- Provide more ordered type instances:\n  Products and lists can be ordered in two different ways: the lexicographical\n  ordering and the pointwise ordering. Now their canonical instances are not\n  exported to make the users choose them.\n- Export `Order.*.Exports` modules by default.\n- Specify the core hint database explicitly in order.v. (see #252)\n- Apply 80 chars per line restriction.\n\nGeneral changes:\n- Give consistency to shape of formulae and namings of `lt_def` and `lt_neqAle`\n  like lemmas:\n  lt_def    x y : (x < y) = (y != x) && (x <= y),\n  lt_neqAle x y : (x < y) = (x != y) && (x <= y).\n- Enable notation overloading by using scopes and displays:\n  + Define `min` and `max` notations (`minr` and `maxr` for `ring_display`) as\n    aliases of `meet` and `join` specialized for `total_display`.\n  + Provide the `ring_display` version of `le`, `lt`, `ge`, `gt`, `leif`, and\n    `comparable` notations and their explicit variants in `Num.Def`.\n  + Define 3 variants of `[arg min_(i < n | P) F]` and `[arg max_(i < n | P) F]`\n    notations in `nat_scope` (specialized for nat), `order_scope` (general\n    version), and `ring_scope` (specialized for `ring_display`).\n- Update documents and put CHANGELOG entries.",
        "date": "2019-12-11T13:18:23Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "6d34f29cf906b6672925ee3abd4e54b59eea784f",
        "message": "Changing license",
        "date": "2019-12-11T13:25:52Z"
      },
      {
        "author": "pi8027",
        "committer": "CohenCyril",
        "hash": "ebd828b4939f105d7ea7d7bb950b5dcfd6887981",
        "message": "Use `deprecate` notation in ssrnum",
        "date": "2019-12-11T13:26:52Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "f0e9ca0a160fd11716cc759cab8c6cbcbf20a32d",
        "message": "Fixes in naming, mixins, doc and canonical ordering\n\n- comparer -> compare (in order.v)\n- eq constructor of compare goes last\n- \"x < y\" is matched before \"x > y\"\n- \"x <= y\" is matched before \"x >= y\"\n- adding prod and lexi ordering on tuple\n- adding missing CS\n- edit CHANGELOG",
        "date": "2019-12-11T13:26:52Z"
      },
      {
        "author": "pi8027",
        "committer": "CohenCyril",
        "hash": "581c08d1b045dbf51418df17350c84fda4eada93",
        "message": "Reorder the arguments of the comparison predicates in order.v\n\nThe comparison predicates (for nat, ordered types, ordered integral domains)\nmust have the following order of arguments:\n- leP   x y : le_xor_gt x y ... (x <= y) (y < x) ... .\n- ltP   x y : lt_xor_ge x y ... (y <= x) (x < y) ... .\n- ltgtP x y : compare   x y ... (y == x) (x == y) (x >= y) (x <= y) (x > y) (x < y) ... .",
        "date": "2019-12-11T13:26:52Z"
      },
      {
        "author": "pi8027",
        "committer": "CohenCyril",
        "hash": "b0a01acd904cbfcaf47d821b3b5e72098b9efb07",
        "message": "Add (meet|join)_(l|r), some renamings, and small cleanups\n\nNew lemmas:\n- meet_l, meet_r, join_l, join_r.\n\nRenamings:\n- Order.BLatticeTheory.lexUl -> disjoint_lexUl,\n- Order.BLatticeTheory.lexUr -> disjoint_lexUr,\n- Order.TBLatticeTheory.lexIl -> cover_leIxl,\n- Order.TBLatticeTheory.lexIr -> cover_leIxr.\n\nUse `Order.TTheory` instead of `Order.Theory` if applicable",
        "date": "2019-12-11T13:26:52Z"
      },
      {
        "author": "pi8027",
        "committer": "CohenCyril",
        "hash": "f8d7a9f1090785a61dd81d745a0f46a24515f3d8",
        "message": "Rename `totalLatticeMixin` to `totalPOrderMixin` and several refactor\n\n- Rename `totalLatticeMixin` to `totalPOrderMixin`.\n- Refactor num mixins.\n- Use `Num.min` and `Num.max` rather than lattice notations if applicable.",
        "date": "2019-12-11T13:26:52Z"
      },
      {
        "author": "pi8027",
        "committer": "CohenCyril",
        "hash": "e7df10a74264f52a17f54f87b8a89c9360a46926",
        "message": "Redefine `normedDomainType` (now `normedZmodType`) (#392)\n\n* Redefine `normedDomainType` (now `normedZmodType`)\r\n\r\n- Redefine `normedDomainType` to drop ring and integral domain axioms.\r\n- Add canonical instance of `normedZmodType` for `prod`.",
        "date": "2019-12-11T13:26:52Z"
      },
      {
        "author": "pi8027",
        "committer": "CohenCyril",
        "hash": "843e345d5d8217a02de9e7fe20406b83074e807d",
        "message": "order.v: remove Order.Def, export Order.Syntax by default, and put missing scopes",
        "date": "2019-12-11T13:26:52Z"
      },
      {
        "author": "affeldt-aist",
        "committer": "CohenCyril",
        "hash": "81a3634d0b72262fd8e6299bc94d9a7ab31ce3c0",
        "message": "editing documentation in order.v and ssrnum.v",
        "date": "2019-12-11T13:26:52Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "d913820cc104a43117604469dc47fca7114a98bd",
        "message": "Adding nat lattice under the name natdvd",
        "date": "2019-12-11T13:26:52Z"
      },
      {
        "author": "pi8027",
        "committer": "CohenCyril",
        "hash": "44e8df83ad4e4394a96c15c787405cdea8931074",
        "message": "Rename: (l|L)attice -> (d|D)istrLattice",
        "date": "2019-12-11T13:26:52Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "1a3b42a0cd96ff448f8dc686711d8b2b5d3b0a6c",
        "message": "Comparability in a numDomainType\n\namounts to the difference being real, and consequences",
        "date": "2019-12-11T13:26:52Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "696cd421b27ff2bee821c053c3c3d5926e9d68d3",
        "message": "Doc, comments, changelog and better proofs\n\n- adding a doc paragraph on displays\n- Changelog\n- better proofs for new logn, gcdn, lcmn, partn facts\n- Putting comments in the example of nat",
        "date": "2019-12-11T13:26:52Z"
      },
      {
        "author": "pi8027",
        "committer": "CohenCyril",
        "hash": "050ad8395fb250e9396b7a376a75c523567e177c",
        "message": "Fix notation modifiers and scopes",
        "date": "2019-12-11T13:26:52Z"
      },
      {
        "author": "affeldt-aist",
        "committer": "CohenCyril",
        "hash": "b3261c9020105f3c6667697b22ca8a542271bc4c",
        "message": "renaming NormedZmoduleType and NormedZmoduleMixin (#416)\n\n* renaming\r\nNormedZmoduleType -> NormedZmodType\r\nNormedZmoduleMixin -> NormedZmodMixin\r\nthat looks more homogeneous with regard to naming conventions used so far\r\n\r\n* update .gitlab-ci.yml\r\n\r\n* typo",
        "date": "2019-12-11T13:26:52Z"
      },
      {
        "author": "affeldt-aist",
        "committer": "CohenCyril",
        "hash": "ab2b7de07c7236531bc08a0b9f53046593e47051",
        "message": "remove ProdNormedZmodule (#419)\n\n* remove ProdNormedZmodule from ssrnum.v, it made its way to mathcomp-analysis in a generalized form (branch analysis_270) at the time of this writing\r\n\r\n* update gitlab-ci",
        "date": "2019-12-11T13:26:52Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "0d7ffe8610da33bdce2cf7f612eef7e5a777cd8e",
        "message": "Rephrasing the doc",
        "date": "2019-12-11T13:26:52Z"
      },
      {
        "author": "pi8027",
        "committer": "CohenCyril",
        "hash": "3f6aa286677f6cb0659300afd2b612b7bce20e73",
        "message": "The compatibility module in ssrnum should now be for version 1.10",
        "date": "2019-12-11T13:26:52Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 269,
    "diff_summary": [
      {
        "file": "ChangeLog",
        "status": "M",
        "additions": 245,
        "deletions": 54
      },
      {
        "file": "mathcomp/algebra/interval.v",
        "status": "M",
        "additions": 245,
        "deletions": 54
      },
      {
        "file": "mathcomp/algebra/ssrnum.v",
        "status": "M",
        "additions": 245,
        "deletions": 54
      }
    ],
    "state": "merged",
    "open_date": "2019-01-16T17:05:25Z",
    "update_date": "2019-01-29T12:35:32Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "a1dc609d9cbc2e5233194537a7c93188ec1fe9a8",
        "message": "Add some theorems on lersif and intervals",
        "date": "2019-01-14T09:47:23Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "ae316d41039ae7bad6dac5f245ac35cd587eb023",
        "message": "Add more theorems on lersif",
        "date": "2019-01-16T16:20:25Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "0ed5a05037cc91a8d1f2e91f6f1e96b939bc2527",
        "message": "Remove needless parens",
        "date": "2019-01-18T18:14:07Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "c72a881ecfeec49c996e3bda7d9874a020ebbf9d",
        "message": "ChangeLog",
        "date": "2019-01-18T18:15:57Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "4505d6bb447a382a05bc2d03d3dad1d439260cc0",
        "message": "Move lersifN",
        "date": "2019-01-19T21:22:57Z"
      },
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "27619090462f91be31ebdf82b5c13b6bca70ba12",
        "message": "Add lersif_anti",
        "date": "2019-01-21T13:24:08Z"
      }
    ]
  },
  {
    "author": "gares",
    "number": 268,
    "diff_summary": [
      {
        "file": "mathcomp/algebra/matrix.v",
        "status": "M",
        "additions": 38,
        "deletions": 38
      },
      {
        "file": "mathcomp/algebra/mxalgebra.v",
        "status": "M",
        "additions": 38,
        "deletions": 38
      },
      {
        "file": "mathcomp/algebra/ssralg.v",
        "status": "M",
        "additions": 38,
        "deletions": 38
      },
      {
        "file": "mathcomp/character/character.v",
        "status": "M",
        "additions": 38,
        "deletions": 38
      },
      {
        "file": "mathcomp/character/mxabelem.v",
        "status": "M",
        "additions": 38,
        "deletions": 38
      },
      {
        "file": "mathcomp/character/mxrepresentation.v",
        "status": "M",
        "additions": 38,
        "deletions": 38
      },
      {
        "file": "mathcomp/field/algC.v",
        "status": "M",
        "additions": 38,
        "deletions": 38
      },
      {
        "file": "mathcomp/field/algebraics_fundamentals.v",
        "status": "M",
        "additions": 38,
        "deletions": 38
      },
      {
        "file": "mathcomp/fingroup/action.v",
        "status": "M",
        "additions": 38,
        "deletions": 38
      },
      {
        "file": "mathcomp/fingroup/gproduct.v",
        "status": "M",
        "additions": 38,
        "deletions": 38
      },
      {
        "file": "mathcomp/fingroup/morphism.v",
        "status": "M",
        "additions": 38,
        "deletions": 38
      },
      {
        "file": "mathcomp/fingroup/perm.v",
        "status": "M",
        "additions": 38,
        "deletions": 38
      },
      {
        "file": "mathcomp/solvable/abelian.v",
        "status": "M",
        "additions": 38,
        "deletions": 38
      },
      {
        "file": "mathcomp/solvable/extremal.v",
        "status": "M",
        "additions": 38,
        "deletions": 38
      },
      {
        "file": "mathcomp/solvable/hall.v",
        "status": "M",
        "additions": 38,
        "deletions": 38
      },
      {
        "file": "mathcomp/solvable/maximal.v",
        "status": "M",
        "additions": 38,
        "deletions": 38
      },
      {
        "file": "mathcomp/solvable/primitive_action.v",
        "status": "M",
        "additions": 38,
        "deletions": 38
      },
      {
        "file": "mathcomp/ssreflect/bigop.v",
        "status": "M",
        "additions": 38,
        "deletions": 38
      },
      {
        "file": "mathcomp/ssreflect/div.v",
        "status": "M",
        "additions": 38,
        "deletions": 38
      },
      {
        "file": "mathcomp/ssreflect/finset.v",
        "status": "M",
        "additions": 38,
        "deletions": 38
      },
      {
        "file": "mathcomp/ssreflect/path.v",
        "status": "M",
        "additions": 38,
        "deletions": 38
      },
      {
        "file": "mathcomp/ssreflect/ssrnat.v",
        "status": "M",
        "additions": 38,
        "deletions": 38
      }
    ],
    "state": "closed",
    "open_date": "2019-01-16T15:52:33Z",
    "update_date": "2019-01-18T20:04:44Z",
    "discussion": [
      {
        "author": "erikmd",
        "date": "2019-01-16T16:41:04Z",
        "comment": "BTW the GitLab CI report is not yet available since the steps mentioned in [https://github.com/coq/bot#…](https://github.com/coq/bot#rely-on-coqbot-to-synchronize-your-github-prs-with-your-gitlab-project) have to be performed beforehand.\r\nFYI I was just able to do the required steps on the GitLab CI side (adding @coqbot as Developer and add two webhooks in GitLab CI).\r\nCould one owner of https://github.com/math-comp/math-comp do the other steps required on the GitHub side?\r\n\r\n> * go to \"Settings\" / \"Collaborators & teams\" to add @coqbot as a collaborator (so that it can push status checks).\r\n> * go to \"Settings\" / \"Webhooks\" and add one webhook with URL https://coqbot.herokuapp.com/pull_request that will only be triggered by pull request events. Make sure you change the \"content/type\" value to \"application/json\".\r\n \r\nFinally, you could also disable Travis CI builds…\r\nCc @CohenCyril @gares"
      },
      {
        "author": "erikmd",
        "date": "2019-01-18T19:46:13Z",
        "comment": "GitLab CI is now enabled and I believe it would suffice to close and reopen this PR to (re)trigger the build."
      },
      {
        "author": "gares",
        "date": "2019-01-18T20:04:38Z",
        "comment": "After a discussion with @ggonthier I'm refining the semantics of `{x..}y` so that these failures don't occur. Hence I'm closing this PR."
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "gares",
        "committer": "gares",
        "hash": "938f427835a0722d4192f3f93912b2666c912b85",
        "message": "fix breakage of coq/9341",
        "date": "2019-01-16T15:42:42Z"
      }
    ]
  },
  {
    "author": "erikmd",
    "number": 266,
    "diff_summary": [
      {
        "file": ".dockerignore",
        "status": "A",
        "additions": 272,
        "deletions": 12
      },
      {
        "file": ".gitlab-ci.yml",
        "status": "A",
        "additions": 272,
        "deletions": 12
      },
      {
        "file": "Dockerfile",
        "status": "A",
        "additions": 272,
        "deletions": 12
      },
      {
        "file": "Dockerfile.make",
        "status": "A",
        "additions": 272,
        "deletions": 12
      },
      {
        "file": "README.md",
        "status": "A",
        "additions": 272,
        "deletions": 12
      },
      {
        "file": "mathcomp/algebra/opam",
        "status": "A",
        "additions": 272,
        "deletions": 12
      },
      {
        "file": "mathcomp/character/opam",
        "status": "A",
        "additions": 272,
        "deletions": 12
      },
      {
        "file": "mathcomp/field/opam",
        "status": "A",
        "additions": 272,
        "deletions": 12
      },
      {
        "file": "mathcomp/fingroup/opam",
        "status": "A",
        "additions": 272,
        "deletions": 12
      },
      {
        "file": "mathcomp/solvable/opam",
        "status": "A",
        "additions": 272,
        "deletions": 12
      },
      {
        "file": "mathcomp/ssreflect/opam",
        "status": "A",
        "additions": 272,
        "deletions": 12
      }
    ],
    "state": "merged",
    "open_date": "2018-12-20T18:47:34Z",
    "update_date": "2019-01-15T09:43:00Z",
    "discussion": [
      {
        "author": "erikmd",
        "date": "2018-12-20T19:04:08Z",
        "comment": "Sorry I just noticed a big typo crept in the .yml; I'll fix this in 1-2h max (currently on my phone without Git client...)"
      },
      {
        "author": "erikmd",
        "date": "2018-12-20T20:06:03Z",
        "comment": "Done.\r\nBTW I've changed the suggested manip to test this PR, see the **\"ToDo\"** paragraph of https://github.com/math-comp/math-comp/pull/266#issue-240267329\r\n\r\nCc @CohenCyril "
      },
      {
        "author": "erikmd",
        "date": "2018-12-21T11:20:56Z",
        "comment": "Hi @CohenCyril, there was a small bug for Coq 8.6 due to the exit code of `[ -n \"$sw\" ] && opam switch remove -y \"${sw}\"`, so I've replaced this with some regular `if-then-fi`. I also tweaked a few details (including the addition of a markdown badge).\r\n\r\nCyril, could you start a new branch build in the same way? (a force-push will certainly be required though)"
      },
      {
        "author": "Zimmi48",
        "date": "2018-12-21T12:32:37Z",
        "comment": "Regarding support for GitHub PR from forks, cf. coq/bot#23."
      },
      {
        "author": "erikmd",
        "date": "2018-12-21T15:13:30Z",
        "comment": "Hi @CohenCyril, the pipeline build was OK, cf. https://gitlab.com/math-comp/math-comp/pipelines/40996606;\r\nI guess you can now merge this PR in master? so we'll be able to check the additional `docker push` of the four mathcomp-master images to https://hub.docker.com/r/mathcomp/mathcomp-dev works as well…"
      },
      {
        "author": "erikmd",
        "date": "2018-12-21T19:39:55Z",
        "comment": "FYI I've just pushed a slight change for the GitLab Docker images naming convention:\r\n`registry.gitlab.com/math-comp/math-comp/branch-slug:iid_coq-version`, e.g.\r\n`registry.gitlab.com/math-comp/math-comp/master:3_coq-8.6`\r\n\r\n(Indeed GitLab CI basically [accepts](https://gitlab.com/math-comp/math-comp/container_registry) \"2 more slashes\" than Docker Hub images, e.g. `registry.gitlab.com/math-comp/math-comp/optional-name/optional-image-name:tag` would be OK)"
      },
      {
        "author": "erikmd",
        "date": "2018-12-21T21:30:09Z",
        "comment": "Hi, sorry I finally backtracked and removed my additional commit 64e0a090937694482a6dac1cf0e8e8b40f87aebc that was changing the GitLab images naming convention, as even if it would have facilitated the manual removing of images (requiring fewer clicks, only one per \"sub-repository\"), it would have removed the possibility to remove programmatically these \"sub-repositories\", given the endpoints provided in the [Docker Registry HTTP API](https://github.com/docker/distribution/blob/master/docs/spec/api.md) implemented in GitLab CI."
      },
      {
        "author": "erikmd",
        "date": "2019-01-14T21:49:28Z",
        "comment": "Hi @CohenCyril! do you agree to merge this?\r\n\r\nFYI the automatic deletion feature of the `registry.gitlab.com/math-comp/math-comp:1_master_coq-…` Docker images that I was mentioning earlier is not really necessary per se (it is rather something useful for GitLab CI servers themselves to scale more). Anyway, this feature is not directly available in GitLab CI API currently (there is an [open issue in gitlab-ce](https://gitlab.com/gitlab-org/gitlab-ce/issues/21608), so it could only be implemented using a kind of workaround for the time being).\r\n\r\nFor the record, after merging #266, you should also take care of:\r\n* configuring coqbot to automatically push PR branches to GitLab CI\r\n  (cf. the nice documentation prepared by @Zimmi48 in [this readme](https://github.com/coq/bot#rely-on-coqbot-to-synchronize-your-github-prs-with-your-gitlab-project))\r\n* and maybe disable Travis CI builds to avoid unnecessary redundancy… \r\n\r\nBest wishes for the new year! Erik"
      },
      {
        "author": "CohenCyril",
        "date": "2019-01-15T09:43:16Z",
        "comment": "Thanks Erik! Happy new year to you too."
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "erikmd",
        "committer": "erikmd",
        "hash": "1046da99d22462d6aeb23dd12043c2537f47abf1",
        "message": "Move-and-rename opam files to the root folder\n\n* (Update make's path accordingly)\n* This patch is required for opam 2.0 pinning\n* As a result, these *.opam files are now similar to the opam files in\n  https://github.com/coq/opam-coq-archive/blob/master/extra-dev/packages/coq-mathcomp-*/coq-mathcomp-*.dev/",
        "date": "2018-12-20T18:38:50Z"
      },
      {
        "author": "erikmd",
        "committer": "erikmd",
        "hash": "6fd03806214dccc7b54915da32299b9d6e64e5c7",
        "message": "Avoid a warning regarding opam files\n\n\"\"\"\nFailed checks on coq-mathcomp-ssreflect package definition from source\n  at file:///home/coq/mathcomp/ssreflect:\n    error 57: Synopsis and description must not be both empty\n\"\"\"",
        "date": "2018-12-20T18:38:50Z"
      },
      {
        "author": "erikmd",
        "committer": "erikmd",
        "hash": "036e10fc07ca816e9c0587e2bde55a2928c37388",
        "message": "Add .dockerignore (partly whitelist-based, partly like .gitignore)",
        "date": "2018-12-20T18:38:50Z"
      },
      {
        "author": "erikmd",
        "committer": "erikmd",
        "hash": "25630e23f09cd9c1b4b8bb9dbb2b3172111a92f1",
        "message": "Add Dockerfile to build mathcomp using its opam files",
        "date": "2018-12-21T11:17:07Z"
      },
      {
        "author": "erikmd",
        "committer": "erikmd",
        "hash": "3b654a62d7938e674e99a6bfd3823016db067bee",
        "message": "Add Docker-based GitLab CI configuration\n\n* Design:\n  - build stage (e.g. docker build -t mathcomp-dev:$IID_$SLUG_coq-8.6 .)\n    - choice of the OCaml compiler: var OPAM_SWITCH in {base, edge}\n      (Dockerfile containing: \"opam switch set $compiler && eval $(opam env)\")\n    - master (protected branch) => push on GitLab registry and Docker Hub\n    - other branches (not tags) => push on GitLab registry\n    - Todo: GitHub PRs => push on GitLab\n  - test stage (image: mathcomp-dev:$IID_$SLUG_coq-8.6)\n    - script template foreach project (custom CONTRIB_URL, script)\n    - jobs foreach project and Coq version (custom COQ_VERSION, CONTRIB_VERSION)\n\n* Config for protected branches:\n  - set vars HUB_REGISTRY, HUB_REGISTRY_USER, HUB_REGISTRY_IMAGE, HUB_TOKEN\n\n* Remark:\n  - The name chosen for branches should ideally yield different values\n    of CI_COMMIT_REF_SLUG.\n  - But this is not mandatory as image tags start with \"${CI_PIPELINE_IID}_\".\n  cf. doc:\n  - CI_COMMIT_REF_NAME: The branch or tag name for which project is built.\n  - CI_COMMIT_REF_SLUG: $CI_COMMIT_REF_NAME lowercased, shortened to 63 bytes,\n    and with everything except 0-9 and a-z replaced with -.\n    No leading / trailing -. Use in URLs, host names and domain names.\n  - CI_PIPELINE_IID: The unique id of the current pipeline scoped to project.",
        "date": "2018-12-21T11:17:07Z"
      },
      {
        "author": "erikmd",
        "committer": "erikmd",
        "hash": "1c14614a2328d1854fd584d8d7ca54121faec0ee",
        "message": "Improve the mathcomp-dev Dockerfile (using Docker's multi-stage build)\n\n* Install coq-mathcomp-character in only 1 switch (cf. the build-arg $compiler)\n* Remove the other switch\n* Base the final image on coqorg/base:bare (which has no OCaml compiler layers)",
        "date": "2018-12-21T11:17:07Z"
      },
      {
        "author": "erikmd",
        "committer": "erikmd",
        "hash": "da5985eae6656be1bd30aee76c8d08dbc3a09c25",
        "message": "chore: s/.build/.opam-build/",
        "date": "2018-12-21T11:17:07Z"
      },
      {
        "author": "erikmd",
        "committer": "erikmd",
        "hash": "ab8aefdcff6cf02e8cfe51bd052242f9907c5e72",
        "message": "Add hidden job .make-build to also test the Makefile build infra\n\n* This job is only instantiated with coqorg/coq:latest\n* Add the associated Dockerfile.make",
        "date": "2018-12-21T11:17:14Z"
      },
      {
        "author": "erikmd",
        "committer": "erikmd",
        "hash": "11c1489d8906ef62485b9b9d145f44acc4b9471a",
        "message": "README.md: Add GitLab CI badge",
        "date": "2018-12-21T11:17:14Z"
      }
    ]
  },
  {
    "author": "ggonthier",
    "number": 265,
    "diff_summary": [
      {
        "file": "mathcomp/fingroup/fingroup.v",
        "status": "M",
        "additions": 25,
        "deletions": 21
      }
    ],
    "state": "merged",
    "open_date": "2018-12-18T22:07:44Z",
    "update_date": "2018-12-20T10:29:29Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2018-12-19T15:27:21Z",
        "comment": "@ggonthier was there a regression of Coq, and, anyway, do you think this restriction is justified?"
      },
      {
        "author": "ggonthier",
        "date": "2018-12-19T15:32:44Z",
        "comment": "I'm debating this with @herbelin in coq/coq#9180 right now. This is a longstanding issue that may eventually get fixed, but this PR should permanently  settle the issue for `mingnroup` and `maxgroup`. I only realised recently that there was some partial support for externing notation with mixed free/bound variables."
      }
    ],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: fix",
        "description": "PR that fixes a bug. Please refer to the appropriate issue(s) if relevant."
      }
    ],
    "commits": [
      {
        "author": "ggonthier",
        "committer": "ggonthier",
        "hash": "5b48f0ef374c167cc5cd82589ee00e8ac76f3e67",
        "message": "swap mingroup / maxgroup arguments\n\nMoved set argument before predicate argument for mingroup and maxgroup\nbecause Coq only displays notation with identifier parameters that are\nboth bound and free if there is at least one free occurrence to the\nleft of the binder.",
        "date": "2018-12-18T21:37:52Z"
      }
    ]
  },
  {
    "author": "ggonthier",
    "number": 264,
    "diff_summary": [
      {
        "file": "ChangeLog",
        "status": "M",
        "additions": 105,
        "deletions": 71
      },
      {
        "file": "mathcomp/character/mxrepresentation.v",
        "status": "M",
        "additions": 105,
        "deletions": 71
      }
    ],
    "state": "merged",
    "open_date": "2018-12-14T16:43:52Z",
    "update_date": "2018-12-14T17:56:20Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: documentation",
        "description": "Issue or PR about documentation mistakes, deficiencies, enhancements, ..."
      },
      {
        "tag": "kind: refactoring",
        "description": "Issue or PR about a refactoring. (reorganizing the code, reusing theorems, simplifications...)"
      }
    ],
    "commits": [
      {
        "author": "ggonthier",
        "committer": "ggonthier",
        "hash": "718ae58fbf794dd069d0d4a5e35da697f0aabba9",
        "message": "Correct and improve implicits and documentation of MatrixGenField\n\nRefactored and completed implicit and scope signatures of constants of\nMatrixGenField, the module that contains the construction of an\nextension field for an irreducible representation, and for decidability\ndefinitions.\n  Completed and corrected some errors in the corresponding header\ndocumentation.",
        "date": "2018-12-14T16:43:07Z"
      }
    ]
  },
  {
    "author": "ggonthier",
    "number": 262,
    "diff_summary": [
      {
        "file": "ChangeLog",
        "status": "M",
        "additions": 296,
        "deletions": 178
      },
      {
        "file": "mathcomp/algebra/intdiv.v",
        "status": "M",
        "additions": 296,
        "deletions": 178
      },
      {
        "file": "mathcomp/algebra/matrix.v",
        "status": "M",
        "additions": 296,
        "deletions": 178
      },
      {
        "file": "mathcomp/algebra/mxpoly.v",
        "status": "M",
        "additions": 296,
        "deletions": 178
      },
      {
        "file": "mathcomp/algebra/poly.v",
        "status": "M",
        "additions": 296,
        "deletions": 178
      },
      {
        "file": "mathcomp/algebra/ssralg.v",
        "status": "M",
        "additions": 296,
        "deletions": 178
      },
      {
        "file": "mathcomp/algebra/ssrint.v",
        "status": "M",
        "additions": 296,
        "deletions": 178
      },
      {
        "file": "mathcomp/algebra/ssrnum.v",
        "status": "M",
        "additions": 296,
        "deletions": 178
      },
      {
        "file": "mathcomp/algebra/vector.v",
        "status": "M",
        "additions": 296,
        "deletions": 178
      },
      {
        "file": "mathcomp/algebra/zmodp.v",
        "status": "M",
        "additions": 296,
        "deletions": 178
      },
      {
        "file": "mathcomp/character/character.v",
        "status": "M",
        "additions": 296,
        "deletions": 178
      },
      {
        "file": "mathcomp/character/classfun.v",
        "status": "M",
        "additions": 296,
        "deletions": 178
      },
      {
        "file": "mathcomp/character/mxabelem.v",
        "status": "M",
        "additions": 296,
        "deletions": 178
      },
      {
        "file": "mathcomp/character/mxrepresentation.v",
        "status": "M",
        "additions": 296,
        "deletions": 178
      },
      {
        "file": "mathcomp/character/vcharacter.v",
        "status": "M",
        "additions": 296,
        "deletions": 178
      },
      {
        "file": "mathcomp/field/algC.v",
        "status": "M",
        "additions": 296,
        "deletions": 178
      },
      {
        "file": "mathcomp/field/algnum.v",
        "status": "M",
        "additions": 296,
        "deletions": 178
      },
      {
        "file": "mathcomp/field/closed_field.v",
        "status": "M",
        "additions": 296,
        "deletions": 178
      },
      {
        "file": "mathcomp/field/fieldext.v",
        "status": "M",
        "additions": 296,
        "deletions": 178
      },
      {
        "file": "mathcomp/field/galois.v",
        "status": "M",
        "additions": 296,
        "deletions": 178
      },
      {
        "file": "mathcomp/fingroup/action.v",
        "status": "M",
        "additions": 296,
        "deletions": 178
      },
      {
        "file": "mathcomp/fingroup/fingroup.v",
        "status": "M",
        "additions": 296,
        "deletions": 178
      },
      {
        "file": "mathcomp/fingroup/morphism.v",
        "status": "M",
        "additions": 296,
        "deletions": 178
      },
      {
        "file": "mathcomp/fingroup/perm.v",
        "status": "M",
        "additions": 296,
        "deletions": 178
      },
      {
        "file": "mathcomp/fingroup/quotient.v",
        "status": "M",
        "additions": 296,
        "deletions": 178
      },
      {
        "file": "mathcomp/solvable/alt.v",
        "status": "M",
        "additions": 296,
        "deletions": 178
      },
      {
        "file": "mathcomp/solvable/finmodule.v",
        "status": "M",
        "additions": 296,
        "deletions": 178
      },
      {
        "file": "mathcomp/ssreflect/choice.v",
        "status": "M",
        "additions": 296,
        "deletions": 178
      },
      {
        "file": "mathcomp/ssreflect/eqtype.v",
        "status": "M",
        "additions": 296,
        "deletions": 178
      },
      {
        "file": "mathcomp/ssreflect/finfun.v",
        "status": "M",
        "additions": 296,
        "deletions": 178
      },
      {
        "file": "mathcomp/ssreflect/finset.v",
        "status": "M",
        "additions": 296,
        "deletions": 178
      },
      {
        "file": "mathcomp/ssreflect/fintype.v",
        "status": "M",
        "additions": 296,
        "deletions": 178
      },
      {
        "file": "mathcomp/ssreflect/generic_quotient.v",
        "status": "M",
        "additions": 296,
        "deletions": 178
      },
      {
        "file": "mathcomp/ssreflect/tuple.v",
        "status": "M",
        "additions": 296,
        "deletions": 178
      }
    ],
    "state": "merged",
    "open_date": "2018-12-11T14:25:01Z",
    "update_date": "2018-12-13T14:05:07Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2018-12-11T16:29:49Z",
        "comment": "Hi @ggonthier thanks, that's a change I had in mind for a while.\r\nI am a bit surprised not to see any line with `canLR` (or similar) in this PR, do you reserve it for the next one?\r\nAlso, can you squash and rebase on top of master, please?\r\n\r\n(Indeed, it is preferred to rebase on top of master rather than to merge master into a branch, for the sake of cleaning the history and not confusing github)"
      },
      {
        "author": "anton-trunov",
        "date": "2018-12-12T10:17:28Z",
        "comment": "Would it make sense to add an entry to ChangeLog in this PR to fix #258? Or should I open a new one?\r\nI guess the proposed entry \r\n```\r\n\t* Documented argument names for functions and lemmas. Renamed some\r\n\t  of the arguments for consistency reasons. Changed implicit status from\r\n\t  non-maximal to maximal for a number of arguments.\r\n```\r\nshould be changed anyways."
      },
      {
        "author": "ggonthier",
        "date": "2018-12-12T10:31:52Z",
        "comment": "@anton-trunov , yes, one entry should suffice to cover both PRs, and it should be a little more precise than the on proposed. I'm working on extending slightly the PR to cover uses of the lemmas  as suggested by @CohenCyril, and also to include partial function cancellation lemmas."
      },
      {
        "author": "ggonthier",
        "date": "2018-12-13T12:21:24Z",
        "comment": "Added usage, partial function cancel (`pcancel` / `ocancel`), and some residual `injective` / `cancel` lemmas.\r\nRebased, documented (in Changes, also covering #255), and squashed."
      },
      {
        "author": "gares",
        "date": "2018-12-13T18:09:55Z",
        "comment": "odd order is now part of Coq's CI and runs on each PR, so breaking it is not nice.\r\n\r\nWhat I do for elpi is to have Coq CI track a branch other than master that I synchronize with master when I'm sure (it is called coq-master).\r\n\r\nWe could also improve CI here, so that we test odd-order too before merging."
      },
      {
        "author": "ggonthier",
        "date": "2018-12-14T16:59:38Z",
        "comment": "I've corrected the issue in odd-order,  and also submitted #264 to correct related issues in `mxrepresentation.v`."
      }
    ],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: refactoring",
        "description": "Issue or PR about a refactoring. (reorganizing the code, reusing theorems, simplifications...)"
      }
    ],
    "commits": [
      {
        "author": "ggonthier",
        "committer": "ggonthier",
        "hash": "0b1ea03dafcf36880657ba910eec28ab78ccd018",
        "message": "Adjust implicits of cancellation lemmas\n\nLike injectivity lemmas, instances of cancellation lemmas (whose\nconclusion is `cancel ? ?`, `{in ?, cancel ? ?}`, `pcancel`, or\n`ocancel`) are passed to\ngeneric lemmas such as `canRL` or `canLR_in`. Thus such lemmas should\nnot have trailing on-demand implicits _just before_ the `cancel`\nconclusion, as these would be inconvenient to insert (requiring\nessentially an explicit eta-expansion).\nWe therefore use `Arguments` or `Prenex Implicits` directives to make\nall such arguments maximally inserted implicits. We don’t, however make\nother arguments implicit, so as not to spoil direct instantiation of\nthe lemmas (in, e.g., `rewrite -[y](invmK injf)`).\nWe have also tried to do this with lemmas whose statement matches a\n`cancel`, i.e., ending in `forall x, g (E[x]) = x` (where pattern\nunification will pick up `f = fun x => E[x]`).\nWe also adjusted implicits of a few stray injectivity\nlemmas, and defined constants.\nWe provide a shorthand for reindexing a bigop with a permutation.\nFinally we used the new implicit signatures to simplify proofs that\nuse injectivity or cancellation lemmas.",
        "date": "2018-12-13T11:55:43Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 261,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 390,
        "deletions": 59
      },
      {
        "file": "mathcomp/ssreflect/fingraph.v",
        "status": "M",
        "additions": 390,
        "deletions": 59
      },
      {
        "file": "mathcomp/ssreflect/path.v",
        "status": "M",
        "additions": 390,
        "deletions": 59
      },
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 390,
        "deletions": 59
      },
      {
        "file": "mathcomp/ssreflect/ssrnat.v",
        "status": "M",
        "additions": 390,
        "deletions": 59
      }
    ],
    "state": "merged",
    "open_date": "2018-12-11T10:05:25Z",
    "update_date": "2019-11-29T09:46:43Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2019-02-05T14:47:33Z",
        "comment": "@ybertot do you plan to work on it in the coming weeks?"
      },
      {
        "author": "ybertot",
        "date": "2019-02-08T16:02:52Z",
        "comment": "I won't be able to work on this in the next two weeks."
      },
      {
        "author": "CohenCyril",
        "date": "2019-02-28T13:40:13Z",
        "comment": "I will address this."
      },
      {
        "author": "amahboubi",
        "date": "2019-10-24T12:57:03Z",
        "comment": "This PR has stalled for long... @ybertot @CohenCyril  what is the status of this one? We need an assignee here. @thery ? @LaurenceRideau ?"
      },
      {
        "author": "amahboubi",
        "date": "2019-10-25T07:51:48Z",
        "comment": "Ping @ybertot @CohenCyril @thery @LaurenceRideau ."
      },
      {
        "author": "CohenCyril",
        "date": "2019-10-25T08:04:28Z",
        "comment": "@amahboubi I will get this PR ready ASAP, there is not much to do. The main part missing is the changelog."
      },
      {
        "author": "amahboubi",
        "date": "2019-10-25T08:16:27Z",
        "comment": "Thanks @CohenCyril . When do you think you will work on this?\r\n"
      },
      {
        "author": "CohenCyril",
        "date": "2019-10-25T08:24:09Z",
        "comment": "Before Thursday Oct 31st"
      },
      {
        "author": "amahboubi",
        "date": "2019-11-14T10:19:35Z",
        "comment": "@CohenCyril what is your updated deadline for this PR?"
      },
      {
        "author": "CohenCyril",
        "date": "2019-11-14T10:27:26Z",
        "comment": "Sorry about that, my updated deadline is November 15th."
      },
      {
        "author": "amahboubi",
        "date": "2019-11-14T10:32:22Z",
        "comment": "Tomorrow?"
      },
      {
        "author": "CohenCyril",
        "date": "2019-11-14T11:43:06Z",
        "comment": "> Tomorrow?\r\n\r\nyes"
      },
      {
        "author": "CohenCyril",
        "date": "2019-11-15T15:07:14Z",
        "comment": "update, I cannot do it for today :disappointed: \r\nNew estimate:  November 19."
      },
      {
        "author": "CohenCyril",
        "date": "2019-11-19T11:37:14Z",
        "comment": "@amahboubi ready for re-reviewing."
      },
      {
        "author": "amahboubi",
        "date": "2019-11-25T16:06:00Z",
        "comment": " This PR is a milestone for Dec. 1st. There are indeed two options:\r\n1) merge as is, be part of the release, and open an issue to fix @pi8027 's remark\r\n2) delay the merge after the release.\r\n\r\n@pi8027 do you agree with 1)?"
      },
      {
        "author": "pi8027",
        "date": "2019-11-25T16:14:28Z",
        "comment": "@amahboubi @CohenCyril I agree with option 1."
      },
      {
        "author": "amahboubi",
        "date": "2019-11-26T15:25:50Z",
        "comment": "This is great, but please keep in mind that the next milestone is due Dec. 1st."
      },
      {
        "author": "CohenCyril",
        "date": "2019-11-27T00:07:12Z",
        "comment": "@pi8027 @amahboubi I did the generalizations that arose from @pi8027 comments."
      },
      {
        "author": "CohenCyril",
        "date": "2019-11-27T14:17:06Z",
        "comment": "@amahboubi @pi8027 comments taken into account except for https://github.com/math-comp/math-comp/pull/261#discussion_r351115595 and squashed my commits (cannot squash further without losing ownership)"
      },
      {
        "author": "amahboubi",
        "date": "2019-11-27T14:19:05Z",
        "comment": "@pi8027 can you open an issue for the remaining comment not addressed by the PR? I will then do the merge."
      },
      {
        "author": "CohenCyril",
        "date": "2019-11-27T14:36:37Z",
        "comment": "I am a bit puzzled by the absence of CI on my latest force pushes...\r\n(Fixed manually)"
      },
      {
        "author": "pi8027",
        "date": "2019-11-27T15:46:42Z",
        "comment": "@amahboubi @CohenCyril I opened a dedicated issue #442 for the remaining comment."
      },
      {
        "author": "CohenCyril",
        "date": "2019-11-28T11:47:50Z",
        "comment": "gitlab CI is down... https://status.gitlab.com/"
      },
      {
        "author": "ybertot",
        "date": "2019-11-29T09:00:56Z",
        "comment": "@amahboubi, @CohenCyril, @pi8027 thank you all for the great work.  Should I understand that the PR is now ready for merge.  I wish to prepare the release today."
      },
      {
        "author": "pi8027",
        "date": "2019-11-29T09:16:18Z",
        "comment": "@ybertot IMO, this PR is good enough to merge as it is. However, since I contributed the second commit of this PR, I am probably not in a position to approve this PR."
      }
    ],
    "review_discussion": [
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/fingraph.v",
        "date": "2019-11-23T12:01:43Z",
        "comment": "This script is broken. I think `orbit_stable` has been renamed to `orbit_homo`."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/fingraph.v",
        "date": "2019-11-23T14:36:06Z",
        "comment": "Thanks!"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/fingraph.v",
        "date": "2019-11-24T08:11:51Z",
        "comment": "The `core` hint database should be specified here."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/fingraph.v",
        "date": "2019-11-24T08:25:10Z",
        "comment": "Shouldn't this change be documented in CHANGELOG? `{in S, forall x i, iter i f x \\in S}` and `forall i, {homo iter i f : x / x \\in S}` are inconvertible. Also, I think it's better to relocate `iter_in` to `ssrnat`."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/fingraph.v",
        "date": "2019-11-24T08:28:32Z",
        "comment": "`apply:` or `exact:`."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/fingraph.v",
        "date": "2019-11-24T10:28:24Z",
        "comment": "This lemma doesn't depend on `Up : uniq p` as in `fconnect_cycle`. So I think it's better to move it to right after `fconnect_cycle` and to change the comment before `fconnect_cycle` to indicate this fact. Since this lemma seems to be a variant of `next_cycle` that is specific to `fcycle`, I think it's better to name it `nextEfcycle` or `next_fcycle`. Also there is a simpler proof: `exact/esym/eqP/(next_cycle f_p).`"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/fingraph.v",
        "date": "2019-11-24T10:32:03Z",
        "comment": "There is a shorter proof: `by move=> x y xp yp /(congr1 (prev p)); rewrite -!nextEcycle ?prev_next.`"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/fingraph.v",
        "date": "2019-11-24T14:26:59Z",
        "comment": "Can't we avoid these `: Prop` by redefining the `[<-> ...]` notation? e.g.:\r\n```coq\r\nNotation \"[ '<->' P0 ; P1 ; .. ; Pn ]\" :=\r\n  (all_iff P0 (@cons Prop P1 (.. (@cons Prop Pn nil) ..)))\r\n  (at level 0, format \"[ '<->' '['  P0 ;  '/' P1 ;  '/'  .. ;  '/'  Pn ']' ]\")\r\n  : form_scope.\r\n```"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/fingraph.v",
        "date": "2019-11-24T14:39:22Z",
        "comment": "`: core`."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/fingraph.v",
        "date": "2019-11-24T14:39:44Z",
        "comment": "`: core`."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/fingraph.v",
        "date": "2019-11-24T14:39:55Z",
        "comment": "`: core`."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/fingraph.v",
        "date": "2019-11-24T14:40:10Z",
        "comment": "`: core`."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/fingraph.v",
        "date": "2019-11-24T14:40:24Z",
        "comment": "`: core`."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/fingraph.v",
        "date": "2019-11-25T14:10:47Z",
        "comment": "I simplified the name to `nextE` in the end."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/fingraph.v",
        "date": "2019-11-25T14:10:57Z",
        "comment": "Thanks"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/fingraph.v",
        "date": "2019-11-25T15:10:39Z",
        "comment": "Currently, `prevE` does depend on `Up : uniq p`.\r\n```\r\nprevE\r\n     : forall p : seq T, fcycle f p -> uniq p -> forall x : T, x \\in p -> prev p x = finv x\r\n```\r\nIf `prevE` shouldn't use `Up`, `f_finv_cycle` probably shouldn't depend on `Up` too because the proof of `prevE` uses `f_finv_cycle`. (I didn't check whether it's possible to drop this hypothesis or not.)\r\n```\r\nf_finv_cycle\r\n     : forall (T : finType) (f : T -> T) (p : seq T),\r\n       fcycle f p -> uniq p -> {in p, cancel (finv f) f}\r\n```\r\nFurthermore, it's better to split the `orbit_cycle` section into two sections to prevent unexpected uses of `Up`."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/fingraph.v",
        "date": "2019-11-25T15:57:04Z",
        "comment": "@pi8027 it is not obvious that `prevE` and `f_finv_cycle` do not depend on `Up`. I believe there is an alternative proof of this fact, which I may develop in the coming days, using the conjecture that `fcycle f p -> fcycle f (undup p)`.\r\nMeanwhile we may merge the PR with extra assumptions and remove assumptions later on, shouldn't we?"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/fingraph.v",
        "date": "2019-11-26T00:52:06Z",
        "comment": "`nextE` does not use the finiteness of `T` and should probably be relocated to `path.v`."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/fingraph.v",
        "date": "2019-11-26T01:21:51Z",
        "comment": "`inj_cycle` and `homo_cycle` do not use the finiteness of `T`."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/fingraph.v",
        "date": "2019-11-26T13:35:05Z",
        "comment": "Thanks! And I also managed to get rid of `uniq p` hypothesis in `inj_cycle`."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/fingraph.v",
        "date": "2019-11-26T13:38:37Z",
        "comment": "Since I found a way to replace the hypothesis `uniq p` of `prev_next` with `fcycle f p`, I can address this. But I'm not sure it's a good idea to generalize `prev_next` (and `next_prev`) like this."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/fingraph.v",
        "date": "2019-11-26T13:43:07Z",
        "comment": "Oh really! We probably duplicated this generalization effort. 😂"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/fingraph.v",
        "date": "2019-11-26T14:11:40Z",
        "comment": "And I am almost there for `fcycle f (undup p)` and many other generalizations..."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/fingraph.v",
        "date": "2019-11-26T15:22:45Z",
        "comment": "I do not think so... "
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/fingraph.v",
        "date": "2019-11-26T23:56:02Z",
        "comment": "done"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/fingraph.v",
        "date": "2019-11-26T23:56:16Z",
        "comment": "done"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/fingraph.v",
        "date": "2019-11-26T23:56:57Z",
        "comment": "I believe I generalized all possible lemmas that occur in this PR..."
      },
      {
        "author": "pi8027",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2019-11-27T00:17:08Z",
        "comment": "`pathE` -> `fpathE` and `pathP` -> `fpathP`."
      },
      {
        "author": "pi8027",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2019-11-27T04:18:25Z",
        "comment": "We may merge this line with \"Added lemmas `nextE`, `mem_fcycle` and `inj_cycle` in `path.v`\"."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2019-11-27T04:24:16Z",
        "comment": "There is a one-liner proof: `Proof. by elim: m => //m IHm in x *; rewrite addSn !trajectS IHm -iterSr. Qed.`"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2019-11-27T04:56:33Z",
        "comment": "Here is a simpler proof that doesn't use `undup_rcons`:\r\n```coq\r\nelim: s => //= x s ->; rewrite mem_cat.\r\nby case: (x \\in s) => //=; case: (x \\in t).\r\n```"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/fingraph.v",
        "date": "2019-11-27T05:30:48Z",
        "comment": "Since this `orbit_cycle` section doesn't introduce any variable and hypothesis, you may remove it."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/fingraph.v",
        "date": "2019-11-27T05:43:24Z",
        "comment": "The first pair of parentheses can be removed: `fcycle f (orbit x)`."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/fingraph.v",
        "date": "2019-11-27T05:45:20Z",
        "comment": "Parentheses right after `&&` can be removed."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2019-11-27T05:56:42Z",
        "comment": "I think `flatten (nseq n s)` is easier to understand than `iter n (cat s) [::]` but I'm not sure which one is better."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/fingraph.v",
        "date": "2019-11-27T06:33:43Z",
        "comment": "This lemma can be generalized to non-`frel` graphs:\r\n```coq\r\n(* after `Lemma path_connect` *)\r\nLemma connect2cycle p : cycle e p -> {in p &, forall x y, connect x y}.\r\nProof.\r\nmove=> e_p x y p_x p_y; case/splitPr: p_x p_y e_p => {p} p1 p2.\r\nby rewrite mem_cat inE => /or3P [|/eqP -> //|] /splitPr [] ? ?;\r\n  rewrite cycle_catC /= => /path_connect; apply;\r\n  rewrite !(inE, mem_rcons, mem_cat) eqxx /= !orbT.\r\nQed.\r\n```\r\nwhere `cycle_catC` is:\r\n```coq\r\ncycle_catC\r\n     : forall (T : Type) (e : rel T) (p1 p2 : seq T), cycle e (p1 ++ p2) = cycle e (p2 ++ p1)\r\n```"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/fingraph.v",
        "date": "2019-11-27T06:39:18Z",
        "comment": "Also one may generalize this lemma by generalizing `order` to non-`frel` graphs (it means the number of reachable elements). But I think this is good enough to merge as it is."
      },
      {
        "author": "CohenCyril",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2019-11-27T10:38:43Z",
        "comment": "done"
      },
      {
        "author": "CohenCyril",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2019-11-27T10:38:48Z",
        "comment": "done"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2019-11-27T10:38:53Z",
        "comment": "thanks"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2019-11-27T10:38:58Z",
        "comment": "thanks"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/fingraph.v",
        "date": "2019-11-27T10:39:08Z",
        "comment": "done"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/fingraph.v",
        "date": "2019-11-27T10:39:20Z",
        "comment": "done"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2019-11-27T10:39:30Z",
        "comment": "I agree."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/fingraph.v",
        "date": "2019-11-27T10:39:45Z",
        "comment": "Let's open an issue to do that later on?"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/fingraph.v",
        "date": "2019-11-27T10:39:52Z",
        "comment": "Let's open an issue to do that later on?\r\n\r\n"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/fingraph.v",
        "date": "2019-11-27T12:12:51Z",
        "comment": "ok I did it, but without `cycle_catC`"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/fingraph.v",
        "date": "2019-11-27T12:34:50Z",
        "comment": "But I still added it"
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2019-11-28T14:36:01Z",
        "comment": "Actually this `do !` seems to repeat infinitely in Coq 8.10 and master. Here is a fix:\r\n```coq\r\nProof. by elim: s => //= x s ->; rewrite mem_cat; do 2 case: in_mem => //=. Qed.\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2019-11-28T14:47:35Z",
        "comment": "AAah great!"
      }
    ],
    "tags": [
      {
        "tag": "kind: enhancement",
        "description": "Issue or PR about addition of features."
      },
      {
        "tag": "kind: refactoring",
        "description": "Issue or PR about a refactoring. (reorganizing the code, reusing theorems, simplifications...)"
      }
    ],
    "commits": [
      {
        "author": "ybertot",
        "committer": "CohenCyril",
        "hash": "366b93a0d3b189340eb6a00f63970ee854a99e12",
        "message": "adds relevant theorems when fcycle f (orbit f x) and the needed lemmas",
        "date": "2019-11-28T14:49:01Z"
      },
      {
        "author": "pi8027",
        "committer": "CohenCyril",
        "hash": "a01060b646bb86735807aedc54453f96a5b87034",
        "message": "Generalize f_step lemmas",
        "date": "2019-11-28T14:49:01Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "3824355e20110aa574f305c0d9635b4a26b9a45a",
        "message": "Generalizations, shorter proofs, bugfixes, CHANGELOG\n\n- changelog, renamings and comments\n- renaming `homo_cycle` to `mem_fcycle` and other small renamings\n- name swap `mem_orbit` and `in_orbit`\n- simplifications\n- generalization following @pi8027's comment\n- Getting rid of many uniquness condition in `fingraph.v`\n- added cases to the equivalence `orbitPcycle`\n- added `cycle_catC`",
        "date": "2019-11-28T14:49:47Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 260,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 5,
        "deletions": 5
      }
    ],
    "state": "merged",
    "open_date": "2018-12-11T10:02:06Z",
    "update_date": "2018-12-11T13:05:21Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: fix",
        "description": "PR that fixes a bug. Please refer to the appropriate issue(s) if relevant."
      }
    ],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "fb4948fabff8143e1a47e3943cd1fecb75867689",
        "message": "fix TFAE",
        "date": "2018-12-11T10:01:20Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 259,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "A",
        "additions": 3785,
        "deletions": 0
      },
      {
        "file": "mathcomp/Make",
        "status": "A",
        "additions": 3785,
        "deletions": 0
      },
      {
        "file": "mathcomp/ssreflect/Make",
        "status": "A",
        "additions": 3785,
        "deletions": 0
      },
      {
        "file": "mathcomp/ssreflect/all_ssreflect.v",
        "status": "A",
        "additions": 3785,
        "deletions": 0
      },
      {
        "file": "mathcomp/ssreflect/finmap.v",
        "status": "A",
        "additions": 3785,
        "deletions": 0
      }
    ],
    "state": "open",
    "open_date": "2018-12-10T08:18:16Z",
    "update_date": "2021-05-19T08:17:42Z",
    "discussion": [
      {
        "author": "amahboubi",
        "date": "2019-06-03T11:21:25Z",
        "comment": "@CohenCyril , it's great to see progress on this front! Could you update the header comment so as to make the roadmap clearer? In particular, it seems that fixpoints-related material have now been actually moved. Are the dependencies now swapped? "
      },
      {
        "author": "CohenCyril",
        "date": "2019-06-03T11:26:06Z",
        "comment": "> In particular, it seems that fixpoints-related material have now been actually moved. Are the dependencies now swapped?\r\n\r\nNo they have not been swapped yet, but I can do it now if you want me to."
      },
      {
        "author": "amahboubi",
        "date": "2019-06-03T11:28:37Z",
        "comment": "I am trying to understand the roadmap for this PR. How do you see it?"
      },
      {
        "author": "CohenCyril",
        "date": "2019-06-03T11:35:10Z",
        "comment": "> I am trying to understand the roadmap for this PR. How do you see it?\r\n\r\nI just updated the orignial post for that purpose.\r\n"
      },
      {
        "author": "amahboubi",
        "date": "2019-06-03T12:14:12Z",
        "comment": "Thanks. However, the post still mentions that only `finmap.v` should be reviewed. Could you confirm, and if so mention explicitly in the post,  that PR #302 includes all the other changes ?"
      },
      {
        "author": "CohenCyril",
        "date": "2019-06-03T12:43:55Z",
        "comment": "> No they have not been swapped yet, but I can do it now if you want me to.\r\n\r\nSince #302 was reviewed and will be integrated very shortly, I will not swap, but expect a rebase that will *not* affect `finmap.v`"
      },
      {
        "author": "CohenCyril",
        "date": "2019-06-13T17:26:32Z",
        "comment": "@amahboubi the dependency in #302 is gone, you may review this PR without interference."
      },
      {
        "author": "amahboubi",
        "date": "2019-07-05T10:49:24Z",
        "comment": "Is finmap supposed to eventually subsume the finset library currently in mathcomp? If not what is the watershed?"
      },
      {
        "author": "ggonthier",
        "date": "2019-07-05T12:02:04Z",
        "comment": "> Is finmap supposed to eventually subsume the finset library currently in mathcomp? If not what is the watershed?\r\n\r\nIt should. But there are technical difficulties in crafting a notion of generic finite predicate that would extend gracefully the notion of generic predicate (on a finite type) that is currently used in `fintype` and `finset` for the `card`, `enum`, `pick`, `image` and `imset` operators. The definition proposed in `finmap` isn't adequate for this purpose (and indeed misuses the `ssrbool` interface).\r\n   I've gotten many of the issues figured out these last days; I'll propose something soon, when I've figured out the last sticking point (namely, display in subgoals). "
      },
      {
        "author": "amahboubi",
        "date": "2019-07-05T12:35:00Z",
        "comment": "Many thanks for the feedback @ggonthier ! And very good news that most issues are now resolved. About the remaining display issue you mention, is it easy enough to provide a quick description of the problem? "
      },
      {
        "author": "ggonthier",
        "date": "2019-07-08T09:52:48Z",
        "comment": "> About the remaining display issue you mention, is it easy enough to provide a quick description of the problem?\r\n  Briefly, the issue is that because finite predicates need to be implemented by a _value_ class, the class object will show up in subgoals produced by applying of rewriting with a generic finite predicate lemma, as happens with instances of `Monoid.law`, `{linear ..}`, etc. The latter are tolerable because they occur during rewriting, where the manifest classes may facilitate further rewriting and are easy to remove with `/=`.\r\n    I'm less comfortable with leaving visible manifest instances in subgoals produced by `apply` or `case`, which is why I set up a \"keyed predicate\" interface for algebraic predicates, which make it possible to display the actual predicate rather than the class object encapsulating its algebraic closure properties. I'm not sure I can use these for finite predicates, however, so I'm trying other solutions.\r\n   In the meantime I've uncovered another issue, which is not easily resolved. Another effect of using value classes is that the parameters of the predicate appear _at least twice_ after type inference: in the expression of the predicate for which a finite class is inferred, and in the expression of that class. In particular, `A` will appear (at least) twice in `#|A|`, and that breaks the common idiom for induction on the order of a set:\r\n```\r\nelim: {A}_.+1 {-2}A (ltnSn #|A|) => // n IHn A leAn.\r\n```\r\nWe'll probably have to phase it out, in favour of more specialised set induction principles or better behaved versions of the idiom that do not rely on counting occurrences. So this PR should require merging a preliminary compatibility PR that does this, as well as other necessary adjustments (in particular, not expecting `enum A` to be _convertible_ to `[seq x in Finite.enum _ | x \\in A]`)."
      },
      {
        "author": "gares",
        "date": "2019-09-24T20:12:13Z",
        "comment": "FTR: https://gitter.im/coq/coq?at=5d8a7140c77f285fb1d7fbf6 "
      },
      {
        "author": "CohenCyril",
        "date": "2019-10-17T14:11:09Z",
        "comment": "Hi @ggonthier if my understanding is correct you are currently rewriting part of this pull request. Could you confirm? If so do you have an estimated date/time for publishing what you did?"
      },
      {
        "author": "amahboubi",
        "date": "2019-10-24T12:59:55Z",
        "comment": "@CohenCyril , if I understand correctly  @ggonthier and you had some written discussion outside from github on the status and possible evolution of the status of (finite) sets in mathcomp. If so, @CohenCyril could you disclose the relevant (parts of) emails as posts here?"
      },
      {
        "author": "CohenCyril",
        "date": "2019-10-24T19:48:27Z",
        "comment": "> @CohenCyril , if I understand correctly @ggonthier and you had some written discussion outside from github on the status and possible evolution of the status of (finite) sets in mathcomp. If so, @CohenCyril could you disclose the relevant (parts of) emails as posts here?\r\n\r\nIt's much less that it looks: I asked for a short update about what @ggonthier was doing on this PR during the summer. I am not sure the mail I got from Georges is still relevant (depending on the progress made since then), but I could publish it here anyway if he agrees."
      },
      {
        "author": "amahboubi",
        "date": "2019-11-14T10:22:04Z",
        "comment": "@CohenCyril @gonthier, we discussed about a missing code snippet this morning. Would it be possible to share it e.g. with a gist? This would surely help preparing our forthcoming meeting on the topic."
      },
      {
        "author": "CohenCyril",
        "date": "2019-11-14T11:47:13Z",
        "comment": "@amahboubi \r\nhere is the code snippet that @ggonthier sent me\r\nhttps://gist.github.com/CohenCyril/7318e91f5b400f00b707baad579f51d2"
      },
      {
        "author": "amahboubi",
        "date": "2019-12-11T15:51:36Z",
        "comment": "@CohenCyril is this PR ready for review?\r\n"
      },
      {
        "author": "CohenCyril",
        "date": "2019-12-11T17:33:54Z",
        "comment": "> @CohenCyril is this PR ready for review?\r\n\r\nIt is not"
      },
      {
        "author": "ybertot",
        "date": "2020-03-25T15:22:08Z",
        "comment": "Now that we plan to work on release 1.11, what is the status of this PR? is it better to move it to 1.12."
      },
      {
        "author": "CohenCyril",
        "date": "2020-03-25T15:29:02Z",
        "comment": "> Now that we plan to work on release 1.11, what is the status of this PR? is it better to move it to 1.12.\r\n\r\nYes, and as said in the last mathcomp meeting @ggonthier is reworking it anyway, I expect this one to be closed when he submits his."
      },
      {
        "author": "CohenCyril",
        "date": "2020-07-08T13:03:20Z",
        "comment": "@ggonthier any news on that front?"
      },
      {
        "author": "gares",
        "date": "2020-11-04T09:50:29Z",
        "comment": "@ggonthier we are planning a release soonish. Shall we consider this PR or you are actively working on a different/alternative one?"
      },
      {
        "author": "chdoc",
        "date": "2020-11-04T10:08:46Z",
        "comment": "@gares would you be willing to self-assign?"
      },
      {
        "author": "CohenCyril",
        "date": "2020-12-07T00:00:50Z",
        "comment": "@pi8027 I forgot to mark this PR as a draft, sorry about that!"
      }
    ],
    "review_discussion": [
      {
        "author": "pi8027",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2020-12-06T22:09:18Z",
        "comment": "The first and last entries (`fixset` and `eqVneq`) are already a part of previous releases. Also, please relocate the second item to the Added section."
      },
      {
        "author": "pi8027",
        "file": "mathcomp/ssreflect/finmap.v",
        "date": "2020-12-06T22:14:36Z",
        "comment": "This can be removed. (But if we have to port/backport things until this PR gets merged, how do we proceed?)"
      }
    ],
    "tags": [
      {
        "tag": "kind: enhancement",
        "description": "Issue or PR about addition of features."
      },
      {
        "tag": "kind: refactoring",
        "description": "Issue or PR about a refactoring. (reorganizing the code, reusing theorems, simplifications...)"
      }
    ],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "df68f4d8ed17dc7f2ae670a442cd730a5e4f3756",
        "message": "Adding finmap to mathcomp",
        "date": "2020-11-26T18:31:33Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 257,
    "diff_summary": [
      {
        "file": "ChangeLog",
        "status": "M",
        "additions": 18,
        "deletions": 0
      },
      {
        "file": "mathcomp/algebra/mxalgebra.v",
        "status": "M",
        "additions": 18,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2018-12-05T14:52:41Z",
    "update_date": "2018-12-11T10:04:46Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2018-12-11T09:45:57Z",
        "comment": "@ggonthier I think this is ready for merge"
      }
    ],
    "review_discussion": [
      {
        "author": "thery",
        "file": "mathcomp/algebra/mxalgebra.v",
        "date": "2018-12-07T17:52:01Z",
        "comment": "what is the rationale behind the name \r\neq ok\r\nP ok,\r\n ms matrice space?\r\n"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/mxalgebra.v",
        "date": "2018-12-09T15:05:44Z",
        "comment": "Yes... on second thoughts I'm not sure it is good. However `eqmxP` is taken as it is the reflection lemma between `eqmx A B` (i.e. `A :=: B`) and `(A == B)%MS`. Other names I have in mind are `submx2P`, `samemxP`,  Do you have other suggestions?"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/algebra/mxalgebra.v",
        "date": "2018-12-09T22:34:12Z",
        "comment": "I'd suggest `eqmxMunitP`, by analogy with `eqmxMfull`, which is the converse implication of the equivalence stated by this lemma (or rather, its generalisation to matrices with different shapes).\r\nI'd also suggest changing the caption to \r\n\r\n> two matrices with the same shape represent the same subspace iff they differ only by a change of basis.\r\n\r\nand changing the name of the variables of the lemma to `U` and `V`, which are the names commonly used in `mxalgebra` to denote matrices representing subspaces. While it is the case that the row space of a matrix is the codomain of the linear function it represents (by right multiplication), in general `mxalgebra` tries to avoid introducing this functional interpretation when it is not germane.\r\n\r\nFinally, the proof should use `eqmxMfull` for the converse implication, and I think the forward implication would benefit from a more declarative style, even at the cost of a extra script line:\r\n```\r\nLemma eqmxMunitP m n (U V : 'M_(m, n)) :\r\n  reflect (exists2 P, P \\in unitmx & U = P *m V) (U == V)%MS.\r\nProof.\r\napply: (iffP eqmxP) => [eqUV | [P Punit ->]]; last first.\r\n  by apply/eqmxMfull; rewrite row_full_unit.\r\nhave [D defU]: exists D, U = D *m V by apply/submxP; rewrite eqUV.\r\nhave{eqUV} [Pt Pt_unit defUt]: {Pt | Pt \\in unitmx & V^T *m D^T = V^T *m Pt}.\r\n  by apply/complete_unitmx; rewrite -trmx_mul -defU !mxrank_tr eqUV.\r\nby exists Pt^T; last apply/trmx_inj; rewrite ?unitmx_tr // defU !trmx_mul trmxK.\r\nQed.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/algebra/mxalgebra.v",
        "date": "2018-12-10T08:02:04Z",
        "comment": "I forgot to note you should also update the `Changes` blurb..."
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "a2d36f6f0746531d207e760a22d47dd2ebb77ade",
        "message": "Adding lemma `eqmxMunitP`",
        "date": "2018-12-10T17:32:20Z"
      }
    ]
  },
  {
    "author": "anton-trunov",
    "number": 256,
    "diff_summary": [
      {
        "file": ".travis.yml",
        "status": "M",
        "additions": 39,
        "deletions": 32
      }
    ],
    "state": "closed",
    "open_date": "2018-12-04T21:04:13Z",
    "update_date": "2018-12-20T18:54:37Z",
    "discussion": [
      {
        "author": "ejgallego",
        "date": "2018-12-04T21:20:59Z",
        "comment": "See the docs at https://docs.travis-ci.com/user/build-stages/share-docker-image/\r\n\r\nI am not sure if this would work for pull requests tho, I forgot how the permission model works for this."
      },
      {
        "author": "ejgallego",
        "date": "2018-12-04T21:24:20Z",
        "comment": "Yup indeed this won't work for pull requests :S I got used to gitlab where we workaround that."
      },
      {
        "author": "erikmd",
        "date": "2018-12-05T00:20:32Z",
        "comment": "@anton-trunov thanks for working on this.\r\nSo to sum up, the plan of this PR and #245 is to make Travis build at the same time math-comp/math-comp and most math-comp libs, to have some regression testing feedback within the main repo, like Coq's main repo.\r\n\r\n(Afterwards, this could be complemented with some distribution of math-comp stable docker images for which I gave some suggestions in #243, but of course these two things are a bit orthogonal. Also I believe @CohenCyril was also interested in experimenting this stuff)\r\n\r\nAs suggested by @ejgallego you should definitely use some build stages to implement this, cf. https://docs.travis-ci.com/user/build-stages, and indeed Travis CI does not have a Docker registry per se, so you could try to push to Docker Hub or so, but it also seems to me this wouldn't be possible for fork branches, due to the need for (encrypted) private tokens to login into the registry, which can only be decrypted from upstream branches builds, not fork builds.\r\n\r\nHowever I think this is not blocking to achieve what we want: you could have 2 stages \"build\" and \"test\":\r\n- a stage \"build\" obtained by turning the `docker run + docker exec (first part)` command into a single `docker build --pull -t mathcomp:dev .` command, relying on a Dockerfile similar to that of [docker-coq-travis-ci-demo-2](https://github.com/erikmd/docker-coq-travis-ci-demo-2)\r\n- a stage \"test\" obtained by turning the `docker exec (second part)` command into `docker run -d -i --init --name=OddOrder (…) mathcomp:dev` then `docker exec OddOrder /bin/bash --login -c \"(…)\"` (and likewise for other libs to test-build).\r\n\r\nThen, it is one of two things:\r\n1. either the two jobs benefit from Docker's cache and the `mathcomp:dev` image will be available\r\n2. or the `docker run (…)` says `Unable to find image 'mathcomp:dev' locally`, so you should adapt the configuration to manually enable caching without using a Docker registry, relying for example on the commands `docker save` and `docker load`.\r\n\r\nFYI there are some references on the net documenting ways to address point 2. above:\r\n- https://stackoverflow.com/a/41975912/9164010\r\n- https://stackoverflow.com/a/35374332/9164010\r\n- http://rundef.com/fast-travis-ci-docker-build\r\n- https://giorgos.sealabs.net/docker-cache-on-travis-and-docker-112.html\r\n- https://medium.com/mobileforgood/patterns-for-continuous-integration-with-docker-on-travis-ci-71857fff14c5 (but this latter reference uses `docker build --pull --cache-from \"$IMAGE_NAME\" --tag \"$IMAGE_NAME\" .` and `docker push \"${IMAGE_NAME}:${version}\"` so it requires a Docker registry)"
      },
      {
        "author": "erikmd",
        "date": "2018-12-05T00:28:44Z",
        "comment": "@ejgallego I guess one of your suggestions (copied below) was dealing with the naming convention of the \"mathcomp:dev\" image (if it is pushed on Docker Hub at some point) but just to be sure could you give a small example of what you meant here by \"bash array indexed by Coq version\"?\r\n> once done we could study how to factor the versioning. For now you could use a bash array indexed by Coq version if you need version-specific pins."
      },
      {
        "author": "ejgallego",
        "date": "2018-12-05T01:08:42Z",
        "comment": "@erikmd thanks a lot for the links! Oh indeed using the cache could be great! It has to be done with care as to trigger the proper rebuild when it is needed, but indeed could work very well in the end.\r\n\r\nWhat I meant about the array is that for example imagine project `odd-order` that requires a different version for Coq 8.8 and Coq 8.9, then, indeed we could tweak the variables of the matrix to denote Coq version and store the git ref in an array."
      },
      {
        "author": "Zimmi48",
        "date": "2018-12-05T12:35:05Z",
        "comment": "@ejgallego @erikmd If you really want to use stages and push a docker image for math-comp in the first stage, then I strongly encouraged ditching Travis here and using GitLab CI instead. The experience with Coq has been very positive."
      },
      {
        "author": "anton-trunov",
        "date": "2018-12-05T12:52:16Z",
        "comment": "> I strongly encouraged ditching Travis here and using GitLab CI instead\r\n\r\n@Zimmi48 Does one need a Gitlab organization for this?"
      },
      {
        "author": "erikmd",
        "date": "2018-12-05T13:02:14Z",
        "comment": "@Zimmi48 thanks for your feedback! actually I guess the plan consists in both:\r\n\r\n1. building a Docker image of **math-comp master** only once for each master commit, then publish it on Docker Hub or so, and reuse it for subsequent jobs;\r\n2. building a Docker image of **each math-comp PR branch**, then reuse it for subsequent jobs.\r\n\r\nas point 2. doesn't require to push the first Docker image somewhere (the cache could be used to communicate inter-stages) this approach could be feasible using Travis.\r\n\r\nHowever it's true that GitLab CI's Docker support is excellent (the configuration file obtained in the end would certainly be simpler than with Travis, and point 2. above regarding PRs could also be extended with a `docker push` or so to keep somewhere the Docker image that passed tests, improving reproducibility in case of failed or successful build), so it could indeed be a fruitful move!"
      },
      {
        "author": "erikmd",
        "date": "2018-12-05T13:06:39Z",
        "comment": "Hi @ejgallego! you said about the approach of using staged builds with several docker images:\r\n> this won't work for pull requests :S I got used to gitlab where we workaround that.\r\n\r\nbut out of curiosity, do you rely on some dedicated tool for that (related maybe to coqbot), or do you just use a standard GitLab CI feature mentioned in its documentation?"
      },
      {
        "author": "anton-trunov",
        "date": "2018-12-05T13:08:08Z",
        "comment": "Ok, the [docs](https://docs.gitlab.com/ee/ci/ci_cd_for_external_repos/github_integration.html) say that as the first step one should do the following:\r\n> In GitLab create a CI/CD for external repo project and select GitHub.\r\n\r\nWhere do we do this? I guess (@CohenCyril or @gares or @amahboubi) could create a new GitLab organization for this? Or is there some generic org for Coq-related project? Any pointers would be much appreciated."
      },
      {
        "author": "CohenCyril",
        "date": "2018-12-05T15:00:45Z",
        "comment": "> Where do we do this? I guess (@CohenCyril or @gares or @amahboubi) could create a new GitLab organization for this? Or is there some generic org for Coq-related project? Any pointers would be much appreciated.\r\n\r\n@erikmd @anton-trunov @amahboubi @gares Should I create a `math-comp` **group** on http://gitlab.inria.fr?"
      },
      {
        "author": "erikmd",
        "date": "2018-12-05T15:36:18Z",
        "comment": "> Should I create a math-comp group on http://gitlab.inria.fr?\r\n\r\n@CohenCyril I don't know for sure, but it seemed to me that @Zimmi48's suggestion was to create that group on https://gitlab.com/ to benefit from its GitLab CI runners? (like https://gitlab.com/coq/coq)"
      },
      {
        "author": "erikmd",
        "date": "2018-12-05T15:45:59Z",
        "comment": "BTW (in anticipation of #243) you could create a `mathcomp` organization on Docker Hub as well?\r\n(indeed hyphens are not allowed there… but it seems https://hub.docker.com/u/mathcomp is still available)"
      },
      {
        "author": "Zimmi48",
        "date": "2018-12-05T16:14:43Z",
        "comment": "Indeed, I had not thought of the possibility of using the cache of Travis. In the old days when we started using Travis (almost 2 years ago), it was not possible to share the cache between stages."
      },
      {
        "author": "erikmd",
        "date": "2018-12-05T16:32:52Z",
        "comment": "Hi @Zimmi48\r\n> Indeed, I had not thought of the possibility of using the cache of Travis. In the old days when we started using Travis (almost 2 years ago), it was not possible to share the cache between stages.\r\n\r\nOK! Note anyway that I did not experimented the references mentioned in [my comment](https://github.com/math-comp/math-comp/pull/256#issuecomment-444310161) and in particular if this approach would now be applicable between different stages of the same Travis build.\r\n(And Travis' doc doesn't seem to indicate whether this is the case or not…)\r\n\r\nIn any case, relying on gitlab.com CI seems a good choice.\r\n\r\nBTW @Zimmi48 @ejgallego are you aware of specific limitations regarding the CI time of standard runners on gitlab.com CI?"
      },
      {
        "author": "ejgallego",
        "date": "2018-12-05T16:59:23Z",
        "comment": "> BTW @Zimmi48 @ejgallego are you aware of specific limitations regarding the CI time of standard runners on gitlab.com CI?\r\n\r\nNo time limitations that should be relevant for math-comp.\r\n\r\nIndeed I am not sure how caches do work wrt stages."
      },
      {
        "author": "ejgallego",
        "date": "2018-12-06T01:28:14Z",
        "comment": "Caches do seem to work well with stages; another note: gitlab's CI registry allows to get a deploy-only token for read-only access."
      },
      {
        "author": "CohenCyril",
        "date": "2018-12-06T10:07:43Z",
        "comment": "> @CohenCyril I don't know for sure, but it seemed to me that @Zimmi48's suggestion was to create that group on https://gitlab.com/ to benefit from its GitLab CI runners? (like https://gitlab.com/coq/coq)\r\n\r\nDone: https://gitlab.inria.fr/math-comp\r\n\r\nEDIT: Sorry! I did not read carefully. Mistake corrected"
      },
      {
        "author": "erikmd",
        "date": "2018-12-10T08:27:22Z",
        "comment": "Regarding Emilio's answer to my question about GitLab CI time limitations\r\n> No time limitations that should be relevant for math-comp.\r\n\r\nI've looked at https://about.gitlab.com/solutions/github/ and https://about.gitlab.com/pricing/#gitlab-com and it's not clear for me if we'd benefit from 2,000 CI pipeline minutes or 50,000 CI pipeline minutes…\r\n\r\nOut of curiosity, could @Zimmi48 or @ejgallego take a look at the following page to see if that info would be available for https://gitlab.com/coq/coq ?\r\nhttps://gitlab.com/groups/coq/-/pipeline_quota"
      },
      {
        "author": "ejgallego",
        "date": "2018-12-10T08:36:26Z",
        "comment": "Open source projects have no limitations but no guaranteed shared runners either. In practice it works very well as the on-demand approach means that backlog is caught up quickly.\r\n\r\nAlso it is fairly easy to add your own runners, in Coq we have a machine that helps in times of reduced worker availability."
      },
      {
        "author": "erikmd",
        "date": "2018-12-11T00:59:33Z",
        "comment": "Just not to forget and to follow-up the discussion at the visio meeting, you may want to create an organization at https://gitlab.com/math-comp as well.\r\n\r\n(see also that docs link mentioned by @anton-trunov:  \r\nhttps://docs.gitlab.com/ee/ci/ci_cd_for_external_repos/github_integration.html)\r\n\r\nCc @CohenCyril "
      },
      {
        "author": "Zimmi48",
        "date": "2018-12-11T09:26:29Z",
        "comment": "Indeed, as explained by @erikmd the proposal was to create the organization on gitlab.com not on Inria's GitLab."
      },
      {
        "author": "CohenCyril",
        "date": "2018-12-11T10:07:59Z",
        "comment": "@erikmd @Zimmi48  done"
      },
      {
        "author": "erikmd",
        "date": "2018-12-14T15:00:27Z",
        "comment": "Hi @anton-trunov! did you perform more experiments regarding the migration/setup of mathcomp's CI on GitLab? otherwise I can propose to look at this tonight (relying on the [GitLab CI config example](https://gitlab.com/erikmd/docker-coq-gitlab-ci-demo-2/) that I recently simplified to avoid the `sed` hack). However, I am not sure I could add additional commits to this PR #256, so maybe it's better to create another PR(?)"
      },
      {
        "author": "anton-trunov",
        "date": "2018-12-14T15:38:07Z",
        "comment": "@erikmd I was intermittently reading the docs and experimenting with CI on IMDEA's internal Gitlab, since I have the necessary rights there, but I haven't finished yet. Feel free to take over this PR any time, though."
      },
      {
        "author": "erikmd",
        "date": "2018-12-15T16:35:00Z",
        "comment": "Thanks @anton-trunov! so I resumed my experiments as well, diving in GitLab's doc and in some examples of CI setup including that of Coq.\r\nCyril gave me access to the CI-dedicated org https://gitlab.com/math-comp and I expect to have a working configuration for branch builds soon, but I think we'll need Théo and Emilio's help to fully configure the builds for GitHub PRs... I'll let you informed ASAP."
      },
      {
        "author": "Zimmi48",
        "date": "2018-12-17T15:49:39Z",
        "comment": "OK, I might not be very reactive though, but I'll try to help if I can."
      },
      {
        "author": "anton-trunov",
        "date": "2018-12-20T18:54:37Z",
        "comment": "Superseded by #266"
      }
    ],
    "review_discussion": [
      {
        "author": "ggonthier",
        "file": ".travis.yml",
        "date": "2018-12-05T06:49:19Z",
        "comment": "You should also add `math_comp/fourcolor` as that's also a stable (and sizeable) development."
      },
      {
        "author": "anton-trunov",
        "file": ".travis.yml",
        "date": "2018-12-05T07:35:15Z",
        "comment": "Will do. I added a TODO list to the original post trying to summarize all the suggestions. Feel free to edit the list adding new items or removing the ones you'd prefer not to test."
      }
    ],
    "tags": [
      {
        "tag": "kind: CI",
        "description": "Issue or PR about the CI. (Gitlab CI or CI of dependencies problems linked with math-comp)"
      }
    ],
    "commits": [
      {
        "author": "anton-trunov",
        "committer": "anton-trunov",
        "hash": "02bc3555d3c94d36d84099f0bd905f036d1f2ee8",
        "message": "[ci] Switch to Docker\n\nBased on https://github.com/erikmd/docker-coq-travis-ci-demo-1",
        "date": "2018-12-04T20:01:54Z"
      },
      {
        "author": "anton-trunov",
        "committer": "anton-trunov",
        "hash": "b524b34d22f3990af6c35a66a2c9e5d84206f8ee",
        "message": "[ci] Add odd-order",
        "date": "2018-12-04T20:02:18Z"
      }
    ]
  },
  {
    "author": "anton-trunov",
    "number": 253,
    "diff_summary": [
      {
        "file": "mathcomp/algebra/matrix.v",
        "status": "M",
        "additions": 241,
        "deletions": 250
      },
      {
        "file": "mathcomp/algebra/mxalgebra.v",
        "status": "M",
        "additions": 241,
        "deletions": 250
      },
      {
        "file": "mathcomp/algebra/poly.v",
        "status": "M",
        "additions": 241,
        "deletions": 250
      },
      {
        "file": "mathcomp/algebra/ssralg.v",
        "status": "M",
        "additions": 241,
        "deletions": 250
      },
      {
        "file": "mathcomp/algebra/ssrint.v",
        "status": "M",
        "additions": 241,
        "deletions": 250
      },
      {
        "file": "mathcomp/algebra/vector.v",
        "status": "M",
        "additions": 241,
        "deletions": 250
      },
      {
        "file": "mathcomp/character/character.v",
        "status": "M",
        "additions": 241,
        "deletions": 250
      },
      {
        "file": "mathcomp/character/classfun.v",
        "status": "M",
        "additions": 241,
        "deletions": 250
      },
      {
        "file": "mathcomp/character/inertia.v",
        "status": "M",
        "additions": 241,
        "deletions": 250
      },
      {
        "file": "mathcomp/character/integral_char.v",
        "status": "M",
        "additions": 241,
        "deletions": 250
      },
      {
        "file": "mathcomp/character/mxabelem.v",
        "status": "M",
        "additions": 241,
        "deletions": 250
      },
      {
        "file": "mathcomp/character/mxrepresentation.v",
        "status": "M",
        "additions": 241,
        "deletions": 250
      },
      {
        "file": "mathcomp/field/algebraics_fundamentals.v",
        "status": "M",
        "additions": 241,
        "deletions": 250
      },
      {
        "file": "mathcomp/field/closed_field.v",
        "status": "M",
        "additions": 241,
        "deletions": 250
      },
      {
        "file": "mathcomp/field/falgebra.v",
        "status": "M",
        "additions": 241,
        "deletions": 250
      },
      {
        "file": "mathcomp/fingroup/action.v",
        "status": "M",
        "additions": 241,
        "deletions": 250
      },
      {
        "file": "mathcomp/fingroup/fingroup.v",
        "status": "M",
        "additions": 241,
        "deletions": 250
      },
      {
        "file": "mathcomp/fingroup/quotient.v",
        "status": "M",
        "additions": 241,
        "deletions": 250
      },
      {
        "file": "mathcomp/solvable/abelian.v",
        "status": "M",
        "additions": 241,
        "deletions": 250
      },
      {
        "file": "mathcomp/solvable/burnside_app.v",
        "status": "M",
        "additions": 241,
        "deletions": 250
      },
      {
        "file": "mathcomp/solvable/center.v",
        "status": "M",
        "additions": 241,
        "deletions": 250
      },
      {
        "file": "mathcomp/solvable/commutator.v",
        "status": "M",
        "additions": 241,
        "deletions": 250
      },
      {
        "file": "mathcomp/solvable/cyclic.v",
        "status": "M",
        "additions": 241,
        "deletions": 250
      },
      {
        "file": "mathcomp/solvable/frobenius.v",
        "status": "M",
        "additions": 241,
        "deletions": 250
      },
      {
        "file": "mathcomp/solvable/gseries.v",
        "status": "M",
        "additions": 241,
        "deletions": 250
      },
      {
        "file": "mathcomp/solvable/jordanholder.v",
        "status": "M",
        "additions": 241,
        "deletions": 250
      },
      {
        "file": "mathcomp/solvable/maximal.v",
        "status": "M",
        "additions": 241,
        "deletions": 250
      },
      {
        "file": "mathcomp/solvable/nilpotent.v",
        "status": "M",
        "additions": 241,
        "deletions": 250
      },
      {
        "file": "mathcomp/solvable/pgroup.v",
        "status": "M",
        "additions": 241,
        "deletions": 250
      },
      {
        "file": "mathcomp/solvable/primitive_action.v",
        "status": "M",
        "additions": 241,
        "deletions": 250
      },
      {
        "file": "mathcomp/solvable/sylow.v",
        "status": "M",
        "additions": 241,
        "deletions": 250
      },
      {
        "file": "mathcomp/ssreflect/eqtype.v",
        "status": "M",
        "additions": 241,
        "deletions": 250
      },
      {
        "file": "mathcomp/ssreflect/finset.v",
        "status": "M",
        "additions": 241,
        "deletions": 250
      },
      {
        "file": "mathcomp/ssreflect/fintype.v",
        "status": "M",
        "additions": 241,
        "deletions": 250
      },
      {
        "file": "mathcomp/ssreflect/ssrnat.v",
        "status": "M",
        "additions": 241,
        "deletions": 250
      }
    ],
    "state": "merged",
    "open_date": "2018-11-27T15:42:09Z",
    "update_date": "2018-12-04T12:27:53Z",
    "discussion": [
      {
        "author": "ggonthier",
        "date": "2018-11-29T14:35:59Z",
        "comment": "I agree with @CohenCyril; I’ve actually prepared a full review addressing these and other issues, but I can’t upload it as I’m out of office this afternoon. I’ll do it tonight.\n   Best,\nGeorges \n\nEnvoyé de mon iPhone\n\n> Le 29 nov. 2018 à 15:14, Cyril Cohen <notifications@github.com> a écrit :\n> \n> @CohenCyril commented on this pull request.\n> \n> In mathcomp/algebra/poly.v:\n> \n> > @@ -146,9 +146,9 @@ End Polynomial.\n>  (* directives take effect.                                         *)\n>  Bind Scope ring_scope with poly_of.\n>  Bind Scope ring_scope with polynomial.\n> -Arguments polyseq _ _%R.\n> -Arguments poly_inj _ _%R _%R _.\n> -Arguments coefp_head _ _ _%N _%R.\n> +Arguments polyseq [R] p%R.\n> +Arguments poly_inj [R x1%R x2%R] _.\n> rename x1, x2 to p and q.\n> \n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub, or mute the thread.\n"
      },
      {
        "author": "anton-trunov",
        "date": "2018-11-30T11:39:56Z",
        "comment": "@ggonthier Thank you very much for the through review and all the explanations! I pushed two new commits trying to address your suggestions. Some of the maximal implicit declarations make us add `@` annotations. If this is not intended, I will revert the newest commit and amend the previous one."
      },
      {
        "author": "anton-trunov",
        "date": "2018-11-30T12:11:34Z",
        "comment": "Great! Should I squash all the commits then?"
      },
      {
        "author": "ggonthier",
        "date": "2018-11-30T12:13:47Z",
        "comment": "  Certainly, do go ahead. And thank you for contributing!\n\n> Le 30 nov. 2018 à 13:11, Anton Trunov <notifications@github.com> a écrit :\n> \n> Great! Should I squash all the commits then?\n> \n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub <https://github.com/math-comp/math-comp/pull/253#issuecomment-443185801>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AOhrHb775xXYfQ8VbXWZImYhHlORbyI6ks5u0SB3gaJpZM4Y1wxv>.\n> \n\n"
      },
      {
        "author": "anton-trunov",
        "date": "2018-11-30T12:52:15Z",
        "comment": "Done!"
      },
      {
        "author": "anton-trunov",
        "date": "2018-12-04T12:25:26Z",
        "comment": "I force-pushed the last fixes and this should be good to go!"
      },
      {
        "author": "ggonthier",
        "date": "2018-12-04T12:30:02Z",
        "comment": "Merged - thanks! I've also closed most conversations, keeping open those we may want to refer to in future improvements (e.g., the `_head` idiom and named extra arguments)."
      },
      {
        "author": "anton-trunov",
        "date": "2018-12-04T13:04:03Z",
        "comment": "@ggonthier Thank you for merging and for your patience!"
      },
      {
        "author": "ejgallego",
        "date": "2018-12-04T15:44:04Z",
        "comment": "It looks like this may have broken the compilation of `odd-order` [still verifying as it will take some time] see https://gitlab.com/coq/coq/-/jobs/129581232\r\n\r\nWhile I confirm the exact bug, IMHO math-comp's CI system should be improved, it makes little sense to perform changes to the library and don't test that `odd-order` is still OK."
      },
      {
        "author": "anton-trunov",
        "date": "2018-12-04T16:01:05Z",
        "comment": "@ejgallego I pushed a quick fix for this: https://github.com/anton-trunov/odd-order/commit/5750b0e6d7fe89a6e85eeebabad63b86dc758636.\r\nIt might be not what would be intended by @ggonthier, though."
      },
      {
        "author": "ejgallego",
        "date": "2018-12-04T16:06:17Z",
        "comment": "Thanks @anton-trunov , indeed I have confirmed the problem and your fix allows the compilation to continue. Please submit a PR, thanks!"
      },
      {
        "author": "anton-trunov",
        "date": "2018-12-04T16:08:54Z",
        "comment": "@ejgallego Done. https://github.com/math-comp/odd-order/pull/7"
      },
      {
        "author": "ejgallego",
        "date": "2018-12-04T16:12:04Z",
        "comment": "Thanks!"
      }
    ],
    "review_discussion": [
      {
        "author": "ggonthier",
        "file": "mathcomp/algebra/mxalgebra.v",
        "date": "2018-11-29T10:42:11Z",
        "comment": "```\r\nArguments mxrank {m%N n%N} A%MS.\r\n```\r\nAs a general rule, defined functional constants should have maximal prenex implicit arguments, as this facilitates their use as arguments to functionals, because this mimics the way function constants are treated in functional programming languages with Hindley-Milner type inference. Conversely, lemmas and theorems should have on-demand implicit arguments, possibly interspersed with explicit ones, as it's fairly common for other lemmas to have universally quantified premises; also, this makes it easier to specify such arguments with the `apply:` tactic. This policy may be amended for lemmas that are used as functional arguments, such as reflection or cancellation lemmas.\r\n  Unfortunately there is currently no easy way to tell Coq to use different defaults for definitions and lemmas, so MathComp sticks to the on-demand default, as there are significantly more lemmas than definition, and use the `Prenex Implicits` to redress matters in bulk for definitions. However, this is not completely systematic, and is sometimes omitted for constants that are not used as functional arguments in the library, or inside the sections in which the definition occur, since such commands need to be repeated after the section is closed.\r\n   Since `Arguments` commands should document the intended constant usage as best as possible, they should follow the implicits policy - even in cases such as this where the `Prenex Implicits` had been skipped."
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/algebra/mxalgebra.v",
        "date": "2018-11-29T10:43:32Z",
        "comment": "```\r\nArguments complmx {m%N n%N} A%MS.\r\n```\r\nFunctions have maximal implicits (see top comment)."
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/algebra/mxalgebra.v",
        "date": "2018-11-29T10:47:14Z",
        "comment": "```\r\nArguments submx {m1%N m2%N n%N} A%MS B%MS : rename.\r\n```\r\nThe `Arguments` command should document the intended bound names, which are clear here from the `submit_def` definition, not the names that happen to have been substituted or deleted by the `locked_with` functional."
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/algebra/mxalgebra.v",
        "date": "2018-11-29T10:48:38Z",
        "comment": "```\r\nArguments addsmx {m1%N m2%N n%N} A%MS B%MS : rename.\r\n```\r\nDocument intended arguments name (see comment above)."
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/algebra/mxalgebra.v",
        "date": "2018-11-29T10:50:00Z",
        "comment": "```\r\nArguments capmx {m1%N m2%N n%N} A%MS B%MS : rename\r\n```\r\nDocument intended names and implicit status."
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/algebra/mxalgebra.v",
        "date": "2018-11-29T10:50:53Z",
        "comment": "```\r\nArguments diffmx {m1%N m2%N n%N} A%MS B%MS : rename.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/algebra/mxalgebra.v",
        "date": "2018-11-29T10:51:52Z",
        "comment": "```\r\nArguments mxsum_spec {n%N m%N} T%MS r%N.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/algebra/mxalgebra.v",
        "date": "2018-11-29T10:53:39Z",
        "comment": "```\r\nArguments row_full {F m%N n%N}A%MS.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/algebra/mxalgebra.v",
        "date": "2018-11-29T11:03:03Z",
        "comment": "```\r\nArguments left_mx_ideal [F m1%N m2%N n%N] R%MS S%MS : rename.\r\n```\r\nConform to header documentation."
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/algebra/mxalgebra.v",
        "date": "2018-11-29T11:03:19Z",
        "comment": "```\r\nArguments right_mx_ideal [F m1%N m2%N n%N] R%MS S%MS : rename.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/algebra/mxalgebra.v",
        "date": "2018-11-29T11:03:39Z",
        "comment": "```\r\nArguments mx_ideal [F m1%N m2%N n%N] R%MS S%MS.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/algebra/mxalgebra.v",
        "date": "2018-11-29T11:04:56Z",
        "comment": "```\r\nArguments diffmx {F m1%N m2%N n%N} A%MS B%MS.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/algebra/mxalgebra.v",
        "date": "2018-11-29T11:05:06Z",
        "comment": "```\r\nArguments capmx {F m1%N m2%N n%N} A%MS B%MS : rename.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/algebra/mxalgebra.v",
        "date": "2018-11-29T11:05:31Z",
        "comment": "```\r\nArguments addsmx {F m1%N m2%N n%N} A%MS B%MS.\r\n```\r\nThe `rename` tag should not be needed here, if the other `Arguments addsmx` suggestion is implemented."
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/algebra/mxalgebra.v",
        "date": "2018-11-29T11:05:41Z",
        "comment": "```\r\nArguments eqmx {F m1%N m2%N n%N} A%MS B%MS.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/algebra/mxalgebra.v",
        "date": "2018-11-29T11:06:55Z",
        "comment": "```\r\nArguments ltmx {F m1%N m2%N n%N} A%MS B%MS.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/algebra/mxalgebra.v",
        "date": "2018-11-29T11:07:10Z",
        "comment": "```\r\nArguments submx {F m1%N m2%N n%N} A%MS B%MS : rename.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/algebra/mxalgebra.v",
        "date": "2018-11-29T11:08:49Z",
        "comment": "```\r\nArguments eqmx {m1%N m2%N n%N} A%MS B%MS.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/algebra/mxalgebra.v",
        "date": "2018-11-29T11:13:31Z",
        "comment": "```\r\nArguments mulsmx {m1%N m2%N n%N} R1%MS R2%MS.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/algebra/mxalgebra.v",
        "date": "2018-11-29T11:14:00Z",
        "comment": "```\r\nArguments has_mxring_id {F m%N n%N} R%MS.\r\n```\r\nThe declaration was clearly wrong: `has_mxring_id R` cannot coerce to a function."
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/algebra/mxalgebra.v",
        "date": "2018-11-29T11:14:33Z",
        "comment": "```\r\nArguments mxring {F m%N n%N} R%MS.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/algebra/mxalgebra.v",
        "date": "2018-11-29T11:14:48Z",
        "comment": "```\r\nArguments cent_mx {F m%N n%N} R%MS.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/algebra/mxalgebra.v",
        "date": "2018-11-29T11:15:03Z",
        "comment": "```\r\nArguments center_mx {F m%N n%N} R%MS.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/algebra/mxalgebra.v",
        "date": "2018-11-29T11:17:06Z",
        "comment": "```\r\nArguments mxring_id {F m%N n%N} R%MS e%R.\r\n```\r\nThese were the correct names but the wrong scopes; the header documentation should also be corrected as it inverts `e` and `R`."
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/algebra/poly.v",
        "date": "2018-11-29T11:17:33Z",
        "comment": "```\r\nArguments polyseq {R} p%R.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/algebra/poly.v",
        "date": "2018-11-29T11:18:14Z",
        "comment": "```\r\nArguments coefp_head {R} h i%N p%R.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/algebra/poly.v",
        "date": "2018-11-29T11:20:57Z",
        "comment": "```\r\nArguments poly_inj {R} [p1%R p2%R] x : rename.\r\n```\r\nThe ring parameter should be a maximal implicit, since injectivity lemmas are sometimes passed as arguments. The following two arguments should remain on-demand implicits, as it's the quantified lemma that needs to be passed around! Also, they are polynomials and should be named accordingly."
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2018-11-29T11:26:23Z",
        "comment": "```\r\nArguments Add {R} t1%T t2%T.\r\n```\r\nNon-proof arguments should always be documented; here you can look to usage in `ssralg` for guidance (e.g., `eval` and `holds`)."
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2018-11-29T11:26:54Z",
        "comment": "```\r\nArguments Opp {R} t1%T.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2018-11-29T11:27:20Z",
        "comment": "```\r\nArguments NatMul {R} t1%T n%N.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2018-11-29T11:27:35Z",
        "comment": "```\r\nArguments Mul {R} t1%T t2%T.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2018-11-29T11:27:51Z",
        "comment": "```\r\nArguments Inv {R} t1%T.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2018-11-29T11:28:09Z",
        "comment": "```\r\nArguments Exp {R} t1%T n%N.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2018-11-29T11:28:44Z",
        "comment": "```\r\nArguments Equal {R} t1%T t2%T.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2018-11-29T11:29:25Z",
        "comment": "```\r\nArguments Unit {R} t1%T.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2018-11-29T11:29:43Z",
        "comment": "```\r\nArguments And {R} f1%T f2%T.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2018-11-29T11:29:59Z",
        "comment": "```\r\nArguments Or {R} f1%T f2%T.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2018-11-29T11:30:13Z",
        "comment": "```\r\nArguments Implies {R} f1%T f2%T.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2018-11-29T11:30:28Z",
        "comment": "```\r\nArguments Not {R} f1%T.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2018-11-29T11:30:47Z",
        "comment": "```\r\nArguments Exists {R} i%N f1%T.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2018-11-29T11:31:03Z",
        "comment": "```\r\nArguments Forall {R} i%N f1%T.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2018-11-29T11:31:46Z",
        "comment": "```\r\nArguments Bool {R} b.\r\n```\r\nDocument all arguments."
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2018-11-29T11:32:23Z",
        "comment": "```\r\nArguments Const {R} x.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/algebra/vector.v",
        "date": "2018-11-29T11:35:47Z",
        "comment": "```\r\nArguments mx2vs {K vT m%N} A%MS.\r\n```\r\nAlthough this is undocumented, on-demand implicits behave just as maximal ones - so it's best to clarify things in an `Arguments` command."
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/character/character.v",
        "date": "2018-11-29T11:36:16Z",
        "comment": "```\r\nArguments pred_Nirr {gT} B%g.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/character/character.v",
        "date": "2018-11-29T11:41:31Z",
        "comment": "```\r\nArguments socle_of_Iirr {gT G%G} i%R.\r\n```\r\nThe declaration was wrong as it forgot about the `gT` argument."
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/character/character.v",
        "date": "2018-11-29T11:42:00Z",
        "comment": "```\r\nArguments irr {gT} B%g.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/character/character.v",
        "date": "2018-11-29T11:42:13Z",
        "comment": "```\r\nArguments cfReg {gT} B%g.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/character/character.v",
        "date": "2018-11-29T11:42:38Z",
        "comment": "```\r\nArguments character_table {gT} G%g.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/character/character.v",
        "date": "2018-11-29T11:42:55Z",
        "comment": "```\r\nArguments irr_constt {gT B%g} phi%CF.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/character/character.v",
        "date": "2018-11-29T11:43:21Z",
        "comment": "```\r\nArguments Res_Iirr {gT A%g} B%g i%R.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/character/character.v",
        "date": "2018-11-29T11:44:17Z",
        "comment": "```\r\nArguments Ind_Iirr {gT A%g} B%g i%R.\r\n\r\n```\r\nAlso correct the missing end-of-line at the end of the file."
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/character/classfun.v",
        "date": "2018-11-29T11:44:58Z",
        "comment": "```\r\nArguments classfun {gT} B%g.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/character/classfun.v",
        "date": "2018-11-29T11:45:37Z",
        "comment": "```\r\nArguments classfun_on {gT} B%g A%g.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/character/classfun.v",
        "date": "2018-11-29T11:45:52Z",
        "comment": "```\r\nArguments cfun_indicator {gT} B%g.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/character/classfun.v",
        "date": "2018-11-29T11:46:54Z",
        "comment": "```\r\nArguments cfReal {gT B%g} phi%CF.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/character/classfun.v",
        "date": "2018-11-29T11:47:10Z",
        "comment": "```\r\nArguments cfdot {gT B%g} phi%CF psi%CF.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/character/classfun.v",
        "date": "2018-11-29T11:52:53Z",
        "comment": "```\r\nArguments cfdotr_head {gT B%g} k psi%CF phi%CF.\r\n```\r\nWe could also get rid of the `cfdotr_head` definition / `cfdot` notation pair, using a `cfdot` definition with an `Arguments cfdotr {gT B%g} psi%CF phi%CF /` declaration instead. However, since this is a coding pattern used throughout MathComp, this would be perhaps best done in a separate PR."
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/character/classfun.v",
        "date": "2018-11-29T11:54:04Z",
        "comment": "This is redundant and should be deleted."
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/character/classfun.v",
        "date": "2018-11-29T11:54:29Z",
        "comment": "```\r\nArguments cfker {gT D%g} phi%CF.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/character/classfun.v",
        "date": "2018-11-29T11:54:42Z",
        "comment": "```\r\nArguments cfaithful {gT D%g} phi%CF.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/character/classfun.v",
        "date": "2018-11-29T11:55:00Z",
        "comment": "```\r\nArguments orthogonal {gT D%g} S1%CF S2%CF.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/character/classfun.v",
        "date": "2018-11-29T11:55:20Z",
        "comment": "```\r\nArguments pairwise_orthogonal {gT D%g} S%CF.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/character/classfun.v",
        "date": "2018-11-29T11:55:43Z",
        "comment": "```\r\nArguments orthonormal {gT D%g} S%CF.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/character/classfun.v",
        "date": "2018-11-29T11:56:53Z",
        "comment": "```\r\nArguments isometry {gT rT D%g R%g} tau%CF.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/character/classfun.v",
        "date": "2018-11-29T11:57:09Z",
        "comment": "```\r\nArguments classfun_on {gT} B%g A%g.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/character/classfun.v",
        "date": "2018-11-29T12:00:55Z",
        "comment": "```\r\nArguments cfRes {gT} A%g {B%g} phi%CF.\r\n```\r\nEven though the implicits are not prenex, they should be maximal here. It may be necessary to adjust use of `cfRes` in the rest of MathComp and `odd-order`."
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/character/classfun.v",
        "date": "2018-11-29T12:05:11Z",
        "comment": "```\r\nArguments cfQuo {gT G%G} B%g phi%CF.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/character/classfun.v",
        "date": "2018-11-29T12:06:53Z",
        "comment": "```\r\nArguments cfInd {gT} B%g {A%g} phi%CF.\r\n```\r\nSee comment on `cfRes`: this is better, but some updating of the rest of MathComp/`odd-order` may be necessary."
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/character/inertia.v",
        "date": "2018-11-29T12:07:08Z",
        "comment": "```\r\nArguments inertia {gT B%g} phi%CF.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/character/inertia.v",
        "date": "2018-11-29T12:07:27Z",
        "comment": "```\r\nArguments cfclass {gT A%g} phi%CF B%g.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/character/integral_char.v",
        "date": "2018-11-29T12:10:37Z",
        "comment": "```\r\nArguments gring_irr_mode {gT G%G} i%R g%g : extra scopes.\r\n```\r\nIt's better to document an extra argument name here because the `%g` scope is used both for group elements and group subsets (and it's the former here)."
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/character/mxabelem.v",
        "date": "2018-11-29T12:11:10Z",
        "comment": "```\r\nArguments rowg_mx {F n%N} L%g.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/character/mxabelem.v",
        "date": "2018-11-29T12:11:34Z",
        "comment": "```\r\nArguments abelem_dim' {gT} E%g.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/character/mxrepresentation.v",
        "date": "2018-11-29T12:12:38Z",
        "comment": "```\r\nArguments mx_representation R {gT} G%g n%N.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/character/mxrepresentation.v",
        "date": "2018-11-29T12:13:22Z",
        "comment": "```\r\nArguments mx_repr {R gT} G%g {n%N} r.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/character/mxrepresentation.v",
        "date": "2018-11-29T12:13:36Z",
        "comment": "```\r\nArguments group_ring R {gT} G%g.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/character/mxrepresentation.v",
        "date": "2018-11-29T12:13:48Z",
        "comment": "```\r\nArguments regular_repr R {gT} G%g.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/character/mxrepresentation.v",
        "date": "2018-11-29T12:14:07Z",
        "comment": "```\r\nArguments rfix_mx {F gT G%g n%N} rG H%g.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/character/mxrepresentation.v",
        "date": "2018-11-29T12:14:32Z",
        "comment": "```\r\nArguments gset_mx F {gT} G%g A%g.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/character/mxrepresentation.v",
        "date": "2018-11-29T12:14:48Z",
        "comment": "```\r\nArguments classg_base F {gT} G%g _%g : extra scopes.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/character/mxrepresentation.v",
        "date": "2018-11-29T12:29:53Z",
        "comment": "```\r\nArguments irrType F {gT} G%g _%g : extra scopes.\r\n```\r\nI have some doubts about the final `_%g` annotation: an `irrType` `S` can indeed be coerced to a function, namely the always-true predicate on `socle_sort S`, which is not linked to any specific scope.\r\nThis is probably a misguided parallel with `irr_repr` below, which does coerce to a function on group elements (namely, a linear representation)."
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/character/mxrepresentation.v",
        "date": "2018-11-29T12:30:14Z",
        "comment": "```\r\nArguments irr_degree {F gT G%G sG} i%irr.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/field/closed_field.v",
        "date": "2018-11-29T12:38:54Z",
        "comment": "I think these should also get maximal implicits, but since this is @CohenCyril 's code, I'll let him decide."
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/field/falgebra.v",
        "date": "2018-11-29T12:39:55Z",
        "comment": "```\r\nArguments asval {K aT} a%AS.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/fingroup/action.v",
        "date": "2018-11-29T12:40:35Z",
        "comment": "```\r\nArguments act_morph {aT rT%type} to x%g.\r\n```\r\nThe annotations was wrong because it assumed the group set `D` was a parameter of this predicate."
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/fingroup/action.v",
        "date": "2018-11-29T12:41:03Z",
        "comment": "```\r\nArguments is_action {aT} D%g {rT} to.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/fingroup/action.v",
        "date": "2018-11-29T12:42:16Z",
        "comment": "```\r\nArguments act {aT D%g rT%type} a%act x%g a%g.\r\n```\r\nNames reflect that the first argument is in the acted-on set (it is given group scope because much of the library is concerned about groups acting on other groups)."
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/fingroup/action.v",
        "date": "2018-11-29T12:47:48Z",
        "comment": "```\r\nArguments setact {aT D%g rT} to%act S%g a%g.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/fingroup/action.v",
        "date": "2018-11-29T12:54:06Z",
        "comment": "```\r\nArguments orbit {aT D%g rT} to%act A%g x%g.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/fingroup/action.v",
        "date": "2018-11-29T12:54:26Z",
        "comment": "```\r\nArguments amove {aT D%g rT} to%act A%g x%g y%g.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/fingroup/action.v",
        "date": "2018-11-29T12:54:56Z",
        "comment": "```\r\nArguments afix {aT D%g rT} to%act A%g.\r\n```\r\n"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/fingroup/action.v",
        "date": "2018-11-29T12:55:11Z",
        "comment": "```\r\nArguments astab {aT D%g rT} S%g to%act.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/fingroup/action.v",
        "date": "2018-11-29T12:55:25Z",
        "comment": "```\r\nArguments astabs {aT D%g rT} S%g to%act.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/fingroup/action.v",
        "date": "2018-11-29T12:55:42Z",
        "comment": "```\r\nArguments acts_on {aT D%g rT} A%g S%g to%act.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/fingroup/action.v",
        "date": "2018-11-29T12:55:58Z",
        "comment": "```\r\nArguments atrans {aT D%g rT} A%g S%g to%act.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/fingroup/action.v",
        "date": "2018-11-29T12:56:13Z",
        "comment": "```\r\nArguments faithful {aT D%g rT} A%g S%g to%act.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/fingroup/action.v",
        "date": "2018-11-29T12:56:30Z",
        "comment": "```\r\nArguments orbit_transversal {aT D%g rT} to%act A%g S%g.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/fingroup/action.v",
        "date": "2018-11-29T12:56:47Z",
        "comment": "```\r\nArguments Aut_in {gT} A%g B%g.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/fingroup/action.v",
        "date": "2018-11-29T12:57:05Z",
        "comment": "```\r\nArguments is_groupAction {aT rT D%g} R%g to%act.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/fingroup/action.v",
        "date": "2018-11-29T12:57:19Z",
        "comment": "```\r\nArguments groupAction {aT rT} D%g R%g.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/fingroup/action.v",
        "date": "2018-11-29T12:57:32Z",
        "comment": "```\r\nArguments gact {aT rT D%g R%g} g%gact.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/fingroup/action.v",
        "date": "2018-11-29T12:57:50Z",
        "comment": "```\r\nArguments gacent {aT rT D%g R%g} to%gact A%g.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/fingroup/action.v",
        "date": "2018-11-29T12:58:05Z",
        "comment": "```\r\nArguments acts_on_group {aT rT D%g R%g} A%g S%g to%gact.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/fingroup/action.v",
        "date": "2018-11-29T12:58:24Z",
        "comment": "```\r\nArguments acts_irreducibly {aT rT D%g R%g} A%g S%g to%gact.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/fingroup/action.v",
        "date": "2018-11-29T12:58:46Z",
        "comment": "```\r\nArguments aut_action {gT} G%g.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/fingroup/action.v",
        "date": "2018-11-29T12:59:02Z",
        "comment": "```\r\nArguments aut_groupAction {gT} G%g.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/solvable/abelian.v",
        "date": "2018-11-29T12:59:23Z",
        "comment": "```\r\nArguments exponent {gT} A%g.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/solvable/abelian.v",
        "date": "2018-11-29T12:59:39Z",
        "comment": "```\r\nArguments abelem {gT} p%N A%g.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/solvable/abelian.v",
        "date": "2018-11-29T12:59:53Z",
        "comment": "```\r\nArguments is_abelem {gT} A%g.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/solvable/abelian.v",
        "date": "2018-11-29T13:00:06Z",
        "comment": "```\r\nArguments pElem {gT} p%N A%g.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/solvable/abelian.v",
        "date": "2018-11-29T13:00:22Z",
        "comment": "```\r\nArguments pnElem {gT} p%N n%N A%g.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/solvable/abelian.v",
        "date": "2018-11-29T13:00:42Z",
        "comment": "```\r\nArguments nElem {gT} n%N A%g.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/solvable/abelian.v",
        "date": "2018-11-29T13:01:00Z",
        "comment": "```\r\nArguments pmaxElem {gT} p%N A%g.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/solvable/abelian.v",
        "date": "2018-11-29T13:01:13Z",
        "comment": "```\r\nArguments p_rank {gT} p%N A%g.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/solvable/abelian.v",
        "date": "2018-11-29T13:01:39Z",
        "comment": "```\r\nArguments rank {gT} A%g.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/solvable/abelian.v",
        "date": "2018-11-29T13:01:51Z",
        "comment": "```\r\nArguments gen_rank {gT} A%g.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/solvable/abelian.v",
        "date": "2018-11-29T13:02:07Z",
        "comment": "```\r\nArguments Ohm n%N {gT} A%g.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/solvable/abelian.v",
        "date": "2018-11-29T13:02:23Z",
        "comment": "```\r\nArguments Ohm_group n%N {gT} A%g.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/solvable/abelian.v",
        "date": "2018-11-29T13:02:35Z",
        "comment": "```\r\nArguments Mho n%N {gT} A%g.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/solvable/abelian.v",
        "date": "2018-11-29T13:02:56Z",
        "comment": "```\r\nArguments Mho_group n%N {gT} A%g.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/solvable/center.v",
        "date": "2018-11-29T13:03:16Z",
        "comment": "```\r\nArguments center {gT} A%g.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/solvable/commutator.v",
        "date": "2018-11-29T13:03:36Z",
        "comment": "```\r\nArguments derived_at n%N {gT} A%g.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/solvable/frobenius.v",
        "date": "2018-11-29T13:04:02Z",
        "comment": "```\r\nArguments semiregular {gT} K%g H%g.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/solvable/frobenius.v",
        "date": "2018-11-29T13:04:22Z",
        "comment": "```\r\nArguments semiprime {gT} K%g H%g.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/solvable/frobenius.v",
        "date": "2018-11-29T13:04:34Z",
        "comment": "```\r\nArguments normedTI {gT} A%g G%g L%g.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/solvable/frobenius.v",
        "date": "2018-11-29T13:04:46Z",
        "comment": "```\r\nArguments Frobenius_group_with_complement {gT} G%g H%g.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/solvable/frobenius.v",
        "date": "2018-11-29T13:04:59Z",
        "comment": "```\r\nArguments Frobenius_group {gT} G%g.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/solvable/frobenius.v",
        "date": "2018-11-29T13:05:11Z",
        "comment": "```\r\nArguments Frobenius_group_with_kernel {gT} G%g K%g.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/solvable/frobenius.v",
        "date": "2018-11-29T13:05:24Z",
        "comment": "```\r\nArguments Frobenius_group_with_kernel_and_complement {gT} G%g K%g H%g.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/solvable/frobenius.v",
        "date": "2018-11-29T13:05:44Z",
        "comment": "```\r\nArguments Frobenius_action {gT} G%g H%g {sT} S%g to%act.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/solvable/frobenius.v",
        "date": "2018-11-29T13:05:58Z",
        "comment": "```\r\nArguments has_Frobenius_action {gT} G%g H%g.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/solvable/gseries.v",
        "date": "2018-11-29T13:08:21Z",
        "comment": "```\r\nArguments invariant_factor {gT} A%g B%g C%g.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/solvable/gseries.v",
        "date": "2018-11-29T13:08:31Z",
        "comment": "```\r\nArguments invariant_factor {gT} A%g B%g C%g.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/solvable/gseries.v",
        "date": "2018-11-29T13:08:46Z",
        "comment": "```\r\nArguments stable_factor {gT} A%g V%g U%g.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/solvable/gseries.v",
        "date": "2018-11-29T13:09:08Z",
        "comment": "```\r\nArguments central_factor {gT} A%g V%g U%g.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/solvable/gseries.v",
        "date": "2018-11-29T13:09:22Z",
        "comment": "```\r\nArguments maximal_eq {gT} A%g B%g.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/solvable/gseries.v",
        "date": "2018-11-29T13:09:38Z",
        "comment": "```\r\nArguments maxnormal {gT} A%g B%g U%g.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/solvable/gseries.v",
        "date": "2018-11-29T13:09:51Z",
        "comment": "```\r\nArguments minnormal {gT} A%g B%g.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/solvable/gseries.v",
        "date": "2018-11-29T13:10:15Z",
        "comment": "```\r\nArguments chief_factor {gT} A%g V%g U%g.\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/mxalgebra.v",
        "date": "2018-11-29T13:10:42Z",
        "comment": "These look like automatically generated name. It would be nice to take the opportunity of your refactoring to rename them with the right conventions... here `m`, `n` and `p`."
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/solvable/gseries.v",
        "date": "2018-11-29T13:10:46Z",
        "comment": "```\r\nArguments group_rel_of {gT} r%group_rel_scope _%G _%G : extra scopes.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/solvable/jordanholder.v",
        "date": "2018-11-29T13:11:48Z",
        "comment": "```\r\nArguments maxainv {aT rT D%G A%G} to%gact B%g C%g.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/solvable/jordanholder.v",
        "date": "2018-11-29T13:12:37Z",
        "comment": "```\r\nArguments asimple {aT rT D%G A%G} to%gact K%g.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/solvable/maximal.v",
        "date": "2018-11-29T13:13:10Z",
        "comment": "```\r\nArguments charsimple {gT} A%g.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/solvable/maximal.v",
        "date": "2018-11-29T13:13:23Z",
        "comment": "```\r\nArguments Frattini {gT} A%g.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/solvable/maximal.v",
        "date": "2018-11-29T13:13:36Z",
        "comment": "```\r\nArguments Fitting {gT} A%g.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/solvable/maximal.v",
        "date": "2018-11-29T13:13:50Z",
        "comment": "```\r\nArguments critical {gT} A%g B%g.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/solvable/maximal.v",
        "date": "2018-11-29T13:14:01Z",
        "comment": "```\r\nArguments special {gT} A%g.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/solvable/maximal.v",
        "date": "2018-11-29T13:14:26Z",
        "comment": "```\r\nArguments extraspecial {gT} A%g.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/solvable/maximal.v",
        "date": "2018-11-29T13:14:38Z",
        "comment": "```\r\nArguments SCN {gT} B%g.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/solvable/maximal.v",
        "date": "2018-11-29T13:14:52Z",
        "comment": "```\r\nArguments SCN_at {gT} n%N B%g.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/solvable/nilpotent.v",
        "date": "2018-11-29T13:15:07Z",
        "comment": "```\r\nArguments lower_central_at n%N {gT} A%g.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/solvable/nilpotent.v",
        "date": "2018-11-29T13:15:22Z",
        "comment": "```\r\nArguments upper_central_at n%N {gT} A%g.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/solvable/pgroup.v",
        "date": "2018-11-29T13:15:41Z",
        "comment": "```\r\nArguments psubgroup {gT} pi%N A%g B%g.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/solvable/pgroup.v",
        "date": "2018-11-29T13:15:55Z",
        "comment": "```\r\nArguments p_group {gT} A%g.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/solvable/pgroup.v",
        "date": "2018-11-29T13:16:08Z",
        "comment": "```\r\nArguments p_elt {gT} pi%N x.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/solvable/pgroup.v",
        "date": "2018-11-29T13:16:27Z",
        "comment": "```\r\nArguments constt {gT} x%g pi%N.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/solvable/pgroup.v",
        "date": "2018-11-29T13:16:54Z",
        "comment": "```\r\nArguments pHall {gT} pi%N A%g B%g.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/solvable/pgroup.v",
        "date": "2018-11-29T13:17:09Z",
        "comment": "```\r\nArguments Syl {gT} p%N A%g.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/solvable/pgroup.v",
        "date": "2018-11-29T13:17:26Z",
        "comment": "```\r\nArguments pcore pi%N {gT} A%g.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/solvable/pgroup.v",
        "date": "2018-11-29T13:17:40Z",
        "comment": "```\r\nArguments pcore_group pi%N {gT} A%G.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/solvable/pgroup.v",
        "date": "2018-11-29T13:18:55Z",
        "comment": "```\r\nArguments pseries pis%SEQ {gT} _%g.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/solvable/primitive_action.v",
        "date": "2018-11-29T13:19:44Z",
        "comment": "```\r\nArguments imprimitivity_system {aT sT} A%g S%g to%act Q%g.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/solvable/primitive_action.v",
        "date": "2018-11-29T13:20:01Z",
        "comment": "```\r\nArguments primitive {aT sT} A%g S%g to%act.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/solvable/primitive_action.v",
        "date": "2018-11-29T13:20:19Z",
        "comment": "```\r\nArguments dtuple_on {sT} n%N S%g.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/solvable/primitive_action.v",
        "date": "2018-11-29T13:20:36Z",
        "comment": "```\r\nArguments ntransitive {gT sT} n%N A%g S%g to%act.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/solvable/primitive_action.v",
        "date": "2018-11-29T13:20:55Z",
        "comment": "```\r\nArguments n_act {gT sT} to {n} t a.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/ssreflect/eqtype.v",
        "date": "2018-11-29T13:21:17Z",
        "comment": "```\r\nArguments app_fdelta {aT rT%type} df%FUN_DELTA f z.\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/mxalgebra.v",
        "date": "2018-11-29T13:36:24Z",
        "comment": "Or maybe `m1`, `m2` and `n` would be even more meaningful in this particular instance... "
      },
      {
        "author": "anton-trunov",
        "file": "mathcomp/algebra/mxalgebra.v",
        "date": "2018-11-29T13:46:12Z",
        "comment": "@CohenCyril Done! I tried to be least invasive, however I'm fine with changing names, so feel free to propose, it's not hard to rename a few things :)"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/mxalgebra.v",
        "date": "2018-11-29T14:11:50Z",
        "comment": "Please rename"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/mxalgebra.v",
        "date": "2018-11-29T14:11:56Z",
        "comment": "Rename"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/mxalgebra.v",
        "date": "2018-11-29T14:12:22Z",
        "comment": "rename `x`s to `m`, `n`, `p`..."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/poly.v",
        "date": "2018-11-29T14:14:02Z",
        "comment": "rename `x1`, `x2` to `p` and `q`."
      },
      {
        "author": "anton-trunov",
        "file": "mathcomp/algebra/mxalgebra.v",
        "date": "2018-11-29T15:42:53Z",
        "comment": "Done. I renamed into `m1`, `m2`, `n` to make it uniform with the rest of the declarations. I hope it's ok."
      },
      {
        "author": "anton-trunov",
        "file": "mathcomp/algebra/poly.v",
        "date": "2018-11-29T15:43:05Z",
        "comment": "Done."
      },
      {
        "author": "anton-trunov",
        "file": "mathcomp/algebra/mxalgebra.v",
        "date": "2018-11-30T10:05:54Z",
        "comment": "I corrected the implicitness declaration and the scopes, but I see in the header this description\r\n```\r\n(*      mxring_id R e <-> e is an identity element for R (Prop predicate).   *)\r\n```\r\nand it seems to me the order is correct here. Am I missing something?"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/algebra/mxalgebra.v",
        "date": "2018-11-30T10:10:38Z",
        "comment": "No, you are right, the order is correct - I didn't spot the scope inversion at first and then forgot to fix the reference to the header along with my comment."
      },
      {
        "author": "anton-trunov",
        "file": "mathcomp/character/classfun.v",
        "date": "2018-11-30T10:22:26Z",
        "comment": "I opened issue #254 about this suggestion."
      },
      {
        "author": "anton-trunov",
        "file": "mathcomp/character/mxrepresentation.v",
        "date": "2018-11-30T10:32:31Z",
        "comment": "I'm not that familiar with `character` library. I could put your comment into the file, if you'd like."
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/character/mxrepresentation.v",
        "date": "2018-11-30T10:59:23Z",
        "comment": "The `%g` is wrong, because `irrType F G` does not have a group structure - at best, its elements coerce to matrices, with a `%R` scope, and `irrType F G` could only be applied to its own elements, not their matrix coercions, so the `%R` wouldn't be useful anyway.\r\n  The most likely explanation is that this is a mistake - at some point there might have been another implicit group set argument to `irrType`, and that second `%g` was intended for `G`. I'd suggest deleting it, along with the `extra scopes` tag."
      },
      {
        "author": "anton-trunov",
        "file": "mathcomp/fingroup/action.v",
        "date": "2018-11-30T11:02:51Z",
        "comment": "`a%g` should be changed into something else to avoid a name clash with `a%act`. Can we change it into\r\n```\r\nArguments act {aT D%g rT%type} a%act x%g y%g.\r\n```\r\n?"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/fingroup/action.v",
        "date": "2018-11-30T11:12:43Z",
        "comment": "Actually, you should change the `a%act` to `to%act` instead. If you look at the header and file, `to` is the conventional name for abstract actions, and `a` and `b` the conventional names for elements in an acting group; the `a` here was automatically inserted by the `Record` macro."
      },
      {
        "author": "anton-trunov",
        "file": "mathcomp/character/integral_char.v",
        "date": "2018-11-30T11:31:26Z",
        "comment": "With `g%g` I get\r\n\r\n> Error: Extra notation scopes can be set on anonymous and explicit arguments only.\r\n"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/character/integral_char.v",
        "date": "2018-11-30T11:41:09Z",
        "comment": "My bad - just ignore the naming suggestion (but to keep the maximal implicits). Maybe that could be a Coq wish for @gares ? I understand the named arguments syntax `(arg := value)` can't be used for extra arguments, but, as this example shows, names do have documentary value as well."
      },
      {
        "author": "gares",
        "file": "mathcomp/character/integral_char.v",
        "date": "2018-11-30T13:21:44Z",
        "comment": "We could relax the check, ignoring the given name. The last cleanup of the `Arguments` \"macro\" was performed by @maximedenes , especially the error messages that are now more understandable. Maxime do you think the check could be easily relaxed?\r\n\r\nAs an alternative solution, you can use the scope name rather than the scope delimiter there. I guess that the full scope name would make the sentence non ambiguous (out of the context of open scopes)."
      },
      {
        "author": "anton-trunov",
        "file": "mathcomp/character/integral_char.v",
        "date": "2018-11-30T13:33:14Z",
        "comment": "@gares Do you mean something like this?\r\n\r\n```coq\r\nArguments gring_irr_mode {gT G%G} i%R _%group_scope : extra scopes.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/character/integral_char.v",
        "date": "2018-11-30T13:39:24Z",
        "comment": "Using the full scope name wouldn't help here, as `group_scope` is used for both group elements and group sets.\r\n  Ideally, you should drop the check _and_ allow the named syntax for extra args. There's no reason to trust blindly that the static approximation of the arity of a constant is correct. In addition to coercions to `fun_class` there could also be common choices of some of the dependent parameters that increase the arity (e.g., if the return type is a parameter). It's all right to have an `extra scopes` tag (`extra arguments` might be a better name) in order to catch errors (this PR actually uncovered a few in the MathComp library), but Coq should otherwise obey the user code."
      },
      {
        "author": "maximedenes",
        "file": "mathcomp/character/integral_char.v",
        "date": "2018-11-30T13:40:50Z",
        "comment": "Here you are: https://github.com/coq/coq/pull/9117\r\n\r\nI think accepting names there is fine."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/character/classfun.v",
        "date": "2018-11-30T16:46:05Z",
        "comment": "Waiting for the issue about `_head` is adressed, I would like maximal implicits here too"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/algebra/mxalgebra.v",
        "date": "2018-11-30T17:09:13Z",
        "comment": "The `rename`s here should be redundant, given the previous `Arguments` declarations."
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/algebra/mxalgebra.v",
        "date": "2018-11-30T17:15:16Z",
        "comment": "It should be `A%R`: `genmx A` (notation `<<A>>`) is the (canonical representative of the) row space of `A`, so it expects a matrix constructed with arithmetic operations."
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/algebra/mxalgebra.v",
        "date": "2018-11-30T17:16:04Z",
        "comment": "Still missing a few maximal implicits here..."
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/algebra/poly.v",
        "date": "2018-11-30T17:19:15Z",
        "comment": "This should be `Arguments poly_inj {R} [p1%R p2%R] _ : rename.`\r\n(see my comment on the previous version). The parallel names `p1`, `p2` are more consistent with the symmetry of the injectivity predicate."
      },
      {
        "author": "anton-trunov",
        "file": "mathcomp/algebra/mxalgebra.v",
        "date": "2018-11-30T18:39:41Z",
        "comment": "I thought so too, but if I skip the `rename`s, compilation fails."
      },
      {
        "author": "anton-trunov",
        "file": "mathcomp/algebra/mxalgebra.v",
        "date": "2018-11-30T18:45:09Z",
        "comment": "Sorry, I missed those."
      },
      {
        "author": "anton-trunov",
        "file": "mathcomp/algebra/poly.v",
        "date": "2018-11-30T19:05:54Z",
        "comment": "We have a bunch of `Arguments` declarations for `_inj` lemmas and most of them use `[x1 x2]` (see below).\r\nShould we do something about that?\r\n```\r\nmathcomp/fingroup/quotient.v:753:Arguments qisom_inj [gT G H].\r\nmathcomp/fingroup/quotient.v:754:Arguments morphim_qisom_inj [gT G H].\r\nmathcomp/fingroup/perm.v:131:Arguments perm_inj : clear implicits.\r\nmathcomp/fingroup/fingroup.v:496:Arguments invg_inj {T}.\r\nmathcomp/fingroup/fingroup.v:646:Arguments conjg_inj [T].\r\nmathcomp/character/classfun.v:1623:Arguments cfIsom_inj [aT rT G f R] isoGR [x1 x2].\r\nmathcomp/character/classfun.v:2490:Arguments cfAut_inj u [gT G x1 x2].\r\nmathcomp/character/inertia.v:572:Arguments conjg_Iirr_inj [gT H] y [x1 x2].\r\nmathcomp/character/character.v:821:Arguments irr_inj {gT G} [x1 x2].\r\nmathcomp/character/character.v:1873:Arguments isom_Iirr_inj [aT rT G f R] isoGR [x1 x2].\r\nmathcomp/character/character.v:1941:Arguments sdprod_Iirr_inj [gT K H G] defG [x1 x2].\r\nmathcomp/character/character.v:2092:Arguments dprod_Iirr_inj [gT G K H] KxH [x1 x2].\r\nmathcomp/character/character.v:2260:Arguments aut_Iirr_inj [gT G] u [x1 x2].\r\nmathcomp/character/mxrepresentation.v:2380:Arguments val_submod_inj {n U m}.\r\nmathcomp/character/mxrepresentation.v:2381:Arguments val_factmod_inj {n U m}.\r\nmathcomp/character/mxrepresentation.v:4674:Arguments val_submod_inj {F n U m}.\r\nmathcomp/character/mxrepresentation.v:4675:Arguments val_factmod_inj {F n U m}.\r\nmathcomp/field/algebraics_fundamentals.v:263:Arguments map_poly_inj {F R} f [x1 x2].\r\nmathcomp/fingroup/action.v:288:Arguments act_inj : clear implicits.\r\nmathcomp/fingroup/action.v:487:Arguments act_inj {aT D rT} to _ [x1 x2].\r\nmathcomp/ssreflect/eqtype.v:606:Arguments val_inj {T P sT}.\r\nmathcomp/ssreflect/finset.v:958:Arguments set1_inj {T}.\r\nmathcomp/ssreflect/fintype.v:1763:Arguments enum_val_inj {T A} [x1 x2].\r\nmathcomp/ssreflect/fintype.v:1764:Arguments enum_rank_inj {T} [x1 x2].\r\nmathcomp/ssreflect/bigop.v:1389:Arguments reindex_inj [I h P F].\r\nmathcomp/ssreflect/bigop.v:1512:Arguments reindex_inj [R idx op I h P F].\r\nmathcomp/algebra/poly.v:150:Arguments poly_inj {R} [p1%R p2%R] _ : rename.\r\nmathcomp/algebra/poly.v:2433:Arguments map_poly_inj {F R} f [p1 p2] : rename.\r\nmathcomp/algebra/ssralg.v:864:Arguments oppr_inj {V} [x1 x2].\r\nmathcomp/algebra/ssralg.v:3022:Arguments invr_inj {R} [x1 x2].\r\nmathcomp/algebra/ssralg.v:4798:Arguments fmorph_inj {F R} f [x1 x2].\r\nmathcomp/algebra/ssralg.v:5359:Arguments oppr_inj {V} [x1 x2].\r\nmathcomp/algebra/ssralg.v:5543:Arguments invr_inj {R} [x1 x2].\r\nmathcomp/algebra/ssralg.v:5706:Arguments fmorph_inj {F R} f [x1 x2].\r\nmathcomp/algebra/vector.v:1946:Arguments subvs_inj {K vT U} [x1 x2].\r\nmathcomp/algebra/ssrint.v:980:Arguments intr_inj {R} [x1 x2].\r\nmathcomp/algebra/ssrnum.v:3143:Arguments signr_inj {R} [x1 x2].\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/field/closed_field.v",
        "date": "2018-11-30T20:15:00Z",
        "comment": "I agree: let's go maximal."
      },
      {
        "author": "anton-trunov",
        "file": "mathcomp/field/closed_field.v",
        "date": "2018-11-30T21:00:07Z",
        "comment": "Done."
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/algebra/poly.v",
        "date": "2018-12-03T10:28:58Z",
        "comment": "The `x1 x2` names are not a problem for most of these, as `x` is a conventional variable name for an arbitrary member of a set, ring, or group. Also, beware that the `_inj` may indicate that a lemma has an injectivity _premise_ rather than conclusion, for example `reindex_inj`. \r\n    But, if you want, you can update the `Arguments` of all the injectivity lemmas to document all argument names, scopes, and implicitness. I do note that some of these have the wrong maximal status: implicit arguments before the two arguments to the injectivity property should be maximal, e.g., `cfAut_inj u {gT G} [phi1 phi2]`. Look to the headers to see what the conventional names should be."
      },
      {
        "author": "anton-trunov",
        "file": "mathcomp/algebra/poly.v",
        "date": "2018-12-03T13:31:33Z",
        "comment": "I pushed a new commit trying to address your comment. I hope I didn't introduce any new bugs. Let me try documenting scopes and implicitness as a new PR, because navigating through this  one becomes a bit less manageable due to a large number of comments."
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/algebra/poly.v",
        "date": "2018-12-03T13:43:52Z",
        "comment": "Agreed - there are still a few renames you could do (`irr` indices should be `i1 i2`, etc.), but the conversation will be easier to manage in a followup PR. "
      },
      {
        "author": "anton-trunov",
        "file": "mathcomp/algebra/poly.v",
        "date": "2018-12-03T13:56:12Z",
        "comment": "Thanks! I fixed `Iirr` arguments, btw. I'll squash the commits soon."
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/algebra/poly.v",
        "date": "2018-12-03T14:08:50Z",
        "comment": "Great! If you want to finish everything right now, there aren't that many outstanding renames:\r\n  - `phi1 phi2` for `cfIsom_inj` (class functions)\r\n  - `a1 a2` for `act_inj` (acting group elements)\r\n  - `i1 i2` for `enum_val_inj` (ordinal indices)\r\n  - `x1 x2` for `set1_inj` (the arguments are elements, not sets, as `set1 : forall T, T -> {set T}`"
      },
      {
        "author": "anton-trunov",
        "file": "mathcomp/algebra/poly.v",
        "date": "2018-12-03T14:17:37Z",
        "comment": "Fixed. Sorry about `set1_inj` -- maybe I should concentrate on one part of the library at a time, because switching contexts makes me make silly mistakes like this one."
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/algebra/poly.v",
        "date": "2018-12-04T09:39:52Z",
        "comment": "For the sake of consistency, it's probably best to omit the trailing `_` (corresponding to the `poly p1 = poly p2` premise of the `injective` property), since it doesn't appear in the `Arguments` declaration for other such lemmas."
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/character/integral_char.v",
        "date": "2018-12-04T09:54:59Z",
        "comment": "The extra argument should be `x%g`: `gring_irr_mode i` is a `'CF(G)` (a class function on `G`), which coerces to a `G -> algC` function."
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/character/mxrepresentation.v",
        "date": "2018-12-04T09:56:49Z",
        "comment": "`gT` should be a maximal implicit."
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/character/mxrepresentation.v",
        "date": "2018-12-04T10:04:48Z",
        "comment": "The extra arg of `irr_repr` should be `x%g`. As `irr_repr i` is a representation, which coerces to a `gT -> 'M_(irr_degree i)` function. "
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/character/mxrepresentation.v",
        "date": "2018-12-04T10:05:47Z",
        "comment": "The extra arg of `irr_mode` should be `z%g`, as per the header documentation."
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/fingroup/action.v",
        "date": "2018-12-04T10:12:41Z",
        "comment": "The last two arguments of `act` should be `x%g a%g`: the first is an element of the acted-on type (which is often a `finGroupType`, although not necessarily so), while the second is an element of the acting `finGroupType`."
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/fingroup/action.v",
        "date": "2018-12-04T10:18:02Z",
        "comment": "The on-demand arguments of `act_inj` should be `[x1 x2]`, as they are elements of the acted_on type, rather than the acting group; the `rename` tag is then probably unnecessary.\r\nThe comment on lines 485-86 is outdated and should be deleted; it applied to the `Arguments Scope` command (the dependency of `Arguments` is well-documented and can be controlled with the `rename` tag)."
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/fingroup/action.v",
        "date": "2018-12-04T10:23:56Z",
        "comment": "The last arguments of `gact` should be `to%gact`, as it is an action, not a group element."
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/solvable/frobenius.v",
        "date": "2018-12-04T10:26:56Z",
        "comment": "For consistency, `sT` should also be maximal (no big impact as `Frobenius_action` is never partially applied)."
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/ssreflect/finset.v",
        "date": "2018-12-04T10:32:31Z",
        "comment": "Arguments should be `{T} A%SET`, documenting implicits and the name of `A : {set T}`."
      },
      {
        "author": "anton-trunov",
        "file": "mathcomp/algebra/poly.v",
        "date": "2018-12-04T11:12:48Z",
        "comment": "Thank you for spotting this."
      },
      {
        "author": "anton-trunov",
        "file": "mathcomp/character/integral_char.v",
        "date": "2018-12-04T11:13:16Z",
        "comment": "Unfortunately, for  \r\n```coq\r\nArguments gring_irr_mode {gT G%G} i%R x%group_scope : extra scopes.\r\n```\r\nI get\r\n> Error: Extra notation scopes can be set on anonymous and explicit arguments only.\r\n\r\nIt seems this is going to be fixed in `master` branch of Coq, but this change will break compilation for the current supported Coq versions."
      },
      {
        "author": "anton-trunov",
        "file": "mathcomp/character/mxrepresentation.v",
        "date": "2018-12-04T11:22:02Z",
        "comment": "Fixed. I might be wrong, but shouldn't `burnside_formula`'s `gT` be made maximal implicit as well?\r\n\r\nI found it (and several others) using `Arguments .*\\[.*gT.*]` regexp:\r\n```\r\nmathcomp/fingroup/fingroup.v:674:Arguments mem_repr [gT A].\r\nmathcomp/fingroup/fingroup.v:1862:Arguments mulGidPl [gT G H].\r\nmathcomp/fingroup/fingroup.v:1863:Arguments mulGidPr [gT G H].\r\nmathcomp/character/mxrepresentation.v:4663:Arguments mx_Maschke [F gT G n] rG _ [U].\r\nmathcomp/character/mxrepresentation.v:4669:Arguments socle_exists [F gT G n].\r\nmathcomp/character/mxrepresentation.v:4682:Arguments irr_repr [F gT G%G sG] i%irr _%g : extra scopes.\r\nmathcomp/character/mxrepresentation.v:4683:Arguments irr_mode [F gT G%G sG] i%irr _%g : extra scopes.\r\nmathcomp/solvable/burnside_app.v:29:Arguments burnside_formula [gT].\r\n```"
      },
      {
        "author": "anton-trunov",
        "file": "mathcomp/character/mxrepresentation.v",
        "date": "2018-12-04T11:24:17Z",
        "comment": "Here I get the same error as with `gring_irr_mode`."
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/character/integral_char.v",
        "date": "2018-12-04T11:25:27Z",
        "comment": "Yes you're right - it somehow slipped my mind, even though we just went of this... well I guess it's now somewhere for future reference..."
      },
      {
        "author": "anton-trunov",
        "file": "mathcomp/character/mxrepresentation.v",
        "date": "2018-12-04T11:25:32Z",
        "comment": "Fixed with\r\n```coq\r\nArguments irr_mode [F gT G%G sG] i%irr z%g : rename, extra scopes.\r\n```"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/character/mxrepresentation.v",
        "date": "2018-12-04T11:26:35Z",
        "comment": "Yes it should (though, strictly speaking, `burnside_app` is more an application than a library module)."
      },
      {
        "author": "anton-trunov",
        "file": "mathcomp/fingroup/action.v",
        "date": "2018-12-04T11:26:59Z",
        "comment": "Fixed."
      },
      {
        "author": "anton-trunov",
        "file": "mathcomp/fingroup/action.v",
        "date": "2018-12-04T11:27:42Z",
        "comment": "Fixed."
      },
      {
        "author": "anton-trunov",
        "file": "mathcomp/fingroup/action.v",
        "date": "2018-12-04T11:30:05Z",
        "comment": "Fixed."
      },
      {
        "author": "anton-trunov",
        "file": "mathcomp/solvable/frobenius.v",
        "date": "2018-12-04T11:30:11Z",
        "comment": "Fixed."
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/character/mxrepresentation.v",
        "date": "2018-12-04T11:30:18Z",
        "comment": "Since you didn't get the \"named extra argument\" error, the `extra scopes` tag is most likely redundant."
      },
      {
        "author": "anton-trunov",
        "file": "mathcomp/ssreflect/finset.v",
        "date": "2018-12-04T11:30:46Z",
        "comment": "Fixed."
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/character/mxrepresentation.v",
        "date": "2018-12-04T11:31:01Z",
        "comment": "Sorry again - let's save this for later..."
      },
      {
        "author": "anton-trunov",
        "file": "mathcomp/character/mxrepresentation.v",
        "date": "2018-12-04T11:32:51Z",
        "comment": "Changed to\r\n```coq\r\nArguments burnside_formula {gT}.\r\n```"
      },
      {
        "author": "anton-trunov",
        "file": "mathcomp/character/mxrepresentation.v",
        "date": "2018-12-04T11:35:38Z",
        "comment": "Good catch! Fixed."
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "anton-trunov",
        "committer": "anton-trunov",
        "hash": "8c82657e7692049dde4a4c44a2ea53d0c4fa7cb5",
        "message": "Document parameter names whenever possible\n\nAs suggested by @ggonthier\n[here](https://github.com/math-comp/math-comp/pull/249#pullrequestreview-177938295)\n\n> One of the design ideas for the `Arguments` command was that it would allow\nto centralise the documentation of the application of constants.\nIn that spirit it would be in my opinion better to make as much use of this\nas possible, and to document the parameter names whenever possible,\nespecially that of implicit parameters.\n\nand\n[here](https://github.com/math-comp/math-comp/pull/253#discussion_r237434163):\n\n> As a general rule, defined functional constants should have maximal prenex\nimplicit arguments, as this facilitates their use as arguments to functionals,\nbecause this mimics the way function constants are treated in functional\nprogramming languages with Hindley-Milner type inference. Conversely, lemmas and\ntheorems should have on-demand implicit arguments, possibly interspersed with\nexplicit ones, as it's fairly common for other lemmas to have universally\nquantified premises; also, this makes it easier to specify such arguments with\nthe apply: tactic. This policy may be amended for lemmas that are used as\nfunctional arguments, such as reflection or cancellation lemmas. Unfortunately\nthere is currently no easy way to tell Coq to use different defaults for\ndefinitions and lemmas, so MathComp sticks to the on-demand default, as there\nare significantly more lemmas than definition, and use the Prenex Implicits to\nredress matters in bulk for definitions. However, this is not completely\nsystematic, and is sometimes omitted for constants that are not used as\nfunctional arguments in the library, or inside the sections in which the\ndefinition occur, since such commands need to be repeated after the section is\nclosed. Since Arguments commands should document the intended constant usage as\nbest as possible, they should follow the implicits policy - even in cases such\nas this where the Prenex Implicits had been skipped.",
        "date": "2018-12-04T11:43:20Z"
      }
    ]
  },
  {
    "author": "anton-trunov",
    "number": 252,
    "diff_summary": [
      {
        "file": "mathcomp/algebra/fraction.v",
        "status": "M",
        "additions": 105,
        "deletions": 104
      },
      {
        "file": "mathcomp/algebra/intdiv.v",
        "status": "M",
        "additions": 105,
        "deletions": 104
      },
      {
        "file": "mathcomp/algebra/interval.v",
        "status": "M",
        "additions": 105,
        "deletions": 104
      },
      {
        "file": "mathcomp/algebra/mxalgebra.v",
        "status": "M",
        "additions": 105,
        "deletions": 104
      },
      {
        "file": "mathcomp/algebra/mxpoly.v",
        "status": "M",
        "additions": 105,
        "deletions": 104
      },
      {
        "file": "mathcomp/algebra/polydiv.v",
        "status": "M",
        "additions": 105,
        "deletions": 104
      },
      {
        "file": "mathcomp/algebra/rat.v",
        "status": "M",
        "additions": 105,
        "deletions": 104
      },
      {
        "file": "mathcomp/algebra/ssralg.v",
        "status": "M",
        "additions": 105,
        "deletions": 104
      },
      {
        "file": "mathcomp/algebra/ssrint.v",
        "status": "M",
        "additions": 105,
        "deletions": 104
      },
      {
        "file": "mathcomp/algebra/ssrnum.v",
        "status": "M",
        "additions": 105,
        "deletions": 104
      },
      {
        "file": "mathcomp/algebra/vector.v",
        "status": "M",
        "additions": 105,
        "deletions": 104
      },
      {
        "file": "mathcomp/character/character.v",
        "status": "M",
        "additions": 105,
        "deletions": 104
      },
      {
        "file": "mathcomp/character/classfun.v",
        "status": "M",
        "additions": 105,
        "deletions": 104
      },
      {
        "file": "mathcomp/character/mxabelem.v",
        "status": "M",
        "additions": 105,
        "deletions": 104
      },
      {
        "file": "mathcomp/field/algC.v",
        "status": "M",
        "additions": 105,
        "deletions": 104
      },
      {
        "file": "mathcomp/field/algnum.v",
        "status": "M",
        "additions": 105,
        "deletions": 104
      },
      {
        "file": "mathcomp/field/closed_field.v",
        "status": "M",
        "additions": 105,
        "deletions": 104
      },
      {
        "file": "mathcomp/field/cyclotomic.v",
        "status": "M",
        "additions": 105,
        "deletions": 104
      },
      {
        "file": "mathcomp/fingroup/automorphism.v",
        "status": "M",
        "additions": 105,
        "deletions": 104
      },
      {
        "file": "mathcomp/fingroup/fingroup.v",
        "status": "M",
        "additions": 105,
        "deletions": 104
      },
      {
        "file": "mathcomp/fingroup/morphism.v",
        "status": "M",
        "additions": 105,
        "deletions": 104
      },
      {
        "file": "mathcomp/fingroup/perm.v",
        "status": "M",
        "additions": 105,
        "deletions": 104
      },
      {
        "file": "mathcomp/solvable/abelian.v",
        "status": "M",
        "additions": 105,
        "deletions": 104
      },
      {
        "file": "mathcomp/solvable/center.v",
        "status": "M",
        "additions": 105,
        "deletions": 104
      },
      {
        "file": "mathcomp/ssreflect/bigop.v",
        "status": "M",
        "additions": 105,
        "deletions": 104
      },
      {
        "file": "mathcomp/ssreflect/div.v",
        "status": "M",
        "additions": 105,
        "deletions": 104
      },
      {
        "file": "mathcomp/ssreflect/eqtype.v",
        "status": "M",
        "additions": 105,
        "deletions": 104
      },
      {
        "file": "mathcomp/ssreflect/fingraph.v",
        "status": "M",
        "additions": 105,
        "deletions": 104
      },
      {
        "file": "mathcomp/ssreflect/finset.v",
        "status": "M",
        "additions": 105,
        "deletions": 104
      },
      {
        "file": "mathcomp/ssreflect/fintype.v",
        "status": "M",
        "additions": 105,
        "deletions": 104
      },
      {
        "file": "mathcomp/ssreflect/generic_quotient.v",
        "status": "M",
        "additions": 105,
        "deletions": 104
      },
      {
        "file": "mathcomp/ssreflect/prime.v",
        "status": "M",
        "additions": 105,
        "deletions": 104
      },
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 105,
        "deletions": 104
      },
      {
        "file": "mathcomp/ssreflect/ssrnat.v",
        "status": "M",
        "additions": 105,
        "deletions": 104
      }
    ],
    "state": "merged",
    "open_date": "2018-11-26T13:52:34Z",
    "update_date": "2018-12-11T12:36:32Z",
    "discussion": [
      {
        "author": "anton-trunov",
        "date": "2018-12-11T11:42:07Z",
        "comment": "Rebased. CI is green."
      },
      {
        "author": "CohenCyril",
        "date": "2018-12-11T12:36:47Z",
        "comment": "@anton-trunov Thanks"
      },
      {
        "author": "anton-trunov",
        "date": "2018-12-11T13:47:44Z",
        "comment": "@CohenCyril Thanks for merging :)"
      }
    ],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: build",
        "description": "Issue or PR about the build system/ (Makefile, Dune, ...)"
      }
    ],
    "commits": [
      {
        "author": "anton-trunov",
        "committer": "anton-trunov",
        "hash": "2e6e0001f8215e3c42f2557df42e0d6486035c07",
        "message": "Fix some new warnings emitted by Coq 8.10:\n\n```\nWarning: Adding and removing hints in the core database implicitly is\ndeprecated. Please specify a hint database.\n[implicit-core-hint-db,deprecated]\n```",
        "date": "2018-12-11T11:13:06Z"
      }
    ]
  },
  {
    "author": "gares",
    "number": 250,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 1,
        "deletions": 1
      }
    ],
    "state": "closed",
    "open_date": "2018-11-22T15:58:31Z",
    "update_date": "2018-12-04T09:01:05Z",
    "discussion": [
      {
        "author": "gares",
        "date": "2018-11-22T16:47:08Z",
        "comment": "Unfortunately the fix you propose does not work, since you would keep `s2` but the equation would be `_s_ = ...` not `s2 = ...`. The current script is one line longer, but is way more pedestrian."
      },
      {
        "author": "CohenCyril",
        "date": "2018-11-23T09:25:54Z",
        "comment": "> Unfortunately the fix you propose does not work, since you would keep `s2` but the equation would be `_s_ = ...` not `s2 = ...`. The current script is one line longer, but is way more pedestrian.\r\n\r\nIsn't this another bug? Indeed `elim e : (term) => [...]` should give you an equation between the term you mention and its \"destructs\"..."
      },
      {
        "author": "gares",
        "date": "2018-11-23T15:29:45Z",
        "comment": "Yes, I'll look into that. As I explained to you in person the code is now split into two files, so it may not be trivial to implement correctly. If I manage the right fix could be to just put parentheses in `elim Ds2: (s2)`.\r\n\r\nIf I don't manage, is this PR an acceptable fix? (but for the detail below)"
      },
      {
        "author": "gares",
        "date": "2018-12-03T10:18:50Z",
        "comment": "It looks all green now."
      },
      {
        "author": "gares",
        "date": "2018-12-03T10:40:10Z",
        "comment": "Oh, given that the fix is backward compatible I'd like it to be merged before coq/coq#6705 so that I can remove the overlay file from that PR."
      },
      {
        "author": "ggonthier",
        "date": "2018-12-03T10:56:32Z",
        "comment": "Could one of you clarify what the fix is about? The code that is being changed relies only on the standard behaviour of equation generation for `elim:`, which is to generate an abbreviation for the principal term of the elimination, reusing the name of that term if it has just been cleared by the `:` pseudo-tactical (and defaulting to a generated hidden name if that was not the case).\r\n  I don't recall an exception for non-dependent `elim`, though there might have been one to accommodate `elim`s that behave more like `case`, specifically those that use a view. At any rate, this would not apply here, and the rationale is clearly wrong, because `s2` _is cleared_ here, before being reused.\r\n  If the idea is to align the specific equation-generation behaviour of `elim` to that of `case`, then I would like to object. While it's not used very much in the final library scripts, it is a very useful _debugging_ tool and has been used extensively in producing the scripts in the first place. It's also more useful when doing small-scale reflection style program correctness proofs; there aren't many in MathComp per se, but I recall there are more in the 4-color proof."
      },
      {
        "author": "ggonthier",
        "date": "2018-12-03T11:38:34Z",
        "comment": "  Partly answering myself now (a sure sign of senility) I do recall one feature of `elim` equation generation that may have sparked the confusion: if the cleared eliminated name has somehow been reused before the equation is introduced, then the introduction is done with a generated name. The rationale is that because this is primarily intended as a debugging feature, it should avoid introducing failures of its own.\r\n  I still don't see how the new intro patterns should prevent this from working - it's exactly as if the user had introduced the name again at the point where the equation is introduced."
      },
      {
        "author": "gares",
        "date": "2018-12-03T17:18:02Z",
        "comment": "What I'd like to get rid of is the \"if\" in the code doing \"if the name is not used later on in the intro pattern then reuse the name (when it is a name and not a general term) else pick a fresh name\" since the \"if\" is not very meaningful now that the intro pattern can mention a \"prefix/suffix\" of the actual name.\r\n\r\nI see 3 options:\r\n- never reuse the name: always pick a fresh id for the LHS. This is obviously the simplest, and the one currently implemented in the PR\r\n- always reuse the name (when it is a name, and not a general term): could break scripts and force naming such as `s2'` as in the current proof script.\r\n- reuse the name (when it is a name, and not a general term) if the user did put `()` around it (requesting it not to be cleared). This is what Cyril suggested.\r\n\r\nI'm afraid all options could break scripts. I've no strong opinions.\r\n\r\nI think the choice is about what status to give to elim+equation. If it is a debugging only thing, then I think option 1 is best. If it is a legit proof step, options 2 and 3 are fine but we should also fix the manual (that presents it as a debugging feature)."
      },
      {
        "author": "ggonthier",
        "date": "2018-12-03T17:51:56Z",
        "comment": "As I see it there is no \"used later in the intro pattern\" behaviour that is required. The equation is introduced after the first intro pattern - so the most important question is whether the name has been reused at that very point, not whether it is being reused at some later point, in essence acting as if, after the first intro pattern, one pushes `forall _x_, _x_ = t -> ` on the goal (where `t` is the eliminated term), then insert `x Dx` in the intro pattern, where `x` is the (cleared) original name of the elimination target, and `Dx` the name of the equation. Should this fail because `x` was reused in the meantime, then `_x_` is used instead to avoid a secondary failure.\r\n   It seems to me this should be fairly easy to implement. Yes, it does allow for different behaviour in different branches of the elimination (if the fallback behaviour is only triggered in some branches), as well as some secondary failures (if the elimination name is reused later in the pattern), but I feel these are acceptable limitations.\r\n   I can even imagine ways of avoiding these without static prediction of the names used in an intro pattern, such as creating the equation with a generated name, then renaming it at the end of the intro pattern if no conflict has appeared in any of the branches, similar to how delayed clears are handled. I don't feel it's necessary to go there, however, as the behaviour I outlined above does cover all intended use cases well enough."
      },
      {
        "author": "gares",
        "date": "2018-12-03T21:47:52Z",
        "comment": "Oh, I see. The implementation you suggest is clearly simpler than the previous one and requires no lookahead. Thanks."
      },
      {
        "author": "gares",
        "date": "2018-12-04T09:01:05Z",
        "comment": "coq/coq#6705 updated, there is no need for this anymore"
      }
    ],
    "review_discussion": [
      {
        "author": "gares",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2018-11-22T16:00:40Z",
        "comment": "note how the more natural name `s2` was avoided (using `s2'`) in order to have `elim` reuse `s2` for the LHS of `Ds2`.\r\nThe LHS is inaccessible (eg fresh) after coq/coq#6705"
      },
      {
        "author": "gares",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2018-11-22T16:07:17Z",
        "comment": "FTR: I would have loved to write `first 2 by ...`"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2018-11-22T16:39:17Z",
        "comment": "After discussing with @gares, the fix to still access `s2` is to write `(s2)` instead."
      },
      {
        "author": "gares",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2018-11-23T15:30:54Z",
        "comment": "the `{}/IHs` syntax is new in 8.9, so I should revert this change or it fails on older versions"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2018-12-03T11:07:40Z",
        "comment": "If you're going to remove the `elim`  equation idiom (which I'm opposed to, see my general comment), then you should at least propose to replace it with something that is similar in functionality, and not imply that users need to duplicate cases in their scripts. Here the solution could be:\r\n ```\r\npose s := s2; elim: s2 s1 => [|y s2 IHs] [|x s1] //= in s *; try by exists s.\r\n```"
      },
      {
        "author": "gares",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2018-12-03T17:23:16Z",
        "comment": "thanks for nicer script!"
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "gares",
        "committer": "gares",
        "hash": "cd21cb1a502c8560aff816bcf8235059af4ee39d",
        "message": "do not rely on `elim E: x => i` not clearing `x` if `x` not used in `i`",
        "date": "2018-12-03T17:20:10Z"
      }
    ]
  },
  {
    "author": "anton-trunov",
    "number": 249,
    "diff_summary": [
      {
        "file": "mathcomp/algebra/intdiv.v",
        "status": "M",
        "additions": 481,
        "deletions": 536
      },
      {
        "file": "mathcomp/algebra/interval.v",
        "status": "M",
        "additions": 481,
        "deletions": 536
      },
      {
        "file": "mathcomp/algebra/matrix.v",
        "status": "M",
        "additions": 481,
        "deletions": 536
      },
      {
        "file": "mathcomp/algebra/mxalgebra.v",
        "status": "M",
        "additions": 481,
        "deletions": 536
      },
      {
        "file": "mathcomp/algebra/mxpoly.v",
        "status": "M",
        "additions": 481,
        "deletions": 536
      },
      {
        "file": "mathcomp/algebra/poly.v",
        "status": "M",
        "additions": 481,
        "deletions": 536
      },
      {
        "file": "mathcomp/algebra/ssralg.v",
        "status": "M",
        "additions": 481,
        "deletions": 536
      },
      {
        "file": "mathcomp/algebra/ssrnum.v",
        "status": "M",
        "additions": 481,
        "deletions": 536
      },
      {
        "file": "mathcomp/algebra/vector.v",
        "status": "M",
        "additions": 481,
        "deletions": 536
      },
      {
        "file": "mathcomp/character/character.v",
        "status": "M",
        "additions": 481,
        "deletions": 536
      },
      {
        "file": "mathcomp/character/classfun.v",
        "status": "M",
        "additions": 481,
        "deletions": 536
      },
      {
        "file": "mathcomp/character/mxrepresentation.v",
        "status": "M",
        "additions": 481,
        "deletions": 536
      },
      {
        "file": "mathcomp/field/falgebra.v",
        "status": "M",
        "additions": 481,
        "deletions": 536
      },
      {
        "file": "mathcomp/field/fieldext.v",
        "status": "M",
        "additions": 481,
        "deletions": 536
      },
      {
        "file": "mathcomp/field/galois.v",
        "status": "M",
        "additions": 481,
        "deletions": 536
      },
      {
        "file": "mathcomp/field/separable.v",
        "status": "M",
        "additions": 481,
        "deletions": 536
      },
      {
        "file": "mathcomp/fingroup/action.v",
        "status": "M",
        "additions": 481,
        "deletions": 536
      },
      {
        "file": "mathcomp/fingroup/automorphism.v",
        "status": "M",
        "additions": 481,
        "deletions": 536
      },
      {
        "file": "mathcomp/fingroup/fingroup.v",
        "status": "M",
        "additions": 481,
        "deletions": 536
      },
      {
        "file": "mathcomp/fingroup/gproduct.v",
        "status": "M",
        "additions": 481,
        "deletions": 536
      },
      {
        "file": "mathcomp/fingroup/morphism.v",
        "status": "M",
        "additions": 481,
        "deletions": 536
      },
      {
        "file": "mathcomp/fingroup/perm.v",
        "status": "M",
        "additions": 481,
        "deletions": 536
      },
      {
        "file": "mathcomp/fingroup/quotient.v",
        "status": "M",
        "additions": 481,
        "deletions": 536
      },
      {
        "file": "mathcomp/solvable/abelian.v",
        "status": "M",
        "additions": 481,
        "deletions": 536
      },
      {
        "file": "mathcomp/solvable/center.v",
        "status": "M",
        "additions": 481,
        "deletions": 536
      },
      {
        "file": "mathcomp/solvable/commutator.v",
        "status": "M",
        "additions": 481,
        "deletions": 536
      },
      {
        "file": "mathcomp/solvable/cyclic.v",
        "status": "M",
        "additions": 481,
        "deletions": 536
      },
      {
        "file": "mathcomp/solvable/frobenius.v",
        "status": "M",
        "additions": 481,
        "deletions": 536
      },
      {
        "file": "mathcomp/solvable/gseries.v",
        "status": "M",
        "additions": 481,
        "deletions": 536
      },
      {
        "file": "mathcomp/solvable/maximal.v",
        "status": "M",
        "additions": 481,
        "deletions": 536
      },
      {
        "file": "mathcomp/solvable/nilpotent.v",
        "status": "M",
        "additions": 481,
        "deletions": 536
      },
      {
        "file": "mathcomp/solvable/pgroup.v",
        "status": "M",
        "additions": 481,
        "deletions": 536
      },
      {
        "file": "mathcomp/solvable/sylow.v",
        "status": "M",
        "additions": 481,
        "deletions": 536
      },
      {
        "file": "mathcomp/ssreflect/choice.v",
        "status": "M",
        "additions": 481,
        "deletions": 536
      },
      {
        "file": "mathcomp/ssreflect/div.v",
        "status": "M",
        "additions": 481,
        "deletions": 536
      },
      {
        "file": "mathcomp/ssreflect/eqtype.v",
        "status": "M",
        "additions": 481,
        "deletions": 536
      },
      {
        "file": "mathcomp/ssreflect/finfun.v",
        "status": "M",
        "additions": 481,
        "deletions": 536
      },
      {
        "file": "mathcomp/ssreflect/fingraph.v",
        "status": "M",
        "additions": 481,
        "deletions": 536
      },
      {
        "file": "mathcomp/ssreflect/finset.v",
        "status": "M",
        "additions": 481,
        "deletions": 536
      },
      {
        "file": "mathcomp/ssreflect/fintype.v",
        "status": "M",
        "additions": 481,
        "deletions": 536
      },
      {
        "file": "mathcomp/ssreflect/generic_quotient.v",
        "status": "M",
        "additions": 481,
        "deletions": 536
      },
      {
        "file": "mathcomp/ssreflect/path.v",
        "status": "M",
        "additions": 481,
        "deletions": 536
      },
      {
        "file": "mathcomp/ssreflect/prime.v",
        "status": "M",
        "additions": 481,
        "deletions": 536
      },
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 481,
        "deletions": 536
      },
      {
        "file": "mathcomp/ssreflect/ssrnat.v",
        "status": "M",
        "additions": 481,
        "deletions": 536
      },
      {
        "file": "mathcomp/ssreflect/tuple.v",
        "status": "M",
        "additions": 481,
        "deletions": 536
      }
    ],
    "state": "merged",
    "open_date": "2018-11-21T14:41:01Z",
    "update_date": "2018-11-24T16:58:36Z",
    "discussion": [
      {
        "author": "anton-trunov",
        "date": "2018-11-22T09:36:18Z",
        "comment": "@CohenCyril Thank you, it's my pleasure."
      },
      {
        "author": "anton-trunov",
        "date": "2018-11-23T14:15:09Z",
        "comment": "@ggonthier Sure, I'll try to address this in a separate PR.\r\n\r\nJust to be on the safe side, could you give an example of what you'd like to have?"
      },
      {
        "author": "anton-trunov",
        "date": "2018-11-24T16:59:59Z",
        "comment": "@CohenCyril Thanks!"
      }
    ],
    "review_discussion": [
      {
        "author": "ggonthier",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2018-11-23T14:36:17Z",
        "comment": "Well for example this should be `Arguments GLval {n%N R ph} u%g.` to document the name of the arguments (one might put `_` instead of `ph` here, however, since it's not expected one would pass a phantom argument explicitly)."
      },
      {
        "author": "anton-trunov",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2018-11-24T06:49:58Z",
        "comment": "Thank you! This looks nicer, indeed."
      },
      {
        "author": "anton-trunov",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2018-11-24T18:38:27Z",
        "comment": "One more question, if you don't mind.\r\nWhat do we do with the following declaration?\r\n```\r\nPrenex Implicits pred1 pred2 pred3 pred4 predU1 predC1 predD1.\r\n```\r\n\r\nDo we leave it as it is or convert to `Arguments`? "
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2018-11-26T08:38:35Z",
        "comment": "My preference would be to leave it. The `Prenex Implicits` command is a natural way of stating that a function constant should behave as in functional programming languages - something that ought to be supported by a global option or a pragma (once Coq gets these); `Context` declarations wouldn't quite work here as they would also affect lemmas. It seems rather wasteful to add one extra line for each function definition for this."
      },
      {
        "author": "anton-trunov",
        "file": "mathcomp/algebra/matrix.v",
        "date": "2018-11-26T09:01:07Z",
        "comment": "Great! Thank you. I'll try to address your comments this week."
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "anton-trunov",
        "committer": "anton-trunov",
        "hash": "f049e51c39077a025907ea87c08178dad1841801",
        "message": "Merge Arguments and Prenex Implicits\n\nSee the discussion here:\nhttps://github.com/math-comp/math-comp/pull/242#discussion_r233778114",
        "date": "2018-11-21T15:23:02Z"
      }
    ]
  },
  {
    "author": "anton-trunov",
    "number": 248,
    "diff_summary": [
      {
        "file": "ChangeLog",
        "status": "M",
        "additions": 924,
        "deletions": 919
      },
      {
        "file": "mathcomp/algebra/countalg.v",
        "status": "M",
        "additions": 924,
        "deletions": 919
      },
      {
        "file": "mathcomp/algebra/finalg.v",
        "status": "M",
        "additions": 924,
        "deletions": 919
      },
      {
        "file": "mathcomp/algebra/ring_quotient.v",
        "status": "M",
        "additions": 924,
        "deletions": 919
      },
      {
        "file": "mathcomp/algebra/ssralg.v",
        "status": "M",
        "additions": 924,
        "deletions": 919
      },
      {
        "file": "mathcomp/algebra/ssrnum.v",
        "status": "M",
        "additions": 924,
        "deletions": 919
      },
      {
        "file": "mathcomp/algebra/vector.v",
        "status": "M",
        "additions": 924,
        "deletions": 919
      },
      {
        "file": "mathcomp/field/falgebra.v",
        "status": "M",
        "additions": 924,
        "deletions": 919
      },
      {
        "file": "mathcomp/field/fieldext.v",
        "status": "M",
        "additions": 924,
        "deletions": 919
      },
      {
        "file": "mathcomp/field/finfield.v",
        "status": "M",
        "additions": 924,
        "deletions": 919
      },
      {
        "file": "mathcomp/field/galois.v",
        "status": "M",
        "additions": 924,
        "deletions": 919
      },
      {
        "file": "mathcomp/fingroup/fingroup.v",
        "status": "M",
        "additions": 924,
        "deletions": 919
      },
      {
        "file": "mathcomp/ssreflect/choice.v",
        "status": "M",
        "additions": 924,
        "deletions": 919
      },
      {
        "file": "mathcomp/ssreflect/eqtype.v",
        "status": "M",
        "additions": 924,
        "deletions": 919
      },
      {
        "file": "mathcomp/ssreflect/fintype.v",
        "status": "M",
        "additions": 924,
        "deletions": 919
      },
      {
        "file": "mathcomp/ssreflect/generic_quotient.v",
        "status": "M",
        "additions": 924,
        "deletions": 919
      }
    ],
    "state": "merged",
    "open_date": "2018-11-20T15:12:16Z",
    "update_date": "2018-12-10T17:31:47Z",
    "discussion": [
      {
        "author": "anton-trunov",
        "date": "2018-11-22T09:36:35Z",
        "comment": "@CohenCyril Thank you!"
      },
      {
        "author": "thery",
        "date": "2018-11-22T14:54:41Z",
        "comment": "@anton-trunov is this speed-up for the compilation of the library or for Feit-Thompson?"
      },
      {
        "author": "ejgallego",
        "date": "2018-11-22T15:02:42Z",
        "comment": "I am not sure if this is related, just in case: https://github.com/coq/coq/pull/396"
      },
      {
        "author": "gares",
        "date": "2018-11-22T16:20:32Z",
        "comment": "CC @maximedenes @ppedrot \r\n\r\nIIRC these copies of the first argument (replicated at the end of the record) were there to make the term comparison (of the kernel) fail early (since it goes right-to-left).\r\n\r\nMaybe it is never the case that the records touched by this PR needs to be compared as different by the kernel. Is there a way we can check this assertion? Is there a way to keep the parameter still there but ignore it at term comparison time (to be sure this is the place were we gain speed)?"
      },
      {
        "author": "anton-trunov",
        "date": "2018-11-22T17:20:11Z",
        "comment": "> @anton-trunov is this speed-up for the compilation of the library or for Feit-Thompson?\r\n\r\n@thery This is speedup for the compilation of all the packages in *this* repository, I didn't test `odd-order` repository.\r\nI also tested the speedups for each individual package, please see the updated initial message."
      },
      {
        "author": "ppedrot",
        "date": "2018-11-22T18:25:08Z",
        "comment": "The speedup profile looks similar to what was gained with coq/coq#8824, which was dropping useless conversion in match branches. Your patch is probably reducing the number of such conversions, hence the speedup. I'd be curious to see how this PR fares atop of a recent master containing the aforementioned tweak."
      },
      {
        "author": "anton-trunov",
        "date": "2018-11-22T22:34:19Z",
        "comment": ">  I'd be curious to see how this PR fares atop of a recent master containing the aforementioned tweak.\r\n\r\n@ppedrot I updated the initial message (see updated table 1 and a new table 3).\r\n\r\nAmazing job the Coq devs did! Congrats!"
      },
      {
        "author": "gares",
        "date": "2018-11-23T07:57:35Z",
        "comment": "So this pr is a 10% speedup on top of the 100% speedup given by the coq patch recently merged, on the field component.\r\n\r\nI believe that it would be relevant to apply this pr, even if it was gaining nothing on the performance side, since it cleans up the structures. 10% is the cherry on top."
      },
      {
        "author": "CohenCyril",
        "date": "2018-11-23T09:31:37Z",
        "comment": "So before merging, I would like to\r\n1. have a benchmark on odd-order too, and\r\n2. have a regression test on failure cases for kernel comparison that used to be too slow... @ggonthier, @gares did you keep such examples somewhere?"
      },
      {
        "author": "anton-trunov",
        "date": "2018-11-23T11:39:40Z",
        "comment": "> have a benchmark on odd-order too\r\n\r\nIt turns out `odd-order` needs a 4-character fix, see [here](https://github.com/anton-trunov/odd-order/commit/10f523ff7d8ed1f52184dd61a56f35410ed18977)) before it can be compiled with this PR.\r\n\r\nWith that fix, I did a benchmark on the aforementioned laptop with Coq 8.10+alpha (coq/coq@8fb01564fba587142c2471708ff18219f1c64903).\r\n- Old: math-comp/odd-order@10f523ff7d8ed1f52184dd61a56f35410ed18977, mathcomp (967088a6f87405a93ce21971392c58996df8c99f)\r\n`make  906,10s user 13,57s system 99% cpu 15:23,02 total`\r\n\r\n- New: math-comp/odd-order@10f523ff7d8ed1f52184dd61a56f35410ed18977, mathcomp (27e3e35be9a6805e126df5b44a9bb5db9a561f5a)\r\n`make  889,57s user 13,55s system 99% cpu 15:06,49 total`\r\n\r\nResulting in 1.86% speedup (probably just noise).\r\n\r\nI hope this helps."
      },
      {
        "author": "ggonthier",
        "date": "2018-11-23T15:27:20Z",
        "comment": "As @gares pointed out, the sentinel repeated type is meant as a safeguard against potential divergence of the kernel comparison heuristic, when trying to compare _different_ structures based on _different_ types. The reason is that the heuristic compares right-to-left, so it would compare the classes before the carrier sort, and the classes of sorts that differ only in parameters (say, arrays of different sizes) will have deeply nested near-identical definitions, on which the heuristic performs very poorly. An example of this occurs in `field ext` where classes with the same sort but different parameters (the scalar field) are compared.\r\n  That said, as this kind of comparison has to fail, it is unlikely to occur during kernel checks, which always succeed. Failing comparisons are more common during matching in tactic interpretation, but that uses a left-to-right order, although it used to call the kernel on ground terms. If it no longer does so this extra precaution would indeed no longer be needed.\r\n  Your experiment seems to show this is the case, in which case this PR would be a welcome simplification.\r\n   That said, the performance figures are surprising and should concern the Coq developers. Since the redundant type also occurs earlier in the structure record, and is likely repeated many times inside the class sub record, it seems unlikely that removing it would result in any measurable performance gain on successful comparisons. It's perhaps the case that, contrary to my expectations, class comparisons can fail more efficiently than that of the corresponding sorts, but it seems more likely that some side-effect of the call-by-need evaluation is playing havoc with the successful comparisons, or else that the universe level assignment is acting out.\r\n  It should be worth checking out what's going on in the files in `field` and `character` where there are observable changes.\r\n  "
      },
      {
        "author": "anton-trunov",
        "date": "2018-12-04T13:32:30Z",
        "comment": "Rebased to fix a conflict with 03ad994dfee48e1a7b2b7091c45dfdcf4402f826"
      },
      {
        "author": "CohenCyril",
        "date": "2018-12-06T10:19:42Z",
        "comment": "Please also add a ChangeLog entry"
      },
      {
        "author": "anton-trunov",
        "date": "2018-12-06T17:02:06Z",
        "comment": "> Please also add a ChangeLog entry\r\n\r\n@CohenCyril Updated. Please let me know if you'd like to expand the entry."
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "anton-trunov",
        "committer": "anton-trunov",
        "hash": "79aa2b1ab5b233f103cd3e402094cd93d9028866",
        "message": "Remove `_ : Type` from packed classes\n\nThis increases performance 10% - 15% for Coq v8.6.1 - v8.9.dev.\nTested on a Debain-based 16-core build server and\na Macbook Pro laptop with 2,3 GHz Intel Core i5.\n\n|                            | Compilation time, old         | Compilation | Speedup |\n|                            | (mathcomp commit 967088a6f87) | time, new   |         |\n| Coq 8.6.1                  | 10min 33s                     | 9min 10s    | 15%     |\n| Coq 8.7.2                  | 10min 12s                     | 8min 50s    | 15%     |\n| Coq 8.8.2                  | 9min 39s                      | 8min 32s    | 13%     |\n| Coq 8.9.dev(05d827c800544) | 9min 12s                      | 8min 16s    | 11%     |\n|                            |                               |             |         |\n\nIt seems Coq at some point fixed the problem `_ : Type` was\nsupposed to solve.",
        "date": "2018-12-04T13:25:53Z"
      },
      {
        "author": "anton-trunov",
        "committer": "anton-trunov",
        "hash": "efbcb84f3ddfea53b7b914284d8fa80fdb7a56fd",
        "message": "Remove pack constructors",
        "date": "2018-12-04T13:25:53Z"
      },
      {
        "author": "anton-trunov",
        "committer": "anton-trunov",
        "hash": "7ae08ee81c6859fb7ee4043207d87572a4bc3bc3",
        "message": "Update ChangeLog",
        "date": "2018-12-06T16:58:41Z"
      }
    ]
  },
  {
    "author": "anton-trunov",
    "number": 246,
    "diff_summary": [
      {
        "file": "CONTRIBUTING.md",
        "status": "M",
        "additions": 17,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2018-11-15T11:16:41Z",
    "update_date": "2018-11-15T11:59:35Z",
    "discussion": [
      {
        "author": "anton-trunov",
        "date": "2018-11-15T12:00:45Z",
        "comment": "@CohenCyril Thanks for merging!"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "anton-trunov",
        "committer": "anton-trunov",
        "hash": "47f6154a7647f44411c41deb6b42642d281a9296",
        "message": "Add a section on documenting code\n\nBased on the discussion here:\nhttps://github.com/math-comp/math-comp/pull/242",
        "date": "2018-11-15T10:27:52Z"
      }
    ]
  },
  {
    "author": "anton-trunov",
    "number": 242,
    "diff_summary": [
      {
        "file": "mathcomp/algebra/vector.v",
        "status": "M",
        "additions": 41,
        "deletions": 22
      },
      {
        "file": "mathcomp/ssreflect/eqtype.v",
        "status": "M",
        "additions": 41,
        "deletions": 22
      },
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 41,
        "deletions": 22
      },
      {
        "file": "mathcomp/ssreflect/ssrnat.v",
        "status": "M",
        "additions": 41,
        "deletions": 22
      },
      {
        "file": "mathcomp/ssreflect/tuple.v",
        "status": "M",
        "additions": 41,
        "deletions": 22
      }
    ],
    "state": "merged",
    "open_date": "2018-11-12T08:45:39Z",
    "update_date": "2018-11-19T11:07:19Z",
    "discussion": [
      {
        "author": "amahboubi",
        "date": "2018-11-12T08:53:40Z",
        "comment": "Hi @anton-trunov, thanks for this PR. Yet before merging, I would like to wait for @ggonthier's feedback, since I believe he was the author of these `Canonical` declarations."
      },
      {
        "author": "anton-trunov",
        "date": "2018-11-12T08:55:06Z",
        "comment": "@amahboubi Sure thing! I would also love to learn from his input! Thanks."
      },
      {
        "author": "ggonthier",
        "date": "2018-11-12T12:00:40Z",
        "comment": "Making a mixin `Canonical` does serve a purpose: it lets type inference extrapolate the mixin and hence the corresponding packed class (when the mixing is also a class) from one of its value projections, just as one does for value projections of packed classes, such as `topred` in `predType`, or `val` and `Sub` in `subType`.\r\n  In the MathComp library this is only really implemented for `eqType`. The idea is that this makes it possible to rewrite right-to-left with lemma `eqE`, to fold back recursive comparisons after using partial evaluation to simplify a comparison on concrete instances.\r\n   The generic way to do this would be`rewrite eqE /= -!eqE`.\r\nThe reason one may need to fold back is that we need to give the full computational rule for recursive datatypes such as `nat` or `seq` _before_ we can declare a mixin, and thus it is not possible to use eq_op to do the recursive comparison.\r\n  This feature isn't used in the MathComp library, which favours using more precise specialisations of `-eqE`, such as `eqbE` or `eqseqE`, or even helpful corollaries like `eqSS` or `eqseq_cons`.\r\n   Despite this I still believe having a generic reversible `eqE` is useful, so I'd rather we let the `Canonical` declarations stand - perhaps while documenting it above `eqE` in the text, with a pointer in the `eqtype` file header.\r\n   We should point out that such `Canonical` declarations remove the need for specific inverses to `eqE` for new recursive , but can only be used for manifest mixing with a bespoke comparison function, and so is incompatible with `PcanEqMixin` and the like - this is why the `tree_eqMixin` for `GenTree.tree` in library `choice` is not declared `Canonical`."
      },
      {
        "author": "ggonthier",
        "date": "2018-11-12T12:11:28Z",
        "comment": "There is nevertheless one instance, in library `tuple`, of a `Canonical` `finMixin`. This could, in principle, make it possible to similarly fold the `Finite.enum` of a finite `tuple` type... but in practice will not work because the `mixin_enum` projector has been berried under an opaque alias, to avoid some nasty performance issues during type inference. Thus in that case you _have_ spotted an outdated `Canonical` declaration that has slipped by, and should indeed be changed to `Definition`.\r\n   Well done!"
      },
      {
        "author": "anton-trunov",
        "date": "2018-11-12T17:32:09Z",
        "comment": "@ggonthier Thank you very much for the explanation! Things are much clearer now.\r\n\r\n**(1)** I will restore the `Canonical` declarations and add some documenting comments.\r\n\r\n**(2)** If I understand correctly, declaring the mixins of *non-recursive* types as `Canonical` is still desirable if one wants to be less precise with rewriting context, e.g.`do ! [rewrite !eqE /= -!eqE].`\r\nBut this will break down for non-symmetrical equality operators such as `opt_eq` for `option` type, e.g.\r\n```coq\r\nLemma foo (b : bool) (o : option nat) :\r\n  (Some 42 == o) && (o == Some 42) && (b == false) && (false == b).\r\nProof.\r\ndo !rewrite !eqE /= -!eqE.\r\n\r\n(* the goal at this point is\r\n  oapp (fun n : nat => match n with\r\n                       | 42 => true\r\n                       | _ => false\r\n                       end) false o && (o == Some 42) && (b == false) && (false == b)\r\n*)\r\nAbort.\r\n```\r\nShould I try and fix this behavior?\r\n\r\n**(3)** It seems that `lfun_eqMixin` should *not* be declared as `Canonical`, as\r\n```coq\r\nCanonical lfun_eqMixin := Eval hnf in [eqMixin of 'Hom(aT, rT) by <:].\r\n```\r\nproduces\r\n```\r\nWarning: Projection value has no head constant: fun x y : 'Hom(aT, rT) => f2mx x == f2mx y in canonical instance lfun_eqMixin of Equality.op, ignoring\r\nit. [projection-no-head-constant,typechecker]\r\n```\r\n\r\n"
      },
      {
        "author": "ggonthier",
        "date": "2018-11-12T17:42:54Z",
        "comment": "Well observed, again!\r\n  Quick answers for (2) and (3): The fix for (2) would be to use an `Arguments` declaration to require both arguments be constructors for simplification to take place. That feature did not yet exist when the math comp library was written. Do note however that you suggested command is likely to diverge, as, if I recall correctly, `do ![tactic]` does not check for progress (perhaps it should?).\r\n   Finally, you are correct regarding `lfun` - well spotted, again."
      },
      {
        "author": "anton-trunov",
        "date": "2018-11-13T09:13:28Z",
        "comment": "> The fix for (2) would be to use an `Arguments` declaration to require both arguments be constructors for simplification to take place. \r\n\r\nThank you, `Arguments opt_eq [T] !_ !_.` seems to work fine.\r\n\r\n> if I recall correctly, `do ![tactic]` does not check for progress (perhaps it should?)\r\n\r\nMy experiments seem to show `do` does check for progress, but I could not find this in the docs. The manual says \"`!` the step tactic is repeated as many times as possible, and done at least once.\" Perhaps, @gares could clarify this a bit. If `do` really checks for progress, we could fix this behavior in Coq's test suite and add it to the manual."
      },
      {
        "author": "anton-trunov",
        "date": "2018-11-13T09:48:05Z",
        "comment": "I just pushed an updated version with more documenting commentaries. I'd be happy to add any improvements or clarifications!"
      },
      {
        "author": "anton-trunov",
        "date": "2018-11-13T17:44:49Z",
        "comment": "@ggonthier I tried to address some of your suggestions in two separate commits (I'll squash all three of the new commits afterwards). I hope I didn't miss any explicit comparison functions."
      },
      {
        "author": "anton-trunov",
        "date": "2018-11-14T17:34:34Z",
        "comment": "@ggonthier I squashed the commits, removed the redundant `eqE` description from the header and incorporated your suggestion for `pair_eq` as a `rel (T1 * T2)`."
      }
    ],
    "review_discussion": [
      {
        "author": "ggonthier",
        "file": "mathcomp/ssreflect/eqtype.v",
        "date": "2018-11-13T14:03:25Z",
        "comment": "This is not quite the right information to put in the header: the key point to make is that `EqMixin` instances should be declared `Canonical`, and this info should appear in or just after the entry for EqMixin ... which is missing in the documentation. Indeed the documentation for factories for eqType is seriously incomplete - it should have entries for all the major definitions and notation, as in `ssralg` or `fintype` (`choice` is also lacking, though less so). This needs to be addressed beforehand, ideally in a separate commit.\r\nI'll do this first so you can proceed. \r\n"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/ssreflect/tuple.v",
        "date": "2018-11-13T14:15:39Z",
        "comment": "See above remark concerning the multiline comment style (and punctuation)."
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/ssreflect/eqtype.v",
        "date": "2018-11-13T14:16:04Z",
        "comment": "All other explicit comparison functions will have a similar issue, so you should run through them and add similar annotations throughout.\r\nAs a rule, the type parameter(s) of a polymorphic function should be maximally inserted, as this makes it possible to use said function as one would in ML or Haskell, so you should have `{T}` instead of `[T]`."
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/ssreflect/eqtype.v",
        "date": "2018-11-13T14:16:09Z",
        "comment": "The MathComp library uses exclusively block comments, with 80-character lines enclosed in the `(*` / `*)` delimiters. Multiline comments are strictly limited to out-commented code. Please conform to this stye.\r\nAlso, that last sentence is missing its final stop."
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/ssreflect/eqtype.v",
        "date": "2018-11-13T14:50:00Z",
        "comment": "Actually, while editing the header I realised there _was_ a comment to that effect in the entry for eqType. I'll just insert the forward pointer to eqE so you won't have to do anything else."
      },
      {
        "author": "anton-trunov",
        "file": "mathcomp/ssreflect/eqtype.v",
        "date": "2018-11-13T17:40:54Z",
        "comment": "The case of `pair_eq` is a bit tricky if we'd like to be able to fold back for the products.\r\n\r\nIf we did, then `pair_eq`'s definition would be tweaked a bit to allow for an annotation like this:\r\n```coq\r\nArguments pair_eq {T1 T2} !_ !_ /.\r\n```\r\nThen `prod_eqMixin` could be made canonical.\r\n\r\nI tried this option and only two lines (in mathcomp) needed simple fixes. I'll push the tentative changes, but I'm fine with reverting those as this breaks some things for the users relying on that previous simplifying behavior."
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/ssreflect/eqtype.v",
        "date": "2018-11-14T16:14:50Z",
        "comment": "I actually did add a forward reference to `eqE` along with more precise advice on declaring `Canonical` equality mixins in the updated documentation in the master branch. This makes this extra comment somewhat redundant, and too detailed for the header section, where, as a rule, we try to document types, definitions and notations precisely, but only describe the lemmas and theorems in general terms, because we don't want to discourage users from actually reading the documentation. There are some exceptions for some particularly important theorems, but `eqE` isn't one of those."
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/ssreflect/eqtype.v",
        "date": "2018-11-14T16:45:43Z",
        "comment": "The intent in defining `pair_eq` as a `simpl_rel`, which always simplifies when applied, is clearly to make such unfolding automatic and irreversible. This is reasonable because this yields in a readable expression. Even if you've only found one instance of this being used in the math comp library itself, I don't think it's a good idea to change this behaviour arbitrarily; I suspect there may be more instances in the Odd Order theorem proof, for one. So I would advise against that particular change.\r\n  However, in this case the `Canonical` declaration _is_ an error, because the head constant of the comparison is the generic `rel_of_simpl_rel` coercion, rather than `pair_eq` - so you are correct in using `Definition` here.\r\n   Alternatively, one could declare `pair_eq` as a `rel (T1 * T2)` and use the `/` annotation of `Arguments` to implement the unfolding behaviour; then the head constant would be `pair_eq`, and the `Canonical` declaration would be proper (though only marginally useful).\r\n  "
      },
      {
        "author": "anton-trunov",
        "file": "mathcomp/ssreflect/eqtype.v",
        "date": "2018-11-14T17:28:08Z",
        "comment": "I agree that with `Arguments pair_eq {T1 T2} _ _ /.`, declaring `prod_eqMixin` as canonical is not particularly useful. `Arguments pair_eq {T1 T2} !_ !_ /.` seems to be a bit better in this respect (although, I agree that it's too much of a change)."
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/ssreflect/eqtype.v",
        "date": "2018-11-15T09:58:55Z",
        "comment": "While we're at it, perhaps this you should merge the `Arguments` and `Prenex Implicits` lines..."
      },
      {
        "author": "anton-trunov",
        "file": "mathcomp/ssreflect/eqtype.v",
        "date": "2018-11-15T10:02:41Z",
        "comment": "Sure! Would you prefer if I did it for the whole file for consistency? Or just locally for the parts I touched? (so the rest of the relevant declarations could be  addressed in a separate PR)"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/ssreflect/eqtype.v",
        "date": "2018-11-15T10:19:16Z",
        "comment": "It's probably best to do only this change for this PR (as you're touching those lines, might as well do a clean job). If you are willing, it would indeed be good to clean up the `Arguments` declarations for reflection lemmas, which are the result of a general port of old-style implicit declaration. For one thing, the intent was always to have maximal implicit arguments for reflection lemmas, but the old-style declarations only used to provide non-maximal implicits. Hence the `Prenex Implicits` declarations, which are only occasional because implicits just happen to behave like maximal implicits when the last argument is non-dependent. Putting in the proper declarations would certainly be cleaner."
      },
      {
        "author": "anton-trunov",
        "file": "mathcomp/ssreflect/eqtype.v",
        "date": "2018-11-15T19:28:31Z",
        "comment": "Documented in #246"
      },
      {
        "author": "anton-trunov",
        "file": "mathcomp/ssreflect/eqtype.v",
        "date": "2018-11-15T19:30:27Z",
        "comment": "Updated. I'll try to address the rest of the `Prenex Implicits` declarations for reflection lemmas in a separate PR"
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "anton-trunov",
        "committer": "anton-trunov",
        "hash": "851d7d2dd8d968a00c2c7043ab4c1a7d5c943389",
        "message": "Tweak code related to canonical mixins\n\nRemove some unused canonical mixins.\n  Change simplification behavior of concrete comparison functions to allow for\nbetter simplification using unfolding and sebsequent folding back e.g. with\n`rewrite !eqE /= -!eqE`.\n  A bit of cleanup for `Prenex Implicits` declarations.\n  Document some explanations by G. Gonthier.",
        "date": "2018-11-15T10:42:36Z"
      }
    ]
  },
  {
    "author": "ybertot",
    "number": 241,
    "diff_summary": [
      {
        "file": "docs/index.html",
        "status": "M",
        "additions": 1,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2018-11-05T15:53:26Z",
    "update_date": "2018-11-06T09:35:55Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "ybertot",
        "committer": "ybertot",
        "hash": "c93e54c38279bbefeda1d005d17b39b020bd867d",
        "message": "fix issue #240",
        "date": "2018-11-05T15:51:17Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 239,
    "diff_summary": [
      {
        "file": "mathcomp/algebra/Makefile",
        "status": "M",
        "additions": 12,
        "deletions": 46
      },
      {
        "file": "mathcomp/all/Makefile",
        "status": "M",
        "additions": 12,
        "deletions": 46
      },
      {
        "file": "mathcomp/character/Makefile",
        "status": "M",
        "additions": 12,
        "deletions": 46
      },
      {
        "file": "mathcomp/field/Makefile",
        "status": "M",
        "additions": 12,
        "deletions": 46
      },
      {
        "file": "mathcomp/fingroup/Makefile",
        "status": "M",
        "additions": 12,
        "deletions": 46
      },
      {
        "file": "mathcomp/solvable/Makefile",
        "status": "M",
        "additions": 12,
        "deletions": 46
      }
    ],
    "state": "merged",
    "open_date": "2018-10-31T13:31:31Z",
    "update_date": "2018-10-31T14:45:02Z",
    "discussion": [
      {
        "author": "gares",
        "date": "2018-10-31T14:44:57Z",
        "comment": "It works for us, lets see if it works for Coq's CI too"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "143c70bacc3298be2a48fe65cc669dfb2409c610",
        "message": "fixing local Makefile\nshould fix #238",
        "date": "2018-10-31T13:29:19Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 236,
    "diff_summary": [
      {
        "file": "ChangeLog",
        "status": "M",
        "additions": 0,
        "deletions": 88
      },
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 0,
        "deletions": 88
      }
    ],
    "state": "merged",
    "open_date": "2018-10-29T12:21:07Z",
    "update_date": "2018-10-30T05:09:43Z",
    "discussion": [
      {
        "author": "amahboubi",
        "date": "2018-10-29T12:31:49Z",
        "comment": "Could you also revert the aforementioned merge of @ppedrot 's hotfix?"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "b4d360ed23af544fd3e6049bc0c0221d20f4daca",
        "message": "Revert \"Adding allsigs, the dependent version of allpairs\"\n\nThis reverts commit 044634dcc2f645e3afbdad6cb8dcc66f3eb4a87e.\nSee issue https://github.com/math-comp/odd-order/pull/5",
        "date": "2018-10-29T12:18:39Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 235,
    "diff_summary": [
      {
        "file": "ChangeLog",
        "status": "M",
        "additions": 4,
        "deletions": 1
      },
      {
        "file": "mathcomp/ssreflect/eqtype.v",
        "status": "M",
        "additions": 4,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2018-10-26T08:20:24Z",
    "update_date": "2018-10-26T10:26:59Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "efbdb223b3329d6cae0cecebdb6d98453fb489d4",
        "message": "Statement of `bool_irrelevance` more consistent with its name.",
        "date": "2018-10-26T08:22:44Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 234,
    "diff_summary": [
      {
        "file": ".travis.yml",
        "status": "M",
        "additions": 1,
        "deletions": 2
      }
    ],
    "state": "merged",
    "open_date": "2018-10-25T16:46:01Z",
    "update_date": "2018-10-25T19:36:07Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "e85214ba18edc9a81ae3f701e498c84d2a23b371",
        "message": "bump ocaml version in travis",
        "date": "2018-10-25T16:45:42Z"
      }
    ]
  },
  {
    "author": "anton-trunov",
    "number": 232,
    "diff_summary": [
      {
        "file": "mathcomp/algebra/opam",
        "status": "M",
        "additions": 12,
        "deletions": 6
      },
      {
        "file": "mathcomp/character/opam",
        "status": "M",
        "additions": 12,
        "deletions": 6
      },
      {
        "file": "mathcomp/field/opam",
        "status": "M",
        "additions": 12,
        "deletions": 6
      },
      {
        "file": "mathcomp/fingroup/opam",
        "status": "M",
        "additions": 12,
        "deletions": 6
      },
      {
        "file": "mathcomp/solvable/opam",
        "status": "M",
        "additions": 12,
        "deletions": 6
      },
      {
        "file": "mathcomp/ssreflect/opam",
        "status": "M",
        "additions": 12,
        "deletions": 6
      }
    ],
    "state": "merged",
    "open_date": "2018-10-03T10:16:28Z",
    "update_date": "2018-10-25T15:12:54Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "anton-trunov",
        "committer": "anton-trunov",
        "hash": "257be4862014443c834a4113872516d77a412c2f",
        "message": "[opam]: add dev-repo links\n\nThis commit fixes the following issue:\n```shell\n$ opam pin add coq-mathcomp-ssreflect --dev\n[ERROR] \"dev-repo\" field missing in coq-mathcomp-ssreflect metadata,\nyou'll need to specify the pinning location\n```\nThis commit also changes http to https for the homepage links.",
        "date": "2018-10-03T11:32:13Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 230,
    "diff_summary": [
      {
        "file": "mathcomp/character/mxrepresentation.v",
        "status": "M",
        "additions": 3,
        "deletions": 6
      },
      {
        "file": "mathcomp/field/countalg.v",
        "status": "M",
        "additions": 3,
        "deletions": 6
      },
      {
        "file": "mathcomp/ssreflect/eqtype.v",
        "status": "M",
        "additions": 3,
        "deletions": 6
      }
    ],
    "state": "closed",
    "open_date": "2018-09-12T13:37:04Z",
    "update_date": "2018-10-26T10:26:59Z",
    "discussion": [
      {
        "author": "gares",
        "date": "2018-10-25T15:07:13Z",
        "comment": "Discussion at the meeting: keep `Lemma bool_irrelevance b (H1 H2 : is_true b) : H1 = H2.`"
      },
      {
        "author": "anton-trunov",
        "date": "2018-10-25T18:14:57Z",
        "comment": "@gares Thanks for sharing this. I am very interested in the Mathcomp contribution policy. Are there any plans of sharing it?\r\n\r\nI guess the policy would shed some light on the motivation for this particular decision. Was it backward compatibility or some other considerations as well?"
      },
      {
        "author": "gares",
        "date": "2018-10-25T19:42:07Z",
        "comment": "The statement up there is different, so it is not about backward compatibility. I guess the old statement was a but wrong, while this one states a property that is relevant to math comp, even if the lemma is not strictly necessary in this form. At least, this was my understanding of the discussion."
      }
    ],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: wontfix",
        "description": "Issue that might never be attended."
      }
    ],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "b239630a61a97d1b46c5059ce83eb6758a9648ba",
        "message": "removing bool_irrelevance",
        "date": "2018-09-12T12:49:06Z"
      }
    ]
  },
  {
    "author": "hivert",
    "number": 228,
    "diff_summary": [
      {
        "file": "mathcomp/algebra/rat.v",
        "status": "M",
        "additions": 2,
        "deletions": 2
      }
    ],
    "state": "merged",
    "open_date": "2018-09-11T17:39:23Z",
    "update_date": "2018-09-12T11:53:57Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "hivert",
        "committer": "hivert",
        "hash": "6b9e7f66db123a27c5ac7c52bebc67580940bfb6",
        "message": "Fixes the doc of rat",
        "date": "2018-09-11T17:35:26Z"
      }
    ]
  },
  {
    "author": "ybertot",
    "number": 226,
    "diff_summary": [],
    "state": "closed",
    "open_date": "2018-09-11T13:47:35Z",
    "update_date": "2018-12-11T09:51:54Z",
    "discussion": [
      {
        "author": "pi8027",
        "date": "2018-09-11T14:53:50Z",
        "comment": "Hello. I have used `fconnect` and related lemmas to reason about union-find. My situation is a bit different but this would be nice!\r\n\r\nI found that `fconnect_step_cycle_orbit` and `fconnect_step` can be a bit generalized like this:\r\n\r\n```coq\r\nLemma fconnect_step_cycle_orbit x : fconnect f (f x) x = fcycle f (orbit x).\r\nProof.\r\napply/idP/idP.\r\n- move => c; move: (c); rewrite fconnect_orbit; case/trajectP => k Hk kq.\r\n  have oeq : order x = order (f x).\r\n    apply: eq_card=> y; rewrite !inE; apply/idP/idP; apply/connect_trans => //.\r\n    by apply/fconnect1.\r\n  suff ko : k.+1 = order x.\r\n    rewrite /orbit -orderSpred /= rcons_path /= fpath_traject andTb.\r\n    by rewrite last_traject -ko -iterS iterSr -kq eqxx.\r\n  move: Hk (orbit_uniq x); rewrite -oeq leq_eqVlt => /predU1P [-> // |].\r\n  rewrite /orbit -orderSpred ltnS /= => Hk /andP [] /negP [].\r\n  by apply/trajectP; exists k.\r\n- move: (fconnect1 x); rewrite !fconnect_orbit => H cyco.\r\n  apply/trajectP; rewrite (cycle_orbit_order_eq cyco H) {H}.\r\n  rewrite -orderSpred; exists (order x).-1 => //.\r\n  by rewrite -iterSr orderSpred cycle_orbit_iter_order.\r\nQed.\r\n\r\nLemma fconnect_step x y : fconnect f x y = (x == y) || fconnect f (f x) y.\r\nProof.\r\napply/idP/idP => [/iter_findex <- | /predU1P [<- |] //].\r\n- by case: (findex x y) => [| i]; rewrite ?eqxx // iterSr fconnect_iter orbT.\r\n- by apply/connect_trans/fconnect1.\r\nQed.\r\n```"
      },
      {
        "author": "pi8027",
        "date": "2018-09-12T05:36:07Z",
        "comment": "The proof of `order_step` can be simplified as follows by using above `fconnect_step`:\r\n\r\n```coq\r\nLemma order_step x :\r\n  order x = order (f x) /\\ iter (order x) f x = x \\/\r\n  order x = (order (f x)).+1.\r\nProof.\r\nhave [| /negP noc] := boolP (fconnect f (f x) x); last first.\r\n  right; rewrite /order; set M := fconnect f (f x); set N := pred1 x.\r\n  have ->: #|fconnect f x| = #|[predU N & M]|\r\n    by apply: eq_card=> z; rewrite !inE fconnect_step eq_sym.\r\n  rewrite -[LHS]addn0 -add1n -(card1 x) -cardUI; congr addn.\r\n  by rewrite eq_card0 // => z; rewrite !inE; apply/negP => /andP [/eqP ->].\r\nrewrite fconnect_step_cycle_orbit.\r\nleft; split; last by apply: cycle_orbit_iter_order.\r\nby apply/esym/cycle_orbit_order_eq; rewrite // -fconnect_orbit fconnect1.\r\nQed.\r\n```"
      },
      {
        "author": "ybertot",
        "date": "2018-09-12T12:26:57Z",
        "comment": "@pi8027, can you package your two suggestions in a pull request to branch fingraph-complements of ybertot/math-comp?   This way your contribution will be attributed to you."
      },
      {
        "author": "pi8027",
        "date": "2018-09-13T14:46:20Z",
        "comment": "@ybertot Thanks for merging. I think that `fcycle f (orbit f x)` ---more intuitively, `x` is in the cyclic part of the \"lasso\" or not--- is a fundamental condition of vertices in the finite graphs generated by `frel`, and there are more useful equivalent conditions and theorems around it. But I have no time to write out and reorganize them now..."
      },
      {
        "author": "CohenCyril",
        "date": "2018-10-31T16:26:14Z",
        "comment": "@ybertot please rebase on top of master."
      },
      {
        "author": "CohenCyril",
        "date": "2018-11-20T12:00:22Z",
        "comment": "@ybertot do you have any plans on progressing on this PR in the near future?"
      },
      {
        "author": "ybertot",
        "date": "2018-11-20T12:10:17Z",
        "comment": "Expect an action by Nov. 28."
      },
      {
        "author": "CohenCyril",
        "date": "2018-12-11T09:53:31Z",
        "comment": "Accidentally closed"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": []
  },
  {
    "author": "strub",
    "number": 224,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 18,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2018-09-03T13:35:49Z",
    "update_date": "2018-09-24T14:44:07Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2018-09-05T08:05:47Z",
        "comment": "@strub thanks! \r\n@bgregoir what are the lemmas you usually have about `all2`?"
      },
      {
        "author": "bgregoir",
        "date": "2018-09-05T13:37:19Z",
        "comment": "I think that the lemma all2P (of the pull request) is the only one needed.\nMost of the time, proof is done by induction and the only important part is the fact that all2 simplify.\nB\n\n> Le 5 sept. 2018 à 10:05, Cyril Cohen <notifications@github.com> a écrit :\n> \n> @strib <https://github.com/strib> thanks!\n> @bgregoir <https://github.com/bgregoir> what are the lemmas you usually have about all2?\n> \n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub <https://github.com/math-comp/math-comp/pull/224#issuecomment-418638243>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AAoZ7II4j9qKhz-xlGkydCBBZCiqirKVks5uX4XdgaJpZM4WXofI>.\n> \n\n"
      },
      {
        "author": "gares",
        "date": "2018-09-06T07:11:38Z",
        "comment": "I imagine we also want `Arguments all2 {T U} p !s1 !s2.` so that it unfolds only when *both* lists are concrete."
      },
      {
        "author": "amahboubi",
        "date": "2018-09-10T13:21:34Z",
        "comment": "Hi, I do not understand why we need the fixpoint at all. I would have defined `all2` as the right hand-side of `all2E`."
      },
      {
        "author": "bgregoir",
        "date": "2018-09-10T13:22:58Z",
        "comment": "\n\n> Le 10 sept. 2018 à 15:21, Assia Mahboubi <notifications@github.com> a écrit :\n> \n> Hi, I do not understand why we need the fixpoint at all. I would have defined all2 as the right hand-side of all2E.\n> \n> \n    The computation behaviour of the  right hand-side is not very good.\nB\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub <https://github.com/math-comp/math-comp/pull/224#issuecomment-419909587>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AAoZ7OWXclfcDC_MyjmknXN1lLxfZshUks5uZmdfgaJpZM4WXofI>.\n> \n\n"
      },
      {
        "author": "strub",
        "date": "2018-09-10T13:22:58Z",
        "comment": "Because the right hand side of allE has a bad behaviour w.r.t. reduction. @bgregoir may have more insights about this."
      },
      {
        "author": "amahboubi",
        "date": "2018-09-10T13:30:48Z",
        "comment": "@bgregoir, can you give an example of behaviour you do not like?"
      },
      {
        "author": "bgregoir",
        "date": "2018-09-10T14:05:50Z",
        "comment": "Reduction of all2 f (a::b) (c::d) —> f a c && all2 f b d\n\n> Le 10 sept. 2018 à 15:31, Assia Mahboubi <notifications@github.com> a écrit :\n> \n> @bgregoir <https://github.com/bgregoir>, can you give an example of behaviour you do not like?\n> \n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub <https://github.com/math-comp/math-comp/pull/224#issuecomment-419912584>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AAoZ7KAggIzenMuRQArQHObKCojT8Cynks5uZmmegaJpZM4WXofI>.\n> \n\n"
      },
      {
        "author": "bgregoir",
        "date": "2018-09-10T14:34:10Z",
        "comment": "Maybe my last email is not very clear.\n\n> Reduction of all2 f (a::b) (c::d) —> f a c && all2 f b d\n\nThis is a reduction that I like that we do not have using zip and length.\nWe can add the rewriting rule, but it will not be reduction.\nB \n\n\n> Le 10 sept. 2018 à 16:05, bgregoir <benjamin.gregoire@inria.fr> a écrit :\n> \n> Reduction of all2 f (a::b) (c::d) —> f a c && all2 f b d\n> \n>> Le 10 sept. 2018 à 15:31, Assia Mahboubi <notifications@github.com <mailto:notifications@github.com>> a écrit :\n>> \n>> @bgregoir <https://github.com/bgregoir>, can you give an example of behaviour you do not like?\n>> \n>> —\n>> You are receiving this because you were mentioned.\n>> Reply to this email directly, view it on GitHub <https://github.com/math-comp/math-comp/pull/224#issuecomment-419912584>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AAoZ7KAggIzenMuRQArQHObKCojT8Cynks5uZmmegaJpZM4WXofI>.\n>> \n> \n\n"
      },
      {
        "author": "amahboubi",
        "date": "2018-09-10T15:06:57Z",
        "comment": "Sure, this is where the two definitions differ. You certainly know best, as you have been the one using it. However, I guess that we should consider including a minimal theory, if we include this definition in `seq`. At least fixpoint equations, but may be also connections with `allpairs`, `cat`, `subseq`,etc. I do not want to block the merge though."
      },
      {
        "author": "amahboubi",
        "date": "2018-09-24T13:34:29Z",
        "comment": "I do not know what to do here:\r\n- github tells me this PR now has conflicts\r\n- I do not think the change is worth 7 commits.\r\n\r\nCan you at least squash?"
      },
      {
        "author": "strub",
        "date": "2018-09-24T13:35:35Z",
        "comment": "I can resolve the conflicts. If I understand well, this is then up to you to squash the commit by choosing the correct merge option."
      },
      {
        "author": "amahboubi",
        "date": "2018-09-24T13:40:46Z",
        "comment": "It seems it's a global option of the repo:\r\nhttps://help.github.com/articles/about-pull-request-merges/\r\nwhich is apparently not set for math-comp."
      },
      {
        "author": "amahboubi",
        "date": "2018-09-24T13:43:07Z",
        "comment": "Yes, it is set, sorry: I just did not realize I had access to a menu for merging pull requests. I will merge as soon as travis is ok with it."
      },
      {
        "author": "CohenCyril",
        "date": "2018-09-24T15:10:00Z",
        "comment": "@strub \r\n> this is then up to you to squash the commit by choosing the correct merge option.\r\n\r\nThe problem is: github has no option for squashing and creating a merge commit :disappointed: "
      },
      {
        "author": "amahboubi",
        "date": "2018-09-24T15:17:32Z",
        "comment": "Isn't it what I just did?"
      },
      {
        "author": "CohenCyril",
        "date": "2018-09-24T15:25:33Z",
        "comment": "> Isn't it what I just did?\r\n\r\nNo, there is no merge commit, just commit 5f8d45b54aa98732ec3de43d91814459d5a2f2e4 as you can see in https://github.com/math-comp/math-comp/commits/master\r\n\r\n"
      },
      {
        "author": "strub",
        "date": "2018-09-24T15:27:52Z",
        "comment": "On the other end, what the point of having a merge commit when you squash the development into one commit?"
      }
    ],
    "review_discussion": [
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2018-09-10T12:21:58Z",
        "comment": "Wouldn't `all2E` be a better name? (since it is not an equivalence but an elimination equation)"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2018-09-10T12:29:09Z",
        "comment": "And how about factoring `T U p` as a section context and have `all2E` stated on two line instead of three?"
      },
      {
        "author": "strub",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2018-09-10T12:35:25Z",
        "comment": "If this makes you happy :)"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2018-09-10T13:04:11Z",
        "comment": "it does"
      },
      {
        "author": "amahboubi",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2018-09-10T15:03:06Z",
        "comment": "The final `eqSS` is useless, as `by` will perform the conversion job."
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "strub",
        "committer": "strub",
        "hash": "a9e3d4a34a678d280c374d29f6f564d8d6f8e81d",
        "message": "all2",
        "date": "2018-09-03T12:57:36Z"
      },
      {
        "author": "strub",
        "committer": "strub",
        "hash": "01d9f62ba35dccdcd35baece912928eec796e118",
        "message": "Arguments specificatin for \"all2\"",
        "date": "2018-09-06T07:14:53Z"
      },
      {
        "author": "strub",
        "committer": "strub",
        "hash": "8e66414f8a3fcd487497d2c27fc162b56cb8e4d6",
        "message": "all2P -> all2E",
        "date": "2018-09-10T12:25:45Z"
      },
      {
        "author": "strub",
        "committer": "strub",
        "hash": "ff03142f6839efa7e254c66625d782b38c441c3e",
        "message": "nits",
        "date": "2018-09-10T12:34:53Z"
      },
      {
        "author": "strub",
        "committer": "strub",
        "hash": "11f1499cdf748654316df54551afc097703c383b",
        "message": "nits",
        "date": "2018-09-11T06:58:44Z"
      },
      {
        "author": "CohenCyril",
        "committer": "web-flow",
        "hash": "329cfb6e61e2a238f17e7becfeedb1a8e20f1471",
        "message": "all2E is oneliner",
        "date": "2018-09-12T12:00:10Z"
      },
      {
        "author": "CohenCyril",
        "committer": "web-flow",
        "hash": "9502028191bb10ea08b7454bb7f9814382d1b2b0",
        "message": "nits",
        "date": "2018-09-12T14:39:59Z"
      },
      {
        "author": "strub",
        "committer": "strub",
        "hash": "62942c60b2e77eaff47d38fa1974722e23ebf200",
        "message": "Merge remote-tracking branch 'upstream/master' into all2",
        "date": "2018-09-24T13:38:00Z"
      }
    ]
  },
  {
    "author": "gares",
    "number": 223,
    "diff_summary": [
      {
        "file": "mathcomp/field/algnum.v",
        "status": "M",
        "additions": 9,
        "deletions": 9
      },
      {
        "file": "mathcomp/ssreflect/eqtype.v",
        "status": "M",
        "additions": 9,
        "deletions": 9
      },
      {
        "file": "mathcomp/ssreflect/ssrnat.v",
        "status": "M",
        "additions": 9,
        "deletions": 9
      }
    ],
    "state": "merged",
    "open_date": "2018-09-03T13:03:32Z",
    "update_date": "2018-09-06T11:36:46Z",
    "discussion": [
      {
        "author": "gares",
        "date": "2018-09-03T16:27:26Z",
        "comment": "I've no clue why, but it seems to break 8.8 and 8.7, while work on 8.6 and master. Ideas?"
      },
      {
        "author": "Zimmi48",
        "date": "2018-09-04T08:05:21Z",
        "comment": "The error is:\r\n```\r\nFile \"./ssreflect/ssrfun.v\", line 2, characters 29-41:\r\nError:\r\nCannot find a physical path bound to logical path matching suffix\r\n<> and prefix mathcomp.\r\n```\r\nI cannot see how this could possibly be connected to this PR, but if it is, it must be a bug in coq_makefile or how it is used in math-comp. Have you tried testing only the changes in the `.v` files? That would be enough for now."
      },
      {
        "author": "Zimmi48",
        "date": "2018-09-04T13:50:32Z",
        "comment": "The push check passed. The pr check started later but it should give the same result."
      },
      {
        "author": "gares",
        "date": "2018-09-04T14:25:16Z",
        "comment": "I think it is ready for merge now."
      },
      {
        "author": "Zimmi48",
        "date": "2018-09-06T08:57:33Z",
        "comment": "@gares or @amahboubi Can you merge? This is needed to know what other projects depending on math-comp are requiring fixes."
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "hash": "360a8819a08c4cf005d96f0ac6bff65903dccfd4",
        "message": "[warnings] -w \"+compatibility-notation\" clean",
        "date": "2018-09-04T13:10:48Z"
      }
    ]
  },
  {
    "author": "hivert",
    "number": 221,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 262,
        "deletions": 79
      },
      {
        "file": "mathcomp/fingroup/action.v",
        "status": "M",
        "additions": 262,
        "deletions": 79
      },
      {
        "file": "mathcomp/fingroup/perm.v",
        "status": "M",
        "additions": 262,
        "deletions": 79
      },
      {
        "file": "mathcomp/solvable/finmodule.v",
        "status": "M",
        "additions": 262,
        "deletions": 79
      }
    ],
    "state": "merged",
    "open_date": "2018-08-26T14:51:36Z",
    "update_date": "2020-04-15T13:45:25Z",
    "discussion": [
      {
        "author": "ggonthier",
        "date": "2018-12-10T08:35:24Z",
        "comment": "This contribution addresses an important gap in the finite group library, namely the lack of support for the symmetry groups `Sym(X)`. This is a historical accident: permutations were initially implemented to support matrix operations (mainly, determinants), then support for group automorphism `Aut(X)` was developed, skipping over `Sym(X)` as this was not required for the Odd Order proof. The study of `Alt(X)` was primarily intended as an application, and thus never fully integrated in the library.\r\nThis is too important a topic to be handled piecewise; I suggest we work on a comprehensive PR that fully addresses it, and is consistent with the rest of the library. This means including your results on the decomposition in cycles, as well as support for cycle notation and structure, and n-transitivity. Some work will have to go in renaming: `perm_ong` should really be called `Sym`, `pcycle` in `perm.v` should really be called `porbit`, for instance."
      },
      {
        "author": "hivert",
        "date": "2018-12-10T17:22:13Z",
        "comment": "Dear Georges, \r\n\r\nI'm quite happy that you consider this part of the development worthwhile being included in MathComp. Right now my main question is how to proceed further. I considered the few lemma proposed here as a requirement for the inclusion (in whatever form) of the cycle.v file. "
      },
      {
        "author": "CohenCyril",
        "date": "2018-12-11T10:40:39Z",
        "comment": "Hi @hivert, if I am right, @ggonthier suggests you put all of your contributions to the symmetric group in one single PR (you may amend this one), so as to review and extend it globally rather than bits by bits."
      },
      {
        "author": "ggonthier",
        "date": "2018-12-11T16:03:44Z",
        "comment": "Dear Florian, @CohenCyril is right. Peaking at `Coq-combi`, I think we'll need a few more results (see above) in order to do the topic justice. The finite group library mostly follows Aschbacher's Finite Group Theory textbook, so I'd like to use chapter 5 as a source for results and notation.\r\n  It's clear that some notation from both `perm.v` and your own `cycle.v` will need to be changed. I must confess I didn't put enough thought into names in `perm.v` because I viewed `perm_on`, `pcycle` and `cycles` as mere stepping stones to get to `Aut` and `odd_perm`.\r\n   Reviewing the textbook, a \"cycle\" is a permutation (not its support), so I should have used 'Sym', 'porbit' and 'porbits'. The text uses Fix(A) and Mov(A) to describe the fixed and moved points of a set of permutations, but we could also use `psupport s` for the moved points of a single permutation\r\n(`support s` would conflict with an `ssralg` definition that is used for characters). We should also avoid `cyclic`, which is heavily used for groups; luckily it seems the more modern term is `circular`, which doesn't conflict with anything.\r\n  Finally, I'd like to unify as much as possible the group isomorphism construction, and generalise the one given in `automorphism.v` rather than creating a new one from scratch. We can still have a variety of isomorphism lemmas; my experience is that these are more useful in practice, because it\r\nis usually more efficient to use `isogP` to get a new isomorphism constant than to mess around with explicit instances of a generic construction."
      },
      {
        "author": "amahboubi",
        "date": "2019-02-28T17:19:33Z",
        "comment": "Hi @hivert! We discussed your PR at the MathcompDev meeting today. How\r\ncan we help this PR progress? For instance, would an explicit todo list\r\nhelp? Also, it's absolutely fine if you have no more time left to devote\r\nto this particular PR, in which case we (the devs) could also take over\r\nthe finalization of the work entirely."
      },
      {
        "author": "amahboubi",
        "date": "2019-05-21T09:28:05Z",
        "comment": "Hi @hivert ! @ybertot told us today that the two of you discussed in person, and that you agreed to let us take over this PR. Many thanks!"
      },
      {
        "author": "hivert",
        "date": "2019-05-21T11:49:28Z",
        "comment": "@amahboubi  Sure ! Please take what you want from my code. Sorry, I forgot to reply... "
      },
      {
        "author": "amahboubi",
        "date": "2019-05-21T12:05:14Z",
        "comment": "No worries, once again, thanks for your contribution."
      },
      {
        "author": "affeldt-aist",
        "date": "2020-04-05T18:08:04Z",
        "comment": "I tried to address in a minimal way comments about this PR.\r\n- @amahboubi suggested a simplification of card_Sn, which requires an\r\n  intermediate lemma, relying on a generalization of subsetT (for all\r\n  pred instead of all set) but this generalization requires the\r\n  addition of pred_of_set here and there in the library\r\n- @ggonthier suggested to work on a comprehensive PR to address the\r\n  lack of support for the symmetry group Sym(X). See his comments for\r\n  details. In a nutshell:\r\n  + source for results and notations: Aschbacher's Finite Group Theory Chap. 5\r\n  + use `psupport s` for the moved points of a single permutation\r\n  + use `circular` instead of `cyclic`\r\n  + generalize the group isomorphism construction from `automorphism.v`\r\n"
      },
      {
        "author": "affeldt-aist",
        "date": "2020-04-06T10:02:59Z",
        "comment": "Regarding the suggestion by @ggonthier to work on a comprehensive PR, we would like to reproduce part of the discussion that happened here as a new issue to keep track and eventually trigger a PR."
      },
      {
        "author": "affeldt-aist",
        "date": "2020-04-07T16:36:03Z",
        "comment": "I have updated `CHANGELOG_UNRELEASED` @CohenCyril "
      },
      {
        "author": "affeldt-aist",
        "date": "2020-04-07T19:57:28Z",
        "comment": "> can you doublecheck my suggestions?\r\n\r\ndone"
      },
      {
        "author": "ybertot",
        "date": "2020-04-09T12:26:36Z",
        "comment": "@CohenCyril, can we conclude?"
      },
      {
        "author": "CohenCyril",
        "date": "2020-04-09T13:04:49Z",
        "comment": "> @CohenCyril, can we conclude?\r\n\r\nSome proofs are not in the mathcomp ssreflect style, please merge first and I will quickly submit a PR to fix them."
      },
      {
        "author": "affeldt-aist",
        "date": "2020-04-09T13:14:21Z",
        "comment": "I have recorded the suggestion by @ggonthier as issue #478 for the sake of visibility."
      },
      {
        "author": "amahboubi",
        "date": "2020-04-15T09:31:23Z",
        "comment": "@affeldt-aist @ybertot: you have both recently contacted me offline but I would prefer to discuss here. What are you expecting from my side concerning this PR?\r\n"
      },
      {
        "author": "affeldt-aist",
        "date": "2020-04-15T10:17:56Z",
        "comment": "> @affeldt-aist @ybertot: you have both recently contacted me offline but I would prefer to discuss here. What are you expecting from my side concerning this PR?\r\n\r\nWe did address several of your comments but not all of them.\r\nWe wanted to tell you and make sure whether you think it is reasonable.\r\n\r\nHere are details:\r\nYou suggested a simplification of `card_Sn`, which requires an\r\nintermediate lemma, relying on a generalization of `subsetT` (for all\r\n`pred`s instead of all `set`s) but this generalization requires the\r\naddition of `pred_of_set` here and there in the library so we did not implement it.\r\n(We addressed your other comments about documentation and renamings.)\r\n\r\nRegarding the suggestion by @ggonthier we decided not to address it in this\r\nPR and to record it as an issue for later:\r\nhttps://github.com/math-comp/math-comp/issues/478\r\n(However, we did address the comments about renamings and moved lemmas around\r\nfollowing new suggestions by @CohenCyril .)\r\n"
      },
      {
        "author": "amahboubi",
        "date": "2020-04-15T10:53:30Z",
        "comment": "@affeldt-aist thanks for clarifying. Is there a reason why not creating an issue for my unaddresed suggestion as well? In case no, I just created one using github's facility. \r\nI do not have enough time to allocate to this right now and this should not block the release process."
      },
      {
        "author": "amahboubi",
        "date": "2020-04-15T10:54:49Z",
        "comment": "Note that the link automatically created does not work properly, does anyone know how to properly point to the entire conversation?"
      },
      {
        "author": "CohenCyril",
        "date": "2020-04-15T11:04:51Z",
        "comment": "> Note that the link automatically created does not work properly, does anyone know how to properly point to the entire conversation?\r\n\r\nI did it. (You can click on the \"...\" symbol and then \"copy link\" to get the permalink to any comment in any thread)"
      },
      {
        "author": "affeldt-aist",
        "date": "2020-04-15T11:10:33Z",
        "comment": "> Is there a reason why not creating an issue for my unaddresed suggestion as well?\r\n> In case no, I just created one using github's facility.\r\n\r\nI did not create an issue right away because I was hoping that a solution might have emerged out of this discussion. At this point, recording the issue is the right thing to do imho.\r\n"
      },
      {
        "author": "amahboubi",
        "date": "2020-04-15T12:18:00Z",
        "comment": "> > Note that the link automatically created does not work properly, does anyone know how to properly point to the entire conversation?\r\n> \r\n> I did it. (You can click on the \"...\" symbol and then \"copy link\" to get the permalink to any comment in any thread)\r\n\r\nThanks, and thanks for the tip!"
      }
    ],
    "review_discussion": [
      {
        "author": "CohenCyril",
        "file": "mathcomp/fingroup/action.v",
        "date": "2018-09-10T12:26:16Z",
        "comment": "Hi @hivert, thanks for the contribution. I would expect this to be the definitional equality, so that it becomes canonically a group anyways... (so `group_set_perm_ong` and `perm_ong_group` would not be needed, if I am correct), and have a proof that `'C(~:S | 'P) = [set s | perm_on S s]` instead. Maybe in this context a name (`perm_ong`) is not needed anymore since `'C(~:S | 'P)` is descriptive and short enough?\r\nI did not try, but does that sound reasonable to you?"
      },
      {
        "author": "hivert",
        "file": "mathcomp/fingroup/action.v",
        "date": "2018-09-10T13:05:14Z",
        "comment": "Hi @CohenCyril. I can give a try on what it change on the rest of the code. I'll get back to you after that."
      },
      {
        "author": "hivert",
        "file": "mathcomp/fingroup/action.v",
        "date": "2018-09-10T15:23:53Z",
        "comment": "I got a little problem using directly `'C(~:S | 'P)`. Indeed rewriting `inE` rewrite it to\r\n```\r\n(s \\in [set: perm_of_finGroupType T]) &&\r\n  (s \\in [set a | ~: S \\subset [set x | ('P)%act x a == x]])\r\n```\r\nwhich is largely unusable. More `rewrite !inE` leads to\r\n```\r\n ~: S \\subset [set x | aperm x s == x]\r\n```\r\nHaving something which directly rewrites to\r\n```\r\nperm_on S s\r\n```\r\nSeems to me much natural.\r\nAs a consequence in my script, I need to be very careful to not rewrite inE before perm_onE on it.\r\n\r\nSee [this commit](https://github.com/hivert/Coq-Combi/commit/cb5975947ad804434831a9fedf6b947ad4a2cc08) if you want to have an idea of the effect. If you are curious the file `permcent.v` aims to compute the structure and therefore the cardinality of the centralizer of a given permutation which ultimately give a formula for the size of a conjugacy class. \r\n\r\nI leave it to you to decide if the ease to have something which simplifies to `perm_on S s` is worth the extra lines (and the time to maintain them)."
      },
      {
        "author": "amahboubi",
        "file": "mathcomp/fingroup/action.v",
        "date": "2018-10-30T09:48:43Z",
        "comment": "Please add the documentation of perm_ong is the header."
      },
      {
        "author": "amahboubi",
        "file": "mathcomp/fingroup/action.v",
        "date": "2018-10-30T09:50:20Z",
        "comment": "It seems you are using 'Proof using.' in a systematic way when starting your proofs. Could you comment on that practice and why you found it useful?"
      },
      {
        "author": "amahboubi",
        "file": "mathcomp/fingroup/perm.v",
        "date": "2018-10-30T10:09:07Z",
        "comment": "Here is an alternative proof:\r\n`Proof. apply: im_perm_on; exact: perm_on1. Qed.`"
      },
      {
        "author": "amahboubi",
        "file": "mathcomp/fingroup/perm.v",
        "date": "2018-10-30T10:52:14Z",
        "comment": "Indeed, this third variant was missing... thanks! If I remember correctly, @thery wrote his own in `alt.v`...\r\nIt seems to me though that the present  proof is going into some low level (point-level) details when it shouldn't. May be is this because we should use the fact that:\r\n\r\n`Lemma Sn_perm_onT n (x : 'S_n) : perm_on setT x`\r\n\r\nI could not find it but this should be a trivial fact. I tried to prove it but my memory of the finset lib is a bit rusty and I had the following problem: I would like to write\r\n\r\n```\r\nLemma Sn_perm_onT n (x : 'S_n) : perm_on setT x.    \r\nProof. by rewrite /perm_on; apply: my_subsetT. Qed.\r\n```\r\n\r\nbut then I need this generalization of subsetT:\r\n\r\n```\r\nLemma my_subsetT  (T : finType) (A : pred T) : A \\subset [set: T].\r\nProof. by apply/subsetP=> x; rewrite inE. Qed.\r\n```\r\nCan someone  tell me what idiom I should use instead?\r\nAnd now we can get the following proof for `card_Sn`:\r\n\r\n```\r\nLemma card_Sn n : #|'S_(n)| = n`!.\r\nProof.\r\nhave /eq_card -> : 'S_(n) =1 perm_on [set: 'I_n] by move=> x; rewrite Sn_perm_onT.\r\nby rewrite card_perm cardsT card_ord. \r\nQed.\r\n```"
      },
      {
        "author": "amahboubi",
        "file": "mathcomp/fingroup/perm.v",
        "date": "2018-10-30T10:53:25Z",
        "comment": "Update the header with the corresponding documentation."
      },
      {
        "author": "hivert",
        "file": "mathcomp/fingroup/action.v",
        "date": "2018-10-30T11:18:14Z",
        "comment": "It was just added automatically by 'Suggest Proof Using' (See [Asynchronous and Parallel Proof Processing](https://coq.inria.fr/refman/addendum/parallel-proof-processing.html)) I understood that this could be used to speedup compiling by building proof terms in parallel. Maybe it's not useful at all but since it was added automatically by a script and didn't clobber that much the file I left it. Moreover it is a simple and nice way to document the section hypothesis dependency which I find useful."
      },
      {
        "author": "hivert",
        "file": "mathcomp/fingroup/perm.v",
        "date": "2018-10-30T11:25:04Z",
        "comment": "I completely agree that one shouldn't need to go to low level. I didn't manage to avoid it. If I remember correctly, there are at least a dozen of instances of this problem in my code. Either I'm missing some shortcut in the library... I'll try to extract another instance of this problem."
      },
      {
        "author": "amahboubi",
        "file": "mathcomp/fingroup/perm.v",
        "date": "2018-10-30T11:34:14Z",
        "comment": "Great! It would be super useful indeed to collect some examples, so as to complete the infrastructure material with the missing pieces."
      },
      {
        "author": "hivert",
        "file": "mathcomp/fingroup/perm.v",
        "date": "2018-10-30T16:32:08Z",
        "comment": "Here is one instance:\r\n\r\n```\r\nNotation \"#{ x }\" :=  #|(x : {set _})|\r\nVariable T : finType.\r\nImplicit Types (A B X : {set T}) (P Q : {set {set T}}).\r\n\r\nLemma count_set_of_card (p : pred nat) P :\r\n  count p [seq #{x} | x in P] = #|P :&: [set x | p #{x}]|.\r\nProof using.\r\nrewrite cardE -size_filter /enum_mem -enumT /=.\r\nrewrite filter_map size_map; congr size.\r\nrewrite -filter_predI -enumT /=; apply eq_filter.\r\nby move=> S; rewrite !inE andbC.\r\nQed.\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/fingroup/action.v",
        "date": "2020-04-06T13:10:44Z",
        "comment": "```suggestion\r\nLemma SymE : Sym = 'C(~: S | 'P).\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/fingroup/action.v",
        "date": "2020-04-06T15:43:19Z",
        "comment": "I would put `Sym`, `Sym_group`, and `card_Sym`  in `perm.v` and keep only `SymE ` in `action.v`"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/fingroup/perm.v",
        "date": "2020-04-06T15:57:20Z",
        "comment": "```suggestion\r\nLemma imset_perm1 (S : {set T}) : [set (1 : {perm T}) x | x in S] = S.\r\n```\r\nso as not to rely on the coercion's name"
      },
      {
        "author": "CohenCyril",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2020-04-07T16:39:44Z",
        "comment": "```suggestion\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2020-04-07T16:39:49Z",
        "comment": "```suggestion\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/fingroup/perm.v",
        "date": "2020-04-07T16:46:22Z",
        "comment": "```suggestion\r\n\r\nLemma permS1 (g : 'S_1) : g = 1%g.\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/fingroup/perm.v",
        "date": "2020-04-07T16:49:02Z",
        "comment": "```suggestion\r\nLemma porbits_mul_tperm s x y : let t := tperm x y in\r\n```\r\nlooks like a there used to be a typo"
      },
      {
        "author": "CohenCyril",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2020-04-07T16:49:14Z",
        "comment": "```suggestion\r\n- Added definition `cast_perm` with a group morphism canonical structure, and lemmas `permX_fix`, `imset_perm1`,  `permS0`, `permS1`, `cast_perm_id`, `cast_permE`, `cast_permK`, `cast_permKV`, `cast_perm_in`,  and `isom_cast_perm` in `perm` and  `restr_perm_commute` in `action`.\r\n\r\n- Added `porbitP` and `porbitPmin` in `perm`.\r\n\r\n- Added definition `Sym` with a group set canonical structure and lemmas `card_Sn` and `card_Sym` in `perm` and `SymE` in `action`.\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2020-04-07T16:49:27Z",
        "comment": "```suggestion\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2020-04-07T16:49:36Z",
        "comment": "```suggestion\r\n```"
      },
      {
        "author": "CohenCyril",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2020-04-07T16:49:43Z",
        "comment": "```suggestion\r\n  + `ncycles_mul_tperm` -> `porbits_mul_tperm`\r\n```"
      },
      {
        "author": "pi8027",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2020-04-08T04:35:13Z",
        "comment": "I think we should have deprecation notations for those renamings."
      },
      {
        "author": "affeldt-aist",
        "file": "CHANGELOG_UNRELEASED.md",
        "date": "2020-04-08T14:43:12Z",
        "comment": "DONE"
      }
    ],
    "tags": [
      {
        "tag": "kind: enhancement",
        "description": "Issue or PR about addition of features."
      }
    ],
    "commits": [
      {
        "author": "hivert",
        "committer": "affeldt-aist",
        "hash": "71f2fc1e08817af19edcedf0e2980a499951fba3",
        "message": "Some more lemmas on permutations",
        "date": "2020-04-15T11:59:28Z"
      },
      {
        "author": "affeldt-aist",
        "committer": "affeldt-aist",
        "hash": "710a449fad7132a6ac89d19159fda44e48718b1d",
        "message": "addressing comments about PR#221 of mathcomp",
        "date": "2020-04-15T12:07:29Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "6dac040b009e10bc4fa0420f7c40ae9134594c86",
        "message": "reworked new lemmas in perm and action and added missing ones\n\nIn particular: rephrased permS0 and permS1 with all_equal_to",
        "date": "2020-04-15T12:20:45Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 219,
    "diff_summary": [
      {
        "file": "mathcomp/Makefile.common",
        "status": "M",
        "additions": 22,
        "deletions": 20
      },
      {
        "file": "mathcomp/ssreflect/Makefile.detect-coq-version",
        "status": "M",
        "additions": 22,
        "deletions": 20
      }
    ],
    "state": "merged",
    "open_date": "2018-08-08T15:20:41Z",
    "update_date": "2018-10-29T07:04:41Z",
    "discussion": [
      {
        "author": "amahboubi",
        "date": "2018-09-24T13:51:10Z",
        "comment": "I do not know what to do with this PR. I am unable to review without at least a small description of the pb.\r\n@gares may be more relevant as a reviewer?"
      },
      {
        "author": "gares",
        "date": "2018-09-24T18:38:41Z",
        "comment": "I'd be happy if the code could call\r\n```\r\n$ ~/COQ/coq/bin/coqtop -print-version\r\n8.9+alpha 4.06.0\r\n```\r\nand \"parse\" that string, that was made easier to parse (the second version is the ocaml compiler)"
      },
      {
        "author": "CohenCyril",
        "date": "2018-10-26T08:15:14Z",
        "comment": "@gares actually `-print-version` seems to be unavailable for coq 8.6, so the modification you suggest actually implies dropping support..."
      },
      {
        "author": "CohenCyril",
        "date": "2018-10-26T08:56:25Z",
        "comment": "@gares I'd rather push this fix first, and later make another PR taking your remark into account and drop 8.6 when there is a consensus. I left a comment in the `Makefile.common` with the instructions."
      },
      {
        "author": "gares",
        "date": "2018-10-26T09:02:53Z",
        "comment": "I guess I added --print-version on 8.6, and then the more standard -print-version was also added. Could you try that? (I don't have a 8.6 around)"
      },
      {
        "author": "CohenCyril",
        "date": "2018-10-26T09:43:58Z",
        "comment": "> I guess I added --print-version on 8.6, and then the more standard -print-version was also added. Could you try that? (I don't have a 8.6 around)\r\n\r\nWith nix, coq 8.6 was around in a few seconds :heart: "
      },
      {
        "author": "gares",
        "date": "2018-10-26T18:08:24Z",
        "comment": "I'm a bit lost. Is the change I propose doable on 8 6 too or not? If not I shall merge as is. Else I should wait for a fix."
      },
      {
        "author": "CohenCyril",
        "date": "2018-10-26T18:37:27Z",
        "comment": "@gares the fix was made (unless there is more to fix than I thought) and it passed."
      }
    ],
    "review_discussion": [
      {
        "author": "gares",
        "file": "mathcomp/Makefile.common",
        "date": "2018-10-31T10:43:26Z",
        "comment": "@CohenCyril @SkySkimmer wrt #238 I think this line is fishy. `$(COQPROJECT)` points to `_CoqProject` that, IIRC, only contains `-R` directives but not the list of files."
      },
      {
        "author": "SkySkimmer",
        "file": "mathcomp/Makefile.common",
        "date": "2018-10-31T11:37:44Z",
        "comment": "I believe it points to https://github.com/math-comp/math-comp/blob/d6dc5741ba44808e5f2f01a238d972ec2c11737f/mathcomp/fingroup/Make (which does have v files) as per https://github.com/math-comp/math-comp/blob/d6dc5741ba44808e5f2f01a238d972ec2c11737f/mathcomp/fingroup/Makefile#L3"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/Makefile.common",
        "date": "2018-10-31T11:41:09Z",
        "comment": "> [...] as per\r\n> \r\n> https://github.com/math-comp/math-comp/blob/d6dc5741ba44808e5f2f01a238d972ec2c11737f/mathcomp/fingroup/Makefile#L3\r\n\r\nYes indeed @SkySkimmer, but... could the double quotes be guilty here?"
      },
      {
        "author": "SkySkimmer",
        "file": "mathcomp/Makefile.common",
        "date": "2018-10-31T11:43:09Z",
        "comment": "I think the issue is the double quotes, although they are a problem on this line not the grep line."
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "94dd4260f6e281ddf3c8e3320fdc239a94f50b6d",
        "message": "fix some bugs in Makefile",
        "date": "2018-10-26T09:41:50Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 218,
    "diff_summary": [
      {
        "file": "ChangeLog",
        "status": "M",
        "additions": 3,
        "deletions": 6
      },
      {
        "file": "mathcomp/ssreflect/eqtype.v",
        "status": "M",
        "additions": 3,
        "deletions": 6
      }
    ],
    "state": "merged",
    "open_date": "2018-08-07T17:27:31Z",
    "update_date": "2018-10-26T01:32:24Z",
    "discussion": [
      {
        "author": "gares",
        "date": "2018-08-11T10:51:35Z",
        "comment": "I think the changes should mention this (maybe someone is using this directly and forgot to import ssrfun)."
      },
      {
        "author": "CohenCyril",
        "date": "2018-09-12T13:45:21Z",
        "comment": "Should it be delayed to release 1.8.0 then?"
      }
    ],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: bug",
        "description": "Issue which describe bugs"
      },
      {
        "tag": "kind: refactoring",
        "description": "Issue or PR about a refactoring. (reorganizing the code, reusing theorems, simplifications...)"
      }
    ],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "a974272fbdb5d121a4ac3e47a716d7406f8571b9",
        "message": "removing multiple definitions of [tT]ag*\n\nthey are already defined in ssrfun\nChangeLog updated",
        "date": "2018-10-25T23:50:52Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 217,
    "diff_summary": [
      {
        "file": "ChangeLog",
        "status": "M",
        "additions": 88,
        "deletions": 0
      },
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 88,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2018-08-07T17:11:13Z",
    "update_date": "2018-10-25T07:39:14Z",
    "discussion": [
      {
        "author": "thery",
        "date": "2018-10-25T07:38:58Z",
        "comment": "merging before the meeting "
      }
    ],
    "review_discussion": [
      {
        "author": "thery",
        "file": "ChangeLog",
        "date": "2018-09-22T11:40:09Z",
        "comment": " `[seq E | i <- s & j <- t]`"
      },
      {
        "author": "CohenCyril",
        "file": "ChangeLog",
        "date": "2018-10-23T07:06:16Z",
        "comment": "The phrasing `[seq E | i <- s & j <- t i]` has the advantage to explicit the dependency of `i` in `t`, do you think it would rather be kept implicit in the doc?"
      },
      {
        "author": "thery",
        "file": "ChangeLog",
        "date": "2018-10-23T09:39:49Z",
        "comment": "From finset\r\n[set E | x in A, y in B] == the set of values of E for x drawn from A and \r\n                                        and y drawn from B; B may depend on x. \r\n"
      },
      {
        "author": "CohenCyril",
        "file": "ChangeLog",
        "date": "2018-10-24T17:54:10Z",
        "comment": "@thery ok, fixed"
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "044634dcc2f645e3afbdad6cb8dcc66f3eb4a87e",
        "message": "Adding allsigs, the dependent version of allpairs",
        "date": "2018-10-24T17:53:00Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 216,
    "diff_summary": [
      {
        "file": "ChangeLog",
        "status": "M",
        "additions": 61,
        "deletions": 0
      },
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 61,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2018-08-07T16:05:54Z",
    "update_date": "2018-09-13T16:39:23Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2018-08-07T16:07:00Z",
        "comment": "Depends on #201, please review only commit 0d41046cff37af7b85da0e771e3d25a4c640edbf"
      },
      {
        "author": "CohenCyril",
        "date": "2018-08-12T20:38:11Z",
        "comment": "@gares I could swear I saw a review from you in my notifications about this PR, however I cannot find it here... was I dreaming?"
      },
      {
        "author": "amahboubi",
        "date": "2018-09-03T09:25:25Z",
        "comment": "Hi @CohenCyril. This PR has more content than the title suggests. I see several independent natures of things: 1) lemmas in seq and (yet other) variants of contraposition with equalities 2) homo-mono-morphisms 3) generalization of extremas 4) infrastructures for chains of equivalences. I would agree to approve 1) and also may be 3) right away. I have a few questions about 2) and 4)."
      },
      {
        "author": "CohenCyril",
        "date": "2018-09-03T12:18:49Z",
        "comment": "> Hi @CohenCyril. This PR has more content than the title suggests. I see several independent natures of things: 1) lemmas in seq and (yet other) variants of contraposition with equalities 2) homo-mono-morphisms 3) generalization of extremas 4) infrastructures for chains of equivalences. I would agree to approve 1) and also may be 3) right away. I have a few questions about 2) and 4).\r\n\r\nHi @amahboubi, this is a dependent PR, you can post your comments about 1)2)3) in #201, only comments about 4) may go here.\r\n\r\n"
      },
      {
        "author": "CohenCyril",
        "date": "2018-09-05T08:30:24Z",
        "comment": "Hi @amahboubi, thanks for your comments.\r\nAn example is here: https://github.com/math-comp/finmap/blob/various_improvements/finmap.v#L2964-L2996"
      },
      {
        "author": "CohenCyril",
        "date": "2018-09-10T13:11:20Z",
        "comment": "> I think this is ok, but I would like to see an example of instance before merging. For now, it is a lone piece of infrastructure.\r\n\r\nDo you want to see examples inside the mathcomp library? Or is my finmap example enough?"
      },
      {
        "author": "amahboubi",
        "date": "2018-09-11T16:21:48Z",
        "comment": "Thanks for the pointer, @CohenCyril no I think this one is enough. I guess it is clear enough that the literature features \"the following are equivalent\"-style statements (hence the TFAE acronym naming of the aforementioned thread). May be would it be worth having this exact wording in a comment."
      },
      {
        "author": "CohenCyril",
        "date": "2018-09-12T09:41:03Z",
        "comment": "> May be would it be worth having this exact wording in a comment.\r\n\r\nOK"
      },
      {
        "author": "CohenCyril",
        "date": "2018-09-12T09:43:06Z",
        "comment": "BTW, when I have the time, I also want to contribute an extension of this where, when you want to prove the TFAE, you provide a graph, that can be computationally checked is strongly connected (by dfs, or Tarjan (e.g. https://github.com/CohenCyril/tarjan) :)) and we generate the implications to prove from the arrows of the graph."
      },
      {
        "author": "amahboubi",
        "date": "2018-09-12T09:45:16Z",
        "comment": "I am wondering: is it the appropriate workflow? I would like both to merge this (once you've implemented the 2 minor changes I requested) and to continue the discussion. It probably depend on when you want this to be merged."
      },
      {
        "author": "CohenCyril",
        "date": "2018-09-12T09:51:07Z",
        "comment": "When this pull request is merged, we should move the discussion to an issue we create to continue the discussion and start by refering to this PR for the record. Note also that we must not merge this pull request yet since it depends on PR #201"
      },
      {
        "author": "amahboubi",
        "date": "2018-09-12T09:55:09Z",
        "comment": ">  Note also that we must not merge this pull request yet since it depends on PR #201\r\n\r\nBut the code for the \"circular implications\" stuff is in fact independent isn't it?"
      },
      {
        "author": "CohenCyril",
        "date": "2018-09-12T10:39:16Z",
        "comment": "> But the \"circular implication\" code is in fact independent isn't it?\r\n\r\nNo, it relies on `homo_ltn`"
      },
      {
        "author": "amahboubi",
        "date": "2018-09-13T09:37:49Z",
        "comment": "This dependency is blocking an easier merge. Are your sure this is not overkill? \r\nIn my opinion the dependency is not essential: without the machinery introduced by #201, `homo_ltn` is an easy 2-liner:\r\n\r\n```\r\nLemma homo_ltn T (f : nat -> T) (r : T -> T -> Prop) :    \r\n  (forall y x z, r x y -> r y z -> r x z) ->    \r\n  (forall i, r (f i) (f i.+1)) -> {homo f : i j / i < j >-> r i j}.    \r\nProof.    \r\nmove=> rtrans rfS x y; elim: y x => // y ihy x; rewrite ltnS leq_eqVlt.\r\ncase/orP=> [/eqP-> // | ltxy]; apply: rtrans (rfS _); exact: ihy.\r\nQed.\r\n```"
      },
      {
        "author": "CohenCyril",
        "date": "2018-09-13T11:36:33Z",
        "comment": "> This dependency is blocking an easier merge. Are your sure this is not overkill?\r\n\r\nI would not say \"overkill\" is the word (because #201 is way more useful to me than this one in my other developments), but it can be made temporarily independent, yes. I rebased, if you are happy with the modifications, you can merge. I'll fix the proof again in €201."
      },
      {
        "author": "amahboubi",
        "date": "2018-09-13T12:00:34Z",
        "comment": "Agreed, my \"overkill\" referred to the dependency. Now the PR is much cleaner I think, thanks!\r\n"
      },
      {
        "author": "amahboubi",
        "date": "2018-09-13T12:00:50Z",
        "comment": "Last question before merging (once checks have all completed). I am wondering about how to formalize best the fact that proving any item of a TFAE is proving the conjunction of statements. But if you prefer, I can merge first and ask this question again in an issue."
      },
      {
        "author": "CohenCyril",
        "date": "2018-09-13T14:04:09Z",
        "comment": "> But if you prefer, I can merge first and ask this question again in an issue.\r\n\r\nyes please"
      }
    ],
    "review_discussion": [
      {
        "author": "amahboubi",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2018-09-03T12:34:56Z",
        "comment": "Annotate with the sort of the inductive."
      },
      {
        "author": "amahboubi",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2018-09-03T12:38:33Z",
        "comment": "Provide the type of the P0 argument."
      },
      {
        "author": "amahboubi",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2018-09-03T12:47:21Z",
        "comment": "What about having also a version of the lemma which does not rely on indices? Something like\r\n`forall P Q P0 Ps, all_iff P0 Ps -> P \\in P0 :: Ps -> Q \\in P0 :: Ps -> P -> Q`."
      },
      {
        "author": "amahboubi",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2018-09-03T12:55:27Z",
        "comment": "I was about to ask wether it is clear that the coercion should be `all_ifP`, as opposed to `all_iffLR`, but I think it's ok."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2018-09-10T13:08:28Z",
        "comment": "That is impossible, since these are lists of `Prop` and `\\in` is specialized to discrete types."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2018-09-10T13:08:42Z",
        "comment": "I will fix this."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2018-09-10T13:08:48Z",
        "comment": "Ok"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2018-09-10T13:10:40Z",
        "comment": "I also wondered, but I think this is better. (Of course it would even be better if `Hint View` supported this, but it's probably not necessary given the number of usecases...)"
      },
      {
        "author": "amahboubi",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2018-09-11T16:13:42Z",
        "comment": "Oops, sorry for the noise, I am doing too much classical stuff these days it seems :). Would it make sense to have a boolean version? Interestingly, this morning I found a related thread in the Lean users chat room: \r\nhttps://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/TFAE"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2018-09-11T17:03:17Z",
        "comment": "@amahboubi thanks for the pointer. As for booleans I do not think it would make sense: since it is a small scale reflexion tactic, the `P \\in Ps` should be convertible to true whenever a property is in the list, but is won't ever happen (except for `true` and `false`, which is not very intersting)"
      },
      {
        "author": "amahboubi",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2018-09-12T08:11:59Z",
        "comment": "I did not mean a boolean version of this particular lemma per se, but more generally a support for boolean TFAE, i.e. a notation for lists of boolean statements that are pairwise equivalent. The expected benefit would not be the computational behaviour but classical reasoning. For instance you can state that they are either all valid, or all wrong."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2018-09-12T09:39:15Z",
        "comment": "Would it a combination of `all_if` together with with `eq_true_iff_eq` to get equalities and with `equivP idP` to get reflects?"
      },
      {
        "author": "amahboubi",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2018-09-13T14:23:00Z",
        "comment": "alle -> all"
      },
      {
        "author": "amahboubi",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2018-09-13T14:23:40Z",
        "comment": "spurious '('"
      },
      {
        "author": "amahboubi",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2018-09-13T14:31:47Z",
        "comment": "I do not understand this comment line. What about:\r\n`We introduce a specific conjunction, used to chain the consecutive items in a circular list of implications.` "
      }
    ],
    "tags": [
      {
        "tag": "kind: enhancement",
        "description": "Issue or PR about addition of features."
      }
    ],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "8d8432614e3849ff35f03f098b1a17b4ce41651a",
        "message": "Small scale tool for proving \"the following are equivalent\"\n\nTool to prove only P0 -> P1 -> ... -> Pn -> P0\nbut use any implication Pi -> Pj",
        "date": "2018-09-13T14:56:37Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 214,
    "diff_summary": [
      {
        "file": "mathcomp/Makefile",
        "status": "M",
        "additions": 44,
        "deletions": 41
      },
      {
        "file": "mathcomp/Makefile.common",
        "status": "M",
        "additions": 44,
        "deletions": 41
      },
      {
        "file": "mathcomp/ssreflect/Makefile",
        "status": "M",
        "additions": 44,
        "deletions": 41
      },
      {
        "file": "mathcomp/ssreflect/Makefile.detect-coq-version",
        "status": "M",
        "additions": 44,
        "deletions": 41
      }
    ],
    "state": "merged",
    "open_date": "2018-08-01T11:29:39Z",
    "update_date": "2018-08-01T13:40:17Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "b83fe0ed8a8e7258c8cf55178dd619b743c8342e",
        "message": "simplified, cleaned and documented Makefile.common",
        "date": "2018-08-01T11:26:03Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 213,
    "diff_summary": [
      {
        "file": "mathcomp/Makefile",
        "status": "D",
        "additions": 170,
        "deletions": 221
      },
      {
        "file": "mathcomp/Makefile.common",
        "status": "D",
        "additions": 170,
        "deletions": 221
      },
      {
        "file": "mathcomp/algebra/Makefile",
        "status": "D",
        "additions": 170,
        "deletions": 221
      },
      {
        "file": "mathcomp/all/Makefile",
        "status": "D",
        "additions": 170,
        "deletions": 221
      },
      {
        "file": "mathcomp/character/Makefile",
        "status": "D",
        "additions": 170,
        "deletions": 221
      },
      {
        "file": "mathcomp/field/Makefile",
        "status": "D",
        "additions": 170,
        "deletions": 221
      },
      {
        "file": "mathcomp/fingroup/Makefile",
        "status": "D",
        "additions": 170,
        "deletions": 221
      },
      {
        "file": "mathcomp/solvable/Makefile",
        "status": "D",
        "additions": 170,
        "deletions": 221
      },
      {
        "file": "mathcomp/ssreflect/Makefile",
        "status": "D",
        "additions": 170,
        "deletions": 221
      },
      {
        "file": "mathcomp/ssreflect/Makefile.coq-makefile",
        "status": "D",
        "additions": 170,
        "deletions": 221
      },
      {
        "file": "mathcomp/ssreflect/Makefile.detect-coq-version",
        "status": "D",
        "additions": 170,
        "deletions": 221
      },
      {
        "file": "mathcomp/ssreflect/plugin/v8.6/ssrbool.v",
        "status": "D",
        "additions": 170,
        "deletions": 221
      },
      {
        "file": "mathcomp/ssreflect/plugin/v8.6/ssreflect.ml4",
        "status": "D",
        "additions": 170,
        "deletions": 221
      },
      {
        "file": "mathcomp/ssreflect/plugin/v8.6/ssreflect.v",
        "status": "D",
        "additions": 170,
        "deletions": 221
      },
      {
        "file": "mathcomp/ssreflect/plugin/v8.6/ssreflect_plugin.mlpack",
        "status": "D",
        "additions": 170,
        "deletions": 221
      },
      {
        "file": "mathcomp/ssreflect/plugin/v8.6/ssrfun.v",
        "status": "D",
        "additions": 170,
        "deletions": 221
      }
    ],
    "state": "merged",
    "open_date": "2018-07-31T09:01:47Z",
    "update_date": "2018-08-01T09:48:10Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2018-07-31T15:26:57Z",
        "comment": "@gares I updated my pull request, what do you think now?"
      }
    ],
    "review_discussion": [
      {
        "author": "gares",
        "file": "mathcomp/Makefile",
        "date": "2018-07-31T09:32:36Z",
        "comment": "This part should go I guess, or be replaced by `git archive ...`"
      },
      {
        "author": "gares",
        "file": "mathcomp/ssreflect/Makefile.coq-makefile",
        "date": "2018-07-31T09:40:55Z",
        "comment": "this looks dead code to me"
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "4199c23da311e612cb1ae45cf5519b5f3947c3b3",
        "message": "Rework the whole Makefile architecture\n\n- Cleanup, refactoring and generalize the makefile architecture\n- Reuses @strub math-comp/analysis Makefile / Makefile.common organization\n- As #174, this fixes #88, but looks more stable than trying to fix the use of the MAKEFLAGS internal variable",
        "date": "2018-07-31T09:38:53Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "7d7b0688c818c5dde68d2b2bfc8ba3aecfe017d6",
        "message": "removing dead code + reshuffling stuff",
        "date": "2018-07-31T13:41:45Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "1a4a4b1cd2407ffd8b76fb544596d1c91ea63a4b",
        "message": "some things should always be done",
        "date": "2018-07-31T13:58:21Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "5892b9b06ec9cd16584c4c56884949c23949cffe",
        "message": "change coqdep",
        "date": "2018-07-31T14:06:28Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "629a7a065146679f14f95abf1de63a7ff3a2eacc",
        "message": "agressive fix for duplicated files!",
        "date": "2018-07-31T14:17:07Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 211,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "A",
        "additions": 367,
        "deletions": 27
      },
      {
        "file": "mathcomp/Make",
        "status": "A",
        "additions": 367,
        "deletions": 27
      },
      {
        "file": "mathcomp/Make.test-suite",
        "status": "A",
        "additions": 367,
        "deletions": 27
      },
      {
        "file": "mathcomp/algebra/fraction.v",
        "status": "A",
        "additions": 367,
        "deletions": 27
      },
      {
        "file": "mathcomp/algebra/ssrnum.v",
        "status": "A",
        "additions": 367,
        "deletions": 27
      },
      {
        "file": "mathcomp/ssreflect/Make",
        "status": "A",
        "additions": 367,
        "deletions": 27
      },
      {
        "file": "mathcomp/ssreflect/all_ssreflect.v",
        "status": "A",
        "additions": 367,
        "deletions": 27
      },
      {
        "file": "mathcomp/ssreflect/ssrAC.v",
        "status": "A",
        "additions": 367,
        "deletions": 27
      },
      {
        "file": "mathcomp/test_suite/test_ssrAC.v",
        "status": "A",
        "additions": 367,
        "deletions": 27
      }
    ],
    "state": "merged",
    "open_date": "2018-07-29T14:27:09Z",
    "update_date": "2020-04-07T17:36:49Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2018-07-30T21:17:13Z",
        "comment": "Hi @pi8027! I have had this small dev pending for a while, and after listening to your talk I revived it.\r\nThe difference with you work is the fact that the shapes of the terms have to be provided by hand, and the comparison function is not using a merge sort but some kind of spaghetti sort instead.\r\nThere would be some ltac plumbery to do to compute the shapes from `LHS` and `RHS` in ltac and `apply: (AC shape_lhs shape_rhs).`"
      },
      {
        "author": "pi8027",
        "date": "2018-07-31T05:15:51Z",
        "comment": "@CohenCyril I discovered many clever techniques in your code! I am especially surprised that your \"spaghetti sort\" can be done in O(n log n). Thanks for sharing your work.\r\n\r\nHere I point out an issue I found (but I don't know how can we solve it...):\r\n- https://github.com/CohenCyril/math-comp/blob/aab7a3be907430c131f51c844686c56de24c8bcf/mathcomp/ssrtest/test_ssrAC.v#L5,\r\n  https://github.com/CohenCyril/math-comp/blob/aab7a3be907430c131f51c844686c56de24c8bcf/mathcomp/ssrtest/test_ssrAC.v#L9\r\n  Some `orb_comoid`s and `addn_comoid`s are left in the goal after rewriting."
      },
      {
        "author": "pi8027",
        "date": "2018-07-31T05:45:57Z",
        "comment": "- https://github.com/CohenCyril/math-comp/blob/aab7a3be907430c131f51c844686c56de24c8bcf/mathcomp/ssreflect/ssrAC.v#L210\r\n  `have: pat' = ord by reflexivity` can be replaced with `unify pat' ord` or `unify pat ord`. It would be a smarter way to invoke the convertibility test.\r\n- https://github.com/CohenCyril/math-comp/blob/aab7a3be907430c131f51c844686c56de24c8bcf/mathcomp/ssreflect/ssrAC.v#L213\r\n  In this context, `vm_compute; reflexivity` seems to be equivalent to `reflexivity`. (I don't know which one is efficient.)"
      },
      {
        "author": "CohenCyril",
        "date": "2018-07-31T07:18:58Z",
        "comment": "@pi8027 Thank you for your positive feedback! I am glad you found it interesting.\r\n\r\n> I am especially surprised that your \"spaghetti sort\" can be done in O(n log n). Thanks for sharing your work.\r\n\r\nI did not take the time to check (did you?) but I believe it is indeed O(n log n) in time and a call stack of size O(log n).\r\n\r\n> Some orb_comoids and addn_comoids are left in the goal after rewriting.\r\n\r\nThis is unavoidable when the rule is quantified over a monoid law, (indeed lemmas `Monoid.mulm1` ... leave similar overhead). The goal can be simplified using `/=`, and if you really do not want this, you may use the `op.[AC p s]` rule instead.\r\n\r\n> have: pat' = ord by reflexivity can be replaced with unify pat' ord or unify pat ord. It would be a smarter way to invoke the convertibility test.\r\n\r\nAFAIK, `unify x y` invokes unification, which in this case is not necessary because the terms must be ground, and it might be less efficient (wouldn't it?)\r\n\r\n> In this context, vm_compute; reflexivity seems to be equivalent to reflexivity. (I don't know which one is efficient.)\r\n\r\n`vm_compute; reflexivity` inserts a vm cast to make the computation using the VM instead of the abstract machine, so should be more efficient. I guess this whole `ltac: ()` notation could be replaced by `(isT <: _)`, but it would prevent me from producing a nice error message."
      },
      {
        "author": "CohenCyril",
        "date": "2018-07-31T07:22:06Z",
        "comment": "@maximedenes this is how I encountered the issue https://github.com/coq/coq/issues/8190"
      },
      {
        "author": "pi8027",
        "date": "2018-08-01T03:13:37Z",
        "comment": "@CohenCyril\r\n\r\n> I did not take the time to check (did you?) but I believe it is indeed O(n log n) in time and a call stack of size O(log n).\r\n\r\nProof. Let us suppose that a reordering `s: syntax` consists of m leaves and the largest leaf in `s` is n. It is easy to check that the height of `acc: env N` is always less than or equal to (log_2 n + 1) during the execution of `content s`. Each `set_pos 0%num Nsucc acc n` does only two things: [part 1: O(log n)] reconstructs a path in `acc` from the root to the node of position `n` and [part 2: O(log m)] increments the node value of position `n`. The whole sorting process `content s` repeats `set_pos ...` m times and can be done in O(m log(nm)). In this usage, well-formed reordering syntax holds the equation n = m (right?). So the sorting can be done in O(n log n) time complexity. ■\r\n\r\nHowever, `content` may consume the call stack linearly. I think that it can't be solved.\r\n\r\n> This is unavoidable when the rule is quantified over a monoid law, (indeed lemmas Monoid.mulm1 ... leave similar overhead). The goal can be simplified using /=, and if you really do not want this, you may use the op.[AC p s] rule instead.\r\n\r\nI understood it. Thank you.\r\n\r\n> vm_compute; reflexivity inserts a vm cast to make the computation using the VM instead of the abstract machine, so should be more efficient. I guess this whole ltac: () notation could be replaced by (isT <: _), but it would prevent me from producing a nice error message.\r\n\r\nI compared `reflexivity` and `vm_compute; reflexivity` in some examples. You were right!\r\n\r\n> AFAIK, unify x y invokes unification, which in this case is not necessary because the terms must be ground, and it might be less efficient (wouldn't it?)\r\n\r\nI compared two normalized ground terms by `unify` and `reflexivity`. The following example seems to indicate that the `unify` tactic is slightly better on efficiency.\r\n\r\n```\r\nRequire Import ssreflect Arith ZArith.\r\n\r\nGoal False.\r\nProof.\r\nlet x := constr: ((1000 ^ 2000)%Z) in\r\nlet y := constr: ((1000000 ^ 1000)%Z) in\r\nlet x' := eval vm_compute in x in\r\nlet y' := eval vm_compute in y in\r\n(time unify x' y');\r\n(time let _ := constr: (eq_refl _ : x' = y') in idtac);\r\n(time have _: x' = y' by reflexivity).\r\n(*\r\nTactic call ran for 0.007 secs (0.007u,0.s) (success)\r\nTactic call ran for 0.02 secs (0.019u,0.s) (success)\r\nTactic call ran for 0.179 secs (0.18u,0.s) (success)\r\n*)\r\nAbort.\r\n```"
      },
      {
        "author": "CohenCyril",
        "date": "2018-08-01T08:02:01Z",
        "comment": "@pi8027 \r\n> Proof [...] ■\r\n\r\nYeah I'm convinced by your proof.\r\n\r\n> However, `content` may consume the call stack linearly. I think that it can't be solved.\r\n\r\nI'd say both `content` and `set_pos` occupy O(log n) of the stack each, because there is one non tail recursive call in each.\r\nI replaced `set_pos` by a tail recursive alternative `set_pos_trec` (using Huet's zipper), so that only the non tail recursive calls of `content` consume the stack, and I think that is the best I can do.\r\n\r\n> I compared two normalized ground terms by `unify` and `reflexivity`. The following example seems to indicate that the `unify` tactic is slightly better on efficiency.\r\n\r\nI am surprised...\r\n"
      },
      {
        "author": "CohenCyril",
        "date": "2018-08-01T08:31:25Z",
        "comment": "> I'd say both content and set_pos occupy O(log n) of the stack each, because there is one non tail recursive call in each.\r\n\r\noh, but each continuation contains a tree of half of the size of the argument..."
      },
      {
        "author": "pi8027",
        "date": "2018-08-01T09:52:13Z",
        "comment": "@CohenCyril\r\n\r\n> I am surprised...\r\n\r\nIt is easy to check that `reflexivity` may instantiate existential variables like as `unify`. So I guess that `have _: x = y by reflexivity` and `unify x y` have the same behavior for any `x` and `y`. However, the former one does some additional tasks: trying to instantiate the goal and type checking of `erefl: x = y` (that includes convertibility test `x =? y`). Your neighbors would know whether my understanding is correct or not, and more details. :)"
      },
      {
        "author": "gares",
        "date": "2018-08-01T13:51:38Z",
        "comment": "The only comment I have right now is that, as for under, there is quite some ltac code.\r\n\r\nI think it is good to make a prototype and let people play with it, but at some point things should be rewritten in ML, so that one can just call `whd_all` rather than going trough notations and tactics-in-terms to perform some reduction on the given term."
      },
      {
        "author": "amahboubi",
        "date": "2018-08-29T15:47:03Z",
        "comment": "Hi, I think that it is great to have this code available, but I also think that it is not ready (yet) for merge. The roadmap is probably something to be discussed in the next dev working group. By the way, could you document the (names of the) constants that are the user's environment after a `Require Import ssr_AC`?"
      },
      {
        "author": "CohenCyril",
        "date": "2018-09-05T08:44:29Z",
        "comment": "Hi @amahboubi right now the following notations are exported:\r\n* `AC_check_pattern`, `AC_strategy`, `opACof law p s`, `opAC op p s`, `opACl op s` which are internal (but outside of the module `AC` for technical reason (namely too agressive name substitution in ltac in notation (not sure this is a bug though...)))\r\n* `op .[ 'ACof' p s ]`, `op .[ 'AC' p s ]`, `op .[ 'ACl' s ]`, `ACof p s`, `AC p s` and `ACl s` which are documented in the header (I realize now a scope is missing for non simple notations, this must be fixed).\r\n* `1` and `x * y` in scope `AC_scope` (shortened with `%AC` which is bound to the right arguments of the previous notations, so no explicit `%AC` is required). Also documented in the header (except for the scope).\r\n\r\nAnd all the exported constants are prefixed with module `AC`.\r\n\r\nDo you want me to add this to the header?"
      },
      {
        "author": "CohenCyril",
        "date": "2019-11-27T18:01:03Z",
        "comment": "This PR needs an assignee..."
      },
      {
        "author": "affeldt-aist",
        "date": "2020-03-25T15:40:00Z",
        "comment": "From the release managers for 1.11: does this PR really need propagation? Could it be merged as is and an issue be opened to propagate?"
      },
      {
        "author": "CohenCyril",
        "date": "2020-03-25T15:52:03Z",
        "comment": "I would be happy that this merged, but it has not been reviewed and it had no assignee... and I guess it is difficult to assess. It should at least be rebased, let me do that first..."
      },
      {
        "author": "CohenCyril",
        "date": "2020-03-26T15:42:11Z",
        "comment": "I rewrote some proof scripts using ssrAC, just for the example. Two are significantly shorter but were badly written in the first place.\r\nIt is very likely that this tool will essentially help during proof development, but that final refactoring of proofs will hopefully get rid of it... but I guess it is a useful  tool for that purpose.\r\n\r\nAs such, I will remove the \"needs: propagation\" label. If we change our minds we can reestablish it. I am also in favor of having this part of the beta, and withdraw it in the final release if necessary (as I said in my previous post)"
      },
      {
        "author": "gares",
        "date": "2020-03-26T16:22:51Z",
        "comment": "Some versions of Coq fail with message `The term \"2\" has type \"nat\" while it is expected to have type\r\n \"GRing.Ring.sort ?R1\"`.\r\n\r\nI personally don't care about 8.7..8.9 much, but if this PR is the *only* reason to drop compatibility with them, then I'm not in favor of merging it \"as it is\"."
      },
      {
        "author": "CohenCyril",
        "date": "2020-03-26T17:34:17Z",
        "comment": "> Some versions of Coq fail with message `The term \"2\" has type \"nat\" while it is expected to have type \"GRing.Ring.sort ?R1\"`.\r\n> \r\n> I personally don't care about 8.7..8.9 much, but if this PR is the _only_ reason to drop compatibility with them, then I'm not in favor of merging it \"as it is\".\r\n\r\nYou are right, we should not lose compatibility and the tests and the main file used to passe.\r\nI tried to rewrite some parts of the libraries but it seems I messed with scopes somehow, I will look into it by tomorrow noon."
      },
      {
        "author": "CohenCyril",
        "date": "2020-04-06T10:26:27Z",
        "comment": "@gares @affeldt-aist @ybertot should we integrate it?"
      },
      {
        "author": "ybertot",
        "date": "2020-04-06T12:20:48Z",
        "comment": "ping @gares"
      }
    ],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: enhancement",
        "description": "Issue or PR about addition of features."
      }
    ],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "a0d310fef7b4023793e74af103955e2dd8832faf",
        "message": "Rewriting with AC (not modulo AC), using a small scale command.\n\nThis replaces opA, opC, opAC, opCA, ... and any combinations of them\n\n- Right now the rewrite relies on an rather efficient computation\n  of perm_eq using a \"spaghetti sort\" in O(n log n)\n- Wrongly formed AC statements send error messages showing the\n  discrepancy between LHS and RHS patterns.\n\n Usage :\n   rewrite [pattern](AC operator pattern-shape re-ordering)\n   rewrite [pattern](ACl operator re-ordering)\n\n - pattern is optional, as usual,\n - operator must have a canonical Monoid.com_law structure\n   (additions, multiplications, conjunction and disjunction do)\n - pattern-shape is expressed using the syntax\n      p := n | p * p'\n      where \"*\" is purely formal\n        and n > 0 is number of left associated symbols\n   examples of pattern shapes:\n   + 4 represents (n * m * p * q)\n   + (1*2) represents (n * (m * p))\n - re-ordering is expressed using the syntax\n     s := n | s * s'\n   where \"*\" is purely formal and n is the position in the LHS\n\n If the ACl variant is used, the pattern-shape defaults to the\n pattern fully associated to the left i.e. n i.e (x * y * ...)\n\n Examples of re-orderings:\n - ACl op ((0*1)*2) is the identity (and should fail to rewrite)\n - opAC == ACl op ((0*2)*1) == AC op 3 ((0*2)*1)\n - opCA == AC op (2*1) (0*1*2)\n - rewrite opCA -opA == rewrite (ACl op (0*(2*1))\n - opACA == AC (2*2) ((0*2)*(1*3))",
        "date": "2020-04-06T10:40:23Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "a00523aee7c13fa5c2a2025ac2fe9412ad7ca5ee",
        "message": "Some proof scripts made better using ssrAC.\n\n%AC annotation are for backward compatilibity with coq <= 8.9",
        "date": "2020-04-06T10:40:23Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 210,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "A",
        "additions": 420,
        "deletions": 0
      },
      {
        "file": "mathcomp/algebra/polyn.v",
        "status": "A",
        "additions": 420,
        "deletions": 0
      }
    ],
    "state": "open",
    "open_date": "2018-07-28T22:42:44Z",
    "update_date": "2021-05-19T08:20:49Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2018-07-28T22:43:13Z",
        "comment": "depends on #209 "
      },
      {
        "author": "thery",
        "date": "2018-10-09T16:23:04Z",
        "comment": "polyn should be added to all the Make (?) and all_algebra.v"
      },
      {
        "author": "CohenCyril",
        "date": "2019-11-27T18:01:23Z",
        "comment": "This PR needs an assignee"
      },
      {
        "author": "chdoc",
        "date": "2020-11-04T10:16:35Z",
        "comment": "@CohenCyril , has there been progress since last year, is there a clear roadmap, or should this be downgraded to a draft and de-milestoned? \r\n@ybertot would you be willing to self-assign, or can someone suggest another assignee?"
      }
    ],
    "review_discussion": [
      {
        "author": "thery",
        "file": "mathcomp/algebra/polyn.v",
        "date": "2018-08-04T07:26:21Z",
        "comment": "Don't like much this notation. As there is poly_n it should 'X_n^i or 'X^i_n but I guess this is not possible"
      },
      {
        "author": "thery",
        "file": "mathcomp/algebra/polyn.v",
        "date": "2018-08-04T07:27:20Z",
        "comment": "Should lagragian polynomials be defined first in poly. Then lifted as a base in polyn\r\n"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/polyn.v",
        "date": "2018-08-06T13:53:03Z",
        "comment": "- `'X_n^i` would conflict with the multivariate polynomials of Pierre-Yves\r\n- `'X^i_n` might be conflict with `'X^i` from poly..."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/polyn.v",
        "date": "2018-08-06T13:55:50Z",
        "comment": "maybe.... not sure about this... do Lagrange polynomial have another use than as interpolation or basis of R_n[X]?"
      },
      {
        "author": "thery",
        "file": "mathcomp/algebra/polyn.v",
        "date": "2018-08-06T13:58:32Z",
        "comment": "Could 'X^i be canonically a {poly_n _}?\r\n"
      },
      {
        "author": "thery",
        "file": "mathcomp/algebra/polyn.v",
        "date": "2018-08-06T14:01:43Z",
        "comment": "I don't know, I would not search interpolation under polyn\r\n"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/polyn.v",
        "date": "2018-08-08T12:05:09Z",
        "comment": "@thery yes I think so, provided `(i : 'I_n)`, you are right, I think this is the way to go... and same for `lagrange`."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/polyn.v",
        "date": "2018-08-08T12:06:42Z",
        "comment": "ok! Do you have an opinion on whether `x` should be of type `seq F`, `nat -> F`, `n.-tupleF` or `F ^ n`?"
      },
      {
        "author": "thery",
        "file": "mathcomp/algebra/polyn.v",
        "date": "2018-08-08T12:47:19Z",
        "comment": "a priori n.-tuple F :\r\n  lagrange takes a tuple and returns a tuple.\r\n\r\nWe could also have\r\nF^n \r\nthen lagrange should return a  {poly_n ...}^ n"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/polyn.v",
        "date": "2018-08-08T12:51:30Z",
        "comment": "lagrange should return a basis of a vector space, so it must be a tuple"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/polyn.v",
        "date": "2018-08-08T12:53:52Z",
        "comment": "But if it returns a tuple, then it should be of type `n.-tuple {poly_n F}` because otherwise there is no way to get it canonically."
      },
      {
        "author": "thery",
        "file": "mathcomp/algebra/polyn.v",
        "date": "2018-08-08T13:01:19Z",
        "comment": "`n.tuple F -> n.-tuple {poly_n F}`  looks ok \r\n"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/polyn.v",
        "date": "2018-08-08T13:06:21Z",
        "comment": "so we duplicate `lagrange`? One in poly `lagrange: n.tuple F -> n.-tuple {poly F}` and one in npoly of type `lagrange_basis : n.tuple F -> n.-tuple {poly_n F}` with a theorem: ``lagrange_basis`_i = lagrange`_i :> {poly F}``, and no possible canonical structure (because the previous equality will not be jugmental).\r\nOr could it be jugmental?"
      }
    ],
    "tags": [
      {
        "tag": "kind: enhancement",
        "description": "Issue or PR about addition of features."
      },
      {
        "tag": "needs: fix",
        "description": "PR that needs to be fix (generally because reviewers asked to)."
      }
    ],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "78b2d6b056932600abd013c9fe8dabbd8c8f3a83",
        "message": "The vector space of bounded degree polynomials\n\nIncludes a decidable predicate for irreducibly of polynomials of\nbounded size over a finite field, and the 'X^i and lagrange basis.",
        "date": "2019-05-24T14:35:48Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "8de372729390802175399e6ea4c3554c045c8e11",
        "message": "update ChangeLog",
        "date": "2019-05-24T14:39:13Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 209,
    "diff_summary": [
      {
        "file": "ChangeLog",
        "status": "M",
        "additions": 692,
        "deletions": 625
      },
      {
        "file": "mathcomp/Make",
        "status": "M",
        "additions": 692,
        "deletions": 625
      },
      {
        "file": "mathcomp/algebra/Make",
        "status": "M",
        "additions": 692,
        "deletions": 625
      },
      {
        "file": "mathcomp/algebra/all_algebra.v",
        "status": "M",
        "additions": 692,
        "deletions": 625
      },
      {
        "file": "mathcomp/field/countalg.v",
        "status": "M",
        "additions": 692,
        "deletions": 625
      },
      {
        "file": "mathcomp/algebra/finalg.v",
        "status": "M",
        "additions": 692,
        "deletions": 625
      },
      {
        "file": "mathcomp/algebra/matrix.v",
        "status": "M",
        "additions": 692,
        "deletions": 625
      },
      {
        "file": "mathcomp/algebra/poly.v",
        "status": "M",
        "additions": 692,
        "deletions": 625
      },
      {
        "file": "mathcomp/algebra/rat.v",
        "status": "M",
        "additions": 692,
        "deletions": 625
      },
      {
        "file": "mathcomp/algebra/ssrint.v",
        "status": "M",
        "additions": 692,
        "deletions": 625
      },
      {
        "file": "mathcomp/algebra/zmodp.v",
        "status": "M",
        "additions": 692,
        "deletions": 625
      },
      {
        "file": "mathcomp/field/Make",
        "status": "M",
        "additions": 692,
        "deletions": 625
      },
      {
        "file": "mathcomp/field/algC.v",
        "status": "M",
        "additions": 692,
        "deletions": 625
      },
      {
        "file": "mathcomp/field/algebraics_fundamentals.v",
        "status": "M",
        "additions": 692,
        "deletions": 625
      },
      {
        "file": "mathcomp/field/all_field.v",
        "status": "M",
        "additions": 692,
        "deletions": 625
      },
      {
        "file": "mathcomp/field/closed_field.v",
        "status": "M",
        "additions": 692,
        "deletions": 625
      }
    ],
    "state": "merged",
    "open_date": "2018-07-28T22:38:14Z",
    "update_date": "2018-10-26T02:35:34Z",
    "discussion": [
      {
        "author": "amahboubi",
        "date": "2018-09-04T10:28:09Z",
        "comment": "HI @CohenCyril. What is the status of this PR? The conflicts seem easy to solve. If I understand correctly, the scopes of the definitions and notations supporting your monadic style are limited to the ClosedFieldQE module, in library closed_field, module which is not imported, right?"
      },
      {
        "author": "gares",
        "date": "2018-09-05T06:29:57Z",
        "comment": "The monadic style seem a great improvement, I cant believe I'm writing this.\r\n\r\nPersonally I'd prefer making bind and return 2 keywords and use that in place of 'let and ret. "
      },
      {
        "author": "CohenCyril",
        "date": "2018-09-05T08:03:32Z",
        "comment": "> What is the status of this PR?\r\n\r\n@amahboubi I've been bad, this PR contains too many things. Now I told @ggonthier and you about the fintype+counttype-refactoring part.\r\n\r\n> If I understand correctly, the scopes of the definitions and notations supporting your monadic style are limited to the ClosedFieldQE module, in library closed_field, module which is not imported, right?\r\n\r\nYes\r\n\r\n> The conflicts seem easy to solve.\r\n\r\nYes, the so-called conflict are just about rebasing the ChangeLog onto the previous PR that got merged"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "bccc54dc85e2d9cd7248c24a576d6092630fb51d",
        "message": "moving countalg and closed_field around\n\n- countalg goes to the algebra package\n- finalg now get the expected inheritance from countalg\n- closed_field now contains the construction of algebraic closure for countable fields (previously in countalg)\n- proof of quantifier elimination for closed field rewritten in a monadic style",
        "date": "2018-10-26T01:33:07Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 208,
    "diff_summary": [
      {
        "file": "ChangeLog",
        "status": "M",
        "additions": 81,
        "deletions": 7
      },
      {
        "file": "mathcomp/algebra/mxpoly.v",
        "status": "M",
        "additions": 81,
        "deletions": 7
      }
    ],
    "state": "merged",
    "open_date": "2018-07-28T12:14:15Z",
    "update_date": "2018-08-06T20:28:33Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2018-08-06T14:40:48Z",
        "comment": "@thery \r\n> Just a stupid comment:\r\n> is there a reason to define it\r\n> differently than in https://en.wikipedia.org/wiki/Companion_matrix\r\n\r\nYes there is one: the companion matrix should act on row basis vector and not column matrix vectors.\r\nAs for why just not choosing the transpose, it's a bit arbitrary.\r\nThis one has the property that\r\n```coq\r\nforall i j : 'I_(size p).-1, i <= j -> delta_mx 0 j *m companion_mx p ^ i = delta_mx 0 (j - i) \r\n```\r\n(and we should prove it and add it to the lib)\r\nwhile the traditional one can be obtained by conjugation with the matrix_perm of the reversal permutation and the property it would satisfy would be:\r\n```coq\r\nforall i j : 'I_(size p).-1, 0 < i -> i + j <= (size p) -> delta_mx 0 i *m companion_mx p ^ i = delta_mx 0 (i + j) \r\n```\r\nwhich maybe looks a bot more complicated...\r\n\r\n"
      },
      {
        "author": "thery",
        "date": "2018-08-06T14:50:25Z",
        "comment": "Is what you explain relates to the linear recurrence section in the wiki page?\r\nIn this case we should take the transpose"
      },
      {
        "author": "CohenCyril",
        "date": "2018-08-06T17:35:23Z",
        "comment": "@thery I changed it"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "a1dd9b3fcb9d5dbac3c75466d9a92ddb181c8da3",
        "message": "Companion matrix of a polynomial",
        "date": "2018-08-01T13:58:58Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "ceec387c6e912f83b918955011caacc14a825da3",
        "message": "update ChangeLog and doc",
        "date": "2018-08-03T10:59:32Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "8d1832eea4abe8873423e76c307ab54bbeb84456",
        "message": "changing companionmx to a more standard one",
        "date": "2018-08-06T17:34:27Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 207,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "A",
        "additions": 2569,
        "deletions": 0
      },
      {
        "file": "mathcomp/Make",
        "status": "A",
        "additions": 2569,
        "deletions": 0
      },
      {
        "file": "mathcomp/algebra/Make",
        "status": "A",
        "additions": 2569,
        "deletions": 0
      },
      {
        "file": "mathcomp/algebra/all_algebra.v",
        "status": "A",
        "additions": 2569,
        "deletions": 0
      },
      {
        "file": "mathcomp/algebra/forms.v",
        "status": "A",
        "additions": 2569,
        "deletions": 0
      },
      {
        "file": "mathcomp/algebra/mxred.v",
        "status": "A",
        "additions": 2569,
        "deletions": 0
      },
      {
        "file": "mathcomp/algebra/spectral.v",
        "status": "A",
        "additions": 2569,
        "deletions": 0
      }
    ],
    "state": "open",
    "open_date": "2018-07-27T18:45:28Z",
    "update_date": "2021-05-19T08:20:54Z",
    "discussion": [
      {
        "author": "pi8027",
        "date": "2021-01-26T00:58:36Z",
        "comment": "@CohenCyril Do you plan to have orthogonal complementation of vector subspaces here?"
      },
      {
        "author": "CohenCyril",
        "date": "2021-01-27T09:49:08Z",
        "comment": "> @CohenCyril Do you plan to have orthogonal complementation of vector subspaces here?\r\n\r\nThere is at matrix level, and everything should be lifted to vector spaces. So yes."
      }
    ],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: enhancement",
        "description": "Issue or PR about addition of features."
      },
      {
        "tag": "needs: more development",
        "description": "PR that needs to be developed further."
      }
    ],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "9e82eb8ba8d46ca42434fd8acab9117d8ecc6e42",
        "message": "mxred",
        "date": "2021-03-09T13:17:32Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "468e59542ea057f43726c08924807cd2b788f9a8",
        "message": "Initial Import of spectral theorem and bilinear forms\n\n- Adding bilinear, sesquilinear, hermitian (symmetric, skew symmetric and hermitian) to mathcomp\n- Fixing a proof of the spectral theorem accordingly\n- Need to document\n- Need to backport several theorems to matrix, vector or mxalgebra\n- Need to bridge vector and mxalgebra to port results",
        "date": "2021-03-09T13:17:32Z"
      }
    ]
  },
  {
    "author": "anton-trunov",
    "number": 205,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/ssrnat.v",
        "status": "M",
        "additions": 9,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2018-07-24T15:18:54Z",
    "update_date": "2018-07-27T15:43:40Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2018-07-24T17:20:36Z",
        "comment": "Actually, I'm mistaken, ... `AC` refers to commutativity modulo associativity... and in your case, it does both associativity and commutativity... the corresponding statement should in fact be: \r\n```\r\naddnBAC m n p : n <= m -> m - n + p = m + p - n.\r\n```\r\n"
      },
      {
        "author": "CohenCyril",
        "date": "2018-07-24T17:23:13Z",
        "comment": "For completeness, I suggest to add the following three lemmas:\r\n```\r\nLemma addnBAC m n p : n <= m -> m - n + p = m + p - n.\r\nProof. by move=> le_nm; rewrite addnC addnBA // addnC. Qed.\r\n\r\nLemma addnBCA m n p : p <= m -> p <= n -> m + (n - p) = n + (m - p).\r\nProof. by move=> le_pm le_pn; rewrite !addnBA // addnC. Qed.\r\n\r\nLemma addnABC m n p : p <= m -> p <= n -> m + (n - p) = m - p + n.\r\nProof. by move=> le_pm le_pn; rewrite addnBA // addnBAC. Qed.\r\n```\r\n(I'm still unsure about the name of the last one)"
      },
      {
        "author": "anton-trunov",
        "date": "2018-07-24T17:40:44Z",
        "comment": "Thanks a lot @CohenCyril! I wasn't really sure about the name. I just force-pushed the changes you proposed."
      },
      {
        "author": "gares",
        "date": "2018-07-24T21:19:59Z",
        "comment": "I love the ABC one ;-)"
      },
      {
        "author": "anton-trunov",
        "date": "2018-07-27T15:46:53Z",
        "comment": "Thanks a lot!"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "anton-trunov",
        "committer": "anton-trunov",
        "hash": "664feb54237e18e7a1528321bdd8fd28d1e0f1be",
        "message": "Add addnBAC, addnBCA, and addnABC lemmas to ssrnat\n\nProofs by Cyril Cohen",
        "date": "2018-07-24T17:39:25Z"
      }
    ]
  },
  {
    "author": "pi8027",
    "number": 204,
    "diff_summary": [
      {
        "file": "mathcomp/algebra/fraction.v",
        "status": "M",
        "additions": 85,
        "deletions": 85
      },
      {
        "file": "mathcomp/algebra/intdiv.v",
        "status": "M",
        "additions": 85,
        "deletions": 85
      },
      {
        "file": "mathcomp/algebra/interval.v",
        "status": "M",
        "additions": 85,
        "deletions": 85
      },
      {
        "file": "mathcomp/algebra/matrix.v",
        "status": "M",
        "additions": 85,
        "deletions": 85
      },
      {
        "file": "mathcomp/algebra/mxalgebra.v",
        "status": "M",
        "additions": 85,
        "deletions": 85
      },
      {
        "file": "mathcomp/algebra/polydiv.v",
        "status": "M",
        "additions": 85,
        "deletions": 85
      },
      {
        "file": "mathcomp/algebra/rat.v",
        "status": "M",
        "additions": 85,
        "deletions": 85
      },
      {
        "file": "mathcomp/algebra/ssrint.v",
        "status": "M",
        "additions": 85,
        "deletions": 85
      },
      {
        "file": "mathcomp/algebra/ssrnum.v",
        "status": "M",
        "additions": 85,
        "deletions": 85
      },
      {
        "file": "mathcomp/character/mxrepresentation.v",
        "status": "M",
        "additions": 85,
        "deletions": 85
      },
      {
        "file": "mathcomp/field/algC.v",
        "status": "M",
        "additions": 85,
        "deletions": 85
      },
      {
        "file": "mathcomp/fingroup/fingroup.v",
        "status": "M",
        "additions": 85,
        "deletions": 85
      },
      {
        "file": "mathcomp/fingroup/gproduct.v",
        "status": "M",
        "additions": 85,
        "deletions": 85
      },
      {
        "file": "mathcomp/fingroup/morphism.v",
        "status": "M",
        "additions": 85,
        "deletions": 85
      },
      {
        "file": "mathcomp/fingroup/perm.v",
        "status": "M",
        "additions": 85,
        "deletions": 85
      },
      {
        "file": "mathcomp/fingroup/quotient.v",
        "status": "M",
        "additions": 85,
        "deletions": 85
      },
      {
        "file": "mathcomp/solvable/frobenius.v",
        "status": "M",
        "additions": 85,
        "deletions": 85
      },
      {
        "file": "mathcomp/ssreflect/bigop.v",
        "status": "M",
        "additions": 85,
        "deletions": 85
      },
      {
        "file": "mathcomp/ssreflect/div.v",
        "status": "M",
        "additions": 85,
        "deletions": 85
      },
      {
        "file": "mathcomp/ssreflect/eqtype.v",
        "status": "M",
        "additions": 85,
        "deletions": 85
      },
      {
        "file": "mathcomp/ssreflect/finset.v",
        "status": "M",
        "additions": 85,
        "deletions": 85
      },
      {
        "file": "mathcomp/ssreflect/fintype.v",
        "status": "M",
        "additions": 85,
        "deletions": 85
      },
      {
        "file": "mathcomp/ssreflect/generic_quotient.v",
        "status": "M",
        "additions": 85,
        "deletions": 85
      },
      {
        "file": "mathcomp/ssreflect/path.v",
        "status": "M",
        "additions": 85,
        "deletions": 85
      },
      {
        "file": "mathcomp/ssreflect/plugin/v8.6/ssrbool.v",
        "status": "M",
        "additions": 85,
        "deletions": 85
      },
      {
        "file": "mathcomp/ssreflect/plugin/v8.6/ssreflect.v",
        "status": "M",
        "additions": 85,
        "deletions": 85
      },
      {
        "file": "mathcomp/ssreflect/plugin/v8.6/ssrfun.v",
        "status": "M",
        "additions": 85,
        "deletions": 85
      },
      {
        "file": "mathcomp/ssreflect/prime.v",
        "status": "M",
        "additions": 85,
        "deletions": 85
      },
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 85,
        "deletions": 85
      },
      {
        "file": "mathcomp/ssreflect/ssrnat.v",
        "status": "M",
        "additions": 85,
        "deletions": 85
      },
      {
        "file": "mathcomp/ssreflect/tuple.v",
        "status": "M",
        "additions": 85,
        "deletions": 85
      }
    ],
    "state": "merged",
    "open_date": "2018-07-12T14:16:03Z",
    "update_date": "2018-07-19T10:56:59Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2018-07-13T23:07:03Z",
        "comment": "I think this is a good idea, but AFAIK, the `Variant` vernac is available only for 8.8, so we should wait a few versions of Coq before integrating."
      },
      {
        "author": "pi8027",
        "date": "2018-07-14T02:35:15Z",
        "comment": "The `Variant` command has been available since Coq 8.5beta1 ([CHANGES](https://github.com/coq/coq/blob/V8.5beta1/CHANGES#L29)). Currently, MathComp supports only Coq 8.6, 8.7, and 8.8. This change passed CI checks. So I think there is no need to wait."
      },
      {
        "author": "CohenCyril",
        "date": "2018-07-14T18:46:20Z",
        "comment": "Oh right! My mistake"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "pi8027",
        "committer": "pi8027",
        "hash": "10171942883948c8144ec076ef48eb73f8e49cdd",
        "message": "Replace all the CoInductives with Variants",
        "date": "2018-07-12T11:19:55Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 203,
    "diff_summary": [
      {
        "file": "CHANGELOG_UNRELEASED.md",
        "status": "M",
        "additions": 99,
        "deletions": 0
      },
      {
        "file": "mathcomp/ssreflect/bigop.v",
        "status": "M",
        "additions": 99,
        "deletions": 0
      },
      {
        "file": "mathcomp/ssreflect/finset.v",
        "status": "M",
        "additions": 99,
        "deletions": 0
      },
      {
        "file": "mathcomp/ssreflect/fintype.v",
        "status": "M",
        "additions": 99,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2018-07-04T15:45:00Z",
    "update_date": "2019-10-16T16:34:47Z",
    "discussion": [
      {
        "author": "gares",
        "date": "2018-08-07T04:15:17Z",
        "comment": "Lgtm. Not sure the fintype stuff is in the right place, other lemmas about the empty ft come earlier"
      },
      {
        "author": "CohenCyril",
        "date": "2018-08-07T07:12:09Z",
        "comment": "> Lgtm. Notte sure the fintype stuff is in the right place, other lemmas about the empty ft come earlier\r\n\r\nyou are right, and moving them at the right place triggered simplifications and more uniform naming, thanks"
      },
      {
        "author": "CohenCyril",
        "date": "2019-02-28T13:01:05Z",
        "comment": "@maximedenes  can you be an assignee?"
      },
      {
        "author": "amahboubi",
        "date": "2019-04-10T14:29:42Z",
        "comment": "@CohenCyril I do not have time to work on this before next dev meeting."
      },
      {
        "author": "CohenCyril",
        "date": "2019-04-10T14:35:20Z",
        "comment": "> @CohenCyril I do not have time to work on this before next dev meeting.\r\n\r\nOK, so maybe @thery or @gares could do a quick review?"
      },
      {
        "author": "CohenCyril",
        "date": "2019-04-10T14:35:56Z",
        "comment": "Or @strub ..."
      },
      {
        "author": "CohenCyril",
        "date": "2019-05-23T17:22:54Z",
        "comment": "@maximedenes Changes made, CI passes, if everyone's not unhappy, let's merge?"
      },
      {
        "author": "maximedenes",
        "date": "2019-10-16T09:13:22Z",
        "comment": "It seems to me all comments have been addressed, and this has been waiting for a long time, so I'll merge today unless reviewers object."
      }
    ],
    "review_discussion": [
      {
        "author": "amahboubi",
        "file": "mathcomp/ssreflect/bigop.v",
        "date": "2018-09-03T09:30:00Z",
        "comment": "What about big_seq_rmcond?"
      },
      {
        "author": "amahboubi",
        "file": "mathcomp/ssreflect/bigop.v",
        "date": "2018-09-03T09:47:12Z",
        "comment": "I am not sure about the `reindex` prefix, it has a very different meaning in the `finType` section. Plus there is not `big` in the name and I would say it has to. Same remarks aply to the 3 next ones."
      },
      {
        "author": "amahboubi",
        "file": "mathcomp/ssreflect/fintype.v",
        "date": "2018-09-03T09:57:18Z",
        "comment": "Ok. Not sure about the name here, but I do not have a better proposal. If this one proved useful, one probably also needs `foo A x : A x -> #|A| = 0 -> False.` don't we?"
      },
      {
        "author": "amahboubi",
        "file": "mathcomp/ssreflect/fintype.v",
        "date": "2018-09-03T10:00:14Z",
        "comment": "Ok, but I do not see a use case not covered by `card1_eq`. Is `all_equal_to` of specific interest somewhere?"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/fintype.v",
        "date": "2018-09-10T13:35:46Z",
        "comment": "This lemma is way easier to apply than `card1_eq` because a rewrite will match any element of type `T` and turn it into `x`, while `card1_eq` needs to be guided with a pattern."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/fintype.v",
        "date": "2018-09-10T13:38:27Z",
        "comment": "`rewrite card0_eq in ax` where `ax : A x` would do this job... but maybe the lemma you suggest would also be useful... and I am also conflicted about the name..."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/bigop.v",
        "date": "2018-09-10T13:41:14Z",
        "comment": "Well `reindex` does not have `big` in it and it is exactly `reindex` applied to `enum_val` (+ proofs that this works)"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/bigop.v",
        "date": "2018-09-10T13:41:57Z",
        "comment": "agreed"
      },
      {
        "author": "amahboubi",
        "file": "mathcomp/ssreflect/fintype.v",
        "date": "2018-09-10T13:57:58Z",
        "comment": "Ok, I agree with you.  In fact my `foo` was wrong: I had in mind the version with hypotheses swapped, as in  `foo A x : #|A| = 0 -> A x -> False`, so as to be able to use `/(foo cardA)` as a view on a term of type `A x`, when `cardA : #|A| = 0` is in context. But I am not sure either."
      },
      {
        "author": "amahboubi",
        "file": "mathcomp/ssreflect/fintype.v",
        "date": "2018-09-10T14:01:22Z",
        "comment": "Ok."
      },
      {
        "author": "amahboubi",
        "file": "mathcomp/ssreflect/bigop.v",
        "date": "2018-09-10T14:07:35Z",
        "comment": "Ok, thanks for explaining. Since you explained the prefix, I will now question the suffix :). Why `_cond`? Lemmas in the `reindex` family do not feature this suffix."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/fintype.v",
        "date": "2018-09-10T14:11:18Z",
        "comment": "Actually, I'm not even sure about that statement, I never used it, I just put it here for completeness because the statement I used most was `fintype1`..."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/bigop.v",
        "date": "2018-09-12T14:12:58Z",
        "comment": "@amahboubi `_cond` suffixed lemmas appear in this library when an equation has bigops such as \r\n- there is variable `P` condition, (sometimes in addition to another condition, like `_ in _` or `_ < _`, etc..), \r\n- and the presence of a variable condition `P` makes it less easy to use (most of the time from left to right),\r\n- and there is at the same time a without-`cond` variant which is often as used or more used than the more general variant (and we therefore not want to pay the price that comes with the extra `P` condition.\r\n\r\n(e.g. `big_filter`, `big_seq`, `big_nat`, `big_ord_widen`, `big_ord_narrow`, `big_nseq`)\r\n\r\nThat is the case here: the difficulty comes from the fact that the side condition of the LHS is `P (f x)` and hence does not fall into pattern unification.\r\n\r\nHence I provide both the cond and the nocond variants."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/bigop.v",
        "date": "2018-09-12T14:19:34Z",
        "comment": "Well, one could argue that the body of the big does not fall into pattern unification either...  like for `reindex`, which makes my whole point kind of void... :zipper_mouth_face: "
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/bigop.v",
        "date": "2018-12-10T17:56:13Z",
        "comment": "@amahboubi we did not converge here."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/fintype.v",
        "date": "2018-12-10T17:56:15Z",
        "comment": "@amahboubi we did not converge here."
      },
      {
        "author": "amahboubi",
        "file": "mathcomp/ssreflect/fintype.v",
        "date": "2018-12-11T14:31:43Z",
        "comment": "May be should we wait for a use case before trying to find a good name and shape.\r\n"
      },
      {
        "author": "amahboubi",
        "file": "mathcomp/ssreflect/bigop.v",
        "date": "2018-12-11T14:32:29Z",
        "comment": "Let's ask @ggonthier's opinion here."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/bigop.v",
        "date": "2019-04-10T14:15:06Z",
        "comment": "Actually I changed my mind, since this theorem is as general as possible and there is no point in specializing it to other frequently used cases, I wish to keep the name as short as possible."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/bigop.v",
        "date": "2019-04-10T14:15:24Z",
        "comment": "@ggonthier's advice would still be desirable here."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/fintype.v",
        "date": "2019-04-10T14:15:45Z",
        "comment": "Is this blocking, should I remove it?"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/fintype.v",
        "date": "2019-04-10T14:16:01Z",
        "comment": "I turned this into a reflection lemma."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/bigop.v",
        "date": "2019-04-10T14:18:35Z",
        "comment": "> my whole point kind of void...\r\n\r\nNot my whole point though, ... the specialized lemma is still easier to use, because `big[op/idx]_(_ in _) _` still hides membership as a LHS of a condition."
      },
      {
        "author": "maximedenes",
        "file": "mathcomp/ssreflect/bigop.v",
        "date": "2019-05-21T08:46:13Z",
        "comment": "@amahboubi is this ok with you?"
      },
      {
        "author": "maximedenes",
        "file": "mathcomp/ssreflect/bigop.v",
        "date": "2019-05-21T08:48:39Z",
        "comment": "@ggonthier It seems your opinion could unblock this :)"
      },
      {
        "author": "maximedenes",
        "file": "mathcomp/ssreflect/fintype.v",
        "date": "2019-05-21T08:49:42Z",
        "comment": "@amahboubi can you clarify what you were expecting @CohenCyril to do?"
      },
      {
        "author": "amahboubi",
        "file": "mathcomp/ssreflect/fintype.v",
        "date": "2019-05-21T08:57:32Z",
        "comment": "Nothing. Sorry it was not clear."
      },
      {
        "author": "amahboubi",
        "file": "mathcomp/ssreflect/bigop.v",
        "date": "2019-05-21T08:57:53Z",
        "comment": "I am fine."
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/ssreflect/bigop.v",
        "date": "2019-05-21T12:59:09Z",
        "comment": "@CohenCyril is correct here: `\\big[op/x]_(i in A | true) F` is _not_ convertible to `\\big[op/x]_(i in A) F`, so the non-`_cond` variants are _not_ subsumed by the `_cond` ones. The `reindex` prefix is already assumed to imply `bigop` earlier in the file, but is not used for reindexing with specific functions, instead we have `big_ord`, `big_sumType`, and so on, so I would rather side with @amahboubi and use the (shorter) `big_` prefix here."
      },
      {
        "author": "pi8027",
        "file": "CHANGELOG.md",
        "date": "2019-10-16T09:18:18Z",
        "comment": "Changelog entries should be moved to `CHANGELOG_UNRELEASED.md`."
      }
    ],
    "tags": [
      {
        "tag": "kind: enhancement",
        "description": "Issue or PR about addition of features."
      }
    ],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "948dec69615691de382278609a5b130ad5a485d3",
        "message": "Improving fintype and bigop\n\n\n### Added\n\n- Fintype theorems: `fintype0`, `card_le1P`, `mem_card1`,\n  `card1P`, `fintype_le1P`, `fintype1`, `fintype1P`.\n\n- Bigop theorems: `big_rmcond`, `bigD1_seq`,\n  `reindex_enum_val_cond`, `reindex_enum_rank_cond`,\n  `reindex_enum_val`, `reindex_enum_rank`, `big_set`.",
        "date": "2019-10-16T09:32:41Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "115a253d125015e7622f94c92fbf3d00f5f77e20",
        "message": "renaming new `reindex_` lemmas with prefix `big_`",
        "date": "2019-10-16T09:32:41Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "530a208ba37e9b333a1bf9196e883657599d2917",
        "message": "shifting to CHANGELOG_UNRELEASED",
        "date": "2019-10-16T09:33:49Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 202,
    "diff_summary": [
      {
        "file": "mathcomp/algebra/poly.v",
        "status": "M",
        "additions": 111,
        "deletions": 21
      },
      {
        "file": "mathcomp/algebra/ssralg.v",
        "status": "M",
        "additions": 111,
        "deletions": 21
      },
      {
        "file": "mathcomp/ssreflect/fintype.v",
        "status": "M",
        "additions": 111,
        "deletions": 21
      },
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 111,
        "deletions": 21
      }
    ],
    "state": "merged",
    "open_date": "2018-07-04T14:29:48Z",
    "update_date": "2018-07-19T16:59:10Z",
    "discussion": [],
    "review_discussion": [
      {
        "author": "thery",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2018-07-11T13:20:57Z",
        "comment": "case: s is sufficient"
      },
      {
        "author": "thery",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2018-07-11T13:22:11Z",
        "comment": "Maybe this statement could be generalized to\r\nLemma lastr_eq  (s : seq R) (x y z : R) :   x != z -> y != z -> (last x s == z) = (last y s == z)."
      },
      {
        "author": "thery",
        "file": "mathcomp/algebra/poly.v",
        "date": "2018-07-11T13:27:38Z",
        "comment": "why using induction?\r\nby  apply: eq_bigr => i _; rewrite coefZ.\r\n"
      },
      {
        "author": "thery",
        "file": "mathcomp/algebra/poly.v",
        "date": "2018-07-11T14:19:16Z",
        "comment": "It seems reasonable to also add the mul version\r\nLemma size_mul_eq1 p q :\r\n  (size (p * q) == 1%N) = ((size p == 1%N) && (size q == 1%N)).\r\n\r\n"
      },
      {
        "author": "thery",
        "file": "mathcomp/algebra/poly.v",
        "date": "2018-07-11T14:20:10Z",
        "comment": "Why restrict this to finType and not prove the general statement \r\n\r\nLemma size_prod_eq1 \r\n   (I : eqType) (s : seq I) (P : pred I)  (F : I -> {poly R}) :\r\n  (size (\\prod_(i <- s | P i) F i) == 1%N) = \r\n  (all (fun i => size (F i) == 1%N) [seq x <- s | P x])."
      },
      {
        "author": "thery",
        "file": "mathcomp/algebra/poly.v",
        "date": "2018-07-11T14:30:15Z",
        "comment": "should be eqType"
      },
      {
        "author": "thery",
        "file": "mathcomp/algebra/poly.v",
        "date": "2018-07-11T14:44:26Z",
        "comment": "is this new import comes only because you are using big_tnth?"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2018-07-13T23:07:20Z",
        "comment": "cool"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2018-07-13T23:09:03Z",
        "comment": "I am not sure it is desirable, as `1` is canonical for a `R : ringType`... However, maybe the theorem you mention has its place in `seq.v`"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/poly.v",
        "date": "2018-07-13T23:12:14Z",
        "comment": "yes"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/poly.v",
        "date": "2018-07-14T00:25:34Z",
        "comment": "The proof for `finType` is way easier and not really restrictive (see the proof of `size_prod_seq_eq1`) and the phrasing in terms of [forall (i | P i) ...] is slightly more elegant. I'm quite convinced we want to keep `size_prod_eq1` as such, but I am less sure about `size_prod_seq_eq1`"
      },
      {
        "author": "thery",
        "file": "mathcomp/algebra/poly.v",
        "date": "2018-07-14T08:37:44Z",
        "comment": "Kind of weird you would expect size_mul_eq1 to help proving the summation theorem not the other way around."
      },
      {
        "author": "thery",
        "file": "mathcomp/algebra/poly.v",
        "date": "2018-07-14T08:40:53Z",
        "comment": "Could we have just one theorem?"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/poly.v",
        "date": "2018-07-14T18:45:36Z",
        "comment": "I know, but since the proof is not done by induction... (maybe it would be shorter? I did not try)"
      },
      {
        "author": "thery",
        "file": "mathcomp/algebra/poly.v",
        "date": "2018-07-14T20:52:47Z",
        "comment": "\r\nLemma size_mul_eq1 p q :\r\n  (size (p * q) == 1%N) = ((size p == 1%N) && (size q == 1%N)).\r\nProof.\r\ncase: (p =P 0) => [->|/eqP pNZ]; first by rewrite mul0r size_poly0.\r\ncase: (q =P 0) => [->|/eqP qNZ]; first by rewrite mulr0 size_poly0 andbF.\r\nrewrite size_mul //.\r\nby move: pNZ qNZ; rewrite -!size_poly_gt0; (do 2 case: size) => //= n [|[|]].\r\nQed.\r\n\r\nLemma size_prod_seq_eq1 (I : eqType) (s : seq I) (P : pred I) (F : I -> {poly R}) :\r\n  (size (\\prod_(i <- s | P i) F i) == 1%N) = (all [pred i | P i ==> (size (F i) == 1%N)] s).\r\nProof.\r\nelim: s => [|a s IH /=]; first by rewrite big_nil size_poly1.\r\nrewrite big_cons; case: (P a) => //=.\r\nby rewrite size_mul_eq1 IH.\r\nQed.\r\n\r\nbut maybe size_prod_seq_eq1 should be expressed as a reflect"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/ssralg.v",
        "date": "2018-07-19T15:12:43Z",
        "comment": "I added your last_eq to seq (for an eqType)"
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "618c9229fecbf6f1e85035aa0033943dcd4f3464",
        "message": "small generalizations in poly",
        "date": "2018-07-04T12:35:54Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "ededc3786a779f26303e9545dc68bd6006b4aae4",
        "message": "Laurent's simplifications",
        "date": "2018-07-14T00:26:16Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "cf1b1123f42d4c8b179d2a5bba557dec94de1888",
        "message": "updated proposition for big_prod_seq_eq1",
        "date": "2018-07-14T00:36:54Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "a4f169772ace822087c9ab6aaac3f81982560b97",
        "message": "poly_size_eq1 phrased with reflect + combinators",
        "date": "2018-07-19T15:11:48Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "47831fdfcc1aa313b722232cebde2d3607f2e9b2",
        "message": "last_eq for exhaustivity",
        "date": "2018-07-19T15:11:59Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 201,
    "diff_summary": [
      {
        "file": "ChangeLog",
        "status": "M",
        "additions": 743,
        "deletions": 157
      },
      {
        "file": "mathcomp/algebra/ssrint.v",
        "status": "M",
        "additions": 743,
        "deletions": 157
      },
      {
        "file": "mathcomp/algebra/ssrnum.v",
        "status": "M",
        "additions": 743,
        "deletions": 157
      },
      {
        "file": "mathcomp/ssreflect/eqtype.v",
        "status": "M",
        "additions": 743,
        "deletions": 157
      },
      {
        "file": "mathcomp/ssreflect/fintype.v",
        "status": "M",
        "additions": 743,
        "deletions": 157
      },
      {
        "file": "mathcomp/ssreflect/path.v",
        "status": "M",
        "additions": 743,
        "deletions": 157
      },
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 743,
        "deletions": 157
      },
      {
        "file": "mathcomp/ssreflect/ssrnat.v",
        "status": "M",
        "additions": 743,
        "deletions": 157
      }
    ],
    "state": "merged",
    "open_date": "2018-07-03T11:12:39Z",
    "update_date": "2018-12-19T14:43:32Z",
    "discussion": [
      {
        "author": "amahboubi",
        "date": "2018-09-05T14:19:51Z",
        "comment": "I am not sure it is the best place to discuss this but I still think that the litany of lemmas about compatibility with order in `ssrnum` is a nasty issue. For instance I rather often have to use that:\r\n``x >= 0 -> y <= z ->  y * x <= z * x``.  I have never managed to remember that the name of this lemma is ``ler_wpmul2r``, and its statement is: \r\n```Lemma ler_wpmul2r x : 0 <= x -> {homo *%R^~ x : y z / y <= z}.```\r\nwhich is brown belt ssr-style notation (mind the ``%R^~ x``), next to impossible to `Search` and quite hard to teach to a newbie.\r\nIt would be awesome to find a way to improve this..."
      },
      {
        "author": "amahboubi",
        "date": "2018-09-05T14:44:47Z",
        "comment": "Here is another difficult one, this time in `ssrint`:\r\n\r\n```About ler_piexpz2l.```\r\n\r\nwhich answers:\r\n\r\n```ler_piexpz2l :\r\nforall (R : realFieldType) (x : R),\r\n(0 < x)%R ->\r\n(x < 1)%R ->\r\n{in (>= 0)%R &, {mono exprz (R:=R) x : y x2 / (x2 <= y)%R >-> \r\n(y <= x2)%R}}\r\n\r\nExpanded type for implicit arguments\r\nler_piexpz2l :\r\nforall (R : realFieldType) (x : R),\r\n(0 < x)%R ->\r\n(x < 1)%R ->\r\nforall x2 y : int_numDomainType,\r\nx2 \\in (>= 0)%R ->\r\ny \\in (>= 0)%R ->\r\n(fun x3 : R => [eta (>= x3)%R]) (x ^ x2)%R (x ^ y)%R =\r\n(fun y0 : int => <=%R%R^~ y0) x2 y\r\n```\r\n\r\n"
      },
      {
        "author": "amahboubi",
        "date": "2018-09-07T14:28:34Z",
        "comment": "Another caveat: `{homo ... }` lemmas like the aforementionned `ler_wpml2r` should be `apply`ed, but the analogue for the strict relation, `ltr_pmul2r` is formulated as a `{mono ..}` predicate, and is a `rewrite` rule."
      },
      {
        "author": "CohenCyril",
        "date": "2018-09-10T13:24:07Z",
        "comment": "I agree with your three remarks about the difficulty to remember names of these and how exactly to use them. I see no easy way to do so for now, and I believe this is indeed off-topic here and deserves a separate issue."
      },
      {
        "author": "CohenCyril",
        "date": "2018-10-31T13:47:12Z",
        "comment": "> Another caveat: `{homo ... }` lemmas like the aforementionned `ler_wpml2r` should be `apply`ed, [...]\r\n\r\nThis is not completely true, most `{homo ...}` lemma can be rewritten with : they are rules of the form `(_ <= _) = true` with preconditions...\r\n\r\n"
      },
      {
        "author": "CohenCyril",
        "date": "2018-11-19T13:15:49Z",
        "comment": "@amahboubi I addressed your requests, should we merge?"
      }
    ],
    "review_discussion": [
      {
        "author": "amahboubi",
        "file": "mathcomp/ssreflect/fintype.v",
        "date": "2018-09-03T13:06:06Z",
        "comment": "Please add an entry for extremum to the header."
      },
      {
        "author": "amahboubi",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2018-09-03T13:19:15Z",
        "comment": "I am a bit disturbed by the use of \"homomorphism\" here... I am aware that it is inherited from ssrfun, but I do not understand what is an homomorphism without an algebraic structure. This section is \"just\" about (almost) \"sorted\" lists. Changing the notation is a big change, I am just suggesting to rename the section here."
      },
      {
        "author": "amahboubi",
        "file": "mathcomp/ssreflect/ssrnat.v",
        "date": "2018-09-03T13:19:59Z",
        "comment": "Similar remark about homomorphisms here."
      },
      {
        "author": "amahboubi",
        "file": "mathcomp/ssreflect/ssrnat.v",
        "date": "2018-09-03T13:24:37Z",
        "comment": "Why this handful of Let?"
      },
      {
        "author": "amahboubi",
        "file": "ChangeLog",
        "date": "2018-09-03T13:26:48Z",
        "comment": "I think that this line might be misleading (see below). It is not clear what a \"homomorphism\" is. And the `mono` in the {mono...} notation does not stand for monomorphism but for monotonic. If I am correct, a monomorphism is usually something else, e.g. an injective homomorphism. Plus in English there is no final 'e'."
      },
      {
        "author": "amahboubi",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2018-09-03T13:28:25Z",
        "comment": "Why this handful of Let (when the abbreviation and the name of the constant coincide)?"
      },
      {
        "author": "amahboubi",
        "file": "ChangeLog",
        "date": "2018-09-03T13:30:16Z",
        "comment": "Please explain in which direction it is generalized (from nat to eqtypes)."
      },
      {
        "author": "amahboubi",
        "file": "mathcomp/ssreflect/fintype.v",
        "date": "2018-09-03T13:39:50Z",
        "comment": "What is /' doing here? Not a request but a real question :)."
      },
      {
        "author": "amahboubi",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2018-09-03T13:43:47Z",
        "comment": "I would suggest \"a value i : T\" minimizing M...\"\r\nAlso, what does the `arg` keyword refer to?"
      },
      {
        "author": "amahboubi",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2018-09-03T13:44:09Z",
        "comment": "\"a value i maximizing M...\""
      },
      {
        "author": "CohenCyril",
        "file": "ChangeLog",
        "date": "2018-09-05T09:24:47Z",
        "comment": "Well, if `aR` and`rR` are indeed order relations (as intended) then a `f` which is a `mono` is provably injective: `mono_inj : {mono f : x y / aR x y >-> rR x y} -> injective f.`\r\n\r\nThe naming comes from the category of ordered structures, so both `homo` and `mono` are intended as homomorphism and monomorphism, and such a `f` is a  morphism between the objects (`aT`, `aR`) and (`rT`, `rR`) of the aforementioned category.\r\n\r\nWhen I chose these names, I found the coincidence that `mono` was ambiguous enough to be read both as \"monomorphism\" and \"monotonic\" mildly fortunate, but `mono` really means the former one. However, a \"monomorphism\" happens to be equivalent to \"**strict** monotonicity\" (which ends up \"justifying\" the ambiguity), while a \"homomorphism\" really corresponds to nonstrict \"monotonicity\".\r\n\r\nI'm not sure whether I should include this digression in a file, as a comment in the code? or in a header? If so I guess it should be in ssrfun because the symbol behind the notation, `monomorphism_2`, is defined there anyways..."
      },
      {
        "author": "amahboubi",
        "file": "ChangeLog",
        "date": "2018-09-05T14:11:48Z",
        "comment": "Sure, but I still think that the wording you added to the ChangeLog is misleading. It is not generic: it is about homo/mono morphism of *ordered* structures. See e.g. [homomorphism](https://en.wikipedia.org/wiki/Homomorphism). E.g. there is no equational theory preserved here. Adding that this is about order would address my comment. \r\n\r\nI have no complain about the name of the constants, and the comments in ssrfun are clear that they are about stability/morphism/homomorphism *for unary and binary relations*."
      },
      {
        "author": "CohenCyril",
        "file": "ChangeLog",
        "date": "2018-09-05T16:26:38Z",
        "comment": "> it is about homo/mono morphism of ordered structures\r\n\r\noh, right!"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/fintype.v",
        "date": "2018-09-10T13:11:38Z",
        "comment": "ok"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/ssrnat.v",
        "date": "2018-09-10T13:14:05Z",
        "comment": "This is necessary until we have canonical structures for orders. It allows the subsequent proofs to be oneliners since all the necessary hypotheses are in context and can thus be found by `ssrdone`."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2018-09-10T13:15:08Z",
        "comment": "This is helping `ssrdone` concluding every subsequent proofs. (I definitely should put comments)"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/fintype.v",
        "date": "2018-09-10T13:16:17Z",
        "comment": "This is a use of the view (`/`) named `'forall_implyP` (`/'` is not a token, the two tokens are `/` and `'forall_` (followed by identifier `implyP`))"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/algebra/ssrnum.v",
        "date": "2018-09-10T13:22:09Z",
        "comment": "- I agree with removing the `of` indeed\r\n- I guess `arg` refers to the \"argument\" of `M` seen as a function of `i`.\r\n\r\nI copied `[arg min_(i < i0 | P) M] == a value of i : T minimizing M : nat, subject  [...]` from https://github.com/math-comp/math-comp/blob/master/mathcomp/ssreflect/fintype.v#L136-L144, so I believe that any modification to that description should be backported there."
      },
      {
        "author": "amahboubi",
        "file": "mathcomp/ssreflect/fintype.v",
        "date": "2018-09-10T13:49:58Z",
        "comment": "Amazing, I did not know this (family of) view(s), or may be I forgot about it. It's been too long since I worked finite objects it seems... Sorry for the noise and thanks for the answer."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/fintype.v",
        "date": "2018-09-10T14:08:19Z",
        "comment": "Off-topic: this family proved useful to me and should be completed with `'forall_in_`, etc... variants.\r\nAlternatively/Additionally, @bgregoir and @gares have an experiment on automated views using typeclasses that I would much like to see as a PR here."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/fintype.v",
        "date": "2018-10-31T13:50:00Z",
        "comment": "@bgregoir @gares do you think you could open a PR about these?"
      },
      {
        "author": "gares",
        "file": "mathcomp/ssreflect/fintype.v",
        "date": "2018-10-31T14:31:31Z",
        "comment": "Benjamin did use it for a while, but it found it unsatisfactory (eg see the vlevel business)\r\nThe code is here: https://github.com/gares/autoview\r\nMaybe you could try to use it here and see how it goes."
      },
      {
        "author": "gares",
        "file": "mathcomp/ssreflect/fintype.v",
        "date": "2018-10-31T14:38:37Z",
        "comment": "The point is: you have 5 variants (only logical, recursive, under binders, ...) but sometimes none fits, eg they go too deep or too shallow :-/\r\nAt least, this was the argument Benjamin communicated me in private.\r\n\r\n For your use case you probably have what you need."
      },
      {
        "author": "gares",
        "file": "mathcomp/ssreflect/fintype.v",
        "date": "2018-10-31T14:39:56Z",
        "comment": "If it works for you I can make a PR and write some doc (the .v file is not too bad).\r\nNow that I think about it, other users were interested."
      },
      {
        "author": "amahboubi",
        "file": "mathcomp/ssreflect/fintype.v",
        "date": "2018-12-19T14:21:07Z",
        "comment": "HI @CohenCyril, @gares, I am about to merge the present PR, but I would like to keep a pointer on this conversion, so that we keep track of this benchmark for the autoview experiment. What is the best way of doing so?"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/fintype.v",
        "date": "2018-12-19T14:39:33Z",
        "comment": "@amahboubi just keep the following link somewhere https://github.com/math-comp/math-comp/pull/201#discussion_r214692813 (e.g. in a new issue you may open)"
      },
      {
        "author": "amahboubi",
        "file": "mathcomp/ssreflect/fintype.v",
        "date": "2018-12-19T14:43:02Z",
        "comment": "done."
      }
    ],
    "tags": [
      {
        "tag": "kind: enhancement",
        "description": "Issue or PR about addition of features."
      },
      {
        "tag": "needs: review",
        "description": "PR that needs more reviews. Please review it."
      },
      {
        "tag": "needs: rebase",
        "description": "PR which is not rebased: check the target is appropriate (generally master) and rebase on top of it."
      }
    ],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "365f59c2455c7638c4f82af6db67d3bb56be861c",
        "message": "Generalizing homo-mono-morphism lemmas and extremum\n\nsee ChangeLog",
        "date": "2018-12-19T10:45:01Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "ba669fef1e39fddcc2f801b77f1f19e999392fc1",
        "message": "Answering @amahboubi's review.",
        "date": "2018-12-19T10:45:01Z"
      }
    ]
  },
  {
    "author": "gares",
    "number": 198,
    "diff_summary": [
      {
        "file": "ChangeLog",
        "status": "M",
        "additions": 7,
        "deletions": 6
      }
    ],
    "state": "merged",
    "open_date": "2018-04-24T13:11:04Z",
    "update_date": "2018-04-24T13:22:18Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "committer": "web-flow",
        "hash": "9e634929e54c703f67cb8e0e3a89ca4099f45470",
        "message": "Update ChangeLog",
        "date": "2018-04-24T13:10:24Z"
      },
      {
        "committer": "web-flow",
        "hash": "f36bb9b4f35286c5dd2b8e047ba294b47652823b",
        "message": "fix typo\n\nthanks Yves",
        "date": "2018-04-24T13:15:25Z"
      }
    ]
  },
  {
    "author": "amahboubi",
    "number": 197,
    "diff_summary": [
      {
        "file": "ChangeLog",
        "status": "M",
        "additions": 46,
        "deletions": 40
      }
    ],
    "state": "merged",
    "open_date": "2018-04-23T13:09:50Z",
    "update_date": "2018-04-24T13:07:08Z",
    "discussion": [
      {
        "author": "amahboubi",
        "date": "2018-04-23T13:13:59Z",
        "comment": "For now, this is only about uniformity of the existing content. Another commit will deal with the additional recent changes."
      },
      {
        "author": "gares",
        "date": "2018-04-24T12:59:54Z",
        "comment": "very good"
      }
    ],
    "review_discussion": [
      {
        "author": "CohenCyril",
        "file": "ChangeLog",
        "date": "2018-04-23T14:55:04Z",
        "comment": "Since real_closed was never released, I wonder if it is worth mentioning?"
      },
      {
        "author": "CohenCyril",
        "file": "ChangeLog",
        "date": "2018-04-23T14:55:05Z",
        "comment": "Since complex.v had never been released, I wonder if it is worth mentioning?"
      },
      {
        "author": "CohenCyril",
        "file": "ChangeLog",
        "date": "2018-04-23T14:56:00Z",
        "comment": "remove \"upcoming\"?"
      },
      {
        "author": "amahboubi",
        "file": "ChangeLog",
        "date": "2018-04-23T15:02:08Z",
        "comment": "My intention was to update this line at the last minute, including the correct date of the release."
      },
      {
        "author": "amahboubi",
        "file": "ChangeLog",
        "date": "2018-04-23T15:02:11Z",
        "comment": "Good point, in fact I hesitated to include this line but see my next comment."
      },
      {
        "author": "amahboubi",
        "file": "ChangeLog",
        "date": "2018-04-23T15:04:28Z",
        "comment": "This paragraph was in the previous version of the ChangeLog (and was written by yoursefl?): I just made minor spelling/English editions. Since it mentioned  library complex, I felt we needed to explain what happened or withdraw everything. I chose the most conservative option to trigger discussion. I am very fine with removal."
      },
      {
        "author": "gares",
        "file": "ChangeLog",
        "date": "2018-04-23T16:51:55Z",
        "comment": "also 8.5 is out"
      },
      {
        "author": "gares",
        "file": "ChangeLog",
        "date": "2018-04-23T16:52:38Z",
        "comment": "I think the style is to indent as in \r\n```\r\n   * fooo\r\n     bar\r\n```"
      },
      {
        "author": "gares",
        "file": "ChangeLog",
        "date": "2018-04-23T16:53:26Z",
        "comment": "I think that things not in the (released) library should not be mentioned here"
      },
      {
        "author": "gares",
        "file": "ChangeLog",
        "date": "2018-04-23T16:54:16Z",
        "comment": "I think these should go (we already have a line saying that the plugin is in Coq)."
      },
      {
        "author": "gares",
        "file": "ChangeLog",
        "date": "2018-04-23T16:55:53Z",
        "comment": "I think we could say: the repo has been cleaned up and it now only contains released stuff (in particular odd roder & co were moved to other repos under the mathcomp organization)"
      },
      {
        "author": "amahboubi",
        "file": "ChangeLog",
        "date": "2018-04-24T09:52:11Z",
        "comment": "Ok, I'll do that."
      },
      {
        "author": "amahboubi",
        "file": "ChangeLog",
        "date": "2018-04-24T09:52:33Z",
        "comment": "Agreed. I'll rephrase."
      },
      {
        "author": "amahboubi",
        "file": "ChangeLog",
        "date": "2018-04-24T09:53:22Z",
        "comment": "You mean compatibility is lost, right?"
      },
      {
        "author": "amahboubi",
        "file": "ChangeLog",
        "date": "2018-04-24T09:54:15Z",
        "comment": "Yeah, I've been lazy for this draft and kept what Emacs did for me... I will correct the style."
      },
      {
        "author": "amahboubi",
        "file": "ChangeLog",
        "date": "2018-04-24T09:57:12Z",
        "comment": "Should it go somewhere in a Coq change log? It's bit fine-grained for the CHANGES."
      },
      {
        "author": "gares",
        "file": "ChangeLog",
        "date": "2018-04-24T12:59:32Z",
        "comment": "I think one needs a leading `*` here"
      },
      {
        "author": "ybertot",
        "file": "ChangeLog",
        "date": "2018-04-24T13:08:51Z",
        "comment": "disambiguate"
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "amahboubi",
        "committer": "amahboubi",
        "hash": "96c8cc8200ca186c19eb7457c9b3f97433772390",
        "message": "Improved ChangeLog\n\nOne paragraph per version + spell check",
        "date": "2018-04-23T13:01:00Z"
      },
      {
        "author": "amahboubi",
        "committer": "amahboubi",
        "hash": "ca20c413705035862409c6ec7f80ea390e6cd78c",
        "message": "Latest changes added to change log.",
        "date": "2018-04-23T14:16:09Z"
      },
      {
        "author": "amahboubi",
        "committer": "amahboubi",
        "hash": "a8f540454ed463edb48952f9c620484e9c3b6cc1",
        "message": "Removed content about files not in the repo/release + minor stuff",
        "date": "2018-04-24T10:44:29Z"
      }
    ]
  },
  {
    "author": "gares",
    "number": 196,
    "diff_summary": [
      {
        "file": ".travis.yml",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "etc/AUTHORS",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "etc/CeCILL-B",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "etc/ChangeLog",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "INSTALL.md",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/README.md",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/Makefile",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "htmldoc/buildlibgraph",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/coqdoc.css",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/depend",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/depend.js",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_abbreviation_*.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_abbreviation_A.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_abbreviation_B.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_abbreviation_C.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_abbreviation_D.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_abbreviation_E.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_abbreviation_F.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_abbreviation_G.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_abbreviation_H.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_abbreviation_I.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_abbreviation_J.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_abbreviation_K.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_abbreviation_L.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_abbreviation_M.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_abbreviation_N.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_abbreviation_O.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_abbreviation_P.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_abbreviation_Q.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_abbreviation_R.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_abbreviation_S.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_abbreviation_T.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_abbreviation_U.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_abbreviation_V.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_abbreviation_W.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_abbreviation_X.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_abbreviation_Y.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_abbreviation_Z.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_abbreviation__.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_axiom_*.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_axiom_A.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_axiom_B.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_axiom_C.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_axiom_D.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_axiom_E.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_axiom_F.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_axiom_G.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_axiom_H.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_axiom_I.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_axiom_J.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_axiom_K.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_axiom_L.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_axiom_M.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_axiom_N.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_axiom_O.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_axiom_P.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_axiom_Q.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_axiom_R.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_axiom_S.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_axiom_T.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_axiom_U.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_axiom_V.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_axiom_W.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_axiom_X.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_axiom_Y.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_axiom_Z.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_axiom__.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_constructor_*.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_constructor_A.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_constructor_B.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_constructor_C.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_constructor_D.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_constructor_E.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_constructor_F.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_constructor_G.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_constructor_H.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_constructor_I.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_constructor_J.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_constructor_K.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_constructor_L.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_constructor_M.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_constructor_N.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_constructor_O.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_constructor_P.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_constructor_Q.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_constructor_R.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_constructor_S.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_constructor_T.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_constructor_U.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_constructor_V.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_constructor_W.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_constructor_X.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_constructor_Y.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_constructor_Z.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_constructor__.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_definition_*.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_definition_A.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_definition_B.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_definition_C.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_definition_D.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_definition_E.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_definition_F.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_definition_G.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_definition_H.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_definition_I.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_definition_J.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_definition_K.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_definition_L.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_definition_M.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_definition_N.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_definition_O.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_definition_P.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_definition_Q.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_definition_R.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_definition_S.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_definition_T.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_definition_U.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_definition_V.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_definition_W.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_definition_X.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_definition_Y.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_definition_Z.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_definition__.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_global_*.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_global_A.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_global_B.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_global_C.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_global_D.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_global_E.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_global_F.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_global_G.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_global_H.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_global_I.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_global_J.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_global_K.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_global_L.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_global_M.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_global_N.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_global_O.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_global_P.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_global_Q.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_global_R.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_global_S.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_global_T.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_global_U.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_global_V.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_global_W.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_global_X.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_global_Y.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_global_Z.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_global__.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_inductive_*.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_inductive_A.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_inductive_B.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_inductive_C.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_inductive_D.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_inductive_E.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_inductive_F.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_inductive_G.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_inductive_H.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_inductive_I.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_inductive_J.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_inductive_K.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_inductive_L.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_inductive_M.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_inductive_N.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_inductive_O.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_inductive_P.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_inductive_Q.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_inductive_R.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_inductive_S.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_inductive_T.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_inductive_U.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_inductive_V.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_inductive_W.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_inductive_X.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_inductive_Y.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_inductive_Z.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_inductive__.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_lemma_*.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_lemma_A.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_lemma_B.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_lemma_C.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_lemma_D.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_lemma_E.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_lemma_F.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_lemma_G.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_lemma_H.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_lemma_I.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_lemma_J.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_lemma_K.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_lemma_L.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_lemma_M.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_lemma_N.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_lemma_O.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_lemma_P.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_lemma_Q.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_lemma_R.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_lemma_S.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_lemma_T.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_lemma_U.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_lemma_V.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_lemma_W.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_lemma_X.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_lemma_Y.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_lemma_Z.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_lemma__.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_library_*.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_library_A.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_library_B.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_library_C.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_library_D.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_library_E.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_library_F.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_library_G.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_library_H.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_library_I.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_library_J.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_library_K.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_library_L.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_library_M.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_library_N.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_library_O.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_library_P.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_library_Q.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_library_R.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_library_S.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_library_T.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_library_U.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_library_V.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_library_W.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_library_X.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_library_Y.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_library_Z.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_library__.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_module_*.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_module_A.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_module_B.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_module_C.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_module_D.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_module_E.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_module_F.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_module_G.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_module_H.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_module_I.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_module_J.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_module_K.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_module_L.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_module_M.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_module_N.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_module_O.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_module_P.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_module_Q.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_module_R.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_module_S.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_module_T.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_module_U.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_module_V.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_module_W.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_module_X.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_module_Y.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_module_Z.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_module__.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_notation_*.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_notation_A.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_notation_B.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_notation_C.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_notation_D.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_notation_E.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_notation_F.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_notation_G.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_notation_H.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_notation_I.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_notation_J.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_notation_K.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_notation_L.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_notation_M.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_notation_N.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_notation_O.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_notation_P.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_notation_Q.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_notation_R.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_notation_S.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_notation_T.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_notation_U.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_notation_V.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_notation_W.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_notation_X.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_notation_Y.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_notation_Z.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_notation__.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_projection_*.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_projection_A.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_projection_B.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_projection_C.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_projection_D.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_projection_E.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_projection_F.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_projection_G.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_projection_H.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_projection_I.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_projection_J.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_projection_K.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_projection_L.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_projection_M.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_projection_N.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_projection_O.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_projection_P.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_projection_Q.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_projection_R.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_projection_S.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_projection_T.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_projection_U.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_projection_V.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_projection_W.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_projection_X.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_projection_Y.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_projection_Z.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_projection__.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_record_*.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_record_A.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_record_B.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_record_C.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_record_D.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_record_E.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_record_F.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_record_G.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_record_H.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_record_I.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_record_J.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_record_K.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_record_L.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_record_M.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_record_N.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_record_O.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_record_P.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_record_Q.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_record_R.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_record_S.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_record_T.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_record_U.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_record_V.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_record_W.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_record_X.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_record_Y.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_record_Z.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_record__.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_section_*.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_section_A.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_section_B.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_section_C.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_section_D.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_section_E.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_section_F.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_section_G.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_section_H.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_section_I.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_section_J.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_section_K.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_section_L.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_section_M.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_section_N.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_section_O.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_section_P.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_section_Q.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_section_R.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_section_S.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_section_T.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_section_U.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_section_V.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_section_W.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_section_X.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_section_Y.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_section_Z.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_section__.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_variable_*.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_variable_A.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_variable_B.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_variable_C.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_variable_D.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_variable_E.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_variable_F.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_variable_G.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_variable_H.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_variable_I.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_variable_J.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_variable_K.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_variable_L.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_variable_M.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_variable_N.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_variable_O.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_variable_P.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_variable_Q.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_variable_R.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_variable_S.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_variable_T.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_variable_U.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_variable_V.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_variable_W.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_variable_X.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_variable_Y.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_variable_Z.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/index_variable__.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "htmldoc/js/cytoscape-dagre.js",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "htmldoc/js/cytoscape-panzoom.js",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "htmldoc/js/cytoscape-qtip.js",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "htmldoc/js/cytoscape.js",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "htmldoc/js/cytoscape.js-panzoom.css",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "htmldoc/js/cytoscape.min.js",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "htmldoc/js/dagre.js",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "htmldoc/js/dagre.min.js",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "htmldoc/js/jquery-2.0.3.js",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "htmldoc/js/jquery-2.0.3.min.js",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "htmldoc/js/jquery.qtip.css",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "htmldoc/js/jquery.qtip.js",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "htmldoc/js/jquery.qtip.min.css",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "htmldoc/js/jquery.qtip.min.js",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "htmldoc/libgraph.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/mathcomp.algebra.all_algebra.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/mathcomp.algebra.finalg.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/mathcomp.algebra.fraction.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/mathcomp.algebra.intdiv.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/mathcomp.algebra.interval.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/mathcomp.algebra.matrix.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/mathcomp.algebra.mxalgebra.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/mathcomp.algebra.mxpoly.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/mathcomp.algebra.poly.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/mathcomp.algebra.polyXY.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/mathcomp.algebra.polydiv.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/mathcomp.algebra.rat.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/mathcomp.algebra.ring_quotient.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/mathcomp.algebra.ssralg.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/mathcomp.algebra.ssrint.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/mathcomp.algebra.ssrnum.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/mathcomp.algebra.vector.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/mathcomp.algebra.zmodp.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/mathcomp.all.all.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/mathcomp.character.all_character.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/mathcomp.character.character.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/mathcomp.character.classfun.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/mathcomp.character.inertia.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/mathcomp.character.integral_char.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/mathcomp.character.mxabelem.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/mathcomp.character.mxrepresentation.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/mathcomp.character.vcharacter.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/mathcomp.field.algC.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/mathcomp.field.algebraics_fundamentals.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/mathcomp.field.algnum.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/mathcomp.field.all_field.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/mathcomp.field.closed_field.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/mathcomp.field.countalg.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/mathcomp.field.cyclotomic.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/mathcomp.field.falgebra.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/mathcomp.field.fieldext.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/mathcomp.field.finfield.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/mathcomp.field.galois.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/mathcomp.field.separable.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/mathcomp.fingroup.action.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/mathcomp.fingroup.all_fingroup.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/mathcomp.fingroup.automorphism.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/mathcomp.fingroup.fingroup.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/mathcomp.fingroup.gproduct.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/mathcomp.fingroup.morphism.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/mathcomp.fingroup.perm.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/mathcomp.fingroup.presentation.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/mathcomp.fingroup.quotient.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/mathcomp.solvable.abelian.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/mathcomp.solvable.all_solvable.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/mathcomp.solvable.alt.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/mathcomp.solvable.burnside_app.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/mathcomp.solvable.center.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/mathcomp.solvable.commutator.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/mathcomp.solvable.cyclic.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/mathcomp.solvable.extraspecial.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/mathcomp.solvable.extremal.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/mathcomp.solvable.finmodule.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/mathcomp.solvable.frobenius.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/mathcomp.solvable.gfunctor.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/mathcomp.solvable.gseries.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/mathcomp.solvable.hall.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/mathcomp.solvable.jordanholder.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/mathcomp.solvable.maximal.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/mathcomp.solvable.nilpotent.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/mathcomp.solvable.pgroup.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/mathcomp.solvable.primitive_action.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/mathcomp.solvable.sylow.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/mathcomp.ssreflect.all_ssreflect.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/mathcomp.ssreflect.bigop.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/mathcomp.ssreflect.binomial.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/mathcomp.ssreflect.choice.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/mathcomp.ssreflect.div.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/mathcomp.ssreflect.eqtype.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/mathcomp.ssreflect.finfun.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/mathcomp.ssreflect.fingraph.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/mathcomp.ssreflect.finset.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/mathcomp.ssreflect.fintype.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/mathcomp.ssreflect.generic_quotient.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/mathcomp.ssreflect.path.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/mathcomp.ssreflect.prime.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/mathcomp.ssreflect.seq.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/mathcomp.ssreflect.ssrbool.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/mathcomp.ssreflect.ssreflect.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/mathcomp.ssreflect.ssrfun.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/mathcomp.ssreflect.ssrmatching.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/mathcomp.ssreflect.ssrnat.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/mathcomp.ssreflect.ssrnotations.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/htmldoc/mathcomp.ssreflect.tuple.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/index.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/javascripts/scale.fix.js",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/logo-MS-Research-Inria-Joint-Centre.png",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/oo.html",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/params.json",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/stylesheets/github-light.css",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "docs/stylesheets/styles.css",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "etc/INSTALL.md",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "etc/Makefile",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "etc/README",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "htmldoc/Makefile",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/Make",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/Makefile",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/algebra/AUTHORS",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/algebra/CeCILL-B",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/algebra/INSTALL",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/algebra/INSTALL.md",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/algebra/README",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/algebra/README.md",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/attic/AUTHORS",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/attic/CeCILL-B",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/attic/INSTALL",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/attic/Makefile",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/attic/README",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/attic/algnum_basic.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/attic/amodule.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/attic/fib.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/attic/forms.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/attic/galgebra.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/attic/multinom.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/attic/quote.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/attic/tutorial.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/character/AUTHORS",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/character/CeCILL-B",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/character/INSTALL",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/character/INSTALL.md",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/character/README",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/character/README.md",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/field/AUTHORS",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/field/CeCILL-B",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/field/INSTALL",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/field/INSTALL.md",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/field/README",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/field/README.md",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/field/separable.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/fingroup/AUTHORS",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/fingroup/CeCILL-B",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/fingroup/INSTALL",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/fingroup/INSTALL.md",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/fingroup/README",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/fingroup/README.md",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/odd_order/AUTHORS",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/odd_order/BGappendixAB.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/odd_order/BGappendixC.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/odd_order/BGsection1.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/odd_order/BGsection10.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/odd_order/BGsection11.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/odd_order/BGsection12.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/odd_order/BGsection13.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/odd_order/BGsection14.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/odd_order/BGsection15.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/odd_order/BGsection16.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/odd_order/BGsection2.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/odd_order/BGsection3.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/odd_order/BGsection4.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/odd_order/BGsection5.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/odd_order/BGsection6.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/odd_order/BGsection7.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/odd_order/BGsection8.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/odd_order/BGsection9.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/odd_order/CeCILL-B",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/odd_order/INSTALL",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/odd_order/Make",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/odd_order/Makefile",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/odd_order/PFsection1.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/odd_order/PFsection10.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/odd_order/PFsection11.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/odd_order/PFsection12.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/odd_order/PFsection13.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/odd_order/PFsection14.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/odd_order/PFsection2.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/odd_order/PFsection3.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/odd_order/PFsection4.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/odd_order/PFsection5.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/odd_order/PFsection6.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/odd_order/PFsection7.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/odd_order/PFsection8.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/odd_order/PFsection9.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/odd_order/README",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/odd_order/descr",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/odd_order/opam",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/odd_order/stripped_odd_order_theorem.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/odd_order/wielandt_fixpoint.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/real_closed/AUTHORS",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/real_closed/CeCILL-B",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/real_closed/INSTALL",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/real_closed/Make",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/real_closed/Makefile",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/real_closed/README",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/real_closed/all_real_closed.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/real_closed/bigenough.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/real_closed/cauchyreals.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/real_closed/complex.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/real_closed/descr",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/real_closed/mxtens.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/real_closed/opam",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/real_closed/ordered_qelim.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/real_closed/polyorder.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/real_closed/polyrcf.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/real_closed/qe_rcf.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/real_closed/qe_rcf_th.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/real_closed/realalg.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/solvable/AUTHORS",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/solvable/CeCILL-B",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/solvable/INSTALL",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/solvable/INSTALL.md",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/solvable/README",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/solvable/README.md",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/ssreflect/AUTHORS",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/ssreflect/CeCILL-B",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/ssreflect/INSTALL",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/ssreflect/INSTALL.md",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/ssreflect/README",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/ssreflect/README.md",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/ssreflect/plugin/trunk/ssreflect_plugin.mlpack",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/ssreflect/plugin/v8.4/ssreflect.ml4",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/ssreflect/plugin/v8.4/ssreflect_plugin.mllib",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/ssreflect/plugin/v8.4/ssrmatching.ml4",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/ssreflect/plugin/v8.4/ssrmatching.mli",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/ssreflect/plugin/v8.4/ssrmatching.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/ssreflect/plugin/v8.5/ssrbool.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/ssreflect/plugin/v8.5/ssreflect.ml4",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/ssreflect/plugin/v8.5/ssreflect.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/ssreflect/plugin/v8.5/ssreflect_plugin.mllib",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/ssreflect/plugin/v8.5/ssrfun.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/ssreflect/plugin/v8.5/ssrmatching.ml4",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/ssreflect/plugin/v8.5/ssrmatching.mli",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/ssreflect/plugin/v8.5/ssrmatching.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/ssreflect/plugin/v8.5/ssrmatching_plugin.mllib",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/ssreflect/ssrnat.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/ssrtest/Make",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/ssrtest/Makefile",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/ssrtest/absevarprop.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/ssrtest/abstract_var2.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/ssrtest/binders.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/ssrtest/binders_of.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/ssrtest/caseview.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/ssrtest/congr.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/ssrtest/deferclear.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/ssrtest/dependent_type_err.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/ssrtest/derive_inversion.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/ssrtest/elim.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/ssrtest/elim2.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/ssrtest/elim_pattern.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/ssrtest/explain_match.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/ssrtest/first_n.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/ssrtest/gen_have.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/ssrtest/gen_pattern.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/ssrtest/have_TC.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/ssrtest/have_transp.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/ssrtest/have_view_idiom.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/ssrtest/havesuff.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/ssrtest/if_isnt.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/ssrtest/indetLHS.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/ssrtest/intro_beta.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/ssrtest/intro_noop.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/ssrtest/ipatalternation.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/ssrtest/ltac_have.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/ssrtest/ltac_in.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/ssrtest/move_after.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/ssrtest/multiview.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/ssrtest/occarrow.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/ssrtest/patnoX.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/ssrtest/primproj.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/ssrtest/rewpatterns.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/ssrtest/set_lamda.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/ssrtest/set_pattern.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/ssrtest/ssrsyntax1.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/ssrtest/ssrsyntax2.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/ssrtest/tc.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/ssrtest/testmx.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/ssrtest/typeof.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/ssrtest/unfold_Opaque.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/ssrtest/unkeyed.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/ssrtest/view_case.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/ssrtest/wlog_suff.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/ssrtest/wlogletin.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      },
      {
        "file": "mathcomp/ssrtest/wlong_intro.v",
        "status": "D",
        "additions": 375408,
        "deletions": 75121
      }
    ],
    "state": "merged",
    "open_date": "2018-04-20T12:22:09Z",
    "update_date": "2018-04-23T08:54:46Z",
    "discussion": [
      {
        "author": "amahboubi",
        "date": "2018-04-20T12:40:21Z",
        "comment": "Hi Enrico, it looks great! I only have one question, if I may: about the commit moving the sources of the (skinny) mathcomp website. I initialized these pages by following blindly the github instructions. Will it still be online with the same url?"
      },
      {
        "author": "amahboubi",
        "date": "2018-04-20T12:41:31Z",
        "comment": "Ha, I received your email meanwhile."
      },
      {
        "author": "CohenCyril",
        "date": "2018-04-20T12:45:43Z",
        "comment": "Looks good indeed. I guess we should ask github to use docs/ only once this PR is merged, right?"
      },
      {
        "author": "gares",
        "date": "2018-04-21T08:23:16Z",
        "comment": "yep, all URLs should stay the same"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "hash": "d54b8dff818f0b1218df14cfb2b813da93154fa9",
        "message": "remove ssrtest: it now belongs to Coq",
        "date": "2018-04-12T07:54:36Z"
      },
      {
        "committer": "web-flow",
        "hash": "fd5f56c9861e6d1f4619f1306b0badc2a5c3f53c",
        "message": "[separable] put clear switch near view\n\nDear devs, in an attempt to simplify the code of intro patterns we came up with a proposal that:\r\n- simplifies the code of the plugin\r\n- breaks only one line in the entire mathcomp, the one fixed by this patch.\r\n\r\nThe code we want to simplify is the one deferring clear switches inside an intro pattern.\r\nThe implementation is tricky because just delaying the clear switch until the end of the pattern is not enough, for example:\r\n```\r\nmove=> {x} /andP[x y].\r\n```\r\nIn this case `x` is both cleared and used. In order to be able to use `x`, given that the clear has not been performed yet, we rename `x` into `_x_` (when `{x}` is executed) so that when `x` is later executed we can use the name `x`, and then `.` is executed clear `_x_` instead of `x`.\r\n\r\nSo systematically \"always rename now & clear later\" seem to be OK, but it is not. The extra complication is that \"rename\" may break later intro pattern using terms as views. Eg\r\n```\r\nmove=> {x} /andP[Ha Hb] /x.\r\n```\r\nWhat the code does today is:\r\n- when `{x}` is execute look-ahead in the patter and see if `x` is used as a name to be introduced\r\n- if so, \"rename\"\r\n- otherwise don't rename (just delay)\r\nThis way of doing things is not only complicated but also incomplete, Eg\r\n```\r\nmove=> {x} /orP[x | /x].\r\n```\r\nwould misbehave, since the look-ahead is not \"semantic\".\r\n\r\nAnyway, the proposed behavior is:\r\n- `{x}` always renames now and clears (the renamed) later\r\n- `{clears}/views` is always \"compiled\" as `/views{clears}` (most of the occurrences in the library are ok with this simpler rule, but for the one fixed in this PR).\r\n- bonus: support `{}/view` (as in `rewrite {}rule`) to signal that the immediately following `view` has to be cleared, that is `{}/v` compiled as `/v{v}`.\r\n\r\nWhat do you think?\r\n```\r\n```",
        "date": "2018-04-16T14:25:09Z"
      },
      {
        "hash": "eaa90cf9520e43d0b05fc6431a479e6b9559ef0e",
        "message": "move odd_order to its own repository",
        "date": "2018-04-17T14:57:13Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "e9e9e87a2140e30425c90debe124f67b42801313",
        "message": "Removing undocumented compatibility module\n\nI had put this for compatibility with mathcomp 1.6 when we were still using svn, but I am afraid it got under the radar.\nWe should decide\n- if we revert the change of `ltngtP`,\n- if we document (and extend) the compatibility module\n- or if we just remove the module and keep the change to `ltngtP`\n\nI am personally in favour of the last",
        "date": "2018-04-17T17:15:59Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "13479422b0286c86d0888e06aba112153ca6314d",
        "message": "Moving real_closed to another repo",
        "date": "2018-04-18T08:49:18Z"
      },
      {
        "hash": "ab0786219c25211e77df7fb1b8ad1bf885557838",
        "message": "Merge remote-tracking branch 'origin/pr/193'",
        "date": "2018-04-20T08:32:06Z"
      },
      {
        "hash": "2f59acc5d2ceb4124def35f40115d7c4b2d44f11",
        "message": "Merge remote-tracking branch 'origin/pr/191'",
        "date": "2018-04-20T08:32:47Z"
      },
      {
        "hash": "32496ef57916dc9fc24b53f52832ef29cf206468",
        "message": "Merge remote-tracking branch 'origin/pr/192'",
        "date": "2018-04-20T08:33:33Z"
      },
      {
        "hash": "09bebb67443c0512e01d2c32f4207e09e93f4956",
        "message": "Merge remote-tracking branch 'origin/pr/189'",
        "date": "2018-04-20T08:34:04Z"
      },
      {
        "hash": "9352fc35ebe04b8b4e9002f3cf39ee1acbab8cd2",
        "message": "remove v8.4 code from Makefile",
        "date": "2018-04-20T08:35:01Z"
      },
      {
        "hash": "24a7fea1648991a77fc4ff86a972b0a3935678c8",
        "message": "move the webpage from gh-pages branch to docs/",
        "date": "2018-04-20T08:35:01Z"
      },
      {
        "hash": "e9faaa3129f74c91313e5bbcf658d891bd351319",
        "message": "Fix the script that generates the doc",
        "date": "2018-04-20T08:35:44Z"
      },
      {
        "hash": "3d196f44681fb3b23ff8a79fbd44e12308680531",
        "message": "travis: build against 8.6 -> 8.8",
        "date": "2018-04-20T08:46:39Z"
      },
      {
        "hash": "ed05182cece6bb3706e09b2ce14af4a41a2e8141",
        "message": "generate the documentation for 1.7",
        "date": "2018-04-20T08:54:22Z"
      },
      {
        "hash": "b78523ff2c3349e98686871891028069edfa7523",
        "message": "move etc/ files to the root and remove obsolete ones",
        "date": "2018-04-20T09:08:59Z"
      },
      {
        "hash": "536499fe46edbe2c0473b81ba5f7cc15b4ff9edf",
        "message": "update installation instructions",
        "date": "2018-04-20T09:09:07Z"
      },
      {
        "hash": "e418a8b26b66ce88e22cff5978823e25aab03d94",
        "message": "remove ssr plugin for 8.4 and 8.5",
        "date": "2018-04-20T12:15:22Z"
      },
      {
        "hash": "dcc7917ac5d66472f751ebbd31b7b63db5465303",
        "message": "remove the attic/ directory",
        "date": "2018-04-20T12:17:38Z"
      },
      {
        "hash": "908b440bf9d8c5d2a9005d8651ced54a618d85cf",
        "message": "fix symlinks to README, INSTALL and LICENSE",
        "date": "2018-04-20T12:19:59Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 195,
    "diff_summary": [
      {
        "file": "mathcomp/Make",
        "status": "D",
        "additions": 0,
        "deletions": 10660
      },
      {
        "file": "mathcomp/real_closed/AUTHORS",
        "status": "D",
        "additions": 0,
        "deletions": 10660
      },
      {
        "file": "mathcomp/real_closed/CeCILL-B",
        "status": "D",
        "additions": 0,
        "deletions": 10660
      },
      {
        "file": "mathcomp/real_closed/INSTALL",
        "status": "D",
        "additions": 0,
        "deletions": 10660
      },
      {
        "file": "mathcomp/real_closed/Make",
        "status": "D",
        "additions": 0,
        "deletions": 10660
      },
      {
        "file": "mathcomp/real_closed/Makefile",
        "status": "D",
        "additions": 0,
        "deletions": 10660
      },
      {
        "file": "mathcomp/real_closed/README",
        "status": "D",
        "additions": 0,
        "deletions": 10660
      },
      {
        "file": "mathcomp/real_closed/all_real_closed.v",
        "status": "D",
        "additions": 0,
        "deletions": 10660
      },
      {
        "file": "mathcomp/real_closed/bigenough.v",
        "status": "D",
        "additions": 0,
        "deletions": 10660
      },
      {
        "file": "mathcomp/real_closed/cauchyreals.v",
        "status": "D",
        "additions": 0,
        "deletions": 10660
      },
      {
        "file": "mathcomp/real_closed/complex.v",
        "status": "D",
        "additions": 0,
        "deletions": 10660
      },
      {
        "file": "mathcomp/real_closed/descr",
        "status": "D",
        "additions": 0,
        "deletions": 10660
      },
      {
        "file": "mathcomp/real_closed/mxtens.v",
        "status": "D",
        "additions": 0,
        "deletions": 10660
      },
      {
        "file": "mathcomp/real_closed/opam",
        "status": "D",
        "additions": 0,
        "deletions": 10660
      },
      {
        "file": "mathcomp/real_closed/ordered_qelim.v",
        "status": "D",
        "additions": 0,
        "deletions": 10660
      },
      {
        "file": "mathcomp/real_closed/polyorder.v",
        "status": "D",
        "additions": 0,
        "deletions": 10660
      },
      {
        "file": "mathcomp/real_closed/polyrcf.v",
        "status": "D",
        "additions": 0,
        "deletions": 10660
      },
      {
        "file": "mathcomp/real_closed/qe_rcf.v",
        "status": "D",
        "additions": 0,
        "deletions": 10660
      },
      {
        "file": "mathcomp/real_closed/qe_rcf_th.v",
        "status": "D",
        "additions": 0,
        "deletions": 10660
      },
      {
        "file": "mathcomp/real_closed/realalg.v",
        "status": "D",
        "additions": 0,
        "deletions": 10660
      }
    ],
    "state": "merged",
    "open_date": "2018-04-18T08:50:19Z",
    "update_date": "2018-04-23T08:54:46Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "13479422b0286c86d0888e06aba112153ca6314d",
        "message": "Moving real_closed to another repo",
        "date": "2018-04-18T08:49:18Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 193,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/ssrnat.v",
        "status": "M",
        "additions": 0,
        "deletions": 12
      }
    ],
    "state": "merged",
    "open_date": "2018-04-17T17:18:34Z",
    "update_date": "2018-04-23T08:54:46Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2018-04-17T17:21:22Z",
        "comment": "My bad, it is not from the \"svn-era\", here is the commit: https://github.com/math-comp/math-comp/commit/d762ebb5a8c5191d49a75aa89ec34966de00eb9b"
      },
      {
        "author": "amahboubi",
        "date": "2018-04-17T19:10:37Z",
        "comment": "I am not in favour of a compatibility module. The other instances of similar spec inductives, in ssrnum, share the same structure, with the two symmetrical versions of the equalities so I guess that your last option is just fine. However, I must confess that this change and the subsequent compat module went under my radar as well (as many things which happened in summer 2016 it seems) so I would be glad to hear other voices."
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "e9e9e87a2140e30425c90debe124f67b42801313",
        "message": "Removing undocumented compatibility module\n\nI had put this for compatibility with mathcomp 1.6 when we were still using svn, but I am afraid it got under the radar.\nWe should decide\n- if we revert the change of `ltngtP`,\n- if we document (and extend) the compatibility module\n- or if we just remove the module and keep the change to `ltngtP`\n\nI am personally in favour of the last",
        "date": "2018-04-17T17:15:59Z"
      }
    ]
  },
  {
    "author": "gares",
    "number": 192,
    "diff_summary": [
      {
        "file": ".travis.yml",
        "status": "D",
        "additions": 0,
        "deletions": 40751
      },
      {
        "file": "mathcomp/Make",
        "status": "D",
        "additions": 0,
        "deletions": 40751
      },
      {
        "file": "mathcomp/odd_order/AUTHORS",
        "status": "D",
        "additions": 0,
        "deletions": 40751
      },
      {
        "file": "mathcomp/odd_order/BGappendixAB.v",
        "status": "D",
        "additions": 0,
        "deletions": 40751
      },
      {
        "file": "mathcomp/odd_order/BGappendixC.v",
        "status": "D",
        "additions": 0,
        "deletions": 40751
      },
      {
        "file": "mathcomp/odd_order/BGsection1.v",
        "status": "D",
        "additions": 0,
        "deletions": 40751
      },
      {
        "file": "mathcomp/odd_order/BGsection10.v",
        "status": "D",
        "additions": 0,
        "deletions": 40751
      },
      {
        "file": "mathcomp/odd_order/BGsection11.v",
        "status": "D",
        "additions": 0,
        "deletions": 40751
      },
      {
        "file": "mathcomp/odd_order/BGsection12.v",
        "status": "D",
        "additions": 0,
        "deletions": 40751
      },
      {
        "file": "mathcomp/odd_order/BGsection13.v",
        "status": "D",
        "additions": 0,
        "deletions": 40751
      },
      {
        "file": "mathcomp/odd_order/BGsection14.v",
        "status": "D",
        "additions": 0,
        "deletions": 40751
      },
      {
        "file": "mathcomp/odd_order/BGsection15.v",
        "status": "D",
        "additions": 0,
        "deletions": 40751
      },
      {
        "file": "mathcomp/odd_order/BGsection16.v",
        "status": "D",
        "additions": 0,
        "deletions": 40751
      },
      {
        "file": "mathcomp/odd_order/BGsection2.v",
        "status": "D",
        "additions": 0,
        "deletions": 40751
      },
      {
        "file": "mathcomp/odd_order/BGsection3.v",
        "status": "D",
        "additions": 0,
        "deletions": 40751
      },
      {
        "file": "mathcomp/odd_order/BGsection4.v",
        "status": "D",
        "additions": 0,
        "deletions": 40751
      },
      {
        "file": "mathcomp/odd_order/BGsection5.v",
        "status": "D",
        "additions": 0,
        "deletions": 40751
      },
      {
        "file": "mathcomp/odd_order/BGsection6.v",
        "status": "D",
        "additions": 0,
        "deletions": 40751
      },
      {
        "file": "mathcomp/odd_order/BGsection7.v",
        "status": "D",
        "additions": 0,
        "deletions": 40751
      },
      {
        "file": "mathcomp/odd_order/BGsection8.v",
        "status": "D",
        "additions": 0,
        "deletions": 40751
      },
      {
        "file": "mathcomp/odd_order/BGsection9.v",
        "status": "D",
        "additions": 0,
        "deletions": 40751
      },
      {
        "file": "mathcomp/odd_order/CeCILL-B",
        "status": "D",
        "additions": 0,
        "deletions": 40751
      },
      {
        "file": "mathcomp/odd_order/INSTALL",
        "status": "D",
        "additions": 0,
        "deletions": 40751
      },
      {
        "file": "mathcomp/odd_order/Make",
        "status": "D",
        "additions": 0,
        "deletions": 40751
      },
      {
        "file": "mathcomp/odd_order/Makefile",
        "status": "D",
        "additions": 0,
        "deletions": 40751
      },
      {
        "file": "mathcomp/odd_order/PFsection1.v",
        "status": "D",
        "additions": 0,
        "deletions": 40751
      },
      {
        "file": "mathcomp/odd_order/PFsection10.v",
        "status": "D",
        "additions": 0,
        "deletions": 40751
      },
      {
        "file": "mathcomp/odd_order/PFsection11.v",
        "status": "D",
        "additions": 0,
        "deletions": 40751
      },
      {
        "file": "mathcomp/odd_order/PFsection12.v",
        "status": "D",
        "additions": 0,
        "deletions": 40751
      },
      {
        "file": "mathcomp/odd_order/PFsection13.v",
        "status": "D",
        "additions": 0,
        "deletions": 40751
      },
      {
        "file": "mathcomp/odd_order/PFsection14.v",
        "status": "D",
        "additions": 0,
        "deletions": 40751
      },
      {
        "file": "mathcomp/odd_order/PFsection2.v",
        "status": "D",
        "additions": 0,
        "deletions": 40751
      },
      {
        "file": "mathcomp/odd_order/PFsection3.v",
        "status": "D",
        "additions": 0,
        "deletions": 40751
      },
      {
        "file": "mathcomp/odd_order/PFsection4.v",
        "status": "D",
        "additions": 0,
        "deletions": 40751
      },
      {
        "file": "mathcomp/odd_order/PFsection5.v",
        "status": "D",
        "additions": 0,
        "deletions": 40751
      },
      {
        "file": "mathcomp/odd_order/PFsection6.v",
        "status": "D",
        "additions": 0,
        "deletions": 40751
      },
      {
        "file": "mathcomp/odd_order/PFsection7.v",
        "status": "D",
        "additions": 0,
        "deletions": 40751
      },
      {
        "file": "mathcomp/odd_order/PFsection8.v",
        "status": "D",
        "additions": 0,
        "deletions": 40751
      },
      {
        "file": "mathcomp/odd_order/PFsection9.v",
        "status": "D",
        "additions": 0,
        "deletions": 40751
      },
      {
        "file": "mathcomp/odd_order/README",
        "status": "D",
        "additions": 0,
        "deletions": 40751
      },
      {
        "file": "mathcomp/odd_order/descr",
        "status": "D",
        "additions": 0,
        "deletions": 40751
      },
      {
        "file": "mathcomp/odd_order/opam",
        "status": "D",
        "additions": 0,
        "deletions": 40751
      },
      {
        "file": "mathcomp/odd_order/stripped_odd_order_theorem.v",
        "status": "D",
        "additions": 0,
        "deletions": 40751
      },
      {
        "file": "mathcomp/odd_order/wielandt_fixpoint.v",
        "status": "D",
        "additions": 0,
        "deletions": 40751
      }
    ],
    "state": "merged",
    "open_date": "2018-04-17T14:58:00Z",
    "update_date": "2018-04-23T08:54:45Z",
    "discussion": [
      {
        "author": "gares",
        "date": "2018-04-18T08:00:52Z",
        "comment": "It builds locally but times out on travis..."
      },
      {
        "author": "CohenCyril",
        "date": "2018-04-18T16:29:24Z",
        "comment": "Travis will not succeed because the current version of odd-order relies on the development version of math-comp, and not any released version (the same goes for real-closed). I guess we should merge the few waiting PRs and release a math-comp 1.7~beta version, so that we can test real-closed and odd-order against it."
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "hash": "eaa90cf9520e43d0b05fc6431a479e6b9559ef0e",
        "message": "move odd_order to its own repository",
        "date": "2018-04-17T14:57:13Z"
      }
    ]
  },
  {
    "author": "gares",
    "number": 191,
    "diff_summary": [
      {
        "file": "mathcomp/field/separable.v",
        "status": "M",
        "additions": 1,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2018-04-16T14:28:38Z",
    "update_date": "2018-04-23T08:54:45Z",
    "discussion": [
      {
        "author": "amahboubi",
        "date": "2018-04-16T14:41:11Z",
        "comment": "The general idea sounds great to me, but there is one thing I do not understand in the change then: shouldn't it be {}/Ks?"
      },
      {
        "author": "amahboubi",
        "date": "2018-04-16T14:42:51Z",
        "comment": "Oh sorry now I understand: this commit is compatible with both and {}/Ks will only be available once your simplification is merged. Sorry for the noise."
      },
      {
        "author": "CohenCyril",
        "date": "2018-04-19T08:16:24Z",
        "comment": "It sounds okay to me to expect a variable cannot be used after it is cleared. In all of my personnal use-cases, delayed clear is used only to wait for the variable not to be used anymore"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "committer": "web-flow",
        "hash": "fd5f56c9861e6d1f4619f1306b0badc2a5c3f53c",
        "message": "[separable] put clear switch near view\n\nDear devs, in an attempt to simplify the code of intro patterns we came up with a proposal that:\r\n- simplifies the code of the plugin\r\n- breaks only one line in the entire mathcomp, the one fixed by this patch.\r\n\r\nThe code we want to simplify is the one deferring clear switches inside an intro pattern.\r\nThe implementation is tricky because just delaying the clear switch until the end of the pattern is not enough, for example:\r\n```\r\nmove=> {x} /andP[x y].\r\n```\r\nIn this case `x` is both cleared and used. In order to be able to use `x`, given that the clear has not been performed yet, we rename `x` into `_x_` (when `{x}` is executed) so that when `x` is later executed we can use the name `x`, and then `.` is executed clear `_x_` instead of `x`.\r\n\r\nSo systematically \"always rename now & clear later\" seem to be OK, but it is not. The extra complication is that \"rename\" may break later intro pattern using terms as views. Eg\r\n```\r\nmove=> {x} /andP[Ha Hb] /x.\r\n```\r\nWhat the code does today is:\r\n- when `{x}` is execute look-ahead in the patter and see if `x` is used as a name to be introduced\r\n- if so, \"rename\"\r\n- otherwise don't rename (just delay)\r\nThis way of doing things is not only complicated but also incomplete, Eg\r\n```\r\nmove=> {x} /orP[x | /x].\r\n```\r\nwould misbehave, since the look-ahead is not \"semantic\".\r\n\r\nAnyway, the proposed behavior is:\r\n- `{x}` always renames now and clears (the renamed) later\r\n- `{clears}/views` is always \"compiled\" as `/views{clears}` (most of the occurrences in the library are ok with this simpler rule, but for the one fixed in this PR).\r\n- bonus: support `{}/view` (as in `rewrite {}rule`) to signal that the immediately following `view` has to be cleared, that is `{}/v` compiled as `/v{v}`.\r\n\r\nWhat do you think?\r\n```\r\n```",
        "date": "2018-04-16T14:25:09Z"
      }
    ]
  },
  {
    "author": "gares",
    "number": 190,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/ssrnat.v",
        "status": "M",
        "additions": 1,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2018-04-12T13:09:18Z",
    "update_date": "2018-04-12T15:14:21Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "hash": "ac07a76ee257c535b5686b49fd14c6d1e370cc9a",
        "message": "ssrnat: don't use `fix n` but rather `fix name n`\n\nThis was the proof does not depend on the lemma name.",
        "date": "2018-04-12T13:08:19Z"
      }
    ]
  },
  {
    "author": "gares",
    "number": 189,
    "diff_summary": [
      {
        "file": "htmldoc/Makefile",
        "status": "D",
        "additions": 2,
        "deletions": 2001
      },
      {
        "file": "htmldoc/buildlibgraph",
        "status": "D",
        "additions": 2,
        "deletions": 2001
      },
      {
        "file": "mathcomp/Make",
        "status": "D",
        "additions": 2,
        "deletions": 2001
      },
      {
        "file": "mathcomp/ssrtest/Make",
        "status": "D",
        "additions": 2,
        "deletions": 2001
      },
      {
        "file": "mathcomp/ssrtest/Makefile",
        "status": "D",
        "additions": 2,
        "deletions": 2001
      },
      {
        "file": "mathcomp/ssrtest/absevarprop.v",
        "status": "D",
        "additions": 2,
        "deletions": 2001
      },
      {
        "file": "mathcomp/ssrtest/abstract_var2.v",
        "status": "D",
        "additions": 2,
        "deletions": 2001
      },
      {
        "file": "mathcomp/ssrtest/binders.v",
        "status": "D",
        "additions": 2,
        "deletions": 2001
      },
      {
        "file": "mathcomp/ssrtest/binders_of.v",
        "status": "D",
        "additions": 2,
        "deletions": 2001
      },
      {
        "file": "mathcomp/ssrtest/caseview.v",
        "status": "D",
        "additions": 2,
        "deletions": 2001
      },
      {
        "file": "mathcomp/ssrtest/congr.v",
        "status": "D",
        "additions": 2,
        "deletions": 2001
      },
      {
        "file": "mathcomp/ssrtest/deferclear.v",
        "status": "D",
        "additions": 2,
        "deletions": 2001
      },
      {
        "file": "mathcomp/ssrtest/dependent_type_err.v",
        "status": "D",
        "additions": 2,
        "deletions": 2001
      },
      {
        "file": "mathcomp/ssrtest/derive_inversion.v",
        "status": "D",
        "additions": 2,
        "deletions": 2001
      },
      {
        "file": "mathcomp/ssrtest/elim.v",
        "status": "D",
        "additions": 2,
        "deletions": 2001
      },
      {
        "file": "mathcomp/ssrtest/elim2.v",
        "status": "D",
        "additions": 2,
        "deletions": 2001
      },
      {
        "file": "mathcomp/ssrtest/elim_pattern.v",
        "status": "D",
        "additions": 2,
        "deletions": 2001
      },
      {
        "file": "mathcomp/ssrtest/explain_match.v",
        "status": "D",
        "additions": 2,
        "deletions": 2001
      },
      {
        "file": "mathcomp/ssrtest/first_n.v",
        "status": "D",
        "additions": 2,
        "deletions": 2001
      },
      {
        "file": "mathcomp/ssrtest/gen_have.v",
        "status": "D",
        "additions": 2,
        "deletions": 2001
      },
      {
        "file": "mathcomp/ssrtest/gen_pattern.v",
        "status": "D",
        "additions": 2,
        "deletions": 2001
      },
      {
        "file": "mathcomp/ssrtest/have_TC.v",
        "status": "D",
        "additions": 2,
        "deletions": 2001
      },
      {
        "file": "mathcomp/ssrtest/have_transp.v",
        "status": "D",
        "additions": 2,
        "deletions": 2001
      },
      {
        "file": "mathcomp/ssrtest/have_view_idiom.v",
        "status": "D",
        "additions": 2,
        "deletions": 2001
      },
      {
        "file": "mathcomp/ssrtest/havesuff.v",
        "status": "D",
        "additions": 2,
        "deletions": 2001
      },
      {
        "file": "mathcomp/ssrtest/if_isnt.v",
        "status": "D",
        "additions": 2,
        "deletions": 2001
      },
      {
        "file": "mathcomp/ssrtest/indetLHS.v",
        "status": "D",
        "additions": 2,
        "deletions": 2001
      },
      {
        "file": "mathcomp/ssrtest/intro_beta.v",
        "status": "D",
        "additions": 2,
        "deletions": 2001
      },
      {
        "file": "mathcomp/ssrtest/intro_noop.v",
        "status": "D",
        "additions": 2,
        "deletions": 2001
      },
      {
        "file": "mathcomp/ssrtest/ipatalternation.v",
        "status": "D",
        "additions": 2,
        "deletions": 2001
      },
      {
        "file": "mathcomp/ssrtest/ltac_have.v",
        "status": "D",
        "additions": 2,
        "deletions": 2001
      },
      {
        "file": "mathcomp/ssrtest/ltac_in.v",
        "status": "D",
        "additions": 2,
        "deletions": 2001
      },
      {
        "file": "mathcomp/ssrtest/move_after.v",
        "status": "D",
        "additions": 2,
        "deletions": 2001
      },
      {
        "file": "mathcomp/ssrtest/multiview.v",
        "status": "D",
        "additions": 2,
        "deletions": 2001
      },
      {
        "file": "mathcomp/ssrtest/occarrow.v",
        "status": "D",
        "additions": 2,
        "deletions": 2001
      },
      {
        "file": "mathcomp/ssrtest/patnoX.v",
        "status": "D",
        "additions": 2,
        "deletions": 2001
      },
      {
        "file": "mathcomp/ssrtest/primproj.v",
        "status": "D",
        "additions": 2,
        "deletions": 2001
      },
      {
        "file": "mathcomp/ssrtest/rewpatterns.v",
        "status": "D",
        "additions": 2,
        "deletions": 2001
      },
      {
        "file": "mathcomp/ssrtest/set_lamda.v",
        "status": "D",
        "additions": 2,
        "deletions": 2001
      },
      {
        "file": "mathcomp/ssrtest/set_pattern.v",
        "status": "D",
        "additions": 2,
        "deletions": 2001
      },
      {
        "file": "mathcomp/ssrtest/ssrsyntax1.v",
        "status": "D",
        "additions": 2,
        "deletions": 2001
      },
      {
        "file": "mathcomp/ssrtest/ssrsyntax2.v",
        "status": "D",
        "additions": 2,
        "deletions": 2001
      },
      {
        "file": "mathcomp/ssrtest/tc.v",
        "status": "D",
        "additions": 2,
        "deletions": 2001
      },
      {
        "file": "mathcomp/ssrtest/testmx.v",
        "status": "D",
        "additions": 2,
        "deletions": 2001
      },
      {
        "file": "mathcomp/ssrtest/typeof.v",
        "status": "D",
        "additions": 2,
        "deletions": 2001
      },
      {
        "file": "mathcomp/ssrtest/unfold_Opaque.v",
        "status": "D",
        "additions": 2,
        "deletions": 2001
      },
      {
        "file": "mathcomp/ssrtest/unkeyed.v",
        "status": "D",
        "additions": 2,
        "deletions": 2001
      },
      {
        "file": "mathcomp/ssrtest/view_case.v",
        "status": "D",
        "additions": 2,
        "deletions": 2001
      },
      {
        "file": "mathcomp/ssrtest/wlog_suff.v",
        "status": "D",
        "additions": 2,
        "deletions": 2001
      },
      {
        "file": "mathcomp/ssrtest/wlogletin.v",
        "status": "D",
        "additions": 2,
        "deletions": 2001
      },
      {
        "file": "mathcomp/ssrtest/wlong_intro.v",
        "status": "D",
        "additions": 2,
        "deletions": 2001
      }
    ],
    "state": "merged",
    "open_date": "2018-04-12T07:56:11Z",
    "update_date": "2018-04-23T08:54:45Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "hash": "d54b8dff818f0b1218df14cfb2b813da93154fa9",
        "message": "remove ssrtest: it now belongs to Coq",
        "date": "2018-04-12T07:54:36Z"
      }
    ]
  },
  {
    "author": "anton-trunov",
    "number": 187,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/plugin/v8.5/ssrfun.v",
        "status": "M",
        "additions": 8,
        "deletions": 2
      },
      {
        "file": "mathcomp/ssreflect/plugin/v8.6/ssrfun.v",
        "status": "M",
        "additions": 8,
        "deletions": 2
      }
    ],
    "state": "merged",
    "open_date": "2018-03-21T14:57:18Z",
    "update_date": "2018-03-21T22:32:13Z",
    "discussion": [
      {
        "author": "anton-trunov",
        "date": "2018-03-21T22:13:02Z",
        "comment": "@amahboubi No problem :) I have no idea why I didn't notice this myself. Fixed."
      },
      {
        "author": "amahboubi",
        "date": "2018-03-21T22:32:26Z",
        "comment": "Many thanks @anton-trunov !"
      },
      {
        "author": "anton-trunov",
        "date": "2018-03-21T23:18:20Z",
        "comment": "@amahboubi Thank you for merging!"
      }
    ],
    "review_discussion": [
      {
        "author": "amahboubi",
        "file": "mathcomp/ssreflect/plugin/v8.5/ssrfun.v",
        "date": "2018-03-21T21:12:54Z",
        "comment": "Sorry, I do not understand this comment: what about something like \"forcing implicit arguments to be added when used as a view\""
      }
    ],
    "tags": [],
    "commits": [
      {
        "committer": "anton-trunov",
        "hash": "c6139d34289b95b0f5ea30133daaf7c4cb13a49d",
        "message": "Declare prenex implicits for `Some_inj`\n\nThis backports the changes from Coq's [PR #6911](https://github.com/coq/coq/pull/6911)\nAnd also fixes a typo in doc comments",
        "date": "2018-03-21T22:09:56Z"
      }
    ]
  },
  {
    "author": "anton-trunov",
    "number": 186,
    "diff_summary": [
      {
        "file": "INSTALL.md",
        "status": "M",
        "additions": 19,
        "deletions": 13
      }
    ],
    "state": "merged",
    "open_date": "2018-03-06T11:41:16Z",
    "update_date": "2018-03-06T13:35:07Z",
    "discussion": [
      {
        "author": "amahboubi",
        "date": "2018-03-06T13:35:12Z",
        "comment": "Thanks a lot!"
      },
      {
        "author": "anton-trunov",
        "date": "2018-03-06T13:51:53Z",
        "comment": "Thank you for merging!"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "hash": "cc518c0de948f111e3fcb1b766a1a326db9ce955",
        "message": "[doc] Add instructions for dev version installation via OPAM\n\nPlus minor formattig tweaks and typo fixes.",
        "date": "2018-03-06T11:39:07Z"
      }
    ]
  },
  {
    "author": "jashug",
    "number": 185,
    "diff_summary": [
      {
        "file": "mathcomp/algebra/matrix.v",
        "status": "M",
        "additions": 293,
        "deletions": 334
      },
      {
        "file": "mathcomp/algebra/mxalgebra.v",
        "status": "M",
        "additions": 293,
        "deletions": 334
      },
      {
        "file": "mathcomp/algebra/poly.v",
        "status": "M",
        "additions": 293,
        "deletions": 334
      },
      {
        "file": "mathcomp/algebra/ssralg.v",
        "status": "M",
        "additions": 293,
        "deletions": 334
      },
      {
        "file": "mathcomp/algebra/ssrint.v",
        "status": "M",
        "additions": 293,
        "deletions": 334
      },
      {
        "file": "mathcomp/algebra/vector.v",
        "status": "M",
        "additions": 293,
        "deletions": 334
      },
      {
        "file": "mathcomp/character/character.v",
        "status": "M",
        "additions": 293,
        "deletions": 334
      },
      {
        "file": "mathcomp/character/classfun.v",
        "status": "M",
        "additions": 293,
        "deletions": 334
      },
      {
        "file": "mathcomp/character/inertia.v",
        "status": "M",
        "additions": 293,
        "deletions": 334
      },
      {
        "file": "mathcomp/character/integral_char.v",
        "status": "M",
        "additions": 293,
        "deletions": 334
      },
      {
        "file": "mathcomp/character/mxabelem.v",
        "status": "M",
        "additions": 293,
        "deletions": 334
      },
      {
        "file": "mathcomp/character/mxrepresentation.v",
        "status": "M",
        "additions": 293,
        "deletions": 334
      },
      {
        "file": "mathcomp/field/falgebra.v",
        "status": "M",
        "additions": 293,
        "deletions": 334
      },
      {
        "file": "mathcomp/fingroup/action.v",
        "status": "M",
        "additions": 293,
        "deletions": 334
      },
      {
        "file": "mathcomp/fingroup/automorphism.v",
        "status": "M",
        "additions": 293,
        "deletions": 334
      },
      {
        "file": "mathcomp/fingroup/fingroup.v",
        "status": "M",
        "additions": 293,
        "deletions": 334
      },
      {
        "file": "mathcomp/fingroup/gproduct.v",
        "status": "M",
        "additions": 293,
        "deletions": 334
      },
      {
        "file": "mathcomp/fingroup/morphism.v",
        "status": "M",
        "additions": 293,
        "deletions": 334
      },
      {
        "file": "mathcomp/fingroup/perm.v",
        "status": "M",
        "additions": 293,
        "deletions": 334
      },
      {
        "file": "mathcomp/fingroup/presentation.v",
        "status": "M",
        "additions": 293,
        "deletions": 334
      },
      {
        "file": "mathcomp/fingroup/quotient.v",
        "status": "M",
        "additions": 293,
        "deletions": 334
      },
      {
        "file": "mathcomp/odd_order/PFsection3.v",
        "status": "M",
        "additions": 293,
        "deletions": 334
      },
      {
        "file": "mathcomp/odd_order/PFsection4.v",
        "status": "M",
        "additions": 293,
        "deletions": 334
      },
      {
        "file": "mathcomp/real_closed/ordered_qelim.v",
        "status": "M",
        "additions": 293,
        "deletions": 334
      },
      {
        "file": "mathcomp/real_closed/qe_rcf.v",
        "status": "M",
        "additions": 293,
        "deletions": 334
      },
      {
        "file": "mathcomp/solvable/abelian.v",
        "status": "M",
        "additions": 293,
        "deletions": 334
      },
      {
        "file": "mathcomp/solvable/center.v",
        "status": "M",
        "additions": 293,
        "deletions": 334
      },
      {
        "file": "mathcomp/solvable/commutator.v",
        "status": "M",
        "additions": 293,
        "deletions": 334
      },
      {
        "file": "mathcomp/solvable/cyclic.v",
        "status": "M",
        "additions": 293,
        "deletions": 334
      },
      {
        "file": "mathcomp/solvable/frobenius.v",
        "status": "M",
        "additions": 293,
        "deletions": 334
      },
      {
        "file": "mathcomp/solvable/gseries.v",
        "status": "M",
        "additions": 293,
        "deletions": 334
      },
      {
        "file": "mathcomp/solvable/jordanholder.v",
        "status": "M",
        "additions": 293,
        "deletions": 334
      },
      {
        "file": "mathcomp/solvable/maximal.v",
        "status": "M",
        "additions": 293,
        "deletions": 334
      },
      {
        "file": "mathcomp/solvable/nilpotent.v",
        "status": "M",
        "additions": 293,
        "deletions": 334
      },
      {
        "file": "mathcomp/solvable/pgroup.v",
        "status": "M",
        "additions": 293,
        "deletions": 334
      },
      {
        "file": "mathcomp/solvable/primitive_action.v",
        "status": "M",
        "additions": 293,
        "deletions": 334
      },
      {
        "file": "mathcomp/solvable/sylow.v",
        "status": "M",
        "additions": 293,
        "deletions": 334
      },
      {
        "file": "mathcomp/ssreflect/eqtype.v",
        "status": "M",
        "additions": 293,
        "deletions": 334
      },
      {
        "file": "mathcomp/ssreflect/finset.v",
        "status": "M",
        "additions": 293,
        "deletions": 334
      },
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 293,
        "deletions": 334
      }
    ],
    "state": "merged",
    "open_date": "2018-03-05T01:10:33Z",
    "update_date": "2018-03-20T21:23:40Z",
    "discussion": [
      {
        "author": "gares",
        "date": "2018-03-05T10:24:11Z",
        "comment": "> I'll also note that using the arguments command just to specify scopes doesn't change implicit argument status, so even after Arguments foo _%a _%b foo might have some implicit arguments. As documentation, that is perhaps somewhat confusing.\r\n\r\nYep I know, it is a choice I made a long ago. Since then many found it surprising, but I'm not sure the other option (unset all options that are set) would make the command more usable (I agree it will make it more \"documenting\").\r\nYou can append a `: clear implicits` if you want to signal the constant has no implicit arguments. Did you see many of these?"
      },
      {
        "author": "gares",
        "date": "2018-03-05T10:25:00Z",
        "comment": "I'm asking Assia and Cyril to review the \"odd cases\" you listed (since they know these files much better than me).\r\n\r\nBTW, many thanks for the PR!"
      },
      {
        "author": "jashug",
        "date": "2018-03-05T16:40:56Z",
        "comment": "In most cases, I didn't look at whether there were implicit arguments or not, so I'm not sure how commonly you have some/no implicit arguments."
      },
      {
        "author": "jashug",
        "date": "2018-03-20T19:42:13Z",
        "comment": "@gares @amahboubi @CohenCyril ping"
      },
      {
        "author": "gares",
        "date": "2018-03-20T21:23:45Z",
        "comment": "I think there are no reasons not to merge this now.\r\nThe list of odd cases is there, and if we find out something can be improved, we can do it later.\r\n\r\nThanks again for your patch!"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "jashug",
        "committer": "jashug",
        "hash": "2525c33691e25f837b7dca31d4c702199b3dbc5d",
        "message": "Change deprecated Arguments Scope to Arguments",
        "date": "2018-03-05T00:57:06Z"
      }
    ]
  },
  {
    "author": "ybertot",
    "number": 183,
    "diff_summary": [
      {
        "file": "index.html",
        "status": "M",
        "additions": 3,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2018-03-02T15:11:38Z",
    "update_date": "2018-03-05T12:32:15Z",
    "discussion": [
      {
        "author": "amahboubi",
        "date": "2018-03-05T11:26:43Z",
        "comment": "Hi Yves, good idea to have this link! I am tempted to merge this seemingly innocuous PR but  I don't understand why Travis fails here (why is Travis concerned at all with this file?). @gares, any idea?"
      },
      {
        "author": "gares",
        "date": "2018-03-05T12:32:10Z",
        "comment": "It's a random failure (it happens all the times in Coq too).\r\nTravis runs stuff like `apt-get update` or `rake` in this case... if the network is down, or God know what, everything fails. \r\n\r\nAlso, travis checks the library, not the homepage, so I'll just merge."
      },
      {
        "author": "ejgallego",
        "date": "2018-03-05T12:41:23Z",
        "comment": "The reason for the failure is that the PR is based on the `gh-pages` branch that has no `.travis.yml` file."
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "ybertot",
        "committer": "web-flow",
        "hash": "2b61e37aa4ffc75c9949b9d86972dc8972a8f760",
        "message": "Add a link to the book home-page",
        "date": "2018-03-02T15:10:49Z"
      }
    ]
  },
  {
    "author": "gares",
    "number": 181,
    "diff_summary": [
      {
        "file": ".travis.yml",
        "status": "M",
        "additions": 0,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2018-02-27T10:44:30Z",
    "update_date": "2018-03-03T09:24:59Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "hash": "27294346fffdbb0f719e84787b4f845576e48d46",
        "message": "travis: disable Coq 8.5",
        "date": "2018-02-27T10:43:27Z"
      }
    ]
  },
  {
    "author": "erikmd",
    "number": 180,
    "diff_summary": [
      {
        "file": "mathcomp/Make",
        "status": "A",
        "additions": 6,
        "deletions": 3
      },
      {
        "file": "mathcomp/ssreflect/Make",
        "status": "A",
        "additions": 6,
        "deletions": 3
      },
      {
        "file": "mathcomp/ssreflect/Makefile.coq-makefile",
        "status": "A",
        "additions": 6,
        "deletions": 3
      },
      {
        "file": "mathcomp/ssreflect/plugin/v8.6/ssreflect.v",
        "status": "A",
        "additions": 6,
        "deletions": 3
      },
      {
        "file": "mathcomp/ssreflect/ssrmatching.v",
        "status": "A",
        "additions": 6,
        "deletions": 3
      }
    ],
    "state": "merged",
    "open_date": "2018-02-25T23:19:27Z",
    "update_date": "2018-03-03T09:26:23Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2018-02-26T10:06:11Z",
        "comment": "@erikmd thanks for the PR, however travis failed on every single version of Coq. With which set of packages does it compile on your computer?"
      },
      {
        "author": "erikmd",
        "date": "2018-02-26T12:25:19Z",
        "comment": "@CohenCyril before pushing my commit I had successfully compiled the ssreflect package (with Coq 8.6.1 and 8.5.3) by following the commands mentioned in the opam file, basically: `git reset --hard && git clean -d -x -f` then `cd mathcomp/ssreflect && make && make install`. So indeed I'm puzzled to see that the command `make -f Makefile.coq -j ${NJOBS} all` run in the root folder by Travis CI systematically fails... maybe I forgot to update something? I'll try to investigate, but feel free to react if you've an idea where this configuration issue could come from! :)"
      },
      {
        "author": "erikmd",
        "date": "2018-02-26T12:27:29Z",
        "comment": "Actually I think I just forgot to update [the global Make file](https://github.com/math-comp/math-comp/blob/master/mathcomp/Make) ; I'll test this and keep you informed"
      },
      {
        "author": "erikmd",
        "date": "2018-02-26T13:28:54Z",
        "comment": "After fixing this, the test build passed with Coq 8.6.1 on my PC. Finally I also updated `ssreflect/plugin/v8.6/ssreflect.v` to directly rely on `ssrmatching` from Coq and thus \"avoid one indirection\".\r\n(I'll rebase and force-push just now to make Travis do more tests.)"
      },
      {
        "author": "erikmd",
        "date": "2018-02-26T14:24:55Z",
        "comment": "The Travis build passed except for 8.5, because `ssrmatching.v` was copied in the wrong folder... Now it should be OK :)"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "erikmd",
        "committer": "erikmd",
        "hash": "f24095cfbe19c9ddb5ff3dee17a50f715a98acf5",
        "message": "Add ssrmatching.v transitional file\n\nThe content of this file is similar to that of ssrfun.v and aims to\nincrease compatibility with Coq 8.6+ for third-party libraries that\ndepend on both math-comp and ssrmatching.v\n\nClose #63",
        "date": "2018-02-26T14:23:18Z"
      }
    ]
  },
  {
    "author": "jashug",
    "number": 179,
    "diff_summary": [
      {
        "file": "mathcomp/algebra/finalg.v",
        "status": "M",
        "additions": 693,
        "deletions": 694
      },
      {
        "file": "mathcomp/algebra/intdiv.v",
        "status": "M",
        "additions": 693,
        "deletions": 694
      },
      {
        "file": "mathcomp/algebra/interval.v",
        "status": "M",
        "additions": 693,
        "deletions": 694
      },
      {
        "file": "mathcomp/algebra/matrix.v",
        "status": "M",
        "additions": 693,
        "deletions": 694
      },
      {
        "file": "mathcomp/algebra/mxalgebra.v",
        "status": "M",
        "additions": 693,
        "deletions": 694
      },
      {
        "file": "mathcomp/algebra/mxpoly.v",
        "status": "M",
        "additions": 693,
        "deletions": 694
      },
      {
        "file": "mathcomp/algebra/poly.v",
        "status": "M",
        "additions": 693,
        "deletions": 694
      },
      {
        "file": "mathcomp/algebra/rat.v",
        "status": "M",
        "additions": 693,
        "deletions": 694
      },
      {
        "file": "mathcomp/algebra/ssralg.v",
        "status": "M",
        "additions": 693,
        "deletions": 694
      },
      {
        "file": "mathcomp/algebra/ssrint.v",
        "status": "M",
        "additions": 693,
        "deletions": 694
      },
      {
        "file": "mathcomp/algebra/ssrnum.v",
        "status": "M",
        "additions": 693,
        "deletions": 694
      },
      {
        "file": "mathcomp/algebra/vector.v",
        "status": "M",
        "additions": 693,
        "deletions": 694
      },
      {
        "file": "mathcomp/algebra/zmodp.v",
        "status": "M",
        "additions": 693,
        "deletions": 694
      },
      {
        "file": "mathcomp/character/character.v",
        "status": "M",
        "additions": 693,
        "deletions": 694
      },
      {
        "file": "mathcomp/character/classfun.v",
        "status": "M",
        "additions": 693,
        "deletions": 694
      },
      {
        "file": "mathcomp/character/inertia.v",
        "status": "M",
        "additions": 693,
        "deletions": 694
      },
      {
        "file": "mathcomp/character/mxrepresentation.v",
        "status": "M",
        "additions": 693,
        "deletions": 694
      },
      {
        "file": "mathcomp/character/vcharacter.v",
        "status": "M",
        "additions": 693,
        "deletions": 694
      },
      {
        "file": "mathcomp/field/algebraics_fundamentals.v",
        "status": "M",
        "additions": 693,
        "deletions": 694
      },
      {
        "file": "mathcomp/field/countalg.v",
        "status": "M",
        "additions": 693,
        "deletions": 694
      },
      {
        "file": "mathcomp/field/falgebra.v",
        "status": "M",
        "additions": 693,
        "deletions": 694
      },
      {
        "file": "mathcomp/field/fieldext.v",
        "status": "M",
        "additions": 693,
        "deletions": 694
      },
      {
        "file": "mathcomp/field/galois.v",
        "status": "M",
        "additions": 693,
        "deletions": 694
      },
      {
        "file": "mathcomp/field/separable.v",
        "status": "M",
        "additions": 693,
        "deletions": 694
      },
      {
        "file": "mathcomp/fingroup/action.v",
        "status": "M",
        "additions": 693,
        "deletions": 694
      },
      {
        "file": "mathcomp/fingroup/automorphism.v",
        "status": "M",
        "additions": 693,
        "deletions": 694
      },
      {
        "file": "mathcomp/fingroup/fingroup.v",
        "status": "M",
        "additions": 693,
        "deletions": 694
      },
      {
        "file": "mathcomp/fingroup/gproduct.v",
        "status": "M",
        "additions": 693,
        "deletions": 694
      },
      {
        "file": "mathcomp/fingroup/morphism.v",
        "status": "M",
        "additions": 693,
        "deletions": 694
      },
      {
        "file": "mathcomp/fingroup/perm.v",
        "status": "M",
        "additions": 693,
        "deletions": 694
      },
      {
        "file": "mathcomp/fingroup/quotient.v",
        "status": "M",
        "additions": 693,
        "deletions": 694
      },
      {
        "file": "mathcomp/odd_order/BGsection12.v",
        "status": "M",
        "additions": 693,
        "deletions": 694
      },
      {
        "file": "mathcomp/odd_order/BGsection7.v",
        "status": "M",
        "additions": 693,
        "deletions": 694
      },
      {
        "file": "mathcomp/odd_order/PFsection3.v",
        "status": "M",
        "additions": 693,
        "deletions": 694
      },
      {
        "file": "mathcomp/odd_order/PFsection4.v",
        "status": "M",
        "additions": 693,
        "deletions": 694
      },
      {
        "file": "mathcomp/odd_order/PFsection5.v",
        "status": "M",
        "additions": 693,
        "deletions": 694
      },
      {
        "file": "mathcomp/real_closed/mxtens.v",
        "status": "M",
        "additions": 693,
        "deletions": 694
      },
      {
        "file": "mathcomp/real_closed/ordered_qelim.v",
        "status": "M",
        "additions": 693,
        "deletions": 694
      },
      {
        "file": "mathcomp/real_closed/qe_rcf.v",
        "status": "M",
        "additions": 693,
        "deletions": 694
      },
      {
        "file": "mathcomp/real_closed/realalg.v",
        "status": "M",
        "additions": 693,
        "deletions": 694
      },
      {
        "file": "mathcomp/solvable/abelian.v",
        "status": "M",
        "additions": 693,
        "deletions": 694
      },
      {
        "file": "mathcomp/solvable/burnside_app.v",
        "status": "M",
        "additions": 693,
        "deletions": 694
      },
      {
        "file": "mathcomp/solvable/center.v",
        "status": "M",
        "additions": 693,
        "deletions": 694
      },
      {
        "file": "mathcomp/solvable/commutator.v",
        "status": "M",
        "additions": 693,
        "deletions": 694
      },
      {
        "file": "mathcomp/solvable/cyclic.v",
        "status": "M",
        "additions": 693,
        "deletions": 694
      },
      {
        "file": "mathcomp/solvable/frobenius.v",
        "status": "M",
        "additions": 693,
        "deletions": 694
      },
      {
        "file": "mathcomp/solvable/gseries.v",
        "status": "M",
        "additions": 693,
        "deletions": 694
      },
      {
        "file": "mathcomp/solvable/maximal.v",
        "status": "M",
        "additions": 693,
        "deletions": 694
      },
      {
        "file": "mathcomp/solvable/pgroup.v",
        "status": "M",
        "additions": 693,
        "deletions": 694
      },
      {
        "file": "mathcomp/solvable/primitive_action.v",
        "status": "M",
        "additions": 693,
        "deletions": 694
      },
      {
        "file": "mathcomp/ssreflect/bigop.v",
        "status": "M",
        "additions": 693,
        "deletions": 694
      },
      {
        "file": "mathcomp/ssreflect/choice.v",
        "status": "M",
        "additions": 693,
        "deletions": 694
      },
      {
        "file": "mathcomp/ssreflect/div.v",
        "status": "M",
        "additions": 693,
        "deletions": 694
      },
      {
        "file": "mathcomp/ssreflect/eqtype.v",
        "status": "M",
        "additions": 693,
        "deletions": 694
      },
      {
        "file": "mathcomp/ssreflect/finfun.v",
        "status": "M",
        "additions": 693,
        "deletions": 694
      },
      {
        "file": "mathcomp/ssreflect/fingraph.v",
        "status": "M",
        "additions": 693,
        "deletions": 694
      },
      {
        "file": "mathcomp/ssreflect/finset.v",
        "status": "M",
        "additions": 693,
        "deletions": 694
      },
      {
        "file": "mathcomp/ssreflect/fintype.v",
        "status": "M",
        "additions": 693,
        "deletions": 694
      },
      {
        "file": "mathcomp/ssreflect/generic_quotient.v",
        "status": "M",
        "additions": 693,
        "deletions": 694
      },
      {
        "file": "mathcomp/ssreflect/path.v",
        "status": "M",
        "additions": 693,
        "deletions": 694
      },
      {
        "file": "mathcomp/ssreflect/prime.v",
        "status": "M",
        "additions": 693,
        "deletions": 694
      },
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 693,
        "deletions": 694
      },
      {
        "file": "mathcomp/ssreflect/ssrnat.v",
        "status": "M",
        "additions": 693,
        "deletions": 694
      },
      {
        "file": "mathcomp/ssreflect/tuple.v",
        "status": "M",
        "additions": 693,
        "deletions": 694
      },
      {
        "file": "mathcomp/ssrtest/elim2.v",
        "status": "M",
        "additions": 693,
        "deletions": 694
      }
    ],
    "state": "merged",
    "open_date": "2018-02-22T10:45:23Z",
    "update_date": "2018-03-03T09:30:34Z",
    "discussion": [
      {
        "author": "jashug",
        "date": "2018-02-22T18:17:07Z",
        "comment": "Something went wrong on v8.5 on Travis: https://travis-ci.org/math-comp/math-comp/jobs/344736906\r\n"
      },
      {
        "author": "jashug",
        "date": "2018-02-22T21:01:03Z",
        "comment": "The issue on v8.5 appears to be that, in that version, trailing arguments need to be included, so for a function like `Definition foo x y := t`, `Arguments foo [x]` works in 8.6- but fails in 8.5, where you need to write `Arguments foo [x] y`. I'll go through and add the trailing arguments."
      },
      {
        "author": "maximedenes",
        "date": "2018-02-22T21:03:18Z",
        "comment": "I would suggest you wait a bit before doing that. There are many incompatibilities related to `Arguments` between 8.5 and 8.6, and mathcomp developers may want to reconsider 8.5 support now what 8.8 is being released. At least, it's worth discussing."
      },
      {
        "author": "gares",
        "date": "2018-02-23T10:14:03Z",
        "comment": "Many thanks for the patch!\r\n\r\nI too agree with @maximedenes that v8.5 support is not a major concern. We already support 8.6 and 8.7, so the \"rule of the two versions\" is respected IMO.\r\n\r\nI'll give another spin for 8.6 that did timeout."
      },
      {
        "author": "gares",
        "date": "2018-02-23T10:19:13Z",
        "comment": "> I saw a lot of times when a reflect was proven, and immediately followed by an Arguments command setting all arguments implicit (which became maximal since there are no arguments to follow). It would be possible to achieve the same effect using {x} binders in the statement of the lemma.\r\n\r\nI'm not against it, but please not in this PR.\r\n\r\nActually, I don't know why `{ binder : type }` is not used in this library. Maybe it is just because it is a recent addition. @ggonthier do you recall any issue with this Coq feature?"
      },
      {
        "author": "ggonthier",
        "date": "2018-02-23T10:39:21Z",
        "comment": "Indeed, `{arg}` was too recent a feature to be used when most of the library was written. I'm somewhat reluctant to rely on it for the `reflectP`-style lemmas, because of the risk of inconsistencies: it often happens that some of the arguments to reflection lemmas are section arguments, in which case they need to be made explicitly implicit (sic) after the section. As this may change during refactoring, I think it is sound practice to always have an `Arguments` declaration for each reflection lemma. Similarly I feel an `Arguments` declaration should serve as documentation of the parameters of a constant: there should only be one such declaration in the source code, and it should list explicitly all the parameters and not merely amend the original definition."
      },
      {
        "author": "jashug",
        "date": "2018-02-23T11:05:31Z",
        "comment": "I have no intention of changing the content of this PR now that Travis is happy with 8.6.\r\n\r\nHaving the Arguments declaration act as documentation makes sense to me. My comment was really a side note, after seeing the pattern (what felt like) ~50 times, I just had to mention it.\r\n\r\nIn the spirit of acting as documentation though, when `foo` takes exactly 3 arguments, `Arguments foo [x y z].` would perhaps be better as `Arguments foo {x y z}.`, since implicits at the end automatically get promoted to maximal. That way it is clear that `foo` means `@foo _ _ _` not `@foo`, which is what `[x y z]` would normally suggest to me.\r\n(The same comment applies to the old style `Implicit Arguments foo [x y z].` vs. `Implicit Arguments foo [[x] [y] [z]].` I preserved whichever was used in this PR.)"
      },
      {
        "author": "ggonthier",
        "date": "2018-02-23T11:34:16Z",
        "comment": "An implicit declaration on a non-dependent argument is actually treated as a maximal implicit declaration, and this behaviour actually predates the implementation of maximal implicits. This was how mathcomp got around the Coq dev's initial reluctance to support maximal implicits. We just continued using the coding pattern even after maximal implicits were introduced (partly, I'll admit, because I found the `[[x] [y]]`syntax a bit clunky)."
      },
      {
        "author": "gares",
        "date": "2018-03-03T09:30:05Z",
        "comment": "I've disables travis on 8.5, I guess we are good to go"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "jashug",
        "committer": "jashug",
        "hash": "19f9b3e774db1dedca149675f022d65cdeab7e6c",
        "message": "Change Implicit Arguments to Arguments in ssreflect",
        "date": "2018-02-22T06:41:00Z"
      },
      {
        "author": "jashug",
        "committer": "jashug",
        "hash": "181e9e94e04f45e0deb231246e1783c48be4f99d",
        "message": "Change Implicit Arguments to Arguments in fingroup",
        "date": "2018-02-22T07:07:25Z"
      },
      {
        "author": "jashug",
        "committer": "jashug",
        "hash": "64ceb784611e5ded0c715835a36490de1c3bb1ca",
        "message": "Change Implicit Arguments to Arguments in algebra",
        "date": "2018-02-22T07:27:04Z"
      },
      {
        "author": "jashug",
        "committer": "jashug",
        "hash": "cef1a8eadcdef812ce9ee2738cb294644fafbfab",
        "message": "Change Implicit Arguments to Arguments in solvable",
        "date": "2018-02-22T07:43:44Z"
      },
      {
        "author": "jashug",
        "committer": "jashug",
        "hash": "40d53fc61a7907c7f08bf37b9ab045ef4a5a1fe9",
        "message": "Change Implicit Arguments to Arguments in field",
        "date": "2018-02-22T07:48:01Z"
      },
      {
        "author": "jashug",
        "committer": "jashug",
        "hash": "66c7010194f5946cc4f07edc55f92129d0963b99",
        "message": "Change Implicit Arguments to Arguments in character",
        "date": "2018-02-22T08:48:18Z"
      },
      {
        "author": "jashug",
        "committer": "jashug",
        "hash": "ddc1cc6857821220b9a67af0af042282200dbf44",
        "message": "Change Implicit Arguments to Arguments in real_closed",
        "date": "2018-02-22T09:45:41Z"
      },
      {
        "author": "jashug",
        "committer": "jashug",
        "hash": "fe058c3300cf2385f1079fa906cbd13cd2349286",
        "message": "Change Implicit Arguments to Arguments in odd_order",
        "date": "2018-02-22T09:57:03Z"
      }
    ]
  },
  {
    "author": "thery",
    "number": 178,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 1,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2018-02-16T15:16:00Z",
    "update_date": "2018-03-06T13:38:04Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2018-02-26T10:03:14Z",
        "comment": "@ybertot: I think it hardly happens, but I guess it may if some induction hypothesis is generalized in your proof. I am very curious to see Laurent's use case though :)\r\n\r\nAnyway, this generalization introduces no overhead when the rewrite rule is used from left to right, a minor overhead when used from right to left, so I am in favor of merging."
      },
      {
        "author": "amahboubi",
        "date": "2018-03-06T13:37:40Z",
        "comment": "Hi @thery ! Any response to @CohenCyril, who was asking about your use case? Anyway, I am merging."
      },
      {
        "author": "thery",
        "date": "2018-03-06T17:44:58Z",
        "comment": "@amahboubi  sorry but when looking at my usage with @ybertot, we realize that the proof could be fixed and use the nth 0 version. Anyway the generalization seems natural to me."
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "thery",
        "committer": "thery",
        "hash": "76ebc736158c97c23a47492bcda9f9daaedc7ed7",
        "message": "generalize nth_iota",
        "date": "2018-02-16T15:13:30Z"
      }
    ]
  },
  {
    "author": "gares",
    "number": 177,
    "diff_summary": [
      {
        "file": "mathcomp/Make",
        "status": "M",
        "additions": 5,
        "deletions": 1
      },
      {
        "file": "mathcomp/ssrtest/explain_match.v",
        "status": "M",
        "additions": 5,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2018-02-06T12:53:12Z",
    "update_date": "2018-02-21T14:10:05Z",
    "discussion": [
      {
        "author": "gares",
        "date": "2018-02-19T16:25:56Z",
        "comment": "@CohenCyril it now compiles"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "hash": "3b2fd56a5645b3bd436085e514519c9f61200ae5",
        "message": "add 3 tests to Make",
        "date": "2018-02-06T14:46:26Z"
      }
    ]
  },
  {
    "author": "gares",
    "number": 176,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/binomial.v",
        "status": "M",
        "additions": 1,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2018-02-05T10:05:29Z",
    "update_date": "2018-02-05T10:54:57Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "hash": "fbb7b486e6dcd511142cbf173f01eccb4023e37c",
        "message": "tide up proof of card_inj_ffuns",
        "date": "2018-02-05T10:04:41Z"
      }
    ]
  },
  {
    "author": "JasonGross",
    "number": 174,
    "diff_summary": [
      {
        "file": "mathcomp/Makefile",
        "status": "M",
        "additions": 3,
        "deletions": 1
      }
    ],
    "state": "closed",
    "open_date": "2017-12-18T22:08:37Z",
    "update_date": "2018-08-01T09:48:10Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2018-01-26T16:57:00Z",
        "comment": "This looks useful, but I am unable to understand the implications of this pull request. @gares can you give your opinion?"
      },
      {
        "author": "amahboubi",
        "date": "2018-03-23T13:16:03Z",
        "comment": "Hi @JasonGross, could you help us assessing this pull request? I not the most qualified dev on this kind of stuff, but  I just do not understand why you need this."
      },
      {
        "author": "JasonGross",
        "date": "2018-03-24T18:52:39Z",
        "comment": "In the present state of the repo, you do `OLD_MAKEFLAGS:=$(MAKEFLAGS)`, which gets evaluated once in the global context.  Apparently, `make` does not put jobserver flags (used for parallel make) in `MAKEFLAGS` in the global context, but only when you are executing a rule, and so when you pass the makeflags on to `MAKEFLAGS=\"$(OLD_MAKEFLAGS)\" $(MAKE) -f Makefile.coq`, you lose the parallel build.  This PR uses `OLD_MAKEFLAGS=` instead of `OLD_MAKEFLAGS:=`, which means that the body of `OLD_MAKEFLAGS` gets evaluated at use-site instead of at definition site, and so the jobserver flags, which only show up in `MAKEFLAGS` in the context of executing a rule, do get picked up appropriately."
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "JasonGross",
        "committer": "JasonGross",
        "hash": "bda1aa9d494e4c92374db32f47e456ff9cd35540",
        "message": "Enable parallel build, fix #88\n\nApparently, the jobserver flags don't show up until we're actually\nexecuting a rule.  So rather than save the old flags, we instead record\nwhether or not we've seen -B before adding it (actually, whether we've\nseen -B or B, since it seems that make stores B rather than -B in\nMAKEFLAGS?), and then, later, we filter out B and -B only if we didn't\nsee them before we added them.",
        "date": "2017-12-18T22:07:06Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 172,
    "diff_summary": [
      {
        "file": "mathcomp/algebra/matrix.v",
        "status": "M",
        "additions": 18,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2017-12-12T19:12:23Z",
    "update_date": "2017-12-20T22:23:03Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "a5878946517d5b07e4273178a939eab66d0ab1f6",
        "message": "Adding row/col/block_mx_eq0",
        "date": "2017-12-12T19:10:53Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 171,
    "diff_summary": [
      {
        "file": "mathcomp/algebra/mxalgebra.v",
        "status": "M",
        "additions": 19,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2017-12-12T19:02:39Z",
    "update_date": "2018-01-26T16:55:40Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2017-12-14T12:24:36Z",
        "comment": "@ggonthier you are right, this looked weird. I put `F I P` in the section context. I also did a small generalization by requiring injectivity only in `P` (as in `mxdirect_sum_eigenspace`)\r\n"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "c6e4012ec499b100abfd19320b6790d9849eba9e",
        "message": "The spaces generated by some delta_mx are in a direct sum\n\nproof by @ggonthier",
        "date": "2017-12-14T12:22:31Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 170,
    "diff_summary": [
      {
        "file": "mathcomp/algebra/ssralg.v",
        "status": "M",
        "additions": 14,
        "deletions": 2
      }
    ],
    "state": "merged",
    "open_date": "2017-12-12T16:36:28Z",
    "update_date": "2017-12-15T10:18:09Z",
    "discussion": [
      {
        "author": "ggonthier",
        "date": "2017-12-13T11:40:31Z",
        "comment": "I'm afraid this is too much of a generalisation of #169, which provided a backchaining lemma in the vein of `subr0_eq`. These lemmas can't be used this way: one would have to formulate explicitly the `x / y = 1` subgoal, which could be inconvenient if `x` or `y` are large. Plus, I don't see the point of the rewrite multirule formulation, since either `x` or `y` can't be inferred from the left or right hand side. Finally, switching the equation sides is unnatural (the `y = ...` conclusions).\r\n  So I'd suggest sticking to the `subr0_eq` model, with perhaps a `mulr1_eq` lemma defining the inverse of `x`; perhaps we should also add an `addr0_eq` lemma for consistency?\r\n\r\n```\r\nLemma mulr1_eq x y : x * y = 1 -> x^-1 = y.\r\nProof.\r\nby move=> xy_eq1; rewrite -[LHS]mulr1 -xy_eq1; apply/mulKr/unitrPr; exists y.\r\nQed.\r\n\r\nLemma divr1_eq x y : x / y = 1 -> x = y. Proof. by move/mulr1_eq/invr_inj. Qed.\r\n```"
      },
      {
        "author": "CohenCyril",
        "date": "2017-12-14T11:11:02Z",
        "comment": "I agree this makes much more sense for backchaining. I updated my pull request accordingly.\r\nWe can merge when Travis compiles.\r\n(My original intent was not to forget that x was a unit while using this view in a forward chain. Now the user needs to make the duplication himself if he needs to, which is ok I guess.)"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "c13976f1405b12009c12165aa0b5585285586dac",
        "message": "Using x * y = 1 and x / y = 1 to derive the inverse\n\nfixes #169",
        "date": "2017-12-14T11:07:17Z"
      }
    ]
  },
  {
    "author": "hivert",
    "number": 169,
    "diff_summary": [
      {
        "file": "mathcomp/algebra/ssralg.v",
        "status": "M",
        "additions": 8,
        "deletions": 0
      }
    ],
    "state": "closed",
    "open_date": "2017-12-12T15:31:00Z",
    "update_date": "2017-12-12T17:56:58Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2017-12-12T16:36:16Z",
        "comment": "Indeed I happened to lack such a statement at some point in my life."
      },
      {
        "author": "CohenCyril",
        "date": "2017-12-12T16:38:26Z",
        "comment": "Thanks for bringing this to my attention again, I wrote a piece of code to generalize and subsume what you did."
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "hivert",
        "committer": "hivert",
        "hash": "b7c8364cd68bb98ffb0229974d69118100a7ffae",
        "message": "div_eq1 lemma",
        "date": "2017-12-12T15:28:15Z"
      }
    ]
  },
  {
    "author": "hivert",
    "number": 168,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/bigop.v",
        "status": "M",
        "additions": 9,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2017-12-12T14:43:26Z",
    "update_date": "2017-12-14T11:11:58Z",
    "discussion": [
      {
        "author": "hivert",
        "date": "2017-12-12T16:16:28Z",
        "comment": "@CohenCyril : Adressed your change and resubmitted."
      }
    ],
    "review_discussion": [
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/bigop.v",
        "date": "2017-12-12T16:46:25Z",
        "comment": "The arguments names are out of sync."
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/bigop.v",
        "date": "2017-12-12T16:47:01Z",
        "comment": "And there is colon at the end... Does this compile?"
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "hivert",
        "committer": "hivert",
        "hash": "d212fc7becf0bd00e1cfd52fbd95a6e677dae86e",
        "message": "bigop with allpairs",
        "date": "2017-12-12T17:20:17Z"
      }
    ]
  },
  {
    "author": "hivert",
    "number": 167,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 13,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2017-12-12T10:58:29Z",
    "update_date": "2017-12-14T18:10:41Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2017-12-12T11:49:08Z",
        "comment": "Dear Florent, can you please refactor your pull request and squash all commits into only one?"
      },
      {
        "author": "hivert",
        "date": "2017-12-12T13:02:22Z",
        "comment": "@CohenCyril: Once again, I'm in trouble with github workflow. I understood that **you** where supposed to do it when merging the pull request: https://github.com/blog/2141-squash-your-commits\r\nNow I'm not sure about what I should do. If I squash it on my computer, rewriting the history and then do a `push --force` on my PR2 branch on github, will it correctly update the pull request ? Or am I supposed to do something else ?"
      },
      {
        "author": "CohenCyril",
        "date": "2017-12-12T13:38:39Z",
        "comment": "Yes Florent, you are supposed to push --force (and that's another reason why you should always create a new branch before making a pull request)"
      },
      {
        "author": "maximedenes",
        "date": "2017-12-12T13:41:32Z",
        "comment": "> If I squash it on my computer, rewriting the history and then do a push --force on my PR2 branch on github, will it correctly update the pull request ?\r\n\r\nYes it will. PRs are just pointers to branches. When the branch is updated, so is the PR."
      },
      {
        "author": "hivert",
        "date": "2017-12-12T14:34:10Z",
        "comment": "Git is not my friend today. The squash went all wrong generating lots of conflicts. I ended up creating a brand new branch an coping by hand the file from one branch to the other. I'm starting to really dislike GH workflow... \r\n\r\nAnyway, the lemma should be here in a proper shape. I also checked that it is usable with the current statement (https://github.com/hivert/Coq-Combi/commit/d1f5e4db4182ec43423be02cee8f7a666f15028d). Finally, you may want to check if there is a simpler proof."
      }
    ],
    "review_discussion": [
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2017-12-12T11:46:21Z",
        "comment": "I guess that if we had the order library in mathcomp, the statement would look like:\r\n(i1 <= i2) = ((reshape_index sh i1, reshape_offset i1) <= (reshape_index sh i2, reshape_offset i2))\r\nwhere <= is the canonical lexicographic order on pairs, and that there should also be\r\n(flatten_index sh r1 c1 <= flatten_index sh r2 c2) = ((r1, c1) <= (r2, c2))\r\n\r\nSo in anticipation of that, I think the following variant would be better suited:\r\n(r1 := reshape_index sh i1) (c1 := reshape_offset sh i1) (r2 := reshape_index sh i2) (c2 := reshape_offset sh i2)\r\n(i1 <= i2) = ((r1 < r2) || ((r1 == r2 ) && (c1 <= c2))\r\nand/or the following\r\n(flatten_index sh r1 c1 <= flatten_index sh r2 c2) = ((r1 < r2) || ((r1 ==r2 ) && (c1 <= c2))\r\n"
      },
      {
        "author": "hivert",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2017-12-12T13:04:53Z",
        "comment": "I think I'll prefer the first. I'll give a try with my code and get back to you."
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "hivert",
        "committer": "hivert",
        "hash": "051a83a5f1efcf1a06f7ab0456dc6ffeb8d168e3",
        "message": "New lemma reshape_index_leq",
        "date": "2017-12-12T14:24:28Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "f0c46d647c7f5c7dc88cb2b06d20ea92ae2f9da1",
        "message": "refactored proof and renamed to reshape_leq and removed spurious hypothesis",
        "date": "2017-12-12T18:34:58Z"
      }
    ]
  },
  {
    "author": "hivert",
    "number": 166,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 211,
        "deletions": 36
      }
    ],
    "state": "merged",
    "open_date": "2017-12-11T11:02:40Z",
    "update_date": "2017-12-11T22:42:24Z",
    "discussion": [
      {
        "author": "hivert",
        "date": "2017-12-11T11:03:54Z",
        "comment": "There are some trivial conflicts, but since I Messed things up by trying to resolve them using github interface, I leave it to you to do the merge."
      },
      {
        "author": "CohenCyril",
        "date": "2017-12-11T12:09:19Z",
        "comment": "I'm on it"
      },
      {
        "author": "hivert",
        "date": "2017-12-11T14:04:44Z",
        "comment": "@CohenCyril: Thanks. One question: I'm ready to resubmit the removed \"reshape_index_leq\" lemma, however if I do so, you'll have all the other from this pull request too. It doesn't really makes sense to strip the code to what is needed for this single lemma. Should I wait for this pull request being integrated ?"
      },
      {
        "author": "hivert",
        "date": "2017-12-12T10:46:12Z",
        "comment": "Thanks for the merge !\r\n\r\nOne final last comment: now that I have a non trivial contribution to math-comp, I'd be glad to have my name written somewhere in a contributor section ;-) Yes I know: those reseacher/developper with their ego...\r\n"
      },
      {
        "author": "CohenCyril",
        "date": "2017-12-12T11:57:56Z",
        "comment": "Good point, until the next release your name is at least in a commit so github automatically lists you as a contributor (https://github.com/math-comp/math-comp/graphs/contributors). Now, when a tarball is made for a release, we have indeed to make sure to have contributor section."
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "hivert",
        "committer": "CohenCyril",
        "hash": "02ba1d818a42c190c8c49b4d97764a6977066d41",
        "message": "Missing lemmas in seq",
        "date": "2017-12-11T19:05:36Z"
      }
    ]
  },
  {
    "author": "ejgallego",
    "number": 165,
    "diff_summary": [
      {
        "file": "INSTALL.md",
        "status": "A",
        "additions": 111,
        "deletions": 75
      },
      {
        "file": "README.md",
        "status": "A",
        "additions": 111,
        "deletions": 75
      }
    ],
    "state": "merged",
    "open_date": "2017-11-29T22:53:28Z",
    "update_date": "2017-11-30T07:48:56Z",
    "discussion": [
      {
        "author": "ejgallego",
        "date": "2017-11-29T22:54:15Z",
        "comment": "Readable link https://github.com/ejgallego/math-comp/blob/readme_pass/README.md"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "ejgallego",
        "committer": "ejgallego",
        "hash": "abc9148f267b469261214bdfa629b574dec91cf6",
        "message": "[doc] Attempt to tweak README based on the discussion.",
        "date": "2017-11-29T22:55:35Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 164,
    "diff_summary": [
      {
        "file": "mathcomp/algebra/finalg.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/algebra/intdiv.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/algebra/interval.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/algebra/matrix.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/algebra/mxalgebra.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/algebra/mxpoly.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/algebra/poly.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/algebra/polydiv.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/algebra/rat.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/algebra/ssralg.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/algebra/ssrint.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/algebra/vector.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/attic/algnum_basic.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/attic/amodule.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/attic/fib.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/attic/forms.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/attic/galgebra.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/attic/multinom.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/attic/tutorial.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/character/character.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/character/classfun.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/character/inertia.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/character/integral_char.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/character/mxabelem.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/character/mxrepresentation.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/character/vcharacter.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/field/algC.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/field/algebraics_fundamentals.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/field/algnum.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/field/closed_field.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/field/countalg.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/field/falgebra.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/field/fieldext.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/field/galois.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/field/separable.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/fingroup/action.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/fingroup/fingroup.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/fingroup/gproduct.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/odd_order/BGappendixAB.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/odd_order/BGappendixC.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/odd_order/BGsection1.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/odd_order/BGsection10.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/odd_order/BGsection11.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/odd_order/BGsection12.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/odd_order/BGsection13.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/odd_order/BGsection14.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/odd_order/BGsection15.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/odd_order/BGsection16.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/odd_order/BGsection2.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/odd_order/BGsection3.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/odd_order/BGsection4.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/odd_order/BGsection5.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/odd_order/BGsection6.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/odd_order/BGsection7.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/odd_order/BGsection8.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/odd_order/BGsection9.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/odd_order/PFsection1.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/odd_order/PFsection10.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/odd_order/PFsection11.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/odd_order/PFsection12.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/odd_order/PFsection13.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/odd_order/PFsection14.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/odd_order/PFsection2.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/odd_order/PFsection3.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/odd_order/PFsection4.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/odd_order/PFsection5.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/odd_order/PFsection6.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/odd_order/PFsection7.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/odd_order/PFsection8.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/odd_order/PFsection9.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/odd_order/wielandt_fixpoint.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/real_closed/bigenough.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/real_closed/cauchyreals.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/real_closed/complex.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/real_closed/mxtens.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/real_closed/ordered_qelim.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/real_closed/polyorder.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/real_closed/polyrcf.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/real_closed/qe_rcf.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/real_closed/qe_rcf_th.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/real_closed/realalg.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/solvable/abelian.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/solvable/alt.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/solvable/burnside_app.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/solvable/center.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/solvable/commutator.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/solvable/cyclic.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/solvable/extraspecial.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/solvable/extremal.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/solvable/finmodule.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/solvable/frobenius.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/solvable/gseries.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/solvable/hall.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/solvable/jordanholder.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/solvable/maximal.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/solvable/nilpotent.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/solvable/pgroup.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/solvable/sylow.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/ssreflect/bigop.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/ssreflect/binomial.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/ssreflect/div.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/ssreflect/finfun.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/ssreflect/finset.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/ssreflect/fintype.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/ssreflect/generic_quotient.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/ssreflect/path.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/ssreflect/prime.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/ssreflect/ssrnat.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/ssrtest/absevarprop.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/ssrtest/derive_inversion.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/ssrtest/elim.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/ssrtest/have_transp.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/ssrtest/havesuff.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/ssrtest/intro_beta.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/ssrtest/ltac_in.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/ssrtest/rewpatterns.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/ssrtest/set_pattern.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/ssrtest/ssrsyntax1.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/ssrtest/tc.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/ssrtest/testmx.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      },
      {
        "file": "mathcomp/ssrtest/wlogletin.v",
        "status": "M",
        "additions": 911,
        "deletions": 906
      }
    ],
    "state": "merged",
    "open_date": "2017-11-24T14:11:25Z",
    "update_date": "2018-02-06T18:36:54Z",
    "discussion": [
      {
        "author": "amahboubi",
        "date": "2018-02-05T10:18:21Z",
        "comment": "Hello @ggonthier and @ybertot : this PR seems to be ready for merging, but since it has been open for long, I am checking: any objection?"
      },
      {
        "author": "CohenCyril",
        "date": "2018-02-05T10:42:51Z",
        "comment": "@amahboubi I did not do the tweaks @ggonthier asked. So it's not ready for merging."
      },
      {
        "author": "amahboubi",
        "date": "2018-02-05T10:54:24Z",
        "comment": "Yes, I can see that, but if I am not mistaken, the present PR is about the result of the linting, and only deals with .v files.  From a superficial reading, it was not clear to me whether the comments above point to spurious blanks/bullets that your script introduced, or to  wrinkles already present in the original code. But the spurious  '-' in intro patterns seem to belong to the first category... Am I correct?"
      },
      {
        "author": "CohenCyril",
        "date": "2018-02-06T12:52:30Z",
        "comment": "Hi @amahboubi, every single comment is on the diff indeed, so they all are mistakes introduced by my scripts (by simplifying a more verbose script). So in order to merge this PR, one must fix all the comments by Georges and Yves in a manual way, or change the script to fix them, ... I prefer the first option, since this PR is independent from #163 ..."
      },
      {
        "author": "CohenCyril",
        "date": "2018-02-06T12:52:59Z",
        "comment": "I am going to do it now..."
      },
      {
        "author": "CohenCyril",
        "date": "2018-02-06T13:07:39Z",
        "comment": "@amahboubi I was wrong, some of the things @ggonthier and @ybertot  spotted are already present in the original code, but on the same line as things my script changed.\r\nAnyway, I believe this should be merged now, until the next pass of a more advanced linter..."
      }
    ],
    "review_discussion": [
      {
        "author": "ybertot",
        "file": "mathcomp/field/closed_field.v",
        "date": "2017-11-27T13:44:54Z",
        "comment": "Shouldn't this finish with \"congr (_ + _).\""
      },
      {
        "author": "ybertot",
        "file": "mathcomp/solvable/burnside_app.v",
        "date": "2017-11-27T14:14:16Z",
        "comment": "should be move: (cardC ..."
      },
      {
        "author": "ybertot",
        "file": "mathcomp/solvable/gfunctor.v",
        "date": "2017-11-27T14:18:44Z",
        "comment": "This is a clash.  In this context apply is a structure field name and the colon is akin to a type cast.  For this usage the colon should be surrounded by space."
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/odd_order/PFsection7.v",
        "date": "2017-11-27T15:26:31Z",
        "comment": "should be `[:: _; _]`"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/real_closed/cauchyreals.v",
        "date": "2017-11-27T15:27:46Z",
        "comment": "spurious `-` in intro pattern"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/real_closed/complex.v",
        "date": "2017-11-27T15:29:39Z",
        "comment": "should be `[:: a; b]`"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/solvable/jordanholder.v",
        "date": "2017-11-27T15:39:02Z",
        "comment": "spurious `-` in intro pattern"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/ssreflect/path.v",
        "date": "2017-11-27T15:41:37Z",
        "comment": "should be `[:: _; _]`"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/algebra/polydiv.v",
        "date": "2017-11-27T15:49:15Z",
        "comment": "How did the `; move...` escape the linter (should be `=>...`)"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/algebra/rat.v",
        "date": "2017-11-27T15:55:09Z",
        "comment": "Spurious `-` in intro pattern; the initial `-` in an intro pattern is only needed if the first pattern that follows is a `[...]` (skipping `//` and `{...}` switches). While this may be difficult to replicate with sed, certainly the`-/` and `-ident` combinations should be avoided."
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/attic/algnum_basic.v",
        "date": "2017-11-27T15:56:26Z",
        "comment": "spurious `-` in intro pattern"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/attic/algnum_basic.v",
        "date": "2017-11-27T15:57:26Z",
        "comment": "spurious `-` in  intro patterns (both lines)"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/attic/algnum_basic.v",
        "date": "2017-11-27T15:58:47Z",
        "comment": "should be `-[r tA rS]` (no space)"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/attic/algnum_basic.v",
        "date": "2017-11-27T15:59:33Z",
        "comment": "should be `-[`"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/attic/algnum_basic.v",
        "date": "2017-11-27T16:00:07Z",
        "comment": "spurious `-` before `r0`"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/attic/algnum_basic.v",
        "date": "2017-11-27T16:00:53Z",
        "comment": "should be `=> -[r ...`"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/attic/algnum_basic.v",
        "date": "2017-11-27T16:01:22Z",
        "comment": "spurious `-` in intro pattern"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/attic/algnum_basic.v",
        "date": "2017-11-27T16:01:44Z",
        "comment": "spurious `-` in intro pattern; also the following `case` should be merged in the intro pattern."
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/attic/algnum_basic.v",
        "date": "2017-11-27T16:04:08Z",
        "comment": "spurious `-` in intro patterns (x2)"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/attic/algnum_basic.v",
        "date": "2017-11-27T16:04:30Z",
        "comment": "spurious `-` in intro pattern"
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "fafd4dac5315e1d4e071b0044a50a16360b31964",
        "message": "running semi-automated linting on the whole library",
        "date": "2018-02-06T12:54:37Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "f3ce9ace4b55654d6240db9eb41a6de3c488f0d9",
        "message": "fixing things that @ggonthier and @ybertot spotted and some I spotted",
        "date": "2018-02-06T13:14:36Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 163,
    "diff_summary": [
      {
        "file": "CONTRIBUTING.md",
        "status": "A",
        "additions": 95,
        "deletions": 0
      },
      {
        "file": "etc/utils/ssrlint.awk",
        "status": "A",
        "additions": 95,
        "deletions": 0
      },
      {
        "file": "etc/utils/ssrlint.sed",
        "status": "A",
        "additions": 95,
        "deletions": 0
      }
    ],
    "state": "closed",
    "open_date": "2017-11-24T14:10:41Z",
    "update_date": "2019-02-26T12:31:16Z",
    "discussion": [
      {
        "author": "hivert",
        "date": "2017-12-12T15:34:28Z",
        "comment": "I like the typo saying that the script is written in \"Qed\" instead of \"sed\" ;-) !"
      },
      {
        "author": "amahboubi",
        "date": "2018-02-05T10:21:02Z",
        "comment": "Hello @CohenCyril, what is the status of this PR?"
      },
      {
        "author": "CohenCyril",
        "date": "2018-02-05T10:43:31Z",
        "comment": "@amahboubi the scripts should be modified to make sure the problems of #164 do not happen again."
      }
    ],
    "review_discussion": [],
    "tags": [
      {
        "tag": "needs: discussion",
        "description": "Issue or PR that needs discussion. Please come in a give your opinion."
      },
      {
        "tag": "kind: refactoring",
        "description": "Issue or PR about a refactoring. (reorganizing the code, reusing theorems, simplifications...)"
      },
      {
        "tag": "kind: stand by",
        "description": "PR that is currently stalled."
      }
    ],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "078cef46639766a6dac2f03f286c148c1e459bf5",
        "message": "Experimental linters for ssreflect style (awk + sed scripts)\n\n- an awk script to print messages (no rewriting here).\n  +  checking that lines are less than 80 characters long\n  + checking that indentation is formed by an even number of spaces\n  + checking for terminators in one line proofs\n  + /!\\ \"indentation for subgoal\" checking is not implemented yet\n- a sed script for systematic rewriting for spacing mostly, use with caution!!",
        "date": "2017-12-12T10:20:05Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 162,
    "diff_summary": [
      {
        "file": "CONTRIBUTING.md",
        "status": "A",
        "additions": 78,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2017-11-24T14:09:43Z",
    "update_date": "2017-12-11T22:47:41Z",
    "discussion": [
      {
        "author": "gares",
        "date": "2017-12-11T08:39:08Z",
        "comment": "Cyril please fix the typos and let's merge this one!"
      }
    ],
    "review_discussion": [
      {
        "author": "ybertot",
        "file": "CONTRIBUTING.md",
        "date": "2017-11-27T14:53:15Z",
        "comment": "with dependent variable**s**"
      },
      {
        "author": "ybertot",
        "file": "CONTRIBUTING.md",
        "date": "2017-11-27T14:56:06Z",
        "comment": "Hypotheses"
      },
      {
        "author": "ybertot",
        "file": "CONTRIBUTING.md",
        "date": "2017-11-27T14:56:36Z",
        "comment": "should be name**d**"
      },
      {
        "author": "ybertot",
        "file": "CONTRIBUTING.md",
        "date": "2017-11-27T14:57:19Z",
        "comment": "should be named"
      },
      {
        "author": "ybertot",
        "file": "CONTRIBUTING.md",
        "date": "2017-11-27T14:57:29Z",
        "comment": "should be named"
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "6b25220e33cd141a3fc219e31f7251c0ee47fae7",
        "message": "Draft contributing guide, fixes #158",
        "date": "2017-11-24T14:12:17Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "7e9df26ca2a95b465244d3102f11f465f27f3aea",
        "message": "fixing typos",
        "date": "2017-12-11T10:05:31Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 161,
    "diff_summary": [
      {
        "file": "STYLE.md",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "etc/utils/ssrlint.awk",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "etc/utils/ssrlint.sed",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/algebra/finalg.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/algebra/intdiv.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/algebra/interval.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/algebra/matrix.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/algebra/mxalgebra.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/algebra/mxpoly.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/algebra/poly.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/algebra/polydiv.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/algebra/rat.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/algebra/ssralg.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/algebra/ssrint.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/algebra/vector.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/attic/algnum_basic.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/attic/amodule.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/attic/fib.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/attic/forms.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/attic/galgebra.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/attic/multinom.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/attic/tutorial.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/character/character.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/character/classfun.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/character/inertia.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/character/integral_char.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/character/mxabelem.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/character/mxrepresentation.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/character/vcharacter.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/field/algC.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/field/algebraics_fundamentals.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/field/algnum.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/field/closed_field.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/field/countalg.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/field/falgebra.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/field/fieldext.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/field/galois.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/field/separable.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/fingroup/action.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/fingroup/fingroup.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/fingroup/gproduct.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/odd_order/BGappendixAB.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/odd_order/BGappendixC.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/odd_order/BGsection1.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/odd_order/BGsection10.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/odd_order/BGsection11.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/odd_order/BGsection12.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/odd_order/BGsection13.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/odd_order/BGsection14.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/odd_order/BGsection15.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/odd_order/BGsection16.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/odd_order/BGsection2.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/odd_order/BGsection3.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/odd_order/BGsection4.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/odd_order/BGsection5.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/odd_order/BGsection6.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/odd_order/BGsection7.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/odd_order/BGsection8.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/odd_order/BGsection9.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/odd_order/PFsection1.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/odd_order/PFsection10.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/odd_order/PFsection11.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/odd_order/PFsection12.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/odd_order/PFsection13.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/odd_order/PFsection14.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/odd_order/PFsection2.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/odd_order/PFsection3.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/odd_order/PFsection4.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/odd_order/PFsection5.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/odd_order/PFsection6.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/odd_order/PFsection7.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/odd_order/PFsection8.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/odd_order/PFsection9.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/odd_order/wielandt_fixpoint.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/real_closed/bigenough.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/real_closed/cauchyreals.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/real_closed/complex.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/real_closed/mxtens.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/real_closed/ordered_qelim.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/real_closed/polyorder.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/real_closed/polyrcf.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/real_closed/qe_rcf.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/real_closed/qe_rcf_th.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/real_closed/realalg.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/solvable/abelian.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/solvable/alt.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/solvable/burnside_app.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/solvable/center.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/solvable/commutator.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/solvable/cyclic.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/solvable/extraspecial.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/solvable/extremal.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/solvable/finmodule.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/solvable/frobenius.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/solvable/gfunctor.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/solvable/gseries.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/solvable/hall.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/solvable/jordanholder.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/solvable/maximal.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/solvable/nilpotent.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/solvable/pgroup.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/solvable/sylow.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/ssreflect/bigop.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/ssreflect/binomial.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/ssreflect/div.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/ssreflect/finfun.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/ssreflect/finset.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/ssreflect/fintype.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/ssreflect/generic_quotient.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/ssreflect/path.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/ssreflect/prime.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/ssreflect/ssrnat.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/ssrtest/absevarprop.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/ssrtest/derive_inversion.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/ssrtest/elim.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/ssrtest/have_transp.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/ssrtest/havesuff.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/ssrtest/intro_beta.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/ssrtest/ltac_in.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/ssrtest/rewpatterns.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/ssrtest/set_pattern.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/ssrtest/ssrsyntax1.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/ssrtest/tc.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/ssrtest/testmx.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      },
      {
        "file": "mathcomp/ssrtest/wlogletin.v",
        "status": "A",
        "additions": 1089,
        "deletions": 912
      }
    ],
    "state": "closed",
    "open_date": "2017-11-23T19:22:30Z",
    "update_date": "2017-11-24T13:48:33Z",
    "discussion": [
      {
        "author": "gares",
        "date": "2017-11-23T20:35:50Z",
        "comment": "wow"
      },
      {
        "author": "CohenCyril",
        "date": "2017-11-24T13:48:33Z",
        "comment": "I will split this PR."
      },
      {
        "author": "CohenCyril",
        "date": "2017-11-24T14:27:20Z",
        "comment": "split in #162 #163 and #164 "
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "627dd27b187f0cbd93ba3e872609dd84e2ef1bfc",
        "message": "Draft style guide + Linters for ssreflect style (awk + sed scripts)\n\n- an awk script to print messages (no rewriting here).\n  +  checking that lines are less than 80 characters long\n  + checking that indentation is formed by an even number of spaces\n  + checking for terminators in one line proofs\n  + /!\\ \"indentation for subgoal\" checking is not implemented yet\n- a sed script for systematic rewriting for spacing mostly, use with caution!!",
        "date": "2017-11-24T08:15:43Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "72662c0d03d3e87d2bda424dbb4ff88d7700ddbb",
        "message": "fixing rat style (thanks to awk) + running ssrlint.sed on the whole library",
        "date": "2017-11-24T08:15:43Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 160,
    "diff_summary": [
      {
        "file": "mathcomp/algebra/ssralg.v",
        "status": "M",
        "additions": 6,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2017-11-22T14:52:41Z",
    "update_date": "2017-12-11T22:45:57Z",
    "discussion": [
      {
        "author": "maximedenes",
        "date": "2017-11-23T07:58:31Z",
        "comment": "@ybertot Cyril was asking about the naming. What's your take on it?"
      },
      {
        "author": "ybertot",
        "date": "2017-11-23T08:02:06Z",
        "comment": "The naming seems reasonable to me.  There is no clash in the library (the KA combination has not been used before in lemma names) and the patterns used in the lemma come often in my own experience."
      },
      {
        "author": "ggonthier",
        "date": "2017-11-27T10:12:22Z",
        "comment": "`subrKA` could be generalised slightly by changing `- y` to `+ y` in the statement."
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "ea271b82db4a090ea4d3939baba814d2d077513d",
        "message": "Add addrKA and subrKA (addrK and addrNK modulo Associativity)",
        "date": "2017-11-23T19:27:58Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "848bcdb47a7e8d8da0e1cd5530a3feadcac93ede",
        "message": "following @ggonthier remark.",
        "date": "2017-11-27T13:36:14Z"
      }
    ]
  },
  {
    "author": "ybertot",
    "number": 157,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/fingraph.v",
        "status": "M",
        "additions": 83,
        "deletions": 32
      }
    ],
    "state": "merged",
    "open_date": "2017-11-15T16:23:21Z",
    "update_date": "2017-12-15T10:14:40Z",
    "discussion": [
      {
        "author": "ggonthier",
        "date": "2017-11-15T17:02:22Z",
        "comment": "These should be useful generalisations. Three quick observations:\r\n  - the naming convention for relativised lemmas is an `_in` suffix, see `seq.v` or `fintype.v` for instances.\r\n  - the generic predicate parameter `S` should be declared with the `pred_class` idiom, as this can make it easier to instantiate it explicitly.\r\n  - `ssrbool.v` provides helper lemmas (`in1T` and such) to derive unbounded lemmas from relativised ones."
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "ybertot",
        "committer": "ybertot",
        "hash": "0f6e8b6af1fe87a6d691d02104879397c6c232eb",
        "message": "Adds generalizations of theorems relying on injectivity\n\n- f_finv\n- finv_f\n- fconnect_sym\n- iter_order\n- iter_finv\n- cycle_orbit\n- fpath_finv (* I need to sub-theorems for this case. *)\n\nAll generalizations are named \"..._in\" the existing theorems are now\ninstances of the generalizations.",
        "date": "2017-12-12T14:11:56Z"
      },
      {
        "author": "CohenCyril",
        "committer": "ybertot",
        "hash": "ea60a9902aae4b685c8b4732febd0f7f4962c4d4",
        "message": "shortening and refactoring",
        "date": "2017-12-12T14:22:23Z"
      }
    ]
  },
  {
    "author": "erikmd",
    "number": 155,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/Makefile.coq-makefile",
        "status": "A",
        "additions": 11,
        "deletions": 11
      },
      {
        "file": "mathcomp/ssreflect/plugin/v8.5/ssreflect_plugin.mllib",
        "status": "A",
        "additions": 11,
        "deletions": 11
      },
      {
        "file": "mathcomp/ssreflect/plugin/v8.5/ssrmatching.ml4",
        "status": "A",
        "additions": 11,
        "deletions": 11
      },
      {
        "file": "mathcomp/ssreflect/plugin/v8.5/ssrmatching.v",
        "status": "A",
        "additions": 11,
        "deletions": 11
      },
      {
        "file": "mathcomp/ssreflect/plugin/v8.5/ssrmatching_plugin.mllib",
        "status": "A",
        "additions": 11,
        "deletions": 11
      }
    ],
    "state": "merged",
    "open_date": "2017-11-13T23:43:02Z",
    "update_date": "2017-12-14T18:09:34Z",
    "discussion": [
      {
        "author": "erikmd",
        "date": "2017-11-14T18:11:33Z",
        "comment": "Here is more feedback on compiling CoqEAL with MathComp for Coq 8.5:\r\n\r\nAfter pinning `coq-mathcomp-ssreflect` to use this PR, I recompiled `coq-mathcomp-field.1.6.4` and paramcoq for Coq 8.5, then prepended `From mathcomp` at line\r\nhttps://github.com/CoqEAL/CoqEAL/blob/cc2799ecf2883f1ef3e4de48e2d00e1965b3fcdb/refinements/refinements.v#L7\r\n\r\nThen FYI the compilation of CoqEAL went farther than before, but failed at line\r\nhttps://github.com/CoqEAL/CoqEAL/blob/cc2799ecf2883f1ef3e4de48e2d00e1965b3fcdb/refinements/refinements.v#L375\r\nwith the `Error: Unknown interpretation for notation \"( _ in _ )\".`, so this amounts to issue #62"
      },
      {
        "author": "CohenCyril",
        "date": "2017-12-12T17:53:11Z",
        "comment": "@gares can you do a review?"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "erikmd",
        "committer": "erikmd",
        "hash": "7406d43614dda186492f8e8cc184783980aaa969",
        "message": "Update v8.5 plugin to fix math-comp/math-comp#61",
        "date": "2017-11-13T23:23:09Z"
      }
    ]
  },
  {
    "author": "maximedenes",
    "number": 154,
    "diff_summary": [
      {
        "file": "mathcomp/odd_order/PFsection14.v",
        "status": "M",
        "additions": 1,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2017-11-06T16:19:08Z",
    "update_date": "2017-11-06T18:07:10Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "maximedenes",
        "committer": "maximedenes",
        "hash": "c2a42557d0cc7c4c776a4572dcfeef011bfc73b8",
        "message": "Fix the only remaining spurious injection in the entire codebase.\n\nWe may want to make it an error, now that the transition period has been\nlong enough.",
        "date": "2017-11-06T16:18:44Z"
      }
    ]
  },
  {
    "author": "maximedenes",
    "number": 153,
    "diff_summary": [
      {
        "file": "mathcomp/algebra/fraction.v",
        "status": "M",
        "additions": 58,
        "deletions": 58
      },
      {
        "file": "mathcomp/algebra/matrix.v",
        "status": "M",
        "additions": 58,
        "deletions": 58
      },
      {
        "file": "mathcomp/algebra/mxalgebra.v",
        "status": "M",
        "additions": 58,
        "deletions": 58
      },
      {
        "file": "mathcomp/algebra/mxpoly.v",
        "status": "M",
        "additions": 58,
        "deletions": 58
      },
      {
        "file": "mathcomp/algebra/poly.v",
        "status": "M",
        "additions": 58,
        "deletions": 58
      },
      {
        "file": "mathcomp/algebra/vector.v",
        "status": "M",
        "additions": 58,
        "deletions": 58
      },
      {
        "file": "mathcomp/attic/amodule.v",
        "status": "M",
        "additions": 58,
        "deletions": 58
      },
      {
        "file": "mathcomp/attic/fib.v",
        "status": "M",
        "additions": 58,
        "deletions": 58
      },
      {
        "file": "mathcomp/attic/forms.v",
        "status": "M",
        "additions": 58,
        "deletions": 58
      },
      {
        "file": "mathcomp/attic/galgebra.v",
        "status": "M",
        "additions": 58,
        "deletions": 58
      },
      {
        "file": "mathcomp/field/falgebra.v",
        "status": "M",
        "additions": 58,
        "deletions": 58
      },
      {
        "file": "mathcomp/field/separable.v",
        "status": "M",
        "additions": 58,
        "deletions": 58
      },
      {
        "file": "mathcomp/fingroup/fingroup.v",
        "status": "M",
        "additions": 58,
        "deletions": 58
      },
      {
        "file": "mathcomp/fingroup/gproduct.v",
        "status": "M",
        "additions": 58,
        "deletions": 58
      },
      {
        "file": "mathcomp/fingroup/morphism.v",
        "status": "M",
        "additions": 58,
        "deletions": 58
      },
      {
        "file": "mathcomp/fingroup/perm.v",
        "status": "M",
        "additions": 58,
        "deletions": 58
      },
      {
        "file": "mathcomp/odd_order/BGappendixAB.v",
        "status": "M",
        "additions": 58,
        "deletions": 58
      },
      {
        "file": "mathcomp/solvable/alt.v",
        "status": "M",
        "additions": 58,
        "deletions": 58
      },
      {
        "file": "mathcomp/solvable/gseries.v",
        "status": "M",
        "additions": 58,
        "deletions": 58
      },
      {
        "file": "mathcomp/ssreflect/bigop.v",
        "status": "M",
        "additions": 58,
        "deletions": 58
      },
      {
        "file": "mathcomp/ssreflect/eqtype.v",
        "status": "M",
        "additions": 58,
        "deletions": 58
      },
      {
        "file": "mathcomp/ssreflect/finset.v",
        "status": "M",
        "additions": 58,
        "deletions": 58
      },
      {
        "file": "mathcomp/ssreflect/fintype.v",
        "status": "M",
        "additions": 58,
        "deletions": 58
      },
      {
        "file": "mathcomp/ssreflect/plugin/v8.5/ssrbool.v",
        "status": "M",
        "additions": 58,
        "deletions": 58
      },
      {
        "file": "mathcomp/ssreflect/plugin/v8.6/ssrbool.v",
        "status": "M",
        "additions": 58,
        "deletions": 58
      },
      {
        "file": "mathcomp/ssreflect/prime.v",
        "status": "M",
        "additions": 58,
        "deletions": 58
      },
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 58,
        "deletions": 58
      },
      {
        "file": "mathcomp/ssreflect/ssrnat.v",
        "status": "M",
        "additions": 58,
        "deletions": 58
      }
    ],
    "state": "merged",
    "open_date": "2017-10-30T13:20:43Z",
    "update_date": "2017-10-30T14:03:18Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "maximedenes",
        "committer": "maximedenes",
        "hash": "e1b1743fb6aaed042d5e6762ea76c3242593ab1d",
        "message": "Fix obsolete vernacular syntax for locality.\n\nIt was emitting a deprecation warning and will soon be removed from Coq.",
        "date": "2017-10-30T13:16:48Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 152,
    "diff_summary": [
      {
        "file": "ChangeLog",
        "status": "D",
        "additions": 25,
        "deletions": 146
      },
      {
        "file": "INSTALL",
        "status": "D",
        "additions": 25,
        "deletions": 146
      },
      {
        "file": "etc/ANNOUNCE-1.6.2.md",
        "status": "D",
        "additions": 25,
        "deletions": 146
      },
      {
        "file": "etc/ChangeLog",
        "status": "D",
        "additions": 25,
        "deletions": 146
      },
      {
        "file": "etc/INSTALL.md",
        "status": "D",
        "additions": 25,
        "deletions": 146
      }
    ],
    "state": "merged",
    "open_date": "2017-10-26T12:50:55Z",
    "update_date": "2017-10-26T14:43:25Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "61e6ee5a5c37a1f5b45857a557cfd20a04819707",
        "message": "Announce",
        "date": "2017-10-26T12:48:32Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "3199eca7ebfa2ac8eaabe744d2e973dcfa38ed4c",
        "message": "change coq version requirements in INSTALL",
        "date": "2017-10-26T12:49:22Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "2cfd48ec696b0101be9d182e1aca7ebf47c4c756",
        "message": "adding one line to Changelog (+remove outdated one)",
        "date": "2017-10-26T12:49:44Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 151,
    "diff_summary": [
      {
        "file": "ChangeLog",
        "status": "D",
        "additions": 26,
        "deletions": 148
      },
      {
        "file": "INSTALL",
        "status": "D",
        "additions": 26,
        "deletions": 148
      },
      {
        "file": "etc/ANNOUNCE-1.6.2.md",
        "status": "D",
        "additions": 26,
        "deletions": 148
      },
      {
        "file": "etc/ChangeLog",
        "status": "D",
        "additions": 26,
        "deletions": 148
      },
      {
        "file": "etc/INSTALL.md",
        "status": "D",
        "additions": 26,
        "deletions": 148
      },
      {
        "file": "mathcomp/ssreflect/opam",
        "status": "D",
        "additions": 26,
        "deletions": 148
      }
    ],
    "state": "merged",
    "open_date": "2017-10-26T12:42:24Z",
    "update_date": "2017-10-26T14:41:02Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "c56da5ccef72089a8d3b2353932a0503ccc4f840",
        "message": "Announce",
        "date": "2017-10-26T12:38:41Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "b3d77ea206ee240404b12b41ae5fdce5ba735bef",
        "message": "change coq version requirements in INSTALL and opam",
        "date": "2017-10-26T12:41:39Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "3e5f70419f1c3be36e86f528158365e438b5efad",
        "message": "adding one line to Changelog (+remove outdated one)",
        "date": "2017-10-26T12:44:42Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 150,
    "diff_summary": [
      {
        "file": ".travis.yml",
        "status": "M",
        "additions": 10,
        "deletions": 17
      }
    ],
    "state": "closed",
    "open_date": "2017-10-23T13:59:11Z",
    "update_date": "2017-10-23T15:21:08Z",
    "discussion": [
      {
        "author": "ejgallego",
        "date": "2017-10-23T14:30:12Z",
        "comment": "Coq's opam used to run some extra stuff such as the test suite so at the beginning it was unsuitable for the Travis time limits. That may have changed now."
      },
      {
        "author": "CohenCyril",
        "date": "2017-10-23T15:21:08Z",
        "comment": "You are right, it is still not suitable..."
      },
      {
        "author": "ejgallego",
        "date": "2017-10-23T15:23:20Z",
        "comment": "Note @CohenCyril that Coq will hopefully provide soon some better scripts [written in OCaml!] to manage CI testing of Coq itself and of course libraries, so indeed a sensible plan of action could be to reuse that."
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "3a8be2cc35007bb5465aee5e76a8a9a02fe68319",
        "message": "using opam in travis before_install script",
        "date": "2017-10-23T13:56:57Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 149,
    "diff_summary": [
      {
        "file": "etc/ChangeLog",
        "status": "D",
        "additions": 9,
        "deletions": 226
      },
      {
        "file": "etc/INSTALL.md",
        "status": "D",
        "additions": 9,
        "deletions": 226
      },
      {
        "file": "etc/utils/import_coqfinitgroup.zsh",
        "status": "D",
        "additions": 9,
        "deletions": 226
      },
      {
        "file": "etc/utils/ssrcoqdep",
        "status": "D",
        "additions": 9,
        "deletions": 226
      },
      {
        "file": "mathcomp/algebra/Makefile",
        "status": "D",
        "additions": 9,
        "deletions": 226
      },
      {
        "file": "mathcomp/character/Makefile",
        "status": "D",
        "additions": 9,
        "deletions": 226
      },
      {
        "file": "mathcomp/field/Makefile",
        "status": "D",
        "additions": 9,
        "deletions": 226
      },
      {
        "file": "mathcomp/fingroup/Makefile",
        "status": "D",
        "additions": 9,
        "deletions": 226
      },
      {
        "file": "mathcomp/odd_order/Makefile",
        "status": "D",
        "additions": 9,
        "deletions": 226
      },
      {
        "file": "mathcomp/real_closed/Makefile",
        "status": "D",
        "additions": 9,
        "deletions": 226
      },
      {
        "file": "mathcomp/solvable/Makefile",
        "status": "D",
        "additions": 9,
        "deletions": 226
      },
      {
        "file": "mathcomp/ssreflect/Makefile",
        "status": "D",
        "additions": 9,
        "deletions": 226
      },
      {
        "file": "mathcomp/ssreflect/opam",
        "status": "D",
        "additions": 9,
        "deletions": 226
      },
      {
        "file": "mathcomp/ssrtest/Makefile",
        "status": "D",
        "additions": 9,
        "deletions": 226
      }
    ],
    "state": "merged",
    "open_date": "2017-10-23T13:55:15Z",
    "update_date": "2017-10-26T12:32:53Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "dd730ed0569d57944435b6bb599bffd8c382c126",
        "message": "Remove compatibility with Coq.8.4 (and compatibility hacks that went with it)",
        "date": "2017-10-23T13:54:07Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 146,
    "diff_summary": [
      {
        "file": "mathcomp/algebra/opam",
        "status": "M",
        "additions": 8,
        "deletions": 7
      },
      {
        "file": "mathcomp/character/opam",
        "status": "M",
        "additions": 8,
        "deletions": 7
      },
      {
        "file": "mathcomp/field/opam",
        "status": "M",
        "additions": 8,
        "deletions": 7
      },
      {
        "file": "mathcomp/fingroup/opam",
        "status": "M",
        "additions": 8,
        "deletions": 7
      },
      {
        "file": "mathcomp/solvable/opam",
        "status": "M",
        "additions": 8,
        "deletions": 7
      },
      {
        "file": "mathcomp/ssreflect/opam",
        "status": "M",
        "additions": 8,
        "deletions": 7
      }
    ],
    "state": "merged",
    "open_date": "2017-10-19T19:07:30Z",
    "update_date": "2017-10-20T08:12:18Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "085790a7f5ece868ca5f18410e8c9cff0ca5a1d3",
        "message": "update allowed version of coq for 1.6",
        "date": "2017-10-19T19:03:58Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "951f479ab8c00650dfde1d14284e2a355318062e",
        "message": "fixed homepage",
        "date": "2017-10-19T20:19:10Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 145,
    "diff_summary": [
      {
        "file": "etc/utils/packager",
        "status": "M",
        "additions": 89,
        "deletions": 30
      },
      {
        "file": "mathcomp/algebra/opam",
        "status": "M",
        "additions": 89,
        "deletions": 30
      },
      {
        "file": "mathcomp/character/opam",
        "status": "M",
        "additions": 89,
        "deletions": 30
      },
      {
        "file": "mathcomp/field/opam",
        "status": "M",
        "additions": 89,
        "deletions": 30
      },
      {
        "file": "mathcomp/fingroup/opam",
        "status": "M",
        "additions": 89,
        "deletions": 30
      },
      {
        "file": "mathcomp/odd_order/opam",
        "status": "M",
        "additions": 89,
        "deletions": 30
      },
      {
        "file": "mathcomp/real_closed/opam",
        "status": "M",
        "additions": 89,
        "deletions": 30
      },
      {
        "file": "mathcomp/solvable/opam",
        "status": "M",
        "additions": 89,
        "deletions": 30
      },
      {
        "file": "mathcomp/ssreflect/opam",
        "status": "M",
        "additions": 89,
        "deletions": 30
      }
    ],
    "state": "merged",
    "open_date": "2017-10-19T19:00:25Z",
    "update_date": "2017-10-23T09:24:51Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2017-10-20T08:27:35Z",
        "comment": "@gares any contraindication?"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "6a2e6d2f6a1aeec7255a4a874dece7f3664bb469",
        "message": "new script to create opam meta packages\n\n- the opam files in the branch where the script is launched should be correct\n- if not, the second argument to the script should be a branch in which the opam files are correct",
        "date": "2017-10-19T18:50:06Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "0d6e09de16de8a349dafe570ef9f87377630c6a3",
        "message": "fix coq version",
        "date": "2017-10-19T18:51:21Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "42da1892c314e8faa545ce4657ec8633501eccd7",
        "message": "fixed homepage",
        "date": "2017-10-19T20:17:14Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "7d28da695934872303302799c7779c600f981da5",
        "message": "improved package generator",
        "date": "2017-10-20T00:00:05Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "33477fadfd9533fac08f888527c7ad3083899af2",
        "message": "reproduce github archive locally rather than downloading, much faster",
        "date": "2017-10-20T00:42:37Z"
      }
    ]
  },
  {
    "author": "gares",
    "number": 144,
    "diff_summary": [
      {
        "file": ".travis.yml",
        "status": "A",
        "additions": 7265,
        "deletions": 3182
      },
      {
        "file": "mathcomp/Make",
        "status": "A",
        "additions": 7265,
        "deletions": 3182
      },
      {
        "file": "mathcomp/field/Make",
        "status": "A",
        "additions": 7265,
        "deletions": 3182
      },
      {
        "file": "mathcomp/field/all_field.v",
        "status": "A",
        "additions": 7265,
        "deletions": 3182
      },
      {
        "file": "mathcomp/field/finfield.v",
        "status": "A",
        "additions": 7265,
        "deletions": 3182
      },
      {
        "file": "mathcomp/ssreflect/Make",
        "status": "A",
        "additions": 7265,
        "deletions": 3182
      },
      {
        "file": "mathcomp/ssreflect/Makefile.coq-makefile",
        "status": "A",
        "additions": 7265,
        "deletions": 3182
      },
      {
        "file": "mathcomp/ssreflect/Makefile.detect-coq-version",
        "status": "A",
        "additions": 7265,
        "deletions": 3182
      },
      {
        "file": "mathcomp/ssreflect/plugin/v8.4/ssreflect.ml4",
        "status": "A",
        "additions": 7265,
        "deletions": 3182
      },
      {
        "file": "mathcomp/ssreflect/plugin/v8.5/ssrbool.v",
        "status": "A",
        "additions": 7265,
        "deletions": 3182
      },
      {
        "file": "mathcomp/ssreflect/plugin/v8.5/ssreflect.ml4",
        "status": "A",
        "additions": 7265,
        "deletions": 3182
      },
      {
        "file": "mathcomp/ssreflect/plugin/v8.5/ssreflect.v",
        "status": "A",
        "additions": 7265,
        "deletions": 3182
      },
      {
        "file": "mathcomp/ssreflect/plugin/v8.5/ssrfun.v",
        "status": "A",
        "additions": 7265,
        "deletions": 3182
      },
      {
        "file": "mathcomp/ssreflect/plugin/v8.6/ssrbool.v",
        "status": "A",
        "additions": 7265,
        "deletions": 3182
      },
      {
        "file": "mathcomp/ssreflect/plugin/v8.6/ssreflect.ml4",
        "status": "A",
        "additions": 7265,
        "deletions": 3182
      },
      {
        "file": "mathcomp/ssreflect/plugin/v8.6/ssreflect.v",
        "status": "A",
        "additions": 7265,
        "deletions": 3182
      },
      {
        "file": "mathcomp/ssreflect/plugin/v8.6/ssrfun.v",
        "status": "A",
        "additions": 7265,
        "deletions": 3182
      },
      {
        "file": "mathcomp/ssreflect/ssrbool.v",
        "status": "A",
        "additions": 7265,
        "deletions": 3182
      },
      {
        "file": "mathcomp/ssreflect/ssreflect.v",
        "status": "A",
        "additions": 7265,
        "deletions": 3182
      },
      {
        "file": "mathcomp/ssreflect/ssrfun.v",
        "status": "A",
        "additions": 7265,
        "deletions": 3182
      },
      {
        "file": "mathcomp/ssreflect/ssrnotations.v",
        "status": "A",
        "additions": 7265,
        "deletions": 3182
      }
    ],
    "state": "merged",
    "open_date": "2017-10-19T14:19:56Z",
    "update_date": "2017-10-19T14:33:29Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "thery",
        "hash": "b8e50b03e252bfb93c48689adfb30c15b50006d3",
        "message": "release 1.6.2 compatible with 8.7",
        "date": "2017-10-19T13:41:59Z"
      }
    ]
  },
  {
    "author": "RalfJung",
    "number": 143,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/Makefile.detect-coq-version",
        "status": "M",
        "additions": 1,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2017-10-12T14:21:10Z",
    "update_date": "2017-10-20T08:12:45Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "RalfJung",
        "committer": "RalfJung",
        "hash": "30efd7b0ce2a272487b3937079c6dfe3f5877654",
        "message": "fix Coq version detection on Windows, and in case there are errors",
        "date": "2017-10-12T14:16:30Z"
      }
    ]
  },
  {
    "author": "RalfJung",
    "number": 140,
    "diff_summary": [
      {
        "file": "mathcomp/Makefile",
        "status": "M",
        "additions": 24,
        "deletions": 24
      },
      {
        "file": "mathcomp/algebra/Makefile",
        "status": "M",
        "additions": 24,
        "deletions": 24
      },
      {
        "file": "mathcomp/all/Makefile",
        "status": "M",
        "additions": 24,
        "deletions": 24
      },
      {
        "file": "mathcomp/attic/Makefile",
        "status": "M",
        "additions": 24,
        "deletions": 24
      },
      {
        "file": "mathcomp/character/Makefile",
        "status": "M",
        "additions": 24,
        "deletions": 24
      },
      {
        "file": "mathcomp/field/Makefile",
        "status": "M",
        "additions": 24,
        "deletions": 24
      },
      {
        "file": "mathcomp/fingroup/Makefile",
        "status": "M",
        "additions": 24,
        "deletions": 24
      },
      {
        "file": "mathcomp/odd_order/Makefile",
        "status": "M",
        "additions": 24,
        "deletions": 24
      },
      {
        "file": "mathcomp/real_closed/Makefile",
        "status": "M",
        "additions": 24,
        "deletions": 24
      },
      {
        "file": "mathcomp/solvable/Makefile",
        "status": "M",
        "additions": 24,
        "deletions": 24
      },
      {
        "file": "mathcomp/ssreflect/Makefile",
        "status": "M",
        "additions": 24,
        "deletions": 24
      },
      {
        "file": "mathcomp/ssrtest/Makefile",
        "status": "M",
        "additions": 24,
        "deletions": 24
      }
    ],
    "state": "merged",
    "open_date": "2017-10-10T11:24:16Z",
    "update_date": "2017-10-20T08:14:16Z",
    "discussion": [
      {
        "author": "gares",
        "date": "2017-10-20T08:14:21Z",
        "comment": "Thanks"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "RalfJung",
        "committer": "RalfJung",
        "hash": "e888516870ef592d0f7da74f8138e478d6114b05",
        "message": "fix building with make flags\n\nFixes #139",
        "date": "2017-10-10T11:23:30Z"
      }
    ]
  },
  {
    "author": "PatrickMassot",
    "number": 134,
    "diff_summary": [
      {
        "file": "mathcomp/fingroup/fingroup.v",
        "status": "M",
        "additions": 1,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2017-08-13T09:21:56Z",
    "update_date": "2017-08-13T11:53:43Z",
    "discussion": [
      {
        "author": "gares",
        "date": "2017-08-13T11:53:39Z",
        "comment": "Thanks!"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "PatrickMassot",
        "committer": "PatrickMassot",
        "hash": "73c1848f2678e03e8bda249413a081c498d58e62",
        "message": "Fix typo in fingroup documentation",
        "date": "2017-08-13T09:19:10Z"
      }
    ]
  },
  {
    "author": "ghost",
    "number": 131,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/Make",
        "status": "M",
        "additions": 1,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2017-06-14T09:15:33Z",
    "update_date": "2017-06-14T12:26:52Z",
    "discussion": [
      {
        "author": "ghost",
        "date": "2017-06-14T10:08:53Z",
        "comment": "@gares Can this be merged today? (We want to run some benchmarking which need this fix)"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "hash": "7c6db77388b6dd251019356745a2ec6bc767444c",
        "message": "Fix compilation of ssreflect/ submodule",
        "date": "2017-06-14T09:19:55Z"
      }
    ]
  },
  {
    "author": "maximedenes",
    "number": 130,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/Makefile.coq-makefile",
        "status": "A",
        "additions": 3204,
        "deletions": 0
      },
      {
        "file": "mathcomp/ssreflect/ssrbool.v.86",
        "status": "A",
        "additions": 3204,
        "deletions": 0
      },
      {
        "file": "mathcomp/ssreflect/ssrbool.v",
        "status": "A",
        "additions": 3204,
        "deletions": 0
      },
      {
        "file": "mathcomp/ssreflect/ssreflect.v.86",
        "status": "A",
        "additions": 3204,
        "deletions": 0
      },
      {
        "file": "mathcomp/ssreflect/ssreflect.v",
        "status": "A",
        "additions": 3204,
        "deletions": 0
      },
      {
        "file": "mathcomp/ssreflect/ssrfun.v.86",
        "status": "A",
        "additions": 3204,
        "deletions": 0
      },
      {
        "file": "mathcomp/ssreflect/ssrfun.v",
        "status": "A",
        "additions": 3204,
        "deletions": 0
      }
    ],
    "state": "closed",
    "open_date": "2017-06-09T07:35:27Z",
    "update_date": "2017-07-12T12:07:34Z",
    "discussion": [
      {
        "author": "maximedenes",
        "date": "2017-06-09T11:12:34Z",
        "comment": "@gares Can you say if you plan to review it today? If not, I'll do another pass and merge. Thanks!"
      },
      {
        "author": "gares",
        "date": "2017-06-09T16:40:33Z",
        "comment": "Oh, I missed this PR and I pushed some code that is quite close to that."
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "maximedenes",
        "committer": "maximedenes",
        "hash": "4b63b31515c73fb6468fe355a19d85f5625fe928",
        "message": "Fix 8.6 compatibility.",
        "date": "2017-06-09T07:33:42Z"
      }
    ]
  },
  {
    "author": "maximedenes",
    "number": 129,
    "diff_summary": [
      {
        "file": "mathcomp/Make",
        "status": "A",
        "additions": 122,
        "deletions": 9469
      },
      {
        "file": "mathcomp/ssreflect/Makefile.coq-makefile",
        "status": "A",
        "additions": 122,
        "deletions": 9469
      },
      {
        "file": "mathcomp/ssreflect/plugin/trunk/ssreflect.ml4",
        "status": "A",
        "additions": 122,
        "deletions": 9469
      },
      {
        "file": "mathcomp/ssreflect/ssrbool.v",
        "status": "A",
        "additions": 122,
        "deletions": 9469
      },
      {
        "file": "mathcomp/ssreflect/ssreflect.v",
        "status": "A",
        "additions": 122,
        "deletions": 9469
      },
      {
        "file": "mathcomp/ssreflect/ssrfun.v",
        "status": "A",
        "additions": 122,
        "deletions": 9469
      },
      {
        "file": "mathcomp/ssreflect/ssrnotations.v",
        "status": "A",
        "additions": 122,
        "deletions": 9469
      },
      {
        "file": "mathcomp/ssrtest/primproj.v",
        "status": "A",
        "additions": 122,
        "deletions": 9469
      }
    ],
    "state": "merged",
    "open_date": "2017-06-07T09:18:26Z",
    "update_date": "2017-06-07T09:23:14Z",
    "discussion": [
      {
        "author": "maximedenes",
        "date": "2017-06-08T11:44:16Z",
        "comment": "@gares Do you have a suggestion on how to restore 8.6 compatibility at the `.v` level? The current setup requires a `From Coq Require Import ssreflect`."
      },
      {
        "author": "ejgallego",
        "date": "2017-06-08T12:07:33Z",
        "comment": "@maximedenes you could play `LoadPath` tricks, but that won't be fun; otherwise I guess you would need to have a different `ssreflect.v` for 8.5/8.6 and a different one for `master`, that just exports the Coq shipped module."
      },
      {
        "author": "maximedenes",
        "date": "2017-06-08T12:15:22Z",
        "comment": "> otherwise I guess you would need to have a different ssreflect.v for 8.5/8.6 and a different one for master, that just exports the Coq shipped module.\r\n\r\nYep, sure, I was wondering if there was a way to avoid that, but maybe it is ok. The part that is a bit tricky is that mathcomp has a single Makefile that links the appropriate version of the plugin, so it should be extended for that `ssreflect.v` file."
      },
      {
        "author": "ejgallego",
        "date": "2017-06-08T12:21:39Z",
        "comment": "There is an even better option that is to revert to the `mathcomp` prefix, I cannot stress how annoying is now that all my ssreflect examples have to come in two versions..."
      },
      {
        "author": "maximedenes",
        "date": "2017-06-08T12:31:56Z",
        "comment": "> There is an even better option that is to revert to the mathcomp prefix\r\n\r\nIsn't that the same as your loadpath suggestion? I didn't change the prefix in any way, it is just the fact that we moved the files that had this side effect. To compensate for it, we should tweak the loadpath I guess."
      },
      {
        "author": "maximedenes",
        "date": "2017-06-08T12:34:40Z",
        "comment": "Btw, can a prefix be bound to several physical paths?"
      },
      {
        "author": "ejgallego",
        "date": "2017-06-08T12:48:48Z",
        "comment": "> Isn't that the same as your loadpath suggestion?\r\n\r\nThe prefix is set arbitrarily by Coq, (in fact in SerAPI/jsCoq I have to imitate that arbitrary behavior).\r\n\r\nYou could well have a rule that declares `plugins/ssr` to be under prefix `mathcomp`. It is a bit uglier, but compatible."
      },
      {
        "author": "ejgallego",
        "date": "2017-06-08T12:49:56Z",
        "comment": "> Btw, can a prefix be bound to several physical paths?\r\n\r\nit will complain with a warning, `overriding-logical-loadpath` whether it does make sense, I don't know."
      },
      {
        "author": "maximedenes",
        "date": "2017-06-08T13:12:12Z",
        "comment": "So I guess I don't understand your suggestion. You'd loose access to the `mathcomp` libraries, right?"
      },
      {
        "author": "ejgallego",
        "date": "2017-06-08T13:19:13Z",
        "comment": "Likely you would have to put the full `mathcomp.ssreflect` in Coq, the rest should fine, right?"
      },
      {
        "author": "maximedenes",
        "date": "2017-06-08T13:25:59Z",
        "comment": "I don't follow. If the `mathcomp` prefix points to `plugins/ssr`, `From mathcomp Require Import ssralg` will fail. If it points to the place where mathcomp is installed, it is `Require Import mathcomp.ssreflect` that will fail, right?"
      },
      {
        "author": "ejgallego",
        "date": "2017-06-08T13:31:52Z",
        "comment": "The `mathcomp.ssreflect` prefix would point to `plugins/ssr`, `From mathcomp Require Import ssralg` resolves to `mathcomp.algebra.ssralg` I believe.\r\n\r\n`Require Import mathcomp.ssreflect` already fails in 8.6 as far as I can see; it makes no sense with the current organization."
      },
      {
        "author": "ejgallego",
        "date": "2017-06-08T13:36:08Z",
        "comment": "Anyways the current loadpath story seems kinda bogus, the main reason duplication is not allowed is that `find_load_path` can determine the logical path a module uses in `start_library`.\r\n\r\nIMHO this is the wrong approach, as it should be the user of `start_library` who provides that and I even believe that I saw some bug / non-flexible behavior due to that.\r\n\r\nI'm afraid that the whole story with `start/declare_library` is a mess now, including real bugs such as 5556; I  am close to have a first patch ready thou to attack 5556 that in fact will properly pack together libraries with their loadpaths and other metaproperties that are set in an inconsistent way today. This will be done by enriching `Stm.init` so in fact the STM becomes in full control of the notion of \"document/compilation unit\".\r\n\r\nLets see where we arrive."
      },
      {
        "author": "maximedenes",
        "date": "2017-06-08T13:50:17Z",
        "comment": "> The mathcomp.ssreflect prefix would point to plugins/ssr\r\n\r\nOk, now I understand. There will still be an incompatibility for, e.g. `Require Import mathcomp.ssreflect.finfun` and all other files there. But it was recommended to do `From mathcomp Require Import finfun`, and that should still work.\r\n\r\nWhere do you think I should add this binding? Just as an ad-hoc thing in `coqinit.ml`, like it is done for the `Coq` prefix?"
      },
      {
        "author": "ejgallego",
        "date": "2017-06-08T13:56:04Z",
        "comment": "> But it was recommended to do From mathcomp Require Import finfun, and that should still work.\r\n\r\nHow would that work now?"
      },
      {
        "author": "maximedenes",
        "date": "2017-06-08T13:57:03Z",
        "comment": "I thought your suggestion was to bind the `mathcomp.ssreflect` prefix, but not the `mathcomp` one."
      },
      {
        "author": "ejgallego",
        "date": "2017-06-08T14:03:32Z",
        "comment": "Unfortunately my suggestion does require moving the whole of `ssreflect` into Coq with the current state of affairs, what would you bind `mathcomp` to?\r\n\r\nSo I thought indeed the original plan here was to provide a different version of `ssreflect.v` for 8.6/8.7 . IMHO that would be fine, even if we have the pain to have users to install mathcomp even for just the tactics. Well, now you'll have to provide also different versions of `ssrbool` etc... Pity we still don't have cpp support in coq_makefile.\r\n\r\nThe only other alternative I see is to move the full `ssreflect` prefix into `plugins/ssr`; this was my original idea so people could just use the thing without any extra effort in a compatible way.\r\n\r\nI think other alternatives will require rework of the loadpath mode, or adding cpp support to coq_makefile."
      }
    ],
    "review_discussion": [
      {
        "author": "gares",
        "file": "mathcomp/ssreflect/Makefile.coq-makefile",
        "date": "2017-06-08T10:37:16Z",
        "comment": "no EXTRA here? that is probably a bug"
      },
      {
        "author": "maximedenes",
        "file": "mathcomp/ssreflect/Makefile.coq-makefile",
        "date": "2017-06-08T11:42:38Z",
        "comment": "It is surprising, but was already like that before my PR, right? Do you confirm it's a bug?"
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "maximedenes",
        "committer": "maximedenes",
        "hash": "96a3c59b4586164e8aa80f53f0f9031fd1167ce8",
        "message": "For trunk, use merged ssr plugin.",
        "date": "2017-06-07T09:15:26Z"
      },
      {
        "author": "maximedenes",
        "committer": "maximedenes",
        "hash": "cd7ba12978ee90c2bf1e59584ebf95e9ed275fb2",
        "message": "Change failing test.",
        "date": "2017-06-07T09:15:29Z"
      }
    ]
  },
  {
    "author": "maximedenes",
    "number": 128,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/plugin/trunk/ssreflect.ml4",
        "status": "M",
        "additions": 27,
        "deletions": 51
      }
    ],
    "state": "merged",
    "open_date": "2017-06-06T15:11:41Z",
    "update_date": "2017-06-06T15:29:41Z",
    "discussion": [
      {
        "author": "ejgallego",
        "date": "2017-06-06T15:19:28Z",
        "comment": "I guess it would have been more time-effective to have merged ssr first and then avoid the need of all those overlays as the changes can be folded in the PRs themselves, but YMMV."
      },
      {
        "author": "maximedenes",
        "date": "2017-06-06T15:28:03Z",
        "comment": "> I guess it would have been more time-effective to have merged ssr first and then avoid the need of all those overlays as the changes can be folded in the PRs themselves, but YMMV.\r\n\r\nI see your point but:\r\n1. I tried to be nice to everyone, so I scheduled my PRs (and the API, that I'll help fixing) after the ones conflicting with them. so only the Sigma removal could have been done after the ssr merge.\r\n2. These overlays were often created before we agreed on the ssr merge.\r\n3. Adapting the overlays one by one to the code that we merge (which is significantly different from the one in the ssr repo) is probably more costly than fixing it once and for all.\r\n\r\nBut indeed, I wasn't sure about which way was best. Anyway, I think I made it as smooth as I could for everyone except Matej and I."
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "maximedenes",
        "committer": "maximedenes",
        "hash": "7e5f7949de0f1be496a7e6c3376f9858142f3e75",
        "message": "Fix plugin after Sigma removal.",
        "date": "2017-06-06T08:43:00Z"
      }
    ]
  },
  {
    "author": "maximedenes",
    "number": 127,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/plugin/trunk/ssreflect.ml4",
        "status": "M",
        "additions": 8,
        "deletions": 25
      }
    ],
    "state": "merged",
    "open_date": "2017-06-06T07:07:32Z",
    "update_date": "2017-06-06T07:09:25Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "herbelin",
        "committer": "herbelin",
        "hash": "679d8ba37c05a43b0480a4200bfb1347481a5d1a",
        "message": "Binding glob_constr to interp_glob_closure so as to factorize low-level code.",
        "date": "2017-05-30T22:46:01Z"
      }
    ]
  },
  {
    "author": "maximedenes",
    "number": 126,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/plugin/trunk/ssreflect.ml4",
        "status": "M",
        "additions": 3,
        "deletions": 3
      }
    ],
    "state": "merged",
    "open_date": "2017-05-28T20:06:58Z",
    "update_date": "2017-05-28T20:40:55Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "ejgallego",
        "committer": "ejgallego",
        "hash": "039aa8b0e6c5eb9fd0622494efa57acfaae7749e",
        "message": "[coqlib] Update to explicitly build terms from references.\n\nSee coq/coq#678",
        "date": "2017-05-25T13:25:46Z"
      }
    ]
  },
  {
    "author": "maximedenes",
    "number": 125,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/plugin/trunk/ssreflect.ml4",
        "status": "M",
        "additions": 8,
        "deletions": 16
      }
    ],
    "state": "merged",
    "open_date": "2017-05-25T10:50:38Z",
    "update_date": "2017-05-25T10:51:41Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "ejgallego",
        "committer": "ejgallego",
        "hash": "7625fdb52bf22ea4c332eafbc088675517b202d3",
        "message": "[options] Sync with upstream API changes.",
        "date": "2017-05-23T15:27:02Z"
      }
    ]
  },
  {
    "author": "maximedenes",
    "number": 124,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/plugin/trunk/ssreflect.ml4",
        "status": "M",
        "additions": 242,
        "deletions": 235
      }
    ],
    "state": "merged",
    "open_date": "2017-05-25T09:12:43Z",
    "update_date": "2017-05-25T09:20:35Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "ejgallego",
        "committer": "ejgallego",
        "hash": "3500ccbc0c5e06dfe3f053d1ee80185b1930b900",
        "message": "[ast] Adapt to Coq's #402 new generic AST node.",
        "date": "2017-04-18T23:05:19Z"
      }
    ]
  },
  {
    "author": "maximedenes",
    "number": 123,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/plugin/trunk/ssreflect.ml4",
        "status": "M",
        "additions": 1,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2017-05-17T16:03:17Z",
    "update_date": "2017-06-05T20:33:41Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "herbelin",
        "committer": "herbelin",
        "hash": "13458380eaef14078bb5805db3d8027bc76adeba",
        "message": "Adapting to PR #590 (a more explicit algebraic type for evars of kind MatchingVar).",
        "date": "2017-05-31T00:08:42Z"
      }
    ]
  },
  {
    "author": "SkySkimmer",
    "number": 120,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/plugin/trunk/ssreflect.ml4",
        "status": "M",
        "additions": 3,
        "deletions": 3
      }
    ],
    "state": "merged",
    "open_date": "2017-04-17T13:06:12Z",
    "update_date": "2017-04-17T18:55:26Z",
    "discussion": [
      {
        "author": "gares",
        "date": "2017-04-17T18:55:21Z",
        "comment": "Thanks"
      },
      {
        "author": "SkySkimmer",
        "date": "2017-04-17T18:57:44Z",
        "comment": "I should probably have made this explicit, but until the Coq PR is merged this makes ssreflect incompatible with Coq trunk. (pre coq/coq#565 query_command doesn't include the dot at the end of a `Check foo.`)"
      },
      {
        "author": "gares",
        "date": "2017-04-17T19:03:13Z",
        "comment": "I see.  But I think no user of ssr trunk writes `- Check foo`. So I thought it would just make ssr \"forward compatible\"."
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "hash": "abf8a848e24e8cd5747be801ae940c3503cf02c0",
        "message": "Coq PR #565: G_vernac.subgoal_command is replaced by query_command",
        "date": "2017-04-17T12:30:14Z"
      }
    ]
  },
  {
    "author": "maximedenes",
    "number": 119,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/plugin/trunk/ssreflect.ml4",
        "status": "M",
        "additions": 397,
        "deletions": 320
      }
    ],
    "state": "merged",
    "open_date": "2017-04-11T15:45:20Z",
    "update_date": "2017-04-12T14:25:03Z",
    "discussion": [
      {
        "author": "gares",
        "date": "2017-04-11T19:17:44Z",
        "comment": "Looks OK.  Half of the calls to Unsafe are for pp purposes, a big chunk if just to call constr constructors, maybe there is a corresponding econstr one.\r\n\r\nThe `refine_with` and `unfold` usage of Unsafe have to be checked."
      }
    ],
    "review_discussion": [
      {
        "author": "gares",
        "file": "mathcomp/ssreflect/plugin/trunk/ssreflect.ml4",
        "date": "2017-04-11T19:11:22Z",
        "comment": "check Unsafe"
      }
    ],
    "tags": [],
    "commits": [
      {
        "committer": "maximedenes",
        "hash": "fce2105728fb6327ed277f1db79a8fdb816662c3",
        "message": "Port to EConstr",
        "date": "2017-03-24T22:55:41Z"
      },
      {
        "author": "ejgallego",
        "committer": "maximedenes",
        "hash": "106477f3f9ac02a6acaed738e5a3ecccd797c318",
        "message": "[econstr] Adapt to naming changes.",
        "date": "2017-03-24T22:55:41Z"
      },
      {
        "author": "ppedrot",
        "committer": "ppedrot",
        "hash": "b950c659029b5f79b0892915a5612705b921d7e9",
        "message": "Fix ML compilation after introduction of EInstance.",
        "date": "2017-04-04T10:28:37Z"
      },
      {
        "author": "maximedenes",
        "committer": "web-flow",
        "hash": "5c69490ccede4e6dc0b494294ffd63dd17c4f112",
        "message": "Merge pull request #1 from ppedrot/econstr\n\nFix ML compilation after introduction of EInstance.",
        "date": "2017-04-04T11:42:31Z"
      },
      {
        "author": "maximedenes",
        "committer": "maximedenes",
        "hash": "90c9e41e09e55089e12f3948b67f7b1ba1c72337",
        "message": "Merge remote-tracking branch 'upstream/master' into econstr",
        "date": "2017-04-04T23:19:06Z"
      }
    ]
  },
  {
    "author": "maximedenes",
    "number": 118,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/plugin/trunk/ssreflect.ml4",
        "status": "M",
        "additions": 25,
        "deletions": 38
      }
    ],
    "state": "merged",
    "open_date": "2017-04-03T11:23:46Z",
    "update_date": "2017-04-03T13:17:33Z",
    "discussion": [
      {
        "author": "gares",
        "date": "2017-04-03T12:31:10Z",
        "comment": "I've the impression mkCLetIn is dead code :-/\r\nSaid that it looks good to me.  \r\n\r\nJust in case @ggonthier has a minute to look at the patch: Coq's constr_expr for LetIn just got a place for the type of the expression being named. My understanding is that BFdef needs no more a boolean argument (lines 5328 , 5384 are the places where the change seem to benefit SSR).\r\n\r\n"
      },
      {
        "author": "gares",
        "date": "2017-04-03T13:17:57Z",
        "comment": "Merging now, the PR for Coq is going to be merged now..."
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "maximedenes",
        "committer": "maximedenes",
        "hash": "2cb863af37c56f01d3b96058ab83fc7f94a542a8",
        "message": "Adapt the ssr plugin to Coq's PR#417.\n\nLet-ins in constrexpr and glob_constr now take an optional type, instead\nof relying on a cast in the body.",
        "date": "2017-04-03T09:16:34Z"
      }
    ]
  },
  {
    "author": "strub",
    "number": 117,
    "diff_summary": [
      {
        "file": ".gitignore",
        "status": "M",
        "additions": 2,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2017-03-17T08:39:34Z",
    "update_date": "2017-03-17T09:51:33Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "strub",
        "committer": "strub",
        "hash": "c6a144fc76fca5a182c3bf89bcac780da1358a8d",
        "message": ".gitignore (ssrmatching.v)",
        "date": "2017-03-17T08:41:19Z"
      }
    ]
  },
  {
    "author": "strub",
    "number": 116,
    "diff_summary": [
      {
        "file": "mathcomp/Make",
        "status": "M",
        "additions": 6,
        "deletions": 5
      },
      {
        "file": "mathcomp/real_closed/Make",
        "status": "M",
        "additions": 6,
        "deletions": 5
      },
      {
        "file": "mathcomp/real_closed/all_real_closed.v",
        "status": "M",
        "additions": 6,
        "deletions": 5
      },
      {
        "file": "mathcomp/ssreflect/Make",
        "status": "M",
        "additions": 6,
        "deletions": 5
      },
      {
        "file": "mathcomp/ssreflect/all_ssreflect.v",
        "status": "M",
        "additions": 6,
        "deletions": 5
      },
      {
        "file": "mathcomp/real_closed/bigenough.v",
        "status": "M",
        "additions": 6,
        "deletions": 5
      }
    ],
    "state": "closed",
    "open_date": "2017-03-16T15:51:02Z",
    "update_date": "2018-09-07T12:08:54Z",
    "discussion": [
      {
        "author": "strub",
        "date": "2017-03-16T15:52:04Z",
        "comment": "I've several development  depending on this module. It's location is currently quite artificial and force projects to pull a lot of dependencies."
      },
      {
        "author": "gares",
        "date": "2017-03-16T16:19:13Z",
        "comment": "also ssreflect/Make should be updated"
      },
      {
        "author": "gares",
        "date": "2017-03-16T19:51:56Z",
        "comment": "> Shoudn't this file be .gitignored ?\r\n\r\nI think you are right..."
      },
      {
        "author": "gares",
        "date": "2017-07-12T12:08:10Z",
        "comment": "ping @CohenCyril "
      },
      {
        "author": "CohenCyril",
        "date": "2017-09-07T15:08:59Z",
        "comment": "I am in favor, @ggonthier what do you think?"
      },
      {
        "author": "thery",
        "date": "2017-11-21T18:11:18Z",
        "comment": "waiting for @CohenCyril 's comment before merging"
      },
      {
        "author": "CohenCyril",
        "date": "2017-11-22T16:44:08Z",
        "comment": "Since we decided to have a staging/unstable area, I guess this file would be better there."
      },
      {
        "author": "CohenCyril",
        "date": "2018-01-26T16:58:37Z",
        "comment": "Actually, the ```near``` tactic from mathcomp-analysis, looks more promising than bigenough.\r\nhttps://github.com/math-comp/analysis/blob/master/topology.v#L413"
      },
      {
        "author": "gares",
        "date": "2018-03-22T10:29:34Z",
        "comment": "@CohenCyril Do we close this one?"
      },
      {
        "author": "CohenCyril",
        "date": "2018-09-07T12:08:54Z",
        "comment": "Waiting for `near`, `big_enough` has now its own repository https://github.com/math-comp/bigenough."
      }
    ],
    "review_discussion": [
      {
        "author": "gares",
        "file": "mathcomp/ssrmatching.v",
        "date": "2017-03-16T16:18:55Z",
        "comment": "spurious"
      },
      {
        "author": "strub",
        "file": "mathcomp/ssrmatching.v",
        "date": "2017-03-16T16:36:38Z",
        "comment": "Shoudn't this file be .gitignored ?"
      }
    ],
    "tags": [
      {
        "tag": "kind: enhancement",
        "description": "Issue or PR about addition of features."
      }
    ],
    "commits": [
      {
        "author": "strub",
        "committer": "strub",
        "hash": "2a68d0096511c3816af0959b9063b91b23ac95da",
        "message": "Move bigenough from real_closed to ssreflect",
        "date": "2017-03-16T15:48:38Z"
      },
      {
        "author": "strub",
        "committer": "strub",
        "hash": "fde6c0574099170feeb397e50199e6270489a5af",
        "message": "remove wrongly committed file",
        "date": "2017-03-16T16:42:47Z"
      },
      {
        "author": "strub",
        "committer": "strub",
        "hash": "755a24bfcc2afa6718016a065c0d4d3277b6d94d",
        "message": "Move [bigenough] do the correct sub-Make",
        "date": "2017-03-16T16:43:14Z"
      },
      {
        "author": "CohenCyril",
        "committer": "web-flow",
        "hash": "d37dc95390e22aac4754d5d12ddca3b2bfd93aca",
        "message": "Merge branch 'master' into move-bigenough",
        "date": "2017-09-01T14:21:02Z"
      }
    ]
  },
  {
    "author": "strub",
    "number": 115,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 29,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2017-03-13T11:53:12Z",
    "update_date": "2017-11-21T14:31:46Z",
    "discussion": [
      {
        "author": "CohenCyril",
        "date": "2017-09-07T15:11:47Z",
        "comment": "I'm ok with that, @ggonthier, @amahboubi what do you think?"
      },
      {
        "author": "herbelin",
        "date": "2017-09-07T16:30:55Z",
        "comment": "Hi, sorry for intervene. Do you know if @ggonthier's alias is working? I could not see a comment from him on github and his main page there seems to not have been updated since his move. So, I wonder whether the email address bound to his github account is still valid, and reaches him."
      },
      {
        "author": "CohenCyril",
        "date": "2017-09-08T07:09:58Z",
        "comment": "Thanks Hugo, @maximedenes and @gares suspect the same thing, I sent a mail to Georges' inria address to check with him."
      },
      {
        "author": "strub",
        "date": "2017-11-21T14:59:59Z",
        "comment": "Aren't you doing things in reverse order (merging, commenting code-style, writing a code-style). It seems that you're at step 2 :)"
      },
      {
        "author": "CohenCyril",
        "date": "2017-12-11T19:13:00Z",
        "comment": "Changing in favour of uniqPn from #166 (and uniqP is a short consequence of uniqPn)"
      }
    ],
    "review_discussion": [
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2017-11-21T14:55:15Z",
        "comment": "There is a spurious bullet here (only one subgoal => no bullet)"
      },
      {
        "author": "gares",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2017-11-21T14:57:07Z",
        "comment": "spurious `()` here"
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "strub",
        "committer": "strub",
        "hash": "8f62332b4b05eb796a72439d4b01b1f1ca8c44d7",
        "message": "Reflection lemmas for `seq.uniq`",
        "date": "2017-03-13T11:49:31Z"
      }
    ]
  },
  {
    "author": "strub",
    "number": 114,
    "diff_summary": [
      {
        "file": ".gitignore",
        "status": "M",
        "additions": 1,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2017-03-13T11:50:57Z",
    "update_date": "2017-03-13T20:57:03Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "strub",
        "committer": "strub",
        "hash": "8edf061f0338dddcb261fca59dd8b0fc9e1036d3",
        "message": "[gitignore]: ignore .vio files",
        "date": "2017-03-13T11:49:03Z"
      }
    ]
  },
  {
    "author": "ejgallego",
    "number": 113,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/plugin/trunk/ssreflect.ml4",
        "status": "M",
        "additions": 17,
        "deletions": 18
      }
    ],
    "state": "merged",
    "open_date": "2017-03-10T13:00:31Z",
    "update_date": "2017-04-07T21:48:10Z",
    "discussion": [
      {
        "author": "gares",
        "date": "2017-03-10T14:52:08Z",
        "comment": "\\o/\r\n\r\nThanks"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "ejgallego",
        "committer": "ejgallego",
        "hash": "4623e7e5ef2abda0bd26642e490adbbbee73d1ba",
        "message": "[camplX] Remove camlp4 support.\n\nAdapting to Coq upstream.",
        "date": "2017-04-07T00:57:25Z"
      }
    ]
  },
  {
    "author": "ejgallego",
    "number": 111,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/plugin/trunk/ssreflect.ml4",
        "status": "M",
        "additions": 12,
        "deletions": 10
      }
    ],
    "state": "merged",
    "open_date": "2017-02-23T21:18:41Z",
    "update_date": "2017-03-21T14:37:15Z",
    "discussion": [
      {
        "author": "gares",
        "date": "2017-02-24T06:53:24Z",
        "comment": "Also @maximedenes is interested, since such code is in his ssr/quill branch"
      },
      {
        "author": "ejgallego",
        "date": "2017-03-21T14:28:50Z",
        "comment": "Overlay removed as this is being merged upstream, previous build at: https://travis-ci.org/ejgallego/math-comp/builds/204768299"
      },
      {
        "author": "ejgallego",
        "date": "2017-03-21T14:37:36Z",
        "comment": "Thanks!!!"
      }
    ],
    "review_discussion": [
      {
        "author": "gasche",
        "file": ".travis.yml",
        "date": "2017-02-23T21:54:37Z",
        "comment": "Do you really want to still point to your personal repo once your PR has been merged on the Coq side?"
      },
      {
        "author": "ejgallego",
        "file": ".travis.yml",
        "date": "2017-02-23T21:57:11Z",
        "comment": "No, this patch will be dropped once we agree on a merge. We have a better overlay system in the works (one that actually picks the proper overlay based on `TRAVIS_PR` etc...) but it is not ready yet so we have to resort to workarounds."
      },
      {
        "author": "gasche",
        "file": "mathcomp/ssreflect/plugin/trunk/ssreflect.ml4",
        "date": "2017-02-23T22:06:04Z",
        "comment": "Couldn't you have a simpler patch if you converted back to string before returning in `mk_pntn`? I have the impression that all the other operations below could remain on strings only (do you modify a `ntn` after it has been returned by `mk_ntn`?)."
      },
      {
        "author": "ejgallego",
        "file": "mathcomp/ssreflect/plugin/trunk/ssreflect.ml4",
        "date": "2017-02-23T22:11:55Z",
        "comment": "Right! Thanks again Gabriel for your invaluable feedback."
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "ejgallego",
        "committer": "ejgallego",
        "hash": "c1ce5e0ea55f0f3eaff83210d2e8d0c7d2ca93ec",
        "message": "[safe-string] Allow compilation with -safe-string.\n\nThe first part of changes is easy, we could maybe polish the notation\npart a bit more.",
        "date": "2017-02-23T22:11:15Z"
      }
    ]
  },
  {
    "author": "maximedenes",
    "number": 110,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/plugin/trunk/ssreflect.ml4",
        "status": "M",
        "additions": 1,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2017-02-21T08:57:14Z",
    "update_date": "2017-02-21T09:08:19Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "maximedenes",
        "committer": "maximedenes",
        "hash": "3fc67e00e7b0959d4e6b0321309fff8c589f0ed2",
        "message": "Compatiblity with Ltac as a plugin.",
        "date": "2017-02-21T08:55:43Z"
      }
    ]
  },
  {
    "author": "ejgallego",
    "number": 108,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/plugin/trunk/ssreflect.ml4",
        "status": "M",
        "additions": 1,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2017-02-09T17:40:13Z",
    "update_date": "2017-03-21T22:38:26Z",
    "discussion": [
      {
        "author": "ejgallego",
        "date": "2017-03-14T11:04:56Z",
        "comment": "pinging"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "ejgallego",
        "committer": "ejgallego",
        "hash": "c7c6619bfec5d8729e40a0b0848ded4251fd7e09",
        "message": "Use pp_with as msg_with is being removed upstream.",
        "date": "2017-02-21T22:23:56Z"
      }
    ]
  },
  {
    "author": "ejgallego",
    "number": 107,
    "diff_summary": [
      {
        "file": ".travis.yml",
        "status": "M",
        "additions": 11,
        "deletions": 9
      }
    ],
    "state": "merged",
    "open_date": "2017-02-07T12:54:58Z",
    "update_date": "2017-02-21T09:07:57Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "ejgallego",
        "committer": "ejgallego",
        "hash": "62b3f78ee8cb16fcaa95ba7051d050c0e2913018",
        "message": "[travis] Make v8.5 build again\n\nWe also remove PFsection6 from build as it seems to be too close.",
        "date": "2017-02-07T12:42:35Z"
      }
    ]
  },
  {
    "author": "akr",
    "number": 106,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 0,
        "deletions": 3
      }
    ],
    "state": "merged",
    "open_date": "2017-02-07T12:00:23Z",
    "update_date": "2017-09-07T15:14:29Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "akr",
        "committer": "akr",
        "hash": "3c20f9049d4881a9f16404929e5d135b9ef23ee6",
        "message": "remove documentation for subfilter.\n\nsubfilter was exist at ssreflect-1.1 and removed at ssreflect-1.2.",
        "date": "2017-02-07T11:52:50Z"
      }
    ]
  },
  {
    "author": "ejgallego",
    "number": 105,
    "diff_summary": [
      {
        "file": ".travis.yml",
        "status": "M",
        "additions": 8,
        "deletions": 3
      }
    ],
    "state": "merged",
    "open_date": "2017-02-07T01:18:38Z",
    "update_date": "2017-02-07T10:16:22Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "ejgallego",
        "committer": "ejgallego",
        "hash": "486ad00de3ec88adea5e770c29142210e9de8b97",
        "message": "[travis] Improve parallelism in build (cf #88)",
        "date": "2017-02-07T01:15:07Z"
      },
      {
        "author": "ejgallego",
        "committer": "ejgallego",
        "hash": "86f23d20af6444d2837dc3d74a0265f47e8a571c",
        "message": "[travis] Build 70% of FT proof.\n\nI'm afraid we cannot reliably build more with the 50 minutes timeout.",
        "date": "2017-02-07T01:16:10Z"
      }
    ]
  },
  {
    "author": "CohenCyril",
    "number": 104,
    "diff_summary": [
      {
        "file": ".travis.yml",
        "status": "M",
        "additions": 8,
        "deletions": 12
      }
    ],
    "state": "closed",
    "open_date": "2017-02-06T21:30:22Z",
    "update_date": "2017-02-06T23:51:09Z",
    "discussion": [
      {
        "author": "ejgallego",
        "date": "2017-02-06T21:37:05Z",
        "comment": "Note the interaction of '.opam' caching vs installing a coq `.dev` version.\r\nIndeed, to get fully correct builds, you may need to disable caching.\r\n\r\nWe chose to cache `.opam` as we were really tight on timing and were installing a complete, heavy toolchain there. However, for this kind of setup, `.opam` caching is indeed more of an historical artifact."
      },
      {
        "author": "ejgallego",
        "date": "2017-02-06T21:40:18Z",
        "comment": "I would also personally test 8.6 vs 8.6.dev, but of course that is a matter of preferences. Also, note that we have two different coq packages in opam, the one in the official repos and the one in coq-dev, @maximedenes , what is going on here?"
      },
      {
        "author": "CohenCyril",
        "date": "2017-02-06T21:51:19Z",
        "comment": "@ejgallego would an opam upgrade be sufficient to trigger the rebuild of coq dev ?"
      },
      {
        "author": "ejgallego",
        "date": "2017-02-06T21:59:55Z",
        "comment": "@CohenCyril that seems like a great thing to try, I am not expert in opam but I think it should work."
      },
      {
        "author": "ejgallego",
        "date": "2017-02-06T22:01:54Z",
        "comment": "Something to take into account is that caching is far from free in Travis; indeed the download/unpacking + packing/upload time does count for the build. So it could be well the case that we end up losing net time if we download a fully cached Coq version just to rebuild it."
      },
      {
        "author": "CohenCyril",
        "date": "2017-02-06T22:05:17Z",
        "comment": "Do you have an idea of how much time it takes to use a the cache?\r\nDo you know if it possible to reuse cached data from a Travis build of Coq, so that we decorelate building Coq from building math-comp?"
      },
      {
        "author": "ejgallego",
        "date": "2017-02-06T22:14:15Z",
        "comment": "For a full coq building environment, the cache takes 8 seconds to download an unpack. Then, it takes 30 seconds to reupload it, but this should be surely skipped as the reload is caused by opam adding some unnecessary logging information in `.opam/log`. See: https://travis-ci.org/coq/coq/builds/198948812 for an example.\r\n\r\n> Do you know if it possible to reuse cached data from a Travis build of Coq, so that we decorelate building Coq from building math-comp?\r\n\r\nNot from the Coq travis run unless we setup something special, I think it is not a good idea. If you want binary packages you'll have to use apt for them."
      },
      {
        "author": "ejgallego",
        "date": "2017-02-06T22:16:31Z",
        "comment": "From a testing point of view, I think it is a bad idea to decorrelate Coq and Math-comp, IMHO you want to be sure they run well together with the respective tips of the branches, otherwise you delay detection of problems.\r\n\r\nMore complex CI setups force a rebuild of math-comp whenever Coq changes, however I think we don't have the manpower to do that kind of integration so Coq will take care of its own test and math-comp can use any policy they steem convenient."
      },
      {
        "author": "ejgallego",
        "date": "2017-02-06T22:39:49Z",
        "comment": "The main reason I am a bit wary of caching coq is that it makes the build process too non-deterministic for my taste; build times may go well when the cache is hit, then a cache invalidation may make things to timeout. And note that the cache is generated at the end of the build."
      },
      {
        "author": "CohenCyril",
        "date": "2017-02-06T23:51:09Z",
        "comment": "OK, maybe this is not a good idea after all."
      },
      {
        "author": "ejgallego",
        "date": "2017-02-07T01:24:25Z",
        "comment": "Just to be clear in case I sounded too negative, I don't think that using opam is a bad idea, in fact it seems great to me, however I don't know how to integrate it well with the way Travis learns about dependencies."
      },
      {
        "author": "CohenCyril",
        "date": "2017-02-08T00:39:58Z",
        "comment": "I think it is technically possible to (automatically) build docker images for each version of Coq we want to test against (8.5.3, 8.6, and latest **compiling** 8.6.dev and dev versions), and reuse these images in our math-comp build, so that each job time is \"time to download the appropriate Coq docker image\" + \"compilation time of mathcomp\"... Given there is a docker integration to github, which someone already made work for Coq (cf https://hub.docker.com/r/skippa/coq/builds/), this sounds feasible and not very hard. Actually it could even be part of the travis build (https://sebest.github.io/post/using-travis-ci-to-build-docker-images/, https://docs.travis-ci.com/user/docker/)\r\n\r\nAnd if odd-order is still too long, we could put it in an independent repository, store the build of mathcomp in a docker and use this docker to build odd-order.\r\n\r\nWhat do you think @ejgallego ?"
      },
      {
        "author": "ejgallego",
        "date": "2017-02-08T01:01:50Z",
        "comment": "I am not familiar with Docker so I need to read the links first, but it sounds great!\r\n\r\nOne question thou is how the docker build would interact with the Travis job which is launched at commit time. How do we make the Travis odd_order wait for the math-comp docker image to be ready?\r\n\r\nI was also thinking of using the `deploy` capabilities of Travis to indeed build some kind of caching, this should work well for the Coq case without adding too much complexity to the scripts, (the first job will just upload a `tar.gz` of coq for the rest of ci jobs), however I am not sure mathcomp can really benefit from it."
      },
      {
        "author": "ejgallego",
        "date": "2017-02-08T01:04:11Z",
        "comment": "For instance, could we teach Coq's Travis build to deploy a Coq docker image at every Coq commit ?\r\n"
      },
      {
        "author": "CohenCyril",
        "date": "2017-02-09T12:32:24Z",
        "comment": "yes we can (https://docs.travis-ci.com/user/docker/#Branch-Based-Registry-Pushes)"
      },
      {
        "author": "ejgallego",
        "date": "2017-02-09T14:40:28Z",
        "comment": "That looks great. I could will try to add a docker push to Coq's travis , but it won't happen in February I'm afraid."
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "a56e62ce05af031727d0a629ec9e78d26758ff55",
        "message": "using opam in travis before_install script",
        "date": "2017-02-06T21:21:27Z"
      },
      {
        "author": "CohenCyril",
        "committer": "CohenCyril",
        "hash": "074d8d90c93c10a92d23f11db83d2a92c0d6b3ef",
        "message": "Simplifying install script and fix for dev (explicit --kind version)",
        "date": "2017-02-06T21:39:59Z"
      }
    ]
  },
  {
    "author": "ejgallego",
    "number": 103,
    "diff_summary": [
      {
        "file": ".travis.yml",
        "status": "A",
        "additions": 52,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2017-02-06T18:27:27Z",
    "update_date": "2017-02-06T19:21:31Z",
    "discussion": [
      {
        "author": "ejgallego",
        "date": "2017-02-06T18:28:41Z",
        "comment": "example build : https://travis-ci.org/ejgallego/math-comp/builds/198934792"
      },
      {
        "author": "CohenCyril",
        "date": "2017-02-06T19:11:59Z",
        "comment": "I was doing something similar, but this looks cooler"
      },
      {
        "author": "ejgallego",
        "date": "2017-02-06T19:19:30Z",
        "comment": "We could cache Coq more aggressively, but unfortunately it still doesn't give us enough time to test odd_order :S "
      },
      {
        "author": "gares",
        "date": "2017-02-06T19:21:32Z",
        "comment": "Cool.  8.5 fails because of a timeout :-/\r\nMerging it, and waiting for the line to be added to README.md in order to see the status on the \"homepage\" ;-)"
      },
      {
        "author": "gares",
        "date": "2017-02-06T19:25:35Z",
        "comment": "BTW, the Makefile is broken and does not pass -j to submakes.\r\nA quick workaround is `make -f Makefile.coq -j2 all`."
      },
      {
        "author": "gares",
        "date": "2017-02-06T19:26:21Z",
        "comment": "see #88 "
      },
      {
        "author": "ejgallego",
        "date": "2017-02-06T20:05:14Z",
        "comment": "Oh I thought the `-j n` builds worked for me in the past; feel free to adjust as you see fit, the good thing is that if you submit a PR with the change, you will immediately see the speed difference."
      },
      {
        "author": "ejgallego",
        "date": "2017-02-06T20:29:29Z",
        "comment": "> waiting for the line to be added to README.md\r\n\r\nYou need to enable the math-comp repos at the Travis math-comp organization, then, you'll get the proper link to insert."
      },
      {
        "author": "ejgallego",
        "date": "2017-02-06T20:35:24Z",
        "comment": "@gares testing your suggestion at https://travis-ci.org/ejgallego/math-comp/builds/198974374"
      },
      {
        "author": "gares",
        "date": "2017-02-06T20:37:35Z",
        "comment": "@CohenCyril @assia I'd like you to enable travis (I don't have the admin right): https://github.com/mbonaci/mbo-storm/wiki/Integrate-Travis-CI-with-your-GitHub-repo"
      },
      {
        "author": "maximedenes",
        "date": "2017-02-06T20:41:19Z",
        "comment": "Wouldn't it make sense to give the release manager (@gares) admin rights? :)"
      },
      {
        "author": "CohenCyril",
        "date": "2017-02-06T21:22:28Z",
        "comment": "I enabled travis."
      },
      {
        "author": "CohenCyril",
        "date": "2017-02-06T21:47:03Z",
        "comment": "The build of the master branch was not triggered because travis is waiting for a commit.\r\nI submitted pull request simplifying @ejgallego install script using opam as he suggested himself.\r\nWhen they are ready, a pull request will successfully trigger the first build of math-comp#master.\r\nhttps://travis-ci.org/math-comp/math-comp/pull_requests"
      },
      {
        "author": "ejgallego",
        "date": "2017-02-06T21:53:07Z",
        "comment": "Ok, so -j2 as Enrico suggested seems to save 6 minutes[1], it may be worth trying to build at least the first part of the theorem, will push an experiment. Let's see if opam makes the build any slower thou.\r\n\r\n[1] https://travis-ci.org/ejgallego/math-comp/builds/198974374"
      },
      {
        "author": "ejgallego",
        "date": "2017-02-06T21:58:37Z",
        "comment": "Also note that the build in 8.5 is broken (revealed by the parallel build) as the primitive projection test seems to fail."
      },
      {
        "author": "ejgallego",
        "date": "2017-02-06T22:42:23Z",
        "comment": "Ok the first part of the theorem seems to work well under my scheme, trying the full development! It is gonna be tight:\r\n\r\n- https://travis-ci.org/ejgallego/math-comp/builds/199001333 [only BG]\r\n- https://travis-ci.org/ejgallego/math-comp/builds/199015709 [full]"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "ejgallego",
        "committer": "ejgallego",
        "hash": "ab3eda33281366194e1eadb5c53970da8fd3b3b5",
        "message": "[travis] Add initial Travis CI support.",
        "date": "2017-02-06T18:25:44Z"
      }
    ]
  },
  {
    "author": "ybertot",
    "number": 87,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/ssrbool.v",
        "status": "M",
        "additions": 1,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2016-12-20T14:35:02Z",
    "update_date": "2016-12-20T14:44:41Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "ybertot",
        "committer": "ybertot",
        "hash": "e7369f8e0115c2d32643d2eacd201362f32c9a34",
        "message": "correct a typo in the documentation",
        "date": "2016-12-20T14:32:48Z"
      }
    ]
  },
  {
    "author": "hivert",
    "number": 82,
    "diff_summary": [
      {
        "file": "mathcomp/algebra/mxalgebra.v",
        "status": "M",
        "additions": 1,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2016-11-17T00:48:02Z",
    "update_date": "2016-11-17T12:09:45Z",
    "discussion": [
      {
        "author": "gares",
        "date": "2016-11-17T12:09:51Z",
        "comment": "thanks\n"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "hivert",
        "committer": "hivert",
        "hash": "5daf14d44b9cd22c6b51b2b23b4eebe5f3aee79f",
        "message": "Fixes the doc of mxalgebra",
        "date": "2016-11-16T20:38:28Z"
      },
      {
        "author": "hivert",
        "committer": "hivert",
        "hash": "84cc11db01159b17a8dcf4d02dbe0549067d228f",
        "message": "Merge remote-tracking branch 'upstream/master' into fixdoc",
        "date": "2016-11-17T00:33:36Z"
      }
    ]
  },
  {
    "author": "ejgallego",
    "number": 79,
    "diff_summary": [
      {
        "file": "index.html",
        "status": "M",
        "additions": 2,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2016-11-04T17:47:28Z",
    "update_date": "2016-11-05T09:16:01Z",
    "discussion": [
      {
        "author": "gares",
        "date": "2016-11-04T20:03:06Z",
        "comment": "@maximedenes what was the magic trick to get coq-club indexed?\n"
      },
      {
        "author": "amahboubi",
        "date": "2016-11-05T08:44:57Z",
        "comment": "Ciao @gares , I opened a ticket for this 2 days ago. The IT guys did the same trick as for coq-club : let's wait for a couple of days to see if it works.\n"
      },
      {
        "author": "ejgallego",
        "date": "2016-11-05T12:26:30Z",
        "comment": "Indeed @gares that should be set, a direct link to the archives was missing for google to pick them up, as robots.txt still forbids accesing the mailing list information page.\n\nNow that I think of it, @amahboubi , it could make sense to request the INRIA ops to allow access to the info page too. Now if you google \"ssreflect mailing list\" you'll go directly to the archives.\n"
      },
      {
        "author": "ejgallego",
        "date": "2016-11-05T12:27:55Z",
        "comment": "@maximedenes the same applies to coq-club, if you google \"coq club mailing list\" you land into the archives.\n\n[Generally the whole Disallow: / of sympa's robots seems a bit strange IMVVHO]\n"
      },
      {
        "author": "amahboubi",
        "date": "2016-11-15T11:21:40Z",
        "comment": "@ejgallego : can you confirm that \"your\" google finds the archive with this query? I do not manage to reproduce this success...\n"
      },
      {
        "author": "ejgallego",
        "date": "2016-11-15T14:15:43Z",
        "comment": "@amahboubi indeed the list seems poorly indexed still, I was hoping that this trick would improve matters but so far it hasn't.\n\nCurrently I need to google for the title of the page, thus \"ssreflect discussion list\" ; what is weird is that discussions doesn't seem to be followed by google yet.\n"
      },
      {
        "author": "ejgallego",
        "date": "2016-11-22T15:54:51Z",
        "comment": "@amahboubi It seems that google has picked up with the archives and the situation has improved a bit, example: https://www.google.com/#q=ssreflect+tensor+product gets me to the right place now."
      },
      {
        "author": "amahboubi",
        "date": "2016-11-23T10:21:46Z",
        "comment": "Thanks for reporting @ejgallego. Actually I got a message yesterday  from  the Inria sysadmins  about this issue. May be they found the right incantation to be placed in robot.txt. I'll keep you posted here once I get feedback from them."
      },
      {
        "author": "amahboubi",
        "date": "2016-11-23T10:44:18Z",
        "comment": "Indeed, this issue seems to be solved. @maximedenes : they applied the same trick for coq-club :)."
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "ejgallego",
        "committer": "ejgallego",
        "hash": "9cefbb186d7f24c2a36145ac8d6cf2ba4e0ba54e",
        "message": "Add direct link to the archives to help google indexing.\n\nThe information page is forbidden by INRIA robots so we may want to hint\ngoogle where the accessible archives are.",
        "date": "2016-11-04T17:44:40Z"
      }
    ]
  },
  {
    "author": "falcondai",
    "number": 78,
    "diff_summary": [
      {
        "file": "etc/INSTALL.md",
        "status": "M",
        "additions": 3,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2016-10-25T22:06:54Z",
    "update_date": "2017-01-18T14:46:22Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "falcondai",
        "committer": "web-flow",
        "hash": "dd7657ec58116e8af5cbb741f82afea12e1dc2d1",
        "message": "minor change to the opam install example\n\nfix a typo in the example command\r\nadd `opam repo add coq-released http://coq.inria.fr/opam/released`",
        "date": "2016-10-25T22:06:47Z"
      }
    ]
  },
  {
    "author": "ghost",
    "number": 76,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/plugin/trunk/ssreflect.ml4",
        "status": "M",
        "additions": 1,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2016-10-12T13:42:00Z",
    "update_date": "2016-10-12T13:44:22Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "hash": "958599031dc67394cacdd29720b8ab56abd47dc2",
        "message": "changing \"ssreflect.ml4\" so that we avoid triggering bugs in camlp5's \"pr_o.cmo\" plugin",
        "date": "2016-10-12T13:00:48Z"
      }
    ]
  },
  {
    "author": "erikmd",
    "number": 73,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/plugin/trunk/ssreflect.ml4",
        "status": "M",
        "additions": 4,
        "deletions": 4
      },
      {
        "file": "mathcomp/ssreflect/plugin/v8.4/ssreflect.ml4",
        "status": "M",
        "additions": 4,
        "deletions": 4
      },
      {
        "file": "mathcomp/ssreflect/plugin/v8.5/ssreflect.ml4",
        "status": "M",
        "additions": 4,
        "deletions": 4
      },
      {
        "file": "mathcomp/ssreflect/plugin/v8.6/ssreflect.ml4",
        "status": "M",
        "additions": 4,
        "deletions": 4
      }
    ],
    "state": "merged",
    "open_date": "2016-09-27T14:56:10Z",
    "update_date": "2016-09-27T22:13:22Z",
    "discussion": [
      {
        "author": "gares",
        "date": "2016-09-27T22:13:19Z",
        "comment": "Looks fine to me\n"
      },
      {
        "author": "erikmd",
        "date": "2016-09-28T09:01:47Z",
        "comment": "Thanks!\n"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "erikmd",
        "committer": "erikmd",
        "hash": "c558aba6eb7efdde0319348e0ad978b7d4412970",
        "message": "Add a typing colon in the output of the Search ssreflect vernacular.",
        "date": "2016-09-27T14:59:26Z"
      }
    ]
  },
  {
    "author": "ppedrot",
    "number": 72,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/plugin/trunk/ssreflect.ml4",
        "status": "M",
        "additions": 2,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2016-09-24T11:36:19Z",
    "update_date": "2016-09-26T07:51:36Z",
    "discussion": [
      {
        "author": "gares",
        "date": "2016-09-26T07:51:42Z",
        "comment": "thanks\n"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "ppedrot",
        "committer": "ppedrot",
        "hash": "75f0abfa4979cd0050399093fd07e7c952de49b4",
        "message": "Fix ML compilation after Ltac refactoring.",
        "date": "2016-09-24T11:34:29Z"
      }
    ]
  },
  {
    "author": "ghost",
    "number": 71,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/plugin/trunk/ssreflect.ml4",
        "status": "M",
        "additions": 1,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2016-09-23T13:21:17Z",
    "update_date": "2016-09-23T13:25:01Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "hash": "489d80b737ee5f3a2f936abbf2d9bd441d4ef124",
        "message": "FIX: compilation wrt. commit 9c35248 on Coq trunk branch.",
        "date": "2016-09-23T13:12:23Z"
      }
    ]
  },
  {
    "author": "ghost",
    "number": 70,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/plugin/trunk/ssreflect.ml4",
        "status": "M",
        "additions": 7,
        "deletions": 7
      }
    ],
    "state": "merged",
    "open_date": "2016-09-22T07:10:39Z",
    "update_date": "2016-09-22T08:21:51Z",
    "discussion": [
      {
        "author": "gares",
        "date": "2016-09-22T08:22:00Z",
        "comment": "thanks\n"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "hash": "a774d904dee59d4f78e0543f4cf06adbaf0e6f0f",
        "message": "fix compilation wrt. commit 699b70c in Coq trunk",
        "date": "2016-09-22T07:09:47Z"
      }
    ]
  },
  {
    "author": "ejgallego",
    "number": 69,
    "diff_summary": [
      {
        "file": "mathcomp/field/algC.v",
        "status": "M",
        "additions": 2,
        "deletions": 2
      }
    ],
    "state": "merged",
    "open_date": "2016-09-20T11:13:59Z",
    "update_date": "2016-09-28T08:37:06Z",
    "discussion": [
      {
        "author": "ejgallego",
        "date": "2016-09-28T08:51:46Z",
        "comment": "Thanks!!!\n"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "ejgallego",
        "committer": "ejgallego",
        "hash": "3bf6fbc4d339545b0eace0689adfec048f1c8530",
        "message": "[field] Remove unnecessary `Program Definition`\n\nSimple `Definition` should work fine here.\n\nThis avoids the problem:\n\n`Error: Library Coq.Program.Tactics has to be required first.`\n\nin math-comp versions that depends on a minimal (or no) Coq stdlib.\n\nTested on 8.5/8.6",
        "date": "2016-09-20T10:35:11Z"
      }
    ]
  },
  {
    "author": "ppedrot",
    "number": 68,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/plugin/trunk/ssreflect.ml4",
        "status": "M",
        "additions": 8,
        "deletions": 6
      }
    ],
    "state": "closed",
    "open_date": "2016-09-19T13:43:37Z",
    "update_date": "2016-09-24T11:30:58Z",
    "discussion": [
      {
        "author": "gares",
        "date": "2016-09-19T18:42:15Z",
        "comment": "I think the change to Make is wrong, isn't the Makefile adding that line (on some versions of Coq)?\n"
      },
      {
        "author": "ppedrot",
        "date": "2016-09-19T19:13:23Z",
        "comment": "Oh, you're right. I tend to use `git commit -a` too easily. I'll push a fixup.\n"
      },
      {
        "author": "gares",
        "date": "2016-09-19T19:16:28Z",
        "comment": "I could not find a better hack, patching Make is ugly, but only 8.6+ wants the mlpack file...\n"
      },
      {
        "author": "ppedrot",
        "date": "2016-09-19T19:21:46Z",
        "comment": "Couldn't you that using some form of conditional inclusion in the makefile?\n"
      },
      {
        "author": "ejgallego",
        "date": "2016-09-20T08:26:29Z",
        "comment": "@gares, note that the makefile patching mess things for me in the following way:\n- after a make the git checkout won't be clean.\n- repeated copies of `ssreflect_plugin.mlpack` get added every time make is run.\n"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "ppedrot",
        "committer": "ppedrot",
        "hash": "79446a9188c1b7215bc60abcf5995c702ee6bda1",
        "message": "Fix ML compilation after Ltac refactoring.",
        "date": "2016-09-21T10:16:56Z"
      }
    ]
  },
  {
    "author": "ppedrot",
    "number": 67,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/plugin/trunk/ssreflect.ml4",
        "status": "M",
        "additions": 9,
        "deletions": 9
      }
    ],
    "state": "merged",
    "open_date": "2016-09-16T08:50:02Z",
    "update_date": "2016-09-19T03:39:21Z",
    "discussion": [
      {
        "author": "gares",
        "date": "2016-09-19T03:39:25Z",
        "comment": "thanks\n"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "ppedrot",
        "committer": "ppedrot",
        "hash": "9513eeb058f620d8a062c183253212da4b4566d3",
        "message": "Fix compilation after change in CErrors API.",
        "date": "2016-09-16T08:49:10Z"
      }
    ]
  },
  {
    "author": "thery",
    "number": 66,
    "diff_summary": [
      {
        "file": "mathcomp/odd_order/PFsection9.v",
        "status": "M",
        "additions": 35,
        "deletions": 30
      },
      {
        "file": "mathcomp/ssreflect/binomial.v",
        "status": "M",
        "additions": 35,
        "deletions": 30
      }
    ],
    "state": "merged",
    "open_date": "2016-09-15T16:07:30Z",
    "update_date": "2016-10-13T12:18:48Z",
    "discussion": [
      {
        "author": "ggonthier",
        "date": "2016-09-15T18:57:45Z",
        "comment": "  Both `mul_binSn` and `mul_binnS` are good additions, and the name change to `mul_binSS` is certainly an improvement. I would have been happy with the Pascal-triangle naming scheme as well, as long as it was documented in a comment.\n  I do have an objection to the parameter naming: `'C(n, m)` is documented with parameters in that order, so it would be best if all lemmas followed that convention, which is almost the case now. Would you mind changing the statements accordingly, and setting right the other three outliers in `binomial` (`bin_gt0`, `leq_bin2l` and `bin_fact`)?\n  As I've noted on the mailing list, it might be worthwhile to generalize and simplify `mul_binSn` and `mul_binSS` by using `n.-1` instead of `n.+1` - the identities `n * 'C(n.-1, m) = m.+1 * 'C(n, m.+1)` and\n`n * 'C(n.-1, m) = (n - m) * 'C(n, m)` are valid for `n = 0` (sadly, this doesn't hold for `m` in the former).\n   I'm not sure how to handle this in your naming scheme, or in your example use; perhaps the Pascal-triangle inspired names are better after all (provided they're documented).\n  Concerning the proofs: there's no need to derive `mul_binSn` and `mul_binnS` from first principles, as the first follows from `mul_binSS` and `bin_sub`, while the second is a chaining of the first with `mul_binSS` (plus the `n=0` case, except if we go for the predecessor variants above).\n  Finally, there's a hidden defect in the `mul_binSS` proof in that it relies on the `mult_n_0` hint in the Coq prelude, thanks to stronger unification in the `trivial` tactic. We should correct this.\n  Here's my suggested code for the revised proofs using the Pasal names (for lack of a better idea) : \n\n```\nLemma bin_gt0 n m : (0 < 'C(n, m)) = (m <= n).\nProof.\nby elim: n m => [|n IHn] [|m] //; rewrite addn_gt0 !IHn orbC ltn_neqAle andKb.\nQed.\n\nLemma leq_bin2l n1 n2 m : n1 <= n2 -> 'C(n1, m) <= 'C(n2, m).\nProof.\nby elim: n1 n2 m => [|n1 IHn] [|n2] [|m] le_n12 //; rewrite leq_add ?IHn.\nQed.\n\nLemma bin_small n m : n < m -> 'C(n, m) = 0.\nProof. by rewrite ltnNge -bin_gt0; case: posnP. Qed.\n\nLemma binn n : 'C(n, n) = 1.\nProof. by elim: n => [|n IHn] //; rewrite binS bin_small. Qed.\n\n(* Multiply to move diagonally down and right in the Pascal triangle. *)\nLemma mul_bin_diag n m : n * 'C(n.-1, m) = m.+1 * 'C(n, m.+1).\nProof.\nrewrite [RHS]mulnC; elim: n m => [|[|n] IHn] [|m] //=; first by rewrite bin1.\nby rewrite mulSn [in _ * _]binS mulnDr addnCA !IHn -mulnS -mulnDl -binS.\nQed.\n\nLemma bin_fact n m : m <= n -> 'C(n, m) * (m`! * (n - m)`!) = n`!.\nProof.\nelim: n m => [|n IHn] [|m] // le_m_n; first by rewrite bin0 !mul1n.\nby rewrite !factS -!mulnA mulnCA mulnA -mul_bin_diag -mulnA IHn.\nQed.\n\n(* In fact the only exception for bin_factd is n = 0 and m = 1 *)\nLemma bin_factd n m : 0 < n -> 'C(n, m) = n`! %/ (m`! * (n - m)`!).\nProof.\nhave [/bin_fact<-|*] := leqP m n; first by rewrite mulnK ?muln_gt0 ?fact_gt0.\nby rewrite divnMA bin_small ?divn_small ?fact_gt0 ?fact_smonotone.\nQed.\n\nLemma bin_ffact n m : 'C(n, m) * m`! = n ^_ m.\nProof.\nhave [lt_n_m | le_m_n] := ltnP n m; first by rewrite bin_small ?ffact_small.\nby rewrite ffact_factd // -(bin_fact le_m_n) mulnA mulnK ?fact_gt0.\nQed.\n\nLemma bin_ffactd n m : 'C(n, m) = n ^_ m %/ m`!.\nProof. by rewrite -bin_ffact mulnK ?fact_gt0. Qed.\n\nLemma bin_sub n m : m <= n -> 'C(n, n - m) = 'C(n, m).\nProof.\nby move=> le_m_n; rewrite !bin_ffactd !ffact_factd ?leq_subr // divnAC subKn.\nQed.\n\n(* Multiply to move down in the Pascal triangle. *)\nLemma mul_bin_down n m : n * 'C(n.-1, m) = (n - m) * 'C(n, m).\nProof.\ncase: n => //= n; have [lt_n_m | le_m_n] := ltnP n m.\n  by rewrite (eqnP lt_n_m) mulnC bin_small.\nby rewrite -!['C(_, m)]bin_sub ?leqW ?subSn ?mul_bin_diag.\nQed.\n\n(* Multiply to move left in the Pascal triangle. *)\nLemma mul_bin_left n m : m.+1 * 'C(n, m.+1) = (n - m) * 'C(n, m).\nProof. by rewrite -mul_bin_diag mul_bin_down. Qed.\n\nLemma binSn n : 'C(n.+1, n) = n.+1.\nProof. by rewrite -bin_sub ?leqnSn // subSnn bin1. Qed.\n\nLemma bin2 n : 'C(n, 2) = (n * n.-1)./2.\nProof. by rewrite -[n.-1]bin1 mul_bin_diag -divn2 mulKn. Qed.\n\nLemma bin2odd n : odd n -> 'C(n, 2) = n * n.-1./2.\nProof. by case: n => // n oddn; rewrite bin2 -!divn2 muln_divA ?dvdn2. Qed.\n\nLemma prime_dvd_bin k p : prime p -> 0 < k < p -> p %| 'C(p, k).\nProof.\nmove=> p_pr /andP[k_gt0 lt_k_p].\nsuffices /Gauss_dvdr<-: coprime p (p - k) by rewrite -mul_bin_down dvdn_mulr.\nby rewrite prime_coprime // dvdn_subr 1?ltnW // gtnNdvd.\nQed.\n```\n"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "thery",
        "committer": "thery",
        "hash": "88b1305ed18f783c7ec8e16ae8da1f932303742c",
        "message": "Refactoring of binonial\n\nVariable renaming from 'C(m,n) to 'C(n,m)\nRenaming theorem mul_Sm_binn to mul_bin_diag\nAdding theorems mul_bin_left mul_bin_right",
        "date": "2016-09-16T11:14:28Z"
      }
    ]
  },
  {
    "author": "gares",
    "number": 65,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/ssreflect.v",
        "status": "M",
        "additions": 11,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2016-09-07T16:02:42Z",
    "update_date": "2016-10-13T12:20:30Z",
    "discussion": [
      {
        "author": "amahboubi",
        "date": "2016-10-05T09:35:54Z",
        "comment": "I like this one and actually used a similar device in my own proof scripts. Any reason why it's not merged yet?\n"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "committer": "web-flow",
        "hash": "806b05dc5c3a1594231225df0e8e9e28441d8736",
        "message": "abstract_context utility lemma",
        "date": "2016-09-07T15:57:19Z"
      },
      {
        "committer": "web-flow",
        "hash": "2209e0bce7eeda751f87806a3e77a0c520017a88",
        "message": "fix comment",
        "date": "2016-09-07T16:02:09Z"
      }
    ]
  },
  {
    "author": "ghost",
    "number": 60,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/plugin/trunk/ssreflect.ml4",
        "status": "M",
        "additions": 1,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2016-08-26T17:40:05Z",
    "update_date": "2016-08-28T07:24:47Z",
    "discussion": [
      {
        "author": "gares",
        "date": "2016-08-28T07:24:55Z",
        "comment": "Thanks!\n"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "hash": "9c4f68936e33c93cf179eec6e996062bec918915",
        "message": "fix compilation wrt. commit 69388fc in Coq trunk",
        "date": "2016-08-26T15:19:26Z"
      }
    ]
  },
  {
    "author": "ghost",
    "number": 59,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/plugin/v8.6/ssreflect.ml4",
        "status": "A",
        "additions": 6244,
        "deletions": 0
      },
      {
        "file": "mathcomp/ssreflect/plugin/v8.6/ssreflect_plugin.mlpack",
        "status": "A",
        "additions": 6244,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2016-08-25T15:43:57Z",
    "update_date": "2016-08-25T15:59:17Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "hash": "76794e738bc9c2f9e26dfafab94ccfac39ce50de",
        "message": "FIX: adding missing version of the ssreflect plugin that compiles with Coq v8.6.\n\nThe committed files represent copies of the ssreflect plugin for Coq trunk taken from commit c353aa5\nwhich is the last commit in which ssreflect plugin marked for Coq trunk is usable with both, Coq trunk as well as Coq v8.6.",
        "date": "2016-08-25T12:16:40Z"
      }
    ]
  },
  {
    "author": "ghost",
    "number": 58,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/plugin/trunk/ssreflect.ml4",
        "status": "M",
        "additions": 32,
        "deletions": 34
      }
    ],
    "state": "merged",
    "open_date": "2016-08-24T09:18:51Z",
    "update_date": "2016-08-24T20:50:41Z",
    "discussion": [
      {
        "author": "gares",
        "date": "2016-08-24T12:47:18Z",
        "comment": "Thanks for the PR!\n"
      },
      {
        "author": "ghost",
        "date": "2016-08-24T15:31:52Z",
        "comment": "I've added a commit  https://github.com/math-comp/math-comp/pull/58/commits/6bc53af07a100aad305393edb14c4a3d73b3e3b7 which addresses the code duplication that you pointed out.\n\nConsequences:\n\n**(1)**\n\nThis:\n\n``` Ocaml\nbo <> None\n```\n\nwas replaced with:\n\n``` Ocaml\nNamedDecl.is_local_def decl\n```\n\nThe first version works flawlessly.\n\nThe second version likewise, but there is an additional bonus;\n(for those ones who read the code, not for those ones who have written it) :\nit is obvious what that condition actually means.\n\n**(2)**\n\nThis:\n\n``` Ocaml\nlet _, bo, ty = Named.Declaration.to_tuple (pf_get_hyp gl x) in\nmkProd_or_LetIn (mk_reldecl (Name (f x)) bo ty) (subst_var x c)\n```\n\nwas replaced with:\n\n``` Ocaml\nlet decl = pf_get_hyp gl x in\nmkProd_or_LetIn (decl |> NamedDecl.to_rel |> RelDecl.set_name (Name (f x)))\n                (subst_var x c)\n```\n\nThe only point here is that we drop conversion `to_tuple`.\nSo, instead of converting named-declaration to tuple which was then converted to rel-declaration,\nwe convert named-declaration directly to rel-declaration.\n"
      },
      {
        "author": "gares",
        "date": "2016-08-24T20:50:48Z",
        "comment": "thanks\n"
      }
    ],
    "review_discussion": [
      {
        "author": "gares",
        "file": "mathcomp/ssreflect/plugin/trunk/ssreflect.ml4",
        "date": "2016-08-24T12:45:57Z",
        "comment": "Sorry but I don't like such duplication of code, this is why I did not merge this part of your previous pull request (and defined the mk_reldecl function).\n"
      }
    ],
    "tags": [],
    "commits": [
      {
        "hash": "c353aa577c4bed12746dc8433b5daba31ebd7759",
        "message": "use a convenient module alias instead of \"Context.Rel.Declaration\" and \"Context.Named.Declaration\"",
        "date": "2016-08-17T10:46:16Z"
      },
      {
        "hash": "2bc134ff7c90bbc63ff388d2a456f154cc563ed7",
        "message": "Removing calls of \"Context.Named.Declaration.to_tuple\" function",
        "date": "2016-08-17T11:10:41Z"
      },
      {
        "hash": "6bc53af07a100aad305393edb14c4a3d73b3e3b7",
        "message": "Possible code compaction motivated by Enrico's remark:  https://github.com/math-comp/math-comp/pull/58#discussion_r76048943",
        "date": "2016-08-24T14:22:44Z"
      }
    ]
  },
  {
    "author": "ghost",
    "number": 57,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/plugin/trunk/ssreflect.ml4",
        "status": "M",
        "additions": 9,
        "deletions": 4
      }
    ],
    "state": "closed",
    "open_date": "2016-08-12T09:20:50Z",
    "update_date": "2016-08-16T07:56:55Z",
    "discussion": [
      {
        "author": "gares",
        "date": "2016-08-16T07:56:55Z",
        "comment": "Thanks\n"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "hash": "882abc566a228902ee365a4b4421092b47860118",
        "message": "Fix compilation with respect to commit 8e38b0e in the \"trunk\" branch of Coq.",
        "date": "2016-08-12T08:56:56Z"
      }
    ]
  },
  {
    "author": "ghost",
    "number": 49,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/plugin/trunk/ssreflect.ml4",
        "status": "M",
        "additions": 1,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2016-06-03T15:10:35Z",
    "update_date": "2016-06-03T15:11:14Z",
    "discussion": [
      {
        "author": "gares",
        "date": "2016-06-03T15:11:10Z",
        "comment": "Thanks!\n"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "hash": "961344bd556656b2feb69ce2c0592a5bdcb5c020",
        "message": "fixing compilation (with Coq trunk & Coq v8.5)",
        "date": "2016-06-03T10:58:58Z"
      }
    ]
  },
  {
    "author": "ejgallego",
    "number": 48,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/plugin/trunk/ssreflect.ml4",
        "status": "M",
        "additions": 10,
        "deletions": 2
      },
      {
        "file": "mathcomp/ssreflect/plugin/trunk/ssrmatching.ml4",
        "status": "M",
        "additions": 10,
        "deletions": 2
      }
    ],
    "state": "merged",
    "open_date": "2016-05-31T13:04:17Z",
    "update_date": "2016-06-01T12:41:40Z",
    "discussion": [
      {
        "author": "gares",
        "date": "2016-06-01T12:41:45Z",
        "comment": "Thanks!\n"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "ejgallego",
        "committer": "ejgallego",
        "hash": "760351d5864d5f98d75f310ace6b37bda7a471a9",
        "message": "Compatibility with latest Coq trunk.",
        "date": "2016-05-31T12:59:15Z"
      }
    ]
  },
  {
    "author": "ppedrot",
    "number": 46,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/plugin/trunk/ssreflect.ml4",
        "status": "M",
        "additions": 32,
        "deletions": 13
      },
      {
        "file": "mathcomp/ssreflect/plugin/trunk/ssrmatching.ml4",
        "status": "M",
        "additions": 32,
        "deletions": 13
      }
    ],
    "state": "merged",
    "open_date": "2016-05-18T09:48:37Z",
    "update_date": "2016-05-18T11:38:51Z",
    "discussion": [
      {
        "author": "gares",
        "date": "2016-05-18T11:38:57Z",
        "comment": "thanks\n"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "ppedrot",
        "committer": "ppedrot",
        "hash": "1327aada8c68d8ba5ff97b22f4296a3cd5a33f6e",
        "message": "Fix compilation after the change of API in Tactics.",
        "date": "2016-05-18T09:46:43Z"
      }
    ]
  },
  {
    "author": "ppedrot",
    "number": 44,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/plugin/trunk/ssreflect.ml4",
        "status": "M",
        "additions": 6,
        "deletions": 6
      },
      {
        "file": "mathcomp/ssreflect/plugin/trunk/ssrmatching.ml4",
        "status": "M",
        "additions": 6,
        "deletions": 6
      }
    ],
    "state": "merged",
    "open_date": "2016-05-16T13:34:39Z",
    "update_date": "2016-05-16T19:55:03Z",
    "discussion": [
      {
        "author": "gares",
        "date": "2016-05-16T19:55:00Z",
        "comment": "thanks!\n"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "ppedrot",
        "committer": "ppedrot",
        "hash": "9a33b2edbd1b44b37a423458de2970a174795650",
        "message": "Fix compilation after the renaming of Lexer into CLexer.",
        "date": "2016-05-16T13:32:16Z"
      }
    ]
  },
  {
    "author": "hivert",
    "number": 43,
    "diff_summary": [
      {
        "file": "mathcomp/character/mxrepresentation.v",
        "status": "M",
        "additions": 3,
        "deletions": 3
      }
    ],
    "state": "merged",
    "open_date": "2016-05-12T13:35:49Z",
    "update_date": "2016-05-12T13:39:39Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "hivert",
        "committer": "hivert",
        "hash": "8c704cf7eaddd1858113e46ea00a79e094b102db",
        "message": "Fixes doc of mxrepresentation.v",
        "date": "2016-05-12T13:34:51Z"
      }
    ]
  },
  {
    "author": "ppedrot",
    "number": 42,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/plugin/trunk/ssreflect.ml4",
        "status": "M",
        "additions": 9,
        "deletions": 4
      },
      {
        "file": "mathcomp/ssreflect/plugin/trunk/ssrmatching.ml4",
        "status": "M",
        "additions": 9,
        "deletions": 4
      }
    ],
    "state": "merged",
    "open_date": "2016-05-09T13:05:05Z",
    "update_date": "2016-05-09T13:58:45Z",
    "discussion": [
      {
        "author": "gares",
        "date": "2016-05-09T13:58:51Z",
        "comment": "Thanks!\n"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "ppedrot",
        "committer": "ppedrot",
        "hash": "ab222f4194b24452318aab6a76d4dee3f5a2a7ff",
        "message": "Fix compilation after the merge of the dynamic tactic value branch.",
        "date": "2016-05-09T13:03:19Z"
      }
    ]
  },
  {
    "author": "hivert",
    "number": 41,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/seq.v",
        "status": "M",
        "additions": 215,
        "deletions": 11
      }
    ],
    "state": "closed",
    "open_date": "2016-05-05T22:37:18Z",
    "update_date": "2017-12-11T22:43:23Z",
    "discussion": [
      {
        "author": "hivert",
        "date": "2016-05-05T23:50:05Z",
        "comment": "Thanks for rereading my proofs. It's certainly a good way for me to improve my Coq/SSReflect skills. I Implemented your suggestions and pushed.\n"
      },
      {
        "author": "hivert",
        "date": "2016-05-06T07:35:09Z",
        "comment": "Updated pull request according to your comment.\n"
      },
      {
        "author": "hivert",
        "date": "2016-05-10T15:24:47Z",
        "comment": "Dear Georges,\n\nThanks for the careful rereading of my pull request ! I'll soon propose a new patch taking care of all your remarks.\n\nFlorent\n"
      },
      {
        "author": "hivert",
        "date": "2016-11-17T00:32:06Z",
        "comment": "First of all, I'm sorry that I took me so long to answer your suggestions. I should have addressed all of them including the remark on the reshape/flatten index theory  up there (the one with 5 comments). It a pity there is no numbering on the comment in Github, becaus there is no way to point so some comment. \n"
      },
      {
        "author": "hivert",
        "date": "2017-12-04T00:03:10Z",
        "comment": "Why github is still complaining about the conflict which is resolved in my branch ?"
      },
      {
        "author": "hivert",
        "date": "2017-12-04T20:09:04Z",
        "comment": "On Mon, Dec 04, 2017 at 04:36:17AM -0800, Cyril Cohen wrote:\n> The best practice would have been to open a new branch on your side to prepare the pull request, and then change the content of this branch each time you update your pull request, or each time you rebase your branch on top of master.\n> \n> Since you did not do it, you will have to force your branch master : I think you should remove your merge commit, then add a new commit on your master branch and rebase it on top of our master. Then github will update your pull request accordingly and state it has no conflicts. Does what I say make sense?\n\nIt's very strange, since I did only use github web interface. I haven't been\ndoing any Coq for a few months so that I need to update it together with\nMathcomp. Since It takes some times I tried to do everything online. I what\nyou said is true, I don't understand why they gives all these cliquodrome\nstuff online. Anyway, Sorry for the mess.\n\nA++\n\nFlorent\n"
      },
      {
        "author": "CohenCyril",
        "date": "2017-12-11T10:20:37Z",
        "comment": "Hi Florent, I agree it's a bit annoying that github allows you to click in ways that makes it enter an inconsistent state... Do you want me do handle this for you? If you are ok with it, I may rework your existing pull request to make it consistent with github and then merge."
      },
      {
        "author": "amahboubi",
        "date": "2017-12-11T10:32:18Z",
        "comment": "Indeed, it's a pain. BTW I think it would be good, to add something about the expected shape of history in ready-to-merge PRs in the [checklist](https://github.com/math-comp/math-comp/wiki/checklist-pr). Any wording suggestion @maximedenes ?\r\n"
      },
      {
        "author": "amahboubi",
        "date": "2017-12-11T10:35:19Z",
        "comment": "@CohenCyril, you self-assigned the review: what's the status of your review here as of today? Is it only a matter of cleaning the commits or is there anything more semantic to be done?"
      },
      {
        "author": "CohenCyril",
        "date": "2017-12-11T10:40:29Z",
        "comment": "@amahboubi, I guess now it should be ok with regard to the extensive review @ggonthier did a while ago. However, now, with the inconsitent state in github, it is very difficult to make a last review before merging, because github won't show me the correct diff!"
      },
      {
        "author": "hivert",
        "date": "2017-12-11T10:41:54Z",
        "comment": "      Dear Cyril,\n\nOn Mon, Dec 11, 2017 at 10:20:38AM +0000, Cyril Cohen wrote:\n> Hi Florent, I agree it's a bit annoying that github allows you to click in\n> ways that makes it enter an inconsistent state... Do you want me do handle\n> this for you? If you are ok with it, I may rework your existing pull request\n> to make it consistent with github and then merge.\n\nPlease do ! My fork is public <https://github.com/hivert/math-comp> so don't\nhesitate to refork it and finish the merge. Thanks !\n\nFlorent\n\n"
      },
      {
        "author": "hivert",
        "date": "2017-12-11T10:49:59Z",
        "comment": "On Mon, Dec 11, 2017 at 02:40:30AM -0800, Cyril Cohen wrote:\n> However, now, with the inconsitent state in github, it is very difficult to\n> make a last review before merging, because github won't show me the correct\n> diff!\n\nSorry for the mess ! I've been doing code review for years (mostly in the\nSagemath project), but it's the first time I'm using github interface for\nit. I didn't expect thing to go west that way in a few click. It scares me a\nlittle about github interface.\n\nBest,\n\nFlorent\n"
      },
      {
        "author": "hivert",
        "date": "2017-12-11T11:02:02Z",
        "comment": "@CohenCyril: I actually had a repo ready to be forked, So I made a new branch and resubmitted a new PR See https://github.com/math-comp/math-comp/pull/166"
      },
      {
        "author": "CohenCyril",
        "date": "2017-12-11T22:43:23Z",
        "comment": "merged as #166 "
      }
    ],
    "review_discussion": [
      {
        "author": "ejgallego",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2016-05-05T23:26:27Z",
        "comment": "May I suggest:\nProof. by apply/perm_eqP=> i; rewrite count_rev. Qed.\n"
      },
      {
        "author": "ejgallego",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2016-05-05T23:37:08Z",
        "comment": "May I suggest:\nby elim: n2 s => [s|n2 IHn1 [|x s]]; rewrite ?drop0 ?addn0 ?addnS /=.\n"
      },
      {
        "author": "ejgallego",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2016-05-06T00:42:31Z",
        "comment": "Umm, I'm not sure what would be the best theory for uniqP. For the proof, I'd try something more on the lines of:\n\n```\nProof.\nelim: s => [|x s IHs].\n  by constructor; case=> i [j [/andP[]]]; rewrite ltn0.\nrewrite /= negb_and negbK; case: (x \\in s) / boolP => [/(nthP d) hs|hs].\n  by constructor; case: hs => j hj hnj; exists 0, j.+1.\napply/(equivP IHs); split; case=> [i [j [hj hnj]]]; first by exists i.+1, j.+1.\ncase: i j hj hnj => [|i] [|j] //= hj hnj; last by exists i, j.\nby case/(nthP d): hs; exists j.\nQed.\n```\n\nBut surely that should be improved too.\n"
      },
      {
        "author": "ejgallego",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2016-05-06T00:44:44Z",
        "comment": "I think this style is preferred (thought I'm not sure):\nby move/perm_eqP=> uv_count; apply/perm_eqP=> Q; rewrite !count_filter.\n"
      },
      {
        "author": "ejgallego",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2016-05-06T00:48:09Z",
        "comment": "I'd suggest this stronger lemma:\n\nLemma all_perm_eq (u v : seq T) P : perm_eq u v -> all P u = all P v.\nProof. by move/perm_eq_mem/eq_all_r. Qed.\n"
      },
      {
        "author": "hivert",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2016-05-06T12:00:20Z",
        "comment": "Do you want me to remove this lemma from the patch, and keep it for another pull request ? Should I open a discussion about the statement on the mailing list ?\n"
      },
      {
        "author": "ejgallego",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2016-05-06T23:31:36Z",
        "comment": "Regarding the patch, I'd wait from feedback from the developers.\n\nI was just surprised the lemma didn't easily follow from the current theory.\n\nIt seems to me that the uniq theory in math-comp is optimized towards\nderiving facts from `uniq` assumptions and not the other way around.\n\nSo maybe it would be good to think a bit what should the \"reverse\" `uniq` theory be. `notuniq_witnessP` seems certainly spot on.\n"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2016-05-10T11:07:35Z",
        "comment": "These are refinements of the `rev_rotr` lemma that appears further down, and whose proof should be adapted.\nAlso, both these have shorter equational proofs:\n\n```\nLemma take_rev s n : take n (rev s) = rev (drop (size s - n) s).  \nProof.\nhave /orP[le_s_n | le_n_s] := leq_total (size s) n.\n  by rewrite (eqnP le_s_n) drop0 take_oversize ?size_rev.\nrewrite -[s in LHS](cat_take_drop (size s - n)).\nby rewrite rev_cat take_size_cat // size_rev size_drop subKn.\nQed.\n\nLemma drop_rev s n : drop n (rev s) = rev (take (size s - n) s).  \nProof.\nrewrite -[s]revK take_rev !revK size_rev -minnE /minn.\nby case: ifP => // /ltnW-le_s_n; rewrite !drop_oversize ?size_rev.\nQed.\n\n```\n\n...( in RotrLemmas )\n\n```\nLemma rev_rotr s : rev (rotr n0 s) = rot n0 (rev s).\nProof. by rewrite rev_cat -take_rev -drop_rev. Qed.\n\nLemma rev_rot s : rev (rot n0 s) = rotr n0 (rev s).\nProof. by rewrite (canRL revK (rev_rotr _)) revK. Qed.\n\n\n```\n"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2016-05-10T11:31:37Z",
        "comment": "This should so right after `nth_uniq`, and logically be called `uniqPn`(negative reflection characterization of `uniq`).\nWhile using the `i < j < size s` notation is tempting, it's likely to lead to annoying complications in intro patterns, so it is best merged into a ternary and.\nFinally the proof can be made a bit shorter by splitting the equivalence to make use of nth_uniq:\n\n```\nLemma uniqPn s :\n  reflect (exists i j, [/\\ i < j, j < size s & nth s i = nth s j]) (~~ uniq s).\nProof.\napply: (iffP idP) => [|[i [j [ltij ltjs]]]]; last first.\n  by apply: contra_eqN => Us; rewrite nth_uniq ?ltn_eqF // (ltn_trans ltij).\nelim: s => // x s IHs /nandP[/negbNE | /IHs[i [j]]]; last by exists i.+1, j.+1.\nby exists 0, (index x s).+1; rewrite !ltnS index_mem /= nth_index.\nQed.\n```\n\nFinal note: while this is a reasonable low-level lemma, the library prefers to rely on `injectivePn` as in practice s is a function range, and this avoids the pesky range conditions associated with nth. Of course, any sequence s is the codomain of `tnth (in_tuple s)`, via `map_tnth_enum`.\n"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2016-05-10T12:16:31Z",
        "comment": "likewise, this should be called `perm_filter` (and appear just above `perm_filterC`). Also, u & v should be s1 & s2 to fit with the section conventions.\n"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2016-05-10T12:18:48Z",
        "comment": "This should be called `perm_eq_all` (perm_eq precedes the set property), u & v should be s1 & s2, without the redundant type annotation. This should more logically appear just after `perm_eq_mem`.\n"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2016-05-10T12:27:21Z",
        "comment": "T does not need the `eqType` annotation; in fact only `P : pred T` is required. It is preferable to express a coercion using a cast, rather than quoting it explicitly:\n\n```\nLemma sumn_count T (P : pred T) s :  \n  sumn [seq (P i : nat) | i <- s] = count P s.  \n\n```\n"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2016-05-10T12:31:05Z",
        "comment": "It is useful (see below in `reshape_rcons`) to spin off a `sumn_rcons` intermediate lemma:\n\n```\nLemma sumn_rcons s n : sumn (rcons s n) = sumn s + n.\nProof. by rewrite -cats1 sumn_cat /= addn0. Qed.\n\nLemma sumn_rev s : sumn (rev s) = sumn s.\nProof. by elim: s => //= x s <-; rewrite rev_cons sumn_rcons addnC. Qed.\n\n```\n"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2016-05-10T12:34:59Z",
        "comment": "The `eqType` structure is never used in this section, which would be better merged into the `Flatten`section (except for`map_flatten`/`map_reshape`/`sumn_flatten`, which must go after since they apply `flatten`/`reshape`to different types).\n"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2016-05-10T12:36:59Z",
        "comment": "Section naming convention: t should be ss. There is a straightforward equational proof:\n\n```\nLemma flatten_rcons ss s : flatten (rcons ss s) = flatten ss ++ s. \nProof. by rewrite -cats1 flatten_cat /= cats0. Qed.\n\n```\n"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2016-05-10T12:43:02Z",
        "comment": "The scripting convention is to start all one-line scripts with by (unless they're of the form exact ....), and not to have a redundant trailing exact: at the end of a b, e.g.,\n`Proof. elim: ss => // s ss /= <-; apply: map_cat. Qed.`\n"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2016-05-10T12:44:43Z",
        "comment": "`exact: map_rev` proves this.\n"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2016-05-10T12:46:57Z",
        "comment": "I don't think the equivalence serves much purpose here: better state the forward direction with separate assumptions.\n\n```\nLemma eq_from_flatten_shape ss1 ss2 :  \n  flatten ss1 = flatten ss2 -> shape ss1 = shape ss2 -> ss1 = ss2.\nProof. by move=> Eflat Esh; rewrite -[LHS]flattenK Eflat Esh flattenK. Qed.\n\n```\n"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2016-05-10T12:52:37Z",
        "comment": "From its name, this lemma should have a `rev (reshape _ _)` LHS - you can use `canRL revK` to get back your statement.\nI prefer to put in an explicit forward \"transitive\" step to avoid excessive imperative folding/unfolding.\n\n```\nLemma rev_reshape sh s :  \n size s = sumn sh -> rev (reshape sh s) = map rev (reshape (rev sh) (rev s)). \nProof.\nmove=> sz_s; apply/(canLR revK)/eq_from_flatten_shape.\n  rewrite reshapeKr ?sz_s // -rev_flatten reshapeKr ?revK //. \n  by rewrite size_rev sumn_rev sz_s.\ntransitivity (rev (shape (reshape (rev sh) (rev s)))).\n  by rewrite !reshapeKl ?revK ?size_rev ?sz_s ?sumn_rev.\nrewrite shape_rev; congr (rev _); rewrite -[RHS]map_comp.\nby apply: eq_map => t /=; rewrite size_rev.\nQed.\n\n```\n"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2016-05-10T12:55:16Z",
        "comment": "Should come before flattenK, and use parameter named sh s I instead of s l n.\n"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2016-05-10T12:56:13Z",
        "comment": "Should go before nth_reshape.\n"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2016-05-10T12:59:57Z",
        "comment": "I suggest using `n`for the trailing block size, abbreviating `m := sumn sh` to fit the conclusion on a single line, and using `rev_reshape` in the proof.\n\n```\nLemma reshape_rcons s sh n (m := sumn sh) :  \n    m + n = size s ->  \n  reshape (rcons sh n) s = rcons (reshape sh (take m s)) (drop m s).\nProof.\nmove=> Dmn; apply/(can_inj revK); rewrite rev_reshape ?rev_rcons ?sumn_rcons //.\nrewrite /= take_rev drop_rev -Dmn addnK revK -rev_reshape //.\nby rewrite size_takel // -Dmn leq_addr.\nQed.\n```\n"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2016-05-10T13:25:13Z",
        "comment": "These functions should go at the beginning of the `Flatten`section, where the other related functions are also defined.\nThey _must_ be documented in the file header. They also should be added to the `Prenex Implicits` line at the end of the section.\nI am wary of pair-returning functions, which can be cumbersome to handle, with almost systematic destructuring or projecting. In fact I'd definitely advise against destructuring a pair in the conclusion of a lemma, and recommend using projections instead (see below).\nAn alternative here would be to expose two different functions to return the index and offset parts of your `reshape_index`. Both can be defined by one-liners, but somewhat at the expense of the following theory that becomes longer due to separate lemmas and more explicit unfolding of constants with long names. Perhaps you can try out both variants and see which one works best in your use cases.\n"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2016-05-10T13:37:10Z",
        "comment": "(Revised) theory for a pair-returning `reshape_index`:\n\n```\nDefinition flatten_index sh r c := sumn (take r sh) + c.  \nFixpoint reshape_index sh i :=\n  if sh isn't s0 :: s then (0, i) else \n  if i < s0 then (0, i) else \n  let (r, c) := reshape_index s (i - s0) in (r.+1, c).\n\nLemma reshape_indexP sh i (rc := reshape_index sh i) :  \n  i < sumn sh -> rc.1 < size sh /\\ rc.2 < nth 0 sh rc.1.  \nProof.\nelim: sh i @rc => //= n sh IHsh i; have [// | le_n_i] := ltnP i n.\nby rewrite -leq_subLR subSn // => /IHsh; case: reshape_index.\nQed.  \n\nLemma reshape_indexK sh i (rc := reshape_index sh i):  \n  flatten_index sh rc.1 rc.2 = i.\nProof.  \n  elim: sh i @rc => //= n sh IHsh i; have [// | le_n_i] := ltnP.\ncase: reshape_index {IHsh}(IHsh (i - n)) => r c /= Drc.\nby rewrite -(subnKC le_n_i) -Drc addnA.\nQed.  \n\nLemma flatten_indexK sh r c :  \n   c < nth 0 sh r -> reshape_index sh (flatten_index sh r c) = (r, c).  \nProof.\nelim: sh r => [|n sh IHsh] [| r] //= => [-> // | /IHsh-Drc].\nby rewrite /flatten_index /= -addnA addKn Drc ifN // -leqNgt leq_addr.\nQed.\n\nLemma nth_flatten x0 ss i (rc := reshape_index (shape ss) i) :  \n  nth x0 (flatten ss) i = nth x0 (nth [::] ss rc.1) rc.2.  \nProof.\nelim: ss i @rc => //= s ss IHss i; rewrite nth_cat.\nby have [// | le_s_i] := ltnP; rewrite /= IHss; case: reshape_index.\nQed.  \n\n```\n"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2016-05-10T13:41:04Z",
        "comment": "Some shorter proofs, using views, contrapositives, and the associativity of `maxn`\n\n```\nLemma incr_nth_inj v : injective (incr_nth v).  \nProof.\nmove=> i j /(congr1 (nth 0 ^~ i)); apply: contra_eq => neq_ij.\nby rewrite !nth_incr_nth eqn_add2r eqxx /nat_of_bool ifN_eqC.\nQed.\n\nLemma incr_nthC v i j : incr_nth (incr_nth v i) j = incr_nth (incr_nth v j) i.\nProof.\napply: (@eq_from_nth _ 0) => [|k _]; last by rewrite !nth_incr_nth addnCA.\nby do !rewrite size_incr_nth leqNgt if_neg -/(maxn _ _); apply: maxnAC.\nQed.\n\n```\n"
      },
      {
        "author": "ggonthier",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2016-05-10T13:52:22Z",
        "comment": "Theory with separate `reshape_index` and `reshape_offset` functions:\n\n```\nDefinition flatten_index sh r c := sumn (take r sh) + c.  \nDefinition reshape_index sh i := find (pred1 0) (scanl subn i.+1 sh).\nDefinition reshape_offset sh i := i - sumn (take (reshape_index sh i) sh).\n\nLemma flatten_indexP sh r c :\n  c < nth 0 sh r -> flatten_index sh r c < sumn sh.  \nProof.  \nmove=> lt_c_sh; rewrite -[sh in sumn sh](cat_take_drop r) sumn_cat ltn_add2l.\nsuffices lt_r_sh: r < size sh by rewrite (drop_nth 0 lt_r_sh) ltn_addr.\nby case: ltnP => // le_sh_r; rewrite nth_default in lt_c_sh.\nQed.\n\nLemma reshape_indexP sh i : i < sumn sh -> reshape_index sh i < size sh.\nProof.  \nrewrite /reshape_index; elim: sh => //= n sh IHsh in i *; rewrite subn_eq0.\nby have [// | le_n_i] := ltnP i n; rewrite -leq_subLR subSn // => /IHsh.\nQed.\n\nLemma reshape_offsetP sh i :\n  i < sumn sh -> reshape_offset sh i < nth 0 sh (reshape_index sh i).\nProof.  \nrewrite /reshape_offset /reshape_index; elim: sh => //= n sh IHsh in i *.\nrewrite subn_eq0; have [| le_n_i] := ltnP i n; first by rewrite subn0.\nby rewrite -leq_subLR /= subnDA subSn // => /IHsh.\nQed.\n\nLemma reshape_indexK sh i :  \n  flatten_index sh (reshape_index sh i) (reshape_offset sh i) = i.\nProof.\nrewrite /reshape_offset /reshape_index /flatten_index -subSKn.\nelim: sh => //= n sh IHsh in i *; rewrite subn_eq0; have [//|le_n_i] := ltnP.\nby rewrite /= subnDA subSn // -addnA IHsh subnKC.\nQed.\n\nLemma flatten_indexKl sh r c :  \n  c < nth 0 sh r -> reshape_index sh (flatten_index sh r c) = r.  \nProof.  \nrewrite /reshape_index /flatten_index.\nelim: sh r => [|n sh IHsh] [|r] //= lt_c_sh; first by rewrite ifT.\nby rewrite -addnA -addnS addKn IHsh.\nQed.\n\nLemma flatten_indexKr sh r c :  \n  c < nth 0 sh r -> reshape_offset sh (flatten_index sh r c) = c.  \nProof.  \nrewrite /reshape_offset /reshape_index /flatten_index.\nelim: sh r => [|n sh IHsh] [|r] //= lt_c_sh; first by rewrite ifT ?subn0.\nby rewrite -addnA -addnS addKn /= subnDl IHsh.\nQed.\n\nLemma nth_flatten x0 ss i (r := reshape_index (shape ss) i) :  \n  nth x0 (flatten ss) i = nth x0 (nth [::] ss r) (reshape_offset (shape ss) i).\nProof.\nrewrite /reshape_offset -subSKn {}/r /reshape_index.\nelim: ss => //= s ss IHss in i *; rewrite subn_eq0 nth_cat.\nby have [//|le_s_i] := ltnP; rewrite subnDA subSn /=.\nQed.  \n\n```\n"
      },
      {
        "author": "hivert",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2016-11-17T00:05:29Z",
        "comment": "First of all, I'm sorry that I took me so long to answer your suggestions. I just gave a try to both theories through my development. I've four quite different use cases so that they probably are altogether representative. It seems that \n- Version 1 gives more convoluted proofs where one needs to states facts before destructuring the pair\n- Version 2 gives simpler proof but with less readable statements. Actually, in two cases I had to write some equivalent of destructuring as \n\n```\nset r := reshape_index s i; set c := reshape_offset s i` \n```\n\njust to keep thing readable. At the end of the day, I think the second version is better. \nIf you want to have a look, the diff between my two attempts is at  https://github.com/hivert/Coq-Combi/commit/9538004053d58ab1f7ed06c41bbef43af0fe86de\nUnless you have some more comment I'll submit version 2 with separate functions.\n\nFinally I needed the following extra lemma so I'm adding it to the pull request:\n\n```\nLemma reshape_index_leq sh i1 i2 :\n  i1 <= i2 -> i2 < sumn sh ->\n  (reshape_index sh i1) < (reshape_index sh i2) \\/\n  ((reshape_index sh i1) = (reshape_index sh i2) /\\\n   (reshape_offset sh i1) <= (reshape_offset sh i2)).\n```\n"
      },
      {
        "author": "hivert",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2016-11-17T08:11:42Z",
        "comment": "Note: I can't add them to the Prenex Implicits line at the end of the section. because they are no implicit arguments.\n"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2017-09-07T15:26:09Z",
        "comment": "Hi! The statement of this lemma `reshape_index` looks weird to me (i.e. using `\\/` and `/\\`), could you tell me how it is used?"
      },
      {
        "author": "hivert",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2017-09-07T16:19:14Z",
        "comment": "I'm just writing that under the assumption, the pairs (index1, offset1) is lexicographically smaller than (index2, offset2). The form of the statement looked natural to me. How would you write that ? \r\n\r\nNow, to answer your question: Actually, I've only used it once, that is in the file https://github.com/hivert/Coq-Combi/blob/master/theories/MPoly/homogsym.v\r\nin the middle of the proof of lemma monEP.  There, I actually only need that \r\n\r\n    `reshape_index m i <= reshape_index m j` \r\n\r\nI prove it performing a case analysis on the disjunction.\r\n"
      },
      {
        "author": "LaurenceRideau",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2017-11-30T13:19:26Z",
        "comment": "Hi Florent, could you remove this last theorem ( reshape_index_leq ) from your request, so that we can merge it,. Then, please  do a new pull request for that specific theorem.\r\n"
      },
      {
        "author": "hivert",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2017-12-03T23:58:27Z",
        "comment": "Done and merged on my repo. However I'm not sure if my changes are resubmitted. To you see them ?"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2017-12-04T12:29:34Z",
        "comment": "Dear Florent, I think the problem is that you merged with master instead of rebasing your branch on top of master and adding a commit, but I'm no github expert. Maybe @maximedenes can explain this behavior to us?"
      },
      {
        "author": "CohenCyril",
        "file": "mathcomp/ssreflect/seq.v",
        "date": "2017-12-04T12:36:16Z",
        "comment": "Github might be unable to handle this practice.\r\n\r\nThe best practice would have been to open a new branch on your side to prepare the pull request, and then change the content of this branch each time you update your pull request, or each time you rebase your branch on top of master. And never merge this branch with anything.\r\n\r\nSince you did not do it, you will have to force your branch master : I think you should remove your merge commit, then add a new commit on your master branch and rebase it on top of our master. Then github will update your pull request accordingly and state it has no conflicts. Does what I say make sense?"
      }
    ],
    "tags": [],
    "commits": [
      {
        "author": "hivert",
        "committer": "hivert",
        "hash": "91e441ff120057657f61930bf8b97113311e8378",
        "message": "Missing lemmas in seq",
        "date": "2016-05-05T22:31:00Z"
      },
      {
        "author": "hivert",
        "committer": "hivert",
        "hash": "ae32703f67eb90738197c9641066a5f1c6d60896",
        "message": "Emilio's improvements",
        "date": "2016-05-05T23:44:43Z"
      },
      {
        "author": "hivert",
        "committer": "hivert",
        "hash": "f7b92d0e9e5d073f6f12b5c0da1bbaacef7eff64",
        "message": "Emilio's improvements on Florent's seq lemmas (2)",
        "date": "2016-05-06T07:29:48Z"
      },
      {
        "author": "hivert",
        "committer": "hivert",
        "hash": "38e95390c526a4b96cd5ba42bfdee50fdfc69d17",
        "message": "Merge remote-tracking branch 'upstream/master'",
        "date": "2016-05-06T11:55:02Z"
      },
      {
        "author": "hivert",
        "committer": "hivert",
        "hash": "fe120ba390f36367b1b799950c4fc7a847f924fe",
        "message": "Merge branch 'master' of github.com:math-comp/math-comp",
        "date": "2016-11-16T20:42:59Z"
      },
      {
        "author": "hivert",
        "committer": "hivert",
        "hash": "0d31d714b86bf9c16fff56c95d305b7fe6d7bd60",
        "message": "All ggonthier improvements on the pull request, except reshape_index theory",
        "date": "2016-11-16T21:24:48Z"
      },
      {
        "author": "hivert",
        "committer": "hivert",
        "hash": "67933b2acd5ddd6835e9bfcd5b2525466856de3c",
        "message": "Script conventions (by | exact)",
        "date": "2016-11-16T21:36:29Z"
      },
      {
        "author": "hivert",
        "committer": "hivert",
        "hash": "3b6c7864ee8b703be1e898a15bfa74c5864074a7",
        "message": "flatten and reshape indexes",
        "date": "2016-11-17T00:26:41Z"
      },
      {
        "author": "hivert",
        "committer": "web-flow",
        "hash": "6a9e263fb0be33475ab62d90876e2781b01cda66",
        "message": "Merge branch 'master' into master",
        "date": "2017-12-03T23:43:03Z"
      }
    ]
  },
  {
    "author": "ppedrot",
    "number": 40,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/plugin/trunk/ssreflect.ml4",
        "status": "M",
        "additions": 2,
        "deletions": 12
      }
    ],
    "state": "merged",
    "open_date": "2016-05-02T09:39:59Z",
    "update_date": "2016-05-04T12:15:00Z",
    "discussion": [
      {
        "author": "gares",
        "date": "2016-05-04T12:15:05Z",
        "comment": "Thanks\n"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "ppedrot",
        "committer": "ppedrot",
        "hash": "35d6aa4bc7c2d39bbd55d2ff5d114a03e1f284f2",
        "message": "Fixing compilation after the merge of ML-tactic-notation branch.",
        "date": "2016-05-02T09:34:40Z"
      }
    ]
  },
  {
    "author": "ppedrot",
    "number": 39,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/ssrbool.v",
        "status": "M",
        "additions": 4,
        "deletions": 0
      },
      {
        "file": "mathcomp/ssreflect/ssreflect.v",
        "status": "M",
        "additions": 4,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2016-04-08T13:28:36Z",
    "update_date": "2016-04-15T13:30:45Z",
    "discussion": [
      {
        "author": "ppedrot",
        "date": "2016-04-12T15:25:32Z",
        "comment": "Up.\n"
      },
      {
        "author": "gares",
        "date": "2016-04-12T18:47:00Z",
        "comment": "Many thanks, but I had no time to look at it.  It is small, but I quite don't get why \"Local\" and what/how it fixes.  Tomorrow I'll have some time, but an explanation may help.\n"
      },
      {
        "author": "ppedrot",
        "date": "2016-04-12T18:54:55Z",
        "comment": "The merge introduced a new notation scope for functions, so that some notations that used a syntaxical parameter in two different scopes (e.g. as an argument vs. as a function) would fail. There were two places where it broke, so that I added the Argument directive to remove the %function scope for the problematic arguments. As this only affects the notation below, I made it local so as not to interfere with the remainder of the files, even though I think it would not have changed anything in practice.\n"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "ppedrot",
        "committer": "ppedrot",
        "hash": "08c04d63f46e4b97c1055e8d066ad08229a484aa",
        "message": "Fixing compilation after the merge of PR trunk-function_scope.",
        "date": "2016-04-08T13:22:53Z"
      }
    ]
  },
  {
    "author": "ppedrot",
    "number": 38,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/plugin/trunk/ssreflect.ml4",
        "status": "M",
        "additions": 39,
        "deletions": 34
      },
      {
        "file": "mathcomp/ssreflect/plugin/trunk/ssrmatching.ml4",
        "status": "M",
        "additions": 39,
        "deletions": 34
      }
    ],
    "state": "merged",
    "open_date": "2016-03-27T12:08:17Z",
    "update_date": "2016-03-31T07:45:03Z",
    "discussion": [
      {
        "author": "ppedrot",
        "date": "2016-03-28T14:18:10Z",
        "comment": "The assertion issue was fixed by Hugo in 111e5edf.\n"
      },
      {
        "author": "gares",
        "date": "2016-03-31T07:45:11Z",
        "comment": "Thanks!\n"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "ppedrot",
        "committer": "ppedrot",
        "hash": "88712a1803ace801300b49b10a6186e9561b6a8b",
        "message": "Fixing ML compilation.",
        "date": "2016-03-27T12:05:45Z"
      }
    ]
  },
  {
    "author": "strub",
    "number": 34,
    "diff_summary": [
      {
        "file": "mathcomp/algebra/all_algebra.v",
        "status": "M",
        "additions": 1,
        "deletions": 0
      }
    ],
    "state": "merged",
    "open_date": "2016-03-15T11:25:07Z",
    "update_date": "2016-03-15T20:52:09Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "strub",
        "committer": "strub",
        "hash": "be821e08f2c1492710ffff0275d3588ffbd2fc6a",
        "message": "all_algebra now exports zmodp",
        "date": "2016-03-15T11:23:54Z"
      }
    ]
  },
  {
    "author": "ejgallego",
    "number": 33,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/plugin/trunk/ssreflect.ml4",
        "status": "M",
        "additions": 2,
        "deletions": 2
      },
      {
        "file": "mathcomp/ssreflect/plugin/v8.5/ssreflect.ml4",
        "status": "M",
        "additions": 2,
        "deletions": 2
      }
    ],
    "state": "merged",
    "open_date": "2016-03-03T16:09:07Z",
    "update_date": "2016-03-03T21:06:49Z",
    "discussion": [
      {
        "author": "gares",
        "date": "2016-03-03T21:06:44Z",
        "comment": "thanks\n"
      },
      {
        "author": "ejgallego",
        "date": "2016-03-03T21:14:54Z",
        "comment": "thanks Enrico!\n"
      },
      {
        "author": "thery",
        "date": "2016-03-04T08:51:55Z",
        "comment": "Hi,\n\nDoes this solve the problem of the search that was not working properly \nin jsCoq?\n\nOn 03/03/2016 10:14 PM, Emilio Jesús Gallego Arias wrote:\n\n> thanks Enrico!\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/math-comp/math-comp/pull/33#issuecomment-191967213.\n"
      },
      {
        "author": "ejgallego",
        "date": "2016-03-04T10:15:48Z",
        "comment": "@thery there have been many improvements to the search support, both in the Coq version we ship and in jsCoq itself; IMHO search works much better now.\n\nHowever, large searches still generate `StackOverflows`, I think I have a possible intuition about what the problem is and won't be easy to fix; for now I suggest to workarounds:\n- use `Search ... in module`.\n- start chrome with a larger stack size: `--js-flags=\"--stack-size=65536\"`\n\nIn fact, I've missed this problem as I usually test with a large stack size.\n"
      },
      {
        "author": "ejgallego",
        "date": "2016-03-04T18:59:02Z",
        "comment": "Just for reference @thery, I think I have fully nailed the search issue, see: ejgallego/jscoq#13 \n"
      },
      {
        "author": "gmalecha",
        "date": "2016-04-24T20:50:01Z",
        "comment": "@ejgallego What are the largest searches that you've done?\n"
      },
      {
        "author": "thery",
        "date": "2016-04-24T21:23:43Z",
        "comment": "I guess a search that returns more than 1000 results is useless\n\nOn 04/24/2016 10:50 PM, Gregory Malecha wrote:\n\n> @ejgallego https://github.com/ejgallego What are the largest searches\n> that you've done?\n> \n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly or view it on GitHub\n> https://github.com/math-comp/math-comp/pull/33#issuecomment-214032772\n"
      },
      {
        "author": "ejgallego",
        "date": "2016-04-25T17:22:56Z",
        "comment": "@gmalecha searching with Mathcomp loades easily goes throu filtering ten-of-thousands of entries (as @thery points out, not all of them should be returned thou).\n"
      },
      {
        "author": "ejgallego",
        "date": "2016-05-02T14:58:35Z",
        "comment": "Hi @thery , recent improvements to the Chrome recursion optimizer means that large searches seem to work OK now. Do you have a concrete test case? Thanks.\n\n[BTW, I won't spam this issue anymore, people interested in Search performance can follow ejgallego/jscoq#13 ]\n"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "ejgallego",
        "committer": "ejgallego",
        "hash": "a8962654c562349f24728613352ea76268227471",
        "message": "[search] Use msg_info to notify search results.\n\nBy default, the search command calls `Pp.msg` to print search results.\n\nUnfortunately, this bypasses the `log_via_feedback` option and produces\nnot very nice results on feedback-depending IDES like JsCoq.\n\nA proper fix would involve merging coq/coq#143 , and the upcoming search\ncleanup, but this should do the trick for now.\n\nI couldn't observe any problem with the usual testing.",
        "date": "2016-03-03T16:07:45Z"
      }
    ]
  },
  {
    "author": "hivert",
    "number": 32,
    "diff_summary": [
      {
        "file": "etc/ANNOUNCE-github.md",
        "status": "M",
        "additions": 1,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2016-03-02T10:48:04Z",
    "update_date": "2016-03-02T11:17:12Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "hivert",
        "committer": "hivert",
        "hash": "fa6486545241822586fbfec995715a534e3489ee",
        "message": "Fix the address if the wiki. \n\nThe previous fix wasn't  right.",
        "date": "2016-03-02T10:47:26Z"
      }
    ]
  },
  {
    "author": "ppedrot",
    "number": 25,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/plugin/trunk/ssreflect.ml4",
        "status": "M",
        "additions": 11,
        "deletions": 15
      }
    ],
    "state": "merged",
    "open_date": "2016-02-15T12:22:22Z",
    "update_date": "2016-02-15T14:09:42Z",
    "discussion": [
      {
        "author": "gares",
        "date": "2016-02-15T14:09:45Z",
        "comment": "Thanks!\n"
      },
      {
        "author": "ppedrot",
        "date": "2016-02-15T14:11:15Z",
        "comment": "I'm still pushing some patches that are going to break the ML compilation. I'll propose another pull-request when I'm done for today.\n"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "ppedrot",
        "committer": "ppedrot",
        "hash": "57cc7ecae9378ceaa863ae8fd32bc767100c54e0",
        "message": "Fixing ML compilation with trunk.",
        "date": "2016-02-15T12:21:38Z"
      },
      {
        "author": "ppedrot",
        "committer": "ppedrot",
        "hash": "442df41ec75a51598be771f981ae17dd8d385481",
        "message": "Removing compatibility layers.",
        "date": "2016-02-15T12:28:57Z"
      }
    ]
  },
  {
    "author": "ejgallego",
    "number": 24,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/div.v",
        "status": "M",
        "additions": 6,
        "deletions": 6
      },
      {
        "file": "mathcomp/ssreflect/prime.v",
        "status": "M",
        "additions": 6,
        "deletions": 6
      }
    ],
    "state": "merged",
    "open_date": "2016-02-09T16:05:44Z",
    "update_date": "2016-02-09T16:51:40Z",
    "discussion": [
      {
        "author": "amahboubi",
        "date": "2016-02-09T16:38:07Z",
        "comment": "Hi Emilio, \n\nthis lemma already exists in [prime.v](https://github.com/math-comp/math-comp/blob/master/mathcomp/ssreflect/prime.v#L593), under the same name (and with the same proof).\n\nBut I agree it looks misplaced, so we could indeed move it to div. Any objection?\n"
      },
      {
        "author": "ejgallego",
        "date": "2016-02-09T16:47:01Z",
        "comment": "Hi Assia,\n\nUps! Sorry for the noise, I had this on my TODO from mathcomp 1.5 times I guess and forgot to double check. Please close.\n\nIndeed it would make more sense to have it in `div`, the lemma seems to be added in 1.6 so I guess not a lot of users should be impacted by the change. I've updated the PR just in case.\n"
      },
      {
        "author": "amahboubi",
        "date": "2016-02-09T16:51:29Z",
        "comment": "Many thanks for the PR update!\n"
      },
      {
        "author": "ejgallego",
        "date": "2016-02-09T16:56:25Z",
        "comment": "Thanks Assia !\n"
      }
    ],
    "review_discussion": [],
    "tags": [
      {
        "tag": "kind: enhancement",
        "description": "Issue or PR about addition of features."
      }
    ],
    "commits": [
      {
        "author": "ejgallego",
        "committer": "ejgallego",
        "hash": "fba0274616bc888726a18dc1990f9189e11521cd",
        "message": "[div] Move dvdn_fact from prime to div.",
        "date": "2016-02-09T16:49:25Z"
      }
    ]
  },
  {
    "author": "ppedrot",
    "number": 20,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/plugin/trunk/ssreflect.ml4",
        "status": "M",
        "additions": 54,
        "deletions": 28
      },
      {
        "file": "mathcomp/ssreflect/plugin/trunk/ssrmatching.ml4",
        "status": "M",
        "additions": 54,
        "deletions": 28
      }
    ],
    "state": "merged",
    "open_date": "2016-01-31T18:35:10Z",
    "update_date": "2016-02-01T09:19:06Z",
    "discussion": [
      {
        "author": "gares",
        "date": "2016-02-01T09:19:00Z",
        "comment": "Many thanks PMP!\n\nI've a question.  Clearly having a value escape the monad via an assignment is not very elegant.  Is what we do in ssr completely unsupported by the new API, or I should \"just\" rewrite everything in that monad?\n"
      },
      {
        "author": "ppedrot",
        "date": "2016-02-01T09:56:25Z",
        "comment": "This is clearly a hack, but at the same time the proper API to escape the Ftactic monad into non-unit Proofview.tactic is unclear. Note that the same problem arises for the Proofview.tactic monad, because Proofview.V82.of_tactic does lose information and is, as such, a hack. It would be indeed more reasonable to put the code of ssreflect into the (various) monads.\n"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "ppedrot",
        "committer": "ppedrot",
        "hash": "8b095453da1b679ed3c56d569bef6201aa35c689",
        "message": "Partially fixing ML compilation on trunk.",
        "date": "2016-01-31T18:32:11Z"
      }
    ]
  },
  {
    "author": "strub",
    "number": 13,
    "diff_summary": [
      {
        "file": "etc/utils/ssrcoqdep",
        "status": "M",
        "additions": 1,
        "deletions": 1
      }
    ],
    "state": "merged",
    "open_date": "2016-01-06T06:20:08Z",
    "update_date": "2016-01-06T19:46:03Z",
    "discussion": [
      {
        "author": "gares",
        "date": "2016-01-06T19:45:44Z",
        "comment": "Thanks\n"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "strub",
        "committer": "strub",
        "hash": "ab782048a148271919ed2e11debff674892f4c95",
        "message": "do not use `sed -i' in ssrcoqdep -- this is not portable\n\nThis prevents compilation of ssreflect on OS-X/*BSD.",
        "date": "2016-01-06T06:19:48Z"
      }
    ]
  },
  {
    "author": "ppedrot",
    "number": 12,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/plugin/trunk/ssreflect.ml4",
        "status": "M",
        "additions": 1,
        "deletions": 4
      }
    ],
    "state": "closed",
    "open_date": "2015-12-03T16:05:27Z",
    "update_date": "2015-12-03T18:53:23Z",
    "discussion": [
      {
        "author": "gares",
        "date": "2015-12-03T18:53:23Z",
        "comment": "thanks\n"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "ppedrot",
        "committer": "ppedrot",
        "hash": "6b9ff17faafaaf236c4e637d4e431db0b9cf338e",
        "message": "Removing the only use of globTacticIn.",
        "date": "2015-12-03T16:02:29Z"
      }
    ]
  },
  {
    "author": "ppedrot",
    "number": 10,
    "diff_summary": [
      {
        "file": "mathcomp/ssreflect/plugin/trunk/ssreflect.ml4",
        "status": "M",
        "additions": 47,
        "deletions": 15
      }
    ],
    "state": "closed",
    "open_date": "2015-11-23T18:24:23Z",
    "update_date": "2015-12-03T18:53:40Z",
    "discussion": [
      {
        "author": "gares",
        "date": "2015-11-23T18:58:16Z",
        "comment": "Thanks for the patch!\nBut I guess I'd prefer a single function adapting the new API to the old one... most of the patch seems to repeat the very same pattern over and over.\n"
      },
      {
        "author": "ppedrot",
        "date": "2015-11-24T00:15:31Z",
        "comment": "Well, I think ssreflect would gain a lot by switching to the new (unfinished) API, as it would allow for a static expression of relative timing between evarmaps. The current patch is compatible with a gradual typing of extensibility constraints...\n"
      },
      {
        "author": "gares",
        "date": "2015-11-24T07:36:31Z",
        "comment": "Sorry but I'm not following.  I'm OK for the new API, but this can be done only when the API is final.  Your pull request seem to wrap the new API into a compatibility function, but that function is not defined, it is just inlined.  What do you mean by \"compatible with gradual...\"? An why this is not possible if one defines a wrapper once an forall?  Best.\n"
      },
      {
        "author": "ppedrot",
        "date": "2015-11-24T08:30:40Z",
        "comment": "I mean that under the assumption that in ssreflect you want to use the new API rather than just port the code to it (i.e. making explicit constraints in the type of ssreflect functions), this is going to require a non negligible amount of work. Therefore, you'll have to do it on several passes, and you'll end up needing several variants of the wrapper, according to the types of its arguments and returned value (depending of what part of the code around you upgraded). The advantage of the current patch is that you can remove the compatibility lines one by one on a per-use basis.\n"
      },
      {
        "author": "gares",
        "date": "2015-12-03T18:53:50Z",
        "comment": "merged\n"
      }
    ],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "ppedrot",
        "committer": "ppedrot",
        "hash": "986f3758249fd3d6ea6cf666b81aa7b89b6917f3",
        "message": "Fix ML compilation w.r.t. trunk.",
        "date": "2015-11-23T18:20:02Z"
      }
    ]
  },
  {
    "author": "mattam82",
    "number": 1,
    "diff_summary": [
      {
        "file": "mathcomp/Makefile",
        "status": "M",
        "additions": 3,
        "deletions": 5
      },
      {
        "file": "mathcomp/ssreflect/Makefile",
        "status": "M",
        "additions": 3,
        "deletions": 5
      }
    ],
    "state": "merged",
    "open_date": "2015-04-03T06:48:01Z",
    "update_date": "2015-04-03T08:03:05Z",
    "discussion": [],
    "review_discussion": [],
    "tags": [],
    "commits": [
      {
        "author": "mattam82",
        "committer": "mattam82",
        "hash": "244e554f9dc919ea9aa02aeed51464aaf1b60125",
        "message": "Fix Makefiles.",
        "date": "2015-04-03T06:45:26Z"
      }
    ]
  }
]
