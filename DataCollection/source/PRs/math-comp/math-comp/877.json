{"author":"eupp","number":877,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":49,"deletions":4},{"file":"mathcomp/ssreflect/seq.v","status":"M","additions":49,"deletions":4}],"state":"merged","open_date":"2022-04-19T13:22:58Z","update_date":"2022-04-29T19:10:44Z","discussion":[{"author":"proux01","date":"2022-04-24T09:58:50Z","comment":"Thanks @eupp ! I've made a few additional simplifications / whitespace cleaning.\r\nIf you agree and there is no more comment, I'll merge by the end of (next) week.\r\n"},{"author":"eupp","date":"2022-04-26T09:35:40Z","comment":"> Thanks @eupp ! I've made a few additional simplifications / whitespace cleaning. If you agree and there is no more comment, I'll merge by the end of (next) week.\r\n\r\n@proux01 thank you for cleaning up my proofs!\r\nI have few remarks:\r\n\r\n1) If we keep the name `nth_seq1`, should we also rename `nth_nil` to `nth_seq0`?\r\n\r\n2) In `count_set_nth_small` is the suffix `_small` is standard naming convention in `ssreflect`?\r\nI can see only one lemma in `seq.v` following this convention: `perm_small_eq`.\r\nAt the same time many other similar lemmas use alternative convention with suffix `_leq` (e.g. `has_take_leq`, `in_take_leq`, etc). I personally prefer the latter (with `_leq`), but it's up to maintainers to decide :)\r\n\r\n3) I was wondering, should we add more lemmas about `set_nth` that can be deduced from `count_set_nthE`? \r\nFor example, lemmas about `has`, `all`, etc? I didn't need them in my project (from which I ported current lemmas), but they also can be useful. Perhaps we should add them in a follow-up PR?"},{"author":"proux01","date":"2022-04-26T09:54:54Z","comment":"1. No, `_nil` seems to be the usual suffix for `[::]` (`Search \"_nil\" in seq.` returns results whereas `seq0` doesn't exist) whereas the suffix for lists of length one seems to be `_seq1`.\r\n\r\n2. Right, let's go for `_ltn`.\r\n\r\n3. I'd say the rules are\r\n   * when adding a lemma, add all lemmas of the same \"family\" (that's why I complemented `count_set_nthF` with `count_set_nth_ltn`)\r\n   * don't clutter things with lemmas that are too direct combinations of existing lemmas\r\n\r\n   So yes a further PR may be worth it.\r\n"}],"review_discussion":[{"author":"proux01","file":"mathcomp/ssreflect/seq.v","date":"2022-04-21T07:56:48Z","comment":"I would expect a more generic lemma, like\r\n```suggestion\r\nLemma set_nthE :\r\n  set_nth x0 s n x\r\n  = if n < size s then take n s ++ x :: drop n.+1 s\r\n    else s ++ ncons (n - size s) x0 [:: x].\r\n```\r\nfrom which the current lemma can be derived."},{"author":"proux01","file":"mathcomp/ssreflect/seq.v","date":"2022-04-21T07:58:02Z","comment":"Same, there should be a more generic lemma from which this could be derived."}],"tags":[],"commits":[{"author":"eupp","committer":"proux01","hash":"9aaae68f044d0e8637bab9e39b019c65589b290f","message":"Add a few lemmas about set_nth","date":"2022-04-29T17:20:03Z"}]}