{"author":"affeldt-aist","number":869,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":114,"deletions":79},{"file":"mathcomp/algebra/fraction.v","status":"M","additions":114,"deletions":79},{"file":"mathcomp/algebra/mxpoly.v","status":"M","additions":114,"deletions":79},{"file":"mathcomp/algebra/poly.v","status":"M","additions":114,"deletions":79},{"file":"mathcomp/algebra/polyXY.v","status":"M","additions":114,"deletions":79},{"file":"mathcomp/algebra/polydiv.v","status":"M","additions":114,"deletions":79},{"file":"mathcomp/algebra/rat.v","status":"M","additions":114,"deletions":79},{"file":"mathcomp/character/character.v","status":"M","additions":114,"deletions":79},{"file":"mathcomp/character/inertia.v","status":"M","additions":114,"deletions":79},{"file":"mathcomp/solvable/abelian.v","status":"M","additions":114,"deletions":79},{"file":"mathcomp/ssreflect/div.v","status":"M","additions":114,"deletions":79},{"file":"mathcomp/ssreflect/eqtype.v","status":"M","additions":114,"deletions":79},{"file":"mathcomp/ssreflect/order.v","status":"M","additions":114,"deletions":79},{"file":"mathcomp/ssreflect/prime.v","status":"M","additions":114,"deletions":79},{"file":"mathcomp/ssreflect/ssrnat.v","status":"M","additions":114,"deletions":79}],"state":"merged","open_date":"2022-04-05T09:23:31Z","update_date":"2022-05-04T08:19:55Z","discussion":[{"author":"ybertot","date":"2022-04-05T11:24:32Z","comment":"LGTM, but\r\n\r\n- It feels that users will rarely use these, because it takes too much remembering that these pattern exist.\r\n- This suggests that the \"RHS\" notation should be usable to denote the right-hand side of equalities and inequalities alike.  How would that be possible?  It seems that one would need to be able to define \"multi-patterns\" (disjunctions of patterns), in the same way that we already define multi-rules.  On the surface, it seems an easy thing to define, but digging more deeply, it feels that providing this together with extensibility (as in extending multi-rules) is quite hard actually."},{"author":"ybertot","date":"2022-04-05T11:29:55Z","comment":"Another issue I have with this PR is that it corrects some spacing problems which are independent from the subject in the title.  It is too bad that these corrections will be forgotten if this PR is not incorporated."},{"author":"CohenCyril","date":"2022-04-05T12:46:02Z","comment":"> * This suggests that the \"RHS\" notation should be usable to denote the right-hand side of equalities and inequalities alike.  How would that be possible?\r\n\r\nI tried at some point and failed: this was too ambiguous, e.g. for which `r` would `RHS` match `y` in `r x y`? \r\nEven if we narrow `r` down to a few symbols (e.g. through some for of table, e.g. canonical projections),\r\nmany goals containing `_ <= _` also contain `_ = _`, if we are not more precise than just `RHS` how do we specify?\r\nThe ad-hoc solution here is to tailor customized patterns for the most frequently used...\r\n\r\nLike many things in ssr most people will not use it until they really feel the need, and that's when they must be able find them through documentation. Maybe we should rewrite a mathcomp local addentum to https://coq.inria.fr/refman/proof-engine/ssreflect-proof-language.html for that purpose?"},{"author":"affeldt-aist","date":"2022-04-14T09:50:47Z","comment":"The topic was discussed during the last mathcomp-dev meeting, see https://github.com/math-comp/math-comp/wiki/Minutes-April-06-2022.\r\nAfter the meeting @gares figured out a way based on @CohenCyril 's idea:\r\n```\r\nNotation LEFT symb := (X in symb X _)%pattern.\r\n```\r\nwith the following comment: \"one still needs to put in %pattern scope some notations for the usual infix symbols.\"\r\n\r\nShould it come as a replacement or an addition?"},{"author":"CohenCyril","date":"2022-04-14T12:30:42Z","comment":"> Should it come as a replacement or an addition?\r\n\r\nI would vote for \"as an addition\""},{"author":"gares","date":"2022-04-14T12:45:31Z","comment":"I guess one needs to make the scope explicit around symb as well. And test it a little, since I did not do it very carefully."},{"author":"thery","date":"2022-04-14T12:46:37Z","comment":"a pity we can't write  `[LEFT <=]` and `[LEFT =]`"},{"author":"gares","date":"2022-04-14T13:07:23Z","comment":"I think you can if you add these notations in the pattern scope (not as infix, just as atoms)."},{"author":"thery","date":"2022-04-14T13:11:45Z","comment":"I am pretty bad at notation I tried to add\r\n`Notation \"LEFT <=\" := (X in X <= _)%pattern (at level 10).`\r\nand it broke everything :see_no_evil: \r\n"},{"author":"gares","date":"2022-04-14T13:16:14Z","comment":"I'm not on my pc\r\n```\r\nNotation \"<=\" := leq : symb_scope.\r\nNotation \"LEFT f\" := (X in f%symb X _)%pattern.\r\n```"},{"author":"affeldt-aist","date":"2022-04-14T13:22:29Z","comment":"> I would vote for \"as an addition\"\r\n\r\nThen we can maybe merge this one for now and issue for the more general pattern (it might require some testing).\r\n"},{"author":"thery","date":"2022-04-14T13:25:47Z","comment":"I have tried\r\n```coq\r\nNotation \"<=\" := leq : symb_scope.\r\nDelimit Scope symb_scope with symb.\r\nNotation \"'LEFT' f\" := (X in f%symb X _)%pattern (at level 10).\r\nGoal 1 <= 2 .\r\n```\r\nand I get a\r\n`Unknown interpretation for notation \"<=\".`\r\nfor the `<=` in the goal.\r\n"},{"author":"CohenCyril","date":"2022-04-14T13:36:56Z","comment":"I think we need to create a new nonterminal (a.k.a. custom entry) for that otherwise we will screw up the main parser."},{"author":"thery","date":"2022-04-14T13:53:41Z","comment":"ok this works\r\n```coq\r\nDeclare Custom Entry symb.\r\nNotation \"<=\" := leq (in custom symb at level 0).\r\nNotation \"'LEFT' f\" := (X in f X _)%pattern (f in custom symb, at level 10).\r\nGoal 1 <= 2 .\r\nrewrite -[LEFT <=](addn1).\r\n```"}],"review_discussion":[{"author":"thery","file":"mathcomp/ssreflect/eqtype.v","date":"2022-04-14T13:01:45Z","comment":"should it not be `eqbLHS`?"},{"author":"affeldt-aist","file":"mathcomp/ssreflect/eqtype.v","date":"2022-04-14T13:20:34Z","comment":"for the sake of consistency indeed, but `eqLHS` is free and shorter; if we enforce consistency to have `eqbLHS` then we could think of using `eqLHS` instead of `LHS` and that does not seem a good idea given than it is used very often"},{"author":"thery","file":"mathcomp/ssreflect/eqtype.v","date":"2022-04-14T13:27:52Z","comment":"my poor brain prefers consistency :wink: "},{"author":"thery","file":"mathcomp/ssreflect/eqtype.v","date":"2022-04-14T13:34:40Z","comment":"I would prefer `eqLHS` to be a synonymous of `LHS` and is there a need for `leqLHS` and `ltnLHS` or is this captured by `leLHS` and `ltLHS`?"},{"author":"affeldt-aist","file":"mathcomp/ssreflect/eqtype.v","date":"2022-04-22T15:00:03Z","comment":"The last push force added leqLHS, etc. They seem quite useful. As for adding eqLHS as a synonymous of LHS, it looks like it better be an addition to Coq's ssrmatching.v. Should we PR this to Coq?"},{"author":"clayrat","file":"mathcomp/ssreflect/ssrnat.v","date":"2022-04-28T22:27:46Z","comment":"Should this be `(X in (_ <= X)%N)`?"},{"author":"affeldt-aist","file":"mathcomp/ssreflect/ssrnat.v","date":"2022-04-28T23:25:52Z","comment":"Indeed, thank you for noticing!"}],"tags":[{"tag":"kind: enhancement","description":"Issue or PR about addition of features."}],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"43129d5077d68b2ae67c2480bc1ed9b760071012","message":"pattern for rewriting Boolean (in)equalities","date":"2022-04-28T23:27:22Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"9a3a1a797c80b393f37b1985071f20dc38c75692","message":"update changelog","date":"2022-04-28T23:27:22Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"68073e16e4bc41625d25cad6642dc2f6fad86f22","message":"fix","date":"2022-04-29T07:35:26Z"}]}