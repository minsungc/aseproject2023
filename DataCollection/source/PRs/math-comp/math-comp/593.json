{"author":"affeldt-aist","number":593,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":89,"deletions":48},{"file":"mathcomp/algebra/ssrnum.v","status":"M","additions":89,"deletions":48},{"file":"mathcomp/ssreflect/order.v","status":"M","additions":89,"deletions":48}],"state":"merged","open_date":"2020-09-12T08:04:22Z","update_date":"2020-10-22T10:02:50Z","discussion":[{"author":"CohenCyril","date":"2020-09-15T15:22:43Z","comment":"I think a similar result should appear in `order.v` for comparable elements."},{"author":"affeldt-aist","date":"2020-09-15T16:44:40Z","comment":"> I think a similar result should appear in `order.v` for comparable elements.\r\n\r\nI guess that's not what you want, I'll investigate more tomorrow."},{"author":"CohenCyril","date":"2020-09-15T17:24:15Z","comment":"> > I think a similar result should appear in `order.v` for comparable elements.\r\n> \r\n> I guess that's not what you want, I'll investigate more tomorrow.\r\n\r\nnot at all indeed ... It should look like:\r\n```coq\r\n{in P, forall x, x >=< x0} -> {in P &, forall i j, f x >=< f y} ->\r\nall (>=< \\big[max/x0]_(i <- s | P i) f i) (x :: s).\r\n```\r\nWith perhaps a particular case for `x` and for `s` when `I` is an `eqType`."},{"author":"CohenCyril","date":"2020-09-17T11:11:41Z","comment":"Subsidiary question: shouldn't we have a generic `comparable_big` which generalizes both `comparable_bigmax` and  `comparable_bigmin` under the assumption that the iterated operation preserves comparability?"},{"author":"affeldt-aist","date":"2020-09-17T14:48:38Z","comment":"> Subsidiary question: shouldn't we have a generic `comparable_big` which generalizes both `comparable_bigmax` and `comparable_bigmin` under the assumption that the iterated operation preserves comparability?\r\n\r\nIndeed. But with the new `comparable_big`, the old `comparable_bigmax`\r\nis not exactly `comparable_big comparable_maxl` because of the order of arguments of `comparable_maxl`.\r\n(BTW, I changed the notation `>=< x` because it looked counter-intuitive to me.)\r\n"},{"author":"CohenCyril","date":"2020-09-26T20:54:20Z","comment":"> > Subsidiary question: shouldn't we have a generic `comparable_big` which generalizes both `comparable_bigmax` and `comparable_bigmin` under the assumption that the iterated operation preserves comparability?\r\n> \r\n> Indeed. But with the new `comparable_big`, the old `comparable_bigmax`\r\n> is not exactly `comparable_big comparable_maxl` because of the order of arguments of `comparable_maxl`.\r\n\r\nThen swap the arguments ;)\r\n\r\n> (BTW, I changed the notation `>=< x` because it looked counter-intuitive to me.)\r\n\r\nYou are right!\r\n\r\n"},{"author":"CohenCyril","date":"2020-09-26T21:58:20Z","comment":"BTW, making `comparable_minl` and `comparable_maxl` hints make `rewrite comparable_big//` simplify side conditions automatically if one rephrases them. I took the liberty to patch your PR, ~but I cannot seem to push in your branch, did you authorize pushs from maintainers?~ (my mistake)"},{"author":"CohenCyril","date":"2020-09-26T22:06:56Z","comment":"and ... rebased"},{"author":"CohenCyril","date":"2020-10-09T11:40:03Z","comment":"> The definition of `>=< y` in ssrnum should also be changed.\r\n\r\n@affeldt-aist do you think you can do it?"},{"author":"affeldt-aist","date":"2020-10-09T12:11:42Z","comment":"> > The definition of `>=< y` in ssrnum should also be changed.\r\n> \r\n> @affeldt-aist do you think you can do it?\r\n\r\nI'll try to by monday.\r\n"},{"author":"pi8027","date":"2020-10-22T02:21:31Z","comment":"@CohenCyril Can you confirm the last commit and merge this PR?"}],"review_discussion":[{"author":"CohenCyril","file":"mathcomp/algebra/ssrnum.v","date":"2020-09-14T16:40:56Z","comment":"```suggestion\r\nLemma max_real x y : x \\is real -> y \\is real -> max x y \\is real.\r\nProof. by case: leP. Qed.\r\n\r\nLemma min_real x y : x \\is real -> y \\is real -> min x y \\is real.\r\nProof. by case: leP. Qed.\r\n```"},{"author":"pi8027","file":"CHANGELOG_UNRELEASED.md","date":"2020-09-15T05:16:42Z","comment":"\"Do not edit former entries.\""},{"author":"pi8027","file":"mathcomp/algebra/ssrnum.v","date":"2020-09-15T05:20:15Z","comment":"In this section, `R` is a `realDomainType`. They should be located in a section that assumes `R : numDomainType` (e.g., somewhere after `Lemma real_ltgt0P` in `NumDomainOperationTheory`)."},{"author":"pi8027","file":"mathcomp/algebra/ssrnum.v","date":"2020-09-15T05:46:43Z","comment":"So `case: leP` should not be applicable to prove them. Use `real_leP` instead."},{"author":"pi8027","file":"mathcomp/algebra/ssrnum.v","date":"2020-09-15T09:40:18Z","comment":"```suggestion\r\n  x \\is real -> {in D, forall t : T, f t \\is real} ->\r\n```\r\nShould we also have `bigmin_real`?"},{"author":"pi8027","file":"CHANGELOG_UNRELEASED.md","date":"2020-09-15T09:40:53Z","comment":"```suggestion\r\n- in `ssrnum.v`, new lemmas `max_real`, `min_real`, `bigmax_real`\r\n\r\n```"},{"author":"CohenCyril","file":"mathcomp/algebra/ssrnum.v","date":"2020-09-15T11:46:25Z","comment":"Yes we should."},{"author":"CohenCyril","file":"mathcomp/algebra/ssrnum.v","date":"2020-09-15T11:47:30Z","comment":"There are two possible phrasing for `forall t : T, t \\in D -> f t \\is real` :\r\n- either `{in D, forall t : T, f t \\is real}`,\r\n- or `{homo f : x / D >-> mem real}`\r\n"},{"author":"CohenCyril","file":"mathcomp/algebra/ssrnum.v","date":"2020-09-15T12:46:24Z","comment":"~I suspect (and hope) this to be a one-liner in `T^d`, e.g.~\r\n~`Proof. exact: (@bigmax_real [eqType of T^d]). Qed.`~\r\nEdit: nop sorry, my bad."},{"author":"CohenCyril","file":"mathcomp/algebra/ssrnum.v","date":"2020-09-15T15:20:20Z","comment":"The best practice is to have a conditional big with a `in` on the predicate, this allows the index type (renamed from `T` to `I`) to be any type (not necessarily an `eqType`). One can recover the desired behavior thanks to `big_seq_cond`.\r\n```suggestion\r\nLemma bigmax_real I x0 (r : seq I) (P : pred I) (f : I -> R):\r\n  x0 \\is real -> {in P, forall i, f i \\is real} ->\r\n  \\big[max/x0]_(i <- r | P i) f i \\is real.\r\nProof.\r\nby move=> x0r Pr; elim/big_rec : _ => // i x Pi xr; rewrite max_real ?Pr.\r\nQed.\r\n```"},{"author":"CohenCyril","file":"mathcomp/algebra/ssrnum.v","date":"2020-09-15T15:21:07Z","comment":"Same remark:\r\n```suggestion\r\nLemma bigmin_real I x0 (r : seq I) (P : pred I) (f : I -> R):\r\n  x0 \\is real -> {in P, forall i, f i \\is real} ->\r\n  \\big[min/x0]_(i <- r | P i) f i \\is real.\r\nProof.\r\nby move=> x0r Pr; elim/big_rec : _ => // i x Pi xr; rewrite min_real ?Pr.\r\nQed.\r\n```"},{"author":"CohenCyril","file":"mathcomp/ssreflect/order.v","date":"2020-09-17T11:05:14Z","comment":"Given the nice phrasing you found for `comparable_bigmin` these `all` variants seem useless to me. If needed, it's easy to prove on the spot without induction.\r\n```suggestion\r\n\r\n```"},{"author":"CohenCyril","file":"mathcomp/ssreflect/order.v","date":"2020-09-17T11:06:49Z","comment":"```suggestion\r\nLemma comparable_bigmax x x0 I (P : pred I) (s : seq I) F :\r\n   x0 >=< x -> {in P, forall i, F i >=< x} ->\r\n  \\big[max/x0]_(i <- s | P i) F i >=< x.\r\nProof. by move=> ? ?; elim/big_ind : _ => // y z; exact: comparable_maxl. Qed.\r\n\r\nLemma comparable_bigmin x x0 I (P : pred I) (s : seq I) F :\r\n   x0 >=< x -> {in P, forall i, f i >=< x} ->\r\n  \\big[min/x0]_(i <- s | P i) f i >=< x.\r\nProof. by move=> ? ?; elim/big_ind : _ => // y z; exact: comparable_minl. Qed.\r\n```\r\ncosmetics + reordering arguments according to my intuition of what might be most useful..."},{"author":"CohenCyril","file":"mathcomp/algebra/ssrnum.v","date":"2020-09-17T11:10:05Z","comment":"Naive question is this simply `exact: comparable_bigmax`, `exact: comparable_bigmin` now?"},{"author":"affeldt-aist","file":"mathcomp/algebra/ssrnum.v","date":"2020-09-17T14:43:23Z","comment":"Almost. Modulo `comparabler0` rewrites which make the script longer than a single line. "},{"author":"CohenCyril","file":"mathcomp/algebra/ssrnum.v","date":"2020-09-26T20:55:56Z","comment":"But now with `comparable_big` isn't it better?"},{"author":"CohenCyril","file":"mathcomp/ssreflect/order.v","date":"2020-09-26T21:22:21Z","comment":"This hypothesis is too weak..."},{"author":"CohenCyril","file":"mathcomp/algebra/ssrnum.v","date":"2020-09-26T22:29:39Z","comment":"it is, with `comparable_bigr` !"},{"author":"CohenCyril","file":"mathcomp/ssreflect/order.v","date":"2020-09-26T22:30:51Z","comment":"better now"},{"author":"pi8027","file":"CHANGELOG_UNRELEASED.md","date":"2020-09-27T02:01:24Z","comment":"```suggestion\r\n  `max_real`, `min_real`, `bigmax_real`, and `bigmin_real`.\r\n```"},{"author":"pi8027","file":"mathcomp/ssreflect/order.v","date":"2020-09-27T02:06:37Z","comment":"The ordering of arguments of `comparable` has been changed here. This should be recorded in CHANGELOG in my opinion. Otherwise, this should be `comparable y x`.\r\n\r\nBTW, I don't see why we define `>=< _` twice in here and L.1157 (but not from this PR)."},{"author":"CohenCyril","file":"mathcomp/ssreflect/order.v","date":"2020-09-27T11:11:12Z","comment":"> The ordering of arguments of `comparable` has been changed here. This should be recorded in CHANGELOG in my opinion. Otherwise, this should be `comparable y x`.\r\n\r\nYes, it must be documented and the change is intentional.\r\n\r\n> BTW, I don't see why we define `>=< _` twice in here and L.1157 (but not from this PR).\r\n\r\nI think this is the unfortunate result of a copy paste from `<=` and `>=` and the fact the symbol  `>=<` is symmetric.\r\n\r\n"}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"1cacfb8f5dd8307adbc48b67474055ce455a168d","message":"lemma used in mathcomp-analysis\n\nCo-authored-by: Cyril Cohen <cohen@crans.org>\nCo-authored-by: Kazuhiko Sakaguchi <pi8027@gmail.com>","date":"2020-10-12T00:22:18Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"e2fb620d4a2bb6da26d344b69f22befdde09b1d0","message":"comparable_big lemma in order.v","date":"2020-10-12T00:25:40Z"},{"author":"CohenCyril","committer":"affeldt-aist","hash":"bf736cf6aaec0bca0d0202b8686d253123bf4af2","message":"Reorganizing relation between comparability/real and big","date":"2020-10-12T00:25:40Z"},{"author":"CohenCyril","committer":"affeldt-aist","hash":"6f0f46fc2249023924f62d4400014a500474e1b0","message":"Update CHANGELOG_UNRELEASED.md\n\nCo-authored-by: Kazuhiko Sakaguchi <pi8027@gmail.com>","date":"2020-10-12T00:25:40Z"},{"author":"CohenCyril","committer":"affeldt-aist","hash":"f5840a92d26d4436582e05b60bcd6fcf2a2a18ff","message":"Fixing and documenting the change of meaning of `>=< y`","date":"2020-10-12T00:31:22Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"d02fbd82f7bfe06c37dfe5edb05d0ed36a82811b","message":"fix the >=< notation in ssrnum as well","date":"2020-10-12T03:55:06Z"}]}