{"author":"erikmd","number":306,"diff_summary":[{"file":".gitlab-ci.yml","status":"M","additions":86,"deletions":37},{"file":"Dockerfile","status":"M","additions":86,"deletions":37},{"file":"Dockerfile.make","status":"M","additions":86,"deletions":37}],"state":"merged","open_date":"2019-03-22T03:52:54Z","update_date":"2019-04-17T09:20:33Z","discussion":[{"author":"ejgallego","date":"2019-03-22T04:08:43Z","comment":"I'd say it looks really good, congrats!\r\n\r\nAbout testing, I'm ccing @vbgl and @SkySkimmer who are experts here and may know a bit better how they do test."},{"author":"SkySkimmer","date":"2019-03-22T08:22:26Z","comment":">the semantics of the CI is slightly changed as mathcomp-dev for coq-(8.6, 8.7, 8.8, 8.9, dev) will be pushed to Docker Hub only if the build stage and the test stage were both successful. This is the breaking change of the PR, but I put it in the Pros list as it seems something desirable (?)\r\n\r\nIf you end up considering it a con you should be able to change it by using `when: always` https://docs.gitlab.com/ee/ci/yaml/#when\r\n\r\nI have no expertise in deploy/environment."},{"author":"erikmd","date":"2019-03-22T12:04:16Z","comment":"@SkySkimmer \r\n> If you end up considering it a con you should be able to change it by using `when: always`\r\n\r\nThanks! this could be a useful work-around, but on the other hand, if a job from `build` with a given version of Coq fails:\r\n* all other images would be pushed, which might be unwanted,\r\n* and 2 jobs would be failing (e.g. coq-8.7 and mathcomp-dev:coq-8.7), which would clutter a bit coqbot's report.\r\n\r\nSo I end up implementing another solution (swapping the `deploy` and `test` stages) that should address these two drawbacks…"},{"author":"erikmd","date":"2019-04-02T15:43:15Z","comment":"@CohenCyril I've noted that #307 now has a conflict so FYI I first rebased #306 on master and took the opportunity to improve details (removing unnecessary `=` in echo commands) and push a clone of the repo in a temporary public gitlab repo to test the new deployment procedure (temporarily to https://hub.docker.com/r/erikmd/math-comp-env-1). If this works I'll rebase #307 on #306 this evening and you'll be able to merge both PRs..."},{"author":"erikmd","date":"2019-04-02T23:54:42Z","comment":"@CohenCyril it was a good idea to test the new deployment procedure, because it seems it didn't work out of the box :)\r\nI identified two small issues (one regarding a spurious quote character, and one regarding the procedure itself, following @ejgallego's advice to rely on a deployment `environment`)\r\nI fixed the first issue but I'll need more time to finish this on tomorrow; anyway this approach indeed seems promising.\r\nSee you, Erik"},{"author":"CohenCyril","date":"2019-04-03T07:46:40Z","comment":"Thanks a lot @erikmd, waiting for your next input."},{"author":"CohenCyril","date":"2019-04-08T10:53:29Z","comment":"Hi! @erikmd any news?"},{"author":"erikmd","date":"2019-04-08T22:07:35Z","comment":"Hi @CohenCyril ! sorry, I've not had enough time to debug/finalize the new CI deployment setup…\r\nBut this task is in my todo list for this week."},{"author":"erikmd","date":"2019-04-16T14:01:01Z","comment":"Hi @CohenCyril, I've finished upgrading the `coqorg/coq` images so they now rely on opam 2.0.4:\r\n- https://hub.docker.com/r/coqorg/base\r\n- https://hub.docker.com/r/coqorg/coq\r\n\r\nand the `coqorg/coq:dev` images now contain some metadata labels to know more easily what is the underlying git commit hash of coq: https://microbadger.com/images/coqorg/coq:dev\r\n\r\nThen I pursued my experiments on #306 and #307 and the deploy configuration seems very fine now…\r\ni've rebased on `master` (to take into account the removal of `coq-8.6` jobs) and force-pushed so these two CI pipelines are now pending:\r\n- https://gitlab.com/math-comp/math-comp/pipelines/57070048 (for #306)\r\n- https://gitlab.com/math-comp/math-comp/pipelines/57070300 (for #307)\r\n\r\nFYI I've switched again the protected variables related to Docker Hub to *scoped protected variable*s w.r.t. the deployment environment, which implies this PR should be merged in `master` **before** other PRs (so that upcoming merges can benefit from the deploy to <https://hub.docker.com/r/mathcomp/mathcomp-dev>).\r\n\r\nI propose that you merge #306 then #307 when the corresponding pipelines will be green…\r\n\r\nKind regards, Erik"},{"author":"CohenCyril","date":"2019-04-16T14:09:35Z","comment":"@erikmd CI status are not displayed in PRs anymore... (they did this morning AFAIK) would you know why?"},{"author":"erikmd","date":"2019-04-16T14:16:12Z","comment":"@CohenCyril indeed, I don't know why…\r\nI checked the items from [this checklist](https://github.com/coq/bot#rely-on-coqbot-to-synchronize-your-github-prs-with-your-gitlab-project) (for the GitLab side) and saw nothing special…\r\n\r\n@Zimmi48 do you have an idea of what could cause that lack of CI status reporting?"},{"author":"Zimmi48","date":"2019-04-16T14:58:53Z","comment":"Sorry I didn't see the issue. Can you link me to a PR where there is a problem?"},{"author":"CohenCyril","date":"2019-04-16T15:03:11Z","comment":"> Sorry I didn't see the issue. Can you link me to a PR where there is a problem?\r\n\r\n@Zimmi48 The problem lasted the whole afternoon, but now it seems solved: I cannot find a PR with this problem anymore..."},{"author":"Zimmi48","date":"2019-04-16T15:18:25Z","comment":"I had a look at the log. It looks like GitLab didn't send any webhooks during the afternoon, until 16:30 when a lot of delayed webhooks were emitted. Confirmed this is was a general GitLab problem: https://twitter.com/gitlabstatus/status/1118076245688737793"},{"author":"erikmd","date":"2019-04-16T16:21:32Z","comment":":+1: The CI for this first PR was green :)"},{"author":"erikmd","date":"2019-04-16T17:01:37Z","comment":"And that of #307 was green as well; so I guess both PRs are ready.\r\nCc @CohenCyril "},{"author":"CohenCyril","date":"2019-04-17T09:19:17Z","comment":"Thanks @erikmd !!\r\nDo you know how to configure github to alert users that changes to this file might leak a secret variable and should hence be handled very carefully?"},{"author":"ejgallego","date":"2019-04-17T09:38:05Z","comment":"@CohenCyril you can use a codeowners file so every commit touching gitlab-ci.yml requires a review; other than there is not further check.\r\n\r\nMaybe a worthwhile feature request for gitlab would be to require a signed gitlab-ci.yml file"},{"author":"erikmd","date":"2019-04-17T09:41:54Z","comment":">Do you know how to configure github to alert users that changes to this file might leak a secret variable and should hence be handled very carefully?\r\n\r\nBeyond Emilio's very relevant suggestion on codeowners, there are now three restrictions to prevent something like `echo $HUB_TOKEN` to be effective in an external PR or in `master`:\r\n\r\n- `$HUB_TOKEN` is only available in the protected branch `master` (so, after the review+merge);\r\n- it is only available in jobs at the end of the file, which contain the `environment: …` key;\r\n- and finally I enabled a recently implemented protection in GitLab to mask the corresponding value if ever it were printed in the log:\r\n    - https://gitlab.com/gitlab-org/gitlab-ce/issues/13784\r\n    - https://gitlab.com/gitlab-org/gitlab-ce/merge_requests/25476\r\n    - https://gitlab.com/gitlab-org/gitlab-ce/merge_requests/26751"},{"author":"ejgallego","date":"2019-04-17T09:44:27Z","comment":"Yes so indeed as @erikmd points out, the main purpose of the PR is that now the change leaking information would have to reach master, thus indeed committers to the main branch should be careful of course with changes to the CI setup."},{"author":"CohenCyril","date":"2019-04-17T11:17:17Z","comment":"@ejgallego \r\n> indeed committers to the main branch should be careful of course with changes to the CI setup.\r\n\r\nthis was my point\r\n\r\n@erikmd \r\n\r\n\r\n> and finally I enabled a recently implemented protection in GitLab to mask the corresponding value if ever it were printed in the log:\r\n\r\nwow ok, I did not know about this... very useful (but I guess it would only prevent mistakes, not deliberate hacking attempts, which could encore the token so that gitlab does not filter it out?)"},{"author":"Zimmi48","date":"2019-04-17T12:14:40Z","comment":"Cool new feature indeed! Unfortunately, we can't use it for our secret variables in the Coq project because they don't respect the acceptable format. So we'll have to continue relying on protected + environment restricted + being careful about not printing the environment in deployment jobs."},{"author":"erikmd","date":"2019-04-17T15:25:37Z","comment":"Just to complement @ejgallego's comment:\r\n> the main purpose of the PR is that now the change leaking information would have to reach master\r\n\r\nthis was already the case thanks to the protected variables, but now only privileged `deploy` jobs can read  that variable in `master` builds.\r\n\r\nAlso, another useful change is brought by #306: the deployment of `mathcomp/mathcomp-dev:coq-{8.7,8.8,8.9,dev}` will occur only if the `build` stage of math-comp succeeds for these 4 versions of Coq, so this ensures that the version of math-comp available in the 4 Docker images stays consistent anytime. But of course, this deployment condition does not require that the `test` stage succeeds.\r\n\r\n@CohenCyril \r\n> (but I guess it would only prevent mistakes, not deliberate hacking attempts, which could encore the token so that gitlab does not filter it out?)\r\n\r\nIndeed, but these hacking attempts should anyway be implemented by adding code in the deploy jobs of the `.gitlab-ci.yml` file… so this would be noticeable for the person that merges the PR."},{"author":"CohenCyril","date":"2019-04-17T15:56:37Z","comment":"> Indeed, but these hacking attempts should anyway be implemented by adding code in the deploy jobs of the `.gitlab-ci.yml` file… so this would be noticeable for the person that merges the PR\r\n\r\n@erikmd this assumes that anyone with merge rights is aware of this security breach... and it is not the case yet."},{"author":"ejgallego","date":"2019-04-17T16:02:09Z","comment":"@CohenCyril well people with merge rights should certainly refuse to merge if they don't understand what a change in gitlab-ci.yml is doing, right?"},{"author":"CohenCyril","date":"2019-04-17T16:06:27Z","comment":"> @CohenCyril well people with merge rights should certain refuse to merge if they don't understand what a change in gitlab-ci.yml is doing, right?\r\n\r\nright!"}],"review_discussion":[],"tags":[],"commits":[{"author":"erikmd","committer":"erikmd","hash":"19ab5bad5ceece0680d94114f3bef9b2a4b0c195","message":"Add commentary sections & Swap order of .make-build, .opam-build","date":"2019-04-16T13:22:28Z"},{"author":"erikmd","committer":"erikmd","hash":"c84bc1c92a9e77103a88a60d05f9f6ad07b64b5c","message":"Refactor jobs: Split .opam-build & Create .docker-deploy\n\n* The latter template job is trusted and only runs:\n  - in branch master,\n  - if all build *and* test jobs were successful\n    (major change in the deployment's condition)\n\n* The other jobs are not tagged with \"environment: name: deployment\",\n  so they won't be able to read scoped protected variables.\n\n* href: https://gitlab.com/help/ci/variables/README.md#limiting-environment-scopes-of-variables-premium","date":"2019-04-16T13:23:06Z"},{"author":"erikmd","committer":"erikmd","hash":"f4cc7395ed95e433e836f6cfcf65d849e7629024","message":"Print more debug information","date":"2019-04-16T13:23:06Z"},{"author":"erikmd","committer":"erikmd","hash":"77ed8b94fd552e24de6b6824aab4996bf1731aa5","message":"Swap the deploy and test stages\n\nso the images:\n- mathcomp/mathcomp-dev:coq-8.7\n- mathcomp/mathcomp-dev:coq-8.8\n- mathcomp/mathcomp-dev:coq-8.9\n- mathcomp/mathcomp-dev:coq-dev\nwill be pushed to Docker Hub even if a third-party library CI fails.","date":"2019-04-16T13:23:32Z"},{"author":"erikmd","committer":"erikmd","hash":"a03e0cb0ff40afabcaccba7f764076355ca82962","message":"Don't run \"opam clean -c\" to workaround ocaml/opam#3828","date":"2019-04-16T13:41:16Z"}]}