{"author":"CohenCyril","number":519,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":127,"deletions":0},{"file":"mathcomp/ssreflect/ssrbool.v","status":"M","additions":127,"deletions":0}],"state":"merged","open_date":"2020-06-02T13:55:02Z","update_date":"2020-06-08T13:10:18Z","discussion":[{"author":"ybertot","date":"2020-06-04T13:45:26Z","comment":"It ssems to me that nothing needs to be done concerning documentation to add in the headers? @CohenCyril do you confirm?\r\nBackporting should be coq/theories/ssr/ssrbool.v should be the subject of a separate issue, not necessarily tagged with the 1.11 milestone.  Do you agree?"},{"author":"CohenCyril","date":"2020-06-04T13:51:02Z","comment":"~~@ybertot a Changelog is still needed, I did not have time to do it so far.~~\r\nOh you did it @affeldt-aist, thanks!"},{"author":"CohenCyril","date":"2020-06-04T13:51:13Z","comment":"Otherwise, your statements are correct."},{"author":"CohenCyril","date":"2020-06-04T13:53:45Z","comment":"@affeldt-aist the changelog must be fixed: `homoRL_in`, `homoLR_in`, `homo_mono_in`, `monoLR_in`, `monoRL_in`, and   `can_mono_in` were not added but changed."},{"author":"CohenCyril","date":"2020-06-04T13:54:20Z","comment":"(one cannot witness it easily unless one takes a look at `coq/theories/ssr/ssrbool.v`)"},{"author":"affeldt-aist","date":"2020-06-07T11:03:06Z","comment":"What about the following backport ?\r\n\r\nhttps://github.com/affeldt-aist/coq/blob/ssrbool_backpart_MathComp1.11/theories/ssr/ssrbool.v\r\n\r\n(Branch: https://github.com/affeldt-aist/coq/tree/ssrbool_backpart_MathComp1.11)\r\n\r\n- I haven't copy-pasted the following part of the documentation:\r\n```\r\n(* --> These will become part of the core SSReflect library with Coq 8.11.    *)\r\n(* This file also anticipates a v8.11 change in the definition of simpl_pred  *)\r\n(* to T -> simpl_pred T. This change ensures that inE expands the definition  *)\r\n(* of r : simpl_rel along with the \\in, when rewriting in y \\in r x.          *)\r\n```\r\n- I changed the name of the constructor of `predType` to avoid a clash.\r\n- I could compile Coq, MathComp's master, and Analysis' maxr branch\r\n  + I observed that a few Grab Existential Variables are not need anymore\r\n\r\nSill, I haven't tested Analysis' ereal_pseudometric branch, that would be a better test but requires a merge with Analysis' maxr branch.\r\n"},{"author":"CohenCyril","date":"2020-06-07T16:57:22Z","comment":"@affeldt-aist please do not touch anything else than what is added in this PR.\r\nIn particular the `predType` stuff you can find in `math-comp/mathcomp/ssreflect/ssrbool.v` is a backward compatibility machinery for older versions of Coq and it is thus not necessary to copy to the Coq repo.\r\nIf there really is a bug, please do it in a separate commit."},{"author":"affeldt-aist","date":"2020-06-07T18:13:52Z","comment":"(Update of previous comment.) (Updated to include `Section HomoMonoMorphismFlip` and to fix a typo in the branch name.)\r\n\r\nhttps://github.com/affeldt-aist/coq/blob/ssrbool_backport_MathComp1.11/theories/ssr/ssrbool.v\r\n\r\n(Branch: https://github.com/affeldt-aist/coq/tree/ssrbool_backport_MathComp1.11)\r\n\r\nContains:\r\n- `Section CancelOn.` coming from this PR\r\n- `Section inj_can_sym_in_on.` coming from this PR\r\n- `Section MonoHomoMorphismTheory_in.` that comes from this PR (and that updates the homonymous section that was already in Coq's `ssrbool.v`)\r\n- `Section HomoMonoMorphismFlip.` that comes from MathComp's master\r\n\r\nIt does not contain:\r\n- the documentation updates\r\n- the code about `pred` and `rel` that shall stay in MathComp's master\r\n\r\nAs a matter of test, I could compile Coq, MathComp's master, and Analysis' maxr branch.\r\nI observed that a few Grab Existential Variables are not need anymore.\r\nSill, I haven't tested Analysis' ereal_pseudometric branch, that would be a better test but requires a merge with Analysis' maxr branch."},{"author":"CohenCyril","date":"2020-06-07T19:14:57Z","comment":"> * `Section HomoMonoMorphismFlip.` that is in MathComp's master\r\n\r\nI forgot about this, I guess it could be included too actually..."},{"author":"affeldt-aist","date":"2020-06-08T11:59:21Z","comment":"@CohenCyril is ok to merge this PR (so that we can do the release) and to PR (today?) to Coq with https://github.com/affeldt-aist/coq/tree/ssrbool_backport_MathComp1.11 "},{"author":"CohenCyril","date":"2020-06-08T12:02:57Z","comment":"As for #513 the PR to Coq is not so urgent."},{"author":"CohenCyril","date":"2020-06-08T12:03:38Z","comment":"We can open an issue as soon as this is merged, to backport both #513 and this."},{"author":"CohenCyril","date":"2020-06-08T12:13:48Z","comment":"> As a matter of test, I could compile Coq, MathComp's master, and Analysis' maxr branch.\r\n\r\nBTW I do not know how you tested but the proper test would be to compile (Coq with fixes) + (Mathcomp removing fixes) + stuff"}],"review_discussion":[],"tags":[],"commits":[{"author":"CohenCyril","committer":"CohenCyril","hash":"344207b5925cb82ab46798d3ca3c13d3926fa0cb","message":"Missing homo_mono lemmas","date":"2020-06-06T17:37:55Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"0a4c927087ef2c3f6f0e20f6ad65ca932d9d3f6d","message":"add new lemmas to the changelog","date":"2020-06-06T17:38:55Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"19a798cfaaa7875e7406c0283166fb5a97a0153c","message":"fix the changelog","date":"2020-06-06T17:39:35Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"9e73d5dffc48db33323a9bafb6cd9f497ed71414","message":"bugfix","date":"2020-06-06T17:39:37Z"},{"author":"CohenCyril","committer":"web-flow","hash":"c07a2c8a189e2870129f6d0831310849a89fbbee","message":"Documenting addition policy to coq.","date":"2020-06-08T10:32:53Z"}]}