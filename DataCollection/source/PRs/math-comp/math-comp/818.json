{"author":"CohenCyril","number":818,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":148,"deletions":59},{"file":"mathcomp/algebra/ssrnum.v","status":"M","additions":148,"deletions":59},{"file":"mathcomp/character/classfun.v","status":"M","additions":148,"deletions":59},{"file":"mathcomp/ssreflect/ssrbool.v","status":"M","additions":148,"deletions":59}],"state":"merged","open_date":"2021-10-26T08:52:33Z","update_date":"2022-06-25T13:37:34Z","discussion":[{"author":"CohenCyril","date":"2021-10-26T08:53:46Z","comment":"CC @hivert @ChrisHughes24"},{"author":"hivert","date":"2021-10-28T06:06:08Z","comment":"May I suggest to take the opportunity to add all the easy lemmas about complex conjugation such as `1^* = 1` or `(x + y)^* = x^* + y^*`. Admitedly, they are all one liner thank to the various `rmorph?`. However, they are easier to apply if you have exactly the right lemma. For example, I'd rather do `rewrite -conjC1`, instead of `rewrite -(rmorph1 [rmorphism of (fun x => x^*)]) /=.`\r\n"},{"author":"CohenCyril","date":"2022-01-10T11:35:08Z","comment":"> May I suggest to take the opportunity to add all the easy lemmas about complex conjugation such as `1^* = 1` or `(x + y)^* = x^* + y^*`. Admitedly, they are all one liner thank to the various `rmorph?`. However, they are easier to apply if you have exactly the right lemma. For example, I'd rather do `rewrite -conjC1`, instead of `rewrite -(rmorph1 [rmorphism of (fun x => x^*)]) /=.`\r\n\r\n`conjC0` and `conjC1` were already there, I added `conjCN1` and I will not add the `conjCD`, etc, since the pattern of the RHS is sufficient to infer the morphism, so the contrived form  `rewrite -(rmorphD [rmorphism of (fun x => x^*)]) /=.` would ne be necessary anyway. I think this is a good compromise and will stop there."},{"author":"CohenCyril","date":"2022-01-11T14:59:31Z","comment":"@thery thanks for your thorough review."},{"author":"proux01","date":"2022-06-15T08:46:52Z","comment":"@CohenCyril could you rebase please?"},{"author":"CohenCyril","date":"2022-06-23T06:43:51Z","comment":"> @CohenCyril could you rebase please?\r\n\r\ndone"}],"review_discussion":[{"author":"thery","file":"mathcomp/algebra/ssrnum.v","date":"2022-01-10T12:14:44Z","comment":"Do we need  both theorems? maybe `eqC` is enough"},{"author":"thery","file":"mathcomp/algebra/ssrnum.v","date":"2022-01-10T12:23:12Z","comment":"`mulCr_rect`?"},{"author":"thery","file":"mathcomp/algebra/ssrnum.v","date":"2022-01-10T12:23:45Z","comment":"`mulCl_rect`?"},{"author":"thery","file":"mathcomp/algebra/ssrnum.v","date":"2022-01-10T12:24:19Z","comment":"difficult to remember this `Crect`"},{"author":"thery","file":"mathcomp/algebra/ssrnum.v","date":"2022-01-10T13:15:10Z","comment":"I would have expected the theorem to have the form : \r\n\r\n_  / _ =  _ + i * _\r\n\r\n"},{"author":"thery","file":"mathcomp/ssreflect/ssrbool.v","date":"2022-01-10T13:16:45Z","comment":"additions\r\n\r\nwhat this comment means?"},{"author":"thery","file":"mathcomp/algebra/ssrnum.v","date":"2022-01-10T14:16:52Z","comment":"`x1` and `y1` reals are not necessary here"},{"author":"CohenCyril","file":"mathcomp/ssreflect/ssrbool.v","date":"2022-01-11T15:01:10Z","comment":"These are the \"standard\" comments for things that are added to `ssreflect.v`, `ssrfun.v` and `ssrbool.v`: they should be added in two places: in mathcomp and in Coq, the comment keeps track of which version of Coq includes the change."},{"author":"CohenCyril","file":"mathcomp/algebra/ssrnum.v","date":"2022-01-11T15:03:45Z","comment":"> I would have expected the theorem to have the form :\r\n> \r\n> _ / _ = _ + i * _\r\n\r\nI followed `invC_rect` which already breaks the invariant... do you think it's worth trying to maintain the invariant?"},{"author":"CohenCyril","file":"mathcomp/algebra/ssrnum.v","date":"2022-01-11T15:03:58Z","comment":"> `x1` and `y1` reals are not necessary here\r\n\r\nThanks for the remark :)"},{"author":"CohenCyril","file":"mathcomp/algebra/ssrnum.v","date":"2022-01-11T15:04:41Z","comment":"This is a rather technical lemma since it does not assume anything to be real, so my rule of thumb was not to care if the name was more difficult to remember. Do you have a naming suggestion?"},{"author":"CohenCyril","file":"mathcomp/algebra/ssrnum.v","date":"2022-01-11T15:05:21Z","comment":"`mulC_rectl`?"},{"author":"CohenCyril","file":"mathcomp/algebra/ssrnum.v","date":"2022-01-11T15:05:54Z","comment":"After playing around with it a few times, I liked to have both."},{"author":"thery","file":"mathcomp/algebra/ssrnum.v","date":"2022-01-11T15:29:12Z","comment":"ok. \r\nthis made me think that why `mulC` is used and not `mulc`, we used `mulr` and not `mulR` in algebra, and `muln` for nat "},{"author":"thery","file":"mathcomp/algebra/ssrnum.v","date":"2022-01-11T15:36:34Z","comment":"if you look at `oppC_rect` it clearly enforces a `_ + i * _` shape.\r\n"},{"author":"thery","file":"mathcomp/ssreflect/ssrbool.v","date":"2022-01-11T15:40:06Z","comment":"ok donÂ´t  forget to fix the typos : additions"},{"author":"thery","file":"mathcomp/algebra/ssrnum.v","date":"2022-01-11T15:40:21Z","comment":"could we inline it in the proof of `divC_rect`?"},{"author":"thery","file":"mathcomp/algebra/ssrnum.v","date":"2022-01-11T15:43:20Z","comment":"ok.  then I was wondering if `('Re x = 'Re y) -> ('Im x = 'Im y) -> x = y` would not be more handy."},{"author":"CohenCyril","file":"mathcomp/algebra/ssrnum.v","date":"2022-01-11T17:34:27Z","comment":"~~probably~~\r\nActually, no, I use it in a foward chaining sometimes I think"},{"author":"CohenCyril","file":"mathcomp/algebra/ssrnum.v","date":"2022-01-11T17:36:27Z","comment":"I guess because most `C` lemmas were coming from the former `algC.v` and got generalized to `numClosedFieldType` (which encompasses standard complexes from analysis as well) and in order for some things not to break I kept the name the same."},{"author":"CohenCyril","file":"mathcomp/algebra/ssrnum.v","date":"2022-01-11T17:37:38Z","comment":"I was thinking maybe someone would like the \"technical lemma\" to be available, just in case... (since the some other `*_rect` work without condition, and it can be useful in some occurences)."},{"author":"CohenCyril","file":"mathcomp/algebra/ssrnum.v","date":"2022-01-11T17:39:08Z","comment":"Yes, and that looks very legitimate... What to do with `invC_rect` though?\r\nMaybe we could have `*c_rect` which preserve the invariant and deprecate the `C_rect` ones? that might be for another PR though..."},{"author":"CohenCyril","file":"mathcomp/ssreflect/ssrbool.v","date":"2022-01-11T17:39:49Z","comment":"```suggestion\r\n(*******************)\r\n(* v8.16 additions *)\r\n(*******************)\r\n```"},{"author":"thery","file":"mathcomp/algebra/ssrnum.v","date":"2022-01-11T18:15:16Z","comment":"very strange..."},{"author":"thery","file":"mathcomp/algebra/ssrnum.v","date":"2022-01-11T18:16:11Z","comment":"yep it is a bit annoying since it clashes with C for commutativity."},{"author":"thery","file":"mathcomp/algebra/ssrnum.v","date":"2022-01-11T19:01:33Z","comment":"fine with me\r\n"},{"author":"thery","file":"mathcomp/ssreflect/ssrbool.v","date":"2022-01-11T19:02:20Z","comment":"look like this came from a cut and paste, lots of \"addtions\" in the file"},{"author":"thery","file":"mathcomp/algebra/ssrnum.v","date":"2022-01-11T19:03:57Z","comment":"didn't realize `invC` was following the same pattern, so ok for me like this."},{"author":"proux01","file":"CHANGELOG_UNRELEASED.md","date":"2022-06-23T08:13:59Z","comment":"It seems there is also a `divC_rect` lemma added?\r\n"},{"author":"proux01","file":"mathcomp/ssreflect/ssrbool.v","date":"2022-06-23T08:14:29Z","comment":"Maybe move below (after `8.17 additions`)"}],"tags":[],"commits":[{"author":"CohenCyril","committer":"proux01","hash":"d61cc5f8c5202fb369769f352a1ed89b575d3b6f","message":"Improving ssrnum.v\n\n- locking 'Im and 'Re to avoid unwanted applications of rpredM\n- adding a series of lemmas\n- getting rid of extra notation arguments (the notation is already defined in fintype)\n- adding hints for membership to real of 'Re and 'Im","date":"2022-06-24T14:57:05Z"}]}