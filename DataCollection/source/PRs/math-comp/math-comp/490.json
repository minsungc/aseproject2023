{"author":"pi8027","number":490,"diff_summary":[{"file":"mathcomp/ssreflect/order.v","status":"M","additions":6,"deletions":1}],"state":"merged","open_date":"2020-04-20T17:01:22Z","update_date":"2020-05-04T11:16:07Z","discussion":[{"author":"pi8027","date":"2020-04-20T17:03:23Z","comment":"~`dual_finOrderType` seems also to be broken. Let me check.~ OK now it is correct.\r\n```coq\r\ndual_finOrderType: forall d : unit, finOrderType d -> finOrderType d\r\n```"},{"author":"CohenCyril","date":"2020-05-01T08:49:42Z","comment":"Here is an alternative for displays: instead of unit, we use\r\n```coq \r\nInductive display := Simple of unit | Dual of display.\r\n```\r\n\r\nThen displays are `Simple u` for opaque elements of `u` of type `unit`, except for\r\n```coq\r\nDefinition dual_display d := if d is Dual d' then d' else Dual d.\r\nArguments dual_display d /.\r\n```\r\n\r\nThat way,\r\n- `dual_display d ` is still not convertible to d\r\n- `dual_display (dual_display d)` reduces (through simpl) to `d`"},{"author":"pi8027","date":"2020-05-01T09:16:20Z","comment":"@CohenCyril This does not work:\r\n```coq\r\nCheck (fun d : display => erefl d : d = dual_display (dual_display d)).\r\n```"},{"author":"CohenCyril","date":"2020-05-01T09:18:53Z","comment":"A variant\r\n\r\n```coq\r\nInductive display := Simple of unit | Dual of unit.\r\n\r\nNotation dual_display :=\r\n  (fun d => match d with Simple u => Dual u | Dual u => Simple u end).\r\n\r\nDefinition x of display := unit.\r\n\r\nCheck (fun u => erefl (Simple u) : Simple u = dual_display (dual_display (Simple u))).\r\n\r\nNotation simple_unit := (x (Simple tt)). \r\nNotation dual_unit := (x (dual_display (Simple tt))).\r\nGoal x (dual_display (dual_display (Simple tt))) = unit.\r\nsimpl.\r\nAbort.\r\n````"},{"author":"pi8027","date":"2020-05-01T09:30:50Z","comment":"BTW, the PR about definitionally involutive duals is #464, not this one. This PR is just a small bug fix for 1.11.0..."},{"author":"pi8027","date":"2020-05-04T10:08:36Z","comment":"@CohenCyril Could you assign yourself?"}],"review_discussion":[],"tags":[],"commits":[{"author":"pi8027","committer":"pi8027","hash":"c67dde4080b9c4470b8ab4ff828707fb0044d3dc","message":"Add dual_finLatticeType and fix dual_finDistrLatticeType\n\nThis fixes two issues:\n- dual_finLatticeType was missing, and\n- dual_finDistrLatticeType was just an identity function.","date":"2020-04-20T16:52:32Z"}]}