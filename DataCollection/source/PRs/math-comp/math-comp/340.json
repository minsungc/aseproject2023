{"author":"pi8027","number":340,"diff_summary":[{"file":".gitignore","status":"D","additions":273,"deletions":1724},{"file":"etc/utils/hierarchy-diagram","status":"D","additions":273,"deletions":1724},{"file":"etc/utils/hierarchy.ml","status":"D","additions":273,"deletions":1724},{"file":"etc/utils/hierarchy_test.py","status":"D","additions":273,"deletions":1724},{"file":"mathcomp/Make","status":"D","additions":273,"deletions":1724},{"file":"mathcomp/Makefile.coq.local","status":"D","additions":273,"deletions":1724},{"file":"mathcomp/test_suite/hierarchy_test.v","status":"D","additions":273,"deletions":1724}],"state":"merged","open_date":"2019-04-30T13:26:41Z","update_date":"2019-06-18T14:54:41Z","discussion":[{"author":"pi8027","date":"2019-04-30T13:38:04Z","comment":"Hmm. I may need to remove `test_suite/hierarchy_test.v` from `Make` to generate `.coqdeps.d`..."},{"author":"CohenCyril","date":"2019-05-02T10:24:46Z","comment":"Hi, wouldn't it better/possible to use Coq API rather than `coqtop` + string processing to generate the graph?"},{"author":"pi8027","date":"2019-05-02T19:09:38Z","comment":"@CohenCyril Yes, I think so. I would have time to attempt it in June or July."},{"author":"CohenCyril","date":"2019-05-06T10:37:57Z","comment":"@gares do you think it is a good idea?"},{"author":"gares","date":"2019-05-06T11:14:15Z","comment":"Yes, it is doable but it is not so trivial. I see two options:\r\n- make a plugin defining a new command and then compiler a script that says\r\n  ```coq\r\n  Declare ML Module \"my_plugin\".\r\n  Require Import all.v.\r\n  MyCommand.\r\n  ```\r\n- build a new toplevel by linking coq (as a library). Initializing Coq is not trivial either (and you need to initialize it and require all .vo files). Something like serapi (we may even use it directly, but we may need to extend it with the queryes we want).\r\n\r\nSo for now I'd use this code and live with the text based interaction with Coq."}],"review_discussion":[],"tags":[],"commits":[{"author":"pi8027","committer":"pi8027","hash":"2d31a42aa3c2dacabc0cf005b45fc7bb4e6383e9","message":"Reimplement the hierarchy related tools in OCaml\n\nThe functionalities of the structure hierarchy related tools `hierarchy-diagram`\nand `hierarchy_test.py` are provided by an OCaml script `hierarchy.ml`.\n`test_suite/hierarchy_test.v` is deleted. Now make can generate it.","date":"2019-04-30T13:23:27Z"},{"author":"pi8027","committer":"pi8027","hash":"ff21700ded850be87349979e0cc6f7570223fc90","message":"Ad-hoc fix","date":"2019-04-30T16:39:51Z"}]}