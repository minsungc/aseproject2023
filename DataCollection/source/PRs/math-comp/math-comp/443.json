{"author":"pi8027","number":443,"diff_summary":[{"file":"mathcomp/algebra/finalg.v","status":"M","additions":765,"deletions":990},{"file":"mathcomp/algebra/intdiv.v","status":"M","additions":765,"deletions":990},{"file":"mathcomp/algebra/matrix.v","status":"M","additions":765,"deletions":990},{"file":"mathcomp/algebra/mxalgebra.v","status":"M","additions":765,"deletions":990},{"file":"mathcomp/algebra/mxpoly.v","status":"M","additions":765,"deletions":990},{"file":"mathcomp/algebra/poly.v","status":"M","additions":765,"deletions":990},{"file":"mathcomp/algebra/polydiv.v","status":"M","additions":765,"deletions":990},{"file":"mathcomp/algebra/rat.v","status":"M","additions":765,"deletions":990},{"file":"mathcomp/algebra/ssralg.v","status":"M","additions":765,"deletions":990},{"file":"mathcomp/algebra/ssrint.v","status":"M","additions":765,"deletions":990},{"file":"mathcomp/algebra/ssrnum.v","status":"M","additions":765,"deletions":990},{"file":"mathcomp/algebra/vector.v","status":"M","additions":765,"deletions":990},{"file":"mathcomp/character/character.v","status":"M","additions":765,"deletions":990},{"file":"mathcomp/character/classfun.v","status":"M","additions":765,"deletions":990},{"file":"mathcomp/character/integral_char.v","status":"M","additions":765,"deletions":990},{"file":"mathcomp/character/mxabelem.v","status":"M","additions":765,"deletions":990},{"file":"mathcomp/character/mxrepresentation.v","status":"M","additions":765,"deletions":990},{"file":"mathcomp/field/algC.v","status":"M","additions":765,"deletions":990},{"file":"mathcomp/field/algebraics_fundamentals.v","status":"M","additions":765,"deletions":990},{"file":"mathcomp/field/algnum.v","status":"M","additions":765,"deletions":990},{"file":"mathcomp/field/fieldext.v","status":"M","additions":765,"deletions":990},{"file":"mathcomp/field/galois.v","status":"M","additions":765,"deletions":990},{"file":"mathcomp/fingroup/perm.v","status":"M","additions":765,"deletions":990},{"file":"mathcomp/solvable/abelian.v","status":"M","additions":765,"deletions":990},{"file":"mathcomp/solvable/alt.v","status":"M","additions":765,"deletions":990},{"file":"mathcomp/solvable/cyclic.v","status":"M","additions":765,"deletions":990},{"file":"mathcomp/solvable/frobenius.v","status":"M","additions":765,"deletions":990},{"file":"mathcomp/solvable/sylow.v","status":"M","additions":765,"deletions":990},{"file":"mathcomp/ssreflect/bigop.v","status":"M","additions":765,"deletions":990},{"file":"mathcomp/ssreflect/binomial.v","status":"M","additions":765,"deletions":990},{"file":"mathcomp/ssreflect/eqtype.v","status":"M","additions":765,"deletions":990},{"file":"mathcomp/ssreflect/finset.v","status":"M","additions":765,"deletions":990},{"file":"mathcomp/ssreflect/fintype.v","status":"M","additions":765,"deletions":990},{"file":"mathcomp/ssreflect/order.v","status":"M","additions":765,"deletions":990},{"file":"mathcomp/ssreflect/path.v","status":"M","additions":765,"deletions":990},{"file":"mathcomp/ssreflect/seq.v","status":"M","additions":765,"deletions":990}],"state":"merged","open_date":"2019-11-28T16:39:48Z","update_date":"2020-01-03T13:45:54Z","discussion":[{"author":"pi8027","date":"2019-12-02T11:59:09Z","comment":"I have discovered many different kinds of redundancies mainly in `polydiv` so reduced them. I marked this PR as a draft just to do not merge before #270 so that we do not introduce new conflicts in #270."},{"author":"CohenCyril","date":"2019-12-26T12:01:11Z","comment":"@pi8027 thanks, I think this is overall a great improvement. However I have a small doubt on the style of `have stuff : ... := ...`, and I will ask others about it...\r\n\r\n@ggonthier @gares @amahboubi  is there an (unwritten?) invariant of the ssreflect tactic language stating that the intro pattern occurring right after the `have` keyword must/should only consume elements of the stack introduced by the statement occuring after `:`. Or is it ok to also introduce (or case or use a forward view on, etc) hypothesis that were there before the `have`, as in https://github.com/math-comp/math-comp/pull/443/files#diff-dd7d7be19aa85c8361134ccf162dca93R1177."},{"author":"gares","date":"2019-12-26T13:07:29Z","comment":"Apparently the invariant is not enforced. It makes sense to me, but I have no idea if the lack of enforcement was widely exploited or if there are good use cases. Correct me if I'm wrong, but in this PR it is a bit borderline.\r\n\r\nWhat I think is enforced is that you do one case split, no more, but then nothing prevents you to introduce more than what comes from the case in each branch..."},{"author":"pi8027","date":"2019-12-27T18:28:51Z","comment":"Since I probably need to rebase some patches on top of this, I would like to revert that kind of use of `have` so that we can merge this PR without more discussion on that point."},{"author":"pi8027","date":"2019-12-28T08:47:45Z","comment":"> Since I probably need to rebase some patches on top of this, I would like to revert that kind of use of `have` so that we can merge this PR without more discussion on that point.\r\n\r\nDone. @CohenCyril "}],"review_discussion":[],"tags":[{"tag":"kind: refactoring","description":"Issue or PR about a refactoring. (reorganizing the code, reusing theorems, simplifications...)"}],"commits":[{"author":"pi8027","committer":"pi8027","hash":"a06d61a8e226eeabc52f1a22e469dca1e6077065","message":"Refactoring and linting especially polydiv\n\n- Replace `altP eqP` and `altP (_ =P _)` with `eqVneq`:\n  The improved `eqVneq` lemma (#351) is redesigned as a comparison predicate and\n  introduces a hypothesis in the form of `x != y` in the second case. Thus,\n  `case: (altP eqP)`, `case: (altP (x =P _))` and `case: (altP (x =P y))` idioms\n  can be replaced with `case: eqVneq`, `case: (eqVneq x)` and\n  `case: (eqVneq x y)` respectively. This replacement slightly simplifies and\n  reduces proof scripts.\n- use `have [] :=` rather than `case` if it is better.\n- `by apply:` -> `exact:`.\n- `apply/lem1; apply/lem2` or `apply: lem1; apply: lem2` -> `apply/lem1/lem2`.\n- `move/lem1; move/lem2` -> `move/lem1/lem2`.\n- Remove `GRing.` prefix if applicable.\n- `negbTE` -> `negPf`, `eq_refl` -> `eqxx` and `sym_equal` -> `esym`.","date":"2019-12-28T08:45:40Z"}]}