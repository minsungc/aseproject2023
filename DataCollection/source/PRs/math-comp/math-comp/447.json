{"author":"ybertot","number":447,"diff_summary":[{"file":"mathcomp/Make","status":"M","additions":9,"deletions":6},{"file":"mathcomp/_CoqProject","status":"M","additions":9,"deletions":6},{"file":"mathcomp/algebra/mxalgebra.v","status":"M","additions":9,"deletions":6},{"file":"mathcomp/fingroup/fingroup.v","status":"M","additions":9,"deletions":6},{"file":"mathcomp/ssreflect/bigop.v","status":"M","additions":9,"deletions":6}],"state":"closed","open_date":"2019-12-04T12:03:46Z","update_date":"2020-06-08T14:48:06Z","discussion":[{"author":"pi8027","date":"2020-01-09T07:39:38Z","comment":"By the way, what about turning treated deprecation warnings to errors by adding `-arg -w -arg +...` so that we do not introduce the use of deprecated features, e.g., #438?"},{"author":"CohenCyril","date":"2020-06-08T12:20:46Z","comment":"@ybertot sorry this PR went completely under my radar for a while... @affeldt-aist why is this for 1.12.0 rather than 1.11.0 ?"}],"review_discussion":[{"author":"CohenCyril","file":"mathcomp/_CoqProject","date":"2020-01-03T13:52:38Z","comment":"Is this silencing \"undeclared-scope\" warnings? If so it is not completely clear to me that we want to do this rather than fixing it..."},{"author":"CohenCyril","file":"mathcomp/algebra/mxalgebra.v","date":"2020-01-03T13:52:40Z","comment":"Why do you declare `{A f}` as maximal implicits?\r\nI think these were really mean to be \"on demand\" so that a naked `mxrank_injP` is still applied implicitly `F m n` (for view compositions if I am correct) but not applied to `A f` unless we give `p`...\r\nSame question for all the following changes."},{"author":"pi8027","file":"mathcomp/_CoqProject","date":"2020-01-09T07:36:40Z","comment":"IMO, we should be aware of ambiguous paths with regard to packed classes. Also, I'm trying to reduce the number of ambiguous paths reported so that we can remove this from `mathcomp/Make` (see #297, coq/coq#11258, and coq/coq#11381)."},{"author":"CohenCyril","file":"mathcomp/_CoqProject","date":"2020-04-06T15:28:09Z","comment":"Oh, after re-reading myself, it seems obvious that the reason is backward compatibility. My bad..."},{"author":"CohenCyril","file":"mathcomp/algebra/mxalgebra.v","date":"2020-04-06T15:28:37Z","comment":"@ybertot I still do not understand the motivation behind this change though"},{"author":"anton-trunov","file":"mathcomp/algebra/mxalgebra.v","date":"2020-04-06T17:17:12Z","comment":"I think that the change is needed, because, unless I'm mistaken, non-maximal implicits are forced only if the term is applied to at least one more argument after them. So the trailing implicits only make sense if they are maximal."},{"author":"ybertot","file":"mathcomp/algebra/mxalgebra.v","date":"2020-04-07T08:25:11Z","comment":"Not making this argument maximal provokes another warning:\r\n\r\n`Warning: Argument number 4 is a trailing implicit so must be maximal`"},{"author":"pi8027","file":"mathcomp/algebra/mxalgebra.v","date":"2020-04-08T04:29:04Z","comment":"Those changes have already been merged in #452."}],"tags":[],"commits":[{"author":"ybertot","committer":"ybertot","hash":"384aa63127fabf939d2b221923a3da9b51c0b353","message":"treating deprecation warnings that appear with coq-8.10","date":"2019-12-04T10:36:43Z"}]}