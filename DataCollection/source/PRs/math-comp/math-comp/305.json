{"author":"CohenCyril","number":305,"diff_summary":[{"file":"ChangeLog","status":"M","additions":64,"deletions":17},{"file":"mathcomp/character/mxabelem.v","status":"M","additions":64,"deletions":17},{"file":"mathcomp/ssreflect/bigop.v","status":"M","additions":64,"deletions":17},{"file":"mathcomp/ssreflect/binomial.v","status":"M","additions":64,"deletions":17},{"file":"mathcomp/ssreflect/finset.v","status":"M","additions":64,"deletions":17}],"state":"merged","open_date":"2019-03-21T00:07:59Z","update_date":"2019-03-26T12:48:39Z","discussion":[{"author":"CohenCyril","date":"2019-03-21T08:09:30Z","comment":"I think `sumnE : sumn r = \\sum_(i <- r) i` is missing."},{"author":"ggonthier","date":"2019-03-21T14:10:52Z","comment":"I'd say `sumnE` is the only addition that can really be justified; its proof is `rewrite unlock`. The other lemmas can be readily derived from it, perhaps with a specialisation of `big_map` to `F := id` to help with rewriting in the right-to-left direction. In the same vein we could provide a lemma to rewrite a `foldr` into a `bigop`.\r\n  Unless there's a strong use case I'm missing, it hardly seems reasonable to specialise `sumnE` to every kind of list comprehension notation under the sun. On the subject of comprehensions, the current library is missing lemmas for the `image` seq comprehension, though `finset` does have some for `imset`, so perhaps we should provide those."},{"author":"CohenCyril","date":"2019-03-21T18:08:39Z","comment":"@ggonthier I updated the PR to reflect your comment, and I agree with you about not multiplying specializations. I also added elimination of `foldr`, and also of `foldl` for completeness."},{"author":"CohenCyril","date":"2019-03-26T08:54:55Z","comment":"@ggonthier happy with the current result?"}],"review_discussion":[],"tags":[],"commits":[{"author":"CohenCyril","committer":"CohenCyril","hash":"9c8f15339e719321d1a04360d3d2052ecd8bb5a2","message":"Compat of sumn with bigop and renaming dep to cond when appropriate","date":"2019-03-23T23:04:29Z"}]}