{"author":"chdoc","number":603,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":25,"deletions":7},{"file":"mathcomp/ssreflect/seq.v","status":"M","additions":25,"deletions":7}],"state":"merged","open_date":"2020-10-01T15:23:06Z","update_date":"2020-11-03T15:25:53Z","discussion":[],"review_discussion":[{"author":"pi8027","file":"mathcomp/ssreflect/seq.v","date":"2020-10-11T15:56:21Z","comment":"```suggestion\r\nProof.\r\nby unlock rot_sum; case: ifP; rewrite // leq_subLR leq_add // geq_minr.\r\n```"},{"author":"pi8027","file":"mathcomp/ssreflect/seq.v","date":"2020-10-11T16:00:01Z","comment":"```suggestion\r\nProof.\r\n```"},{"author":"pi8027","file":"mathcomp/ssreflect/seq.v","date":"2020-10-11T16:00:49Z","comment":"Not from this PR, but:\r\n```suggestion\r\nProof. by rewrite [RHS]/rotr size_rot rot_rot. Qed.\r\n```"},{"author":"chdoc","file":"mathcomp/ssreflect/seq.v","date":"2020-10-12T19:24:10Z","comment":"Nice! "},{"author":"CohenCyril","file":"mathcomp/ssreflect/seq.v","date":"2020-10-30T17:54:47Z","comment":"Do you need such a thing in your own developments?\r\nIf not, I suggest you make it a local `Let` together with the lemmas that mention it in their statements..."},{"author":"CohenCyril","file":"mathcomp/ssreflect/seq.v","date":"2020-10-30T17:55:16Z","comment":"And `sum` is dedicated to `\\big[add/0]`, please switch to `add`"},{"author":"CohenCyril","file":"mathcomp/ssreflect/seq.v","date":"2020-10-30T17:56:43Z","comment":"On the other hand, if it is really needed in your developments, I suggest you give it a proper meaning as soon as `div` is available.."},{"author":"chdoc","file":"mathcomp/ssreflect/seq.v","date":"2020-10-30T18:49:16Z","comment":"Well, the use case is any kind of reasoning where one want's to gather `rot n (rot m s)` into `rot k s` for some `k <= size s` without imposing any bounds on `n` and `m`. Just compare the old proof of `rot_rot` (which in the GitHub diff looks like an old proof of `leq_rot_sum`) with the new one-line proof. Nobody should look at the definition of `rot_sum`, but it can be handy to know that such a number exists. Having it as a definition, rather than as a lemma, allows for useful rewrite rules such as `rot_rot_sum`. "},{"author":"CohenCyril","file":"mathcomp/ssreflect/seq.v","date":"2020-11-01T13:35:25Z","comment":"```suggestion\r\nDefinition rot_add s n m (k := size s) (p := minn m k + minn n k) :=\r\n  locked (if p <= k then p else p - k).\r\n```\r\nor else\r\n```suggestion\r\nDefinition rot_add s n m (k := size s) (p := minn m k + minn n k) :=\r\n  locked (p - (p <= k) * k).\r\n```"},{"author":"chdoc","file":"mathcomp/ssreflect/seq.v","date":"2020-11-01T16:32:32Z","comment":"Common sub-expression elimination FTW :+1: \r\n\r\nI opted for the first one, because I am not a big fan of booleans in arithmetic expressions."},{"author":"pi8027","file":"mathcomp/ssreflect/seq.v","date":"2020-11-02T07:39:38Z","comment":"@chdoc It seems that you reverted my suggestions."},{"author":"chdoc","file":"mathcomp/ssreflect/seq.v","date":"2020-11-02T10:36:07Z","comment":"@pi8027 yes, sorry about that. Should be fixed now. "}],"tags":[],"commits":[{"author":"chdoc","committer":"chdoc","hash":"e13e96e00c681d1b9109302e0f5ea0979442bd0a","message":"lemmas for reasoing about \"rot n (rot m s)\"","date":"2020-11-02T10:33:58Z"}]}