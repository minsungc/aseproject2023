{"author":"CohenCyril","number":516,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":1191,"deletions":619},{"file":"mathcomp/algebra/interval.v","status":"M","additions":1191,"deletions":619},{"file":"mathcomp/algebra/ssrnum.v","status":"M","additions":1191,"deletions":619},{"file":"mathcomp/field/algebraics_fundamentals.v","status":"M","additions":1191,"deletions":619},{"file":"mathcomp/field/finfield.v","status":"M","additions":1191,"deletions":619},{"file":"mathcomp/solvable/abelian.v","status":"M","additions":1191,"deletions":619},{"file":"mathcomp/ssreflect/bigop.v","status":"M","additions":1191,"deletions":619},{"file":"mathcomp/ssreflect/fintype.v","status":"M","additions":1191,"deletions":619},{"file":"mathcomp/ssreflect/order.v","status":"M","additions":1191,"deletions":619}],"state":"merged","open_date":"2020-05-30T03:47:51Z","update_date":"2020-06-06T08:09:24Z","discussion":[{"author":"CohenCyril","date":"2020-05-30T03:48:02Z","comment":"@affeldt-aist see the TODO"},{"author":"pi8027","date":"2020-06-04T06:02:39Z","comment":"I hope I will give a detailed review next week if it is not too late for 1.11.0."},{"author":"affeldt-aist","date":"2020-06-04T13:29:04Z","comment":"@CohenCyril @pi8027 Are we confident that the bugfix is ok? (We saw that it was tested with real-closed at least). Since we are late for the release, we would like to merge. Is it ok to defer further reviews to later?"},{"author":"CohenCyril","date":"2020-06-04T13:31:26Z","comment":"@affeldt-aist the bugfix is not okay until I finish porting math-comp/analysis, which is almost done."},{"author":"CohenCyril","date":"2020-06-04T22:57:31Z","comment":"@ybertot @affeldt-aist tested on analysis, this ready."}],"review_discussion":[{"author":"pi8027","file":"mathcomp/ssreflect/order.v","date":"2020-06-02T09:32:25Z","comment":"If we wish to make it compatible as much as possible with `minr` and `maxr` of version 1.10.0, shouldn't we use `<=` rather than `<`? https://github.com/math-comp/math-comp/blob/mathcomp-1.10.0/mathcomp/algebra/ssrnum.v#L256-L257"},{"author":"CohenCyril","file":"mathcomp/ssreflect/order.v","date":"2020-06-02T09:38:50Z","comment":"`minn` and `maxn` are defined using `<` and `<=`, I'd rather loose backward compatibility than convertibility with `nat` definitions."},{"author":"pi8027","file":"mathcomp/ssreflect/order.v","date":"2020-06-02T09:45:41Z","comment":"OK. That's fine (as I said in a MC call)."},{"author":"pi8027","file":"mathcomp/algebra/ssrnum.v","date":"2020-06-02T16:04:45Z","comment":"I think this was left as a comment on purpose. See L.293 (and L.351 which you may also want to remove)."},{"author":"CohenCyril","file":"mathcomp/algebra/ssrnum.v","date":"2020-06-02T16:14:43Z","comment":":+1: I withdrew this deletion from the PR, since it was an accidental removal unrelated to the changes in this PR, maybe we can open an issue to document or remove this comment."},{"author":"pi8027","file":"CHANGELOG_UNRELEASED.md","date":"2020-06-04T15:27:33Z","comment":"```suggestion\r\n  `join`, and providing a theory about for min and max, hence generalizing\r\n```"},{"author":"CohenCyril","file":"mathcomp/ssreflect/order.v","date":"2020-06-04T22:58:39Z","comment":"```suggestion\r\n(*   [arg min_(i < i0 | P) M] == a value i : T minimizing M : R, subject to   *)\r\n```"},{"author":"CohenCyril","file":"mathcomp/ssreflect/order.v","date":"2020-06-04T23:00:28Z","comment":"```suggestion\r\n(*   [arg max_(i > i0 | P) M] == a value i maximizing M subject to P and      *)\r\n```"}],"tags":[],"commits":[{"author":"CohenCyril","committer":"CohenCyril","hash":"04e78bbeefe509bd8b84cb222a1322774ce03aec","message":"Generalizing max and min to porderType\n\n- max and min are not defined in terms or meet and join anymore\n- extremum_inP is a generalization of extremum suitable for a partial order\n- arg_min and arg_max are usable in a porderType\n- equivalences between min and meet, and max and join are proven for orderType\n- leP, ltP, ltgtP, and `[l]?comparable_.*P` lemmas have been generalized to take this into account\n- total_display was completely removed","date":"2020-06-05T23:43:35Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"19d189999527434c51b1dabe9d073c673e1fd1cf","message":"Increasing definitional equalities\n\n- `Order.max` and `Order.min`  are now convertible to `maxn` and `minn`\n- Inserting `(fun _ _ => erefl)` in `LeOrderMixin` and `LtOrderMixin`\n  gives `meet`/`join` which are convertible to `min`/`max`\n- `Order.max` and `Order.min` are not convertible to former `Num.max` and `Num.min`","date":"2020-06-05T23:43:35Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"efed1800a4f2eaa942704ab8bebc60d9a3ac8dfd","message":"General theory of min and max, and use in ssrnum\n\n- min and max can now be used in a partial order (sometimes under preconditions)\n- min and max can now be used in a numDomainType (sometimes under preconditions)","date":"2020-06-05T23:43:35Z"},{"author":"affeldt-aist","committer":"CohenCyril","hash":"7f355343ee30f72d8ab3ce87f897dc0092e43c29","message":"tentative changelog\n\n- mostly gathered the changes from previous commits\n- add `minrC`\n- minor doc addition to `order.v`","date":"2020-06-05T23:44:09Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"ccea59192ab383a9a0009d5ac5873e53f115c867","message":"Improvements\n\n- deprecating `fintype.arg_(min|max)P`\n- removing dangling comments connecting min max and meet join\n- better compatibility module\n- removing broken notations with `\\min` and `\\max` (no neutral available)\n- fixing `incompare` and `incomparel` in order.v\n- adding missing elimination lemmas (`(comparable_)?(max|min)E[lg][et]`)\n- adding missing `(comparable|real)_arg(min|max)P`\n- CHANGELOG update","date":"2020-06-05T23:45:04Z"}]}