{"author":"ggonthier","number":863,"diff_summary":[{"file":".nix/config.nix","status":"M","additions":231,"deletions":108},{"file":".nix/coq-overlays/graph-theory/default.nix","status":"M","additions":231,"deletions":108},{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":231,"deletions":108},{"file":"mathcomp/algebra/mxalgebra.v","status":"M","additions":231,"deletions":108},{"file":"mathcomp/algebra/mxpoly.v","status":"M","additions":231,"deletions":108},{"file":"mathcomp/algebra/poly.v","status":"M","additions":231,"deletions":108},{"file":"mathcomp/algebra/ssralg.v","status":"M","additions":231,"deletions":108},{"file":"mathcomp/algebra/ssrnum.v","status":"M","additions":231,"deletions":108},{"file":"mathcomp/character/character.v","status":"M","additions":231,"deletions":108},{"file":"mathcomp/character/inertia.v","status":"M","additions":231,"deletions":108},{"file":"mathcomp/character/integral_char.v","status":"M","additions":231,"deletions":108},{"file":"mathcomp/character/mxabelem.v","status":"M","additions":231,"deletions":108},{"file":"mathcomp/character/mxrepresentation.v","status":"M","additions":231,"deletions":108},{"file":"mathcomp/field/algebraics_fundamentals.v","status":"M","additions":231,"deletions":108},{"file":"mathcomp/field/galois.v","status":"M","additions":231,"deletions":108},{"file":"mathcomp/field/separable.v","status":"M","additions":231,"deletions":108},{"file":"mathcomp/fingroup/action.v","status":"M","additions":231,"deletions":108},{"file":"mathcomp/fingroup/perm.v","status":"M","additions":231,"deletions":108},{"file":"mathcomp/fingroup/presentation.v","status":"M","additions":231,"deletions":108},{"file":"mathcomp/solvable/abelian.v","status":"M","additions":231,"deletions":108},{"file":"mathcomp/solvable/alt.v","status":"M","additions":231,"deletions":108},{"file":"mathcomp/solvable/burnside_app.v","status":"M","additions":231,"deletions":108},{"file":"mathcomp/solvable/cyclic.v","status":"M","additions":231,"deletions":108},{"file":"mathcomp/solvable/frobenius.v","status":"M","additions":231,"deletions":108},{"file":"mathcomp/solvable/maximal.v","status":"M","additions":231,"deletions":108},{"file":"mathcomp/solvable/primitive_action.v","status":"M","additions":231,"deletions":108},{"file":"mathcomp/ssreflect/binomial.v","status":"M","additions":231,"deletions":108},{"file":"mathcomp/ssreflect/eqtype.v","status":"M","additions":231,"deletions":108},{"file":"mathcomp/ssreflect/fingraph.v","status":"M","additions":231,"deletions":108},{"file":"mathcomp/ssreflect/finset.v","status":"M","additions":231,"deletions":108},{"file":"mathcomp/ssreflect/fintype.v","status":"M","additions":231,"deletions":108},{"file":"mathcomp/ssreflect/path.v","status":"M","additions":231,"deletions":108},{"file":"mathcomp/ssreflect/prime.v","status":"M","additions":231,"deletions":108},{"file":"mathcomp/ssreflect/seq.v","status":"M","additions":231,"deletions":108},{"file":"mathcomp/ssreflect/ssrbool.v","status":"M","additions":231,"deletions":108}],"state":"merged","open_date":"2022-03-15T22:09:39Z","update_date":"2023-01-22T17:15:42Z","discussion":[{"author":"CohenCyril","date":"2022-03-18T09:14:42Z","comment":"Am I right that this is a backward compatible change? As long as client code does not start using `[in A]` and keep using `mem A`, they will not be impacted in anyway. If that's the case I do not see why not push the changes to Coq's ssrbool straight away."},{"author":"ggonthier","date":"2022-03-24T17:06:25Z","comment":"As it stands, part of the change  is not backward compatible : adding the new `[in A]` notation obviously is, but using it in the `[predU A & B]`, `[predI A & B]`, etc. notation is not. It breaks various fragile scripts that rely on `rewrite inE` of such notation exposing a `mem A x` (really `pred_of_simpl (simpl_of_mem (mem A)) x`) subterm, as explained the rationale.\r\n   The PR fixes this in `mathcomp` proper, as do math-comp/odd-order#40 and coq-community/fourcolor#42 for `odd-order` and `foucolor`, respectively (in a backward compatible way), but CI also indicates a similar failure in `graph-theory`, for which I've yet to propose a fix (I'm not set up to compile it right now).\r\n   It thus seems prudent to fix the clients before pushing the full PR to `coq/ssrbool`, though of course the definition of `[in A]` could be pushed immediately."},{"author":"chdoc","date":"2022-03-24T19:45:04Z","comment":"> but CI also indicates a similar failure in `graph-theory`, for which I've yet to propose a fix (I'm not set up to compile it right now).\r\n\r\nIf needed, I can try to investigate and fix this next week, but I'm out of office until Tuesday. "},{"author":"pi8027","date":"2022-04-01T08:12:14Z","comment":"This PR looks good to me except for the above minor suggestion and CI, but I have an impression that I don't understand Boolean predicates of MathComp deep enough. It is probably better if someone else can review it.\r\n\r\nBTW, do we still want to keep `[mem A]`? When should we consider using it?"},{"author":"chdoc","date":"2022-04-01T08:29:34Z","comment":"Is there some `nix` command that would allow me to quickly get to the context the CI will be in when trying to build `graph-theory` on top of this PR? "},{"author":"CohenCyril","date":"2022-04-01T09:27:47Z","comment":"> Is there some nix command that would allow me to quickly get to the context the CI will be in when trying to build graph-theory on top of this PR?\r\n\r\n\r\nRun this in the current branch\r\n```\r\nnix-shell --no-out-link --argstr bundle \"coq-8.14\" --argstr job \"graph-theory\"\r\n```\r\nThen cd to your graph-theory workdir\r\n"},{"author":"chdoc","date":"2022-04-01T14:12:17Z","comment":"It appears that in the part of `graph-theory` that is checked by the MathComp CI there is only one line that breaks.\r\n\r\nI noticed that the Nix package used in the CI does not build the part that depends on `fourcolor`. In the opam package, `fourcolor` is an optional dependency (i.e., Wagner's theorem is only checked and installed if `fourcolor` is available). \r\n\r\nWhat do I have to add to the `nix-shell` invocation in order to add the (cached) `fourcolor` run on PR `#42` (the overlay for this PR)?\r\n"},{"author":"proux01","date":"2022-06-15T08:48:05Z","comment":"@ggonthier could you please rebase so that we could merge?"},{"author":"affeldt-aist","date":"2023-01-18T09:28:57Z","comment":"As discussed during the last meeting, we are planning to merge this PR.\r\nBefore we merge, @chdoc could you test that `graph-theory` still compiles with this PR?\r\n(Since `graph-theory` requires the Four color theorem, the default CI test is only partial.)"},{"author":"proux01","date":"2023-01-18T09:45:09Z","comment":"@affeldt-aist in fact, since https://github.com/math-comp/math-comp/pull/956 we have a Nix CI overlay that tests it (long story short: they moved to dune in graph-theory master, which made `make` build unconditionally with fourcolor and broke the dev Nix derivation).\r\nSo if CI is green, it's fine.\r\n"},{"author":"affeldt-aist","date":"2023-01-18T09:57:24Z","comment":"> @affeldt-aist in fact, since #956 we have a Nix CI overlay that tests it (long story short: they moved to dune in graph-theory master, which made `make` build unconditionally with fourcolor and broke the dev Nix derivation). So if CI is green, it's fine.\r\n\r\nThanks for information. I missed it.\r\n"},{"author":"CohenCyril","date":"2023-01-18T16:08:40Z","comment":"> @affeldt-aist in fact, since #956 we have a Nix CI overlay that tests it (long story short: they moved to dune in graph-theory master, which made `make` build unconditionally with fourcolor and broke the dev Nix derivation).\r\n> So if CI is green, it's fine.\r\n\r\n~~AFAIU they released a 0.9.1 version with a separation between two packages `graph-theory` and `graph-theory-planar`, only the latter depends on fourcolor, I added it as a PR to nixpkgs and I started a job at https://github.com/coq-community/coq-nix-toolbox/pull/130 to test it... However there is an independent failure (about smtcoq) that might delay the integration here. We might either trust 0.9 results or make an overlay using my PR https://github.com/NixOS/nixpkgs/pull/211137~~\r\n\r\nEDIT: I got it wrong about 0.9.1. So I restored the previous version but testing 0.9.1 with Coq >= 8.14"},{"author":"proux01","date":"2023-01-18T19:02:36Z","comment":"> EDIT: I got it wrong about 0.9.1. So I restored the previous version but testing 0.9.1 with Coq >= 8.14\r\n\r\nMy understanding of `.nix/config.nix` is that the tested version is master."},{"author":"CohenCyril","date":"2023-01-20T14:08:32Z","comment":"Multinomials is failing now and I do not understand why, it didn't change since 2 days ago @proux01 @strub any hints?"},{"author":"proux01","date":"2023-01-20T16:28:13Z","comment":"@CohenCyril no idea, I'll have a look tomorrow."},{"author":"proux01","date":"2023-01-21T15:47:36Z","comment":"@CohenCyril : so, the PR is changing the names of a few implicit arguments in `seq.v`.\r\nHere is an overlay for multinomials: https://github.com/math-comp/multinomials/pull/68 , I also updated the CHANGELOG to indicate the renamings.\r\nCI is now green."}],"review_discussion":[{"author":"pi8027","file":"CHANGELOG_UNRELEASED.md","date":"2022-04-01T07:42:22Z","comment":"```suggestion\r\n  `cyclic.v`, `frobenius.v`, `maximal.v`, `primitive_action.v`, `alt.v`,\r\n  `burnside_app.v`, `mxrepresentation.v`, `mxabelian.v`, `character.v`,\r\n```"},{"author":"proux01","file":".nix/config.nix","date":"2023-01-18T10:03:18Z","comment":"```suggestion\r\n```\r\nThose overlays are now merged (should hopefully fix CI)."}],"tags":[],"commits":[{"author":"ggonthier","committer":"proux01","hash":"c299136c5ac53e8004941e28d62bdba6d61ca332","message":"Add [in A] notation.\n\nAdd `[in A]` notation for `fun x => x \\in A`, the natural applicative equivalent of a collective predicate `A`.\nReplace `(mem A)` and `[mem A]`, which had a similar purpose but require an explicit `/=` or `inE` to turn `mem A x` to `x \\in A`, which is sometimes awkward.\nRemove the Coq 8.10 compatibility code from `ssrbool.v`, which is actually incompatible with Coq < 8.13.\nAdd lemmas for `all` and `map`: `allT`, `all_mapT`, `inj_in_map`, `mapK_in`.","date":"2023-01-21T14:30:19Z"},{"author":"CohenCyril","committer":"proux01","hash":"1cafc98e3dd03723828c0c5dbaec6f33269547dc","message":"overlay for graph-theory","date":"2023-01-21T14:30:19Z"},{"author":"proux01","committer":"proux01","hash":"f3b0b7920acd07cc66fb2098f2d89bf8dd985d8a","message":"Overlay for multinomials","date":"2023-01-21T14:30:19Z"}]}