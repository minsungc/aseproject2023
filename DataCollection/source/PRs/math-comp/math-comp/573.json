{"author":"CohenCyril","number":573,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":307,"deletions":45},{"file":"mathcomp/algebra/matrix.v","status":"M","additions":307,"deletions":45},{"file":"mathcomp/algebra/mxpoly.v","status":"M","additions":307,"deletions":45}],"state":"merged","open_date":"2020-09-02T22:51:56Z","update_date":"2020-09-08T09:56:21Z","discussion":[],"review_discussion":[{"author":"thery","file":"mathcomp/algebra/matrix.v","date":"2020-09-03T16:36:53Z","comment":"this seems a typical proof by induction on triangular matrices.\r\nMaybe ursubmx A = 0 and is_triang_mx (lrsubmx A)\r\ncould be usefull theorems to have in the library.\r\nSame holds for diagonal matrices.\r\n\r\nAlso I have noticed that there is no doc for is_triang_mx and is_diag_mx in the header of matrix"},{"author":"thery","file":"mathcomp/algebra/matrix.v","date":"2020-09-03T16:49:23Z","comment":"in the file matrix, the style seems to have spaces before a //"},{"author":"CohenCyril","file":"mathcomp/algebra/matrix.v","date":"2020-09-03T17:48:19Z","comment":"> this seems a typical proof by induction on triangular matrices.\r\n\r\nDo you mean we should make it an idiom?\r\n\r\n> Maybe ursubmx A = 0 and is_triang_mx (lrsubmx A)\r\n\r\nI could extract them indeed.\r\n\r\n> Same holds for diagonal matrices.\r\n\r\nSince `is_diag_mx A -> is_trig_mx A` holds, it may not be necessary... do you think we should add all variants for diagonal matrices.\r\n\r\n> Also I have noticed that there is no doc for is_triang_mx and is_diag_mx in the header of matrix\r\n\r\nI thought I did it in #571... my bad..."},{"author":"CohenCyril","file":"mathcomp/algebra/matrix.v","date":"2020-09-03T17:49:49Z","comment":"I think the new style conventions depend on whether `//` is related to one `?id` or several... In this case, I believe you are right and we should put a space."},{"author":"thery","file":"mathcomp/algebra/matrix.v","date":"2020-09-03T17:56:04Z","comment":"too complicated for my simple brain. You mean ?thm // and ?thm// will not have the same semantic?"},{"author":"thery","file":"mathcomp/algebra/matrix.v","date":"2020-09-03T18:05:46Z","comment":"Everyone that will do a proof by induction on the size of a triangular or a diagonal matrix will have to reprove this kind  of theorems. If you turn them into lemma, I think your proof of `det_trig` will become elementary."},{"author":"CohenCyril","file":"mathcomp/algebra/matrix.v","date":"2020-09-07T13:08:05Z","comment":"I tried to split & add many subresults. Can you tell me what you think?"},{"author":"CohenCyril","file":"mathcomp/algebra/matrix.v","date":"2020-09-07T13:09:29Z","comment":"I mean that, even if the formal semantic is exactly the same, by convention: if `thm` alone spawned subgoals then one may write `?thm//`, but if it is the combination of  `thm1` and `thm2` then we write `?thm1 ?thm2 //`."},{"author":"thery","file":"mathcomp/algebra/matrix.v","date":"2020-09-07T16:26:20Z","comment":"very strange to me. Will someone go to all the code to adopt this convention? "},{"author":"thery","file":"mathcomp/algebra/matrix.v","date":"2020-09-07T16:29:19Z","comment":"Initially I was thinking only about the structure lemmas : how is_diag and is_trig propagates to submatrix but maybe adding ad-hoc elimination theorems is ok too. I am not sure there are lot of them in the library."},{"author":"CohenCyril","file":"mathcomp/algebra/matrix.v","date":"2020-09-07T22:47:12Z","comment":"> Initially I was thinking only about the structure lemmas : how is_diag and is_trig propagates to submatrix\r\n\r\nThat's what I thought and did initially, but as I thought, it barely removed one line of proof. In order to become \"elementary\" I also needed to add the induction.\r\n\r\n> but maybe adding ad-hoc elimination theorems is ok too. I am not sure there are lot of them in the library.\r\n\r\nThere are a few ad-hoc theorem (e.g. `poly_ind`, `big_ind` and `last_ind`), but it is indeed not a frequent practice, and it is preferred to have \"side loading lemmas\" instead (e.g. `ubnP`), but in the case of matrices the main enemy is the conversion between `n.+1` and `1 + n`, which I do not know how to deal with as a \"side\" lemma.\r\n\r\n\r\n"},{"author":"CohenCyril","file":"mathcomp/algebra/matrix.v","date":"2020-09-07T22:54:58Z","comment":"I don't know. Do you think I should backtrack on that?"},{"author":"CohenCyril","file":"mathcomp/algebra/matrix.v","date":"2020-09-07T22:56:44Z","comment":"Some files already started adopting it. Maybe the PR can be accepted independently of this.\r\nWe can discuss this convention in a meeting, and then fix it uniformly (or not) depending on the outcome of the discussions."},{"author":"thery","file":"mathcomp/algebra/matrix.v","date":"2020-09-07T23:16:35Z","comment":"So maybe we should not include the induction lemmas.\r\n"},{"author":"thery","file":"mathcomp/algebra/matrix.v","date":"2020-09-07T23:26:02Z","comment":"My fear is that this non-uniformity will remain but fine with me to accept the PR once we've decided about the inclusion of the induction theorems"},{"author":"CohenCyril","file":"mathcomp/algebra/matrix.v","date":"2020-09-07T23:27:03Z","comment":"I was going to conclude the opposite :laughing: "},{"author":"thery","file":"mathcomp/algebra/matrix.v","date":"2020-09-07T23:28:09Z","comment":"ok let's keep them"},{"author":"CohenCyril","file":"mathcomp/algebra/matrix.v","date":"2020-09-07T23:35:54Z","comment":"I opened issue #580 and I will put it in the list of topics."}],"tags":[],"commits":[{"author":"CohenCyril","committer":"CohenCyril","hash":"e7067ea1ea730fd4fd4d3daf556c6f712ffe04a8","message":"Polynomial evaluation and minimal poly of a diagonal matrix","date":"2020-09-07T09:27:05Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"abb204c55d28b139bb57d56fb7e3b0ae29cf5dc5","message":"Refactoring proof of det_trig and spawning sublemmas","date":"2020-09-07T13:18:17Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"ed040ad0db541c597a354aba126f428e42eef854","message":"compat Coq < 8.10","date":"2020-09-07T13:27:49Z"}]}