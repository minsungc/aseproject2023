{"author":"ppedrot","number":20,"diff_summary":[{"file":"mathcomp/ssreflect/plugin/trunk/ssreflect.ml4","status":"M","additions":54,"deletions":28},{"file":"mathcomp/ssreflect/plugin/trunk/ssrmatching.ml4","status":"M","additions":54,"deletions":28}],"state":"merged","open_date":"2016-01-31T18:35:10Z","update_date":"2016-02-01T09:19:06Z","discussion":[{"author":"gares","date":"2016-02-01T09:19:00Z","comment":"Many thanks PMP!\n\nI've a question.  Clearly having a value escape the monad via an assignment is not very elegant.  Is what we do in ssr completely unsupported by the new API, or I should \"just\" rewrite everything in that monad?\n"},{"author":"ppedrot","date":"2016-02-01T09:56:25Z","comment":"This is clearly a hack, but at the same time the proper API to escape the Ftactic monad into non-unit Proofview.tactic is unclear. Note that the same problem arises for the Proofview.tactic monad, because Proofview.V82.of_tactic does lose information and is, as such, a hack. It would be indeed more reasonable to put the code of ssreflect into the (various) monads.\n"}],"review_discussion":[],"tags":[],"commits":[{"author":"ppedrot","committer":"ppedrot","hash":"8b095453da1b679ed3c56d569bef6201aa35c689","message":"Partially fixing ML compilation on trunk.","date":"2016-01-31T18:32:11Z"}]}