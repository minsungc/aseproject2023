{"author":"hivert","number":167,"diff_summary":[{"file":"mathcomp/ssreflect/seq.v","status":"M","additions":13,"deletions":0}],"state":"merged","open_date":"2017-12-12T10:58:29Z","update_date":"2017-12-14T18:10:41Z","discussion":[{"author":"CohenCyril","date":"2017-12-12T11:49:08Z","comment":"Dear Florent, can you please refactor your pull request and squash all commits into only one?"},{"author":"hivert","date":"2017-12-12T13:02:22Z","comment":"@CohenCyril: Once again, I'm in trouble with github workflow. I understood that **you** where supposed to do it when merging the pull request: https://github.com/blog/2141-squash-your-commits\r\nNow I'm not sure about what I should do. If I squash it on my computer, rewriting the history and then do a `push --force` on my PR2 branch on github, will it correctly update the pull request ? Or am I supposed to do something else ?"},{"author":"CohenCyril","date":"2017-12-12T13:38:39Z","comment":"Yes Florent, you are supposed to push --force (and that's another reason why you should always create a new branch before making a pull request)"},{"author":"maximedenes","date":"2017-12-12T13:41:32Z","comment":"> If I squash it on my computer, rewriting the history and then do a push --force on my PR2 branch on github, will it correctly update the pull request ?\r\n\r\nYes it will. PRs are just pointers to branches. When the branch is updated, so is the PR."},{"author":"hivert","date":"2017-12-12T14:34:10Z","comment":"Git is not my friend today. The squash went all wrong generating lots of conflicts. I ended up creating a brand new branch an coping by hand the file from one branch to the other. I'm starting to really dislike GH workflow... \r\n\r\nAnyway, the lemma should be here in a proper shape. I also checked that it is usable with the current statement (https://github.com/hivert/Coq-Combi/commit/d1f5e4db4182ec43423be02cee8f7a666f15028d). Finally, you may want to check if there is a simpler proof."}],"review_discussion":[{"author":"CohenCyril","file":"mathcomp/ssreflect/seq.v","date":"2017-12-12T11:46:21Z","comment":"I guess that if we had the order library in mathcomp, the statement would look like:\r\n(i1 <= i2) = ((reshape_index sh i1, reshape_offset i1) <= (reshape_index sh i2, reshape_offset i2))\r\nwhere <= is the canonical lexicographic order on pairs, and that there should also be\r\n(flatten_index sh r1 c1 <= flatten_index sh r2 c2) = ((r1, c1) <= (r2, c2))\r\n\r\nSo in anticipation of that, I think the following variant would be better suited:\r\n(r1 := reshape_index sh i1) (c1 := reshape_offset sh i1) (r2 := reshape_index sh i2) (c2 := reshape_offset sh i2)\r\n(i1 <= i2) = ((r1 < r2) || ((r1 == r2 ) && (c1 <= c2))\r\nand/or the following\r\n(flatten_index sh r1 c1 <= flatten_index sh r2 c2) = ((r1 < r2) || ((r1 ==r2 ) && (c1 <= c2))\r\n"},{"author":"hivert","file":"mathcomp/ssreflect/seq.v","date":"2017-12-12T13:04:53Z","comment":"I think I'll prefer the first. I'll give a try with my code and get back to you."}],"tags":[],"commits":[{"author":"hivert","committer":"hivert","hash":"051a83a5f1efcf1a06f7ab0456dc6ffeb8d168e3","message":"New lemma reshape_index_leq","date":"2017-12-12T14:24:28Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"f0c46d647c7f5c7dc88cb2b06d20ea92ae2f9da1","message":"refactored proof and renamed to reshape_leq and removed spurious hypothesis","date":"2017-12-12T18:34:58Z"}]}