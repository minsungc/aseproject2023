{"author":"CohenCyril","number":399,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":28,"deletions":17},{"file":"CONTRIBUTING.md","status":"M","additions":28,"deletions":17},{"file":"mathcomp/ssreflect/ssrnat.v","status":"M","additions":28,"deletions":17}],"state":"merged","open_date":"2019-10-25T18:32:49Z","update_date":"2019-11-20T15:19:11Z","discussion":[{"author":"CohenCyril","date":"2019-11-14T15:07:10Z","comment":"@ybertot this PR is now ready for review"},{"author":"CohenCyril","date":"2019-11-15T15:28:56Z","comment":"@ybertot fixed.\r\nI would like to get @ggonthier's opinion on the renaming though..."},{"author":"ggonthier","date":"2019-11-15T16:25:51Z","comment":"@CohenCyril I have to disagree with the naming convention you use. `l` and `r` are used to refer to the sides of a binary operators; for a relation `L` and `R` are used, though often omitted when the side is unambiguous. For inequalities we also use `ge` of `gt` to indicate the operation is on the small (left-hand) side of a comparison, so a more reasonable renaming would be `leq_subr -> geq_subr`. But given how disruptive renaming with allocation of such a widely used lemma is, I'm fairly reluctant - the new lemma will be nowhere nearly as useful, so it can have a somewhat less natural name."},{"author":"ggonthier","date":"2019-11-15T16:31:49Z","comment":"A technical point: `<`, `<=`, and `=` are all at level 70, which is in principle non-associative. Though camlp5 does not implement this (equating it to left associative), you should not take advantage of this, and parenthesise the left-hand side of equations of the form `(m < m - n) = false`."},{"author":"CohenCyril","date":"2019-11-18T14:43:11Z","comment":"@ybertot @ggonthier I took @ggonthier into account and documented https://github.com/math-comp/math-comp/pull/399#issuecomment-554429326 in the CONTRIBUTING.md"},{"author":"ybertot","date":"2019-11-20T08:33:02Z","comment":"@ggonthier Can you confirm you approve the new naming scheme?"},{"author":"ggonthier","date":"2019-11-20T09:44:29Z","comment":"@ybertot @CohenCyril The new naming looks good to me."},{"author":"ybertot","date":"2019-11-20T15:19:26Z","comment":"Thanks"}],"review_discussion":[{"author":"anton-trunov","file":"mathcomp/ssreflect/ssrnat.v","date":"2019-10-28T20:07:49Z","comment":"I think `ltn_subl` should have `F` suffix because of `false`. Maybe something like `ltn_subrF`?"},{"author":"CohenCyril","file":"mathcomp/ssreflect/ssrnat.v","date":"2019-10-29T09:10:10Z","comment":"The `F` suffix is there when there could be an ambiguity... so indeed if we reuse the name `ltn_subr`, yes we should, but I am not convinced..."}],"tags":[],"commits":[{"author":"CohenCyril","committer":"CohenCyril","hash":"f6d25edde35e9e1fe6260c7bd3a0717147560d40","message":"More arithmetic theorems\n\n- Generalizing `ltn_subr`\n- Adding `ltn_subl` and `ltn_subr`\n- Changing conclusion of `ltn_predl` to `0 < n` instead of `n != 0`","date":"2019-11-18T14:20:15Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"359abfc1d67843216b0362d2fee3b8d650ff7ec0","message":"Documenting `L` and `R` in `CONTRIBUTING.md`","date":"2019-11-18T14:20:15Z"},{"author":"CohenCyril","committer":"CohenCyril","hash":"95e69d88e9f629c043939b8315e73dbb58852d9a","message":"fixing CHANGELOG and ltn_pred lemmas","date":"2019-11-18T14:39:33Z"}]}