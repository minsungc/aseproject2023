{"author":"proux01","number":809,"diff_summary":[{"file":".nix/config.nix","status":"A","additions":82,"deletions":1},{"file":".nix/coq-overlays/multinomials/default.nix","status":"A","additions":82,"deletions":1},{"file":".nix/coq-overlays/paramcoq/default.nix","status":"A","additions":82,"deletions":1}],"state":"merged","open_date":"2021-10-21T11:10:29Z","update_date":"2021-10-21T14:40:02Z","discussion":[{"author":"proux01","date":"2021-10-21T11:42:15Z","comment":"The nixppkgs PR NixOS/nixpkgs#142174 just got merged, so we may rather want to wait a few days and update nixpkgs here."},{"author":"proux01","date":"2021-10-21T12:52:50Z","comment":"And multinomials 8.12 is ok by applying @erikmd suggestion from https://github.com/math-comp/math-comp/pull/793#issuecomment-946141996"},{"author":"CohenCyril","date":"2021-10-21T13:19:26Z","comment":"@proux01 I am going to remove the draft status and merge this if you agree?"}],"review_discussion":[{"author":"CohenCyril","file":".nix/coq-overlays/multinomials/default.nix","date":"2021-10-21T12:59:45Z","comment":"@proux01 thanks for patching this. I still do not understand why it is broken though...\r\nCC: @erikmd @Zimmi48"},{"author":"proux01","file":".nix/coq-overlays/multinomials/default.nix","date":"2021-10-21T13:07:30Z","comment":"Me neither, and particularly why it only breaks for 8.12?"},{"author":"Zimmi48","file":".nix/coq-overlays/multinomials/default.nix","date":"2021-10-21T13:15:51Z","comment":"How can I reproduce / see the error log?\r\n\r\nOCaml is not a propagated build input of Coq so you need to explicitly depend on it to rely on native compilation, but in the case of a Dune build, it is automatically included in the build inputs so this doesn't seem to be a valid explanation."},{"author":"proux01","file":".nix/coq-overlays/multinomials/default.nix","date":"2021-10-21T13:24:17Z","comment":"> How can I reproduce / see the error log?\r\n\r\nBy removing the above `preBuild` for instance. Here is a failing job https://github.com/math-comp/math-comp/pull/793/checks?check_run_id=3905504301\r\n\r\nThe explanation about OCaml indeed seems promising (although still wondering why only for 8.12)."},{"author":"Zimmi48","file":".nix/coq-overlays/multinomials/default.nix","date":"2021-10-21T13:31:09Z","comment":"OK, thanks for the link. I think this kind of error just means that Coq is improperly installed from the point of view of ocamlfind. There could be a bug with the Nix packaging of Coq 8.12."},{"author":"Zimmi48","file":".nix/coq-overlays/multinomials/default.nix","date":"2021-10-21T13:35:59Z","comment":"To confirm this, one would need to run `nix-shell` for this and run `ocamlfind -query coq.kernel`. That being said, I just did that with the current nixpkgs master and `nix-shell -I nixpkgs=. -p coq_8_12 coq_8_12.findlib` and it worked fine."},{"author":"proux01","file":".nix/coq-overlays/multinomials/default.nix","date":"2021-10-21T13:38:39Z","comment":"Same here with the nixpkgs version used by mathcomp."},{"author":"Zimmi48","file":".nix/coq-overlays/multinomials/default.nix","date":"2021-10-21T13:39:25Z","comment":"So I just ran `nix-shell --argstr job multinomials` with the code from this PR and what I got was that OCaml is there but `ocamlfind` is not. This might explain the error."},{"author":"Zimmi48","file":".nix/coq-overlays/multinomials/default.nix","date":"2021-10-21T13:41:00Z","comment":"So indeed, we only add `ocaml` to the build inputs when using Dune, but not `findlib`. So `findlib` must be explicitly added to the `extraBuildInputs` if native compilation is to be used."},{"author":"Zimmi48","file":".nix/coq-overlays/multinomials/default.nix","date":"2021-10-21T13:44:52Z","comment":"@CohenCyril That's a bit annoying that to test a patch that only does a modification to the multinomials overlay, I have to recompile all of mathcomp, because Nix considers the source to have changed."},{"author":"Zimmi48","file":".nix/coq-overlays/multinomials/default.nix","date":"2021-10-21T13:47:55Z","comment":"Anyway, this patch seems to work:\r\n\r\n```diff\r\ndiff --git a/.nix/coq-overlays/multinomials/default.nix b/.nix/coq-overlays/multinomials/default.nix\r\nindex cb238da..cb2d884 100644\r\n--- a/.nix/coq-overlays/multinomials/default.nix\r\n+++ b/.nix/coq-overlays/multinomials/default.nix\r\n@@ -36,10 +36,7 @@ with lib; mkCoqDerivation {\r\n     patchShebangs configure || true\r\n   '';\r\n \r\n-  preBuild = ''\r\n-    # dune + native compilation + Nix seems currently broken, so disactivate it\r\n-    cp -f src/dune.in src/dune\r\n-  '';\r\n+  extraBuildInputs = [ coq.ocamlPackages.findlib ];\r\n \r\n   propagatedBuildInputs =\r\n     [ mathcomp.ssreflect mathcomp.algebra mathcomp-finmap mathcomp-bigenough ];\r\n```"},{"author":"proux01","file":".nix/coq-overlays/multinomials/default.nix","date":"2021-10-21T14:10:07Z","comment":"Thanks! We don't want to do native compilation however, so we should probably keep the previous patch.\r\nAnd I now understand why it only broke for 8.12, that's just what @erikmd wrote in multinomial's configure script: https://github.com/math-comp/multinomials/blob/master/configure#L34"},{"author":"Zimmi48","file":".nix/coq-overlays/multinomials/default.nix","date":"2021-10-21T14:11:29Z","comment":"Actually, I was testing with the wrong version (8.13). When testing with Coq 8.12, I get a different failure but I think it means that the dependencies were built without native-compute:\r\n\r\n```\r\nFile \"./src/./NSsrMultinomials_freeg.native\", line 18, characters 3-61:\r\n18 |   (Nmathcomp_ssreflect_seq.const_Nmathcomp_ssreflect_seq_uniq\r\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nError: Unbound module Nmathcomp_ssreflect_seq\r\nError: Native compiler exited with status 2\r\n\r\n        coqc src/.xfinmap.aux,src/NSsrMultinomials_xfinmap.{cmi,cmxs},src/xfinmap.{glob,vo} (exit 1)\r\n(cd _build/default && /nix/store/rais5zqvn73xn2w99jrfz30ysakgdc7n-coq-8.12.2/bin/coqc -w -ambiguous-paths -w -notation-overridden -w -redundant-canonical-projection -w -projection-no-head-constant -w -deprecated-native-compiler-option -native-output-dir . -native-compiler on -nI /nix/store/rais5zqvn73xn2w99jrfz30ysakgdc7n-coq-8.12.2/lib/ocaml/4.10.2/site-lib/coq/kernel -nI src -R src SsrMultinomials src/xfinmap.v)\r\nFile \"./src/./NSsrMultinomials_xfinmap.native\", line 14, characters 14-108:\r\n14 |   (Obj.magic (Nmathcomp_bigenough_bigenough.Construct_Nmathcomp_bigenough_bigenough_BigEnough_big_rel_of_0_1((\r\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nError: Unbound module Nmathcomp_bigenough_bigenough\r\nError: Native compiler exited with status 2\r\n```\r\n\r\nSo my best guess on why it doesn't fail with Coq 8.13 is just that the native-compiler is not run at all with Coq 8.13.\r\n\r\nEDIT: confirmed in the comment above."},{"author":"proux01","file":".nix/coq-overlays/multinomials/default.nix","date":"2021-10-21T14:14:46Z","comment":"> I think it means that the dependencies were built without native-compute:\r\n\r\nyes\r\n\r\n> So my best guess on why it doesn't fail with Coq 8.13 is just that the native-compiler is not run at all with Coq 8.13.\r\n\r\nExactly, Erik's script in multinomials basically activates native compilation only for Coq 8.12 (c.f. my link above)."},{"author":"CohenCyril","file":".nix/coq-overlays/multinomials/default.nix","date":"2021-10-21T14:22:19Z","comment":"Let's merge this for now, and then I'd like to discuss what should land in nixpkgs.\r\nShouldn't coq propagate the buildInput findlib?"},{"author":"proux01","file":".nix/coq-overlays/multinomials/default.nix","date":"2021-10-21T14:29:43Z","comment":"> Shouldn't coq propagate the buildInput findlib?\r\n\r\nI don't know, the way native compilation works in the OPAM world is through a `coq-native` metapackage. There is currently no equivalent on the Nix side, so nothing would build with native compilation anyway, which makes the addition of findlib rather useless in practice."},{"author":"Zimmi48","file":".nix/coq-overlays/multinomials/default.nix","date":"2021-10-21T14:34:31Z","comment":"If we follow the split world approach, we could have `coqPackages_withnative` where OCaml and findlib are available (recall that OCaml is not available by default for packages who do not build with Dune) and the right configure options are passed."},{"author":"proux01","file":".nix/coq-overlays/multinomials/default.nix","date":"2021-10-21T14:37:02Z","comment":"If that's easy to do, that would be nice (we have no user yet, but testing some packages in CI with native compilation would definitely make sense)."},{"author":"CohenCyril","file":".nix/coq-overlays/multinomials/default.nix","date":"2021-10-21T14:39:39Z","comment":"> If we follow the split world approach, we could have `coqPackages_withnative` where OCaml and findlib are available (recall that OCaml is not available by default for packages who do not build with Dune) and the right configure options are passed.\r\n\r\nI would imagine a coqPackages.withnative which could thus be overloaded."}],"tags":[],"commits":[{"author":"proux01","committer":"proux01","hash":"9d5f0d4ad3234b60a19d5caffadc250e1248dc37","message":"[CI] Temporary overlay for CoqEAL\n\nCoqEAL now needs paramcoq 1.1.3, add an overlay until we get the\nnixpkg updated : https://github.com/NixOS/nixpkgs/pull/142460","date":"2021-10-21T11:10:02Z"},{"author":"proux01","committer":"proux01","hash":"65457ec329597564befbfe763a8f572389955c00","message":"[CI] Disactivate native compilation for multinomials","date":"2021-10-21T12:23:38Z"}]}