{"author":"CohenCyril","number":660,"diff_summary":[{"file":"mathcomp/algebra/polydiv.v","status":"M","additions":76,"deletions":58},{"file":"mathcomp/algebra/rat.v","status":"M","additions":76,"deletions":58},{"file":"mathcomp/algebra/ssralg.v","status":"M","additions":76,"deletions":58},{"file":"mathcomp/algebra/ssrint.v","status":"M","additions":76,"deletions":58},{"file":"mathcomp/algebra/ssrnum.v","status":"M","additions":76,"deletions":58},{"file":"mathcomp/character/classfun.v","status":"M","additions":76,"deletions":58},{"file":"mathcomp/fingroup/fingroup.v","status":"M","additions":76,"deletions":58},{"file":"mathcomp/solvable/commutator.v","status":"M","additions":76,"deletions":58},{"file":"mathcomp/solvable/nilpotent.v","status":"M","additions":76,"deletions":58},{"file":"mathcomp/ssreflect/binomial.v","status":"M","additions":76,"deletions":58},{"file":"mathcomp/ssreflect/div.v","status":"M","additions":76,"deletions":58},{"file":"mathcomp/ssreflect/prime.v","status":"M","additions":76,"deletions":58},{"file":"mathcomp/ssreflect/seq.v","status":"M","additions":76,"deletions":58},{"file":"mathcomp/ssreflect/ssrnat.v","status":"M","additions":76,"deletions":58}],"state":"open","open_date":"2020-11-20T00:51:26Z","update_date":"2023-01-11T09:16:19Z","discussion":[{"author":"CohenCyril","date":"2020-11-20T00:53:08Z","comment":"CC @gares note that `simpl never` does not have the same behavior as `nosimpl` when adding a definition on top of a `simpl never` one, we might go through the unfolding. (Hence the need to fix `pfactor` again in `prime.v`)"},{"author":"ybertot","date":"2020-11-20T11:28:19Z","comment":"I am workiing on a patch to fourcolor so that it is compatible with this change.  There are good chances that the patch will be backward compatible."},{"author":"CohenCyril","date":"2020-11-20T11:31:26Z","comment":"I will investigate `odd_order`"},{"author":"CohenCyril","date":"2020-11-20T11:38:48Z","comment":"@gares, the problem we encountered is the one I mentioned for e.g. `pfactor`, except it occurs for a local definition, (for which there is no way to control the unfolding via `Arguments`,  whereas `nosimpl` keeps working).\r\nThis seems to be an essential shortcoming of `simpl never`, which cannot cover all use cases of `nosimpl` ... :cry: "},{"author":"CohenCyril","date":"2020-11-20T11:47:22Z","comment":"@ybertot @gares, Unfortunately, I think the consequence of this exploration is that this PR cannot be merged because it introduces a regression in the behaviour of symbols that are no simplifiable... and that a bug report should be submitted on the Coq side (which I am going to do)."},{"author":"ybertot","date":"2020-11-20T12:00:44Z","comment":"I came to a similar conclusion."},{"author":"gares","date":"2020-11-20T12:13:11Z","comment":"> a bug report should be submitted on the Coq side (which I am going to do).\r\n\r\nplease do, since I can't exactly understand what the problem is from the comments here"},{"author":"ybertot","date":"2020-11-20T12:40:02Z","comment":"I have been trying to construct a minimal example, but I can't reproduce the problem in a few lines yet."},{"author":"ybertot","date":"2020-11-20T12:48:10Z","comment":"In the meantime shouldn't this PR be re-affected to milestone 1.13.0?"},{"author":"CohenCyril","date":"2020-11-20T12:52:39Z","comment":"> I have been trying to construct a minimal example, but I can't reproduce the problem in a few lines yet.\r\n\r\nI did it here https://github.com/coq/coq/issues/13428"},{"author":"CohenCyril","date":"2020-11-20T12:54:06Z","comment":"> In the meantime shouldn't this PR be re-affected to milestone 1.13.0?\r\n\r\nI am afraid way later than 1.13 since, assuming someone fixes this for Coq 8.13, we would have to wait until Coq 8.15 is out.\r\nBut we must test the feature ASAP this time :cry: "}],"review_discussion":[{"author":"pi8027","file":"mathcomp/character/classfun.v","date":"2020-11-20T01:34:12Z","comment":"I think this one should be relocated to the above `Predicates` section."}],"tags":[{"tag":"kind: refactoring","description":"Issue or PR about a refactoring. (reorganizing the code, reusing theorems, simplifications...)"}],"commits":[{"author":"CohenCyril","committer":"CohenCyril","hash":"28ce2f845ab42ab54aa6ad08bc02a27f7a0b6bc7","message":"Using Arguments simpl never instead of nosimpl","date":"2020-11-20T02:18:22Z"}]}