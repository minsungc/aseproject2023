{"author":"CohenCyril","number":257,"diff_summary":[{"file":"ChangeLog","status":"M","additions":18,"deletions":0},{"file":"mathcomp/algebra/mxalgebra.v","status":"M","additions":18,"deletions":0}],"state":"merged","open_date":"2018-12-05T14:52:41Z","update_date":"2018-12-11T10:04:46Z","discussion":[{"author":"CohenCyril","date":"2018-12-11T09:45:57Z","comment":"@ggonthier I think this is ready for merge"}],"review_discussion":[{"author":"thery","file":"mathcomp/algebra/mxalgebra.v","date":"2018-12-07T17:52:01Z","comment":"what is the rationale behind the name \r\neq ok\r\nP ok,\r\n ms matrice space?\r\n"},{"author":"CohenCyril","file":"mathcomp/algebra/mxalgebra.v","date":"2018-12-09T15:05:44Z","comment":"Yes... on second thoughts I'm not sure it is good. However `eqmxP` is taken as it is the reflection lemma between `eqmx A B` (i.e. `A :=: B`) and `(A == B)%MS`. Other names I have in mind are `submx2P`, `samemxP`,  Do you have other suggestions?"},{"author":"ggonthier","file":"mathcomp/algebra/mxalgebra.v","date":"2018-12-09T22:34:12Z","comment":"I'd suggest `eqmxMunitP`, by analogy with `eqmxMfull`, which is the converse implication of the equivalence stated by this lemma (or rather, its generalisation to matrices with different shapes).\r\nI'd also suggest changing the caption to \r\n\r\n> two matrices with the same shape represent the same subspace iff they differ only by a change of basis.\r\n\r\nand changing the name of the variables of the lemma to `U` and `V`, which are the names commonly used in `mxalgebra` to denote matrices representing subspaces. While it is the case that the row space of a matrix is the codomain of the linear function it represents (by right multiplication), in general `mxalgebra` tries to avoid introducing this functional interpretation when it is not germane.\r\n\r\nFinally, the proof should use `eqmxMfull` for the converse implication, and I think the forward implication would benefit from a more declarative style, even at the cost of a extra script line:\r\n```\r\nLemma eqmxMunitP m n (U V : 'M_(m, n)) :\r\n  reflect (exists2 P, P \\in unitmx & U = P *m V) (U == V)%MS.\r\nProof.\r\napply: (iffP eqmxP) => [eqUV | [P Punit ->]]; last first.\r\n  by apply/eqmxMfull; rewrite row_full_unit.\r\nhave [D defU]: exists D, U = D *m V by apply/submxP; rewrite eqUV.\r\nhave{eqUV} [Pt Pt_unit defUt]: {Pt | Pt \\in unitmx & V^T *m D^T = V^T *m Pt}.\r\n  by apply/complete_unitmx; rewrite -trmx_mul -defU !mxrank_tr eqUV.\r\nby exists Pt^T; last apply/trmx_inj; rewrite ?unitmx_tr // defU !trmx_mul trmxK.\r\nQed.\r\n```"},{"author":"ggonthier","file":"mathcomp/algebra/mxalgebra.v","date":"2018-12-10T08:02:04Z","comment":"I forgot to note you should also update the `Changes` blurb..."}],"tags":[],"commits":[{"author":"CohenCyril","committer":"CohenCyril","hash":"a2d36f6f0746531d207e760a22d47dd2ebb77ade","message":"Adding lemma `eqmxMunitP`","date":"2018-12-10T17:32:20Z"}]}