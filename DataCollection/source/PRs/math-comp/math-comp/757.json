{"author":"chdoc","number":757,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":74,"deletions":32},{"file":"mathcomp/ssreflect/seq.v","status":"M","additions":74,"deletions":32},{"file":"mathcomp/ssreflect/ssrbool.v","status":"M","additions":74,"deletions":32}],"state":"merged","open_date":"2021-06-21T16:41:55Z","update_date":"2021-10-21T15:20:12Z","discussion":[{"author":"chdoc","date":"2021-10-18T09:58:14Z","comment":"So, should I PR `andPP` and `orPP` for Coq, so that they become part of 8.15, creating a `(* v8.15 addtions *)` section in the mathcomp version of ssrbool? "},{"author":"CohenCyril","date":"2021-10-19T14:06:33Z","comment":"I think `implyPP` should also be added though..."},{"author":"chdoc","date":"2021-10-20T08:20:11Z","comment":"I can take care of this this afternoon. "},{"author":"chdoc","date":"2021-10-20T11:37:42Z","comment":"> I think `implyPP` should also be added though...\r\n\r\nI also added `negPP` and put everything into a section to match the style of `ssrbool.v` in Coq. If there are no more comments, I will open the PR on the Coq side. "},{"author":"CohenCyril","date":"2021-10-21T15:22:46Z","comment":"Actually it would be nice if `negP` could be combined using a `'neg_` notation (same as  `'forall_` and `'exist_`)."},{"author":"clayrat","date":"2021-10-21T22:26:27Z","comment":"This PR is breaking https://github.com/imdea-software/fcsl-pcm. The reason seems to be that `T2` in the new version of `eq_in_map` is constrained to `eqType` whereas it was an arbitrary `Type` before. The new proof doesn't seem to actually require this constraint, so I assume it can be removed without consequences?"}],"review_discussion":[{"author":"affeldt-aist","file":"mathcomp/ssreflect/seq.v","date":"2021-10-15T06:31:33Z","comment":"maybe `a::s` -> `a :: s`?"},{"author":"affeldt-aist","file":"mathcomp/ssreflect/seq.v","date":"2021-10-15T06:31:42Z","comment":"maybe `a::s` -> `a :: s`?"},{"author":"CohenCyril","file":"mathcomp/ssreflect/seq.v","date":"2021-10-18T09:39:40Z","comment":"```suggestion\r\n  {in a :: s, forall x, P x} <-> P a /\\ {in s, forall x, P x}.\r\n```"},{"author":"CohenCyril","file":"mathcomp/ssreflect/seq.v","date":"2021-10-18T09:39:50Z","comment":"```suggestion\r\n  (exists2 x, x \\in a :: s & P x) <-> P a \\/ exists2 x, x \\in s & P x.\r\n```"},{"author":"CohenCyril","file":"mathcomp/ssreflect/seq.v","date":"2021-10-21T22:33:03Z","comment":"My mistake: this is a regression compared to the previous version were `T2` did not need to be an `eqType`. This breaks fcsl-pcm I believe."},{"author":"CohenCyril","file":"mathcomp/ssreflect/seq.v","date":"2021-10-21T22:34:42Z","comment":"Same here."}],"tags":[],"commits":[{"author":"chdoc","committer":"CohenCyril","hash":"602f7ff5207b200f2188a271d054e233c201c261","message":"forall/exists_cons + propositonal PP-combinator lemmas + some map lemmas","date":"2021-10-20T22:13:58Z"}]}