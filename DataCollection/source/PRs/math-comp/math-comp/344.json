{"author":"soraros","number":344,"diff_summary":[{"file":"mathcomp/algebra/mxalgebra.v","status":"M","additions":28,"deletions":25},{"file":"mathcomp/algebra/ssrint.v","status":"M","additions":28,"deletions":25},{"file":"mathcomp/ssreflect/binomial.v","status":"M","additions":28,"deletions":25},{"file":"mathcomp/ssreflect/div.v","status":"M","additions":28,"deletions":25},{"file":"mathcomp/ssreflect/seq.v","status":"M","additions":28,"deletions":25},{"file":"mathcomp/ssreflect/ssrnat.v","status":"M","additions":28,"deletions":25}],"state":"merged","open_date":"2019-05-06T19:01:13Z","update_date":"2019-05-08T07:38:03Z","discussion":[{"author":"soraros","date":"2019-05-06T20:22:46Z","comment":"> By \"check\" I just meant trying to see how much of rest of the library compiles with your Remove Hints command, but we can leave that experiment for another PR.\r\n\r\n@ggonthier this is easier than I thought"},{"author":"soraros","date":"2019-05-08T08:17:26Z","comment":"@ggonthier Thank you for your guidance!"},{"author":"RalfJung","date":"2019-08-01T12:00:47Z","comment":"This affects all proofs using `auto`/`eauto` as well in any development where ssreflect is (transitively) imported, right? So, e.g. anything using Iris now will also not have these hints in the `core` database any more?\r\n\r\nOr does this only affect developments using the parts of ssreflect that are not shipped with Coq?\r\n\r\nIt would be good if such global side-effects of ssreflect could at least be documented, similar to [what std++ does](https://gitlab.mpi-sws.org/iris/stdpp/#side-effects)."}],"review_discussion":[{"author":"soraros","file":"mathcomp/ssreflect/ssrnat.v","date":"2019-05-06T20:24:32Z","comment":"I add this lemma so the proof script for `nat_of_mul_bin` is similar to `nat_of_add_bin`"},{"author":"ggonthier","file":"mathcomp/ssreflect/ssreflect.v","date":"2019-05-07T12:09:44Z","comment":"Please put this in `ssrnat.v` rather than `ssreflect.v`. The latter is meant to be a proxy for `Coq/plugins/ssr/ssreflect`, so apart from the `Require Import` it should only contain parameter settings and local advance copies of upcoming features (as we angle for backward compatibility with 2 prior versions of Coq). An conceivably some MathComp users might choose not to use `ssrnat` (e.g., to make it easier to use some of the not-so-parametrisable arithmetic automation), and those would expect to have these hints available."},{"author":"ggonthier","file":"mathcomp/ssreflect/ssrnat.v","date":"2019-05-07T12:15:37Z","comment":"Perhaps `rewrite addnC; elim: n => //= n ->` or `rewrite addnC; apply/eqP; elim: n` would be more elegant."},{"author":"ggonthier","file":"mathcomp/ssreflect/ssrnat.v","date":"2019-05-07T12:25:37Z","comment":"Well, `nat_of_addn_gt0` was not meant as a user-facing lemma, and was only there to factor a subproof common to `nat_of_add_bin` and `nat_of_add_mul`; Coq lacked the facilities (`Local Lemma`) to express that at the time this was written.\r\n  I'm fine with switching to export `nat_of_[succ|addn|muln]_gt0`, but they need better names.\r\n`nat_of_[succ|add|mul]_pos` seems the obvious choice."},{"author":"soraros","file":"mathcomp/ssreflect/ssreflect.v","date":"2019-05-07T13:24:21Z","comment":"This is never meant to stay at merge time. I just add it here to make sure(during CI) the we are really clean from arith lemmas.\r\nNow moved."},{"author":"soraros","file":"mathcomp/ssreflect/ssrnat.v","date":"2019-05-07T13:43:34Z","comment":"Wow!"},{"author":"soraros","file":"mathcomp/ssreflect/ssrnat.v","date":"2019-05-07T13:45:02Z","comment":"Not so sure where to place this line in ssrnat."},{"author":"soraros","file":"mathcomp/ssreflect/ssrnat.v","date":"2019-05-07T13:49:37Z","comment":"Changed to `nat_of_[succ|add|mul]_pos`."},{"author":"ggonthier","file":"mathcomp/ssreflect/ssrnat.v","date":"2019-05-07T13:59:06Z","comment":"The top of the file seems as good a place as any. Do separate this from the boilerplate flags with at least an empty line, and preferably a short rationale comment such as \"Disable Coq prelude hints to improve proof script robustness.\""},{"author":"soraros","file":"mathcomp/ssreflect/ssrnat.v","date":"2019-05-07T15:09:26Z","comment":"@ggonthier, Is this what you mean?"},{"author":"ggonthier","file":"mathcomp/ssreflect/ssrnat.v","date":"2019-05-07T15:31:28Z","comment":"Yes, that's perfect."}],"tags":[],"commits":[{"author":"soraros","committer":"soraros","hash":"6c4382c69e72b81fb7e81b0b753e5d3c83b1064a","message":"suppress use of `Arith` hints","date":"2019-05-07T21:37:41Z"}]}