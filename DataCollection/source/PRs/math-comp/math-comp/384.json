{"author":"pi8027","number":384,"diff_summary":[{"file":".dockerignore","status":"D","additions":61,"deletions":15},{"file":"CHANGELOG_UNRELEASED.md","status":"D","additions":61,"deletions":15},{"file":"Dockerfile.make","status":"D","additions":61,"deletions":15},{"file":"etc/utils/hierarchy.ml","status":"D","additions":61,"deletions":15},{"file":"mathcomp/Make.test-suite","status":"D","additions":61,"deletions":15},{"file":"mathcomp/Makefile.common","status":"D","additions":61,"deletions":15},{"file":"mathcomp/Makefile.coq.local","status":"D","additions":61,"deletions":15}],"state":"merged","open_date":"2019-09-26T08:09:45Z","update_date":"2019-10-07T09:09:13Z","discussion":[{"author":"erikmd","date":"2019-10-01T11:20:09Z","comment":"Hi @pi8027 \r\n[sorry for late reply]\r\n\r\n> Should we add CI support for the test suite? (Currently I don't see how to do it.)\r\n\r\nYes, sounds good:\r\n\r\nyou just need to: add one (or several) job(s) that trigger the proper `make` command, or extend an existing job (such as **`make-coq-latest:`**, i.e. MathComp with the latest stable release of Coq) to do this.\r\n\r\nIf you choose that last option, you'd just need to add the following in the end of file `Dockerfile.make` (not tested though, I assume `make test-suite` is the relevant line to add here):\r\n\r\n```bash\r\n  …\r\n  && cd mathcomp \\\r\n  && make Makefile.coq \\\r\n  && make -f Makefile.coq -j ${NJOBS} all \\\r\n  && make -f Makefile.coq install \\\r\n  && make test-suite\"]\r\n```\r\n\r\nand the GitLab CI job `make-coq-latest:` will essentially do this:\r\n\r\n`docker build -f Dockerfile.make --pull --build-arg=coq_image=\"coqorg/coq:latest\" --build-arg=compiler=\"edge\" -t \"mathcomp-dev:make_coq-latest\" .`"},{"author":"pi8027","date":"2019-10-01T17:33:56Z","comment":"Hi @erikmd, thank you for the answer. I changed `Dockerfile.make` as you said. Let see how it runs."},{"author":"pi8027","date":"2019-10-01T18:28:07Z","comment":"```\r\n+ make test-suite\r\n/home/coq/.opam/4.07.1+flambda/bin/coq_makefile  -f Make -o Makefile.coq\r\nmake -f Makefile.coq --no-print-directory\r\nmake[2]: Nothing to be done for 'real-all'.\r\nCOQBIN=/home/coq/.opam/4.07.1+flambda/bin/ ocaml ../etc/utils/hierarchy.ml -verify -R . mathcomp -lib all.all > test_suite/hierarchy_test.v\r\nCannot find file ../etc/utils/hierarchy.ml.\r\nmake: *** [Makefile.common:60: test_suite/hierarchy_test.v] Error 2\r\n```\r\nHmm... How can I call my utility in `etc` from `make` in this setting? I guess I need to declare a new variable in `Makefile.common` for the path of `hierarchy.ml` then use it to specify that path from `Dockerfile.make`."},{"author":"erikmd","date":"2019-10-01T18:40:24Z","comment":"Hi, very probably the issue is that the path ../etc/... was ignored by the .dockerignore file (which is mandatory to have so that the so-called Docker build context contains exactly the source code files... but not the .git folder and so on)\n\nLe 1 octobre 2019 20:28:08 GMT+02:00, Kazuhiko Sakaguchi <notifications@github.com> a écrit :\n>```\n>+ make test-suite\n>/home/coq/.opam/4.07.1+flambda/bin/coq_makefile  -f Make -o\n>Makefile.coq\n>make -f Makefile.coq --no-print-directory\n>make[2]: Nothing to be done for 'real-all'.\n>COQBIN=/home/coq/.opam/4.07.1+flambda/bin/ ocaml\n>../etc/utils/hierarchy.ml -verify -R . mathcomp -lib all.all >\n>test_suite/hierarchy_test.v\n>Cannot find file ../etc/utils/hierarchy.ml.\n>make: *** [Makefile.common:60: test_suite/hierarchy_test.v] Error 2\n>```\n>Hmm... How can I call my utility in `etc` from `make` in this setting?\n>I guess I need to declare a new variable in `Makefile.common` for the\n>path of `hierarchy.ml` then use it to specify that path from\n>`Dockerfile.make`.\n"},{"author":"erikmd","date":"2019-10-01T20:08:18Z","comment":"The CI is now green, but there is a [warning](https://gitlab.com/math-comp/math-comp/-/jobs/309186276):\r\n\r\n*/home/coq/.opam/4.07.1+flambda/bin/coq_makefile  -f Make -o Makefile.coqmake -f Makefile.coq --no-print-directorymake[2]: Nothing to be done for 'real-all'.COQBIN=/home/coq/.opam/4.07.1+flambda/bin/ ocaml ../etc/utils/hierarchy.ml -verify -R . mathcomp -lib all.all > test_suite/hierarchy_test.vcd test_suite; /home/coq/.opam/4.07.1+flambda/bin/coq_makefile  -f Make -o Makefile.coq **Warning: .. (used in -R or -Q) is not a subdirectory of the current directory***\r\n\r\nDo you think these lines should be refactored to avoid `..`? or is it a benign issue.\r\nhttps://github.com/math-comp/math-comp/blob/a4594c56cce42d4f3a110e0958cbecb851076d10/mathcomp/test_suite/Make#L3-L4"},{"author":"pi8027","date":"2019-10-02T09:01:35Z","comment":"@erikmd I moved `test_suite/Make` and `test_suite/Makefile.coq` to `Make.test-suite` and ~`Makefile.test-suite`~ `Makefile.test-suite.coq` respectively to avoid that warning. If I place more than two `Makefile`s generated by the `coq_makefile` utility in the same directory, the name of their dependency file `.coqdep.d` will conflict. But this name can be given from outside like this:\r\nhttps://github.com/math-comp/math-comp/pull/384/files#diff-9c0cdc05f486cab3d6cace8379825a57R34"}],"review_discussion":[],"tags":[],"commits":[{"author":"pi8027","committer":"pi8027","hash":"a899bb7ef1d6a2c35b1b9a646dfeae332972f5f6","message":"Fix and improve the test suite and Makefile\n\n- improve an error message produced by the `check_join` tactic,\n- fix the build of the test suite: `make test-suite`, and\n- add a new rule `only` to build a subset of MathComp.","date":"2019-10-02T09:23:14Z"}]}