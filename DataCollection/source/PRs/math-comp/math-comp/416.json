{"author":"affeldt-aist","number":416,"diff_summary":[{"file":".gitlab-ci.yml","status":"M","additions":20,"deletions":20},{"file":"mathcomp/algebra/rat.v","status":"M","additions":20,"deletions":20},{"file":"mathcomp/algebra/ssrint.v","status":"M","additions":20,"deletions":20},{"file":"mathcomp/algebra/ssrnum.v","status":"M","additions":20,"deletions":20},{"file":"mathcomp/field/algC.v","status":"M","additions":20,"deletions":20}],"state":"merged","open_date":"2019-11-11T17:13:29Z","update_date":"2019-11-14T11:49:45Z","discussion":[{"author":"pi8027","date":"2019-11-13T04:56:14Z","comment":"@affeldt-aist `416` (the number of this PR) should be added to the following line and the other three occurrences to pass CI.\r\nhttps://github.com/math-comp/math-comp/blob/287585bd52f4d7d4e85b515d9b213d35c9f6863c/.gitlab-ci.yml#L148\r\n\r\nThe generalized `ProdNormedZmodule` and `nonnegnum_of` still seem to be draft. Can't we remove them temporally to merge #270 soon? cc: @CohenCyril \r\n\r\n"},{"author":"affeldt-aist","date":"2019-11-13T07:37:53Z","comment":"> 416 (the number of this PR) should be added ... to pass CI.\r\n\r\nThanks.\r\n"},{"author":"pi8027","date":"2019-11-13T07:57:15Z","comment":"> BTW, this generalization is motivated by analysis.\r\n\r\n@affeldt-aist I think you can move the draft part of this PR including `ProdNormedZmodule` to the analysis repository to continue your work, and port them to mathcomp later. (Just to clarify, I'm proposing to remove `ProdNormedZmodule` including the non-generalized one and to do not provide the `normedZmodType` instance of prod in mathcomp for now.)"},{"author":"affeldt-aist","date":"2019-11-13T11:19:59Z","comment":"> @pi8027 The generalized ProdNormedZmodule and nonnegnum_of still seem to be draft. Can't we remove them temporally to merge #270 soon? cc: @CohenCyril\r\n\r\nThe generalized ProdNormedZmodule and nonnegnum_of have been moved to PR #417 "},{"author":"affeldt-aist","date":"2019-11-13T11:26:14Z","comment":"> Just to clarify, I'm proposing ... to do not provide the normedZmodType instance of prod in mathcomp for now.\r\n\r\nI am not sure whether other developments (besides mathcomp-analysis) depend on it :-/."},{"author":"pi8027","date":"2019-11-13T22:48:42Z","comment":"> I am not sure whether other developments (besides mathcomp-analysis) depend on it :-/.\r\n\r\nAFAIK, no project other than mathcomp-analysis depends on `ProdNormedZmodule`. Since it has been introduced in #270, I think there is no problem to remove it."},{"author":"CohenCyril","date":"2019-11-14T10:05:49Z","comment":"Yes, I think `ProdNormedZmodule` should be removed all together (in its generalized and non generalized forms)."}],"review_discussion":[{"author":"pi8027","file":"mathcomp/algebra/ssrnum.v","date":"2019-11-13T07:42:37Z","comment":"IMO, `num_of_nonneg` should be coercion, `0`, `1`, addition, multiplication, natmul, and norms should have canonical `nonnegnum_of` instances, and the `[nonnegnum of ...]` notation as in `[tuple of ...]` should be provided."},{"author":"affeldt-aist","file":"mathcomp/algebra/ssrnum.v","date":"2019-11-13T07:48:42Z","comment":"See PR #417 for some progress regarding these comments."}],"tags":[],"commits":[{"author":"affeldt-aist","committer":"affeldt-aist","hash":"ed7ccc74bad2aad6b23daa69509aa00f8d517760","message":"renaming\nNormedZmoduleType -> NormedZmodType\nNormedZmoduleMixin -> NormedZmodMixin\nthat looks more homogeneous with regard to naming conventions used so far","date":"2019-11-11T17:11:18Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"0a84f1c0a0d3f34d55b4209fd55e1599bba06cf3","message":"update .gitlab-ci.yml","date":"2019-11-13T08:24:33Z"},{"author":"affeldt-aist","committer":"affeldt-aist","hash":"afd113bcea3b4c581112fddf89e5b3444b50101e","message":"typo","date":"2019-11-13T13:16:07Z"}]}