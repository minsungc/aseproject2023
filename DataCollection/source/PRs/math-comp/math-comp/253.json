{"author":"anton-trunov","number":253,"diff_summary":[{"file":"mathcomp/algebra/matrix.v","status":"M","additions":241,"deletions":250},{"file":"mathcomp/algebra/mxalgebra.v","status":"M","additions":241,"deletions":250},{"file":"mathcomp/algebra/poly.v","status":"M","additions":241,"deletions":250},{"file":"mathcomp/algebra/ssralg.v","status":"M","additions":241,"deletions":250},{"file":"mathcomp/algebra/ssrint.v","status":"M","additions":241,"deletions":250},{"file":"mathcomp/algebra/vector.v","status":"M","additions":241,"deletions":250},{"file":"mathcomp/character/character.v","status":"M","additions":241,"deletions":250},{"file":"mathcomp/character/classfun.v","status":"M","additions":241,"deletions":250},{"file":"mathcomp/character/inertia.v","status":"M","additions":241,"deletions":250},{"file":"mathcomp/character/integral_char.v","status":"M","additions":241,"deletions":250},{"file":"mathcomp/character/mxabelem.v","status":"M","additions":241,"deletions":250},{"file":"mathcomp/character/mxrepresentation.v","status":"M","additions":241,"deletions":250},{"file":"mathcomp/field/algebraics_fundamentals.v","status":"M","additions":241,"deletions":250},{"file":"mathcomp/field/closed_field.v","status":"M","additions":241,"deletions":250},{"file":"mathcomp/field/falgebra.v","status":"M","additions":241,"deletions":250},{"file":"mathcomp/fingroup/action.v","status":"M","additions":241,"deletions":250},{"file":"mathcomp/fingroup/fingroup.v","status":"M","additions":241,"deletions":250},{"file":"mathcomp/fingroup/quotient.v","status":"M","additions":241,"deletions":250},{"file":"mathcomp/solvable/abelian.v","status":"M","additions":241,"deletions":250},{"file":"mathcomp/solvable/burnside_app.v","status":"M","additions":241,"deletions":250},{"file":"mathcomp/solvable/center.v","status":"M","additions":241,"deletions":250},{"file":"mathcomp/solvable/commutator.v","status":"M","additions":241,"deletions":250},{"file":"mathcomp/solvable/cyclic.v","status":"M","additions":241,"deletions":250},{"file":"mathcomp/solvable/frobenius.v","status":"M","additions":241,"deletions":250},{"file":"mathcomp/solvable/gseries.v","status":"M","additions":241,"deletions":250},{"file":"mathcomp/solvable/jordanholder.v","status":"M","additions":241,"deletions":250},{"file":"mathcomp/solvable/maximal.v","status":"M","additions":241,"deletions":250},{"file":"mathcomp/solvable/nilpotent.v","status":"M","additions":241,"deletions":250},{"file":"mathcomp/solvable/pgroup.v","status":"M","additions":241,"deletions":250},{"file":"mathcomp/solvable/primitive_action.v","status":"M","additions":241,"deletions":250},{"file":"mathcomp/solvable/sylow.v","status":"M","additions":241,"deletions":250},{"file":"mathcomp/ssreflect/eqtype.v","status":"M","additions":241,"deletions":250},{"file":"mathcomp/ssreflect/finset.v","status":"M","additions":241,"deletions":250},{"file":"mathcomp/ssreflect/fintype.v","status":"M","additions":241,"deletions":250},{"file":"mathcomp/ssreflect/ssrnat.v","status":"M","additions":241,"deletions":250}],"state":"merged","open_date":"2018-11-27T15:42:09Z","update_date":"2018-12-04T12:27:53Z","discussion":[{"author":"ggonthier","date":"2018-11-29T14:35:59Z","comment":"I agree with @CohenCyril; I’ve actually prepared a full review addressing these and other issues, but I can’t upload it as I’m out of office this afternoon. I’ll do it tonight.\n   Best,\nGeorges \n\nEnvoyé de mon iPhone\n\n> Le 29 nov. 2018 à 15:14, Cyril Cohen <notifications@github.com> a écrit :\n> \n> @CohenCyril commented on this pull request.\n> \n> In mathcomp/algebra/poly.v:\n> \n> > @@ -146,9 +146,9 @@ End Polynomial.\n>  (* directives take effect.                                         *)\n>  Bind Scope ring_scope with poly_of.\n>  Bind Scope ring_scope with polynomial.\n> -Arguments polyseq _ _%R.\n> -Arguments poly_inj _ _%R _%R _.\n> -Arguments coefp_head _ _ _%N _%R.\n> +Arguments polyseq [R] p%R.\n> +Arguments poly_inj [R x1%R x2%R] _.\n> rename x1, x2 to p and q.\n> \n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub, or mute the thread.\n"},{"author":"anton-trunov","date":"2018-11-30T11:39:56Z","comment":"@ggonthier Thank you very much for the through review and all the explanations! I pushed two new commits trying to address your suggestions. Some of the maximal implicit declarations make us add `@` annotations. If this is not intended, I will revert the newest commit and amend the previous one."},{"author":"anton-trunov","date":"2018-11-30T12:11:34Z","comment":"Great! Should I squash all the commits then?"},{"author":"ggonthier","date":"2018-11-30T12:13:47Z","comment":"  Certainly, do go ahead. And thank you for contributing!\n\n> Le 30 nov. 2018 à 13:11, Anton Trunov <notifications@github.com> a écrit :\n> \n> Great! Should I squash all the commits then?\n> \n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub <https://github.com/math-comp/math-comp/pull/253#issuecomment-443185801>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AOhrHb775xXYfQ8VbXWZImYhHlORbyI6ks5u0SB3gaJpZM4Y1wxv>.\n> \n\n"},{"author":"anton-trunov","date":"2018-11-30T12:52:15Z","comment":"Done!"},{"author":"anton-trunov","date":"2018-12-04T12:25:26Z","comment":"I force-pushed the last fixes and this should be good to go!"},{"author":"ggonthier","date":"2018-12-04T12:30:02Z","comment":"Merged - thanks! I've also closed most conversations, keeping open those we may want to refer to in future improvements (e.g., the `_head` idiom and named extra arguments)."},{"author":"anton-trunov","date":"2018-12-04T13:04:03Z","comment":"@ggonthier Thank you for merging and for your patience!"},{"author":"ejgallego","date":"2018-12-04T15:44:04Z","comment":"It looks like this may have broken the compilation of `odd-order` [still verifying as it will take some time] see https://gitlab.com/coq/coq/-/jobs/129581232\r\n\r\nWhile I confirm the exact bug, IMHO math-comp's CI system should be improved, it makes little sense to perform changes to the library and don't test that `odd-order` is still OK."},{"author":"anton-trunov","date":"2018-12-04T16:01:05Z","comment":"@ejgallego I pushed a quick fix for this: https://github.com/anton-trunov/odd-order/commit/5750b0e6d7fe89a6e85eeebabad63b86dc758636.\r\nIt might be not what would be intended by @ggonthier, though."},{"author":"ejgallego","date":"2018-12-04T16:06:17Z","comment":"Thanks @anton-trunov , indeed I have confirmed the problem and your fix allows the compilation to continue. Please submit a PR, thanks!"},{"author":"anton-trunov","date":"2018-12-04T16:08:54Z","comment":"@ejgallego Done. https://github.com/math-comp/odd-order/pull/7"},{"author":"ejgallego","date":"2018-12-04T16:12:04Z","comment":"Thanks!"}],"review_discussion":[{"author":"ggonthier","file":"mathcomp/algebra/mxalgebra.v","date":"2018-11-29T10:42:11Z","comment":"```\r\nArguments mxrank {m%N n%N} A%MS.\r\n```\r\nAs a general rule, defined functional constants should have maximal prenex implicit arguments, as this facilitates their use as arguments to functionals, because this mimics the way function constants are treated in functional programming languages with Hindley-Milner type inference. Conversely, lemmas and theorems should have on-demand implicit arguments, possibly interspersed with explicit ones, as it's fairly common for other lemmas to have universally quantified premises; also, this makes it easier to specify such arguments with the `apply:` tactic. This policy may be amended for lemmas that are used as functional arguments, such as reflection or cancellation lemmas.\r\n  Unfortunately there is currently no easy way to tell Coq to use different defaults for definitions and lemmas, so MathComp sticks to the on-demand default, as there are significantly more lemmas than definition, and use the `Prenex Implicits` to redress matters in bulk for definitions. However, this is not completely systematic, and is sometimes omitted for constants that are not used as functional arguments in the library, or inside the sections in which the definition occur, since such commands need to be repeated after the section is closed.\r\n   Since `Arguments` commands should document the intended constant usage as best as possible, they should follow the implicits policy - even in cases such as this where the `Prenex Implicits` had been skipped."},{"author":"ggonthier","file":"mathcomp/algebra/mxalgebra.v","date":"2018-11-29T10:43:32Z","comment":"```\r\nArguments complmx {m%N n%N} A%MS.\r\n```\r\nFunctions have maximal implicits (see top comment)."},{"author":"ggonthier","file":"mathcomp/algebra/mxalgebra.v","date":"2018-11-29T10:47:14Z","comment":"```\r\nArguments submx {m1%N m2%N n%N} A%MS B%MS : rename.\r\n```\r\nThe `Arguments` command should document the intended bound names, which are clear here from the `submit_def` definition, not the names that happen to have been substituted or deleted by the `locked_with` functional."},{"author":"ggonthier","file":"mathcomp/algebra/mxalgebra.v","date":"2018-11-29T10:48:38Z","comment":"```\r\nArguments addsmx {m1%N m2%N n%N} A%MS B%MS : rename.\r\n```\r\nDocument intended arguments name (see comment above)."},{"author":"ggonthier","file":"mathcomp/algebra/mxalgebra.v","date":"2018-11-29T10:50:00Z","comment":"```\r\nArguments capmx {m1%N m2%N n%N} A%MS B%MS : rename\r\n```\r\nDocument intended names and implicit status."},{"author":"ggonthier","file":"mathcomp/algebra/mxalgebra.v","date":"2018-11-29T10:50:53Z","comment":"```\r\nArguments diffmx {m1%N m2%N n%N} A%MS B%MS : rename.\r\n```"},{"author":"ggonthier","file":"mathcomp/algebra/mxalgebra.v","date":"2018-11-29T10:51:52Z","comment":"```\r\nArguments mxsum_spec {n%N m%N} T%MS r%N.\r\n```"},{"author":"ggonthier","file":"mathcomp/algebra/mxalgebra.v","date":"2018-11-29T10:53:39Z","comment":"```\r\nArguments row_full {F m%N n%N}A%MS.\r\n```"},{"author":"ggonthier","file":"mathcomp/algebra/mxalgebra.v","date":"2018-11-29T11:03:03Z","comment":"```\r\nArguments left_mx_ideal [F m1%N m2%N n%N] R%MS S%MS : rename.\r\n```\r\nConform to header documentation."},{"author":"ggonthier","file":"mathcomp/algebra/mxalgebra.v","date":"2018-11-29T11:03:19Z","comment":"```\r\nArguments right_mx_ideal [F m1%N m2%N n%N] R%MS S%MS : rename.\r\n```"},{"author":"ggonthier","file":"mathcomp/algebra/mxalgebra.v","date":"2018-11-29T11:03:39Z","comment":"```\r\nArguments mx_ideal [F m1%N m2%N n%N] R%MS S%MS.\r\n```"},{"author":"ggonthier","file":"mathcomp/algebra/mxalgebra.v","date":"2018-11-29T11:04:56Z","comment":"```\r\nArguments diffmx {F m1%N m2%N n%N} A%MS B%MS.\r\n```"},{"author":"ggonthier","file":"mathcomp/algebra/mxalgebra.v","date":"2018-11-29T11:05:06Z","comment":"```\r\nArguments capmx {F m1%N m2%N n%N} A%MS B%MS : rename.\r\n```"},{"author":"ggonthier","file":"mathcomp/algebra/mxalgebra.v","date":"2018-11-29T11:05:31Z","comment":"```\r\nArguments addsmx {F m1%N m2%N n%N} A%MS B%MS.\r\n```\r\nThe `rename` tag should not be needed here, if the other `Arguments addsmx` suggestion is implemented."},{"author":"ggonthier","file":"mathcomp/algebra/mxalgebra.v","date":"2018-11-29T11:05:41Z","comment":"```\r\nArguments eqmx {F m1%N m2%N n%N} A%MS B%MS.\r\n```"},{"author":"ggonthier","file":"mathcomp/algebra/mxalgebra.v","date":"2018-11-29T11:06:55Z","comment":"```\r\nArguments ltmx {F m1%N m2%N n%N} A%MS B%MS.\r\n```"},{"author":"ggonthier","file":"mathcomp/algebra/mxalgebra.v","date":"2018-11-29T11:07:10Z","comment":"```\r\nArguments submx {F m1%N m2%N n%N} A%MS B%MS : rename.\r\n```"},{"author":"ggonthier","file":"mathcomp/algebra/mxalgebra.v","date":"2018-11-29T11:08:49Z","comment":"```\r\nArguments eqmx {m1%N m2%N n%N} A%MS B%MS.\r\n```"},{"author":"ggonthier","file":"mathcomp/algebra/mxalgebra.v","date":"2018-11-29T11:13:31Z","comment":"```\r\nArguments mulsmx {m1%N m2%N n%N} R1%MS R2%MS.\r\n```"},{"author":"ggonthier","file":"mathcomp/algebra/mxalgebra.v","date":"2018-11-29T11:14:00Z","comment":"```\r\nArguments has_mxring_id {F m%N n%N} R%MS.\r\n```\r\nThe declaration was clearly wrong: `has_mxring_id R` cannot coerce to a function."},{"author":"ggonthier","file":"mathcomp/algebra/mxalgebra.v","date":"2018-11-29T11:14:33Z","comment":"```\r\nArguments mxring {F m%N n%N} R%MS.\r\n```"},{"author":"ggonthier","file":"mathcomp/algebra/mxalgebra.v","date":"2018-11-29T11:14:48Z","comment":"```\r\nArguments cent_mx {F m%N n%N} R%MS.\r\n```"},{"author":"ggonthier","file":"mathcomp/algebra/mxalgebra.v","date":"2018-11-29T11:15:03Z","comment":"```\r\nArguments center_mx {F m%N n%N} R%MS.\r\n```"},{"author":"ggonthier","file":"mathcomp/algebra/mxalgebra.v","date":"2018-11-29T11:17:06Z","comment":"```\r\nArguments mxring_id {F m%N n%N} R%MS e%R.\r\n```\r\nThese were the correct names but the wrong scopes; the header documentation should also be corrected as it inverts `e` and `R`."},{"author":"ggonthier","file":"mathcomp/algebra/poly.v","date":"2018-11-29T11:17:33Z","comment":"```\r\nArguments polyseq {R} p%R.\r\n```"},{"author":"ggonthier","file":"mathcomp/algebra/poly.v","date":"2018-11-29T11:18:14Z","comment":"```\r\nArguments coefp_head {R} h i%N p%R.\r\n```"},{"author":"ggonthier","file":"mathcomp/algebra/poly.v","date":"2018-11-29T11:20:57Z","comment":"```\r\nArguments poly_inj {R} [p1%R p2%R] x : rename.\r\n```\r\nThe ring parameter should be a maximal implicit, since injectivity lemmas are sometimes passed as arguments. The following two arguments should remain on-demand implicits, as it's the quantified lemma that needs to be passed around! Also, they are polynomials and should be named accordingly."},{"author":"ggonthier","file":"mathcomp/algebra/ssralg.v","date":"2018-11-29T11:26:23Z","comment":"```\r\nArguments Add {R} t1%T t2%T.\r\n```\r\nNon-proof arguments should always be documented; here you can look to usage in `ssralg` for guidance (e.g., `eval` and `holds`)."},{"author":"ggonthier","file":"mathcomp/algebra/ssralg.v","date":"2018-11-29T11:26:54Z","comment":"```\r\nArguments Opp {R} t1%T.\r\n```"},{"author":"ggonthier","file":"mathcomp/algebra/ssralg.v","date":"2018-11-29T11:27:20Z","comment":"```\r\nArguments NatMul {R} t1%T n%N.\r\n```"},{"author":"ggonthier","file":"mathcomp/algebra/ssralg.v","date":"2018-11-29T11:27:35Z","comment":"```\r\nArguments Mul {R} t1%T t2%T.\r\n```"},{"author":"ggonthier","file":"mathcomp/algebra/ssralg.v","date":"2018-11-29T11:27:51Z","comment":"```\r\nArguments Inv {R} t1%T.\r\n```"},{"author":"ggonthier","file":"mathcomp/algebra/ssralg.v","date":"2018-11-29T11:28:09Z","comment":"```\r\nArguments Exp {R} t1%T n%N.\r\n```"},{"author":"ggonthier","file":"mathcomp/algebra/ssralg.v","date":"2018-11-29T11:28:44Z","comment":"```\r\nArguments Equal {R} t1%T t2%T.\r\n```"},{"author":"ggonthier","file":"mathcomp/algebra/ssralg.v","date":"2018-11-29T11:29:25Z","comment":"```\r\nArguments Unit {R} t1%T.\r\n```"},{"author":"ggonthier","file":"mathcomp/algebra/ssralg.v","date":"2018-11-29T11:29:43Z","comment":"```\r\nArguments And {R} f1%T f2%T.\r\n```"},{"author":"ggonthier","file":"mathcomp/algebra/ssralg.v","date":"2018-11-29T11:29:59Z","comment":"```\r\nArguments Or {R} f1%T f2%T.\r\n```"},{"author":"ggonthier","file":"mathcomp/algebra/ssralg.v","date":"2018-11-29T11:30:13Z","comment":"```\r\nArguments Implies {R} f1%T f2%T.\r\n```"},{"author":"ggonthier","file":"mathcomp/algebra/ssralg.v","date":"2018-11-29T11:30:28Z","comment":"```\r\nArguments Not {R} f1%T.\r\n```"},{"author":"ggonthier","file":"mathcomp/algebra/ssralg.v","date":"2018-11-29T11:30:47Z","comment":"```\r\nArguments Exists {R} i%N f1%T.\r\n```"},{"author":"ggonthier","file":"mathcomp/algebra/ssralg.v","date":"2018-11-29T11:31:03Z","comment":"```\r\nArguments Forall {R} i%N f1%T.\r\n```"},{"author":"ggonthier","file":"mathcomp/algebra/ssralg.v","date":"2018-11-29T11:31:46Z","comment":"```\r\nArguments Bool {R} b.\r\n```\r\nDocument all arguments."},{"author":"ggonthier","file":"mathcomp/algebra/ssralg.v","date":"2018-11-29T11:32:23Z","comment":"```\r\nArguments Const {R} x.\r\n```"},{"author":"ggonthier","file":"mathcomp/algebra/vector.v","date":"2018-11-29T11:35:47Z","comment":"```\r\nArguments mx2vs {K vT m%N} A%MS.\r\n```\r\nAlthough this is undocumented, on-demand implicits behave just as maximal ones - so it's best to clarify things in an `Arguments` command."},{"author":"ggonthier","file":"mathcomp/character/character.v","date":"2018-11-29T11:36:16Z","comment":"```\r\nArguments pred_Nirr {gT} B%g.\r\n```"},{"author":"ggonthier","file":"mathcomp/character/character.v","date":"2018-11-29T11:41:31Z","comment":"```\r\nArguments socle_of_Iirr {gT G%G} i%R.\r\n```\r\nThe declaration was wrong as it forgot about the `gT` argument."},{"author":"ggonthier","file":"mathcomp/character/character.v","date":"2018-11-29T11:42:00Z","comment":"```\r\nArguments irr {gT} B%g.\r\n```"},{"author":"ggonthier","file":"mathcomp/character/character.v","date":"2018-11-29T11:42:13Z","comment":"```\r\nArguments cfReg {gT} B%g.\r\n```"},{"author":"ggonthier","file":"mathcomp/character/character.v","date":"2018-11-29T11:42:38Z","comment":"```\r\nArguments character_table {gT} G%g.\r\n```"},{"author":"ggonthier","file":"mathcomp/character/character.v","date":"2018-11-29T11:42:55Z","comment":"```\r\nArguments irr_constt {gT B%g} phi%CF.\r\n```"},{"author":"ggonthier","file":"mathcomp/character/character.v","date":"2018-11-29T11:43:21Z","comment":"```\r\nArguments Res_Iirr {gT A%g} B%g i%R.\r\n```"},{"author":"ggonthier","file":"mathcomp/character/character.v","date":"2018-11-29T11:44:17Z","comment":"```\r\nArguments Ind_Iirr {gT A%g} B%g i%R.\r\n\r\n```\r\nAlso correct the missing end-of-line at the end of the file."},{"author":"ggonthier","file":"mathcomp/character/classfun.v","date":"2018-11-29T11:44:58Z","comment":"```\r\nArguments classfun {gT} B%g.\r\n```"},{"author":"ggonthier","file":"mathcomp/character/classfun.v","date":"2018-11-29T11:45:37Z","comment":"```\r\nArguments classfun_on {gT} B%g A%g.\r\n```"},{"author":"ggonthier","file":"mathcomp/character/classfun.v","date":"2018-11-29T11:45:52Z","comment":"```\r\nArguments cfun_indicator {gT} B%g.\r\n```"},{"author":"ggonthier","file":"mathcomp/character/classfun.v","date":"2018-11-29T11:46:54Z","comment":"```\r\nArguments cfReal {gT B%g} phi%CF.\r\n```"},{"author":"ggonthier","file":"mathcomp/character/classfun.v","date":"2018-11-29T11:47:10Z","comment":"```\r\nArguments cfdot {gT B%g} phi%CF psi%CF.\r\n```"},{"author":"ggonthier","file":"mathcomp/character/classfun.v","date":"2018-11-29T11:52:53Z","comment":"```\r\nArguments cfdotr_head {gT B%g} k psi%CF phi%CF.\r\n```\r\nWe could also get rid of the `cfdotr_head` definition / `cfdot` notation pair, using a `cfdot` definition with an `Arguments cfdotr {gT B%g} psi%CF phi%CF /` declaration instead. However, since this is a coding pattern used throughout MathComp, this would be perhaps best done in a separate PR."},{"author":"ggonthier","file":"mathcomp/character/classfun.v","date":"2018-11-29T11:54:04Z","comment":"This is redundant and should be deleted."},{"author":"ggonthier","file":"mathcomp/character/classfun.v","date":"2018-11-29T11:54:29Z","comment":"```\r\nArguments cfker {gT D%g} phi%CF.\r\n```"},{"author":"ggonthier","file":"mathcomp/character/classfun.v","date":"2018-11-29T11:54:42Z","comment":"```\r\nArguments cfaithful {gT D%g} phi%CF.\r\n```"},{"author":"ggonthier","file":"mathcomp/character/classfun.v","date":"2018-11-29T11:55:00Z","comment":"```\r\nArguments orthogonal {gT D%g} S1%CF S2%CF.\r\n```"},{"author":"ggonthier","file":"mathcomp/character/classfun.v","date":"2018-11-29T11:55:20Z","comment":"```\r\nArguments pairwise_orthogonal {gT D%g} S%CF.\r\n```"},{"author":"ggonthier","file":"mathcomp/character/classfun.v","date":"2018-11-29T11:55:43Z","comment":"```\r\nArguments orthonormal {gT D%g} S%CF.\r\n```"},{"author":"ggonthier","file":"mathcomp/character/classfun.v","date":"2018-11-29T11:56:53Z","comment":"```\r\nArguments isometry {gT rT D%g R%g} tau%CF.\r\n```"},{"author":"ggonthier","file":"mathcomp/character/classfun.v","date":"2018-11-29T11:57:09Z","comment":"```\r\nArguments classfun_on {gT} B%g A%g.\r\n```"},{"author":"ggonthier","file":"mathcomp/character/classfun.v","date":"2018-11-29T12:00:55Z","comment":"```\r\nArguments cfRes {gT} A%g {B%g} phi%CF.\r\n```\r\nEven though the implicits are not prenex, they should be maximal here. It may be necessary to adjust use of `cfRes` in the rest of MathComp and `odd-order`."},{"author":"ggonthier","file":"mathcomp/character/classfun.v","date":"2018-11-29T12:05:11Z","comment":"```\r\nArguments cfQuo {gT G%G} B%g phi%CF.\r\n```"},{"author":"ggonthier","file":"mathcomp/character/classfun.v","date":"2018-11-29T12:06:53Z","comment":"```\r\nArguments cfInd {gT} B%g {A%g} phi%CF.\r\n```\r\nSee comment on `cfRes`: this is better, but some updating of the rest of MathComp/`odd-order` may be necessary."},{"author":"ggonthier","file":"mathcomp/character/inertia.v","date":"2018-11-29T12:07:08Z","comment":"```\r\nArguments inertia {gT B%g} phi%CF.\r\n```"},{"author":"ggonthier","file":"mathcomp/character/inertia.v","date":"2018-11-29T12:07:27Z","comment":"```\r\nArguments cfclass {gT A%g} phi%CF B%g.\r\n```"},{"author":"ggonthier","file":"mathcomp/character/integral_char.v","date":"2018-11-29T12:10:37Z","comment":"```\r\nArguments gring_irr_mode {gT G%G} i%R g%g : extra scopes.\r\n```\r\nIt's better to document an extra argument name here because the `%g` scope is used both for group elements and group subsets (and it's the former here)."},{"author":"ggonthier","file":"mathcomp/character/mxabelem.v","date":"2018-11-29T12:11:10Z","comment":"```\r\nArguments rowg_mx {F n%N} L%g.\r\n```"},{"author":"ggonthier","file":"mathcomp/character/mxabelem.v","date":"2018-11-29T12:11:34Z","comment":"```\r\nArguments abelem_dim' {gT} E%g.\r\n```"},{"author":"ggonthier","file":"mathcomp/character/mxrepresentation.v","date":"2018-11-29T12:12:38Z","comment":"```\r\nArguments mx_representation R {gT} G%g n%N.\r\n```"},{"author":"ggonthier","file":"mathcomp/character/mxrepresentation.v","date":"2018-11-29T12:13:22Z","comment":"```\r\nArguments mx_repr {R gT} G%g {n%N} r.\r\n```"},{"author":"ggonthier","file":"mathcomp/character/mxrepresentation.v","date":"2018-11-29T12:13:36Z","comment":"```\r\nArguments group_ring R {gT} G%g.\r\n```"},{"author":"ggonthier","file":"mathcomp/character/mxrepresentation.v","date":"2018-11-29T12:13:48Z","comment":"```\r\nArguments regular_repr R {gT} G%g.\r\n```"},{"author":"ggonthier","file":"mathcomp/character/mxrepresentation.v","date":"2018-11-29T12:14:07Z","comment":"```\r\nArguments rfix_mx {F gT G%g n%N} rG H%g.\r\n```"},{"author":"ggonthier","file":"mathcomp/character/mxrepresentation.v","date":"2018-11-29T12:14:32Z","comment":"```\r\nArguments gset_mx F {gT} G%g A%g.\r\n```"},{"author":"ggonthier","file":"mathcomp/character/mxrepresentation.v","date":"2018-11-29T12:14:48Z","comment":"```\r\nArguments classg_base F {gT} G%g _%g : extra scopes.\r\n```"},{"author":"ggonthier","file":"mathcomp/character/mxrepresentation.v","date":"2018-11-29T12:29:53Z","comment":"```\r\nArguments irrType F {gT} G%g _%g : extra scopes.\r\n```\r\nI have some doubts about the final `_%g` annotation: an `irrType` `S` can indeed be coerced to a function, namely the always-true predicate on `socle_sort S`, which is not linked to any specific scope.\r\nThis is probably a misguided parallel with `irr_repr` below, which does coerce to a function on group elements (namely, a linear representation)."},{"author":"ggonthier","file":"mathcomp/character/mxrepresentation.v","date":"2018-11-29T12:30:14Z","comment":"```\r\nArguments irr_degree {F gT G%G sG} i%irr.\r\n```"},{"author":"ggonthier","file":"mathcomp/field/closed_field.v","date":"2018-11-29T12:38:54Z","comment":"I think these should also get maximal implicits, but since this is @CohenCyril 's code, I'll let him decide."},{"author":"ggonthier","file":"mathcomp/field/falgebra.v","date":"2018-11-29T12:39:55Z","comment":"```\r\nArguments asval {K aT} a%AS.\r\n```"},{"author":"ggonthier","file":"mathcomp/fingroup/action.v","date":"2018-11-29T12:40:35Z","comment":"```\r\nArguments act_morph {aT rT%type} to x%g.\r\n```\r\nThe annotations was wrong because it assumed the group set `D` was a parameter of this predicate."},{"author":"ggonthier","file":"mathcomp/fingroup/action.v","date":"2018-11-29T12:41:03Z","comment":"```\r\nArguments is_action {aT} D%g {rT} to.\r\n```"},{"author":"ggonthier","file":"mathcomp/fingroup/action.v","date":"2018-11-29T12:42:16Z","comment":"```\r\nArguments act {aT D%g rT%type} a%act x%g a%g.\r\n```\r\nNames reflect that the first argument is in the acted-on set (it is given group scope because much of the library is concerned about groups acting on other groups)."},{"author":"ggonthier","file":"mathcomp/fingroup/action.v","date":"2018-11-29T12:47:48Z","comment":"```\r\nArguments setact {aT D%g rT} to%act S%g a%g.\r\n```"},{"author":"ggonthier","file":"mathcomp/fingroup/action.v","date":"2018-11-29T12:54:06Z","comment":"```\r\nArguments orbit {aT D%g rT} to%act A%g x%g.\r\n```"},{"author":"ggonthier","file":"mathcomp/fingroup/action.v","date":"2018-11-29T12:54:26Z","comment":"```\r\nArguments amove {aT D%g rT} to%act A%g x%g y%g.\r\n```"},{"author":"ggonthier","file":"mathcomp/fingroup/action.v","date":"2018-11-29T12:54:56Z","comment":"```\r\nArguments afix {aT D%g rT} to%act A%g.\r\n```\r\n"},{"author":"ggonthier","file":"mathcomp/fingroup/action.v","date":"2018-11-29T12:55:11Z","comment":"```\r\nArguments astab {aT D%g rT} S%g to%act.\r\n```"},{"author":"ggonthier","file":"mathcomp/fingroup/action.v","date":"2018-11-29T12:55:25Z","comment":"```\r\nArguments astabs {aT D%g rT} S%g to%act.\r\n```"},{"author":"ggonthier","file":"mathcomp/fingroup/action.v","date":"2018-11-29T12:55:42Z","comment":"```\r\nArguments acts_on {aT D%g rT} A%g S%g to%act.\r\n```"},{"author":"ggonthier","file":"mathcomp/fingroup/action.v","date":"2018-11-29T12:55:58Z","comment":"```\r\nArguments atrans {aT D%g rT} A%g S%g to%act.\r\n```"},{"author":"ggonthier","file":"mathcomp/fingroup/action.v","date":"2018-11-29T12:56:13Z","comment":"```\r\nArguments faithful {aT D%g rT} A%g S%g to%act.\r\n```"},{"author":"ggonthier","file":"mathcomp/fingroup/action.v","date":"2018-11-29T12:56:30Z","comment":"```\r\nArguments orbit_transversal {aT D%g rT} to%act A%g S%g.\r\n```"},{"author":"ggonthier","file":"mathcomp/fingroup/action.v","date":"2018-11-29T12:56:47Z","comment":"```\r\nArguments Aut_in {gT} A%g B%g.\r\n```"},{"author":"ggonthier","file":"mathcomp/fingroup/action.v","date":"2018-11-29T12:57:05Z","comment":"```\r\nArguments is_groupAction {aT rT D%g} R%g to%act.\r\n```"},{"author":"ggonthier","file":"mathcomp/fingroup/action.v","date":"2018-11-29T12:57:19Z","comment":"```\r\nArguments groupAction {aT rT} D%g R%g.\r\n```"},{"author":"ggonthier","file":"mathcomp/fingroup/action.v","date":"2018-11-29T12:57:32Z","comment":"```\r\nArguments gact {aT rT D%g R%g} g%gact.\r\n```"},{"author":"ggonthier","file":"mathcomp/fingroup/action.v","date":"2018-11-29T12:57:50Z","comment":"```\r\nArguments gacent {aT rT D%g R%g} to%gact A%g.\r\n```"},{"author":"ggonthier","file":"mathcomp/fingroup/action.v","date":"2018-11-29T12:58:05Z","comment":"```\r\nArguments acts_on_group {aT rT D%g R%g} A%g S%g to%gact.\r\n```"},{"author":"ggonthier","file":"mathcomp/fingroup/action.v","date":"2018-11-29T12:58:24Z","comment":"```\r\nArguments acts_irreducibly {aT rT D%g R%g} A%g S%g to%gact.\r\n```"},{"author":"ggonthier","file":"mathcomp/fingroup/action.v","date":"2018-11-29T12:58:46Z","comment":"```\r\nArguments aut_action {gT} G%g.\r\n```"},{"author":"ggonthier","file":"mathcomp/fingroup/action.v","date":"2018-11-29T12:59:02Z","comment":"```\r\nArguments aut_groupAction {gT} G%g.\r\n```"},{"author":"ggonthier","file":"mathcomp/solvable/abelian.v","date":"2018-11-29T12:59:23Z","comment":"```\r\nArguments exponent {gT} A%g.\r\n```"},{"author":"ggonthier","file":"mathcomp/solvable/abelian.v","date":"2018-11-29T12:59:39Z","comment":"```\r\nArguments abelem {gT} p%N A%g.\r\n```"},{"author":"ggonthier","file":"mathcomp/solvable/abelian.v","date":"2018-11-29T12:59:53Z","comment":"```\r\nArguments is_abelem {gT} A%g.\r\n```"},{"author":"ggonthier","file":"mathcomp/solvable/abelian.v","date":"2018-11-29T13:00:06Z","comment":"```\r\nArguments pElem {gT} p%N A%g.\r\n```"},{"author":"ggonthier","file":"mathcomp/solvable/abelian.v","date":"2018-11-29T13:00:22Z","comment":"```\r\nArguments pnElem {gT} p%N n%N A%g.\r\n```"},{"author":"ggonthier","file":"mathcomp/solvable/abelian.v","date":"2018-11-29T13:00:42Z","comment":"```\r\nArguments nElem {gT} n%N A%g.\r\n```"},{"author":"ggonthier","file":"mathcomp/solvable/abelian.v","date":"2018-11-29T13:01:00Z","comment":"```\r\nArguments pmaxElem {gT} p%N A%g.\r\n```"},{"author":"ggonthier","file":"mathcomp/solvable/abelian.v","date":"2018-11-29T13:01:13Z","comment":"```\r\nArguments p_rank {gT} p%N A%g.\r\n```"},{"author":"ggonthier","file":"mathcomp/solvable/abelian.v","date":"2018-11-29T13:01:39Z","comment":"```\r\nArguments rank {gT} A%g.\r\n```"},{"author":"ggonthier","file":"mathcomp/solvable/abelian.v","date":"2018-11-29T13:01:51Z","comment":"```\r\nArguments gen_rank {gT} A%g.\r\n```"},{"author":"ggonthier","file":"mathcomp/solvable/abelian.v","date":"2018-11-29T13:02:07Z","comment":"```\r\nArguments Ohm n%N {gT} A%g.\r\n```"},{"author":"ggonthier","file":"mathcomp/solvable/abelian.v","date":"2018-11-29T13:02:23Z","comment":"```\r\nArguments Ohm_group n%N {gT} A%g.\r\n```"},{"author":"ggonthier","file":"mathcomp/solvable/abelian.v","date":"2018-11-29T13:02:35Z","comment":"```\r\nArguments Mho n%N {gT} A%g.\r\n```"},{"author":"ggonthier","file":"mathcomp/solvable/abelian.v","date":"2018-11-29T13:02:56Z","comment":"```\r\nArguments Mho_group n%N {gT} A%g.\r\n```"},{"author":"ggonthier","file":"mathcomp/solvable/center.v","date":"2018-11-29T13:03:16Z","comment":"```\r\nArguments center {gT} A%g.\r\n```"},{"author":"ggonthier","file":"mathcomp/solvable/commutator.v","date":"2018-11-29T13:03:36Z","comment":"```\r\nArguments derived_at n%N {gT} A%g.\r\n```"},{"author":"ggonthier","file":"mathcomp/solvable/frobenius.v","date":"2018-11-29T13:04:02Z","comment":"```\r\nArguments semiregular {gT} K%g H%g.\r\n```"},{"author":"ggonthier","file":"mathcomp/solvable/frobenius.v","date":"2018-11-29T13:04:22Z","comment":"```\r\nArguments semiprime {gT} K%g H%g.\r\n```"},{"author":"ggonthier","file":"mathcomp/solvable/frobenius.v","date":"2018-11-29T13:04:34Z","comment":"```\r\nArguments normedTI {gT} A%g G%g L%g.\r\n```"},{"author":"ggonthier","file":"mathcomp/solvable/frobenius.v","date":"2018-11-29T13:04:46Z","comment":"```\r\nArguments Frobenius_group_with_complement {gT} G%g H%g.\r\n```"},{"author":"ggonthier","file":"mathcomp/solvable/frobenius.v","date":"2018-11-29T13:04:59Z","comment":"```\r\nArguments Frobenius_group {gT} G%g.\r\n```"},{"author":"ggonthier","file":"mathcomp/solvable/frobenius.v","date":"2018-11-29T13:05:11Z","comment":"```\r\nArguments Frobenius_group_with_kernel {gT} G%g K%g.\r\n```"},{"author":"ggonthier","file":"mathcomp/solvable/frobenius.v","date":"2018-11-29T13:05:24Z","comment":"```\r\nArguments Frobenius_group_with_kernel_and_complement {gT} G%g K%g H%g.\r\n```"},{"author":"ggonthier","file":"mathcomp/solvable/frobenius.v","date":"2018-11-29T13:05:44Z","comment":"```\r\nArguments Frobenius_action {gT} G%g H%g {sT} S%g to%act.\r\n```"},{"author":"ggonthier","file":"mathcomp/solvable/frobenius.v","date":"2018-11-29T13:05:58Z","comment":"```\r\nArguments has_Frobenius_action {gT} G%g H%g.\r\n```"},{"author":"ggonthier","file":"mathcomp/solvable/gseries.v","date":"2018-11-29T13:08:21Z","comment":"```\r\nArguments invariant_factor {gT} A%g B%g C%g.\r\n```"},{"author":"ggonthier","file":"mathcomp/solvable/gseries.v","date":"2018-11-29T13:08:31Z","comment":"```\r\nArguments invariant_factor {gT} A%g B%g C%g.\r\n```"},{"author":"ggonthier","file":"mathcomp/solvable/gseries.v","date":"2018-11-29T13:08:46Z","comment":"```\r\nArguments stable_factor {gT} A%g V%g U%g.\r\n```"},{"author":"ggonthier","file":"mathcomp/solvable/gseries.v","date":"2018-11-29T13:09:08Z","comment":"```\r\nArguments central_factor {gT} A%g V%g U%g.\r\n```"},{"author":"ggonthier","file":"mathcomp/solvable/gseries.v","date":"2018-11-29T13:09:22Z","comment":"```\r\nArguments maximal_eq {gT} A%g B%g.\r\n```"},{"author":"ggonthier","file":"mathcomp/solvable/gseries.v","date":"2018-11-29T13:09:38Z","comment":"```\r\nArguments maxnormal {gT} A%g B%g U%g.\r\n```"},{"author":"ggonthier","file":"mathcomp/solvable/gseries.v","date":"2018-11-29T13:09:51Z","comment":"```\r\nArguments minnormal {gT} A%g B%g.\r\n```"},{"author":"ggonthier","file":"mathcomp/solvable/gseries.v","date":"2018-11-29T13:10:15Z","comment":"```\r\nArguments chief_factor {gT} A%g V%g U%g.\r\n```"},{"author":"CohenCyril","file":"mathcomp/algebra/mxalgebra.v","date":"2018-11-29T13:10:42Z","comment":"These look like automatically generated name. It would be nice to take the opportunity of your refactoring to rename them with the right conventions... here `m`, `n` and `p`."},{"author":"ggonthier","file":"mathcomp/solvable/gseries.v","date":"2018-11-29T13:10:46Z","comment":"```\r\nArguments group_rel_of {gT} r%group_rel_scope _%G _%G : extra scopes.\r\n```"},{"author":"ggonthier","file":"mathcomp/solvable/jordanholder.v","date":"2018-11-29T13:11:48Z","comment":"```\r\nArguments maxainv {aT rT D%G A%G} to%gact B%g C%g.\r\n```"},{"author":"ggonthier","file":"mathcomp/solvable/jordanholder.v","date":"2018-11-29T13:12:37Z","comment":"```\r\nArguments asimple {aT rT D%G A%G} to%gact K%g.\r\n```"},{"author":"ggonthier","file":"mathcomp/solvable/maximal.v","date":"2018-11-29T13:13:10Z","comment":"```\r\nArguments charsimple {gT} A%g.\r\n```"},{"author":"ggonthier","file":"mathcomp/solvable/maximal.v","date":"2018-11-29T13:13:23Z","comment":"```\r\nArguments Frattini {gT} A%g.\r\n```"},{"author":"ggonthier","file":"mathcomp/solvable/maximal.v","date":"2018-11-29T13:13:36Z","comment":"```\r\nArguments Fitting {gT} A%g.\r\n```"},{"author":"ggonthier","file":"mathcomp/solvable/maximal.v","date":"2018-11-29T13:13:50Z","comment":"```\r\nArguments critical {gT} A%g B%g.\r\n```"},{"author":"ggonthier","file":"mathcomp/solvable/maximal.v","date":"2018-11-29T13:14:01Z","comment":"```\r\nArguments special {gT} A%g.\r\n```"},{"author":"ggonthier","file":"mathcomp/solvable/maximal.v","date":"2018-11-29T13:14:26Z","comment":"```\r\nArguments extraspecial {gT} A%g.\r\n```"},{"author":"ggonthier","file":"mathcomp/solvable/maximal.v","date":"2018-11-29T13:14:38Z","comment":"```\r\nArguments SCN {gT} B%g.\r\n```"},{"author":"ggonthier","file":"mathcomp/solvable/maximal.v","date":"2018-11-29T13:14:52Z","comment":"```\r\nArguments SCN_at {gT} n%N B%g.\r\n```"},{"author":"ggonthier","file":"mathcomp/solvable/nilpotent.v","date":"2018-11-29T13:15:07Z","comment":"```\r\nArguments lower_central_at n%N {gT} A%g.\r\n```"},{"author":"ggonthier","file":"mathcomp/solvable/nilpotent.v","date":"2018-11-29T13:15:22Z","comment":"```\r\nArguments upper_central_at n%N {gT} A%g.\r\n```"},{"author":"ggonthier","file":"mathcomp/solvable/pgroup.v","date":"2018-11-29T13:15:41Z","comment":"```\r\nArguments psubgroup {gT} pi%N A%g B%g.\r\n```"},{"author":"ggonthier","file":"mathcomp/solvable/pgroup.v","date":"2018-11-29T13:15:55Z","comment":"```\r\nArguments p_group {gT} A%g.\r\n```"},{"author":"ggonthier","file":"mathcomp/solvable/pgroup.v","date":"2018-11-29T13:16:08Z","comment":"```\r\nArguments p_elt {gT} pi%N x.\r\n```"},{"author":"ggonthier","file":"mathcomp/solvable/pgroup.v","date":"2018-11-29T13:16:27Z","comment":"```\r\nArguments constt {gT} x%g pi%N.\r\n```"},{"author":"ggonthier","file":"mathcomp/solvable/pgroup.v","date":"2018-11-29T13:16:54Z","comment":"```\r\nArguments pHall {gT} pi%N A%g B%g.\r\n```"},{"author":"ggonthier","file":"mathcomp/solvable/pgroup.v","date":"2018-11-29T13:17:09Z","comment":"```\r\nArguments Syl {gT} p%N A%g.\r\n```"},{"author":"ggonthier","file":"mathcomp/solvable/pgroup.v","date":"2018-11-29T13:17:26Z","comment":"```\r\nArguments pcore pi%N {gT} A%g.\r\n```"},{"author":"ggonthier","file":"mathcomp/solvable/pgroup.v","date":"2018-11-29T13:17:40Z","comment":"```\r\nArguments pcore_group pi%N {gT} A%G.\r\n```"},{"author":"ggonthier","file":"mathcomp/solvable/pgroup.v","date":"2018-11-29T13:18:55Z","comment":"```\r\nArguments pseries pis%SEQ {gT} _%g.\r\n```"},{"author":"ggonthier","file":"mathcomp/solvable/primitive_action.v","date":"2018-11-29T13:19:44Z","comment":"```\r\nArguments imprimitivity_system {aT sT} A%g S%g to%act Q%g.\r\n```"},{"author":"ggonthier","file":"mathcomp/solvable/primitive_action.v","date":"2018-11-29T13:20:01Z","comment":"```\r\nArguments primitive {aT sT} A%g S%g to%act.\r\n```"},{"author":"ggonthier","file":"mathcomp/solvable/primitive_action.v","date":"2018-11-29T13:20:19Z","comment":"```\r\nArguments dtuple_on {sT} n%N S%g.\r\n```"},{"author":"ggonthier","file":"mathcomp/solvable/primitive_action.v","date":"2018-11-29T13:20:36Z","comment":"```\r\nArguments ntransitive {gT sT} n%N A%g S%g to%act.\r\n```"},{"author":"ggonthier","file":"mathcomp/solvable/primitive_action.v","date":"2018-11-29T13:20:55Z","comment":"```\r\nArguments n_act {gT sT} to {n} t a.\r\n```"},{"author":"ggonthier","file":"mathcomp/ssreflect/eqtype.v","date":"2018-11-29T13:21:17Z","comment":"```\r\nArguments app_fdelta {aT rT%type} df%FUN_DELTA f z.\r\n```"},{"author":"CohenCyril","file":"mathcomp/algebra/mxalgebra.v","date":"2018-11-29T13:36:24Z","comment":"Or maybe `m1`, `m2` and `n` would be even more meaningful in this particular instance... "},{"author":"anton-trunov","file":"mathcomp/algebra/mxalgebra.v","date":"2018-11-29T13:46:12Z","comment":"@CohenCyril Done! I tried to be least invasive, however I'm fine with changing names, so feel free to propose, it's not hard to rename a few things :)"},{"author":"CohenCyril","file":"mathcomp/algebra/mxalgebra.v","date":"2018-11-29T14:11:50Z","comment":"Please rename"},{"author":"CohenCyril","file":"mathcomp/algebra/mxalgebra.v","date":"2018-11-29T14:11:56Z","comment":"Rename"},{"author":"CohenCyril","file":"mathcomp/algebra/mxalgebra.v","date":"2018-11-29T14:12:22Z","comment":"rename `x`s to `m`, `n`, `p`..."},{"author":"CohenCyril","file":"mathcomp/algebra/poly.v","date":"2018-11-29T14:14:02Z","comment":"rename `x1`, `x2` to `p` and `q`."},{"author":"anton-trunov","file":"mathcomp/algebra/mxalgebra.v","date":"2018-11-29T15:42:53Z","comment":"Done. I renamed into `m1`, `m2`, `n` to make it uniform with the rest of the declarations. I hope it's ok."},{"author":"anton-trunov","file":"mathcomp/algebra/poly.v","date":"2018-11-29T15:43:05Z","comment":"Done."},{"author":"anton-trunov","file":"mathcomp/algebra/mxalgebra.v","date":"2018-11-30T10:05:54Z","comment":"I corrected the implicitness declaration and the scopes, but I see in the header this description\r\n```\r\n(*      mxring_id R e <-> e is an identity element for R (Prop predicate).   *)\r\n```\r\nand it seems to me the order is correct here. Am I missing something?"},{"author":"ggonthier","file":"mathcomp/algebra/mxalgebra.v","date":"2018-11-30T10:10:38Z","comment":"No, you are right, the order is correct - I didn't spot the scope inversion at first and then forgot to fix the reference to the header along with my comment."},{"author":"anton-trunov","file":"mathcomp/character/classfun.v","date":"2018-11-30T10:22:26Z","comment":"I opened issue #254 about this suggestion."},{"author":"anton-trunov","file":"mathcomp/character/mxrepresentation.v","date":"2018-11-30T10:32:31Z","comment":"I'm not that familiar with `character` library. I could put your comment into the file, if you'd like."},{"author":"ggonthier","file":"mathcomp/character/mxrepresentation.v","date":"2018-11-30T10:59:23Z","comment":"The `%g` is wrong, because `irrType F G` does not have a group structure - at best, its elements coerce to matrices, with a `%R` scope, and `irrType F G` could only be applied to its own elements, not their matrix coercions, so the `%R` wouldn't be useful anyway.\r\n  The most likely explanation is that this is a mistake - at some point there might have been another implicit group set argument to `irrType`, and that second `%g` was intended for `G`. I'd suggest deleting it, along with the `extra scopes` tag."},{"author":"anton-trunov","file":"mathcomp/fingroup/action.v","date":"2018-11-30T11:02:51Z","comment":"`a%g` should be changed into something else to avoid a name clash with `a%act`. Can we change it into\r\n```\r\nArguments act {aT D%g rT%type} a%act x%g y%g.\r\n```\r\n?"},{"author":"ggonthier","file":"mathcomp/fingroup/action.v","date":"2018-11-30T11:12:43Z","comment":"Actually, you should change the `a%act` to `to%act` instead. If you look at the header and file, `to` is the conventional name for abstract actions, and `a` and `b` the conventional names for elements in an acting group; the `a` here was automatically inserted by the `Record` macro."},{"author":"anton-trunov","file":"mathcomp/character/integral_char.v","date":"2018-11-30T11:31:26Z","comment":"With `g%g` I get\r\n\r\n> Error: Extra notation scopes can be set on anonymous and explicit arguments only.\r\n"},{"author":"ggonthier","file":"mathcomp/character/integral_char.v","date":"2018-11-30T11:41:09Z","comment":"My bad - just ignore the naming suggestion (but to keep the maximal implicits). Maybe that could be a Coq wish for @gares ? I understand the named arguments syntax `(arg := value)` can't be used for extra arguments, but, as this example shows, names do have documentary value as well."},{"author":"gares","file":"mathcomp/character/integral_char.v","date":"2018-11-30T13:21:44Z","comment":"We could relax the check, ignoring the given name. The last cleanup of the `Arguments` \"macro\" was performed by @maximedenes , especially the error messages that are now more understandable. Maxime do you think the check could be easily relaxed?\r\n\r\nAs an alternative solution, you can use the scope name rather than the scope delimiter there. I guess that the full scope name would make the sentence non ambiguous (out of the context of open scopes)."},{"author":"anton-trunov","file":"mathcomp/character/integral_char.v","date":"2018-11-30T13:33:14Z","comment":"@gares Do you mean something like this?\r\n\r\n```coq\r\nArguments gring_irr_mode {gT G%G} i%R _%group_scope : extra scopes.\r\n```"},{"author":"ggonthier","file":"mathcomp/character/integral_char.v","date":"2018-11-30T13:39:24Z","comment":"Using the full scope name wouldn't help here, as `group_scope` is used for both group elements and group sets.\r\n  Ideally, you should drop the check _and_ allow the named syntax for extra args. There's no reason to trust blindly that the static approximation of the arity of a constant is correct. In addition to coercions to `fun_class` there could also be common choices of some of the dependent parameters that increase the arity (e.g., if the return type is a parameter). It's all right to have an `extra scopes` tag (`extra arguments` might be a better name) in order to catch errors (this PR actually uncovered a few in the MathComp library), but Coq should otherwise obey the user code."},{"author":"maximedenes","file":"mathcomp/character/integral_char.v","date":"2018-11-30T13:40:50Z","comment":"Here you are: https://github.com/coq/coq/pull/9117\r\n\r\nI think accepting names there is fine."},{"author":"CohenCyril","file":"mathcomp/character/classfun.v","date":"2018-11-30T16:46:05Z","comment":"Waiting for the issue about `_head` is adressed, I would like maximal implicits here too"},{"author":"ggonthier","file":"mathcomp/algebra/mxalgebra.v","date":"2018-11-30T17:09:13Z","comment":"The `rename`s here should be redundant, given the previous `Arguments` declarations."},{"author":"ggonthier","file":"mathcomp/algebra/mxalgebra.v","date":"2018-11-30T17:15:16Z","comment":"It should be `A%R`: `genmx A` (notation `<<A>>`) is the (canonical representative of the) row space of `A`, so it expects a matrix constructed with arithmetic operations."},{"author":"ggonthier","file":"mathcomp/algebra/mxalgebra.v","date":"2018-11-30T17:16:04Z","comment":"Still missing a few maximal implicits here..."},{"author":"ggonthier","file":"mathcomp/algebra/poly.v","date":"2018-11-30T17:19:15Z","comment":"This should be `Arguments poly_inj {R} [p1%R p2%R] _ : rename.`\r\n(see my comment on the previous version). The parallel names `p1`, `p2` are more consistent with the symmetry of the injectivity predicate."},{"author":"anton-trunov","file":"mathcomp/algebra/mxalgebra.v","date":"2018-11-30T18:39:41Z","comment":"I thought so too, but if I skip the `rename`s, compilation fails."},{"author":"anton-trunov","file":"mathcomp/algebra/mxalgebra.v","date":"2018-11-30T18:45:09Z","comment":"Sorry, I missed those."},{"author":"anton-trunov","file":"mathcomp/algebra/poly.v","date":"2018-11-30T19:05:54Z","comment":"We have a bunch of `Arguments` declarations for `_inj` lemmas and most of them use `[x1 x2]` (see below).\r\nShould we do something about that?\r\n```\r\nmathcomp/fingroup/quotient.v:753:Arguments qisom_inj [gT G H].\r\nmathcomp/fingroup/quotient.v:754:Arguments morphim_qisom_inj [gT G H].\r\nmathcomp/fingroup/perm.v:131:Arguments perm_inj : clear implicits.\r\nmathcomp/fingroup/fingroup.v:496:Arguments invg_inj {T}.\r\nmathcomp/fingroup/fingroup.v:646:Arguments conjg_inj [T].\r\nmathcomp/character/classfun.v:1623:Arguments cfIsom_inj [aT rT G f R] isoGR [x1 x2].\r\nmathcomp/character/classfun.v:2490:Arguments cfAut_inj u [gT G x1 x2].\r\nmathcomp/character/inertia.v:572:Arguments conjg_Iirr_inj [gT H] y [x1 x2].\r\nmathcomp/character/character.v:821:Arguments irr_inj {gT G} [x1 x2].\r\nmathcomp/character/character.v:1873:Arguments isom_Iirr_inj [aT rT G f R] isoGR [x1 x2].\r\nmathcomp/character/character.v:1941:Arguments sdprod_Iirr_inj [gT K H G] defG [x1 x2].\r\nmathcomp/character/character.v:2092:Arguments dprod_Iirr_inj [gT G K H] KxH [x1 x2].\r\nmathcomp/character/character.v:2260:Arguments aut_Iirr_inj [gT G] u [x1 x2].\r\nmathcomp/character/mxrepresentation.v:2380:Arguments val_submod_inj {n U m}.\r\nmathcomp/character/mxrepresentation.v:2381:Arguments val_factmod_inj {n U m}.\r\nmathcomp/character/mxrepresentation.v:4674:Arguments val_submod_inj {F n U m}.\r\nmathcomp/character/mxrepresentation.v:4675:Arguments val_factmod_inj {F n U m}.\r\nmathcomp/field/algebraics_fundamentals.v:263:Arguments map_poly_inj {F R} f [x1 x2].\r\nmathcomp/fingroup/action.v:288:Arguments act_inj : clear implicits.\r\nmathcomp/fingroup/action.v:487:Arguments act_inj {aT D rT} to _ [x1 x2].\r\nmathcomp/ssreflect/eqtype.v:606:Arguments val_inj {T P sT}.\r\nmathcomp/ssreflect/finset.v:958:Arguments set1_inj {T}.\r\nmathcomp/ssreflect/fintype.v:1763:Arguments enum_val_inj {T A} [x1 x2].\r\nmathcomp/ssreflect/fintype.v:1764:Arguments enum_rank_inj {T} [x1 x2].\r\nmathcomp/ssreflect/bigop.v:1389:Arguments reindex_inj [I h P F].\r\nmathcomp/ssreflect/bigop.v:1512:Arguments reindex_inj [R idx op I h P F].\r\nmathcomp/algebra/poly.v:150:Arguments poly_inj {R} [p1%R p2%R] _ : rename.\r\nmathcomp/algebra/poly.v:2433:Arguments map_poly_inj {F R} f [p1 p2] : rename.\r\nmathcomp/algebra/ssralg.v:864:Arguments oppr_inj {V} [x1 x2].\r\nmathcomp/algebra/ssralg.v:3022:Arguments invr_inj {R} [x1 x2].\r\nmathcomp/algebra/ssralg.v:4798:Arguments fmorph_inj {F R} f [x1 x2].\r\nmathcomp/algebra/ssralg.v:5359:Arguments oppr_inj {V} [x1 x2].\r\nmathcomp/algebra/ssralg.v:5543:Arguments invr_inj {R} [x1 x2].\r\nmathcomp/algebra/ssralg.v:5706:Arguments fmorph_inj {F R} f [x1 x2].\r\nmathcomp/algebra/vector.v:1946:Arguments subvs_inj {K vT U} [x1 x2].\r\nmathcomp/algebra/ssrint.v:980:Arguments intr_inj {R} [x1 x2].\r\nmathcomp/algebra/ssrnum.v:3143:Arguments signr_inj {R} [x1 x2].\r\n```"},{"author":"CohenCyril","file":"mathcomp/field/closed_field.v","date":"2018-11-30T20:15:00Z","comment":"I agree: let's go maximal."},{"author":"anton-trunov","file":"mathcomp/field/closed_field.v","date":"2018-11-30T21:00:07Z","comment":"Done."},{"author":"ggonthier","file":"mathcomp/algebra/poly.v","date":"2018-12-03T10:28:58Z","comment":"The `x1 x2` names are not a problem for most of these, as `x` is a conventional variable name for an arbitrary member of a set, ring, or group. Also, beware that the `_inj` may indicate that a lemma has an injectivity _premise_ rather than conclusion, for example `reindex_inj`. \r\n    But, if you want, you can update the `Arguments` of all the injectivity lemmas to document all argument names, scopes, and implicitness. I do note that some of these have the wrong maximal status: implicit arguments before the two arguments to the injectivity property should be maximal, e.g., `cfAut_inj u {gT G} [phi1 phi2]`. Look to the headers to see what the conventional names should be."},{"author":"anton-trunov","file":"mathcomp/algebra/poly.v","date":"2018-12-03T13:31:33Z","comment":"I pushed a new commit trying to address your comment. I hope I didn't introduce any new bugs. Let me try documenting scopes and implicitness as a new PR, because navigating through this  one becomes a bit less manageable due to a large number of comments."},{"author":"ggonthier","file":"mathcomp/algebra/poly.v","date":"2018-12-03T13:43:52Z","comment":"Agreed - there are still a few renames you could do (`irr` indices should be `i1 i2`, etc.), but the conversation will be easier to manage in a followup PR. "},{"author":"anton-trunov","file":"mathcomp/algebra/poly.v","date":"2018-12-03T13:56:12Z","comment":"Thanks! I fixed `Iirr` arguments, btw. I'll squash the commits soon."},{"author":"ggonthier","file":"mathcomp/algebra/poly.v","date":"2018-12-03T14:08:50Z","comment":"Great! If you want to finish everything right now, there aren't that many outstanding renames:\r\n  - `phi1 phi2` for `cfIsom_inj` (class functions)\r\n  - `a1 a2` for `act_inj` (acting group elements)\r\n  - `i1 i2` for `enum_val_inj` (ordinal indices)\r\n  - `x1 x2` for `set1_inj` (the arguments are elements, not sets, as `set1 : forall T, T -> {set T}`"},{"author":"anton-trunov","file":"mathcomp/algebra/poly.v","date":"2018-12-03T14:17:37Z","comment":"Fixed. Sorry about `set1_inj` -- maybe I should concentrate on one part of the library at a time, because switching contexts makes me make silly mistakes like this one."},{"author":"ggonthier","file":"mathcomp/algebra/poly.v","date":"2018-12-04T09:39:52Z","comment":"For the sake of consistency, it's probably best to omit the trailing `_` (corresponding to the `poly p1 = poly p2` premise of the `injective` property), since it doesn't appear in the `Arguments` declaration for other such lemmas."},{"author":"ggonthier","file":"mathcomp/character/integral_char.v","date":"2018-12-04T09:54:59Z","comment":"The extra argument should be `x%g`: `gring_irr_mode i` is a `'CF(G)` (a class function on `G`), which coerces to a `G -> algC` function."},{"author":"ggonthier","file":"mathcomp/character/mxrepresentation.v","date":"2018-12-04T09:56:49Z","comment":"`gT` should be a maximal implicit."},{"author":"ggonthier","file":"mathcomp/character/mxrepresentation.v","date":"2018-12-04T10:04:48Z","comment":"The extra arg of `irr_repr` should be `x%g`. As `irr_repr i` is a representation, which coerces to a `gT -> 'M_(irr_degree i)` function. "},{"author":"ggonthier","file":"mathcomp/character/mxrepresentation.v","date":"2018-12-04T10:05:47Z","comment":"The extra arg of `irr_mode` should be `z%g`, as per the header documentation."},{"author":"ggonthier","file":"mathcomp/fingroup/action.v","date":"2018-12-04T10:12:41Z","comment":"The last two arguments of `act` should be `x%g a%g`: the first is an element of the acted-on type (which is often a `finGroupType`, although not necessarily so), while the second is an element of the acting `finGroupType`."},{"author":"ggonthier","file":"mathcomp/fingroup/action.v","date":"2018-12-04T10:18:02Z","comment":"The on-demand arguments of `act_inj` should be `[x1 x2]`, as they are elements of the acted_on type, rather than the acting group; the `rename` tag is then probably unnecessary.\r\nThe comment on lines 485-86 is outdated and should be deleted; it applied to the `Arguments Scope` command (the dependency of `Arguments` is well-documented and can be controlled with the `rename` tag)."},{"author":"ggonthier","file":"mathcomp/fingroup/action.v","date":"2018-12-04T10:23:56Z","comment":"The last arguments of `gact` should be `to%gact`, as it is an action, not a group element."},{"author":"ggonthier","file":"mathcomp/solvable/frobenius.v","date":"2018-12-04T10:26:56Z","comment":"For consistency, `sT` should also be maximal (no big impact as `Frobenius_action` is never partially applied)."},{"author":"ggonthier","file":"mathcomp/ssreflect/finset.v","date":"2018-12-04T10:32:31Z","comment":"Arguments should be `{T} A%SET`, documenting implicits and the name of `A : {set T}`."},{"author":"anton-trunov","file":"mathcomp/algebra/poly.v","date":"2018-12-04T11:12:48Z","comment":"Thank you for spotting this."},{"author":"anton-trunov","file":"mathcomp/character/integral_char.v","date":"2018-12-04T11:13:16Z","comment":"Unfortunately, for  \r\n```coq\r\nArguments gring_irr_mode {gT G%G} i%R x%group_scope : extra scopes.\r\n```\r\nI get\r\n> Error: Extra notation scopes can be set on anonymous and explicit arguments only.\r\n\r\nIt seems this is going to be fixed in `master` branch of Coq, but this change will break compilation for the current supported Coq versions."},{"author":"anton-trunov","file":"mathcomp/character/mxrepresentation.v","date":"2018-12-04T11:22:02Z","comment":"Fixed. I might be wrong, but shouldn't `burnside_formula`'s `gT` be made maximal implicit as well?\r\n\r\nI found it (and several others) using `Arguments .*\\[.*gT.*]` regexp:\r\n```\r\nmathcomp/fingroup/fingroup.v:674:Arguments mem_repr [gT A].\r\nmathcomp/fingroup/fingroup.v:1862:Arguments mulGidPl [gT G H].\r\nmathcomp/fingroup/fingroup.v:1863:Arguments mulGidPr [gT G H].\r\nmathcomp/character/mxrepresentation.v:4663:Arguments mx_Maschke [F gT G n] rG _ [U].\r\nmathcomp/character/mxrepresentation.v:4669:Arguments socle_exists [F gT G n].\r\nmathcomp/character/mxrepresentation.v:4682:Arguments irr_repr [F gT G%G sG] i%irr _%g : extra scopes.\r\nmathcomp/character/mxrepresentation.v:4683:Arguments irr_mode [F gT G%G sG] i%irr _%g : extra scopes.\r\nmathcomp/solvable/burnside_app.v:29:Arguments burnside_formula [gT].\r\n```"},{"author":"anton-trunov","file":"mathcomp/character/mxrepresentation.v","date":"2018-12-04T11:24:17Z","comment":"Here I get the same error as with `gring_irr_mode`."},{"author":"ggonthier","file":"mathcomp/character/integral_char.v","date":"2018-12-04T11:25:27Z","comment":"Yes you're right - it somehow slipped my mind, even though we just went of this... well I guess it's now somewhere for future reference..."},{"author":"anton-trunov","file":"mathcomp/character/mxrepresentation.v","date":"2018-12-04T11:25:32Z","comment":"Fixed with\r\n```coq\r\nArguments irr_mode [F gT G%G sG] i%irr z%g : rename, extra scopes.\r\n```"},{"author":"ggonthier","file":"mathcomp/character/mxrepresentation.v","date":"2018-12-04T11:26:35Z","comment":"Yes it should (though, strictly speaking, `burnside_app` is more an application than a library module)."},{"author":"anton-trunov","file":"mathcomp/fingroup/action.v","date":"2018-12-04T11:26:59Z","comment":"Fixed."},{"author":"anton-trunov","file":"mathcomp/fingroup/action.v","date":"2018-12-04T11:27:42Z","comment":"Fixed."},{"author":"anton-trunov","file":"mathcomp/fingroup/action.v","date":"2018-12-04T11:30:05Z","comment":"Fixed."},{"author":"anton-trunov","file":"mathcomp/solvable/frobenius.v","date":"2018-12-04T11:30:11Z","comment":"Fixed."},{"author":"ggonthier","file":"mathcomp/character/mxrepresentation.v","date":"2018-12-04T11:30:18Z","comment":"Since you didn't get the \"named extra argument\" error, the `extra scopes` tag is most likely redundant."},{"author":"anton-trunov","file":"mathcomp/ssreflect/finset.v","date":"2018-12-04T11:30:46Z","comment":"Fixed."},{"author":"ggonthier","file":"mathcomp/character/mxrepresentation.v","date":"2018-12-04T11:31:01Z","comment":"Sorry again - let's save this for later..."},{"author":"anton-trunov","file":"mathcomp/character/mxrepresentation.v","date":"2018-12-04T11:32:51Z","comment":"Changed to\r\n```coq\r\nArguments burnside_formula {gT}.\r\n```"},{"author":"anton-trunov","file":"mathcomp/character/mxrepresentation.v","date":"2018-12-04T11:35:38Z","comment":"Good catch! Fixed."}],"tags":[],"commits":[{"author":"anton-trunov","committer":"anton-trunov","hash":"8c82657e7692049dde4a4c44a2ea53d0c4fa7cb5","message":"Document parameter names whenever possible\n\nAs suggested by @ggonthier\n[here](https://github.com/math-comp/math-comp/pull/249#pullrequestreview-177938295)\n\n> One of the design ideas for the `Arguments` command was that it would allow\nto centralise the documentation of the application of constants.\nIn that spirit it would be in my opinion better to make as much use of this\nas possible, and to document the parameter names whenever possible,\nespecially that of implicit parameters.\n\nand\n[here](https://github.com/math-comp/math-comp/pull/253#discussion_r237434163):\n\n> As a general rule, defined functional constants should have maximal prenex\nimplicit arguments, as this facilitates their use as arguments to functionals,\nbecause this mimics the way function constants are treated in functional\nprogramming languages with Hindley-Milner type inference. Conversely, lemmas and\ntheorems should have on-demand implicit arguments, possibly interspersed with\nexplicit ones, as it's fairly common for other lemmas to have universally\nquantified premises; also, this makes it easier to specify such arguments with\nthe apply: tactic. This policy may be amended for lemmas that are used as\nfunctional arguments, such as reflection or cancellation lemmas. Unfortunately\nthere is currently no easy way to tell Coq to use different defaults for\ndefinitions and lemmas, so MathComp sticks to the on-demand default, as there\nare significantly more lemmas than definition, and use the Prenex Implicits to\nredress matters in bulk for definitions. However, this is not completely\nsystematic, and is sometimes omitted for constants that are not used as\nfunctional arguments in the library, or inside the sections in which the\ndefinition occur, since such commands need to be repeated after the section is\nclosed. Since Arguments commands should document the intended constant usage as\nbest as possible, they should follow the implicits policy - even in cases such\nas this where the Prenex Implicits had been skipped.","date":"2018-12-04T11:43:20Z"}]}