{"author":"ggonthier","number":345,"diff_summary":[{"file":"CHANGELOG.md","status":"M","additions":552,"deletions":265},{"file":"mathcomp/Make","status":"M","additions":552,"deletions":265},{"file":"mathcomp/_CoqProject","status":"M","additions":552,"deletions":265},{"file":"mathcomp/algebra/ssrnum.v","status":"M","additions":552,"deletions":265},{"file":"mathcomp/algebra/vector.v","status":"M","additions":552,"deletions":265},{"file":"mathcomp/character/classfun.v","status":"M","additions":552,"deletions":265},{"file":"mathcomp/character/inertia.v","status":"M","additions":552,"deletions":265},{"file":"mathcomp/character/vcharacter.v","status":"M","additions":552,"deletions":265},{"file":"mathcomp/field/algebraics_fundamentals.v","status":"M","additions":552,"deletions":265},{"file":"mathcomp/field/finfield.v","status":"M","additions":552,"deletions":265},{"file":"mathcomp/field/galois.v","status":"M","additions":552,"deletions":265},{"file":"mathcomp/fingroup/gproduct.v","status":"M","additions":552,"deletions":265},{"file":"mathcomp/fingroup/perm.v","status":"M","additions":552,"deletions":265},{"file":"mathcomp/solvable/abelian.v","status":"M","additions":552,"deletions":265},{"file":"mathcomp/solvable/extremal.v","status":"M","additions":552,"deletions":265},{"file":"mathcomp/solvable/jordanholder.v","status":"M","additions":552,"deletions":265},{"file":"mathcomp/ssreflect/bigop.v","status":"M","additions":552,"deletions":265},{"file":"mathcomp/ssreflect/path.v","status":"M","additions":552,"deletions":265},{"file":"mathcomp/ssreflect/prime.v","status":"M","additions":552,"deletions":265},{"file":"mathcomp/ssreflect/seq.v","status":"M","additions":552,"deletions":265},{"file":"mathcomp/ssreflect/ssreflect.v","status":"M","additions":552,"deletions":265}],"state":"merged","open_date":"2019-05-07T00:27:23Z","update_date":"2019-05-17T10:56:12Z","discussion":[{"author":"ggonthier","date":"2019-05-08T22:34:36Z","comment":"For the record: the latest (and hopefully last) CI failure appears to have a similar cause to the one discussed in #342, namely incomplete processing of unification constraints by the SSReflect plugin code; thus the problem may still be present in the current version of the code. Here it was solved by changing the `eq_big_perm` legacy notation from\r\n```\r\nNotation eq_big_perm :=\r\n  ((fun P F r2 => @perm_big _ _ _ _ _ r2 P F) _ _) (only parsing).\r\n```\r\nto\r\n```\r\nNotation eq_big_perm :=\r\n  ((fun R idx op I r1 P F r2 => @perm_big R idx op r1 r2 P F)\r\n           _    _   _   _  _ _ _) (only parsing).\r\n```\r\nwhich are nearly identical: the one difference is that the evars for the holes inside the `fun ... => ...` expression in the first version have additional `(P := nil)` and `(F := nil)` in their context, and\r\nperhaps this causes the unification algorithm to delay some constraints.\r\n"}],"review_discussion":[],"tags":[],"commits":[{"author":"ggonthier","committer":"ggonthier","hash":"5d7bd2ea2a0a28fb275da8ba2e2c0dc5a33d1034","message":"refactor `seq` permutation theory\n\n- Change the naming of permutation lemmas so they conform to a\nconsistent policy: `perm_eq` lemmas have a `perm_` (_not_ `perm_eq`)\nprefix, or sometimes a `_perm` suffix for lemmas that _prove_ `perm_eq`\nusing a property when there is also a lemma _using_ `perm_eq` for the\nsame property. Lemmas that do not concern `perm_eq` do _not_ have\n`perm` in their name.\n- Change the definition of `permutations` for a time- and space-\nback-to-front generation algorithm.\n- Add frequency tally operations `tally`, `incr_tally`, `wf_tally` and\n`tally_seq`, used by the improved `permutation` algorithm.\n- add deprecated aliases for renamed lemmas","date":"2019-05-17T07:04:50Z"}]}