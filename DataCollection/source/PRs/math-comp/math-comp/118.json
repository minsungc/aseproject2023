{"author":"maximedenes","number":118,"diff_summary":[{"file":"mathcomp/ssreflect/plugin/trunk/ssreflect.ml4","status":"M","additions":25,"deletions":38}],"state":"merged","open_date":"2017-04-03T11:23:46Z","update_date":"2017-04-03T13:17:33Z","discussion":[{"author":"gares","date":"2017-04-03T12:31:10Z","comment":"I've the impression mkCLetIn is dead code :-/\r\nSaid that it looks good to me.  \r\n\r\nJust in case @ggonthier has a minute to look at the patch: Coq's constr_expr for LetIn just got a place for the type of the expression being named. My understanding is that BFdef needs no more a boolean argument (lines 5328 , 5384 are the places where the change seem to benefit SSR).\r\n\r\n"},{"author":"gares","date":"2017-04-03T13:17:57Z","comment":"Merging now, the PR for Coq is going to be merged now..."}],"review_discussion":[],"tags":[],"commits":[{"author":"maximedenes","committer":"maximedenes","hash":"2cb863af37c56f01d3b96058ab83fc7f94a542a8","message":"Adapt the ssr plugin to Coq's PR#417.\n\nLet-ins in constrexpr and glob_constr now take an optional type, instead\nof relying on a cast in the body.","date":"2017-04-03T09:16:34Z"}]}