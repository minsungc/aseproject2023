{"author":"proux01","number":919,"diff_summary":[{"file":"CHANGELOG_UNRELEASED.md","status":"M","additions":16,"deletions":4},{"file":"mathcomp/algebra/ssrint.v","status":"M","additions":16,"deletions":4}],"state":"merged","open_date":"2022-09-06T08:31:01Z","update_date":"2022-10-02T11:40:42Z","discussion":[{"author":"amahboubi","date":"2022-09-06T09:05:51Z","comment":"(approval up to ci validation)\r\n"},{"author":"proux01","date":"2022-09-06T15:03:18Z","comment":"CI seems reasonnably green (the two failures on master come from the recent merge of  https://github.com/coq/coq/pull/16004 )"},{"author":"proux01","date":"2022-09-08T14:01:53Z","comment":"CI green, does this deserve a CHANGELOG entry?"},{"author":"CohenCyril","date":"2022-09-12T15:16:37Z","comment":"> CI green, does this deserve a CHANGELOG entry?\r\n\r\nIt would be good, yes"},{"author":"proux01","date":"2022-09-13T08:01:13Z","comment":"done"},{"author":"CohenCyril","date":"2022-10-02T11:40:29Z","comment":"CI failure seems unrelated"},{"author":"proux01","date":"2022-10-04T15:46:19Z","comment":"> CI failure seems unrelated\r\n\r\nIndeed, it's due to https://github.com/math-comp/multinomials/pull/63 not being merged yet.\r\n"}],"review_discussion":[{"author":"CohenCyril","file":"mathcomp/algebra/ssrint.v","date":"2022-09-30T20:55:03Z","comment":"Nitpicking, but the conventions are `n` and `m`\r\n```suggestion\r\nNotation \"n = m :> 'int'\"  := (@eq int n%Z m%Z) (only parsing)  : ring_scope.\r\nNotation \"n = m :> 'int'\"  := (Posz n = Posz m) (only printing)  : ring_scope.\r\nNotation \"n == m :> 'int'\" := ((n%Z : int) == (m%Z : int)) (only parsing)\r\n  : ring_scope.\r\nNotation \"n == m :> 'int'\" := (Posz n == Posz m) (only printing) : ring_scope.\r\nNotation \"n != m :> 'int'\" := ((n%Z : int) != (m%Z : int)) (only parsing)\r\n  : ring_scope.\r\nNotation \"n != m :> 'int'\" := (Posz n != Posz m) (only printing) : ring_scope.\r\nNotation \"n <> m :> 'int'\" := (not (@eq int n%Z m%Z)) (only parsing)\r\n  : ring_scope.\r\n```"}],"tags":[],"commits":[{"author":"proux01","committer":"proux01","hash":"f5dc7aedfc3bef2f99158dde769ec05bb8129ddf","message":"Add parsing notations for _ = _ :> int and the like\n\nThis way `2 = 1 :> int` is parsed as `2%Z = 1%Z` and not `2%R = 1%R`\n(that is `Posz 2 = Posz 1` (matching the already existing printing only\nrule for `_ = _ :> int`) and not `intmul GRIng.one 2 = GRing.one`).\nThis should enable to retrieve the parsing behavior of `_ = _ :> int`\nbefore the introduction of the number notation in ring_scope.","date":"2022-10-01T06:26:57Z"}]}